function popupclickfunction(){return!$(".content").hasClass("content_fixed")&&($(".close-pop-up-b").slideDown(),topscrollpopup=$(document).scrollTop(),$(".content").addClass("content_fixed"),$(".content").css("top",-topscrollpopup),$("body").scrollTop(0),void $(".content-hover").fadeIn())}function popupclickclosefunction(){return!!$(".content").hasClass("content_fixed")&&($(".close-pop-up-b").slideUp(),$(".nav").removeClass("nav_open"),$(".content").removeClass("content_no"),$(".nav__item-link-text").fadeOut(),$(".popups").children().fadeOut(),void setTimeout(function(){$(".content").removeClass("content_fixed"),$(".content").css("top","0"),$(document).scrollTop(topscrollpopup),$(".content-hover").fadeOut()},500))}function showMenu(){$(".nav").addClass("nav_open"),$(".content").addClass("content_no"),$(".nav__item-link-text").fadeIn(),popupclickfunction()}function openQuestion(){popupclickfunction(),$("#questions").fadeIn()}function openOrder(){popupclickfunction(),$("#questions").fadeIn()}function checkajaxpage(){function t(t){if("string"==typeof t&&window.location.pathname==t&&(e=!0),"object"==typeof t||"array"==typeof t)for(n=0;n<t.length;n++)window.location.pathname==t[n]&&(e=!0)}if(!arguments)return!1;for(var e=!1,n=0;n<arguments.length;n++)if(t(arguments[n]),1==e)return!0;return!1}function fullpageload(){if(checkajaxpage(pages.indexpage)?$(".content-ajax-wrapper").css("height","100%"):$(".content-ajax-wrapper").css("height","auto"),checkajaxpage(pages.services)&&$(".row_services").owlCarousel({margin:0,responsiveClass:!0,responsive:{0:{items:1,nav:!0,loop:!0},768:{items:3,nav:!1,loop:!1}}}),checkajaxpage(pages.contextadvpage)){var t=document.getElementById("chart").getContext("2d");new Chart(t,{type:"doughnut",data:{labels:["Yandex","Google"],datasets:[{data:[60,40],borderColor:"#333",borderWidth:"6",backgroundColor:["#27AE60","#EB5757"]}]},options:{title:{display:!0}}})}if(checkajaxpage(pages.advpage)){var t=document.getElementById("chart").getContext("2d");new Chart(t,{type:"doughnut",data:{labels:["Contextual ads","Blogs and Vlogs ads","CPA Networks","Social networks"],datasets:[{data:[50,10,18,15],borderColor:"#333",borderWidth:"6",backgroundColor:["#27AE60","#EB5757","#F2C94C","#2D9CDB"]}]},options:{title:{display:!0,borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)","rgba(75, 192, 192, 1)"]}}})}}function sayBob(t){$(".helper__said").remove(),$(".helper__dialog").append('<div class="helper__said"></div>'),$(".helper__said").empty().shuffleLetters({text:t})}function nextStepBob(t){var e=bob[t],n=e[0];n()}function closeBob(){return $(".helper").toggleClass("close"),$(".footer").toggleClass("close"),$(".helper__close").toggleClass("close"),!$(this).hasClass("clicked")&&($(this).addClass("clicked"),void nextStepBob(0))}function getCookie(t){for(var e=t+"=",n=document.cookie.split(";"),i=0;i<n.length;i++){for(var r=n[i];" "==r.charAt(0);)r=r.substring(1);if(0==r.indexOf(e))return r.substring(e.length,r.length)}return""}!function(t,e){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(t,e){"use strict";function n(t,e,n){e=e||at;var i,r=e.createElement("script");if(r.text=t,n)for(i in xt)n[i]&&(r[i]=n[i]);e.head.appendChild(r).parentNode.removeChild(r)}function i(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?dt[ft.call(t)]||"object":typeof t}function r(t){var e=!!t&&"length"in t&&t.length,n=i(t);return!yt(t)&&!bt(t)&&("array"===n||0===e||"number"==typeof e&&e>0&&e-1 in t)}function o(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}function a(t,e,n){return yt(e)?wt.grep(t,function(t,i){return!!e.call(t,i,t)!==n}):e.nodeType?wt.grep(t,function(t){return t===e!==n}):"string"!=typeof e?wt.grep(t,function(t){return ht.call(e,t)>-1!==n}):wt.filter(e,t,n)}function s(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}function l(t){var e={};return wt.each(t.match(Et)||[],function(t,n){e[n]=!0}),e}function u(t){return t}function c(t){throw t}function h(t,e,n,i){var r;try{t&&yt(r=t.promise)?r.call(t).done(e).fail(n):t&&yt(r=t.then)?r.call(t,e,n):e.apply(void 0,[t].slice(i))}catch(t){n.apply(void 0,[t])}}function d(){at.removeEventListener("DOMContentLoaded",d),t.removeEventListener("load",d),wt.ready()}function f(t,e){return e.toUpperCase()}function p(t){return t.replace(zt,"ms-").replace(Wt,f)}function g(){this.expando=wt.expando+g.uid++}function m(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:Bt.test(t)?JSON.parse(t):t)}function v(t,e,n){var i;if(void 0===n&&1===t.nodeType)if(i="data-"+e.replace($t,"-$&").toLowerCase(),n=t.getAttribute(i),"string"==typeof n){try{n=m(n)}catch(r){}Yt.set(t,e,n)}else n=void 0;return n}function y(t,e,n,i){var r,o,a=20,s=i?function(){return i.cur()}:function(){return wt.css(t,e,"")},l=s(),u=n&&n[3]||(wt.cssNumber[e]?"":"px"),c=(wt.cssNumber[e]||"px"!==u&&+l)&&qt.exec(wt.css(t,e));if(c&&c[3]!==u){for(l/=2,u=u||c[3],c=+l||1;a--;)wt.style(t,e,c+u),(1-o)*(1-(o=s()/l||.5))<=0&&(a=0),c/=o;c=2*c,wt.style(t,e,c+u),n=n||[]}return n&&(c=+c||+l||0,r=n[1]?c+(n[1]+1)*n[2]:+n[2],i&&(i.unit=u,i.start=c,i.end=r)),r}function b(t){var e,n=t.ownerDocument,i=t.nodeName,r=Xt[i];return r?r:(e=n.body.appendChild(n.createElement(i)),r=wt.css(e,"display"),e.parentNode.removeChild(e),"none"===r&&(r="block"),Xt[i]=r,r)}function x(t,e){for(var n,i,r=[],o=0,a=t.length;o<a;o++)i=t[o],i.style&&(n=i.style.display,e?("none"===n&&(r[o]=jt.get(i,"display")||null,r[o]||(i.style.display="")),""===i.style.display&&Gt(i)&&(r[o]=b(i))):"none"!==n&&(r[o]="none",jt.set(i,"display",n)));for(o=0;o<a;o++)null!=r[o]&&(t[o].style.display=r[o]);return t}function _(t,e){var n;return n="undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e||"*"):"undefined"!=typeof t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&o(t,e)?wt.merge([t],n):n}function w(t,e){for(var n=0,i=t.length;n<i;n++)jt.set(t[n],"globalEval",!e||jt.get(e[n],"globalEval"))}function k(t,e,n,r,o){for(var a,s,l,u,c,h,d=e.createDocumentFragment(),f=[],p=0,g=t.length;p<g;p++)if(a=t[p],a||0===a)if("object"===i(a))wt.merge(f,a.nodeType?[a]:a);else if(ee.test(a)){for(s=s||d.appendChild(e.createElement("div")),l=(Jt.exec(a)||["",""])[1].toLowerCase(),u=te[l]||te._default,s.innerHTML=u[1]+wt.htmlPrefilter(a)+u[2],h=u[0];h--;)s=s.lastChild;wt.merge(f,s.childNodes),s=d.firstChild,s.textContent=""}else f.push(e.createTextNode(a));for(d.textContent="",p=0;a=f[p++];)if(r&&wt.inArray(a,r)>-1)o&&o.push(a);else if(c=wt.contains(a.ownerDocument,a),s=_(d.appendChild(a),"script"),c&&w(s),n)for(h=0;a=s[h++];)Kt.test(a.type||"")&&n.push(a);return d}function M(){return!0}function S(){return!1}function C(){try{return at.activeElement}catch(t){}}function D(t,e,n,i,r,o){var a,s;if("object"==typeof e){"string"!=typeof n&&(i=i||n,n=void 0);for(s in e)D(t,s,n,i,e[s],o);return t}if(null==i&&null==r?(r=n,i=n=void 0):null==r&&("string"==typeof n?(r=i,i=void 0):(r=i,i=n,n=void 0)),r===!1)r=S;else if(!r)return t;return 1===o&&(a=r,r=function(t){return wt().off(t),a.apply(this,arguments)},r.guid=a.guid||(a.guid=wt.guid++)),t.each(function(){wt.event.add(this,e,r,i,n)})}function T(t,e){return o(t,"table")&&o(11!==e.nodeType?e:e.firstChild,"tr")?wt(t).children("tbody")[0]||t:t}function P(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function A(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function O(t,e){var n,i,r,o,a,s,l,u;if(1===e.nodeType){if(jt.hasData(t)&&(o=jt.access(t),a=jt.set(e,o),u=o.events)){delete a.handle,a.events={};for(r in u)for(n=0,i=u[r].length;n<i;n++)wt.event.add(e,r,u[r][n])}Yt.hasData(t)&&(s=Yt.access(t),l=wt.extend({},s),Yt.set(e,l))}}function I(t,e){var n=e.nodeName.toLowerCase();"input"===n&&Qt.test(t.type)?e.checked=t.checked:"input"!==n&&"textarea"!==n||(e.defaultValue=t.defaultValue)}function L(t,e,i,r){e=ut.apply([],e);var o,a,s,l,u,c,h=0,d=t.length,f=d-1,p=e[0],g=yt(p);if(g||d>1&&"string"==typeof p&&!vt.checkClone&&le.test(p))return t.each(function(n){var o=t.eq(n);g&&(e[0]=p.call(this,n,o.html())),L(o,e,i,r)});if(d&&(o=k(e,t[0].ownerDocument,!1,t,r),a=o.firstChild,1===o.childNodes.length&&(o=a),a||r)){for(s=wt.map(_(o,"script"),P),l=s.length;h<d;h++)u=o,h!==f&&(u=wt.clone(u,!0,!0),l&&wt.merge(s,_(u,"script"))),i.call(t[h],u,h);if(l)for(c=s[s.length-1].ownerDocument,wt.map(s,A),h=0;h<l;h++)u=s[h],Kt.test(u.type||"")&&!jt.access(u,"globalEval")&&wt.contains(c,u)&&(u.src&&"module"!==(u.type||"").toLowerCase()?wt._evalUrl&&wt._evalUrl(u.src):n(u.textContent.replace(ue,""),c,u))}return t}function E(t,e,n){for(var i,r=e?wt.filter(e,t):t,o=0;null!=(i=r[o]);o++)n||1!==i.nodeType||wt.cleanData(_(i)),i.parentNode&&(n&&wt.contains(i.ownerDocument,i)&&w(_(i,"script")),i.parentNode.removeChild(i));return t}function F(t,e,n){var i,r,o,a,s=t.style;return n=n||he(t),n&&(a=n.getPropertyValue(e)||n[e],""!==a||wt.contains(t.ownerDocument,t)||(a=wt.style(t,e)),!vt.pixelBoxStyles()&&ce.test(a)&&de.test(e)&&(i=s.width,r=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=i,s.minWidth=r,s.maxWidth=o)),void 0!==a?a+"":a}function N(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function R(t){if(t in ye)return t;for(var e=t[0].toUpperCase()+t.slice(1),n=ve.length;n--;)if(t=ve[n]+e,t in ye)return t}function z(t){var e=wt.cssProps[t];return e||(e=wt.cssProps[t]=R(t)||t),e}function W(t,e,n){var i=qt.exec(e);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):e}function H(t,e,n,i,r,o){var a="width"===e?1:0,s=0,l=0;if(n===(i?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(l+=wt.css(t,n+Ut[a],!0,r)),i?("content"===n&&(l-=wt.css(t,"padding"+Ut[a],!0,r)),"margin"!==n&&(l-=wt.css(t,"border"+Ut[a]+"Width",!0,r))):(l+=wt.css(t,"padding"+Ut[a],!0,r),"padding"!==n?l+=wt.css(t,"border"+Ut[a]+"Width",!0,r):s+=wt.css(t,"border"+Ut[a]+"Width",!0,r));return!i&&o>=0&&(l+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-o-l-s-.5))),l}function j(t,e,n){var i=he(t),r=F(t,e,i),o="border-box"===wt.css(t,"boxSizing",!1,i),a=o;if(ce.test(r)){if(!n)return r;r="auto"}return a=a&&(vt.boxSizingReliable()||r===t.style[e]),("auto"===r||!parseFloat(r)&&"inline"===wt.css(t,"display",!1,i))&&(r=t["offset"+e[0].toUpperCase()+e.slice(1)],a=!0),r=parseFloat(r)||0,r+H(t,e,n||(o?"border":"content"),a,i,r)+"px"}function Y(t,e,n,i,r){return new Y.prototype.init(t,e,n,i,r)}function B(){xe&&(at.hidden===!1&&t.requestAnimationFrame?t.requestAnimationFrame(B):t.setTimeout(B,wt.fx.interval),wt.fx.tick())}function $(){return t.setTimeout(function(){be=void 0}),be=Date.now()}function V(t,e){var n,i=0,r={height:t};for(e=e?1:0;i<4;i+=2-e)n=Ut[i],r["margin"+n]=r["padding"+n]=t;return e&&(r.opacity=r.width=t),r}function q(t,e,n){for(var i,r=(Z.tweeners[e]||[]).concat(Z.tweeners["*"]),o=0,a=r.length;o<a;o++)if(i=r[o].call(n,e,t))return i}function U(t,e,n){var i,r,o,a,s,l,u,c,h="width"in e||"height"in e,d=this,f={},p=t.style,g=t.nodeType&&Gt(t),m=jt.get(t,"fxshow");n.queue||(a=wt._queueHooks(t,"fx"),null==a.unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,d.always(function(){d.always(function(){a.unqueued--,wt.queue(t,"fx").length||a.empty.fire()})}));for(i in e)if(r=e[i],_e.test(r)){if(delete e[i],o=o||"toggle"===r,r===(g?"hide":"show")){if("show"!==r||!m||void 0===m[i])continue;g=!0}f[i]=m&&m[i]||wt.style(t,i)}if(l=!wt.isEmptyObject(e),l||!wt.isEmptyObject(f)){h&&1===t.nodeType&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],u=m&&m.display,null==u&&(u=jt.get(t,"display")),c=wt.css(t,"display"),"none"===c&&(u?c=u:(x([t],!0),u=t.style.display||u,c=wt.css(t,"display"),x([t]))),("inline"===c||"inline-block"===c&&null!=u)&&"none"===wt.css(t,"float")&&(l||(d.done(function(){p.display=u}),null==u&&(c=p.display,u="none"===c?"":c)),p.display="inline-block")),n.overflow&&(p.overflow="hidden",d.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]})),l=!1;for(i in f)l||(m?"hidden"in m&&(g=m.hidden):m=jt.access(t,"fxshow",{display:u}),o&&(m.hidden=!g),g&&x([t],!0),d.done(function(){g||x([t]),jt.remove(t,"fxshow");for(i in f)wt.style(t,i,f[i])})),l=q(g?m[i]:0,i,d),i in m||(m[i]=l.start,g&&(l.end=l.start,l.start=0))}}function G(t,e){var n,i,r,o,a;for(n in t)if(i=p(n),r=e[i],o=t[n],Array.isArray(o)&&(r=o[1],o=t[n]=o[0]),n!==i&&(t[i]=o,delete t[n]),a=wt.cssHooks[i],a&&"expand"in a){o=a.expand(o),delete t[i];for(n in o)n in t||(t[n]=o[n],e[n]=r)}else e[i]=r}function Z(t,e,n){var i,r,o=0,a=Z.prefilters.length,s=wt.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=be||$(),n=Math.max(0,u.startTime+u.duration-e),i=n/u.duration||0,o=1-i,a=0,l=u.tweens.length;a<l;a++)u.tweens[a].run(o);return s.notifyWith(t,[u,o,n]),o<1&&l?n:(l||s.notifyWith(t,[u,1,0]),s.resolveWith(t,[u]),!1)},u=s.promise({elem:t,props:wt.extend({},e),opts:wt.extend(!0,{specialEasing:{},easing:wt.easing._default},n),originalProperties:e,originalOptions:n,startTime:be||$(),duration:n.duration,tweens:[],createTween:function(e,n){var i=wt.Tween(t,u.opts,e,n,u.opts.specialEasing[e]||u.opts.easing);return u.tweens.push(i),i},stop:function(e){var n=0,i=e?u.tweens.length:0;if(r)return this;for(r=!0;n<i;n++)u.tweens[n].run(1);return e?(s.notifyWith(t,[u,1,0]),s.resolveWith(t,[u,e])):s.rejectWith(t,[u,e]),this}}),c=u.props;for(G(c,u.opts.specialEasing);o<a;o++)if(i=Z.prefilters[o].call(u,t,c,u.opts))return yt(i.stop)&&(wt._queueHooks(u.elem,u.opts.queue).stop=i.stop.bind(i)),i;return wt.map(c,q,u),yt(u.opts.start)&&u.opts.start.call(t,u),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always),wt.fx.timer(wt.extend(l,{elem:t,anim:u,queue:u.opts.queue})),u}function X(t){var e=t.match(Et)||[];return e.join(" ")}function Q(t){return t.getAttribute&&t.getAttribute("class")||""}function J(t){return Array.isArray(t)?t:"string"==typeof t?t.match(Et)||[]:[]}function K(t,e,n,r){var o;if(Array.isArray(e))wt.each(e,function(e,i){n||Le.test(t)?r(t,i):K(t+"["+("object"==typeof i&&null!=i?e:"")+"]",i,n,r)});else if(n||"object"!==i(e))r(t,e);else for(o in e)K(t+"["+o+"]",e[o],n,r)}function tt(t){return function(e,n){"string"!=typeof e&&(n=e,e="*");var i,r=0,o=e.toLowerCase().match(Et)||[];if(yt(n))for(;i=o[r++];)"+"===i[0]?(i=i.slice(1)||"*",(t[i]=t[i]||[]).unshift(n)):(t[i]=t[i]||[]).push(n)}}function et(t,e,n,i){function r(s){var l;return o[s]=!0,wt.each(t[s]||[],function(t,s){var u=s(e,n,i);return"string"!=typeof u||a||o[u]?a?!(l=u):void 0:(e.dataTypes.unshift(u),r(u),!1)}),l}var o={},a=t===Ve;return r(e.dataTypes[0])||!o["*"]&&r("*")}function nt(t,e){var n,i,r=wt.ajaxSettings.flatOptions||{};for(n in e)void 0!==e[n]&&((r[n]?t:i||(i={}))[n]=e[n]);return i&&wt.extend(!0,t,i),t}function it(t,e,n){for(var i,r,o,a,s=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=t.mimeType||e.getResponseHeader("Content-Type"));if(i)for(r in s)if(s[r]&&s[r].test(i)){l.unshift(r);break}if(l[0]in n)o=l[0];else{for(r in n){if(!l[0]||t.converters[r+" "+l[0]]){o=r;break}a||(a=r)}o=o||a}if(o)return o!==l[0]&&l.unshift(o),n[o]}function rt(t,e,n,i){var r,o,a,s,l,u={},c=t.dataTypes.slice();if(c[1])for(a in t.converters)u[a.toLowerCase()]=t.converters[a];for(o=c.shift();o;)if(t.responseFields[o]&&(n[t.responseFields[o]]=e),!l&&i&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(a=u[l+" "+o]||u["* "+o],!a)for(r in u)if(s=r.split(" "),s[1]===o&&(a=u[l+" "+s[0]]||u["* "+s[0]])){a===!0?a=u[r]:u[r]!==!0&&(o=s[0],c.unshift(s[1]));break}if(a!==!0)if(a&&t["throws"])e=a(e);else try{e=a(e)}catch(h){return{state:"parsererror",error:a?h:"No conversion from "+l+" to "+o}}}return{state:"success",data:e}}var ot=[],at=t.document,st=Object.getPrototypeOf,lt=ot.slice,ut=ot.concat,ct=ot.push,ht=ot.indexOf,dt={},ft=dt.toString,pt=dt.hasOwnProperty,gt=pt.toString,mt=gt.call(Object),vt={},yt=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType},bt=function(t){return null!=t&&t===t.window},xt={type:!0,src:!0,noModule:!0},_t="3.3.1",wt=function(t,e){return new wt.fn.init(t,e)},kt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;wt.fn=wt.prototype={jquery:_t,constructor:wt,length:0,toArray:function(){return lt.call(this)},get:function(t){return null==t?lt.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=wt.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return wt.each(this,t)},map:function(t){return this.pushStack(wt.map(this,function(e,n){return t.call(e,n,e)}))},slice:function(){return this.pushStack(lt.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,n=+t+(t<0?e:0);return this.pushStack(n>=0&&n<e?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:ct,sort:ot.sort,splice:ot.splice},wt.extend=wt.fn.extend=function(){var t,e,n,i,r,o,a=arguments[0]||{},s=1,l=arguments.length,u=!1;for("boolean"==typeof a&&(u=a,a=arguments[s]||{},s++),"object"==typeof a||yt(a)||(a={}),s===l&&(a=this,s--);s<l;s++)if(null!=(t=arguments[s]))for(e in t)n=a[e],i=t[e],a!==i&&(u&&i&&(wt.isPlainObject(i)||(r=Array.isArray(i)))?(r?(r=!1,o=n&&Array.isArray(n)?n:[]):o=n&&wt.isPlainObject(n)?n:{},a[e]=wt.extend(u,o,i)):void 0!==i&&(a[e]=i));return a},wt.extend({expando:"jQuery"+(_t+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,n;return!(!t||"[object Object]"!==ft.call(t))&&(!(e=st(t))||(n=pt.call(e,"constructor")&&e.constructor,"function"==typeof n&&gt.call(n)===mt))},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t){n(t)},each:function(t,e){var n,i=0;if(r(t))for(n=t.length;i<n&&e.call(t[i],i,t[i])!==!1;i++);else for(i in t)if(e.call(t[i],i,t[i])===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(kt,"")},makeArray:function(t,e){var n=e||[];return null!=t&&(r(Object(t))?wt.merge(n,"string"==typeof t?[t]:t):ct.call(n,t)),n},inArray:function(t,e,n){return null==e?-1:ht.call(e,t,n)},merge:function(t,e){for(var n=+e.length,i=0,r=t.length;i<n;i++)t[r++]=e[i];return t.length=r,t},grep:function(t,e,n){for(var i,r=[],o=0,a=t.length,s=!n;o<a;o++)i=!e(t[o],o),i!==s&&r.push(t[o]);return r},map:function(t,e,n){var i,o,a=0,s=[];if(r(t))for(i=t.length;a<i;a++)o=e(t[a],a,n),null!=o&&s.push(o);else for(a in t)o=e(t[a],a,n),null!=o&&s.push(o);return ut.apply([],s)},guid:1,support:vt}),"function"==typeof Symbol&&(wt.fn[Symbol.iterator]=ot[Symbol.iterator]),wt.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){dt["[object "+e+"]"]=e.toLowerCase()});var Mt=function(t){function e(t,e,n,i){var r,o,a,s,l,u,c,d=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!i&&((e?e.ownerDocument||e:j)!==L&&I(e),e=e||L,F)){if(11!==p&&(l=vt.exec(t)))if(r=l[1]){if(9===p){if(!(a=e.getElementById(r)))return n;if(a.id===r)return n.push(a),n}else if(d&&(a=d.getElementById(r))&&W(e,a)&&a.id===r)return n.push(a),n}else{if(l[2])return J.apply(n,e.getElementsByTagName(t)),n;if((r=l[3])&&w.getElementsByClassName&&e.getElementsByClassName)return J.apply(n,e.getElementsByClassName(r)),n}if(w.qsa&&!q[t+" "]&&(!N||!N.test(t))){if(1!==p)d=e,c=t;else if("object"!==e.nodeName.toLowerCase()){for((s=e.getAttribute("id"))?s=s.replace(_t,wt):e.setAttribute("id",s=H),u=C(t),o=u.length;o--;)u[o]="#"+s+" "+f(u[o]);c=u.join(","),d=yt.test(t)&&h(e.parentNode)||e}if(c)try{return J.apply(n,d.querySelectorAll(c)),n}catch(g){}finally{s===H&&e.removeAttribute("id")}}}return T(t.replace(st,"$1"),e,n,i)}function n(){function t(n,i){return e.push(n+" ")>k.cacheLength&&delete t[e.shift()],t[n+" "]=i}var e=[];return t}function i(t){return t[H]=!0,t}function r(t){var e=L.createElement("fieldset");try{return!!t(e)}catch(n){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function o(t,e){for(var n=t.split("|"),i=n.length;i--;)k.attrHandle[n[i]]=e}function a(t,e){var n=e&&t,i=n&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===e)return-1;return t?1:-1}function s(t){return function(e){var n=e.nodeName.toLowerCase();return"input"===n&&e.type===t}}function l(t){return function(e){var n=e.nodeName.toLowerCase();return("input"===n||"button"===n)&&e.type===t}}function u(t){return function(e){return"form"in e?e.parentNode&&e.disabled===!1?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&Mt(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function c(t){return i(function(e){return e=+e,i(function(n,i){for(var r,o=t([],n.length,e),a=o.length;a--;)n[r=o[a]]&&(n[r]=!(i[r]=n[r]))})})}function h(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function d(){}function f(t){for(var e=0,n=t.length,i="";e<n;e++)i+=t[e].value;return i}function p(t,e,n){var i=e.dir,r=e.next,o=r||i,a=n&&"parentNode"===o,s=B++;return e.first?function(e,n,r){for(;e=e[i];)if(1===e.nodeType||a)return t(e,n,r);return!1}:function(e,n,l){var u,c,h,d=[Y,s];if(l){for(;e=e[i];)if((1===e.nodeType||a)&&t(e,n,l))return!0}else for(;e=e[i];)if(1===e.nodeType||a)if(h=e[H]||(e[H]={}),c=h[e.uniqueID]||(h[e.uniqueID]={}),r&&r===e.nodeName.toLowerCase())e=e[i]||e;else{if((u=c[o])&&u[0]===Y&&u[1]===s)return d[2]=u[2];if(c[o]=d,d[2]=t(e,n,l))return!0}return!1}}function g(t){return t.length>1?function(e,n,i){for(var r=t.length;r--;)if(!t[r](e,n,i))return!1;return!0}:t[0]}function m(t,n,i){for(var r=0,o=n.length;r<o;r++)e(t,n[r],i);return i}function v(t,e,n,i,r){for(var o,a=[],s=0,l=t.length,u=null!=e;s<l;s++)(o=t[s])&&(n&&!n(o,i,r)||(a.push(o),u&&e.push(s)));return a}function y(t,e,n,r,o,a){return r&&!r[H]&&(r=y(r)),o&&!o[H]&&(o=y(o,a)),i(function(i,a,s,l){var u,c,h,d=[],f=[],p=a.length,g=i||m(e||"*",s.nodeType?[s]:s,[]),y=!t||!i&&e?g:v(g,d,t,s,l),b=n?o||(i?t:p||r)?[]:a:y;if(n&&n(y,b,s,l),r)for(u=v(b,f),r(u,[],s,l),c=u.length;c--;)(h=u[c])&&(b[f[c]]=!(y[f[c]]=h));if(i){if(o||t){if(o){for(u=[],c=b.length;c--;)(h=b[c])&&u.push(y[c]=h);o(null,b=[],u,l)}for(c=b.length;c--;)(h=b[c])&&(u=o?tt(i,h):d[c])>-1&&(i[u]=!(a[u]=h))}}else b=v(b===a?b.splice(p,b.length):b),o?o(null,a,b,l):J.apply(a,b)})}function b(t){for(var e,n,i,r=t.length,o=k.relative[t[0].type],a=o||k.relative[" "],s=o?1:0,l=p(function(t){return t===e},a,!0),u=p(function(t){return tt(e,t)>-1},a,!0),c=[function(t,n,i){var r=!o&&(i||n!==P)||((e=n).nodeType?l(t,n,i):u(t,n,i));return e=null,r}];s<r;s++)if(n=k.relative[t[s].type])c=[p(g(c),n)];else{if(n=k.filter[t[s].type].apply(null,t[s].matches),n[H]){for(i=++s;i<r&&!k.relative[t[i].type];i++);return y(s>1&&g(c),s>1&&f(t.slice(0,s-1).concat({value:" "===t[s-2].type?"*":""})).replace(st,"$1"),n,s<i&&b(t.slice(s,i)),i<r&&b(t=t.slice(i)),i<r&&f(t))}c.push(n)}return g(c)}function x(t,n){var r=n.length>0,o=t.length>0,a=function(i,a,s,l,u){var c,h,d,f=0,p="0",g=i&&[],m=[],y=P,b=i||o&&k.find.TAG("*",u),x=Y+=null==y?1:Math.random()||.1,_=b.length;for(u&&(P=a===L||a||u);p!==_&&null!=(c=b[p]);p++){if(o&&c){for(h=0,a||c.ownerDocument===L||(I(c),s=!F);d=t[h++];)if(d(c,a||L,s)){l.push(c);break}u&&(Y=x)}r&&((c=!d&&c)&&f--,i&&g.push(c))}if(f+=p,r&&p!==f){for(h=0;d=n[h++];)d(g,m,a,s);if(i){if(f>0)for(;p--;)g[p]||m[p]||(m[p]=X.call(l));m=v(m)}J.apply(l,m),u&&!i&&m.length>0&&f+n.length>1&&e.uniqueSort(l)}return u&&(Y=x,P=y),g};return r?i(a):a}var _,w,k,M,S,C,D,T,P,A,O,I,L,E,F,N,R,z,W,H="sizzle"+1*new Date,j=t.document,Y=0,B=0,$=n(),V=n(),q=n(),U=function(t,e){return t===e&&(O=!0),0},G={}.hasOwnProperty,Z=[],X=Z.pop,Q=Z.push,J=Z.push,K=Z.slice,tt=function(t,e){for(var n=0,i=t.length;n<i;n++)if(t[n]===e)return n;return-1},et="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",nt="[\\x20\\t\\r\\n\\f]",it="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",rt="\\["+nt+"*("+it+")(?:"+nt+"*([*^$|!~]?=)"+nt+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+it+"))|)"+nt+"*\\]",ot=":("+it+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+rt+")*)|.*)\\)|)",at=new RegExp(nt+"+","g"),st=new RegExp("^"+nt+"+|((?:^|[^\\\\])(?:\\\\.)*)"+nt+"+$","g"),lt=new RegExp("^"+nt+"*,"+nt+"*"),ut=new RegExp("^"+nt+"*([>+~]|"+nt+")"+nt+"*"),ct=new RegExp("="+nt+"*([^\\]'\"]*?)"+nt+"*\\]","g"),ht=new RegExp(ot),dt=new RegExp("^"+it+"$"),ft={ID:new RegExp("^#("+it+")"),CLASS:new RegExp("^\\.("+it+")"),TAG:new RegExp("^("+it+"|[*])"),ATTR:new RegExp("^"+rt),PSEUDO:new RegExp("^"+ot),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+nt+"*(even|odd|(([+-]|)(\\d*)n|)"+nt+"*(?:([+-]|)"+nt+"*(\\d+)|))"+nt+"*\\)|)","i"),bool:new RegExp("^(?:"+et+")$","i"),needsContext:new RegExp("^"+nt+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+nt+"*((?:-\\d)?\\d*)"+nt+"*\\)|)(?=[^-]|$)","i")},pt=/^(?:input|select|textarea|button)$/i,gt=/^h\d$/i,mt=/^[^{]+\{\s*\[native \w/,vt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,yt=/[+~]/,bt=new RegExp("\\\\([\\da-f]{1,6}"+nt+"?|("+nt+")|.)","ig"),xt=function(t,e,n){var i="0x"+e-65536;return i!==i||n?e:i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},_t=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,wt=function(t,e){return e?"\0"===t?"�":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},kt=function(){I()},Mt=p(function(t){return t.disabled===!0&&("form"in t||"label"in t)},{dir:"parentNode",next:"legend"});try{J.apply(Z=K.call(j.childNodes),j.childNodes),Z[j.childNodes.length].nodeType}catch(St){J={apply:Z.length?function(t,e){Q.apply(t,K.call(e))}:function(t,e){for(var n=t.length,i=0;t[n++]=e[i++];);t.length=n-1}}}w=e.support={},S=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},I=e.setDocument=function(t){var e,n,i=t?t.ownerDocument||t:j;return i!==L&&9===i.nodeType&&i.documentElement?(L=i,E=L.documentElement,F=!S(L),j!==L&&(n=L.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",kt,!1):n.attachEvent&&n.attachEvent("onunload",kt)),w.attributes=r(function(t){return t.className="i",!t.getAttribute("className")}),w.getElementsByTagName=r(function(t){return t.appendChild(L.createComment("")),!t.getElementsByTagName("*").length}),w.getElementsByClassName=mt.test(L.getElementsByClassName),w.getById=r(function(t){return E.appendChild(t).id=H,!L.getElementsByName||!L.getElementsByName(H).length}),w.getById?(k.filter.ID=function(t){var e=t.replace(bt,xt);return function(t){return t.getAttribute("id")===e}},k.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&F){var n=e.getElementById(t);return n?[n]:[]}}):(k.filter.ID=function(t){var e=t.replace(bt,xt);return function(t){var n="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return n&&n.value===e}},k.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&F){var n,i,r,o=e.getElementById(t);if(o){if(n=o.getAttributeNode("id"),n&&n.value===t)return[o];for(r=e.getElementsByName(t),i=0;o=r[i++];)if(n=o.getAttributeNode("id"),n&&n.value===t)return[o]}return[]}}),k.find.TAG=w.getElementsByTagName?function(t,e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t):w.qsa?e.querySelectorAll(t):void 0}:function(t,e){var n,i=[],r=0,o=e.getElementsByTagName(t);if("*"===t){for(;n=o[r++];)1===n.nodeType&&i.push(n);return i}return o},k.find.CLASS=w.getElementsByClassName&&function(t,e){if("undefined"!=typeof e.getElementsByClassName&&F)return e.getElementsByClassName(t)},R=[],N=[],(w.qsa=mt.test(L.querySelectorAll))&&(r(function(t){E.appendChild(t).innerHTML="<a id='"+H+"'></a><select id='"+H+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&N.push("[*^$]="+nt+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||N.push("\\["+nt+"*(?:value|"+et+")"),t.querySelectorAll("[id~="+H+"-]").length||N.push("~="),t.querySelectorAll(":checked").length||N.push(":checked"),t.querySelectorAll("a#"+H+"+*").length||N.push(".#.+[+~]")}),r(function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=L.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&N.push("name"+nt+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&N.push(":enabled",":disabled"),E.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&N.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),N.push(",.*:")})),(w.matchesSelector=mt.test(z=E.matches||E.webkitMatchesSelector||E.mozMatchesSelector||E.oMatchesSelector||E.msMatchesSelector))&&r(function(t){w.disconnectedMatch=z.call(t,"*"),z.call(t,"[s!='']:x"),R.push("!=",ot)}),N=N.length&&new RegExp(N.join("|")),R=R.length&&new RegExp(R.join("|")),e=mt.test(E.compareDocumentPosition),W=e||mt.test(E.contains)?function(t,e){var n=9===t.nodeType?t.documentElement:t,i=e&&e.parentNode;return t===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):t.compareDocumentPosition&&16&t.compareDocumentPosition(i)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},U=e?function(t,e){if(t===e)return O=!0,0;var n=!t.compareDocumentPosition-!e.compareDocumentPosition;return n?n:(n=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&n||!w.sortDetached&&e.compareDocumentPosition(t)===n?t===L||t.ownerDocument===j&&W(j,t)?-1:e===L||e.ownerDocument===j&&W(j,e)?1:A?tt(A,t)-tt(A,e):0:4&n?-1:1)}:function(t,e){if(t===e)return O=!0,0;var n,i=0,r=t.parentNode,o=e.parentNode,s=[t],l=[e];if(!r||!o)return t===L?-1:e===L?1:r?-1:o?1:A?tt(A,t)-tt(A,e):0;if(r===o)return a(t,e);for(n=t;n=n.parentNode;)s.unshift(n);for(n=e;n=n.parentNode;)l.unshift(n);for(;s[i]===l[i];)i++;return i?a(s[i],l[i]):s[i]===j?-1:l[i]===j?1:0},L):L},e.matches=function(t,n){return e(t,null,null,n)},e.matchesSelector=function(t,n){if((t.ownerDocument||t)!==L&&I(t),n=n.replace(ct,"='$1']"),w.matchesSelector&&F&&!q[n+" "]&&(!R||!R.test(n))&&(!N||!N.test(n)))try{var i=z.call(t,n);if(i||w.disconnectedMatch||t.document&&11!==t.document.nodeType)return i}catch(r){}return e(n,L,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==L&&I(t),W(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==L&&I(t);var n=k.attrHandle[e.toLowerCase()],i=n&&G.call(k.attrHandle,e.toLowerCase())?n(t,e,!F):void 0;return void 0!==i?i:w.attributes||!F?t.getAttribute(e):(i=t.getAttributeNode(e))&&i.specified?i.value:null},e.escape=function(t){return(t+"").replace(_t,wt)},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,n=[],i=0,r=0;if(O=!w.detectDuplicates,A=!w.sortStable&&t.slice(0),t.sort(U),O){for(;e=t[r++];)e===t[r]&&(i=n.push(r));for(;i--;)t.splice(n[i],1)}return A=null,t},M=e.getText=function(t){var e,n="",i=0,r=t.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)n+=M(t)}else if(3===r||4===r)return t.nodeValue}else for(;e=t[i++];)n+=M(e);return n},k=e.selectors={cacheLength:50,createPseudo:i,match:ft,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(bt,xt),t[3]=(t[3]||t[4]||t[5]||"").replace(bt,xt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,n=!t[6]&&t[2];return ft.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":n&&ht.test(n)&&(e=C(n,!0))&&(e=n.indexOf(")",n.length-e)-n.length)&&(t[0]=t[0].slice(0,e),
t[2]=n.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(bt,xt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=$[t+" "];return e||(e=new RegExp("(^|"+nt+")"+t+"("+nt+"|$)"))&&$(t,function(t){return e.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,n,i){return function(r){var o=e.attr(r,t);return null==o?"!="===n:!n||(o+="","="===n?o===i:"!="===n?o!==i:"^="===n?i&&0===o.indexOf(i):"*="===n?i&&o.indexOf(i)>-1:"$="===n?i&&o.slice(-i.length)===i:"~="===n?(" "+o.replace(at," ")+" ").indexOf(i)>-1:"|="===n&&(o===i||o.slice(0,i.length+1)===i+"-"))}},CHILD:function(t,e,n,i,r){var o="nth"!==t.slice(0,3),a="last"!==t.slice(-4),s="of-type"===e;return 1===i&&0===r?function(t){return!!t.parentNode}:function(e,n,l){var u,c,h,d,f,p,g=o!==a?"nextSibling":"previousSibling",m=e.parentNode,v=s&&e.nodeName.toLowerCase(),y=!l&&!s,b=!1;if(m){if(o){for(;g;){for(d=e;d=d[g];)if(s?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;p=g="only"===t&&!p&&"nextSibling"}return!0}if(p=[a?m.firstChild:m.lastChild],a&&y){for(d=m,h=d[H]||(d[H]={}),c=h[d.uniqueID]||(h[d.uniqueID]={}),u=c[t]||[],f=u[0]===Y&&u[1],b=f&&u[2],d=f&&m.childNodes[f];d=++f&&d&&d[g]||(b=f=0)||p.pop();)if(1===d.nodeType&&++b&&d===e){c[t]=[Y,f,b];break}}else if(y&&(d=e,h=d[H]||(d[H]={}),c=h[d.uniqueID]||(h[d.uniqueID]={}),u=c[t]||[],f=u[0]===Y&&u[1],b=f),b===!1)for(;(d=++f&&d&&d[g]||(b=f=0)||p.pop())&&((s?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++b||(y&&(h=d[H]||(d[H]={}),c=h[d.uniqueID]||(h[d.uniqueID]={}),c[t]=[Y,b]),d!==e)););return b-=r,b===i||b%i===0&&b/i>=0}}},PSEUDO:function(t,n){var r,o=k.pseudos[t]||k.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return o[H]?o(n):o.length>1?(r=[t,t,"",n],k.setFilters.hasOwnProperty(t.toLowerCase())?i(function(t,e){for(var i,r=o(t,n),a=r.length;a--;)i=tt(t,r[a]),t[i]=!(e[i]=r[a])}):function(t){return o(t,0,r)}):o}},pseudos:{not:i(function(t){var e=[],n=[],r=D(t.replace(st,"$1"));return r[H]?i(function(t,e,n,i){for(var o,a=r(t,null,i,[]),s=t.length;s--;)(o=a[s])&&(t[s]=!(e[s]=o))}):function(t,i,o){return e[0]=t,r(e,null,o,n),e[0]=null,!n.pop()}}),has:i(function(t){return function(n){return e(t,n).length>0}}),contains:i(function(t){return t=t.replace(bt,xt),function(e){return(e.textContent||e.innerText||M(e)).indexOf(t)>-1}}),lang:i(function(t){return dt.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(bt,xt).toLowerCase(),function(e){var n;do if(n=F?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return n=n.toLowerCase(),n===t||0===n.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var n=t.location&&t.location.hash;return n&&n.slice(1)===e.id},root:function(t){return t===E},focus:function(t){return t===L.activeElement&&(!L.hasFocus||L.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:u(!1),disabled:u(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!k.pseudos.empty(t)},header:function(t){return gt.test(t.nodeName)},input:function(t){return pt.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:c(function(){return[0]}),last:c(function(t,e){return[e-1]}),eq:c(function(t,e,n){return[n<0?n+e:n]}),even:c(function(t,e){for(var n=0;n<e;n+=2)t.push(n);return t}),odd:c(function(t,e){for(var n=1;n<e;n+=2)t.push(n);return t}),lt:c(function(t,e,n){for(var i=n<0?n+e:n;--i>=0;)t.push(i);return t}),gt:c(function(t,e,n){for(var i=n<0?n+e:n;++i<e;)t.push(i);return t})}},k.pseudos.nth=k.pseudos.eq;for(_ in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})k.pseudos[_]=s(_);for(_ in{submit:!0,reset:!0})k.pseudos[_]=l(_);return d.prototype=k.filters=k.pseudos,k.setFilters=new d,C=e.tokenize=function(t,n){var i,r,o,a,s,l,u,c=V[t+" "];if(c)return n?0:c.slice(0);for(s=t,l=[],u=k.preFilter;s;){i&&!(r=lt.exec(s))||(r&&(s=s.slice(r[0].length)||s),l.push(o=[])),i=!1,(r=ut.exec(s))&&(i=r.shift(),o.push({value:i,type:r[0].replace(st," ")}),s=s.slice(i.length));for(a in k.filter)!(r=ft[a].exec(s))||u[a]&&!(r=u[a](r))||(i=r.shift(),o.push({value:i,type:a,matches:r}),s=s.slice(i.length));if(!i)break}return n?s.length:s?e.error(t):V(t,l).slice(0)},D=e.compile=function(t,e){var n,i=[],r=[],o=q[t+" "];if(!o){for(e||(e=C(t)),n=e.length;n--;)o=b(e[n]),o[H]?i.push(o):r.push(o);o=q(t,x(r,i)),o.selector=t}return o},T=e.select=function(t,e,n,i){var r,o,a,s,l,u="function"==typeof t&&t,c=!i&&C(t=u.selector||t);if(n=n||[],1===c.length){if(o=c[0]=c[0].slice(0),o.length>2&&"ID"===(a=o[0]).type&&9===e.nodeType&&F&&k.relative[o[1].type]){if(e=(k.find.ID(a.matches[0].replace(bt,xt),e)||[])[0],!e)return n;u&&(e=e.parentNode),t=t.slice(o.shift().value.length)}for(r=ft.needsContext.test(t)?0:o.length;r--&&(a=o[r],!k.relative[s=a.type]);)if((l=k.find[s])&&(i=l(a.matches[0].replace(bt,xt),yt.test(o[0].type)&&h(e.parentNode)||e))){if(o.splice(r,1),t=i.length&&f(o),!t)return J.apply(n,i),n;break}}return(u||D(t,c))(i,e,!F,n,!e||yt.test(t)&&h(e.parentNode)||e),n},w.sortStable=H.split("").sort(U).join("")===H,w.detectDuplicates=!!O,I(),w.sortDetached=r(function(t){return 1&t.compareDocumentPosition(L.createElement("fieldset"))}),r(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||o("type|href|height|width",function(t,e,n){if(!n)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),w.attributes&&r(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||o("value",function(t,e,n){if(!n&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),r(function(t){return null==t.getAttribute("disabled")})||o(et,function(t,e,n){var i;if(!n)return t[e]===!0?e.toLowerCase():(i=t.getAttributeNode(e))&&i.specified?i.value:null}),e}(t);wt.find=Mt,wt.expr=Mt.selectors,wt.expr[":"]=wt.expr.pseudos,wt.uniqueSort=wt.unique=Mt.uniqueSort,wt.text=Mt.getText,wt.isXMLDoc=Mt.isXML,wt.contains=Mt.contains,wt.escapeSelector=Mt.escape;var St=function(t,e,n){for(var i=[],r=void 0!==n;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(r&&wt(t).is(n))break;i.push(t)}return i},Ct=function(t,e){for(var n=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&n.push(t);return n},Dt=wt.expr.match.needsContext,Tt=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;wt.filter=function(t,e,n){var i=e[0];return n&&(t=":not("+t+")"),1===e.length&&1===i.nodeType?wt.find.matchesSelector(i,t)?[i]:[]:wt.find.matches(t,wt.grep(e,function(t){return 1===t.nodeType}))},wt.fn.extend({find:function(t){var e,n,i=this.length,r=this;if("string"!=typeof t)return this.pushStack(wt(t).filter(function(){for(e=0;e<i;e++)if(wt.contains(r[e],this))return!0}));for(n=this.pushStack([]),e=0;e<i;e++)wt.find(t,r[e],n);return i>1?wt.uniqueSort(n):n},filter:function(t){return this.pushStack(a(this,t||[],!1))},not:function(t){return this.pushStack(a(this,t||[],!0))},is:function(t){return!!a(this,"string"==typeof t&&Dt.test(t)?wt(t):t||[],!1).length}});var Pt,At=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,Ot=wt.fn.init=function(t,e,n){var i,r;if(!t)return this;if(n=n||Pt,"string"==typeof t){if(i="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:At.exec(t),!i||!i[1]&&e)return!e||e.jquery?(e||n).find(t):this.constructor(e).find(t);if(i[1]){if(e=e instanceof wt?e[0]:e,wt.merge(this,wt.parseHTML(i[1],e&&e.nodeType?e.ownerDocument||e:at,!0)),Tt.test(i[1])&&wt.isPlainObject(e))for(i in e)yt(this[i])?this[i](e[i]):this.attr(i,e[i]);return this}return r=at.getElementById(i[2]),r&&(this[0]=r,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):yt(t)?void 0!==n.ready?n.ready(t):t(wt):wt.makeArray(t,this)};Ot.prototype=wt.fn,Pt=wt(at);var It=/^(?:parents|prev(?:Until|All))/,Lt={children:!0,contents:!0,next:!0,prev:!0};wt.fn.extend({has:function(t){var e=wt(t,this),n=e.length;return this.filter(function(){for(var t=0;t<n;t++)if(wt.contains(this,e[t]))return!0})},closest:function(t,e){var n,i=0,r=this.length,o=[],a="string"!=typeof t&&wt(t);if(!Dt.test(t))for(;i<r;i++)for(n=this[i];n&&n!==e;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&wt.find.matchesSelector(n,t))){o.push(n);break}return this.pushStack(o.length>1?wt.uniqueSort(o):o)},index:function(t){return t?"string"==typeof t?ht.call(wt(t),this[0]):ht.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(wt.uniqueSort(wt.merge(this.get(),wt(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),wt.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return St(t,"parentNode")},parentsUntil:function(t,e,n){return St(t,"parentNode",n)},next:function(t){return s(t,"nextSibling")},prev:function(t){return s(t,"previousSibling")},nextAll:function(t){return St(t,"nextSibling")},prevAll:function(t){return St(t,"previousSibling")},nextUntil:function(t,e,n){return St(t,"nextSibling",n)},prevUntil:function(t,e,n){return St(t,"previousSibling",n)},siblings:function(t){return Ct((t.parentNode||{}).firstChild,t)},children:function(t){return Ct(t.firstChild)},contents:function(t){return o(t,"iframe")?t.contentDocument:(o(t,"template")&&(t=t.content||t),wt.merge([],t.childNodes))}},function(t,e){wt.fn[t]=function(n,i){var r=wt.map(this,e,n);return"Until"!==t.slice(-5)&&(i=n),i&&"string"==typeof i&&(r=wt.filter(i,r)),this.length>1&&(Lt[t]||wt.uniqueSort(r),It.test(t)&&r.reverse()),this.pushStack(r)}});var Et=/[^\x20\t\r\n\f]+/g;wt.Callbacks=function(t){t="string"==typeof t?l(t):wt.extend({},t);var e,n,r,o,a=[],s=[],u=-1,c=function(){for(o=o||t.once,r=e=!0;s.length;u=-1)for(n=s.shift();++u<a.length;)a[u].apply(n[0],n[1])===!1&&t.stopOnFalse&&(u=a.length,n=!1);t.memory||(n=!1),e=!1,o&&(a=n?[]:"")},h={add:function(){return a&&(n&&!e&&(u=a.length-1,s.push(n)),function r(e){wt.each(e,function(e,n){yt(n)?t.unique&&h.has(n)||a.push(n):n&&n.length&&"string"!==i(n)&&r(n)})}(arguments),n&&!e&&c()),this},remove:function(){return wt.each(arguments,function(t,e){for(var n;(n=wt.inArray(e,a,n))>-1;)a.splice(n,1),n<=u&&u--}),this},has:function(t){return t?wt.inArray(t,a)>-1:a.length>0},empty:function(){return a&&(a=[]),this},disable:function(){return o=s=[],a=n="",this},disabled:function(){return!a},lock:function(){return o=s=[],n||e||(a=n=""),this},locked:function(){return!!o},fireWith:function(t,n){return o||(n=n||[],n=[t,n.slice?n.slice():n],s.push(n),e||c()),this},fire:function(){return h.fireWith(this,arguments),this},fired:function(){return!!r}};return h},wt.extend({Deferred:function(e){var n=[["notify","progress",wt.Callbacks("memory"),wt.Callbacks("memory"),2],["resolve","done",wt.Callbacks("once memory"),wt.Callbacks("once memory"),0,"resolved"],["reject","fail",wt.Callbacks("once memory"),wt.Callbacks("once memory"),1,"rejected"]],i="pending",r={state:function(){return i},always:function(){return o.done(arguments).fail(arguments),this},"catch":function(t){return r.then(null,t)},pipe:function(){var t=arguments;return wt.Deferred(function(e){wt.each(n,function(n,i){var r=yt(t[i[4]])&&t[i[4]];o[i[1]](function(){var t=r&&r.apply(this,arguments);t&&yt(t.promise)?t.promise().progress(e.notify).done(e.resolve).fail(e.reject):e[i[0]+"With"](this,r?[t]:arguments)})}),t=null}).promise()},then:function(e,i,r){function o(e,n,i,r){return function(){var s=this,l=arguments,h=function(){var t,h;if(!(e<a)){if(t=i.apply(s,l),t===n.promise())throw new TypeError("Thenable self-resolution");h=t&&("object"==typeof t||"function"==typeof t)&&t.then,yt(h)?r?h.call(t,o(a,n,u,r),o(a,n,c,r)):(a++,h.call(t,o(a,n,u,r),o(a,n,c,r),o(a,n,u,n.notifyWith))):(i!==u&&(s=void 0,l=[t]),(r||n.resolveWith)(s,l))}},d=r?h:function(){try{h()}catch(t){wt.Deferred.exceptionHook&&wt.Deferred.exceptionHook(t,d.stackTrace),e+1>=a&&(i!==c&&(s=void 0,l=[t]),n.rejectWith(s,l))}};e?d():(wt.Deferred.getStackHook&&(d.stackTrace=wt.Deferred.getStackHook()),t.setTimeout(d))}}var a=0;return wt.Deferred(function(t){n[0][3].add(o(0,t,yt(r)?r:u,t.notifyWith)),n[1][3].add(o(0,t,yt(e)?e:u)),n[2][3].add(o(0,t,yt(i)?i:c))}).promise()},promise:function(t){return null!=t?wt.extend(t,r):r}},o={};return wt.each(n,function(t,e){var a=e[2],s=e[5];r[e[1]]=a.add,s&&a.add(function(){i=s},n[3-t][2].disable,n[3-t][3].disable,n[0][2].lock,n[0][3].lock),a.add(e[3].fire),o[e[0]]=function(){return o[e[0]+"With"](this===o?void 0:this,arguments),this},o[e[0]+"With"]=a.fireWith}),r.promise(o),e&&e.call(o,o),o},when:function(t){var e=arguments.length,n=e,i=Array(n),r=lt.call(arguments),o=wt.Deferred(),a=function(t){return function(n){i[t]=this,r[t]=arguments.length>1?lt.call(arguments):n,--e||o.resolveWith(i,r)}};if(e<=1&&(h(t,o.done(a(n)).resolve,o.reject,!e),"pending"===o.state()||yt(r[n]&&r[n].then)))return o.then();for(;n--;)h(r[n],a(n),o.reject);return o.promise()}});var Ft=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;wt.Deferred.exceptionHook=function(e,n){t.console&&t.console.warn&&e&&Ft.test(e.name)&&t.console.warn("jQuery.Deferred exception: "+e.message,e.stack,n)},wt.readyException=function(e){t.setTimeout(function(){throw e})};var Nt=wt.Deferred();wt.fn.ready=function(t){return Nt.then(t)["catch"](function(t){wt.readyException(t)}),this},wt.extend({isReady:!1,readyWait:1,ready:function(t){(t===!0?--wt.readyWait:wt.isReady)||(wt.isReady=!0,t!==!0&&--wt.readyWait>0||Nt.resolveWith(at,[wt]))}}),wt.ready.then=Nt.then,"complete"===at.readyState||"loading"!==at.readyState&&!at.documentElement.doScroll?t.setTimeout(wt.ready):(at.addEventListener("DOMContentLoaded",d),t.addEventListener("load",d));var Rt=function(t,e,n,r,o,a,s){var l=0,u=t.length,c=null==n;if("object"===i(n)){o=!0;for(l in n)Rt(t,e,l,n[l],!0,a,s)}else if(void 0!==r&&(o=!0,yt(r)||(s=!0),c&&(s?(e.call(t,r),e=null):(c=e,e=function(t,e,n){return c.call(wt(t),n)})),e))for(;l<u;l++)e(t[l],n,s?r:r.call(t[l],l,e(t[l],n)));return o?t:c?e.call(t):u?e(t[0],n):a},zt=/^-ms-/,Wt=/-([a-z])/g,Ht=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};g.uid=1,g.prototype={cache:function(t){var e=t[this.expando];return e||(e={},Ht(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,n){var i,r=this.cache(t);if("string"==typeof e)r[p(e)]=n;else for(i in e)r[p(i)]=e[i];return r},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][p(e)]},access:function(t,e,n){return void 0===e||e&&"string"==typeof e&&void 0===n?this.get(t,e):(this.set(t,e,n),void 0!==n?n:e)},remove:function(t,e){var n,i=t[this.expando];if(void 0!==i){if(void 0!==e){Array.isArray(e)?e=e.map(p):(e=p(e),e=e in i?[e]:e.match(Et)||[]),n=e.length;for(;n--;)delete i[e[n]]}(void 0===e||wt.isEmptyObject(i))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!wt.isEmptyObject(e)}};var jt=new g,Yt=new g,Bt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,$t=/[A-Z]/g;wt.extend({hasData:function(t){return Yt.hasData(t)||jt.hasData(t)},data:function(t,e,n){return Yt.access(t,e,n)},removeData:function(t,e){Yt.remove(t,e)},_data:function(t,e,n){return jt.access(t,e,n)},_removeData:function(t,e){jt.remove(t,e)}}),wt.fn.extend({data:function(t,e){var n,i,r,o=this[0],a=o&&o.attributes;if(void 0===t){if(this.length&&(r=Yt.get(o),1===o.nodeType&&!jt.get(o,"hasDataAttrs"))){for(n=a.length;n--;)a[n]&&(i=a[n].name,0===i.indexOf("data-")&&(i=p(i.slice(5)),v(o,i,r[i])));jt.set(o,"hasDataAttrs",!0)}return r}return"object"==typeof t?this.each(function(){Yt.set(this,t)}):Rt(this,function(e){var n;if(o&&void 0===e){if(n=Yt.get(o,t),void 0!==n)return n;if(n=v(o,t),void 0!==n)return n}else this.each(function(){Yt.set(this,t,e)})},null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){Yt.remove(this,t)})}}),wt.extend({queue:function(t,e,n){var i;if(t)return e=(e||"fx")+"queue",i=jt.get(t,e),n&&(!i||Array.isArray(n)?i=jt.access(t,e,wt.makeArray(n)):i.push(n)),i||[]},dequeue:function(t,e){e=e||"fx";var n=wt.queue(t,e),i=n.length,r=n.shift(),o=wt._queueHooks(t,e),a=function(){wt.dequeue(t,e)};"inprogress"===r&&(r=n.shift(),i--),r&&("fx"===e&&n.unshift("inprogress"),delete o.stop,r.call(t,a,o)),!i&&o&&o.empty.fire()},_queueHooks:function(t,e){var n=e+"queueHooks";return jt.get(t,n)||jt.access(t,n,{empty:wt.Callbacks("once memory").add(function(){jt.remove(t,[e+"queue",n])})})}}),wt.fn.extend({queue:function(t,e){var n=2;return"string"!=typeof t&&(e=t,t="fx",n--),arguments.length<n?wt.queue(this[0],t):void 0===e?this:this.each(function(){var n=wt.queue(this,t,e);wt._queueHooks(this,t),"fx"===t&&"inprogress"!==n[0]&&wt.dequeue(this,t)})},dequeue:function(t){return this.each(function(){wt.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var n,i=1,r=wt.Deferred(),o=this,a=this.length,s=function(){--i||r.resolveWith(o,[o])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";a--;)n=jt.get(o[a],t+"queueHooks"),n&&n.empty&&(i++,n.empty.add(s));return s(),r.promise(e)}});var Vt=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,qt=new RegExp("^(?:([+-])=|)("+Vt+")([a-z%]*)$","i"),Ut=["Top","Right","Bottom","Left"],Gt=function(t,e){return t=e||t,"none"===t.style.display||""===t.style.display&&wt.contains(t.ownerDocument,t)&&"none"===wt.css(t,"display")},Zt=function(t,e,n,i){var r,o,a={};for(o in e)a[o]=t.style[o],t.style[o]=e[o];r=n.apply(t,i||[]);for(o in e)t.style[o]=a[o];return r},Xt={};wt.fn.extend({show:function(){return x(this,!0)},hide:function(){return x(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){Gt(this)?wt(this).show():wt(this).hide()})}});var Qt=/^(?:checkbox|radio)$/i,Jt=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Kt=/^$|^module$|\/(?:java|ecma)script/i,te={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};te.optgroup=te.option,te.tbody=te.tfoot=te.colgroup=te.caption=te.thead,te.th=te.td;var ee=/<|&#?\w+;/;!function(){var t=at.createDocumentFragment(),e=t.appendChild(at.createElement("div")),n=at.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),e.appendChild(n),vt.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML="<textarea>x</textarea>",vt.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var ne=at.documentElement,ie=/^key/,re=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,oe=/^([^.]*)(?:\.(.+)|)/;wt.event={global:{},add:function(t,e,n,i,r){var o,a,s,l,u,c,h,d,f,p,g,m=jt.get(t);if(m)for(n.handler&&(o=n,n=o.handler,r=o.selector),r&&wt.find.matchesSelector(ne,r),n.guid||(n.guid=wt.guid++),(l=m.events)||(l=m.events={}),(a=m.handle)||(a=m.handle=function(e){return"undefined"!=typeof wt&&wt.event.triggered!==e.type?wt.event.dispatch.apply(t,arguments):void 0}),e=(e||"").match(Et)||[""],u=e.length;u--;)s=oe.exec(e[u])||[],f=g=s[1],p=(s[2]||"").split(".").sort(),f&&(h=wt.event.special[f]||{},f=(r?h.delegateType:h.bindType)||f,h=wt.event.special[f]||{},c=wt.extend({type:f,origType:g,data:i,handler:n,guid:n.guid,selector:r,needsContext:r&&wt.expr.match.needsContext.test(r),namespace:p.join(".")},o),(d=l[f])||(d=l[f]=[],d.delegateCount=0,h.setup&&h.setup.call(t,i,p,a)!==!1||t.addEventListener&&t.addEventListener(f,a)),h.add&&(h.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),r?d.splice(d.delegateCount++,0,c):d.push(c),wt.event.global[f]=!0)},remove:function(t,e,n,i,r){var o,a,s,l,u,c,h,d,f,p,g,m=jt.hasData(t)&&jt.get(t);if(m&&(l=m.events)){for(e=(e||"").match(Et)||[""],u=e.length;u--;)if(s=oe.exec(e[u])||[],f=g=s[1],p=(s[2]||"").split(".").sort(),f){for(h=wt.event.special[f]||{},f=(i?h.delegateType:h.bindType)||f,d=l[f]||[],s=s[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=d.length;o--;)c=d[o],!r&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||i&&i!==c.selector&&("**"!==i||!c.selector)||(d.splice(o,1),c.selector&&d.delegateCount--,h.remove&&h.remove.call(t,c));a&&!d.length&&(h.teardown&&h.teardown.call(t,p,m.handle)!==!1||wt.removeEvent(t,f,m.handle),delete l[f])}else for(f in l)wt.event.remove(t,f+e[u],n,i,!0);wt.isEmptyObject(l)&&jt.remove(t,"handle events")}},dispatch:function(t){var e,n,i,r,o,a,s=wt.event.fix(t),l=new Array(arguments.length),u=(jt.get(this,"events")||{})[s.type]||[],c=wt.event.special[s.type]||{};for(l[0]=s,e=1;e<arguments.length;e++)l[e]=arguments[e];if(s.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,s)!==!1){for(a=wt.event.handlers.call(this,s,u),e=0;(r=a[e++])&&!s.isPropagationStopped();)for(s.currentTarget=r.elem,n=0;(o=r.handlers[n++])&&!s.isImmediatePropagationStopped();)s.rnamespace&&!s.rnamespace.test(o.namespace)||(s.handleObj=o,s.data=o.data,i=((wt.event.special[o.origType]||{}).handle||o.handler).apply(r.elem,l),void 0!==i&&(s.result=i)===!1&&(s.preventDefault(),s.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,s),s.result}},handlers:function(t,e){var n,i,r,o,a,s=[],l=e.delegateCount,u=t.target;if(l&&u.nodeType&&!("click"===t.type&&t.button>=1))for(;u!==this;u=u.parentNode||this)if(1===u.nodeType&&("click"!==t.type||u.disabled!==!0)){for(o=[],a={},n=0;n<l;n++)i=e[n],r=i.selector+" ",void 0===a[r]&&(a[r]=i.needsContext?wt(r,this).index(u)>-1:wt.find(r,this,null,[u]).length),a[r]&&o.push(i);o.length&&s.push({elem:u,handlers:o})}return u=this,l<e.length&&s.push({elem:u,handlers:e.slice(l)}),s},addProp:function(t,e){Object.defineProperty(wt.Event.prototype,t,{enumerable:!0,configurable:!0,get:yt(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[wt.expando]?t:new wt.Event(t)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==C()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===C()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&o(this,"input"))return this.click(),!1},_default:function(t){return o(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},wt.removeEvent=function(t,e,n){t.removeEventListener&&t.removeEventListener(e,n)},wt.Event=function(t,e){return this instanceof wt.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?M:S,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&wt.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),void(this[wt.expando]=!0)):new wt.Event(t,e)},wt.Event.prototype={constructor:wt.Event,isDefaultPrevented:S,isPropagationStopped:S,isImmediatePropagationStopped:S,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=M,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=M,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=M,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},wt.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&ie.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&re.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},wt.event.addProp),wt.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){wt.event.special[t]={delegateType:e,bindType:e,handle:function(t){var n,i=this,r=t.relatedTarget,o=t.handleObj;return r&&(r===i||wt.contains(i,r))||(t.type=o.origType,n=o.handler.apply(this,arguments),t.type=e),n}}}),wt.fn.extend({on:function(t,e,n,i){return D(this,t,e,n,i)},one:function(t,e,n,i){return D(this,t,e,n,i,1)},off:function(t,e,n){var i,r;if(t&&t.preventDefault&&t.handleObj)return i=t.handleObj,wt(t.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof t){for(r in t)this.off(r,e,t[r]);return this}return e!==!1&&"function"!=typeof e||(n=e,e=void 0),n===!1&&(n=S),this.each(function(){wt.event.remove(this,t,n,e)})}});var ae=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,se=/<script|<style|<link/i,le=/checked\s*(?:[^=]|=\s*.checked.)/i,ue=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;wt.extend({htmlPrefilter:function(t){return t.replace(ae,"<$1></$2>")},clone:function(t,e,n){var i,r,o,a,s=t.cloneNode(!0),l=wt.contains(t.ownerDocument,t);if(!(vt.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||wt.isXMLDoc(t)))for(a=_(s),o=_(t),i=0,r=o.length;i<r;i++)I(o[i],a[i]);if(e)if(n)for(o=o||_(t),a=a||_(s),i=0,r=o.length;i<r;i++)O(o[i],a[i]);else O(t,s);return a=_(s,"script"),a.length>0&&w(a,!l&&_(t,"script")),s},cleanData:function(t){for(var e,n,i,r=wt.event.special,o=0;void 0!==(n=t[o]);o++)if(Ht(n)){if(e=n[jt.expando]){if(e.events)for(i in e.events)r[i]?wt.event.remove(n,i):wt.removeEvent(n,i,e.handle);n[jt.expando]=void 0}n[Yt.expando]&&(n[Yt.expando]=void 0)}}}),wt.fn.extend({detach:function(t){return E(this,t,!0)},remove:function(t){return E(this,t)},text:function(t){return Rt(this,function(t){return void 0===t?wt.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return L(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=T(this,t);e.appendChild(t)}})},prepend:function(){return L(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=T(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return L(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return L(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(wt.cleanData(_(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return wt.clone(this,t,e)})},html:function(t){return Rt(this,function(t){var e=this[0]||{},n=0,i=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!se.test(t)&&!te[(Jt.exec(t)||["",""])[1].toLowerCase()]){t=wt.htmlPrefilter(t);try{for(;n<i;n++)e=this[n]||{},1===e.nodeType&&(wt.cleanData(_(e,!1)),e.innerHTML=t);e=0}catch(r){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return L(this,arguments,function(e){var n=this.parentNode;wt.inArray(this,t)<0&&(wt.cleanData(_(this)),n&&n.replaceChild(e,this))},t)}}),wt.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){wt.fn[t]=function(t){for(var n,i=[],r=wt(t),o=r.length-1,a=0;a<=o;a++)n=a===o?this:this.clone(!0),wt(r[a])[e](n),ct.apply(i,n.get());return this.pushStack(i)}});var ce=new RegExp("^("+Vt+")(?!px)[a-z%]+$","i"),he=function(e){var n=e.ownerDocument.defaultView;return n&&n.opener||(n=t),n.getComputedStyle(e)},de=new RegExp(Ut.join("|"),"i");!function(){function e(){if(u){l.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",u.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ne.appendChild(l).appendChild(u);var e=t.getComputedStyle(u);i="1%"!==e.top,s=12===n(e.marginLeft),u.style.right="60%",a=36===n(e.right),r=36===n(e.width),u.style.position="absolute",o=36===u.offsetWidth||"absolute",ne.removeChild(l),u=null}}function n(t){return Math.round(parseFloat(t))}var i,r,o,a,s,l=at.createElement("div"),u=at.createElement("div");u.style&&(u.style.backgroundClip="content-box",u.cloneNode(!0).style.backgroundClip="",vt.clearCloneStyle="content-box"===u.style.backgroundClip,wt.extend(vt,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),a},pixelPosition:function(){return e(),i},reliableMarginLeft:function(){return e(),s},scrollboxSize:function(){return e(),o}}))}();var fe=/^(none|table(?!-c[ea]).+)/,pe=/^--/,ge={position:"absolute",visibility:"hidden",display:"block"},me={letterSpacing:"0",fontWeight:"400"},ve=["Webkit","Moz","ms"],ye=at.createElement("div").style;wt.extend({cssHooks:{opacity:{get:function(t,e){if(e){var n=F(t,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,n,i){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var r,o,a,s=p(e),l=pe.test(e),u=t.style;return l||(e=z(s)),a=wt.cssHooks[e]||wt.cssHooks[s],void 0===n?a&&"get"in a&&void 0!==(r=a.get(t,!1,i))?r:u[e]:(o=typeof n,"string"===o&&(r=qt.exec(n))&&r[1]&&(n=y(t,e,r),o="number"),null!=n&&n===n&&("number"===o&&(n+=r&&r[3]||(wt.cssNumber[s]?"":"px")),vt.clearCloneStyle||""!==n||0!==e.indexOf("background")||(u[e]="inherit"),a&&"set"in a&&void 0===(n=a.set(t,n,i))||(l?u.setProperty(e,n):u[e]=n)),void 0)}},css:function(t,e,n,i){var r,o,a,s=p(e),l=pe.test(e);return l||(e=z(s)),a=wt.cssHooks[e]||wt.cssHooks[s],a&&"get"in a&&(r=a.get(t,!0,n)),void 0===r&&(r=F(t,e,i)),"normal"===r&&e in me&&(r=me[e]),""===n||n?(o=parseFloat(r),n===!0||isFinite(o)?o||0:r):r}}),wt.each(["height","width"],function(t,e){wt.cssHooks[e]={get:function(t,n,i){if(n)return!fe.test(wt.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?j(t,e,i):Zt(t,ge,function(){return j(t,e,i)})},set:function(t,n,i){var r,o=he(t),a="border-box"===wt.css(t,"boxSizing",!1,o),s=i&&H(t,e,i,a,o);return a&&vt.scrollboxSize()===o.position&&(s-=Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-parseFloat(o[e])-H(t,e,"border",!1,o)-.5)),s&&(r=qt.exec(n))&&"px"!==(r[3]||"px")&&(t.style[e]=n,n=wt.css(t,e)),W(t,n,s)}}}),wt.cssHooks.marginLeft=N(vt.reliableMarginLeft,function(t,e){if(e)return(parseFloat(F(t,"marginLeft"))||t.getBoundingClientRect().left-Zt(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),wt.each({margin:"",padding:"",border:"Width"},function(t,e){wt.cssHooks[t+e]={expand:function(n){for(var i=0,r={},o="string"==typeof n?n.split(" "):[n];i<4;i++)r[t+Ut[i]+e]=o[i]||o[i-2]||o[0];return r}},"margin"!==t&&(wt.cssHooks[t+e].set=W)}),wt.fn.extend({css:function(t,e){return Rt(this,function(t,e,n){var i,r,o={},a=0;if(Array.isArray(e)){for(i=he(t),r=e.length;a<r;a++)o[e[a]]=wt.css(t,e[a],!1,i);return o}return void 0!==n?wt.style(t,e,n):wt.css(t,e)},t,e,arguments.length>1)}}),wt.Tween=Y,Y.prototype={constructor:Y,init:function(t,e,n,i,r,o){
this.elem=t,this.prop=n,this.easing=r||wt.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=i,this.unit=o||(wt.cssNumber[n]?"":"px")},cur:function(){var t=Y.propHooks[this.prop];return t&&t.get?t.get(this):Y.propHooks._default.get(this)},run:function(t){var e,n=Y.propHooks[this.prop];return this.options.duration?this.pos=e=wt.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Y.propHooks._default.set(this),this}},Y.prototype.init.prototype=Y.prototype,Y.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=wt.css(t.elem,t.prop,""),e&&"auto"!==e?e:0)},set:function(t){wt.fx.step[t.prop]?wt.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[wt.cssProps[t.prop]]&&!wt.cssHooks[t.prop]?t.elem[t.prop]=t.now:wt.style(t.elem,t.prop,t.now+t.unit)}}},Y.propHooks.scrollTop=Y.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},wt.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},wt.fx=Y.prototype.init,wt.fx.step={};var be,xe,_e=/^(?:toggle|show|hide)$/,we=/queueHooks$/;wt.Animation=wt.extend(Z,{tweeners:{"*":[function(t,e){var n=this.createTween(t,e);return y(n.elem,t,qt.exec(e),n),n}]},tweener:function(t,e){yt(t)?(e=t,t=["*"]):t=t.match(Et);for(var n,i=0,r=t.length;i<r;i++)n=t[i],Z.tweeners[n]=Z.tweeners[n]||[],Z.tweeners[n].unshift(e)},prefilters:[U],prefilter:function(t,e){e?Z.prefilters.unshift(t):Z.prefilters.push(t)}}),wt.speed=function(t,e,n){var i=t&&"object"==typeof t?wt.extend({},t):{complete:n||!n&&e||yt(t)&&t,duration:t,easing:n&&e||e&&!yt(e)&&e};return wt.fx.off?i.duration=0:"number"!=typeof i.duration&&(i.duration in wt.fx.speeds?i.duration=wt.fx.speeds[i.duration]:i.duration=wt.fx.speeds._default),null!=i.queue&&i.queue!==!0||(i.queue="fx"),i.old=i.complete,i.complete=function(){yt(i.old)&&i.old.call(this),i.queue&&wt.dequeue(this,i.queue)},i},wt.fn.extend({fadeTo:function(t,e,n,i){return this.filter(Gt).css("opacity",0).show().end().animate({opacity:e},t,n,i)},animate:function(t,e,n,i){var r=wt.isEmptyObject(t),o=wt.speed(e,n,i),a=function(){var e=Z(this,wt.extend({},t),o);(r||jt.get(this,"finish"))&&e.stop(!0)};return a.finish=a,r||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(t,e,n){var i=function(t){var e=t.stop;delete t.stop,e(n)};return"string"!=typeof t&&(n=e,e=t,t=void 0),e&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var e=!0,r=null!=t&&t+"queueHooks",o=wt.timers,a=jt.get(this);if(r)a[r]&&a[r].stop&&i(a[r]);else for(r in a)a[r]&&a[r].stop&&we.test(r)&&i(a[r]);for(r=o.length;r--;)o[r].elem!==this||null!=t&&o[r].queue!==t||(o[r].anim.stop(n),e=!1,o.splice(r,1));!e&&n||wt.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var e,n=jt.get(this),i=n[t+"queue"],r=n[t+"queueHooks"],o=wt.timers,a=i?i.length:0;for(n.finish=!0,wt.queue(this,t,[]),r&&r.stop&&r.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===t&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<a;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete n.finish})}}),wt.each(["toggle","show","hide"],function(t,e){var n=wt.fn[e];wt.fn[e]=function(t,i,r){return null==t||"boolean"==typeof t?n.apply(this,arguments):this.animate(V(e,!0),t,i,r)}}),wt.each({slideDown:V("show"),slideUp:V("hide"),slideToggle:V("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){wt.fn[t]=function(t,n,i){return this.animate(e,t,n,i)}}),wt.timers=[],wt.fx.tick=function(){var t,e=0,n=wt.timers;for(be=Date.now();e<n.length;e++)t=n[e],t()||n[e]!==t||n.splice(e--,1);n.length||wt.fx.stop(),be=void 0},wt.fx.timer=function(t){wt.timers.push(t),wt.fx.start()},wt.fx.interval=13,wt.fx.start=function(){xe||(xe=!0,B())},wt.fx.stop=function(){xe=null},wt.fx.speeds={slow:600,fast:200,_default:400},wt.fn.delay=function(e,n){return e=wt.fx?wt.fx.speeds[e]||e:e,n=n||"fx",this.queue(n,function(n,i){var r=t.setTimeout(n,e);i.stop=function(){t.clearTimeout(r)}})},function(){var t=at.createElement("input"),e=at.createElement("select"),n=e.appendChild(at.createElement("option"));t.type="checkbox",vt.checkOn=""!==t.value,vt.optSelected=n.selected,t=at.createElement("input"),t.value="t",t.type="radio",vt.radioValue="t"===t.value}();var ke,Me=wt.expr.attrHandle;wt.fn.extend({attr:function(t,e){return Rt(this,wt.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){wt.removeAttr(this,t)})}}),wt.extend({attr:function(t,e,n){var i,r,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof t.getAttribute?wt.prop(t,e,n):(1===o&&wt.isXMLDoc(t)||(r=wt.attrHooks[e.toLowerCase()]||(wt.expr.match.bool.test(e)?ke:void 0)),void 0!==n?null===n?void wt.removeAttr(t,e):r&&"set"in r&&void 0!==(i=r.set(t,n,e))?i:(t.setAttribute(e,n+""),n):r&&"get"in r&&null!==(i=r.get(t,e))?i:(i=wt.find.attr(t,e),null==i?void 0:i))},attrHooks:{type:{set:function(t,e){if(!vt.radioValue&&"radio"===e&&o(t,"input")){var n=t.value;return t.setAttribute("type",e),n&&(t.value=n),e}}}},removeAttr:function(t,e){var n,i=0,r=e&&e.match(Et);if(r&&1===t.nodeType)for(;n=r[i++];)t.removeAttribute(n)}}),ke={set:function(t,e,n){return e===!1?wt.removeAttr(t,n):t.setAttribute(n,n),n}},wt.each(wt.expr.match.bool.source.match(/\w+/g),function(t,e){var n=Me[e]||wt.find.attr;Me[e]=function(t,e,i){var r,o,a=e.toLowerCase();return i||(o=Me[a],Me[a]=r,r=null!=n(t,e,i)?a:null,Me[a]=o),r}});var Se=/^(?:input|select|textarea|button)$/i,Ce=/^(?:a|area)$/i;wt.fn.extend({prop:function(t,e){return Rt(this,wt.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[wt.propFix[t]||t]})}}),wt.extend({prop:function(t,e,n){var i,r,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&wt.isXMLDoc(t)||(e=wt.propFix[e]||e,r=wt.propHooks[e]),void 0!==n?r&&"set"in r&&void 0!==(i=r.set(t,n,e))?i:t[e]=n:r&&"get"in r&&null!==(i=r.get(t,e))?i:t[e]},propHooks:{tabIndex:{get:function(t){var e=wt.find.attr(t,"tabindex");return e?parseInt(e,10):Se.test(t.nodeName)||Ce.test(t.nodeName)&&t.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),vt.optSelected||(wt.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),wt.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){wt.propFix[this.toLowerCase()]=this}),wt.fn.extend({addClass:function(t){var e,n,i,r,o,a,s,l=0;if(yt(t))return this.each(function(e){wt(this).addClass(t.call(this,e,Q(this)))});if(e=J(t),e.length)for(;n=this[l++];)if(r=Q(n),i=1===n.nodeType&&" "+X(r)+" "){for(a=0;o=e[a++];)i.indexOf(" "+o+" ")<0&&(i+=o+" ");s=X(i),r!==s&&n.setAttribute("class",s)}return this},removeClass:function(t){var e,n,i,r,o,a,s,l=0;if(yt(t))return this.each(function(e){wt(this).removeClass(t.call(this,e,Q(this)))});if(!arguments.length)return this.attr("class","");if(e=J(t),e.length)for(;n=this[l++];)if(r=Q(n),i=1===n.nodeType&&" "+X(r)+" "){for(a=0;o=e[a++];)for(;i.indexOf(" "+o+" ")>-1;)i=i.replace(" "+o+" "," ");s=X(i),r!==s&&n.setAttribute("class",s)}return this},toggleClass:function(t,e){var n=typeof t,i="string"===n||Array.isArray(t);return"boolean"==typeof e&&i?e?this.addClass(t):this.removeClass(t):yt(t)?this.each(function(n){wt(this).toggleClass(t.call(this,n,Q(this),e),e)}):this.each(function(){var e,r,o,a;if(i)for(r=0,o=wt(this),a=J(t);e=a[r++];)o.hasClass(e)?o.removeClass(e):o.addClass(e);else void 0!==t&&"boolean"!==n||(e=Q(this),e&&jt.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||t===!1?"":jt.get(this,"__className__")||""))})},hasClass:function(t){var e,n,i=0;for(e=" "+t+" ";n=this[i++];)if(1===n.nodeType&&(" "+X(Q(n))+" ").indexOf(e)>-1)return!0;return!1}});var De=/\r/g;wt.fn.extend({val:function(t){var e,n,i,r=this[0];{if(arguments.length)return i=yt(t),this.each(function(n){var r;1===this.nodeType&&(r=i?t.call(this,n,wt(this).val()):t,null==r?r="":"number"==typeof r?r+="":Array.isArray(r)&&(r=wt.map(r,function(t){return null==t?"":t+""})),e=wt.valHooks[this.type]||wt.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,r,"value")||(this.value=r))});if(r)return e=wt.valHooks[r.type]||wt.valHooks[r.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(n=e.get(r,"value"))?n:(n=r.value,"string"==typeof n?n.replace(De,""):null==n?"":n)}}}),wt.extend({valHooks:{option:{get:function(t){var e=wt.find.attr(t,"value");return null!=e?e:X(wt.text(t))}},select:{get:function(t){var e,n,i,r=t.options,a=t.selectedIndex,s="select-one"===t.type,l=s?null:[],u=s?a+1:r.length;for(i=a<0?u:s?a:0;i<u;i++)if(n=r[i],(n.selected||i===a)&&!n.disabled&&(!n.parentNode.disabled||!o(n.parentNode,"optgroup"))){if(e=wt(n).val(),s)return e;l.push(e)}return l},set:function(t,e){for(var n,i,r=t.options,o=wt.makeArray(e),a=r.length;a--;)i=r[a],(i.selected=wt.inArray(wt.valHooks.option.get(i),o)>-1)&&(n=!0);return n||(t.selectedIndex=-1),o}}}}),wt.each(["radio","checkbox"],function(){wt.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=wt.inArray(wt(t).val(),e)>-1}},vt.checkOn||(wt.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})}),vt.focusin="onfocusin"in t;var Te=/^(?:focusinfocus|focusoutblur)$/,Pe=function(t){t.stopPropagation()};wt.extend(wt.event,{trigger:function(e,n,i,r){var o,a,s,l,u,c,h,d,f=[i||at],p=pt.call(e,"type")?e.type:e,g=pt.call(e,"namespace")?e.namespace.split("."):[];if(a=d=s=i=i||at,3!==i.nodeType&&8!==i.nodeType&&!Te.test(p+wt.event.triggered)&&(p.indexOf(".")>-1&&(g=p.split("."),p=g.shift(),g.sort()),u=p.indexOf(":")<0&&"on"+p,e=e[wt.expando]?e:new wt.Event(p,"object"==typeof e&&e),e.isTrigger=r?2:3,e.namespace=g.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+g.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),n=null==n?[e]:wt.makeArray(n,[e]),h=wt.event.special[p]||{},r||!h.trigger||h.trigger.apply(i,n)!==!1)){if(!r&&!h.noBubble&&!bt(i)){for(l=h.delegateType||p,Te.test(l+p)||(a=a.parentNode);a;a=a.parentNode)f.push(a),s=a;s===(i.ownerDocument||at)&&f.push(s.defaultView||s.parentWindow||t)}for(o=0;(a=f[o++])&&!e.isPropagationStopped();)d=a,e.type=o>1?l:h.bindType||p,c=(jt.get(a,"events")||{})[e.type]&&jt.get(a,"handle"),c&&c.apply(a,n),c=u&&a[u],c&&c.apply&&Ht(a)&&(e.result=c.apply(a,n),e.result===!1&&e.preventDefault());return e.type=p,r||e.isDefaultPrevented()||h._default&&h._default.apply(f.pop(),n)!==!1||!Ht(i)||u&&yt(i[p])&&!bt(i)&&(s=i[u],s&&(i[u]=null),wt.event.triggered=p,e.isPropagationStopped()&&d.addEventListener(p,Pe),i[p](),e.isPropagationStopped()&&d.removeEventListener(p,Pe),wt.event.triggered=void 0,s&&(i[u]=s)),e.result}},simulate:function(t,e,n){var i=wt.extend(new wt.Event,n,{type:t,isSimulated:!0});wt.event.trigger(i,null,e)}}),wt.fn.extend({trigger:function(t,e){return this.each(function(){wt.event.trigger(t,e,this)})},triggerHandler:function(t,e){var n=this[0];if(n)return wt.event.trigger(t,e,n,!0)}}),vt.focusin||wt.each({focus:"focusin",blur:"focusout"},function(t,e){var n=function(t){wt.event.simulate(e,t.target,wt.event.fix(t))};wt.event.special[e]={setup:function(){var i=this.ownerDocument||this,r=jt.access(i,e);r||i.addEventListener(t,n,!0),jt.access(i,e,(r||0)+1)},teardown:function(){var i=this.ownerDocument||this,r=jt.access(i,e)-1;r?jt.access(i,e,r):(i.removeEventListener(t,n,!0),jt.remove(i,e))}}});var Ae=t.location,Oe=Date.now(),Ie=/\?/;wt.parseXML=function(e){var n;if(!e||"string"!=typeof e)return null;try{n=(new t.DOMParser).parseFromString(e,"text/xml")}catch(i){n=void 0}return n&&!n.getElementsByTagName("parsererror").length||wt.error("Invalid XML: "+e),n};var Le=/\[\]$/,Ee=/\r?\n/g,Fe=/^(?:submit|button|image|reset|file)$/i,Ne=/^(?:input|select|textarea|keygen)/i;wt.param=function(t,e){var n,i=[],r=function(t,e){var n=yt(e)?e():e;i[i.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==n?"":n)};if(Array.isArray(t)||t.jquery&&!wt.isPlainObject(t))wt.each(t,function(){r(this.name,this.value)});else for(n in t)K(n,t[n],e,r);return i.join("&")},wt.fn.extend({serialize:function(){return wt.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=wt.prop(this,"elements");return t?wt.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!wt(this).is(":disabled")&&Ne.test(this.nodeName)&&!Fe.test(t)&&(this.checked||!Qt.test(t))}).map(function(t,e){var n=wt(this).val();return null==n?null:Array.isArray(n)?wt.map(n,function(t){return{name:e.name,value:t.replace(Ee,"\r\n")}}):{name:e.name,value:n.replace(Ee,"\r\n")}}).get()}});var Re=/%20/g,ze=/#.*$/,We=/([?&])_=[^&]*/,He=/^(.*?):[ \t]*([^\r\n]*)$/gm,je=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Ye=/^(?:GET|HEAD)$/,Be=/^\/\//,$e={},Ve={},qe="*/".concat("*"),Ue=at.createElement("a");Ue.href=Ae.href,wt.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ae.href,type:"GET",isLocal:je.test(Ae.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":qe,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":wt.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?nt(nt(t,wt.ajaxSettings),e):nt(wt.ajaxSettings,t)},ajaxPrefilter:tt($e),ajaxTransport:tt(Ve),ajax:function(e,n){function i(e,n,i,s){var u,d,f,x,_,w=n;c||(c=!0,l&&t.clearTimeout(l),r=void 0,a=s||"",k.readyState=e>0?4:0,u=e>=200&&e<300||304===e,i&&(x=it(p,k,i)),x=rt(p,x,k,u),u?(p.ifModified&&(_=k.getResponseHeader("Last-Modified"),_&&(wt.lastModified[o]=_),_=k.getResponseHeader("etag"),_&&(wt.etag[o]=_)),204===e||"HEAD"===p.type?w="nocontent":304===e?w="notmodified":(w=x.state,d=x.data,f=x.error,u=!f)):(f=w,!e&&w||(w="error",e<0&&(e=0))),k.status=e,k.statusText=(n||w)+"",u?v.resolveWith(g,[d,w,k]):v.rejectWith(g,[k,w,f]),k.statusCode(b),b=void 0,h&&m.trigger(u?"ajaxSuccess":"ajaxError",[k,p,u?d:f]),y.fireWith(g,[k,w]),h&&(m.trigger("ajaxComplete",[k,p]),--wt.active||wt.event.trigger("ajaxStop")))}"object"==typeof e&&(n=e,e=void 0),n=n||{};var r,o,a,s,l,u,c,h,d,f,p=wt.ajaxSetup({},n),g=p.context||p,m=p.context&&(g.nodeType||g.jquery)?wt(g):wt.event,v=wt.Deferred(),y=wt.Callbacks("once memory"),b=p.statusCode||{},x={},_={},w="canceled",k={readyState:0,getResponseHeader:function(t){var e;if(c){if(!s)for(s={};e=He.exec(a);)s[e[1].toLowerCase()]=e[2];e=s[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return c?a:null},setRequestHeader:function(t,e){return null==c&&(t=_[t.toLowerCase()]=_[t.toLowerCase()]||t,x[t]=e),this},overrideMimeType:function(t){return null==c&&(p.mimeType=t),this},statusCode:function(t){var e;if(t)if(c)k.always(t[k.status]);else for(e in t)b[e]=[b[e],t[e]];return this},abort:function(t){var e=t||w;return r&&r.abort(e),i(0,e),this}};if(v.promise(k),p.url=((e||p.url||Ae.href)+"").replace(Be,Ae.protocol+"//"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=(p.dataType||"*").toLowerCase().match(Et)||[""],null==p.crossDomain){u=at.createElement("a");try{u.href=p.url,u.href=u.href,p.crossDomain=Ue.protocol+"//"+Ue.host!=u.protocol+"//"+u.host}catch(M){p.crossDomain=!0}}if(p.data&&p.processData&&"string"!=typeof p.data&&(p.data=wt.param(p.data,p.traditional)),et($e,p,n,k),c)return k;h=wt.event&&p.global,h&&0===wt.active++&&wt.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!Ye.test(p.type),o=p.url.replace(ze,""),p.hasContent?p.data&&p.processData&&0===(p.contentType||"").indexOf("application/x-www-form-urlencoded")&&(p.data=p.data.replace(Re,"+")):(f=p.url.slice(o.length),p.data&&(p.processData||"string"==typeof p.data)&&(o+=(Ie.test(o)?"&":"?")+p.data,delete p.data),p.cache===!1&&(o=o.replace(We,"$1"),f=(Ie.test(o)?"&":"?")+"_="+Oe++ +f),p.url=o+f),p.ifModified&&(wt.lastModified[o]&&k.setRequestHeader("If-Modified-Since",wt.lastModified[o]),wt.etag[o]&&k.setRequestHeader("If-None-Match",wt.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&k.setRequestHeader("Content-Type",p.contentType),k.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+qe+"; q=0.01":""):p.accepts["*"]);for(d in p.headers)k.setRequestHeader(d,p.headers[d]);if(p.beforeSend&&(p.beforeSend.call(g,k,p)===!1||c))return k.abort();if(w="abort",y.add(p.complete),k.done(p.success),k.fail(p.error),r=et(Ve,p,n,k)){if(k.readyState=1,h&&m.trigger("ajaxSend",[k,p]),c)return k;p.async&&p.timeout>0&&(l=t.setTimeout(function(){k.abort("timeout")},p.timeout));try{c=!1,r.send(x,i)}catch(M){if(c)throw M;i(-1,M)}}else i(-1,"No Transport");return k},getJSON:function(t,e,n){return wt.get(t,e,n,"json")},getScript:function(t,e){return wt.get(t,void 0,e,"script")}}),wt.each(["get","post"],function(t,e){wt[e]=function(t,n,i,r){return yt(n)&&(r=r||i,i=n,n=void 0),wt.ajax(wt.extend({url:t,type:e,dataType:r,data:n,success:i},wt.isPlainObject(t)&&t))}}),wt._evalUrl=function(t){return wt.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},wt.fn.extend({wrapAll:function(t){var e;return this[0]&&(yt(t)&&(t=t.call(this[0])),e=wt(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this},wrapInner:function(t){return yt(t)?this.each(function(e){wt(this).wrapInner(t.call(this,e))}):this.each(function(){var e=wt(this),n=e.contents();n.length?n.wrapAll(t):e.append(t)})},wrap:function(t){var e=yt(t);return this.each(function(n){wt(this).wrapAll(e?t.call(this,n):t)})},unwrap:function(t){return this.parent(t).not("body").each(function(){wt(this).replaceWith(this.childNodes)}),this}}),wt.expr.pseudos.hidden=function(t){return!wt.expr.pseudos.visible(t)},wt.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},wt.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(e){}};var Ge={0:200,1223:204},Ze=wt.ajaxSettings.xhr();vt.cors=!!Ze&&"withCredentials"in Ze,vt.ajax=Ze=!!Ze,wt.ajaxTransport(function(e){var n,i;if(vt.cors||Ze&&!e.crossDomain)return{send:function(r,o){var a,s=e.xhr();if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(a in e.xhrFields)s[a]=e.xhrFields[a];e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest");for(a in r)s.setRequestHeader(a,r[a]);n=function(t){return function(){n&&(n=i=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,"abort"===t?s.abort():"error"===t?"number"!=typeof s.status?o(0,"error"):o(s.status,s.statusText):o(Ge[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=n(),i=s.onerror=s.ontimeout=n("error"),void 0!==s.onabort?s.onabort=i:s.onreadystatechange=function(){4===s.readyState&&t.setTimeout(function(){n&&i()})},n=n("abort");try{s.send(e.hasContent&&e.data||null)}catch(l){if(n)throw l}},abort:function(){n&&n()}}}),wt.ajaxPrefilter(function(t){t.crossDomain&&(t.contents.script=!1)}),wt.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return wt.globalEval(t),t}}}),wt.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),wt.ajaxTransport("script",function(t){if(t.crossDomain){var e,n;return{send:function(i,r){e=wt("<script>").prop({charset:t.scriptCharset,src:t.url}).on("load error",n=function(t){e.remove(),n=null,t&&r("error"===t.type?404:200,t.type)}),at.head.appendChild(e[0])},abort:function(){n&&n()}}}});var Xe=[],Qe=/(=)\?(?=&|$)|\?\?/;wt.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Xe.pop()||wt.expando+"_"+Oe++;return this[t]=!0,t}}),wt.ajaxPrefilter("json jsonp",function(e,n,i){var r,o,a,s=e.jsonp!==!1&&(Qe.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Qe.test(e.data)&&"data");if(s||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=yt(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(Qe,"$1"+r):e.jsonp!==!1&&(e.url+=(Ie.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return a||wt.error(r+" was not called"),a[0]},e.dataTypes[0]="json",o=t[r],t[r]=function(){a=arguments},i.always(function(){void 0===o?wt(t).removeProp(r):t[r]=o,e[r]&&(e.jsonpCallback=n.jsonpCallback,Xe.push(r)),a&&yt(o)&&o(a[0]),a=o=void 0}),"script"}),vt.createHTMLDocument=function(){var t=at.implementation.createHTMLDocument("").body;return t.innerHTML="<form></form><form></form>",2===t.childNodes.length}(),wt.parseHTML=function(t,e,n){if("string"!=typeof t)return[];"boolean"==typeof e&&(n=e,e=!1);var i,r,o;return e||(vt.createHTMLDocument?(e=at.implementation.createHTMLDocument(""),i=e.createElement("base"),i.href=at.location.href,e.head.appendChild(i)):e=at),r=Tt.exec(t),o=!n&&[],r?[e.createElement(r[1])]:(r=k([t],e,o),o&&o.length&&wt(o).remove(),wt.merge([],r.childNodes))},wt.fn.load=function(t,e,n){var i,r,o,a=this,s=t.indexOf(" ");return s>-1&&(i=X(t.slice(s)),t=t.slice(0,s)),yt(e)?(n=e,e=void 0):e&&"object"==typeof e&&(r="POST"),a.length>0&&wt.ajax({url:t,type:r||"GET",dataType:"html",data:e}).done(function(t){o=arguments,a.html(i?wt("<div>").append(wt.parseHTML(t)).find(i):t)}).always(n&&function(t,e){a.each(function(){n.apply(this,o||[t.responseText,e,t])})}),this},wt.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){wt.fn[e]=function(t){return this.on(e,t)}}),wt.expr.pseudos.animated=function(t){return wt.grep(wt.timers,function(e){return t===e.elem}).length},wt.offset={setOffset:function(t,e,n){var i,r,o,a,s,l,u,c=wt.css(t,"position"),h=wt(t),d={};"static"===c&&(t.style.position="relative"),s=h.offset(),o=wt.css(t,"top"),l=wt.css(t,"left"),u=("absolute"===c||"fixed"===c)&&(o+l).indexOf("auto")>-1,u?(i=h.position(),a=i.top,r=i.left):(a=parseFloat(o)||0,r=parseFloat(l)||0),yt(e)&&(e=e.call(t,n,wt.extend({},s))),null!=e.top&&(d.top=e.top-s.top+a),null!=e.left&&(d.left=e.left-s.left+r),"using"in e?e.using.call(t,d):h.css(d)}},wt.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){wt.offset.setOffset(this,t,e)});var e,n,i=this[0];if(i)return i.getClientRects().length?(e=i.getBoundingClientRect(),n=i.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}},position:function(){if(this[0]){var t,e,n,i=this[0],r={top:0,left:0};if("fixed"===wt.css(i,"position"))e=i.getBoundingClientRect();else{for(e=this.offset(),n=i.ownerDocument,t=i.offsetParent||n.documentElement;t&&(t===n.body||t===n.documentElement)&&"static"===wt.css(t,"position");)t=t.parentNode;t&&t!==i&&1===t.nodeType&&(r=wt(t).offset(),r.top+=wt.css(t,"borderTopWidth",!0),r.left+=wt.css(t,"borderLeftWidth",!0))}return{top:e.top-r.top-wt.css(i,"marginTop",!0),left:e.left-r.left-wt.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===wt.css(t,"position");)t=t.offsetParent;return t||ne})}}),wt.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var n="pageYOffset"===e;wt.fn[t]=function(i){return Rt(this,function(t,i,r){var o;return bt(t)?o=t:9===t.nodeType&&(o=t.defaultView),void 0===r?o?o[e]:t[i]:void(o?o.scrollTo(n?o.pageXOffset:r,n?r:o.pageYOffset):t[i]=r)},t,i,arguments.length)}}),wt.each(["top","left"],function(t,e){wt.cssHooks[e]=N(vt.pixelPosition,function(t,n){if(n)return n=F(t,e),ce.test(n)?wt(t).position()[e]+"px":n})}),wt.each({Height:"height",Width:"width"},function(t,e){wt.each({padding:"inner"+t,content:e,"":"outer"+t},function(n,i){wt.fn[i]=function(r,o){var a=arguments.length&&(n||"boolean"!=typeof r),s=n||(r===!0||o===!0?"margin":"border");return Rt(this,function(e,n,r){var o;return bt(e)?0===i.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(o=e.documentElement,Math.max(e.body["scroll"+t],o["scroll"+t],e.body["offset"+t],o["offset"+t],o["client"+t])):void 0===r?wt.css(e,n,s):wt.style(e,n,r,s)},e,a?r:void 0,a)}})}),wt.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(t,e){wt.fn[e]=function(t,n){return arguments.length>0?this.on(e,null,t,n):this.trigger(e)}}),wt.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),wt.fn.extend({bind:function(t,e,n){return this.on(t,null,e,n)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,n,i){return this.on(e,t,n,i)},undelegate:function(t,e,n){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",n)}}),wt.proxy=function(t,e){var n,i,r;if("string"==typeof e&&(n=t[e],e=t,t=n),yt(t))return i=lt.call(arguments,2),r=function(){return t.apply(e||this,i.concat(lt.call(arguments)))},r.guid=t.guid=t.guid||wt.guid++,r},wt.holdReady=function(t){t?wt.readyWait++:wt.ready(!0)},wt.isArray=Array.isArray,wt.parseJSON=JSON.parse,wt.nodeName=o,wt.isFunction=yt,wt.isWindow=bt,wt.camelCase=p,wt.type=i,wt.now=Date.now,wt.isNumeric=function(t){var e=wt.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},"function"==typeof define&&define.amd&&define("jquery",[],function(){return wt});var Je=t.jQuery,Ke=t.$;return wt.noConflict=function(e){return t.$===wt&&(t.$=Ke),e&&t.jQuery===wt&&(t.jQuery=Je),wt},e||(t.jQuery=t.$=wt),wt}),!function(t,e,n,i){function r(e,n){this.settings=null,this.options=t.extend({},r.Defaults,n),this.$element=t(e),this._handlers={},this._plugins={},this._supress={},this._current=null,this._speed=null,this._coordinates=[],this._breakpoint=null,this._width=null,this._items=[],this._clones=[],this._mergers=[],this._widths=[],this._invalidated={},this._pipe=[],this._drag={time:null,target:null,pointer:null,stage:{start:null,current:null},direction:null},this._states={current:{},tags:{initializing:["busy"],animating:["busy"],dragging:["interacting"]}},t.each(["onResize","onThrottledResize"],t.proxy(function(e,n){this._handlers[n]=t.proxy(this[n],this)},this)),t.each(r.Plugins,t.proxy(function(t,e){this._plugins[t.charAt(0).toLowerCase()+t.slice(1)]=new e(this)},this)),t.each(r.Workers,t.proxy(function(e,n){this._pipe.push({filter:n.filter,run:t.proxy(n.run,this)})},this)),this.setup(),this.initialize()}r.Defaults={items:3,loop:!1,center:!1,rewind:!1,checkVisibility:!0,mouseDrag:!0,touchDrag:!0,pullDrag:!0,freeDrag:!1,margin:0,stagePadding:0,merge:!1,mergeFit:!0,autoWidth:!1,startPosition:0,rtl:!1,smartSpeed:250,fluidSpeed:!1,dragEndSpeed:!1,responsive:{},responsiveRefreshRate:200,responsiveBaseElement:e,fallbackEasing:"swing",slideTransition:"",info:!1,nestedItemSelector:!1,itemElement:"div",stageElement:"div",refreshClass:"owl-refresh",loadedClass:"owl-loaded",loadingClass:"owl-loading",rtlClass:"owl-rtl",responsiveClass:"owl-responsive",dragClass:"owl-drag",itemClass:"owl-item",stageClass:"owl-stage",stageOuterClass:"owl-stage-outer",grabClass:"owl-grab"},r.Width={Default:"default",Inner:"inner",Outer:"outer"},r.Type={Event:"event",State:"state"},r.Plugins={},r.Workers=[{filter:["width","settings"],run:function(){this._width=this.$element.width()}},{filter:["width","items","settings"],run:function(t){t.current=this._items&&this._items[this.relative(this._current)]}},{filter:["items","settings"],run:function(){this.$stage.children(".cloned").remove()}},{filter:["width","items","settings"],run:function(t){var e=this.settings.margin||"",n=!this.settings.autoWidth,i=this.settings.rtl,r={width:"auto","margin-left":i?e:"","margin-right":i?"":e};!n&&this.$stage.children().css(r),t.css=r}},{filter:["width","items","settings"],run:function(t){var e=(this.width()/this.settings.items).toFixed(3)-this.settings.margin,n=null,i=this._items.length,r=!this.settings.autoWidth,o=[];for(t.items={merge:!1,width:e};i--;)n=this._mergers[i],n=this.settings.mergeFit&&Math.min(n,this.settings.items)||n,t.items.merge=n>1||t.items.merge,o[i]=r?e*n:this._items[i].width();this._widths=o}},{filter:["items","settings"],run:function(){var e=[],n=this._items,i=this.settings,r=Math.max(2*i.items,4),o=2*Math.ceil(n.length/2),a=i.loop&&n.length?i.rewind?r:Math.max(r,o):0,s="",l="";for(a/=2;a>0;)e.push(this.normalize(e.length/2,!0)),s+=n[e[e.length-1]][0].outerHTML,e.push(this.normalize(n.length-1-(e.length-1)/2,!0)),l=n[e[e.length-1]][0].outerHTML+l,a-=1;this._clones=e,t(s).addClass("cloned").appendTo(this.$stage),t(l).addClass("cloned").prependTo(this.$stage)}},{filter:["width","items","settings"],run:function(){for(var t=this.settings.rtl?1:-1,e=this._clones.length+this._items.length,n=-1,i=0,r=0,o=[];++n<e;)i=o[n-1]||0,r=this._widths[this.relative(n)]+this.settings.margin,o.push(i+r*t);this._coordinates=o}},{filter:["width","items","settings"],run:function(){var t=this.settings.stagePadding,e=this._coordinates,n={width:Math.ceil(Math.abs(e[e.length-1]))+2*t,"padding-left":t||"","padding-right":t||""};this.$stage.css(n)}},{filter:["width","items","settings"],run:function(t){var e=this._coordinates.length,n=!this.settings.autoWidth,i=this.$stage.children();if(n&&t.items.merge)for(;e--;)t.css.width=this._widths[this.relative(e)],i.eq(e).css(t.css);else n&&(t.css.width=t.items.width,i.css(t.css))}},{filter:["items"],run:function(){this._coordinates.length<1&&this.$stage.removeAttr("style")}},{filter:["width","items","settings"],run:function(t){t.current=t.current?this.$stage.children().index(t.current):0,t.current=Math.max(this.minimum(),Math.min(this.maximum(),t.current)),this.reset(t.current)}},{filter:["position"],run:function(){this.animate(this.coordinates(this._current))}},{filter:["width","position","items","settings"],run:function(){var t,e,n,i,r=this.settings.rtl?1:-1,o=2*this.settings.stagePadding,a=this.coordinates(this.current())+o,s=a+this.width()*r,l=[];for(n=0,i=this._coordinates.length;n<i;n++)t=this._coordinates[n-1]||0,e=Math.abs(this._coordinates[n])+o*r,(this.op(t,"<=",a)&&this.op(t,">",s)||this.op(e,"<",a)&&this.op(e,">",s))&&l.push(n);this.$stage.children(".active").removeClass("active"),this.$stage.children(":eq("+l.join("), :eq(")+")").addClass("active"),this.$stage.children(".center").removeClass("center"),this.settings.center&&this.$stage.children().eq(this.current()).addClass("center")}}],r.prototype.initializeStage=function(){this.$stage=this.$element.find("."+this.settings.stageClass),this.$stage.length||(this.$element.addClass(this.options.loadingClass),this.$stage=t("<"+this.settings.stageElement+">",{"class":this.settings.stageClass}).wrap(t("<div/>",{"class":this.settings.stageOuterClass})),this.$element.append(this.$stage.parent()))},r.prototype.initializeItems=function(){var e=this.$element.find(".owl-item");return e.length?(this._items=e.get().map(function(e){return t(e)}),this._mergers=this._items.map(function(){return 1}),void this.refresh()):(this.replace(this.$element.children().not(this.$stage.parent())),this.isVisible()?this.refresh():this.invalidate("width"),this.$element.removeClass(this.options.loadingClass).addClass(this.options.loadedClass),void 0)},r.prototype.initialize=function(){if(this.enter("initializing"),
this.trigger("initialize"),this.$element.toggleClass(this.settings.rtlClass,this.settings.rtl),this.settings.autoWidth&&!this.is("pre-loading")){var t,e,n;t=this.$element.find("img"),e=this.settings.nestedItemSelector?"."+this.settings.nestedItemSelector:i,n=this.$element.children(e).width(),t.length&&n<=0&&this.preloadAutoWidthImages(t)}this.initializeStage(),this.initializeItems(),this.registerEventHandlers(),this.leave("initializing"),this.trigger("initialized")},r.prototype.isVisible=function(){return!this.settings.checkVisibility||this.$element.is(":visible")},r.prototype.setup=function(){var e=this.viewport(),n=this.options.responsive,i=-1,r=null;n?(t.each(n,function(t){t<=e&&t>i&&(i=Number(t))}),r=t.extend({},this.options,n[i]),"function"==typeof r.stagePadding&&(r.stagePadding=r.stagePadding()),delete r.responsive,r.responsiveClass&&this.$element.attr("class",this.$element.attr("class").replace(new RegExp("("+this.options.responsiveClass+"-)\\S+\\s","g"),"$1"+i))):r=t.extend({},this.options),this.trigger("change",{property:{name:"settings",value:r}}),this._breakpoint=i,this.settings=r,this.invalidate("settings"),this.trigger("changed",{property:{name:"settings",value:this.settings}})},r.prototype.optionsLogic=function(){this.settings.autoWidth&&(this.settings.stagePadding=!1,this.settings.merge=!1)},r.prototype.prepare=function(e){var n=this.trigger("prepare",{content:e});return n.data||(n.data=t("<"+this.settings.itemElement+"/>").addClass(this.options.itemClass).append(e)),this.trigger("prepared",{content:n.data}),n.data},r.prototype.update=function(){for(var e=0,n=this._pipe.length,i=t.proxy(function(t){return this[t]},this._invalidated),r={};e<n;)(this._invalidated.all||t.grep(this._pipe[e].filter,i).length>0)&&this._pipe[e].run(r),e++;this._invalidated={},!this.is("valid")&&this.enter("valid")},r.prototype.width=function(t){switch(t=t||r.Width.Default){case r.Width.Inner:case r.Width.Outer:return this._width;default:return this._width-2*this.settings.stagePadding+this.settings.margin}},r.prototype.refresh=function(){this.enter("refreshing"),this.trigger("refresh"),this.setup(),this.optionsLogic(),this.$element.addClass(this.options.refreshClass),this.update(),this.$element.removeClass(this.options.refreshClass),this.leave("refreshing"),this.trigger("refreshed")},r.prototype.onThrottledResize=function(){e.clearTimeout(this.resizeTimer),this.resizeTimer=e.setTimeout(this._handlers.onResize,this.settings.responsiveRefreshRate)},r.prototype.onResize=function(){return!!this._items.length&&this._width!==this.$element.width()&&!!this.isVisible()&&(this.enter("resizing"),this.trigger("resize").isDefaultPrevented()?(this.leave("resizing"),!1):(this.invalidate("width"),this.refresh(),this.leave("resizing"),void this.trigger("resized")))},r.prototype.registerEventHandlers=function(){t.support.transition&&this.$stage.on(t.support.transition.end+".owl.core",t.proxy(this.onTransitionEnd,this)),!1!==this.settings.responsive&&this.on(e,"resize",this._handlers.onThrottledResize),this.settings.mouseDrag&&(this.$element.addClass(this.options.dragClass),this.$stage.on("mousedown.owl.core",t.proxy(this.onDragStart,this)),this.$stage.on("dragstart.owl.core selectstart.owl.core",function(){return!1})),this.settings.touchDrag&&(this.$stage.on("touchstart.owl.core",t.proxy(this.onDragStart,this)),this.$stage.on("touchcancel.owl.core",t.proxy(this.onDragEnd,this)))},r.prototype.onDragStart=function(e){var i=null;3!==e.which&&(t.support.transform?(i=this.$stage.css("transform").replace(/.*\(|\)| /g,"").split(","),i={x:i[16===i.length?12:4],y:i[16===i.length?13:5]}):(i=this.$stage.position(),i={x:this.settings.rtl?i.left+this.$stage.width()-this.width()+this.settings.margin:i.left,y:i.top}),this.is("animating")&&(t.support.transform?this.animate(i.x):this.$stage.stop(),this.invalidate("position")),this.$element.toggleClass(this.options.grabClass,"mousedown"===e.type),this.speed(0),this._drag.time=(new Date).getTime(),this._drag.target=t(e.target),this._drag.stage.start=i,this._drag.stage.current=i,this._drag.pointer=this.pointer(e),t(n).on("mouseup.owl.core touchend.owl.core",t.proxy(this.onDragEnd,this)),t(n).one("mousemove.owl.core touchmove.owl.core",t.proxy(function(e){var i=this.difference(this._drag.pointer,this.pointer(e));t(n).on("mousemove.owl.core touchmove.owl.core",t.proxy(this.onDragMove,this)),Math.abs(i.x)<Math.abs(i.y)&&this.is("valid")||(e.preventDefault(),this.enter("dragging"),this.trigger("drag"))},this)))},r.prototype.onDragMove=function(t){var e=null,n=null,i=null,r=this.difference(this._drag.pointer,this.pointer(t)),o=this.difference(this._drag.stage.start,r);this.is("dragging")&&(t.preventDefault(),this.settings.loop?(e=this.coordinates(this.minimum()),n=this.coordinates(this.maximum()+1)-e,o.x=((o.x-e)%n+n)%n+e):(e=this.settings.rtl?this.coordinates(this.maximum()):this.coordinates(this.minimum()),n=this.settings.rtl?this.coordinates(this.minimum()):this.coordinates(this.maximum()),i=this.settings.pullDrag?-1*r.x/5:0,o.x=Math.max(Math.min(o.x,e+i),n+i)),this._drag.stage.current=o,this.animate(o.x))},r.prototype.onDragEnd=function(e){var i=this.difference(this._drag.pointer,this.pointer(e)),r=this._drag.stage.current,o=i.x>0^this.settings.rtl?"left":"right";t(n).off(".owl.core"),this.$element.removeClass(this.options.grabClass),(0!==i.x&&this.is("dragging")||!this.is("valid"))&&(this.speed(this.settings.dragEndSpeed||this.settings.smartSpeed),this.current(this.closest(r.x,0!==i.x?o:this._drag.direction)),this.invalidate("position"),this.update(),this._drag.direction=o,(Math.abs(i.x)>3||(new Date).getTime()-this._drag.time>300)&&this._drag.target.one("click.owl.core",function(){return!1})),this.is("dragging")&&(this.leave("dragging"),this.trigger("dragged"))},r.prototype.closest=function(e,n){var r=-1,o=30,a=this.width(),s=this.coordinates();return this.settings.freeDrag||t.each(s,t.proxy(function(t,l){return"left"===n&&e>l-o&&e<l+o?r=t:"right"===n&&e>l-a-o&&e<l-a+o?r=t+1:this.op(e,"<",l)&&this.op(e,">",s[t+1]!==i?s[t+1]:l-a)&&(r="left"===n?t+1:t),-1===r},this)),this.settings.loop||(this.op(e,">",s[this.minimum()])?r=e=this.minimum():this.op(e,"<",s[this.maximum()])&&(r=e=this.maximum())),r},r.prototype.animate=function(e){var n=this.speed()>0;this.is("animating")&&this.onTransitionEnd(),n&&(this.enter("animating"),this.trigger("translate")),t.support.transform3d&&t.support.transition?this.$stage.css({transform:"translate3d("+e+"px,0px,0px)",transition:this.speed()/1e3+"s"+(this.settings.slideTransition?" "+this.settings.slideTransition:"")}):n?this.$stage.animate({left:e+"px"},this.speed(),this.settings.fallbackEasing,t.proxy(this.onTransitionEnd,this)):this.$stage.css({left:e+"px"})},r.prototype.is=function(t){return this._states.current[t]&&this._states.current[t]>0},r.prototype.current=function(t){if(t===i)return this._current;if(0===this._items.length)return i;if(t=this.normalize(t),this._current!==t){var e=this.trigger("change",{property:{name:"position",value:t}});e.data!==i&&(t=this.normalize(e.data)),this._current=t,this.invalidate("position"),this.trigger("changed",{property:{name:"position",value:this._current}})}return this._current},r.prototype.invalidate=function(e){return"string"===t.type(e)&&(this._invalidated[e]=!0,this.is("valid")&&this.leave("valid")),t.map(this._invalidated,function(t,e){return e})},r.prototype.reset=function(t){(t=this.normalize(t))!==i&&(this._speed=0,this._current=t,this.suppress(["translate","translated"]),this.animate(this.coordinates(t)),this.release(["translate","translated"]))},r.prototype.normalize=function(t,e){var n=this._items.length,r=e?0:this._clones.length;return!this.isNumeric(t)||n<1?t=i:(t<0||t>=n+r)&&(t=((t-r/2)%n+n)%n+r/2),t},r.prototype.relative=function(t){return t-=this._clones.length/2,this.normalize(t,!0)},r.prototype.maximum=function(t){var e,n,i,r=this.settings,o=this._coordinates.length;if(r.loop)o=this._clones.length/2+this._items.length-1;else if(r.autoWidth||r.merge){if(e=this._items.length)for(n=this._items[--e].width(),i=this.$element.width();e--&&!((n+=this._items[e].width()+this.settings.margin)>i););o=e+1}else o=r.center?this._items.length-1:this._items.length-r.items;return t&&(o-=this._clones.length/2),Math.max(o,0)},r.prototype.minimum=function(t){return t?0:this._clones.length/2},r.prototype.items=function(t){return t===i?this._items.slice():(t=this.normalize(t,!0),this._items[t])},r.prototype.mergers=function(t){return t===i?this._mergers.slice():(t=this.normalize(t,!0),this._mergers[t])},r.prototype.clones=function(e){var n=this._clones.length/2,r=n+this._items.length,o=function(t){return t%2==0?r+t/2:n-(t+1)/2};return e===i?t.map(this._clones,function(t,e){return o(e)}):t.map(this._clones,function(t,n){return t===e?o(n):null})},r.prototype.speed=function(t){return t!==i&&(this._speed=t),this._speed},r.prototype.coordinates=function(e){var n,r=1,o=e-1;return e===i?t.map(this._coordinates,t.proxy(function(t,e){return this.coordinates(e)},this)):(this.settings.center?(this.settings.rtl&&(r=-1,o=e+1),n=this._coordinates[e],n+=(this.width()-n+(this._coordinates[o]||0))/2*r):n=this._coordinates[o]||0,n=Math.ceil(n))},r.prototype.duration=function(t,e,n){return 0===n?0:Math.min(Math.max(Math.abs(e-t),1),6)*Math.abs(n||this.settings.smartSpeed)},r.prototype.to=function(t,e){var n=this.current(),i=null,r=t-this.relative(n),o=(r>0)-(r<0),a=this._items.length,s=this.minimum(),l=this.maximum();this.settings.loop?(!this.settings.rewind&&Math.abs(r)>a/2&&(r+=-1*o*a),t=n+r,(i=((t-s)%a+a)%a+s)!==t&&i-r<=l&&i-r>0&&(n=i-r,t=i,this.reset(n))):this.settings.rewind?(l+=1,t=(t%l+l)%l):t=Math.max(s,Math.min(l,t)),this.speed(this.duration(n,t,e)),this.current(t),this.isVisible()&&this.update()},r.prototype.next=function(t){t=t||!1,this.to(this.relative(this.current())+1,t)},r.prototype.prev=function(t){t=t||!1,this.to(this.relative(this.current())-1,t)},r.prototype.onTransitionEnd=function(t){return(t===i||(t.stopPropagation(),(t.target||t.srcElement||t.originalTarget)===this.$stage.get(0)))&&(this.leave("animating"),void this.trigger("translated"))},r.prototype.viewport=function(){var i;return this.options.responsiveBaseElement!==e?i=t(this.options.responsiveBaseElement).width():e.innerWidth?i=e.innerWidth:n.documentElement&&n.documentElement.clientWidth?i=n.documentElement.clientWidth:console.warn("Can not detect viewport width."),i},r.prototype.replace=function(e){this.$stage.empty(),this._items=[],e&&(e=e instanceof jQuery?e:t(e)),this.settings.nestedItemSelector&&(e=e.find("."+this.settings.nestedItemSelector)),e.filter(function(){return 1===this.nodeType}).each(t.proxy(function(t,e){e=this.prepare(e),this.$stage.append(e),this._items.push(e),this._mergers.push(1*e.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)},this)),this.reset(this.isNumeric(this.settings.startPosition)?this.settings.startPosition:0),this.invalidate("items")},r.prototype.add=function(e,n){var r=this.relative(this._current);n=n===i?this._items.length:this.normalize(n,!0),e=e instanceof jQuery?e:t(e),this.trigger("add",{content:e,position:n}),e=this.prepare(e),0===this._items.length||n===this._items.length?(0===this._items.length&&this.$stage.append(e),0!==this._items.length&&this._items[n-1].after(e),this._items.push(e),this._mergers.push(1*e.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)):(this._items[n].before(e),this._items.splice(n,0,e),this._mergers.splice(n,0,1*e.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)),this._items[r]&&this.reset(this._items[r].index()),this.invalidate("items"),this.trigger("added",{content:e,position:n})},r.prototype.remove=function(t){(t=this.normalize(t,!0))!==i&&(this.trigger("remove",{content:this._items[t],position:t}),this._items[t].remove(),this._items.splice(t,1),this._mergers.splice(t,1),this.invalidate("items"),this.trigger("removed",{content:null,position:t}))},r.prototype.preloadAutoWidthImages=function(e){e.each(t.proxy(function(e,n){this.enter("pre-loading"),n=t(n),t(new Image).one("load",t.proxy(function(t){n.attr("src",t.target.src),n.css("opacity",1),this.leave("pre-loading"),!this.is("pre-loading")&&!this.is("initializing")&&this.refresh()},this)).attr("src",n.attr("src")||n.attr("data-src")||n.attr("data-src-retina"))},this))},r.prototype.destroy=function(){this.$element.off(".owl.core"),this.$stage.off(".owl.core"),t(n).off(".owl.core"),!1!==this.settings.responsive&&(e.clearTimeout(this.resizeTimer),this.off(e,"resize",this._handlers.onThrottledResize));for(var i in this._plugins)this._plugins[i].destroy();this.$stage.children(".cloned").remove(),this.$stage.unwrap(),this.$stage.children().contents().unwrap(),this.$stage.children().unwrap(),this.$stage.remove(),this.$element.removeClass(this.options.refreshClass).removeClass(this.options.loadingClass).removeClass(this.options.loadedClass).removeClass(this.options.rtlClass).removeClass(this.options.dragClass).removeClass(this.options.grabClass).attr("class",this.$element.attr("class").replace(new RegExp(this.options.responsiveClass+"-\\S+\\s","g"),"")).removeData("owl.carousel")},r.prototype.op=function(t,e,n){var i=this.settings.rtl;switch(e){case"<":return i?t>n:t<n;case">":return i?t<n:t>n;case">=":return i?t<=n:t>=n;case"<=":return i?t>=n:t<=n}},r.prototype.on=function(t,e,n,i){t.addEventListener?t.addEventListener(e,n,i):t.attachEvent&&t.attachEvent("on"+e,n)},r.prototype.off=function(t,e,n,i){t.removeEventListener?t.removeEventListener(e,n,i):t.detachEvent&&t.detachEvent("on"+e,n)},r.prototype.trigger=function(e,n,i,o,a){var s={item:{count:this._items.length,index:this.current()}},l=t.camelCase(t.grep(["on",e,i],function(t){return t}).join("-").toLowerCase()),u=t.Event([e,"owl",i||"carousel"].join(".").toLowerCase(),t.extend({relatedTarget:this},s,n));return this._supress[e]||(t.each(this._plugins,function(t,e){e.onTrigger&&e.onTrigger(u)}),this.register({type:r.Type.Event,name:e}),this.$element.trigger(u),this.settings&&"function"==typeof this.settings[l]&&this.settings[l].call(this,u)),u},r.prototype.enter=function(e){t.each([e].concat(this._states.tags[e]||[]),t.proxy(function(t,e){this._states.current[e]===i&&(this._states.current[e]=0),this._states.current[e]++},this))},r.prototype.leave=function(e){t.each([e].concat(this._states.tags[e]||[]),t.proxy(function(t,e){this._states.current[e]--},this))},r.prototype.register=function(e){if(e.type===r.Type.Event){if(t.event.special[e.name]||(t.event.special[e.name]={}),!t.event.special[e.name].owl){var n=t.event.special[e.name]._default;t.event.special[e.name]._default=function(t){return!n||!n.apply||t.namespace&&-1!==t.namespace.indexOf("owl")?t.namespace&&t.namespace.indexOf("owl")>-1:n.apply(this,arguments)},t.event.special[e.name].owl=!0}}else e.type===r.Type.State&&(this._states.tags[e.name]?this._states.tags[e.name]=this._states.tags[e.name].concat(e.tags):this._states.tags[e.name]=e.tags,this._states.tags[e.name]=t.grep(this._states.tags[e.name],t.proxy(function(n,i){return t.inArray(n,this._states.tags[e.name])===i},this)))},r.prototype.suppress=function(e){t.each(e,t.proxy(function(t,e){this._supress[e]=!0},this))},r.prototype.release=function(e){t.each(e,t.proxy(function(t,e){delete this._supress[e]},this))},r.prototype.pointer=function(t){var n={x:null,y:null};return t=t.originalEvent||t||e.event,t=t.touches&&t.touches.length?t.touches[0]:t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:t,t.pageX?(n.x=t.pageX,n.y=t.pageY):(n.x=t.clientX,n.y=t.clientY),n},r.prototype.isNumeric=function(t){return!isNaN(parseFloat(t))},r.prototype.difference=function(t,e){return{x:t.x-e.x,y:t.y-e.y}},t.fn.owlCarousel=function(e){var n=Array.prototype.slice.call(arguments,1);return this.each(function(){var i=t(this),o=i.data("owl.carousel");o||(o=new r(this,"object"==typeof e&&e),i.data("owl.carousel",o),t.each(["next","prev","to","destroy","refresh","replace","add","remove"],function(e,n){o.register({type:r.Type.Event,name:n}),o.$element.on(n+".owl.carousel.core",t.proxy(function(t){t.namespace&&t.relatedTarget!==this&&(this.suppress([n]),o[n].apply(this,[].slice.call(arguments,1)),this.release([n]))},o))})),"string"==typeof e&&"_"!==e.charAt(0)&&o[e].apply(o,n)})},t.fn.owlCarousel.Constructor=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this._core=e,this._interval=null,this._visible=null,this._handlers={"initialized.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.autoRefresh&&this.watch()},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this._core.$element.on(this._handlers)};r.Defaults={autoRefresh:!0,autoRefreshInterval:500},r.prototype.watch=function(){this._interval||(this._visible=this._core.isVisible(),this._interval=e.setInterval(t.proxy(this.refresh,this),this._core.settings.autoRefreshInterval))},r.prototype.refresh=function(){this._core.isVisible()!==this._visible&&(this._visible=!this._visible,this._core.$element.toggleClass("owl-hidden",!this._visible),this._visible&&this._core.invalidate("width")&&this._core.refresh())},r.prototype.destroy=function(){var t,n;e.clearInterval(this._interval);for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(n in Object.getOwnPropertyNames(this))"function"!=typeof this[n]&&(this[n]=null)},t.fn.owlCarousel.Constructor.Plugins.AutoRefresh=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this._core=e,this._loaded=[],this._handlers={"initialized.owl.carousel change.owl.carousel resized.owl.carousel":t.proxy(function(e){if(e.namespace&&this._core.settings&&this._core.settings.lazyLoad&&(e.property&&"position"==e.property.name||"initialized"==e.type)){var n=this._core.settings,r=n.center&&Math.ceil(n.items/2)||n.items,o=n.center&&-1*r||0,a=(e.property&&e.property.value!==i?e.property.value:this._core.current())+o,s=this._core.clones().length,l=t.proxy(function(t,e){this.load(e)},this);for(n.lazyLoadEager>0&&(r+=n.lazyLoadEager,n.loop&&(a-=n.lazyLoadEager,r++));o++<r;)this.load(s/2+this._core.relative(a)),s&&t.each(this._core.clones(this._core.relative(a)),l),a++}},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this._core.$element.on(this._handlers)};r.Defaults={lazyLoad:!1,lazyLoadEager:0},r.prototype.load=function(n){var i=this._core.$stage.children().eq(n),r=i&&i.find(".owl-lazy");!r||t.inArray(i.get(0),this._loaded)>-1||(r.each(t.proxy(function(n,i){var r,o=t(i),a=e.devicePixelRatio>1&&o.attr("data-src-retina")||o.attr("data-src")||o.attr("data-srcset");this._core.trigger("load",{element:o,url:a},"lazy"),o.is("img")?o.one("load.owl.lazy",t.proxy(function(){o.css("opacity",1),this._core.trigger("loaded",{element:o,url:a},"lazy")},this)).attr("src",a):o.is("source")?o.one("load.owl.lazy",t.proxy(function(){this._core.trigger("loaded",{element:o,url:a},"lazy")},this)).attr("srcset",a):(r=new Image,r.onload=t.proxy(function(){o.css({"background-image":'url("'+a+'")',opacity:"1"}),this._core.trigger("loaded",{element:o,url:a},"lazy")},this),r.src=a)},this)),this._loaded.push(i.get(0)))},r.prototype.destroy=function(){var t,e;for(t in this.handlers)this._core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.Lazy=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(n){this._core=n,this._previousHeight=null,this._handlers={"initialized.owl.carousel refreshed.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&this.update()},this),"changed.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&"position"===t.property.name&&this.update()},this),"loaded.owl.lazy":t.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&t.element.closest("."+this._core.settings.itemClass).index()===this._core.current()&&this.update()},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this._core.$element.on(this._handlers),this._intervalId=null;var i=this;t(e).on("load",function(){i._core.settings.autoHeight&&i.update()}),t(e).resize(function(){i._core.settings.autoHeight&&(null!=i._intervalId&&clearTimeout(i._intervalId),i._intervalId=setTimeout(function(){i.update()},250))})};r.Defaults={autoHeight:!1,autoHeightClass:"owl-height"},r.prototype.update=function(){var e=this._core._current,n=e+this._core.settings.items,i=this._core.settings.lazyLoad,r=this._core.$stage.children().toArray().slice(e,n),o=[],a=0;t.each(r,function(e,n){o.push(t(n).height())}),a=Math.max.apply(null,o),a<=1&&i&&this._previousHeight&&(a=this._previousHeight),this._previousHeight=a,this._core.$stage.parent().height(a).addClass(this._core.settings.autoHeightClass)},r.prototype.destroy=function(){var t,e;for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.AutoHeight=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this._core=e,this._videos={},this._playing=null,this._handlers={"initialized.owl.carousel":t.proxy(function(t){t.namespace&&this._core.register({type:"state",name:"playing",tags:["interacting"]})},this),"resize.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.video&&this.isInFullScreen()&&t.preventDefault()},this),"refreshed.owl.carousel":t.proxy(function(t){t.namespace&&this._core.is("resizing")&&this._core.$stage.find(".cloned .owl-video-frame").remove()},this),"changed.owl.carousel":t.proxy(function(t){t.namespace&&"position"===t.property.name&&this._playing&&this.stop()},this),"prepared.owl.carousel":t.proxy(function(e){if(e.namespace){var n=t(e.content).find(".owl-video");n.length&&(n.css("display","none"),this.fetch(n,t(e.content)))}},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this._core.$element.on(this._handlers),this._core.$element.on("click.owl.video",".owl-video-play-icon",t.proxy(function(t){this.play(t)},this))};r.Defaults={video:!1,videoHeight:!1,videoWidth:!1},r.prototype.fetch=function(t,e){var n=function(){return t.attr("data-vimeo-id")?"vimeo":t.attr("data-vzaar-id")?"vzaar":"youtube"}(),i=t.attr("data-vimeo-id")||t.attr("data-youtube-id")||t.attr("data-vzaar-id"),r=t.attr("data-width")||this._core.settings.videoWidth,o=t.attr("data-height")||this._core.settings.videoHeight,a=t.attr("href");if(!a)throw new Error("Missing video URL.");if(i=a.match(/(http:|https:|)\/\/(player.|www.|app.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com|be\-nocookie\.com)|vzaar\.com)\/(video\/|videos\/|embed\/|channels\/.+\/|groups\/.+\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/),i[3].indexOf("youtu")>-1)n="youtube";else if(i[3].indexOf("vimeo")>-1)n="vimeo";else{if(!(i[3].indexOf("vzaar")>-1))throw new Error("Video URL not supported.");n="vzaar"}i=i[6],this._videos[a]={type:n,id:i,width:r,height:o},e.attr("data-video",a),this.thumbnail(t,this._videos[a])},r.prototype.thumbnail=function(e,n){var i,r,o,a=n.width&&n.height?"width:"+n.width+"px;height:"+n.height+"px;":"",s=e.find("img"),l="src",u="",c=this._core.settings,h=function(n){r='<div class="owl-video-play-icon"></div>',i=c.lazyLoad?t("<div/>",{"class":"owl-video-tn "+u,srcType:n}):t("<div/>",{"class":"owl-video-tn",style:"opacity:1;background-image:url("+n+")"}),e.after(i),e.after(r)};return e.wrap(t("<div/>",{"class":"owl-video-wrapper",style:a})),this._core.settings.lazyLoad&&(l="data-src",u="owl-lazy"),s.length?(h(s.attr(l)),s.remove(),!1):void("youtube"===n.type?(o="//img.youtube.com/vi/"+n.id+"/hqdefault.jpg",h(o)):"vimeo"===n.type?t.ajax({type:"GET",url:"//vimeo.com/api/v2/video/"+n.id+".json",jsonp:"callback",dataType:"jsonp",success:function(t){o=t[0].thumbnail_large,h(o)}}):"vzaar"===n.type&&t.ajax({type:"GET",url:"//vzaar.com/api/videos/"+n.id+".json",jsonp:"callback",dataType:"jsonp",success:function(t){o=t.framegrab_url,h(o)}}))},r.prototype.stop=function(){this._core.trigger("stop",null,"video"),this._playing.find(".owl-video-frame").remove(),this._playing.removeClass("owl-video-playing"),this._playing=null,this._core.leave("playing"),this._core.trigger("stopped",null,"video")},r.prototype.play=function(e){var n,i=t(e.target),r=i.closest("."+this._core.settings.itemClass),o=this._videos[r.attr("data-video")],a=o.width||"100%",s=o.height||this._core.$stage.height();this._playing||(this._core.enter("playing"),this._core.trigger("play",null,"video"),r=this._core.items(this._core.relative(r.index())),this._core.reset(r.index()),n=t('<iframe frameborder="0" allowfullscreen mozallowfullscreen webkitAllowFullScreen ></iframe>'),n.attr("height",s),n.attr("width",a),"youtube"===o.type?n.attr("src","//www.youtube.com/embed/"+o.id+"?autoplay=1&rel=0&v="+o.id):"vimeo"===o.type?n.attr("src","//player.vimeo.com/video/"+o.id+"?autoplay=1"):"vzaar"===o.type&&n.attr("src","//view.vzaar.com/"+o.id+"/player?autoplay=true"),t(n).wrap('<div class="owl-video-frame" />').insertAfter(r.find(".owl-video")),this._playing=r.addClass("owl-video-playing"))},r.prototype.isInFullScreen=function(){var e=n.fullscreenElement||n.mozFullScreenElement||n.webkitFullscreenElement;return e&&t(e).parent().hasClass("owl-video-frame")},r.prototype.destroy=function(){var t,e;this._core.$element.off("click.owl.video");for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.Video=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this.core=e,this.core.options=t.extend({},r.Defaults,this.core.options),this.swapping=!0,this.previous=i,this.next=i,this.handlers={"change.owl.carousel":t.proxy(function(t){t.namespace&&"position"==t.property.name&&(this.previous=this.core.current(),this.next=t.property.value)},this),"drag.owl.carousel dragged.owl.carousel translated.owl.carousel":t.proxy(function(t){t.namespace&&(this.swapping="translated"==t.type)},this),"translate.owl.carousel":t.proxy(function(t){t.namespace&&this.swapping&&(this.core.options.animateOut||this.core.options.animateIn)&&this.swap()},this)},this.core.$element.on(this.handlers)};r.Defaults={animateOut:!1,animateIn:!1},r.prototype.swap=function(){if(1===this.core.settings.items&&t.support.animation&&t.support.transition){this.core.speed(0);var e,n=t.proxy(this.clear,this),i=this.core.$stage.children().eq(this.previous),r=this.core.$stage.children().eq(this.next),o=this.core.settings.animateIn,a=this.core.settings.animateOut;this.core.current()!==this.previous&&(a&&(e=this.core.coordinates(this.previous)-this.core.coordinates(this.next),i.one(t.support.animation.end,n).css({left:e+"px"}).addClass("animated owl-animated-out").addClass(a)),o&&r.one(t.support.animation.end,n).addClass("animated owl-animated-in").addClass(o))}},r.prototype.clear=function(e){t(e.target).css({left:""}).removeClass("animated owl-animated-out owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut),this.core.onTransitionEnd()},r.prototype.destroy=function(){var t,e;for(t in this.handlers)this.core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.Animate=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this._core=e,this._call=null,this._time=0,this._timeout=0,this._paused=!0,this._handlers={"changed.owl.carousel":t.proxy(function(t){t.namespace&&"settings"===t.property.name?this._core.settings.autoplay?this.play():this.stop():t.namespace&&"position"===t.property.name&&this._paused&&(this._time=0)},this),"initialized.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.autoplay&&this.play()},this),"play.owl.autoplay":t.proxy(function(t,e,n){t.namespace&&this.play(e,n)},this),"stop.owl.autoplay":t.proxy(function(t){t.namespace&&this.stop()},this),"mouseover.owl.autoplay":t.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"mouseleave.owl.autoplay":t.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.play()},this),"touchstart.owl.core":t.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"touchend.owl.core":t.proxy(function(){this._core.settings.autoplayHoverPause&&this.play()},this)},this._core.$element.on(this._handlers),this._core.options=t.extend({},r.Defaults,this._core.options)};r.Defaults={autoplay:!1,autoplayTimeout:5e3,autoplayHoverPause:!1,autoplaySpeed:!1},r.prototype._next=function(i){this._call=e.setTimeout(t.proxy(this._next,this,i),this._timeout*(Math.round(this.read()/this._timeout)+1)-this.read()),this._core.is("interacting")||n.hidden||this._core.next(i||this._core.settings.autoplaySpeed)},r.prototype.read=function(){return(new Date).getTime()-this._time},r.prototype.play=function(n,i){var r;this._core.is("rotating")||this._core.enter("rotating"),n=n||this._core.settings.autoplayTimeout,r=Math.min(this._time%(this._timeout||n),n),this._paused?(this._time=this.read(),this._paused=!1):e.clearTimeout(this._call),this._time+=this.read()%n-r,this._timeout=n,this._call=e.setTimeout(t.proxy(this._next,this,i),n-r)},r.prototype.stop=function(){this._core.is("rotating")&&(this._time=0,this._paused=!0,e.clearTimeout(this._call),this._core.leave("rotating"))},r.prototype.pause=function(){this._core.is("rotating")&&!this._paused&&(this._time=this.read(),this._paused=!0,e.clearTimeout(this._call))},r.prototype.destroy=function(){var t,e;this.stop();for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.autoplay=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){"use strict";var r=function(e){this._core=e,this._initialized=!1,this._pages=[],this._controls={},this._templates=[],this.$element=this._core.$element,this._overrides={next:this._core.next,prev:this._core.prev,to:this._core.to},this._handlers={"prepared.owl.carousel":t.proxy(function(e){e.namespace&&this._core.settings.dotsData&&this._templates.push('<div class="'+this._core.settings.dotClass+'">'+t(e.content).find("[data-dot]").addBack("[data-dot]").attr("data-dot")+"</div>")},this),"added.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.dotsData&&this._templates.splice(t.position,0,this._templates.pop())},this),"remove.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.dotsData&&this._templates.splice(t.position,1)},this),"changed.owl.carousel":t.proxy(function(t){t.namespace&&"position"==t.property.name&&this.draw()},this),"initialized.owl.carousel":t.proxy(function(t){t.namespace&&!this._initialized&&(this._core.trigger("initialize",null,"navigation"),this.initialize(),this.update(),this.draw(),this._initialized=!0,this._core.trigger("initialized",null,"navigation"))},this),"refreshed.owl.carousel":t.proxy(function(t){t.namespace&&this._initialized&&(this._core.trigger("refresh",null,"navigation"),this.update(),this.draw(),this._core.trigger("refreshed",null,"navigation"))},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this.$element.on(this._handlers)};r.Defaults={nav:!1,navText:['<span aria-label="Previous">&#x2039;</span>','<span aria-label="Next">&#x203a;</span>'],navSpeed:!1,navElement:'button type="button" role="presentation"',navContainer:!1,navContainerClass:"owl-nav",navClass:["owl-prev","owl-next"],slideBy:1,dotClass:"owl-dot",dotsClass:"owl-dots",dots:!0,dotsEach:!1,dotsData:!1,dotsSpeed:!1,dotsContainer:!1},r.prototype.initialize=function(){var e,n=this._core.settings;this._controls.$relative=(n.navContainer?t(n.navContainer):t("<div>").addClass(n.navContainerClass).appendTo(this.$element)).addClass("disabled"),
this._controls.$previous=t("<"+n.navElement+">").addClass(n.navClass[0]).html(n.navText[0]).prependTo(this._controls.$relative).on("click",t.proxy(function(t){this.prev(n.navSpeed)},this)),this._controls.$next=t("<"+n.navElement+">").addClass(n.navClass[1]).html(n.navText[1]).appendTo(this._controls.$relative).on("click",t.proxy(function(t){this.next(n.navSpeed)},this)),n.dotsData||(this._templates=[t('<button role="button">').addClass(n.dotClass).append(t("<span>")).prop("outerHTML")]),this._controls.$absolute=(n.dotsContainer?t(n.dotsContainer):t("<div>").addClass(n.dotsClass).appendTo(this.$element)).addClass("disabled"),this._controls.$absolute.on("click","button",t.proxy(function(e){var i=t(e.target).parent().is(this._controls.$absolute)?t(e.target).index():t(e.target).parent().index();e.preventDefault(),this.to(i,n.dotsSpeed)},this));for(e in this._overrides)this._core[e]=t.proxy(this[e],this)},r.prototype.destroy=function(){var t,e,n,i,r;r=this._core.settings;for(t in this._handlers)this.$element.off(t,this._handlers[t]);for(e in this._controls)"$relative"===e&&r.navContainer?this._controls[e].html(""):this._controls[e].remove();for(i in this.overides)this._core[i]=this._overrides[i];for(n in Object.getOwnPropertyNames(this))"function"!=typeof this[n]&&(this[n]=null)},r.prototype.update=function(){var t,e,n,i=this._core.clones().length/2,r=i+this._core.items().length,o=this._core.maximum(!0),a=this._core.settings,s=a.center||a.autoWidth||a.dotsData?1:a.dotsEach||a.items;if("page"!==a.slideBy&&(a.slideBy=Math.min(a.slideBy,a.items)),a.dots||"page"==a.slideBy)for(this._pages=[],t=i,e=0,n=0;t<r;t++){if(e>=s||0===e){if(this._pages.push({start:Math.min(o,t-i),end:t-i+s-1}),Math.min(o,t-i)===o)break;e=0,++n}e+=this._core.mergers(this._core.relative(t))}},r.prototype.draw=function(){var e,n=this._core.settings,i=this._core.items().length<=n.items,r=this._core.relative(this._core.current()),o=n.loop||n.rewind;this._controls.$relative.toggleClass("disabled",!n.nav||i),n.nav&&(this._controls.$previous.toggleClass("disabled",!o&&r<=this._core.minimum(!0)),this._controls.$next.toggleClass("disabled",!o&&r>=this._core.maximum(!0))),this._controls.$absolute.toggleClass("disabled",!n.dots||i),n.dots&&(e=this._pages.length-this._controls.$absolute.children().length,n.dotsData&&0!==e?this._controls.$absolute.html(this._templates.join("")):e>0?this._controls.$absolute.append(new Array(e+1).join(this._templates[0])):e<0&&this._controls.$absolute.children().slice(e).remove(),this._controls.$absolute.find(".active").removeClass("active"),this._controls.$absolute.children().eq(t.inArray(this.current(),this._pages)).addClass("active"))},r.prototype.onTrigger=function(e){var n=this._core.settings;e.page={index:t.inArray(this.current(),this._pages),count:this._pages.length,size:n&&(n.center||n.autoWidth||n.dotsData?1:n.dotsEach||n.items)}},r.prototype.current=function(){var e=this._core.relative(this._core.current());return t.grep(this._pages,t.proxy(function(t,n){return t.start<=e&&t.end>=e},this)).pop()},r.prototype.getPosition=function(e){var n,i,r=this._core.settings;return"page"==r.slideBy?(n=t.inArray(this.current(),this._pages),i=this._pages.length,e?++n:--n,n=this._pages[(n%i+i)%i].start):(n=this._core.relative(this._core.current()),i=this._core.items().length,e?n+=r.slideBy:n-=r.slideBy),n},r.prototype.next=function(e){t.proxy(this._overrides.to,this._core)(this.getPosition(!0),e)},r.prototype.prev=function(e){t.proxy(this._overrides.to,this._core)(this.getPosition(!1),e)},r.prototype.to=function(e,n,i){var r;!i&&this._pages.length?(r=this._pages.length,t.proxy(this._overrides.to,this._core)(this._pages[(e%r+r)%r].start,n)):t.proxy(this._overrides.to,this._core)(e,n)},t.fn.owlCarousel.Constructor.Plugins.Navigation=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){"use strict";var r=function(n){this._core=n,this._hashes={},this.$element=this._core.$element,this._handlers={"initialized.owl.carousel":t.proxy(function(n){n.namespace&&"URLHash"===this._core.settings.startPosition&&t(e).trigger("hashchange.owl.navigation")},this),"prepared.owl.carousel":t.proxy(function(e){if(e.namespace){var n=t(e.content).find("[data-hash]").addBack("[data-hash]").attr("data-hash");if(!n)return;this._hashes[n]=e.content}},this),"changed.owl.carousel":t.proxy(function(n){if(n.namespace&&"position"===n.property.name){var i=this._core.items(this._core.relative(this._core.current())),r=t.map(this._hashes,function(t,e){return t===i?e:null}).join();if(!r||e.location.hash.slice(1)===r)return;e.location.hash=r}},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this.$element.on(this._handlers),t(e).on("hashchange.owl.navigation",t.proxy(function(t){var n=e.location.hash.substring(1),r=this._core.$stage.children(),o=this._hashes[n]&&r.index(this._hashes[n]);o!==i&&o!==this._core.current()&&this._core.to(this._core.relative(o),!1,!0)},this))};r.Defaults={URLhashListener:!1},r.prototype.destroy=function(){var n,i;t(e).off("hashchange.owl.navigation");for(n in this._handlers)this._core.$element.off(n,this._handlers[n]);for(i in Object.getOwnPropertyNames(this))"function"!=typeof this[i]&&(this[i]=null)},t.fn.owlCarousel.Constructor.Plugins.Hash=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){function r(e,n){var r=!1,o=e.charAt(0).toUpperCase()+e.slice(1);return t.each((e+" "+s.join(o+" ")+o).split(" "),function(t,e){if(a[e]!==i)return r=!n||e,!1}),r}function o(t){return r(t,!0)}var a=t("<support>").get(0).style,s="Webkit Moz O ms".split(" "),l={transition:{end:{WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"}},animation:{end:{WebkitAnimation:"webkitAnimationEnd",MozAnimation:"animationend",OAnimation:"oAnimationEnd",animation:"animationend"}}},u={csstransforms:function(){return!!r("transform")},csstransforms3d:function(){return!!r("perspective")},csstransitions:function(){return!!r("transition")},cssanimations:function(){return!!r("animation")}};u.csstransitions()&&(t.support.transition=new String(o("transition")),t.support.transition.end=l.transition.end[t.support.transition]),u.cssanimations()&&(t.support.animation=new String(o("animation")),t.support.animation.end=l.animation.end[t.support.animation]),u.csstransforms()&&(t.support.transform=new String(o("transform")),t.support.transform3d=u.csstransforms3d())}(window.Zepto||window.jQuery,window,document),!function(t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).Chart=t()}(function(){return function t(e,n,i){function r(a,s){if(!n[a]){if(!e[a]){var l="function"==typeof require&&require;if(!s&&l)return l(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var c=n[a]={exports:{}};e[a][0].call(c.exports,function(t){return r(e[a][1][t]||t)},c,c.exports,t,e,n,i)}return n[a].exports}for(var o="function"==typeof require&&require,a=0;a<i.length;a++)r(i[a]);return r}({1:[function(t,e,n){function i(t){if(t){var e=[0,0,0],n=1,i=t.match(/^#([a-fA-F0-9]{3})$/i);if(i){i=i[1];for(var r=0;r<e.length;r++)e[r]=parseInt(i[r]+i[r],16)}else if(i=t.match(/^#([a-fA-F0-9]{6})$/i))for(i=i[1],r=0;r<e.length;r++)e[r]=parseInt(i.slice(2*r,2*r+2),16);else if(i=t.match(/^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i)){for(r=0;r<e.length;r++)e[r]=parseInt(i[r+1]);n=parseFloat(i[4])}else if(i=t.match(/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i)){for(r=0;r<e.length;r++)e[r]=Math.round(2.55*parseFloat(i[r+1]));n=parseFloat(i[4])}else if(i=t.match(/(\w+)/)){if("transparent"==i[1])return[0,0,0,0];if(!(e=h[i[1]]))return}for(r=0;r<e.length;r++)e[r]=u(e[r],0,255);return n=n||0==n?u(n,0,1):1,e[3]=n,e}}function r(t){if(t){var e=t.match(/^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/);if(e){var n=parseFloat(e[4]);return[u(parseInt(e[1]),0,360),u(parseFloat(e[2]),0,100),u(parseFloat(e[3]),0,100),u(isNaN(n)?1:n,0,1)]}}}function o(t){if(t){var e=t.match(/^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/);if(e){var n=parseFloat(e[4]);return[u(parseInt(e[1]),0,360),u(parseFloat(e[2]),0,100),u(parseFloat(e[3]),0,100),u(isNaN(n)?1:n,0,1)]}}}function a(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),"rgba("+t[0]+", "+t[1]+", "+t[2]+", "+e+")"}function s(t,e){return"rgba("+Math.round(t[0]/255*100)+"%, "+Math.round(t[1]/255*100)+"%, "+Math.round(t[2]/255*100)+"%, "+(e||t[3]||1)+")"}function l(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),"hsla("+t[0]+", "+t[1]+"%, "+t[2]+"%, "+e+")"}function u(t,e,n){return Math.min(Math.max(e,t),n)}function c(t){var e=t.toString(16).toUpperCase();return e.length<2?"0"+e:e}var h=t(5);e.exports={getRgba:i,getHsla:r,getRgb:function(t){var e=i(t);return e&&e.slice(0,3)},getHsl:function(t){var e=r(t);return e&&e.slice(0,3)},getHwb:o,getAlpha:function(t){var e=i(t);return e?e[3]:(e=r(t))?e[3]:(e=o(t))?e[3]:void 0},hexString:function(t){return"#"+c(t[0])+c(t[1])+c(t[2])},rgbString:function(t,e){return e<1||t[3]&&t[3]<1?a(t,e):"rgb("+t[0]+", "+t[1]+", "+t[2]+")"},rgbaString:a,percentString:function(t,e){if(e<1||t[3]&&t[3]<1)return s(t,e);var n=Math.round(t[0]/255*100),i=Math.round(t[1]/255*100),r=Math.round(t[2]/255*100);return"rgb("+n+"%, "+i+"%, "+r+"%)"},percentaString:s,hslString:function(t,e){return e<1||t[3]&&t[3]<1?l(t,e):"hsl("+t[0]+", "+t[1]+"%, "+t[2]+"%)"},hslaString:l,hwbString:function(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),"hwb("+t[0]+", "+t[1]+"%, "+t[2]+"%"+(void 0!==e&&1!==e?", "+e:"")+")"},keyword:function(t){return d[t.slice(0,3)]}};var d={};for(var f in h)d[h[f]]=f},{5:5}],2:[function(t,e,n){var i=t(4),r=t(1),o=function(t){return t instanceof o?t:this instanceof o?(this.valid=!1,this.values={rgb:[0,0,0],hsl:[0,0,0],hsv:[0,0,0],hwb:[0,0,0],cmyk:[0,0,0,0],alpha:1},void("string"==typeof t?(e=r.getRgba(t))?this.setValues("rgb",e):(e=r.getHsla(t))?this.setValues("hsl",e):(e=r.getHwb(t))&&this.setValues("hwb",e):"object"==typeof t&&(void 0!==(e=t).r||void 0!==e.red?this.setValues("rgb",e):void 0!==e.l||void 0!==e.lightness?this.setValues("hsl",e):void 0!==e.v||void 0!==e.value?this.setValues("hsv",e):void 0!==e.w||void 0!==e.whiteness?this.setValues("hwb",e):void 0===e.c&&void 0===e.cyan||this.setValues("cmyk",e)))):new o(t);var e};o.prototype={isValid:function(){return this.valid},rgb:function(){return this.setSpace("rgb",arguments)},hsl:function(){return this.setSpace("hsl",arguments)},hsv:function(){return this.setSpace("hsv",arguments)},hwb:function(){return this.setSpace("hwb",arguments)},cmyk:function(){return this.setSpace("cmyk",arguments)},rgbArray:function(){return this.values.rgb},hslArray:function(){return this.values.hsl},hsvArray:function(){return this.values.hsv},hwbArray:function(){var t=this.values;return 1!==t.alpha?t.hwb.concat([t.alpha]):t.hwb},cmykArray:function(){return this.values.cmyk},rgbaArray:function(){var t=this.values;return t.rgb.concat([t.alpha])},hslaArray:function(){var t=this.values;return t.hsl.concat([t.alpha])},alpha:function(t){return void 0===t?this.values.alpha:(this.setValues("alpha",t),this)},red:function(t){return this.setChannel("rgb",0,t)},green:function(t){return this.setChannel("rgb",1,t)},blue:function(t){return this.setChannel("rgb",2,t)},hue:function(t){return t&&(t=(t%=360)<0?360+t:t),this.setChannel("hsl",0,t)},saturation:function(t){return this.setChannel("hsl",1,t)},lightness:function(t){return this.setChannel("hsl",2,t)},saturationv:function(t){return this.setChannel("hsv",1,t)},whiteness:function(t){return this.setChannel("hwb",1,t)},blackness:function(t){return this.setChannel("hwb",2,t)},value:function(t){return this.setChannel("hsv",2,t)},cyan:function(t){return this.setChannel("cmyk",0,t)},magenta:function(t){return this.setChannel("cmyk",1,t)},yellow:function(t){return this.setChannel("cmyk",2,t)},black:function(t){return this.setChannel("cmyk",3,t)},hexString:function(){return r.hexString(this.values.rgb)},rgbString:function(){return r.rgbString(this.values.rgb,this.values.alpha)},rgbaString:function(){return r.rgbaString(this.values.rgb,this.values.alpha)},percentString:function(){return r.percentString(this.values.rgb,this.values.alpha)},hslString:function(){return r.hslString(this.values.hsl,this.values.alpha)},hslaString:function(){return r.hslaString(this.values.hsl,this.values.alpha)},hwbString:function(){return r.hwbString(this.values.hwb,this.values.alpha)},keyword:function(){return r.keyword(this.values.rgb,this.values.alpha)},rgbNumber:function(){var t=this.values.rgb;return t[0]<<16|t[1]<<8|t[2]},luminosity:function(){for(var t=this.values.rgb,e=[],n=0;n<t.length;n++){var i=t[n]/255;e[n]=i<=.03928?i/12.92:Math.pow((i+.055)/1.055,2.4)}return.2126*e[0]+.7152*e[1]+.0722*e[2]},contrast:function(t){var e=this.luminosity(),n=t.luminosity();return n<e?(e+.05)/(n+.05):(n+.05)/(e+.05)},level:function(t){var e=this.contrast(t);return 7.1<=e?"AAA":4.5<=e?"AA":""},dark:function(){var t=this.values.rgb;return(299*t[0]+587*t[1]+114*t[2])/1e3<128},light:function(){return!this.dark()},negate:function(){for(var t=[],e=0;e<3;e++)t[e]=255-this.values.rgb[e];return this.setValues("rgb",t),this},lighten:function(t){var e=this.values.hsl;return e[2]+=e[2]*t,this.setValues("hsl",e),this},darken:function(t){var e=this.values.hsl;return e[2]-=e[2]*t,this.setValues("hsl",e),this},saturate:function(t){var e=this.values.hsl;return e[1]+=e[1]*t,this.setValues("hsl",e),this},desaturate:function(t){var e=this.values.hsl;return e[1]-=e[1]*t,this.setValues("hsl",e),this},whiten:function(t){var e=this.values.hwb;return e[1]+=e[1]*t,this.setValues("hwb",e),this},blacken:function(t){var e=this.values.hwb;return e[2]+=e[2]*t,this.setValues("hwb",e),this},greyscale:function(){var t=this.values.rgb,e=.3*t[0]+.59*t[1]+.11*t[2];return this.setValues("rgb",[e,e,e]),this},clearer:function(t){var e=this.values.alpha;return this.setValues("alpha",e-e*t),this},opaquer:function(t){var e=this.values.alpha;return this.setValues("alpha",e+e*t),this},rotate:function(t){var e=this.values.hsl,n=(e[0]+t)%360;return e[0]=n<0?360+n:n,this.setValues("hsl",e),this},mix:function(t,e){var n=this,i=t,r=void 0===e?.5:e,o=2*r-1,a=n.alpha()-i.alpha(),s=((o*a==-1?o:(o+a)/(1+o*a))+1)/2,l=1-s;return this.rgb(s*n.red()+l*i.red(),s*n.green()+l*i.green(),s*n.blue()+l*i.blue()).alpha(n.alpha()*r+i.alpha()*(1-r))},toJSON:function(){return this.rgb()},clone:function(){var t,e,n=new o,i=this.values,r=n.values;for(var a in i)i.hasOwnProperty(a)&&(t=i[a],"[object Array]"===(e={}.toString.call(t))?r[a]=t.slice(0):"[object Number]"===e?r[a]=t:console.error("unexpected color value:",t));return n}},o.prototype.spaces={rgb:["red","green","blue"],hsl:["hue","saturation","lightness"],hsv:["hue","saturation","value"],hwb:["hue","whiteness","blackness"],cmyk:["cyan","magenta","yellow","black"]},o.prototype.maxes={rgb:[255,255,255],hsl:[360,100,100],hsv:[360,100,100],hwb:[360,100,100],cmyk:[100,100,100,100]},o.prototype.getValues=function(t){for(var e=this.values,n={},i=0;i<t.length;i++)n[t.charAt(i)]=e[t][i];return 1!==e.alpha&&(n.a=e.alpha),n},o.prototype.setValues=function(t,e){var n,r,o=this.values,a=this.spaces,s=this.maxes,l=1;if(this.valid=!0,"alpha"===t)l=e;else if(e.length)o[t]=e.slice(0,t.length),l=e[t.length];else if(void 0!==e[t.charAt(0)]){for(n=0;n<t.length;n++)o[t][n]=e[t.charAt(n)];l=e.a}else if(void 0!==e[a[t][0]]){var u=a[t];for(n=0;n<t.length;n++)o[t][n]=e[u[n]];l=e.alpha}if(o.alpha=Math.max(0,Math.min(1,void 0===l?o.alpha:l)),"alpha"===t)return!1;for(n=0;n<t.length;n++)r=Math.max(0,Math.min(s[t][n],o[t][n])),o[t][n]=Math.round(r);for(var c in a)c!==t&&(o[c]=i[t][c](o[t]));return!0},o.prototype.setSpace=function(t,e){var n=e[0];return void 0===n?this.getValues(t):("number"==typeof n&&(n=Array.prototype.slice.call(e)),this.setValues(t,n),this)},o.prototype.setChannel=function(t,e,n){var i=this.values[t];return void 0===n?i[e]:(n===i[e]||(i[e]=n,this.setValues(t,i)),this)},"undefined"!=typeof window&&(window.Color=o),e.exports=o},{1:1,4:4}],3:[function(t,e,n){function i(t){var e,n,i=t[0]/255,r=t[1]/255,o=t[2]/255,a=Math.min(i,r,o),s=Math.max(i,r,o),l=s-a;return s==a?e=0:i==s?e=(r-o)/l:r==s?e=2+(o-i)/l:o==s&&(e=4+(i-r)/l),(e=Math.min(60*e,360))<0&&(e+=360),n=(a+s)/2,[e,100*(s==a?0:n<=.5?l/(s+a):l/(2-s-a)),100*n]}function o(t){var e,n,i=t[0],r=t[1],o=t[2],a=Math.min(i,r,o),s=Math.max(i,r,o),l=s-a;return n=0==s?0:l/s*1e3/10,s==a?e=0:i==s?e=(r-o)/l:r==s?e=2+(o-i)/l:o==s&&(e=4+(i-r)/l),(e=Math.min(60*e,360))<0&&(e+=360),[e,n,s/255*1e3/10]}function a(t){var e=t[0],n=t[1],r=t[2];return[i(t)[0],100*(1/255*Math.min(e,Math.min(n,r))),100*(r=1-1/255*Math.max(e,Math.max(n,r)))]}function s(t){var e,n=t[0]/255,i=t[1]/255,r=t[2]/255;return[100*((1-n-(e=Math.min(1-n,1-i,1-r)))/(1-e)||0),100*((1-i-e)/(1-e)||0),100*((1-r-e)/(1-e)||0),100*e]}function l(t){return S[JSON.stringify(t)]}function u(t){var e=t[0]/255,n=t[1]/255,i=t[2]/255;return[100*(.4124*(e=.04045<e?Math.pow((e+.055)/1.055,2.4):e/12.92)+.3576*(n=.04045<n?Math.pow((n+.055)/1.055,2.4):n/12.92)+.1805*(i=.04045<i?Math.pow((i+.055)/1.055,2.4):i/12.92)),100*(.2126*e+.7152*n+.0722*i),100*(.0193*e+.1192*n+.9505*i)]}function c(t){var e=u(t),n=e[0],i=e[1],r=e[2];return i/=100,r/=108.883,n=.008856<(n/=95.047)?Math.pow(n,1/3):7.787*n+16/116,[116*(i=.008856<i?Math.pow(i,1/3):7.787*i+16/116)-16,500*(n-i),200*(i-(r=.008856<r?Math.pow(r,1/3):7.787*r+16/116))]}function h(t){var e,n,i,r,o,a=t[0]/360,s=t[1]/100,l=t[2]/100;if(0==s)return[o=255*l,o,o];e=2*l-(n=l<.5?l*(1+s):l+s-l*s),r=[0,0,0];for(var u=0;u<3;u++)(i=a+1/3*-(u-1))<0&&i++,1<i&&i--,o=6*i<1?e+6*(n-e)*i:2*i<1?n:3*i<2?e+(n-e)*(2/3-i)*6:e,r[u]=255*o;return r}function d(t){var e=t[0]/60,n=t[1]/100,i=t[2]/100,r=Math.floor(e)%6,o=e-Math.floor(e),a=255*i*(1-n),s=255*i*(1-n*o),l=255*i*(1-n*(1-o));switch(i*=255,r){case 0:return[i,l,a];case 1:return[s,i,a];case 2:return[a,i,l];case 3:return[a,s,i];case 4:return[l,a,i];case 5:return[i,a,s]}}function f(t){var e,n,i,o,a=t[0]/360,s=t[1]/100,l=t[2]/100,u=s+l;switch(1<u&&(s/=u,l/=u),i=6*a-(e=Math.floor(6*a)),0!=(1&e)&&(i=1-i),o=s+i*((n=1-l)-s),e){default:case 6:case 0:r=n,g=o,b=s;break;case 1:r=o,g=n,b=s;break;case 2:r=s,g=n,b=o;break;case 3:r=s,g=o,b=n;break;case 4:r=o,g=s,b=n;break;case 5:r=n,g=s,b=o}return[255*r,255*g,255*b]}function p(t){var e=t[0]/100,n=t[1]/100,i=t[2]/100,r=t[3]/100;return[255*(1-Math.min(1,e*(1-r)+r)),255*(1-Math.min(1,n*(1-r)+r)),255*(1-Math.min(1,i*(1-r)+r))]}function m(t){var e,n,i,r=t[0]/100,o=t[1]/100,a=t[2]/100;return n=-.9689*r+1.8758*o+.0415*a,i=.0557*r+-.204*o+1.057*a,e=.0031308<(e=3.2406*r+-1.5372*o+-.4986*a)?1.055*Math.pow(e,1/2.4)-.055:e*=12.92,n=.0031308<n?1.055*Math.pow(n,1/2.4)-.055:n*=12.92,i=.0031308<i?1.055*Math.pow(i,1/2.4)-.055:i*=12.92,[255*(e=Math.min(Math.max(0,e),1)),255*(n=Math.min(Math.max(0,n),1)),255*(i=Math.min(Math.max(0,i),1))]}function v(t){var e=t[0],n=t[1],i=t[2];return n/=100,i/=108.883,e=.008856<(e/=95.047)?Math.pow(e,1/3):7.787*e+16/116,[116*(n=.008856<n?Math.pow(n,1/3):7.787*n+16/116)-16,500*(e-n),200*(n-(i=.008856<i?Math.pow(i,1/3):7.787*i+16/116))]}function y(t){var e,n,i,r,o=t[0],a=t[1],s=t[2];return r=o<=8?(n=100*o/903.3)/100*7.787+16/116:(n=100*Math.pow((o+16)/116,3),Math.pow(n/100,1/3)),[e=e/95.047<=.008856?e=95.047*(a/500+r-16/116)/7.787:95.047*Math.pow(a/500+r,3),n,i=i/108.883<=.008859?i=108.883*(r-s/200-16/116)/7.787:108.883*Math.pow(r-s/200,3)]}function x(t){var e,n=t[0],i=t[1],r=t[2];return(e=360*Math.atan2(r,i)/2/Math.PI)<0&&(e+=360),[n,Math.sqrt(i*i+r*r),e]}function _(t){return m(y(t))}function w(t){var e,n=t[0],i=t[1];return e=t[2]/360*2*Math.PI,[n,i*Math.cos(e),i*Math.sin(e)]}function k(t){return M[t]}e.exports={rgb2hsl:i,rgb2hsv:o,rgb2hwb:a,rgb2cmyk:s,rgb2keyword:l,rgb2xyz:u,rgb2lab:c,rgb2lch:function(t){return x(c(t))},hsl2rgb:h,hsl2hsv:function(t){var e=t[0],n=t[1]/100,i=t[2]/100;return 0!==i?[e,100*(2*(n*=(i*=2)<=1?i:2-i)/(i+n)),100*((i+n)/2)]:[0,0,0]},hsl2hwb:function(t){return a(h(t))},hsl2cmyk:function(t){return s(h(t))},hsl2keyword:function(t){return l(h(t))},hsv2rgb:d,hsv2hsl:function(t){var e,n,i=t[0],r=t[1]/100,o=t[2]/100;return e=r*o,[i,100*(e=(e/=(n=(2-r)*o)<=1?n:2-n)||0),100*(n/=2)]},hsv2hwb:function(t){return a(d(t))},hsv2cmyk:function(t){return s(d(t))},hsv2keyword:function(t){return l(d(t))},hwb2rgb:f,hwb2hsl:function(t){return i(f(t))},hwb2hsv:function(t){return o(f(t))},hwb2cmyk:function(t){return s(f(t))},hwb2keyword:function(t){return l(f(t))},cmyk2rgb:p,cmyk2hsl:function(t){return i(p(t))},cmyk2hsv:function(t){return o(p(t))},cmyk2hwb:function(t){return a(p(t))},cmyk2keyword:function(t){return l(p(t))},keyword2rgb:k,keyword2hsl:function(t){return i(k(t))},keyword2hsv:function(t){return o(k(t))},keyword2hwb:function(t){return a(k(t))},keyword2cmyk:function(t){return s(k(t))},keyword2lab:function(t){return c(k(t))},keyword2xyz:function(t){return u(k(t))},xyz2rgb:m,xyz2lab:v,xyz2lch:function(t){return x(v(t))},lab2xyz:y,lab2rgb:_,lab2lch:x,lch2lab:w,lch2xyz:function(t){return y(w(t))},lch2rgb:function(t){return _(w(t))}};var M={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},S={};for(var C in M)S[JSON.stringify(M[C])]=C},{}],4:[function(t,e,n){var i=t(3),r=function(){return new u};for(var o in i){r[o+"Raw"]=function(t){return function(e){return"number"==typeof e&&(e=Array.prototype.slice.call(arguments)),i[t](e)}}(o);var a=/(\w+)2(\w+)/.exec(o),s=a[1],l=a[2];(r[s]=r[s]||{})[l]=r[o]=function(t){return function(e){"number"==typeof e&&(e=Array.prototype.slice.call(arguments));var n=i[t](e);if("string"==typeof n||void 0===n)return n;for(var r=0;r<n.length;r++)n[r]=Math.round(n[r]);return n}}(o)}var u=function(){this.convs={}};u.prototype.routeSpace=function(t,e){var n=e[0];return void 0===n?this.getValues(t):("number"==typeof n&&(n=Array.prototype.slice.call(e)),this.setValues(t,n))},u.prototype.setValues=function(t,e){return this.space=t,this.convs={},this.convs[t]=e,this},u.prototype.getValues=function(t){var e=this.convs[t];if(!e){var n=this.space,i=this.convs[n];e=r[n][t](i),this.convs[t]=e}return e},["rgb","hsl","hsv","cmyk","keyword"].forEach(function(t){u.prototype[t]=function(e){return this.routeSpace(t,arguments)}}),e.exports=r},{3:3}],5:[function(t,e,n){"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},{}],6:[function(t,e,n){var i,r;i=this,r=function(){"use strict";function n(){return Qt.apply(null,arguments)}function i(t){return t instanceof Array||"[object Array]"===Object.prototype.toString.call(t)}function r(t){return null!=t&&"[object Object]"===Object.prototype.toString.call(t)}function o(t){return void 0===t}function a(t){return"number"==typeof t||"[object Number]"===Object.prototype.toString.call(t)}function s(t){return t instanceof Date||"[object Date]"===Object.prototype.toString.call(t)}function l(t,e){var n,i=[];for(n=0;n<t.length;++n)i.push(e(t[n],n));return i}function u(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function c(t,e){for(var n in e)u(e,n)&&(t[n]=e[n]);return u(e,"toString")&&(t.toString=e.toString),u(e,"valueOf")&&(t.valueOf=e.valueOf),t}function h(t,e,n,i){return vt(t,e,n,i,!0).utc()}function d(t){return null==t._pf&&(t._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),t._pf}function f(t){if(null==t._isValid){var e=d(t),n=Jt.call(e.parsedDateParts,function(t){return null!=t}),i=!isNaN(t._d.getTime())&&e.overflow<0&&!e.empty&&!e.invalidMonth&&!e.invalidWeekday&&!e.weekdayMismatch&&!e.nullInput&&!e.invalidFormat&&!e.userInvalidated&&(!e.meridiem||e.meridiem&&n);if(t._strict&&(i=i&&0===e.charsLeftOver&&0===e.unusedTokens.length&&void 0===e.bigHour),null!=Object.isFrozen&&Object.isFrozen(t))return i;t._isValid=i}return t._isValid}function p(t){var e=h(NaN);return null!=t?c(d(e),t):d(e).userInvalidated=!0,e}function g(t,e){var n,i,r;if(o(e._isAMomentObject)||(t._isAMomentObject=e._isAMomentObject),o(e._i)||(t._i=e._i),o(e._f)||(t._f=e._f),o(e._l)||(t._l=e._l),o(e._strict)||(t._strict=e._strict),o(e._tzm)||(t._tzm=e._tzm),o(e._isUTC)||(t._isUTC=e._isUTC),o(e._offset)||(t._offset=e._offset),o(e._pf)||(t._pf=d(e)),o(e._locale)||(t._locale=e._locale),0<te.length)for(n=0;n<te.length;n++)o(r=e[i=te[n]])||(t[i]=r);return t}function m(t){g(this,t),this._d=new Date(null!=t._d?t._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===ee&&(ee=!0,n.updateOffset(this),ee=!1)}function v(t){return t instanceof m||null!=t&&null!=t._isAMomentObject}function y(t){return t<0?Math.ceil(t)||0:Math.floor(t)}function b(t){var e=+t,n=0;return 0!==e&&isFinite(e)&&(n=y(e)),n}function x(t,e,n){var i,r=Math.min(t.length,e.length),o=Math.abs(t.length-e.length),a=0;for(i=0;i<r;i++)(n&&t[i]!==e[i]||!n&&b(t[i])!==b(e[i]))&&a++;return a+o}function _(t){!1===n.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+t)}function w(t,e){var i=!0;return c(function(){if(null!=n.deprecationHandler&&n.deprecationHandler(null,t),
i){for(var r,o=[],a=0;a<arguments.length;a++){if(r="","object"==typeof arguments[a]){for(var s in r+="\n["+a+"] ",arguments[0])r+=s+": "+arguments[0][s]+", ";r=r.slice(0,-2)}else r=arguments[a];o.push(r)}_(t+"\nArguments: "+Array.prototype.slice.call(o).join("")+"\n"+(new Error).stack),i=!1}return e.apply(this,arguments)},e)}function k(t,e){null!=n.deprecationHandler&&n.deprecationHandler(t,e),ne[t]||(_(e),ne[t]=!0)}function M(t){return t instanceof Function||"[object Function]"===Object.prototype.toString.call(t)}function S(t,e){var n,i=c({},t);for(n in e)u(e,n)&&(r(t[n])&&r(e[n])?(i[n]={},c(i[n],t[n]),c(i[n],e[n])):null!=e[n]?i[n]=e[n]:delete i[n]);for(n in t)u(t,n)&&!u(e,n)&&r(t[n])&&(i[n]=c({},i[n]));return i}function C(t){null!=t&&this.set(t)}function D(t,e){var n=t.toLowerCase();ie[n]=ie[n+"s"]=ie[e]=t}function T(t){return"string"==typeof t?ie[t]||ie[t.toLowerCase()]:void 0}function P(t){var e,n,i={};for(n in t)u(t,n)&&(e=T(n))&&(i[e]=t[n]);return i}function A(t,e){re[t]=e}function O(t,e,n){var i=""+Math.abs(t),r=e-i.length;return(0<=t?n?"+":"":"-")+Math.pow(10,Math.max(0,r)).toString().substr(1)+i}function I(t,e,n,i){var r=i;"string"==typeof i&&(r=function(){return this[i]()}),t&&(le[t]=r),e&&(le[e[0]]=function(){return O(r.apply(this,arguments),e[1],e[2])}),n&&(le[n]=function(){return this.localeData().ordinal(r.apply(this,arguments),t)})}function L(t,e){return t.isValid()?(e=E(e,t.localeData()),se[e]=se[e]||function(t){var e,n,i,r=t.match(oe);for(e=0,n=r.length;e<n;e++)le[r[e]]?r[e]=le[r[e]]:r[e]=(i=r[e]).match(/\[[\s\S]/)?i.replace(/^\[|\]$/g,""):i.replace(/\\/g,"");return function(e){var i,o="";for(i=0;i<n;i++)o+=M(r[i])?r[i].call(e,t):r[i];return o}}(e),se[e](t)):t.localeData().invalidDate()}function E(t,e){function n(t){return e.longDateFormat(t)||t}var i=5;for(ae.lastIndex=0;0<=i&&ae.test(t);)t=t.replace(ae,n),ae.lastIndex=0,i-=1;return t}function F(t,e,n){Se[t]=M(e)?e:function(t,i){return t&&n?n:e}}function N(t,e){return u(Se,t)?Se[t](e._strict,e._locale):new RegExp(R(t.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(t,e,n,i,r){return e||n||i||r})))}function R(t){return t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function z(t,e){var n,i=e;for("string"==typeof t&&(t=[t]),a(e)&&(i=function(t,n){n[e]=b(t)}),n=0;n<t.length;n++)Ce[t[n]]=i}function W(t,e){z(t,function(t,n,i,r){i._w=i._w||{},e(t,i._w,i,r)})}function H(t){return j(t)?366:365}function j(t){return t%4==0&&t%100!=0||t%400==0}function Y(t,e){return function(i){return null!=i?($(this,t,i),n.updateOffset(this,e),this):B(this,t)}}function B(t,e){return t.isValid()?t._d["get"+(t._isUTC?"UTC":"")+e]():NaN}function $(t,e,n){t.isValid()&&!isNaN(n)&&("FullYear"===e&&j(t.year())&&1===t.month()&&29===t.date()?t._d["set"+(t._isUTC?"UTC":"")+e](n,t.month(),V(n,t.month())):t._d["set"+(t._isUTC?"UTC":"")+e](n))}function V(t,e){if(isNaN(t)||isNaN(e))return NaN;var n,i=(e%(n=12)+n)%n;return t+=(e-i)/12,1===i?j(t)?29:28:31-i%7%2}function q(t,e){var n;if(!t.isValid())return t;if("string"==typeof e)if(/^\d+$/.test(e))e=b(e);else if(!a(e=t.localeData().monthsParse(e)))return t;return n=Math.min(t.date(),V(t.year(),e)),t._d["set"+(t._isUTC?"UTC":"")+"Month"](e,n),t}function U(t){return null!=t?(q(this,t),n.updateOffset(this,!0),this):B(this,"Month")}function G(){function t(t,e){return e.length-t.length}var e,n,i=[],r=[],o=[];for(e=0;e<12;e++)n=h([2e3,e]),i.push(this.monthsShort(n,"")),r.push(this.months(n,"")),o.push(this.months(n,"")),o.push(this.monthsShort(n,""));for(i.sort(t),r.sort(t),o.sort(t),e=0;e<12;e++)i[e]=R(i[e]),r[e]=R(r[e]);for(e=0;e<24;e++)o[e]=R(o[e]);this._monthsRegex=new RegExp("^("+o.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+i.join("|")+")","i")}function Z(t){var e=new Date(Date.UTC.apply(null,arguments));return t<100&&0<=t&&isFinite(e.getUTCFullYear())&&e.setUTCFullYear(t),e}function X(t,e,n){var i=7+e-n;return-((7+Z(t,0,i).getUTCDay()-e)%7)+i-1}function Q(t,e,n,i,r){var o,a,s=1+7*(e-1)+(7+n-i)%7+X(t,i,r);return a=s<=0?H(o=t-1)+s:s>H(t)?(o=t+1,s-H(t)):(o=t,s),{year:o,dayOfYear:a}}function J(t,e,n){var i,r,o=X(t.year(),e,n),a=Math.floor((t.dayOfYear()-o-1)/7)+1;return a<1?i=a+K(r=t.year()-1,e,n):a>K(t.year(),e,n)?(i=a-K(t.year(),e,n),r=t.year()+1):(r=t.year(),i=a),{week:i,year:r}}function K(t,e,n){var i=X(t,e,n),r=X(t+1,e,n);return(H(t)-i+r)/7}function tt(){function t(t,e){return e.length-t.length}var e,n,i,r,o,a=[],s=[],l=[],u=[];for(e=0;e<7;e++)n=h([2e3,1]).day(e),i=this.weekdaysMin(n,""),r=this.weekdaysShort(n,""),o=this.weekdays(n,""),a.push(i),s.push(r),l.push(o),u.push(i),u.push(r),u.push(o);for(a.sort(t),s.sort(t),l.sort(t),u.sort(t),e=0;e<7;e++)s[e]=R(s[e]),l[e]=R(l[e]),u[e]=R(u[e]);this._weekdaysRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+s.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+a.join("|")+")","i")}function et(){return this.hours()%12||12}function nt(t,e){I(t,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),e)})}function it(t,e){return e._meridiemParse}function rt(t){return t?t.toLowerCase().replace("_","-"):t}function ot(n){var i=null;if(!Je[n]&&void 0!==e&&e&&e.exports)try{i=Ze._abbr,t("./locale/"+n),at(i)}catch(n){}return Je[n]}function at(t,e){var n;return t&&((n=o(e)?lt(t):st(t,e))?Ze=n:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+t+" not found. Did you forget to load it?")),Ze._abbr}function st(t,e){if(null===e)return delete Je[t],null;var n,i=Qe;if(e.abbr=t,null!=Je[t])k("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),i=Je[t]._config;else if(null!=e.parentLocale)if(null!=Je[e.parentLocale])i=Je[e.parentLocale]._config;else{if(null==(n=ot(e.parentLocale)))return Ke[e.parentLocale]||(Ke[e.parentLocale]=[]),Ke[e.parentLocale].push({name:t,config:e}),null;i=n._config}return Je[t]=new C(S(i,e)),Ke[t]&&Ke[t].forEach(function(t){st(t.name,t.config)}),at(t),Je[t]}function lt(t){var e;if(t&&t._locale&&t._locale._abbr&&(t=t._locale._abbr),!t)return Ze;if(!i(t)){if(e=ot(t))return e;t=[t]}return function(t){for(var e,n,i,r,o=0;o<t.length;){for(e=(r=rt(t[o]).split("-")).length,n=(n=rt(t[o+1]))?n.split("-"):null;0<e;){if(i=ot(r.slice(0,e).join("-")))return i;if(n&&n.length>=e&&x(r,n,!0)>=e-1)break;e--}o++}return Ze}(t)}function ut(t){var e,n=t._a;return n&&-2===d(t).overflow&&(e=n[Te]<0||11<n[Te]?Te:n[Pe]<1||n[Pe]>V(n[De],n[Te])?Pe:n[Ae]<0||24<n[Ae]||24===n[Ae]&&(0!==n[Oe]||0!==n[Ie]||0!==n[Le])?Ae:n[Oe]<0||59<n[Oe]?Oe:n[Ie]<0||59<n[Ie]?Ie:n[Le]<0||999<n[Le]?Le:-1,d(t)._overflowDayOfYear&&(e<De||Pe<e)&&(e=Pe),d(t)._overflowWeeks&&-1===e&&(e=Ee),d(t)._overflowWeekday&&-1===e&&(e=Fe),d(t).overflow=e),t}function ct(t,e,n){return null!=t?t:null!=e?e:n}function ht(t){var e,i,r,o,a,s=[];if(!t._d){var l,u;for(l=t,u=new Date(n.now()),r=l._useUTC?[u.getUTCFullYear(),u.getUTCMonth(),u.getUTCDate()]:[u.getFullYear(),u.getMonth(),u.getDate()],t._w&&null==t._a[Pe]&&null==t._a[Te]&&function(t){var e,n,i,r,o,a,s,l;if(null!=(e=t._w).GG||null!=e.W||null!=e.E)o=1,a=4,n=ct(e.GG,t._a[De],J(yt(),1,4).year),i=ct(e.W,1),((r=ct(e.E,1))<1||7<r)&&(l=!0);else{o=t._locale._week.dow,a=t._locale._week.doy;var u=J(yt(),o,a);n=ct(e.gg,t._a[De],u.year),i=ct(e.w,u.week),null!=e.d?((r=e.d)<0||6<r)&&(l=!0):null!=e.e?(r=e.e+o,(e.e<0||6<e.e)&&(l=!0)):r=o}i<1||i>K(n,o,a)?d(t)._overflowWeeks=!0:null!=l?d(t)._overflowWeekday=!0:(s=Q(n,i,r,o,a),t._a[De]=s.year,t._dayOfYear=s.dayOfYear)}(t),null!=t._dayOfYear&&(a=ct(t._a[De],r[De]),(t._dayOfYear>H(a)||0===t._dayOfYear)&&(d(t)._overflowDayOfYear=!0),i=Z(a,0,t._dayOfYear),t._a[Te]=i.getUTCMonth(),t._a[Pe]=i.getUTCDate()),e=0;e<3&&null==t._a[e];++e)t._a[e]=s[e]=r[e];for(;e<7;e++)t._a[e]=s[e]=null==t._a[e]?2===e?1:0:t._a[e];24===t._a[Ae]&&0===t._a[Oe]&&0===t._a[Ie]&&0===t._a[Le]&&(t._nextDay=!0,t._a[Ae]=0),t._d=(t._useUTC?Z:function(t,e,n,i,r,o,a){var s=new Date(t,e,n,i,r,o,a);return t<100&&0<=t&&isFinite(s.getFullYear())&&s.setFullYear(t),s}).apply(null,s),o=t._useUTC?t._d.getUTCDay():t._d.getDay(),null!=t._tzm&&t._d.setUTCMinutes(t._d.getUTCMinutes()-t._tzm),t._nextDay&&(t._a[Ae]=24),t._w&&void 0!==t._w.d&&t._w.d!==o&&(d(t).weekdayMismatch=!0)}}function dt(t){var e,n,i,r,o,a,s=t._i,l=tn.exec(s)||en.exec(s);if(l){for(d(t).iso=!0,e=0,n=rn.length;e<n;e++)if(rn[e][1].exec(l[1])){r=rn[e][0],i=!1!==rn[e][2];break}if(null==r)return void(t._isValid=!1);if(l[3]){for(e=0,n=on.length;e<n;e++)if(on[e][1].exec(l[3])){o=(l[2]||" ")+on[e][0];break}if(null==o)return void(t._isValid=!1)}if(!i&&null!=o)return void(t._isValid=!1);if(l[4]){if(!nn.exec(l[4]))return void(t._isValid=!1);a="Z"}t._f=r+(o||"")+(a||""),gt(t)}else t._isValid=!1}function ft(t,e,n,i,r,o){var a=[function(t){var e=parseInt(t,10);return e<=49?2e3+e:e<=999?1900+e:e}(t),He.indexOf(e),parseInt(n,10),parseInt(i,10),parseInt(r,10)];return o&&a.push(parseInt(o,10)),a}function pt(t){var e,n,i,r=sn.exec(t._i.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,""));if(r){var o=ft(r[4],r[3],r[2],r[5],r[6],r[7]);if(e=r[1],n=o,i=t,e&&$e.indexOf(e)!==new Date(n[0],n[1],n[2]).getDay()&&(d(i).weekdayMismatch=!0,!(i._isValid=!1)))return;t._a=o,t._tzm=function(t,e,n){if(t)return ln[t];if(e)return 0;var i=parseInt(n,10),r=i%100;return(i-r)/100*60+r}(r[8],r[9],r[10]),t._d=Z.apply(null,t._a),t._d.setUTCMinutes(t._d.getUTCMinutes()-t._tzm),d(t).rfc2822=!0}else t._isValid=!1}function gt(t){if(t._f!==n.ISO_8601)if(t._f!==n.RFC_2822){t._a=[],d(t).empty=!0;var e,i,r,o,a,s,l,c,h=""+t._i,f=h.length,p=0;for(r=E(t._f,t._locale).match(oe)||[],e=0;e<r.length;e++)o=r[e],(i=(h.match(N(o,t))||[])[0])&&(0<(a=h.substr(0,h.indexOf(i))).length&&d(t).unusedInput.push(a),h=h.slice(h.indexOf(i)+i.length),p+=i.length),le[o]?(i?d(t).empty=!1:d(t).unusedTokens.push(o),s=o,c=t,null!=(l=i)&&u(Ce,s)&&Ce[s](l,c._a,c,s)):t._strict&&!i&&d(t).unusedTokens.push(o);d(t).charsLeftOver=f-p,0<h.length&&d(t).unusedInput.push(h),t._a[Ae]<=12&&!0===d(t).bigHour&&0<t._a[Ae]&&(d(t).bigHour=void 0),d(t).parsedDateParts=t._a.slice(0),d(t).meridiem=t._meridiem,t._a[Ae]=function(t,e,n){var i;return null==n?e:null!=t.meridiemHour?t.meridiemHour(e,n):(null!=t.isPM&&((i=t.isPM(n))&&e<12&&(e+=12),i||12!==e||(e=0)),e)}(t._locale,t._a[Ae],t._meridiem),ht(t),ut(t)}else pt(t);else dt(t)}function mt(t){var e,u,h,y,b=t._i,x=t._f;return t._locale=t._locale||lt(t._l),null===b||void 0===x&&""===b?p({nullInput:!0}):("string"==typeof b&&(t._i=b=t._locale.preparse(b)),v(b)?new m(ut(b)):(s(b)?t._d=b:i(x)?function(t){var e,n,i,r,o;if(0===t._f.length)return d(t).invalidFormat=!0,t._d=new Date(NaN);for(r=0;r<t._f.length;r++)o=0,e=g({},t),null!=t._useUTC&&(e._useUTC=t._useUTC),e._f=t._f[r],gt(e),f(e)&&(o+=d(e).charsLeftOver,o+=10*d(e).unusedTokens.length,d(e).score=o,(null==i||o<i)&&(i=o,n=e));c(t,n||e)}(t):x?gt(t):o(u=(e=t)._i)?e._d=new Date(n.now()):s(u)?e._d=new Date(u.valueOf()):"string"==typeof u?(h=e,null===(y=an.exec(h._i))?(dt(h),!1===h._isValid&&(delete h._isValid,pt(h),!1===h._isValid&&(delete h._isValid,n.createFromInputFallback(h)))):h._d=new Date((+y[1]))):i(u)?(e._a=l(u.slice(0),function(t){return parseInt(t,10)}),ht(e)):r(u)?function(t){if(!t._d){var e=P(t._i);t._a=l([e.year,e.month,e.day||e.date,e.hour,e.minute,e.second,e.millisecond],function(t){return t&&parseInt(t,10)}),ht(t)}}(e):a(u)?e._d=new Date(u):n.createFromInputFallback(e),f(t)||(t._d=null),t))}function vt(t,e,n,o,a){var s,l={};return!0!==n&&!1!==n||(o=n,n=void 0),(r(t)&&function(t){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(t).length;var e;for(e in t)if(t.hasOwnProperty(e))return!1;return!0}(t)||i(t)&&0===t.length)&&(t=void 0),l._isAMomentObject=!0,l._useUTC=l._isUTC=a,l._l=n,l._i=t,l._f=e,l._strict=o,(s=new m(ut(mt(l))))._nextDay&&(s.add(1,"d"),s._nextDay=void 0),s}function yt(t,e,n,i){return vt(t,e,n,i,!1)}function bt(t,e){var n,r;if(1===e.length&&i(e[0])&&(e=e[0]),!e.length)return yt();for(n=e[0],r=1;r<e.length;++r)e[r].isValid()&&!e[r][t](n)||(n=e[r]);return n}function xt(t){var e=P(t),n=e.year||0,i=e.quarter||0,r=e.month||0,o=e.week||0,a=e.day||0,s=e.hour||0,l=e.minute||0,u=e.second||0,c=e.millisecond||0;this._isValid=function(t){for(var e in t)if(-1===Ne.call(hn,e)||null!=t[e]&&isNaN(t[e]))return!1;for(var n=!1,i=0;i<hn.length;++i)if(t[hn[i]]){if(n)return!1;parseFloat(t[hn[i]])!==b(t[hn[i]])&&(n=!0)}return!0}(e),this._milliseconds=+c+1e3*u+6e4*l+1e3*s*60*60,this._days=+a+7*o,this._months=+r+3*i+12*n,this._data={},this._locale=lt(),this._bubble()}function _t(t){return t instanceof xt}function wt(t){return t<0?-1*Math.round(-1*t):Math.round(t)}function kt(t,e){I(t,0,0,function(){var t=this.utcOffset(),n="+";return t<0&&(t=-t,n="-"),n+O(~~(t/60),2)+e+O(~~t%60,2)})}function Mt(t,e){var n=(e||"").match(t);if(null===n)return null;var i=((n[n.length-1]||[])+"").match(dn)||["-",0,0],r=60*i[1]+b(i[2]);return 0===r?0:"+"===i[0]?r:-r}function St(t,e){var i,r;return e._isUTC?(i=e.clone(),r=(v(t)||s(t)?t.valueOf():yt(t).valueOf())-i.valueOf(),i._d.setTime(i._d.valueOf()+r),n.updateOffset(i,!1),i):yt(t).local()}function Ct(t){return 15*-Math.round(t._d.getTimezoneOffset()/15)}function Dt(){return!!this.isValid()&&this._isUTC&&0===this._offset}function Tt(t,e){var n,i,r,o=t,s=null;return _t(t)?o={ms:t._milliseconds,d:t._days,M:t._months}:a(t)?(o={},e?o[e]=t:o.milliseconds=t):(s=fn.exec(t))?(n="-"===s[1]?-1:1,o={y:0,d:b(s[Pe])*n,h:b(s[Ae])*n,m:b(s[Oe])*n,s:b(s[Ie])*n,ms:b(wt(1e3*s[Le]))*n}):(s=pn.exec(t))?(n="-"===s[1]?-1:(s[1],1),o={y:Pt(s[2],n),M:Pt(s[3],n),w:Pt(s[4],n),d:Pt(s[5],n),h:Pt(s[6],n),m:Pt(s[7],n),s:Pt(s[8],n)}):null==o?o={}:"object"==typeof o&&("from"in o||"to"in o)&&(r=function(t,e){var n;return t.isValid()&&e.isValid()?(e=St(e,t),t.isBefore(e)?n=At(t,e):((n=At(e,t)).milliseconds=-n.milliseconds,n.months=-n.months),n):{milliseconds:0,months:0}}(yt(o.from),yt(o.to)),(o={}).ms=r.milliseconds,o.M=r.months),i=new xt(o),_t(t)&&u(t,"_locale")&&(i._locale=t._locale),i}function Pt(t,e){var n=t&&parseFloat(t.replace(",","."));return(isNaN(n)?0:n)*e}function At(t,e){var n={milliseconds:0,months:0};return n.months=e.month()-t.month()+12*(e.year()-t.year()),t.clone().add(n.months,"M").isAfter(e)&&--n.months,n.milliseconds=+e-+t.clone().add(n.months,"M"),n}function Ot(t,e){return function(n,i){var r;return null===i||isNaN(+i)||(k(e,"moment()."+e+"(period, number) is deprecated. Please use moment()."+e+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),r=n,n=i,i=r),It(this,Tt(n="string"==typeof n?+n:n,i),t),this}}function It(t,e,i,r){var o=e._milliseconds,a=wt(e._days),s=wt(e._months);t.isValid()&&(r=null==r||r,s&&q(t,B(t,"Month")+s*i),a&&$(t,"Date",B(t,"Date")+a*i),o&&t._d.setTime(t._d.valueOf()+o*i),r&&n.updateOffset(t,a||s))}function Lt(t,e){var n=12*(e.year()-t.year())+(e.month()-t.month()),i=t.clone().add(n,"months");return-(n+(e-i<0?(e-i)/(i-t.clone().add(n-1,"months")):(e-i)/(t.clone().add(n+1,"months")-i)))||0}function Et(t){var e;return void 0===t?this._locale._abbr:(null!=(e=lt(t))&&(this._locale=e),this)}function Ft(){return this._locale}function Nt(t,e){I(0,[t,t.length],0,e)}function Rt(t,e,n,i,r){var o;return null==t?J(this,i,r).year:((o=K(t,i,r))<e&&(e=o),function(t,e,n,i,r){var o=Q(t,e,n,i,r),a=Z(o.year,0,o.dayOfYear);return this.year(a.getUTCFullYear()),this.month(a.getUTCMonth()),this.date(a.getUTCDate()),this}.call(this,t,e,n,i,r))}function zt(t,e){e[Le]=b(1e3*("0."+t))}function Wt(t){return t}function Ht(t,e,n,i){var r=lt(),o=h().set(i,e);return r[n](o,t)}function jt(t,e,n){if(a(t)&&(e=t,t=void 0),t=t||"",null!=e)return Ht(t,e,n,"month");var i,r=[];for(i=0;i<12;i++)r[i]=Ht(t,i,n,"month");return r}function Yt(t,e,n,i){"boolean"==typeof t?a(e)&&(n=e,e=void 0):(e=t,t=!1,a(n=e)&&(n=e,e=void 0)),e=e||"";var r,o=lt(),s=t?o._week.dow:0;if(null!=n)return Ht(e,(n+s)%7,i,"day");var l=[];for(r=0;r<7;r++)l[r]=Ht(e,(r+s)%7,i,"day");return l}function Bt(t,e,n,i){var r=Tt(e,n);return t._milliseconds+=i*r._milliseconds,t._days+=i*r._days,t._months+=i*r._months,t._bubble()}function $t(t){return t<0?Math.floor(t):Math.ceil(t)}function Vt(t){return 4800*t/146097}function qt(t){return 146097*t/4800}function Ut(t){return function(){return this.as(t)}}function Gt(t){return function(){return this.isValid()?this._data[t]:NaN}}function Zt(t){return(0<t)-(t<0)||+t}function Xt(){if(!this.isValid())return this.localeData().invalidDate();var t,e,n=Bn(this._milliseconds)/1e3,i=Bn(this._days),r=Bn(this._months);e=y((t=y(n/60))/60),n%=60,t%=60;var o=y(r/12),a=r%=12,s=i,l=e,u=t,c=n?n.toFixed(3).replace(/\.?0+$/,""):"",h=this.asSeconds();if(!h)return"P0D";var d=h<0?"-":"",f=Zt(this._months)!==Zt(h)?"-":"",p=Zt(this._days)!==Zt(h)?"-":"",g=Zt(this._milliseconds)!==Zt(h)?"-":"";return d+"P"+(o?f+o+"Y":"")+(a?f+a+"M":"")+(s?p+s+"D":"")+(l||u||c?"T":"")+(l?g+l+"H":"")+(u?g+u+"M":"")+(c?g+c+"S":"")}var Qt,Jt;Jt=Array.prototype.some?Array.prototype.some:function(t){for(var e=Object(this),n=e.length>>>0,i=0;i<n;i++)if(i in e&&t.call(this,e[i],i,e))return!0;return!1};var Kt,te=n.momentProperties=[],ee=!1,ne={};n.suppressDeprecationWarnings=!1,n.deprecationHandler=null,Kt=Object.keys?Object.keys:function(t){var e,n=[];for(e in t)u(t,e)&&n.push(e);return n};var ie={},re={},oe=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,ae=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,se={},le={},ue=/\d/,ce=/\d\d/,he=/\d{3}/,de=/\d{4}/,fe=/[+-]?\d{6}/,pe=/\d\d?/,ge=/\d\d\d\d?/,me=/\d\d\d\d\d\d?/,ve=/\d{1,3}/,ye=/\d{1,4}/,be=/[+-]?\d{1,6}/,xe=/\d+/,_e=/[+-]?\d+/,we=/Z|[+-]\d\d:?\d\d/gi,ke=/Z|[+-]\d\d(?::?\d\d)?/gi,Me=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,Se={},Ce={},De=0,Te=1,Pe=2,Ae=3,Oe=4,Ie=5,Le=6,Ee=7,Fe=8;I("Y",0,0,function(){var t=this.year();return t<=9999?""+t:"+"+t}),I(0,["YY",2],0,function(){return this.year()%100}),I(0,["YYYY",4],0,"year"),I(0,["YYYYY",5],0,"year"),I(0,["YYYYYY",6,!0],0,"year"),D("year","y"),A("year",1),F("Y",_e),F("YY",pe,ce),F("YYYY",ye,de),F("YYYYY",be,fe),F("YYYYYY",be,fe),z(["YYYYY","YYYYYY"],De),z("YYYY",function(t,e){e[De]=2===t.length?n.parseTwoDigitYear(t):b(t)}),z("YY",function(t,e){e[De]=n.parseTwoDigitYear(t)}),z("Y",function(t,e){e[De]=parseInt(t,10)}),n.parseTwoDigitYear=function(t){return b(t)+(68<b(t)?1900:2e3)};var Ne,Re=Y("FullYear",!0);Ne=Array.prototype.indexOf?Array.prototype.indexOf:function(t){var e;for(e=0;e<this.length;++e)if(this[e]===t)return e;return-1},I("M",["MM",2],"Mo",function(){return this.month()+1}),I("MMM",0,0,function(t){return this.localeData().monthsShort(this,t)}),I("MMMM",0,0,function(t){return this.localeData().months(this,t)}),D("month","M"),A("month",8),F("M",pe),F("MM",pe,ce),F("MMM",function(t,e){return e.monthsShortRegex(t)}),F("MMMM",function(t,e){return e.monthsRegex(t)}),z(["M","MM"],function(t,e){e[Te]=b(t)-1}),z(["MMM","MMMM"],function(t,e,n,i){var r=n._locale.monthsParse(t,i,n._strict);null!=r?e[Te]=r:d(n).invalidMonth=t});var ze=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,We="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),He="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),je=Me,Ye=Me;I("w",["ww",2],"wo","week"),I("W",["WW",2],"Wo","isoWeek"),D("week","w"),D("isoWeek","W"),A("week",5),A("isoWeek",5),F("w",pe),F("ww",pe,ce),F("W",pe),F("WW",pe,ce),W(["w","ww","W","WW"],function(t,e,n,i){e[i.substr(0,1)]=b(t)}),I("d",0,"do","day"),I("dd",0,0,function(t){return this.localeData().weekdaysMin(this,t)}),I("ddd",0,0,function(t){return this.localeData().weekdaysShort(this,t)}),I("dddd",0,0,function(t){return this.localeData().weekdays(this,t)}),I("e",0,0,"weekday"),I("E",0,0,"isoWeekday"),D("day","d"),D("weekday","e"),D("isoWeekday","E"),A("day",11),A("weekday",11),A("isoWeekday",11),F("d",pe),F("e",pe),F("E",pe),F("dd",function(t,e){return e.weekdaysMinRegex(t)}),F("ddd",function(t,e){return e.weekdaysShortRegex(t)}),F("dddd",function(t,e){return e.weekdaysRegex(t)}),W(["dd","ddd","dddd"],function(t,e,n,i){var r=n._locale.weekdaysParse(t,i,n._strict);null!=r?e.d=r:d(n).invalidWeekday=t}),W(["d","e","E"],function(t,e,n,i){e[i]=b(t)});var Be="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),$e="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),Ve="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),qe=Me,Ue=Me,Ge=Me;I("H",["HH",2],0,"hour"),I("h",["hh",2],0,et),I("k",["kk",2],0,function(){return this.hours()||24}),I("hmm",0,0,function(){return""+et.apply(this)+O(this.minutes(),2)}),I("hmmss",0,0,function(){return""+et.apply(this)+O(this.minutes(),2)+O(this.seconds(),2)}),I("Hmm",0,0,function(){return""+this.hours()+O(this.minutes(),2)}),I("Hmmss",0,0,function(){return""+this.hours()+O(this.minutes(),2)+O(this.seconds(),2)}),nt("a",!0),nt("A",!1),D("hour","h"),A("hour",13),F("a",it),F("A",it),F("H",pe),F("h",pe),F("k",pe),F("HH",pe,ce),F("hh",pe,ce),F("kk",pe,ce),F("hmm",ge),F("hmmss",me),F("Hmm",ge),F("Hmmss",me),z(["H","HH"],Ae),z(["k","kk"],function(t,e,n){var i=b(t);e[Ae]=24===i?0:i}),z(["a","A"],function(t,e,n){n._isPm=n._locale.isPM(t),n._meridiem=t}),z(["h","hh"],function(t,e,n){e[Ae]=b(t),d(n).bigHour=!0}),z("hmm",function(t,e,n){var i=t.length-2;e[Ae]=b(t.substr(0,i)),e[Oe]=b(t.substr(i)),d(n).bigHour=!0}),z("hmmss",function(t,e,n){var i=t.length-4,r=t.length-2;e[Ae]=b(t.substr(0,i)),e[Oe]=b(t.substr(i,2)),e[Ie]=b(t.substr(r)),d(n).bigHour=!0}),z("Hmm",function(t,e,n){var i=t.length-2;e[Ae]=b(t.substr(0,i)),e[Oe]=b(t.substr(i))}),z("Hmmss",function(t,e,n){var i=t.length-4,r=t.length-2;e[Ae]=b(t.substr(0,i)),e[Oe]=b(t.substr(i,2)),e[Ie]=b(t.substr(r))});var Ze,Xe=Y("Hours",!0),Qe={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:We,monthsShort:He,week:{dow:0,doy:6},weekdays:Be,weekdaysMin:Ve,weekdaysShort:$e,meridiemParse:/[ap]\.?m?\.?/i},Je={},Ke={},tn=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,en=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,nn=/Z|[+-]\d\d(?::?\d\d)?/,rn=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],on=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],an=/^\/?Date\((\-?\d+)/i,sn=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,ln={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};n.createFromInputFallback=w("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(t){t._d=new Date(t._i+(t._useUTC?" UTC":""))}),n.ISO_8601=function(){},n.RFC_2822=function(){};var un=w("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var t=yt.apply(null,arguments);return this.isValid()&&t.isValid()?t<this?this:t:p()}),cn=w("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var t=yt.apply(null,arguments);return this.isValid()&&t.isValid()?this<t?this:t:p()}),hn=["year","quarter","month","week","day","hour","minute","second","millisecond"];kt("Z",":"),kt("ZZ",""),F("Z",ke),F("ZZ",ke),z(["Z","ZZ"],function(t,e,n){n._useUTC=!0,n._tzm=Mt(ke,t)});var dn=/([\+\-]|\d\d)/gi;n.updateOffset=function(){};var fn=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,pn=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;Tt.fn=xt.prototype,Tt.invalid=function(){return Tt(NaN)};var gn=Ot(1,"add"),mn=Ot(-1,"subtract");n.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",n.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var vn=w("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(t){return void 0===t?this.localeData():this.locale(t)});I(0,["gg",2],0,function(){return this.weekYear()%100}),I(0,["GG",2],0,function(){return this.isoWeekYear()%100}),Nt("gggg","weekYear"),Nt("ggggg","weekYear"),Nt("GGGG","isoWeekYear"),Nt("GGGGG","isoWeekYear"),D("weekYear","gg"),D("isoWeekYear","GG"),A("weekYear",1),A("isoWeekYear",1),F("G",_e),F("g",_e),F("GG",pe,ce),F("gg",pe,ce),F("GGGG",ye,de),F("gggg",ye,de),F("GGGGG",be,fe),F("ggggg",be,fe),W(["gggg","ggggg","GGGG","GGGGG"],function(t,e,n,i){e[i.substr(0,2)]=b(t)}),W(["gg","GG"],function(t,e,i,r){e[r]=n.parseTwoDigitYear(t)}),I("Q",0,"Qo","quarter"),D("quarter","Q"),A("quarter",7),F("Q",ue),z("Q",function(t,e){e[Te]=3*(b(t)-1)}),I("D",["DD",2],"Do","date"),D("date","D"),A("date",9),F("D",pe),F("DD",pe,ce),F("Do",function(t,e){return t?e._dayOfMonthOrdinalParse||e._ordinalParse:e._dayOfMonthOrdinalParseLenient}),z(["D","DD"],Pe),z("Do",function(t,e){e[Pe]=b(t.match(pe)[0])});var yn=Y("Date",!0);I("DDD",["DDDD",3],"DDDo","dayOfYear"),D("dayOfYear","DDD"),A("dayOfYear",4),F("DDD",ve),F("DDDD",he),z(["DDD","DDDD"],function(t,e,n){n._dayOfYear=b(t)}),I("m",["mm",2],0,"minute"),D("minute","m"),A("minute",14),F("m",pe),F("mm",pe,ce),z(["m","mm"],Oe);var bn=Y("Minutes",!1);I("s",["ss",2],0,"second"),D("second","s"),A("second",15),F("s",pe),F("ss",pe,ce),z(["s","ss"],Ie);var xn,_n=Y("Seconds",!1);for(I("S",0,0,function(){return~~(this.millisecond()/100)}),I(0,["SS",2],0,function(){return~~(this.millisecond()/10)}),I(0,["SSS",3],0,"millisecond"),I(0,["SSSS",4],0,function(){return 10*this.millisecond()}),I(0,["SSSSS",5],0,function(){return 100*this.millisecond()}),I(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond()}),I(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond()}),I(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond()}),I(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond()}),D("millisecond","ms"),A("millisecond",16),F("S",ve,ue),F("SS",ve,ce),F("SSS",ve,he),xn="SSSS";xn.length<=9;xn+="S")F(xn,xe);for(xn="S";xn.length<=9;xn+="S")z(xn,zt);var wn=Y("Milliseconds",!1);I("z",0,0,"zoneAbbr"),I("zz",0,0,"zoneName");var kn=m.prototype;kn.add=gn,kn.calendar=function(t,e){var i=t||yt(),r=St(i,this).startOf("day"),o=n.calendarFormat(this,r)||"sameElse",a=e&&(M(e[o])?e[o].call(this,i):e[o]);return this.format(a||this.localeData().calendar(o,this,yt(i)))},kn.clone=function(){return new m(this)},kn.diff=function(t,e,n){var i,r,o;if(!this.isValid())return NaN;if(!(i=St(t,this)).isValid())return NaN;switch(r=6e4*(i.utcOffset()-this.utcOffset()),e=T(e)){case"year":o=Lt(this,i)/12;break;case"month":o=Lt(this,i);break;case"quarter":o=Lt(this,i)/3;break;case"second":o=(this-i)/1e3;break;case"minute":o=(this-i)/6e4;break;case"hour":o=(this-i)/36e5;break;case"day":o=(this-i-r)/864e5;break;case"week":o=(this-i-r)/6048e5;break;default:o=this-i}return n?o:y(o)},kn.endOf=function(t){return void 0===(t=T(t))||"millisecond"===t?this:("date"===t&&(t="day"),this.startOf(t).add(1,"isoWeek"===t?"week":t).subtract(1,"ms"))},kn.format=function(t){t||(t=this.isUtc()?n.defaultFormatUtc:n.defaultFormat);var e=L(this,t);return this.localeData().postformat(e)},kn.from=function(t,e){return this.isValid()&&(v(t)&&t.isValid()||yt(t).isValid())?Tt({to:this,from:t}).locale(this.locale()).humanize(!e):this.localeData().invalidDate()},kn.fromNow=function(t){return this.from(yt(),t)},kn.to=function(t,e){return this.isValid()&&(v(t)&&t.isValid()||yt(t).isValid())?Tt({from:this,to:t}).locale(this.locale()).humanize(!e):this.localeData().invalidDate()},kn.toNow=function(t){return this.to(yt(),t)},kn.get=function(t){return M(this[t=T(t)])?this[t]():this},kn.invalidAt=function(){return d(this).overflow},kn.isAfter=function(t,e){var n=v(t)?t:yt(t);return!(!this.isValid()||!n.isValid())&&("millisecond"===(e=T(o(e)?"millisecond":e))?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(e).valueOf())},kn.isBefore=function(t,e){var n=v(t)?t:yt(t);return!(!this.isValid()||!n.isValid())&&("millisecond"===(e=T(o(e)?"millisecond":e))?this.valueOf()<n.valueOf():this.clone().endOf(e).valueOf()<n.valueOf())},kn.isBetween=function(t,e,n,i){return("("===(i=i||"()")[0]?this.isAfter(t,n):!this.isBefore(t,n))&&(")"===i[1]?this.isBefore(e,n):!this.isAfter(e,n))},kn.isSame=function(t,e){var n,i=v(t)?t:yt(t);return!(!this.isValid()||!i.isValid())&&("millisecond"===(e=T(e||"millisecond"))?this.valueOf()===i.valueOf():(n=i.valueOf(),this.clone().startOf(e).valueOf()<=n&&n<=this.clone().endOf(e).valueOf()))},kn.isSameOrAfter=function(t,e){return this.isSame(t,e)||this.isAfter(t,e)},kn.isSameOrBefore=function(t,e){return this.isSame(t,e)||this.isBefore(t,e)},kn.isValid=function(){return f(this)},kn.lang=vn,kn.locale=Et,kn.localeData=Ft,kn.max=cn,kn.min=un,kn.parsingFlags=function(){return c({},d(this))},kn.set=function(t,e){if("object"==typeof t)for(var n=function(t){var e=[];for(var n in t)e.push({unit:n,priority:re[n]});return e.sort(function(t,e){return t.priority-e.priority}),e}(t=P(t)),i=0;i<n.length;i++)this[n[i].unit](t[n[i].unit]);else if(M(this[t=T(t)]))return this[t](e);return this},kn.startOf=function(t){switch(t=T(t)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":case"date":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===t&&this.weekday(0),"isoWeek"===t&&this.isoWeekday(1),"quarter"===t&&this.month(3*Math.floor(this.month()/3)),this},kn.subtract=mn,kn.toArray=function(){var t=this;return[t.year(),t.month(),t.date(),t.hour(),t.minute(),t.second(),t.millisecond()]},kn.toObject=function(){var t=this;return{years:t.year(),months:t.month(),date:t.date(),hours:t.hours(),minutes:t.minutes(),seconds:t.seconds(),milliseconds:t.milliseconds()}},kn.toDate=function(){return new Date(this.valueOf())},kn.toISOString=function(t){if(!this.isValid())return null;var e=!0!==t,n=e?this.clone().utc():this;return n.year()<0||9999<n.year()?L(n,e?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):M(Date.prototype.toISOString)?e?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",L(n,"Z")):L(n,e?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ");
},kn.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var t="moment",e="";this.isLocal()||(t=0===this.utcOffset()?"moment.utc":"moment.parseZone",e="Z");var n="["+t+'("]',i=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",r=e+'[")]';return this.format(n+i+"-MM-DD[T]HH:mm:ss.SSS"+r)},kn.toJSON=function(){return this.isValid()?this.toISOString():null},kn.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},kn.unix=function(){return Math.floor(this.valueOf()/1e3)},kn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},kn.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},kn.year=Re,kn.isLeapYear=function(){return j(this.year())},kn.weekYear=function(t){return Rt.call(this,t,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},kn.isoWeekYear=function(t){return Rt.call(this,t,this.isoWeek(),this.isoWeekday(),1,4)},kn.quarter=kn.quarters=function(t){return null==t?Math.ceil((this.month()+1)/3):this.month(3*(t-1)+this.month()%3)},kn.month=U,kn.daysInMonth=function(){return V(this.year(),this.month())},kn.week=kn.weeks=function(t){var e=this.localeData().week(this);return null==t?e:this.add(7*(t-e),"d")},kn.isoWeek=kn.isoWeeks=function(t){var e=J(this,1,4).week;return null==t?e:this.add(7*(t-e),"d")},kn.weeksInYear=function(){var t=this.localeData()._week;return K(this.year(),t.dow,t.doy)},kn.isoWeeksInYear=function(){return K(this.year(),1,4)},kn.date=yn,kn.day=kn.days=function(t){if(!this.isValid())return null!=t?this:NaN;var e,n,i=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=t?(e=t,n=this.localeData(),t="string"!=typeof e?e:isNaN(e)?"number"==typeof(e=n.weekdaysParse(e))?e:null:parseInt(e,10),this.add(t-i,"d")):i},kn.weekday=function(t){if(!this.isValid())return null!=t?this:NaN;var e=(this.day()+7-this.localeData()._week.dow)%7;return null==t?e:this.add(t-e,"d")},kn.isoWeekday=function(t){if(!this.isValid())return null!=t?this:NaN;if(null==t)return this.day()||7;var e,n,i=(e=t,n=this.localeData(),"string"==typeof e?n.weekdaysParse(e)%7||7:isNaN(e)?null:e);return this.day(this.day()%7?i:i-7)},kn.dayOfYear=function(t){var e=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==t?e:this.add(t-e,"d")},kn.hour=kn.hours=Xe,kn.minute=kn.minutes=bn,kn.second=kn.seconds=_n,kn.millisecond=kn.milliseconds=wn,kn.utcOffset=function(t,e,i){var r,o=this._offset||0;if(!this.isValid())return null!=t?this:NaN;if(null==t)return this._isUTC?o:Ct(this);if("string"==typeof t){if(null===(t=Mt(ke,t)))return this}else Math.abs(t)<16&&!i&&(t*=60);return!this._isUTC&&e&&(r=Ct(this)),this._offset=t,this._isUTC=!0,null!=r&&this.add(r,"m"),o!==t&&(!e||this._changeInProgress?It(this,Tt(t-o,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,n.updateOffset(this,!0),this._changeInProgress=null)),this},kn.utc=function(t){return this.utcOffset(0,t)},kn.local=function(t){return this._isUTC&&(this.utcOffset(0,t),this._isUTC=!1,t&&this.subtract(Ct(this),"m")),this},kn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var t=Mt(we,this._i);null!=t?this.utcOffset(t):this.utcOffset(0,!0)}return this},kn.hasAlignedHourOffset=function(t){return!!this.isValid()&&(t=t?yt(t).utcOffset():0,(this.utcOffset()-t)%60==0)},kn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},kn.isLocal=function(){return!!this.isValid()&&!this._isUTC},kn.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},kn.isUtc=Dt,kn.isUTC=Dt,kn.zoneAbbr=function(){return this._isUTC?"UTC":""},kn.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},kn.dates=w("dates accessor is deprecated. Use date instead.",yn),kn.months=w("months accessor is deprecated. Use month instead",U),kn.years=w("years accessor is deprecated. Use year instead",Re),kn.zone=w("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",function(t,e){return null!=t?("string"!=typeof t&&(t=-t),this.utcOffset(t,e),this):-this.utcOffset()}),kn.isDSTShifted=w("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",function(){if(!o(this._isDSTShifted))return this._isDSTShifted;var t={};if(g(t,this),(t=mt(t))._a){var e=t._isUTC?h(t._a):yt(t._a);this._isDSTShifted=this.isValid()&&0<x(t._a,e.toArray())}else this._isDSTShifted=!1;return this._isDSTShifted});var Mn=C.prototype;Mn.calendar=function(t,e,n){var i=this._calendar[t]||this._calendar.sameElse;return M(i)?i.call(e,n):i},Mn.longDateFormat=function(t){var e=this._longDateFormat[t],n=this._longDateFormat[t.toUpperCase()];return e||!n?e:(this._longDateFormat[t]=n.replace(/MMMM|MM|DD|dddd/g,function(t){return t.slice(1)}),this._longDateFormat[t])},Mn.invalidDate=function(){return this._invalidDate},Mn.ordinal=function(t){return this._ordinal.replace("%d",t)},Mn.preparse=Wt,Mn.postformat=Wt,Mn.relativeTime=function(t,e,n,i){var r=this._relativeTime[n];return M(r)?r(t,e,n,i):r.replace(/%d/i,t)},Mn.pastFuture=function(t,e){var n=this._relativeTime[0<t?"future":"past"];return M(n)?n(e):n.replace(/%s/i,e)},Mn.set=function(t){var e,n;for(n in t)M(e=t[n])?this[n]=e:this["_"+n]=e;this._config=t,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},Mn.months=function(t,e){return t?i(this._months)?this._months[t.month()]:this._months[(this._months.isFormat||ze).test(e)?"format":"standalone"][t.month()]:i(this._months)?this._months:this._months.standalone},Mn.monthsShort=function(t,e){return t?i(this._monthsShort)?this._monthsShort[t.month()]:this._monthsShort[ze.test(e)?"format":"standalone"][t.month()]:i(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},Mn.monthsParse=function(t,e,n){var i,r,o;if(this._monthsParseExact)return function(t,e,n){var i,r,o,a=t.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],i=0;i<12;++i)o=h([2e3,i]),this._shortMonthsParse[i]=this.monthsShort(o,"").toLocaleLowerCase(),this._longMonthsParse[i]=this.months(o,"").toLocaleLowerCase();return n?"MMM"===e?-1!==(r=Ne.call(this._shortMonthsParse,a))?r:null:-1!==(r=Ne.call(this._longMonthsParse,a))?r:null:"MMM"===e?-1!==(r=Ne.call(this._shortMonthsParse,a))?r:-1!==(r=Ne.call(this._longMonthsParse,a))?r:null:-1!==(r=Ne.call(this._longMonthsParse,a))?r:-1!==(r=Ne.call(this._shortMonthsParse,a))?r:null}.call(this,t,e,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),i=0;i<12;i++){if(r=h([2e3,i]),n&&!this._longMonthsParse[i]&&(this._longMonthsParse[i]=new RegExp("^"+this.months(r,"").replace(".","")+"$","i"),this._shortMonthsParse[i]=new RegExp("^"+this.monthsShort(r,"").replace(".","")+"$","i")),n||this._monthsParse[i]||(o="^"+this.months(r,"")+"|^"+this.monthsShort(r,""),this._monthsParse[i]=new RegExp(o.replace(".",""),"i")),n&&"MMMM"===e&&this._longMonthsParse[i].test(t))return i;if(n&&"MMM"===e&&this._shortMonthsParse[i].test(t))return i;if(!n&&this._monthsParse[i].test(t))return i}},Mn.monthsRegex=function(t){return this._monthsParseExact?(u(this,"_monthsRegex")||G.call(this),t?this._monthsStrictRegex:this._monthsRegex):(u(this,"_monthsRegex")||(this._monthsRegex=Ye),this._monthsStrictRegex&&t?this._monthsStrictRegex:this._monthsRegex)},Mn.monthsShortRegex=function(t){return this._monthsParseExact?(u(this,"_monthsRegex")||G.call(this),t?this._monthsShortStrictRegex:this._monthsShortRegex):(u(this,"_monthsShortRegex")||(this._monthsShortRegex=je),this._monthsShortStrictRegex&&t?this._monthsShortStrictRegex:this._monthsShortRegex)},Mn.week=function(t){return J(t,this._week.dow,this._week.doy).week},Mn.firstDayOfYear=function(){return this._week.doy},Mn.firstDayOfWeek=function(){return this._week.dow},Mn.weekdays=function(t,e){return t?i(this._weekdays)?this._weekdays[t.day()]:this._weekdays[this._weekdays.isFormat.test(e)?"format":"standalone"][t.day()]:i(this._weekdays)?this._weekdays:this._weekdays.standalone},Mn.weekdaysMin=function(t){return t?this._weekdaysMin[t.day()]:this._weekdaysMin},Mn.weekdaysShort=function(t){return t?this._weekdaysShort[t.day()]:this._weekdaysShort},Mn.weekdaysParse=function(t,e,n){var i,r,o;if(this._weekdaysParseExact)return function(t,e,n){var i,r,o,a=t.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],i=0;i<7;++i)o=h([2e3,1]).day(i),this._minWeekdaysParse[i]=this.weekdaysMin(o,"").toLocaleLowerCase(),this._shortWeekdaysParse[i]=this.weekdaysShort(o,"").toLocaleLowerCase(),this._weekdaysParse[i]=this.weekdays(o,"").toLocaleLowerCase();return n?"dddd"===e?-1!==(r=Ne.call(this._weekdaysParse,a))?r:null:"ddd"===e?-1!==(r=Ne.call(this._shortWeekdaysParse,a))?r:null:-1!==(r=Ne.call(this._minWeekdaysParse,a))?r:null:"dddd"===e?-1!==(r=Ne.call(this._weekdaysParse,a))?r:-1!==(r=Ne.call(this._shortWeekdaysParse,a))?r:-1!==(r=Ne.call(this._minWeekdaysParse,a))?r:null:"ddd"===e?-1!==(r=Ne.call(this._shortWeekdaysParse,a))?r:-1!==(r=Ne.call(this._weekdaysParse,a))?r:-1!==(r=Ne.call(this._minWeekdaysParse,a))?r:null:-1!==(r=Ne.call(this._minWeekdaysParse,a))?r:-1!==(r=Ne.call(this._weekdaysParse,a))?r:-1!==(r=Ne.call(this._shortWeekdaysParse,a))?r:null}.call(this,t,e,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),i=0;i<7;i++){if(r=h([2e3,1]).day(i),n&&!this._fullWeekdaysParse[i]&&(this._fullWeekdaysParse[i]=new RegExp("^"+this.weekdays(r,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[i]=new RegExp("^"+this.weekdaysShort(r,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[i]=new RegExp("^"+this.weekdaysMin(r,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[i]||(o="^"+this.weekdays(r,"")+"|^"+this.weekdaysShort(r,"")+"|^"+this.weekdaysMin(r,""),this._weekdaysParse[i]=new RegExp(o.replace(".",""),"i")),n&&"dddd"===e&&this._fullWeekdaysParse[i].test(t))return i;if(n&&"ddd"===e&&this._shortWeekdaysParse[i].test(t))return i;if(n&&"dd"===e&&this._minWeekdaysParse[i].test(t))return i;if(!n&&this._weekdaysParse[i].test(t))return i}},Mn.weekdaysRegex=function(t){return this._weekdaysParseExact?(u(this,"_weekdaysRegex")||tt.call(this),t?this._weekdaysStrictRegex:this._weekdaysRegex):(u(this,"_weekdaysRegex")||(this._weekdaysRegex=qe),this._weekdaysStrictRegex&&t?this._weekdaysStrictRegex:this._weekdaysRegex)},Mn.weekdaysShortRegex=function(t){return this._weekdaysParseExact?(u(this,"_weekdaysRegex")||tt.call(this),t?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(u(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=Ue),this._weekdaysShortStrictRegex&&t?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},Mn.weekdaysMinRegex=function(t){return this._weekdaysParseExact?(u(this,"_weekdaysRegex")||tt.call(this),t?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(u(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=Ge),this._weekdaysMinStrictRegex&&t?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},Mn.isPM=function(t){return"p"===(t+"").toLowerCase().charAt(0)},Mn.meridiem=function(t,e,n){return 11<t?n?"pm":"PM":n?"am":"AM"},at("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(t){var e=t%10;return t+(1===b(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th")}}),n.lang=w("moment.lang is deprecated. Use moment.locale instead.",at),n.langData=w("moment.langData is deprecated. Use moment.localeData instead.",lt);var Sn=Math.abs,Cn=Ut("ms"),Dn=Ut("s"),Tn=Ut("m"),Pn=Ut("h"),An=Ut("d"),On=Ut("w"),In=Ut("M"),Ln=Ut("y"),En=Gt("milliseconds"),Fn=Gt("seconds"),Nn=Gt("minutes"),Rn=Gt("hours"),zn=Gt("days"),Wn=Gt("months"),Hn=Gt("years"),jn=Math.round,Yn={ss:44,s:45,m:45,h:22,d:26,M:11},Bn=Math.abs,$n=xt.prototype;return $n.isValid=function(){return this._isValid},$n.abs=function(){var t=this._data;return this._milliseconds=Sn(this._milliseconds),this._days=Sn(this._days),this._months=Sn(this._months),t.milliseconds=Sn(t.milliseconds),t.seconds=Sn(t.seconds),t.minutes=Sn(t.minutes),t.hours=Sn(t.hours),t.months=Sn(t.months),t.years=Sn(t.years),this},$n.add=function(t,e){return Bt(this,t,e,1)},$n.subtract=function(t,e){return Bt(this,t,e,-1)},$n.as=function(t){if(!this.isValid())return NaN;var e,n,i=this._milliseconds;if("month"===(t=T(t))||"year"===t)return e=this._days+i/864e5,n=this._months+Vt(e),"month"===t?n:n/12;switch(e=this._days+Math.round(qt(this._months)),t){case"week":return e/7+i/6048e5;case"day":return e+i/864e5;case"hour":return 24*e+i/36e5;case"minute":return 1440*e+i/6e4;case"second":return 86400*e+i/1e3;case"millisecond":return Math.floor(864e5*e)+i;default:throw new Error("Unknown unit "+t)}},$n.asMilliseconds=Cn,$n.asSeconds=Dn,$n.asMinutes=Tn,$n.asHours=Pn,$n.asDays=An,$n.asWeeks=On,$n.asMonths=In,$n.asYears=Ln,$n.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*b(this._months/12):NaN},$n._bubble=function(){var t,e,n,i,r,o=this._milliseconds,a=this._days,s=this._months,l=this._data;return 0<=o&&0<=a&&0<=s||o<=0&&a<=0&&s<=0||(o+=864e5*$t(qt(s)+a),s=a=0),l.milliseconds=o%1e3,t=y(o/1e3),l.seconds=t%60,e=y(t/60),l.minutes=e%60,n=y(e/60),l.hours=n%24,s+=r=y(Vt(a+=y(n/24))),a-=$t(qt(r)),i=y(s/12),s%=12,l.days=a,l.months=s,l.years=i,this},$n.clone=function(){return Tt(this)},$n.get=function(t){return t=T(t),this.isValid()?this[t+"s"]():NaN},$n.milliseconds=En,$n.seconds=Fn,$n.minutes=Nn,$n.hours=Rn,$n.days=zn,$n.weeks=function(){return y(this.days()/7)},$n.months=Wn,$n.years=Hn,$n.humanize=function(t){if(!this.isValid())return this.localeData().invalidDate();var e,n,i,r,o,a,s,l,u,c,h,d=this.localeData(),f=(n=!t,i=d,r=Tt(e=this).abs(),o=jn(r.as("s")),a=jn(r.as("m")),s=jn(r.as("h")),l=jn(r.as("d")),u=jn(r.as("M")),c=jn(r.as("y")),(h=o<=Yn.ss&&["s",o]||o<Yn.s&&["ss",o]||a<=1&&["m"]||a<Yn.m&&["mm",a]||s<=1&&["h"]||s<Yn.h&&["hh",s]||l<=1&&["d"]||l<Yn.d&&["dd",l]||u<=1&&["M"]||u<Yn.M&&["MM",u]||c<=1&&["y"]||["yy",c])[2]=n,h[3]=0<+e,h[4]=i,function(t,e,n,i,r){return r.relativeTime(e||1,!!n,t,i)}.apply(null,h));return t&&(f=d.pastFuture(+this,f)),d.postformat(f)},$n.toISOString=Xt,$n.toString=Xt,$n.toJSON=Xt,$n.locale=Et,$n.localeData=Ft,$n.toIsoString=w("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",Xt),$n.lang=vn,I("X",0,0,"unix"),I("x",0,0,"valueOf"),F("x",_e),F("X",/[+-]?\d+(\.\d{1,3})?/),z("X",function(t,e,n){n._d=new Date(1e3*parseFloat(t,10))}),z("x",function(t,e,n){n._d=new Date(b(t))}),n.version="2.22.2",Qt=yt,n.fn=kn,n.min=function(){return bt("isBefore",[].slice.call(arguments,0))},n.max=function(){return bt("isAfter",[].slice.call(arguments,0))},n.now=function(){return Date.now?Date.now():+new Date},n.utc=h,n.unix=function(t){return yt(1e3*t)},n.months=function(t,e){return jt(t,e,"months")},n.isDate=s,n.locale=at,n.invalid=p,n.duration=Tt,n.isMoment=v,n.weekdays=function(t,e,n){return Yt(t,e,n,"weekdays")},n.parseZone=function(){return yt.apply(null,arguments).parseZone()},n.localeData=lt,n.isDuration=_t,n.monthsShort=function(t,e){return jt(t,e,"monthsShort")},n.weekdaysMin=function(t,e,n){return Yt(t,e,n,"weekdaysMin")},n.defineLocale=st,n.updateLocale=function(t,e){if(null!=e){var n,i,r=Qe;null!=(i=ot(t))&&(r=i._config),(n=new C(e=S(r,e))).parentLocale=Je[t],Je[t]=n,at(t)}else null!=Je[t]&&(null!=Je[t].parentLocale?Je[t]=Je[t].parentLocale:null!=Je[t]&&delete Je[t]);return Je[t]},n.locales=function(){return Kt(Je)},n.weekdaysShort=function(t,e,n){return Yt(t,e,n,"weekdaysShort")},n.normalizeUnits=T,n.relativeTimeRounding=function(t){return void 0===t?jn:"function"==typeof t&&(jn=t,!0)},n.relativeTimeThreshold=function(t,e){return void 0!==Yn[t]&&(void 0===e?Yn[t]:(Yn[t]=e,"s"===t&&(Yn.ss=e-1),!0))},n.calendarFormat=function(t,e){var n=t.diff(e,"days",!0);return n<-6?"sameElse":n<-1?"lastWeek":n<0?"lastDay":n<1?"sameDay":n<2?"nextDay":n<7?"nextWeek":"sameElse"},n.prototype=kn,n.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"YYYY-[W]WW",MONTH:"YYYY-MM"},n},"object"==typeof n&&void 0!==e?e.exports=r():i.moment=r()},{}],7:[function(t,e,n){var i=t(30)();i.helpers=t(46),t(28)(i),i.Animation=t(22),i.animationService=t(23),i.defaults=t(26),i.Element=t(27),i.elements=t(41),i.Interaction=t(29),i.layouts=t(31),i.platform=t(49),i.plugins=t(32),i.Scale=t(33),i.scaleService=t(34),i.Ticks=t(35),i.Tooltip=t(36),t(24)(i),t(25)(i),t(56)(i),t(54)(i),t(55)(i),t(57)(i),t(58)(i),t(59)(i),t(15)(i),t(16)(i),t(17)(i),t(18)(i),t(19)(i),t(20)(i),t(21)(i),t(8)(i),t(9)(i),t(10)(i),t(11)(i),t(12)(i),t(13)(i),t(14)(i);var r=t(50);for(var o in r)r.hasOwnProperty(o)&&i.plugins.register(r[o]);i.platform.initialize(),e.exports=i,"undefined"!=typeof window&&(window.Chart=i),i.Legend=r.legend._element,i.Title=r.title._element,i.pluginService=i.plugins,i.PluginBase=i.Element.extend({}),i.canvasHelpers=i.helpers.canvas,i.layoutService=i.layouts},{10:10,11:11,12:12,13:13,14:14,15:15,16:16,17:17,18:18,19:19,20:20,21:21,22:22,23:23,24:24,25:25,26:26,27:27,28:28,29:29,30:30,31:31,32:32,33:33,34:34,35:35,36:36,41:41,46:46,49:49,50:50,54:54,55:55,56:56,57:57,58:58,59:59,8:8,9:9}],8:[function(t,e,n){"use strict";e.exports=function(t){t.Bar=function(e,n){return n.type="bar",new t(e,n)}}},{}],9:[function(t,e,n){"use strict";e.exports=function(t){t.Bubble=function(e,n){return n.type="bubble",new t(e,n)}}},{}],10:[function(t,e,n){"use strict";e.exports=function(t){t.Doughnut=function(e,n){return n.type="doughnut",new t(e,n)}}},{}],11:[function(t,e,n){"use strict";e.exports=function(t){t.Line=function(e,n){return n.type="line",new t(e,n)}}},{}],12:[function(t,e,n){"use strict";e.exports=function(t){t.PolarArea=function(e,n){return n.type="polarArea",new t(e,n)}}},{}],13:[function(t,e,n){"use strict";e.exports=function(t){t.Radar=function(e,n){return n.type="radar",new t(e,n)}}},{}],14:[function(t,e,n){"use strict";e.exports=function(t){t.Scatter=function(e,n){return n.type="scatter",new t(e,n)}}},{}],15:[function(t,e,n){"use strict";var i=t(26),r=t(41),o=t(46);i._set("bar",{hover:{mode:"label"},scales:{xAxes:[{type:"category",categoryPercentage:.8,barPercentage:.9,offset:!0,gridLines:{offsetGridLines:!0}}],yAxes:[{type:"linear"}]}}),i._set("horizontalBar",{hover:{mode:"index",axis:"y"},scales:{xAxes:[{type:"linear",position:"bottom"}],yAxes:[{position:"left",type:"category",categoryPercentage:.8,barPercentage:.9,offset:!0,gridLines:{offsetGridLines:!0}}]},elements:{rectangle:{borderSkipped:"left"}},tooltips:{callbacks:{title:function(t,e){var n="";return 0<t.length&&(t[0].yLabel?n=t[0].yLabel:0<e.labels.length&&t[0].index<e.labels.length&&(n=e.labels[t[0].index])),n},label:function(t,e){return(e.datasets[t.datasetIndex].label||"")+": "+t.xLabel}},mode:"index",axis:"y"}}),e.exports=function(t){t.controllers.bar=t.DatasetController.extend({dataElementType:r.Rectangle,initialize:function(){var e;t.DatasetController.prototype.initialize.apply(this,arguments),(e=this.getMeta()).stack=this.getDataset().stack,e.bar=!0},update:function(t){var e,n,i=this.getMeta().data;for(this._ruler=this.getRuler(),e=0,n=i.length;e<n;++e)this.updateElement(i[e],e,t)},updateElement:function(t,e,n){var i=this,r=i.chart,a=i.getMeta(),s=i.getDataset(),l=t.custom||{},u=r.options.elements.rectangle;t._xScale=i.getScaleForId(a.xAxisID),t._yScale=i.getScaleForId(a.yAxisID),t._datasetIndex=i.index,t._index=e,t._model={datasetLabel:s.label,label:r.data.labels[e],borderSkipped:l.borderSkipped?l.borderSkipped:u.borderSkipped,backgroundColor:l.backgroundColor?l.backgroundColor:o.valueAtIndexOrDefault(s.backgroundColor,e,u.backgroundColor),borderColor:l.borderColor?l.borderColor:o.valueAtIndexOrDefault(s.borderColor,e,u.borderColor),borderWidth:l.borderWidth?l.borderWidth:o.valueAtIndexOrDefault(s.borderWidth,e,u.borderWidth)},i.updateElementGeometry(t,e,n),t.pivot()},updateElementGeometry:function(t,e,n){var i=this,r=t._model,o=i.getValueScale(),a=o.getBasePixel(),s=o.isHorizontal(),l=i._ruler||i.getRuler(),u=i.calculateBarValuePixels(i.index,e),c=i.calculateBarIndexPixels(i.index,e,l);r.horizontal=s,r.base=n?a:u.base,r.x=s?n?a:u.head:c.center,r.y=s?c.center:n?a:u.head,r.height=s?c.size:void 0,r.width=s?void 0:c.size},getValueScaleId:function(){return this.getMeta().yAxisID},getIndexScaleId:function(){return this.getMeta().xAxisID},getValueScale:function(){return this.getScaleForId(this.getValueScaleId())},getIndexScale:function(){return this.getScaleForId(this.getIndexScaleId())},_getStacks:function(t){var e,n,i=this.chart,r=this.getIndexScale().options.stacked,o=void 0===t?i.data.datasets.length:t+1,a=[];for(e=0;e<o;++e)(n=i.getDatasetMeta(e)).bar&&i.isDatasetVisible(e)&&(!1===r||!0===r&&-1===a.indexOf(n.stack)||void 0===r&&(void 0===n.stack||-1===a.indexOf(n.stack)))&&a.push(n.stack);return a},getStackCount:function(){return this._getStacks().length},getStackIndex:function(t,e){var n=this._getStacks(t),i=void 0!==e?n.indexOf(e):-1;return-1===i?n.length-1:i},getRuler:function(){var t,e,n=this.getIndexScale(),i=this.getStackCount(),r=this.index,a=n.isHorizontal(),s=a?n.left:n.top,l=s+(a?n.width:n.height),u=[];for(t=0,e=this.getMeta().data.length;t<e;++t)u.push(n.getPixelForValue(null,t,r));return{min:o.isNullOrUndef(n.options.barThickness)?function(t,e){var n,i,r,o,a=t.isHorizontal()?t.width:t.height,s=t.getTicks();for(r=1,o=e.length;r<o;++r)a=Math.min(a,e[r]-e[r-1]);for(r=0,o=s.length;r<o;++r)i=t.getPixelForTick(r),a=0<r?Math.min(a,i-n):a,n=i;return a}(n,u):-1,pixels:u,start:s,end:l,stackCount:i,scale:n}},calculateBarValuePixels:function(t,e){var n,i,r,o,a,s,l=this.chart,u=this.getMeta(),c=this.getValueScale(),h=l.data.datasets,d=c.getRightValue(h[t].data[e]),f=c.options.stacked,p=u.stack,g=0;if(f||void 0===f&&void 0!==p)for(n=0;n<t;++n)(i=l.getDatasetMeta(n)).bar&&i.stack===p&&i.controller.getValueScaleId()===c.id&&l.isDatasetVisible(n)&&(r=c.getRightValue(h[n].data[e]),(d<0&&r<0||0<=d&&0<r)&&(g+=r));return o=c.getPixelForValue(g),{size:s=((a=c.getPixelForValue(g+d))-o)/2,base:o,head:a,center:a+s/2}},calculateBarIndexPixels:function(t,e,n){var i,r,a,s,l,u,c,h,d,f,p,g,m,v,y,b,x,_=n.scale.options,w="flex"===_.barThickness?(d=e,p=_,m=(f=n).pixels,v=m[d],y=0<d?m[d-1]:null,b=d<m.length-1?m[d+1]:null,x=p.categoryPercentage,null===y&&(y=v-(null===b?f.end-v:b-v)),null===b&&(b=v+v-y),g=v-(v-y)/2*x,{chunk:(b-y)/2*x/f.stackCount,ratio:p.barPercentage,start:g}):(i=e,r=n,u=(a=_).barThickness,c=r.stackCount,h=r.pixels[i],l=o.isNullOrUndef(u)?(s=r.min*a.categoryPercentage,a.barPercentage):(s=u*c,1),{chunk:s/c,ratio:l,start:h-s/2}),k=this.getStackIndex(t,this.getMeta().stack),M=w.start+w.chunk*k+w.chunk/2,S=Math.min(o.valueOrDefault(_.maxBarThickness,1/0),w.chunk*w.ratio);return{base:M-S/2,head:M+S/2,center:M,size:S}},draw:function(){var t=this.chart,e=this.getValueScale(),n=this.getMeta().data,i=this.getDataset(),r=n.length,a=0;for(o.canvas.clipArea(t.ctx,t.chartArea);a<r;++a)isNaN(e.getRightValue(i.data[a]))||n[a].draw();o.canvas.unclipArea(t.ctx)}}),t.controllers.horizontalBar=t.controllers.bar.extend({getValueScaleId:function(){return this.getMeta().xAxisID},getIndexScaleId:function(){return this.getMeta().yAxisID}})}},{26:26,41:41,46:46}],16:[function(t,e,n){"use strict";var i=t(26),r=t(41),o=t(46);i._set("bubble",{hover:{mode:"single"},scales:{xAxes:[{type:"linear",position:"bottom",id:"x-axis-0"}],yAxes:[{type:"linear",position:"left",id:"y-axis-0"}]},tooltips:{callbacks:{title:function(){return""},label:function(t,e){var n=e.datasets[t.datasetIndex].label||"",i=e.datasets[t.datasetIndex].data[t.index];return n+": ("+t.xLabel+", "+t.yLabel+", "+i.r+")"}}}}),e.exports=function(t){t.controllers.bubble=t.DatasetController.extend({dataElementType:r.Point,update:function(t){var e=this,n=e.getMeta().data;o.each(n,function(n,i){e.updateElement(n,i,t)})},updateElement:function(t,e,n){var i=this,r=i.getMeta(),o=t.custom||{},a=i.getScaleForId(r.xAxisID),s=i.getScaleForId(r.yAxisID),l=i._resolveElementOptions(t,e),u=i.getDataset().data[e],c=i.index,h=n?a.getPixelForDecimal(.5):a.getPixelForValue("object"==typeof u?u:NaN,e,c),d=n?s.getBasePixel():s.getPixelForValue(u,e,c);t._xScale=a,t._yScale=s,t._options=l,t._datasetIndex=c,t._index=e,t._model={backgroundColor:l.backgroundColor,borderColor:l.borderColor,borderWidth:l.borderWidth,hitRadius:l.hitRadius,pointStyle:l.pointStyle,rotation:l.rotation,radius:n?0:l.radius,skip:o.skip||isNaN(h)||isNaN(d),x:h,y:d},t.pivot()},setHoverStyle:function(t){var e=t._model,n=t._options;t.$previousStyle={backgroundColor:e.backgroundColor,borderColor:e.borderColor,borderWidth:e.borderWidth,radius:e.radius},e.backgroundColor=o.valueOrDefault(n.hoverBackgroundColor,o.getHoverColor(n.backgroundColor)),e.borderColor=o.valueOrDefault(n.hoverBorderColor,o.getHoverColor(n.borderColor)),e.borderWidth=o.valueOrDefault(n.hoverBorderWidth,n.borderWidth),e.radius=n.radius+n.hoverRadius},_resolveElementOptions:function(t,e){var n,i,r,a=this.chart,s=a.data.datasets[this.index],l=t.custom||{},u=a.options.elements.point,c=o.options.resolve,h=s.data[e],d={},f={chart:a,dataIndex:e,dataset:s,datasetIndex:this.index},p=["backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","hoverRadius","hitRadius","pointStyle","rotation"];for(n=0,i=p.length;n<i;++n)d[r=p[n]]=c([l[r],s[r],u[r]],f,e);return d.radius=c([l.radius,h?h.r:void 0,s.radius,u.radius],f,e),d}})}},{26:26,41:41,46:46}],17:[function(t,e,n){"use strict";var i=t(26),r=t(41),o=t(46);i._set("doughnut",{animation:{animateRotate:!0,animateScale:!1},hover:{mode:"single"},legendCallback:function(t){var e=[];e.push('<ul class="'+t.id+'-legend">');var n=t.data,i=n.datasets,r=n.labels;if(i.length)for(var o=0;o<i[0].data.length;++o)e.push('<li><span style="background-color:'+i[0].backgroundColor[o]+'"></span>'),r[o]&&e.push(r[o]),e.push("</li>");return e.push("</ul>"),e.join("")},legend:{labels:{generateLabels:function(t){var e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(function(n,i){var r=t.getDatasetMeta(0),a=e.datasets[0],s=r.data[i],l=s&&s.custom||{},u=o.valueAtIndexOrDefault,c=t.options.elements.arc;return{text:n,fillStyle:l.backgroundColor?l.backgroundColor:u(a.backgroundColor,i,c.backgroundColor),strokeStyle:l.borderColor?l.borderColor:u(a.borderColor,i,c.borderColor),lineWidth:l.borderWidth?l.borderWidth:u(a.borderWidth,i,c.borderWidth),hidden:isNaN(a.data[i])||r.data[i].hidden,index:i}}):[]}},onClick:function(t,e){var n,i,r,o=e.index,a=this.chart;for(n=0,i=(a.data.datasets||[]).length;n<i;++n)(r=a.getDatasetMeta(n)).data[o]&&(r.data[o].hidden=!r.data[o].hidden);a.update()}},cutoutPercentage:50,rotation:-.5*Math.PI,circumference:2*Math.PI,tooltips:{callbacks:{title:function(){return""},label:function(t,e){var n=e.labels[t.index],i=": "+e.datasets[t.datasetIndex].data[t.index];return o.isArray(n)?(n=n.slice())[0]+=i:n+=i,n}}}}),i._set("pie",o.clone(i.doughnut)),i._set("pie",{cutoutPercentage:0}),e.exports=function(t){t.controllers.doughnut=t.controllers.pie=t.DatasetController.extend({dataElementType:r.Arc,linkScales:o.noop,getRingIndex:function(t){for(var e=0,n=0;n<t;++n)this.chart.isDatasetVisible(n)&&++e;return e},update:function(t){var e=this,n=e.chart,i=n.chartArea,r=n.options,a=r.elements.arc,s=i.right-i.left-a.borderWidth,l=i.bottom-i.top-a.borderWidth,u=Math.min(s,l),c={x:0,y:0},h=e.getMeta(),d=r.cutoutPercentage,f=r.circumference;if(f<2*Math.PI){var p=r.rotation%(2*Math.PI),g=(p+=2*Math.PI*(p>=Math.PI?-1:p<-Math.PI?1:0))+f,m=Math.cos(p),v=Math.sin(p),y=Math.cos(g),b=Math.sin(g),x=p<=0&&0<=g||p<=2*Math.PI&&2*Math.PI<=g,_=p<=.5*Math.PI&&.5*Math.PI<=g||p<=2.5*Math.PI&&2.5*Math.PI<=g,w=p<=-Math.PI&&-Math.PI<=g||p<=Math.PI&&Math.PI<=g,k=p<=.5*-Math.PI&&.5*-Math.PI<=g||p<=1.5*Math.PI&&1.5*Math.PI<=g,M=d/100,S=w?-1:Math.min(m*(m<0?1:M),y*(y<0?1:M)),C=k?-1:Math.min(v*(v<0?1:M),b*(b<0?1:M)),D=x?1:Math.max(m*(0<m?1:M),y*(0<y?1:M)),T=_?1:Math.max(v*(0<v?1:M),b*(0<b?1:M)),P=.5*(D-S),A=.5*(T-C);u=Math.min(s/P,l/A),c={x:-.5*(D+S),y:-.5*(T+C)}}n.borderWidth=e.getMaxBorderWidth(h.data),n.outerRadius=Math.max((u-n.borderWidth)/2,0),n.innerRadius=Math.max(d?n.outerRadius/100*d:0,0),n.radiusLength=(n.outerRadius-n.innerRadius)/n.getVisibleDatasetCount(),n.offsetX=c.x*n.outerRadius,n.offsetY=c.y*n.outerRadius,h.total=e.calculateTotal(),e.outerRadius=n.outerRadius-n.radiusLength*e.getRingIndex(e.index),e.innerRadius=Math.max(e.outerRadius-n.radiusLength,0),o.each(h.data,function(n,i){e.updateElement(n,i,t)})},updateElement:function(t,e,n){var i=this,r=i.chart,a=r.chartArea,s=r.options,l=s.animation,u=(a.left+a.right)/2,c=(a.top+a.bottom)/2,h=s.rotation,d=s.rotation,f=i.getDataset(),p=n&&l.animateRotate?0:t.hidden?0:i.calculateCircumference(f.data[e])*(s.circumference/(2*Math.PI)),g=n&&l.animateScale?0:i.innerRadius,m=n&&l.animateScale?0:i.outerRadius,v=o.valueAtIndexOrDefault;o.extend(t,{_datasetIndex:i.index,_index:e,_model:{x:u+r.offsetX,y:c+r.offsetY,startAngle:h,endAngle:d,circumference:p,outerRadius:m,innerRadius:g,label:v(f.label,e,r.data.labels[e])}});var y=t._model,b=t.custom||{},x=o.valueAtIndexOrDefault,_=this.chart.options.elements.arc;y.backgroundColor=b.backgroundColor?b.backgroundColor:x(f.backgroundColor,e,_.backgroundColor),y.borderColor=b.borderColor?b.borderColor:x(f.borderColor,e,_.borderColor),y.borderWidth=b.borderWidth?b.borderWidth:x(f.borderWidth,e,_.borderWidth),n&&l.animateRotate||(y.startAngle=0===e?s.rotation:i.getMeta().data[e-1]._model.endAngle,y.endAngle=y.startAngle+y.circumference),t.pivot()},calculateTotal:function(){var t,e=this.getDataset(),n=this.getMeta(),i=0;return o.each(n.data,function(n,r){t=e.data[r],isNaN(t)||n.hidden||(i+=Math.abs(t))}),i},calculateCircumference:function(t){var e=this.getMeta().total;return 0<e&&!isNaN(t)?2*Math.PI*(Math.abs(t)/e):0},getMaxBorderWidth:function(t){for(var e,n,i=0,r=this.index,o=t.length,a=0;a<o;a++)i=(i=i<(e=t[a]._model?t[a]._model.borderWidth:0)?e:i)<(n=t[a]._chart?t[a]._chart.config.data.datasets[r].hoverBorderWidth:0)?n:i;return i}})}},{26:26,41:41,46:46}],18:[function(t,e,n){"use strict";var i=t(26),r=t(41),o=t(46);i._set("line",{showLines:!0,spanGaps:!1,hover:{mode:"label"},scales:{xAxes:[{type:"category",id:"x-axis-0"}],yAxes:[{type:"linear",id:"y-axis-0"}]}}),e.exports=function(t){function e(t,e){return o.valueOrDefault(t.showLine,e.showLines)}t.controllers.line=t.DatasetController.extend({datasetElementType:r.Line,dataElementType:r.Point,update:function(t){var n,i,r,a=this,s=a.getMeta(),l=s.dataset,u=s.data||[],c=a.chart.options,h=c.elements.line,d=a.getScaleForId(s.yAxisID),f=a.getDataset(),p=e(f,c);for(p&&(r=l.custom||{},void 0!==f.tension&&void 0===f.lineTension&&(f.lineTension=f.tension),l._scale=d,l._datasetIndex=a.index,l._children=u,l._model={spanGaps:f.spanGaps?f.spanGaps:c.spanGaps,tension:r.tension?r.tension:o.valueOrDefault(f.lineTension,h.tension),backgroundColor:r.backgroundColor?r.backgroundColor:f.backgroundColor||h.backgroundColor,borderWidth:r.borderWidth?r.borderWidth:f.borderWidth||h.borderWidth,borderColor:r.borderColor?r.borderColor:f.borderColor||h.borderColor,borderCapStyle:r.borderCapStyle?r.borderCapStyle:f.borderCapStyle||h.borderCapStyle,borderDash:r.borderDash?r.borderDash:f.borderDash||h.borderDash,borderDashOffset:r.borderDashOffset?r.borderDashOffset:f.borderDashOffset||h.borderDashOffset,borderJoinStyle:r.borderJoinStyle?r.borderJoinStyle:f.borderJoinStyle||h.borderJoinStyle,fill:r.fill?r.fill:void 0!==f.fill?f.fill:h.fill,steppedLine:r.steppedLine?r.steppedLine:o.valueOrDefault(f.steppedLine,h.stepped),cubicInterpolationMode:r.cubicInterpolationMode?r.cubicInterpolationMode:o.valueOrDefault(f.cubicInterpolationMode,h.cubicInterpolationMode)
},l.pivot()),n=0,i=u.length;n<i;++n)a.updateElement(u[n],n,t);for(p&&0!==l._model.tension&&a.updateBezierControlPoints(),n=0,i=u.length;n<i;++n)u[n].pivot()},getPointBackgroundColor:function(t,e){var n=this.chart.options.elements.point.backgroundColor,i=this.getDataset(),r=t.custom||{};return r.backgroundColor?n=r.backgroundColor:i.pointBackgroundColor?n=o.valueAtIndexOrDefault(i.pointBackgroundColor,e,n):i.backgroundColor&&(n=i.backgroundColor),n},getPointBorderColor:function(t,e){var n=this.chart.options.elements.point.borderColor,i=this.getDataset(),r=t.custom||{};return r.borderColor?n=r.borderColor:i.pointBorderColor?n=o.valueAtIndexOrDefault(i.pointBorderColor,e,n):i.borderColor&&(n=i.borderColor),n},getPointBorderWidth:function(t,e){var n=this.chart.options.elements.point.borderWidth,i=this.getDataset(),r=t.custom||{};return isNaN(r.borderWidth)?!isNaN(i.pointBorderWidth)||o.isArray(i.pointBorderWidth)?n=o.valueAtIndexOrDefault(i.pointBorderWidth,e,n):isNaN(i.borderWidth)||(n=i.borderWidth):n=r.borderWidth,n},getPointRotation:function(t,e){var n=this.chart.options.elements.point.rotation,i=this.getDataset(),r=t.custom||{};return isNaN(r.rotation)?isNaN(i.pointRotation)&&!o.isArray(i.pointRotation)||(n=o.valueAtIndexOrDefault(i.pointRotation,e,n)):n=r.rotation,n},updateElement:function(t,e,n){var i,r,a=this,s=a.getMeta(),l=t.custom||{},u=a.getDataset(),c=a.index,h=u.data[e],d=a.getScaleForId(s.yAxisID),f=a.getScaleForId(s.xAxisID),p=a.chart.options.elements.point;void 0!==u.radius&&void 0===u.pointRadius&&(u.pointRadius=u.radius),void 0!==u.hitRadius&&void 0===u.pointHitRadius&&(u.pointHitRadius=u.hitRadius),i=f.getPixelForValue("object"==typeof h?h:NaN,e,c),r=n?d.getBasePixel():a.calculatePointY(h,e,c),t._xScale=f,t._yScale=d,t._datasetIndex=c,t._index=e,t._model={x:i,y:r,skip:l.skip||isNaN(i)||isNaN(r),radius:l.radius||o.valueAtIndexOrDefault(u.pointRadius,e,p.radius),pointStyle:l.pointStyle||o.valueAtIndexOrDefault(u.pointStyle,e,p.pointStyle),rotation:a.getPointRotation(t,e),backgroundColor:a.getPointBackgroundColor(t,e),borderColor:a.getPointBorderColor(t,e),borderWidth:a.getPointBorderWidth(t,e),tension:s.dataset._model?s.dataset._model.tension:0,steppedLine:!!s.dataset._model&&s.dataset._model.steppedLine,hitRadius:l.hitRadius||o.valueAtIndexOrDefault(u.pointHitRadius,e,p.hitRadius)}},calculatePointY:function(t,e,n){var i,r,o,a=this.chart,s=this.getMeta(),l=this.getScaleForId(s.yAxisID),u=0,c=0;if(l.options.stacked){for(i=0;i<n;i++)if(r=a.data.datasets[i],"line"===(o=a.getDatasetMeta(i)).type&&o.yAxisID===l.id&&a.isDatasetVisible(i)){var h=Number(l.getRightValue(r.data[e]));h<0?c+=h||0:u+=h||0}var d=Number(l.getRightValue(t));return d<0?l.getPixelForValue(c+d):l.getPixelForValue(u+d)}return l.getPixelForValue(t)},updateBezierControlPoints:function(){function t(t,e,n){return Math.max(Math.min(t,n),e)}var e,n,i,r,a=this.getMeta(),s=this.chart.chartArea,l=a.data||[];if(a.dataset._model.spanGaps&&(l=l.filter(function(t){return!t._model.skip})),"monotone"===a.dataset._model.cubicInterpolationMode)o.splineCurveMonotone(l);else for(e=0,n=l.length;e<n;++e)i=l[e]._model,r=o.splineCurve(o.previousItem(l,e)._model,i,o.nextItem(l,e)._model,a.dataset._model.tension),i.controlPointPreviousX=r.previous.x,i.controlPointPreviousY=r.previous.y,i.controlPointNextX=r.next.x,i.controlPointNextY=r.next.y;if(this.chart.options.elements.line.capBezierPoints)for(e=0,n=l.length;e<n;++e)(i=l[e]._model).controlPointPreviousX=t(i.controlPointPreviousX,s.left,s.right),i.controlPointPreviousY=t(i.controlPointPreviousY,s.top,s.bottom),i.controlPointNextX=t(i.controlPointNextX,s.left,s.right),i.controlPointNextY=t(i.controlPointNextY,s.top,s.bottom)},draw:function(){var t,n=this.chart,i=this.getMeta(),r=i.data||[],a=n.chartArea,s=r.length,l=0;for(e(this.getDataset(),n.options)&&(t=(i.dataset._model.borderWidth||0)/2,o.canvas.clipArea(n.ctx,{left:a.left,right:a.right,top:a.top-t,bottom:a.bottom+t}),i.dataset.draw(),o.canvas.unclipArea(n.ctx));l<s;++l)r[l].draw(a)},setHoverStyle:function(t){var e=this.chart.data.datasets[t._datasetIndex],n=t._index,i=t.custom||{},r=t._model;t.$previousStyle={backgroundColor:r.backgroundColor,borderColor:r.borderColor,borderWidth:r.borderWidth,radius:r.radius},r.backgroundColor=i.hoverBackgroundColor||o.valueAtIndexOrDefault(e.pointHoverBackgroundColor,n,o.getHoverColor(r.backgroundColor)),r.borderColor=i.hoverBorderColor||o.valueAtIndexOrDefault(e.pointHoverBorderColor,n,o.getHoverColor(r.borderColor)),r.borderWidth=i.hoverBorderWidth||o.valueAtIndexOrDefault(e.pointHoverBorderWidth,n,r.borderWidth),r.radius=i.hoverRadius||o.valueAtIndexOrDefault(e.pointHoverRadius,n,this.chart.options.elements.point.hoverRadius)}})}},{26:26,41:41,46:46}],19:[function(t,e,n){"use strict";var i=t(26),r=t(41),o=t(46);i._set("polarArea",{scale:{type:"radialLinear",angleLines:{display:!1},gridLines:{circular:!0},pointLabels:{display:!1},ticks:{beginAtZero:!0}},animation:{animateRotate:!0,animateScale:!0},startAngle:-.5*Math.PI,legendCallback:function(t){var e=[];e.push('<ul class="'+t.id+'-legend">');var n=t.data,i=n.datasets,r=n.labels;if(i.length)for(var o=0;o<i[0].data.length;++o)e.push('<li><span style="background-color:'+i[0].backgroundColor[o]+'"></span>'),r[o]&&e.push(r[o]),e.push("</li>");return e.push("</ul>"),e.join("")},legend:{labels:{generateLabels:function(t){var e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(function(n,i){var r=t.getDatasetMeta(0),a=e.datasets[0],s=r.data[i].custom||{},l=o.valueAtIndexOrDefault,u=t.options.elements.arc;return{text:n,fillStyle:s.backgroundColor?s.backgroundColor:l(a.backgroundColor,i,u.backgroundColor),strokeStyle:s.borderColor?s.borderColor:l(a.borderColor,i,u.borderColor),lineWidth:s.borderWidth?s.borderWidth:l(a.borderWidth,i,u.borderWidth),hidden:isNaN(a.data[i])||r.data[i].hidden,index:i}}):[]}},onClick:function(t,e){var n,i,r,o=e.index,a=this.chart;for(n=0,i=(a.data.datasets||[]).length;n<i;++n)(r=a.getDatasetMeta(n)).data[o].hidden=!r.data[o].hidden;a.update()}},tooltips:{callbacks:{title:function(){return""},label:function(t,e){return e.labels[t.index]+": "+t.yLabel}}}}),e.exports=function(t){t.controllers.polarArea=t.DatasetController.extend({dataElementType:r.Arc,linkScales:o.noop,update:function(t){var e,n,i,r=this,a=r.getDataset(),s=r.getMeta(),l=r.chart.options.startAngle||0,u=r._starts=[],c=r._angles=[];for(r._updateRadius(),s.count=r.countVisibleElements(),e=0,n=a.data.length;e<n;e++)u[e]=l,i=r._computeAngle(e),l+=c[e]=i;o.each(s.data,function(e,n){r.updateElement(e,n,t)})},_updateRadius:function(){var t=this,e=t.chart,n=e.chartArea,i=e.options,r=i.elements.arc,o=Math.min(n.right-n.left,n.bottom-n.top);e.outerRadius=Math.max((o-r.borderWidth/2)/2,0),e.innerRadius=Math.max(i.cutoutPercentage?e.outerRadius/100*i.cutoutPercentage:1,0),e.radiusLength=(e.outerRadius-e.innerRadius)/e.getVisibleDatasetCount(),t.outerRadius=e.outerRadius-e.radiusLength*t.index,t.innerRadius=t.outerRadius-e.radiusLength},updateElement:function(t,e,n){var i=this,r=i.chart,a=i.getDataset(),s=r.options,l=s.animation,u=r.scale,c=r.data.labels,h=u.xCenter,d=u.yCenter,f=s.startAngle,p=t.hidden?0:u.getDistanceFromCenterForValue(a.data[e]),g=i._starts[e],m=g+(t.hidden?0:i._angles[e]),v=l.animateScale?0:u.getDistanceFromCenterForValue(a.data[e]);o.extend(t,{_datasetIndex:i.index,_index:e,_scale:u,_model:{x:h,y:d,innerRadius:0,outerRadius:n?v:p,startAngle:n&&l.animateRotate?f:g,endAngle:n&&l.animateRotate?f:m,label:o.valueAtIndexOrDefault(c,e,c[e])}});var y=this.chart.options.elements.arc,b=t.custom||{},x=o.valueAtIndexOrDefault,_=t._model;_.backgroundColor=b.backgroundColor?b.backgroundColor:x(a.backgroundColor,e,y.backgroundColor),_.borderColor=b.borderColor?b.borderColor:x(a.borderColor,e,y.borderColor),_.borderWidth=b.borderWidth?b.borderWidth:x(a.borderWidth,e,y.borderWidth),t.pivot()},countVisibleElements:function(){var t=this.getDataset(),e=this.getMeta(),n=0;return o.each(e.data,function(e,i){isNaN(t.data[i])||e.hidden||n++}),n},_computeAngle:function(t){var e=this,n=this.getMeta().count,i=e.getDataset(),r=e.getMeta();if(isNaN(i.data[t])||r.data[t].hidden)return 0;var a={chart:e.chart,dataIndex:t,dataset:i,datasetIndex:e.index};return o.options.resolve([e.chart.options.elements.arc.angle,2*Math.PI/n],a,t)}})}},{26:26,41:41,46:46}],20:[function(t,e,n){"use strict";var i=t(26),r=t(41),o=t(46);i._set("radar",{scale:{type:"radialLinear"},elements:{line:{tension:0}}}),e.exports=function(t){t.controllers.radar=t.DatasetController.extend({datasetElementType:r.Line,dataElementType:r.Point,linkScales:o.noop,update:function(t){var e=this,n=e.getMeta(),i=n.dataset,r=n.data,a=i.custom||{},s=e.getDataset(),l=e.chart.options.elements.line,u=e.chart.scale;void 0!==s.tension&&void 0===s.lineTension&&(s.lineTension=s.tension),o.extend(n.dataset,{_datasetIndex:e.index,_scale:u,_children:r,_loop:!0,_model:{tension:a.tension?a.tension:o.valueOrDefault(s.lineTension,l.tension),backgroundColor:a.backgroundColor?a.backgroundColor:s.backgroundColor||l.backgroundColor,borderWidth:a.borderWidth?a.borderWidth:s.borderWidth||l.borderWidth,borderColor:a.borderColor?a.borderColor:s.borderColor||l.borderColor,fill:a.fill?a.fill:void 0!==s.fill?s.fill:l.fill,borderCapStyle:a.borderCapStyle?a.borderCapStyle:s.borderCapStyle||l.borderCapStyle,borderDash:a.borderDash?a.borderDash:s.borderDash||l.borderDash,borderDashOffset:a.borderDashOffset?a.borderDashOffset:s.borderDashOffset||l.borderDashOffset,borderJoinStyle:a.borderJoinStyle?a.borderJoinStyle:s.borderJoinStyle||l.borderJoinStyle}}),n.dataset.pivot(),o.each(r,function(n,i){e.updateElement(n,i,t)},e),e.updateBezierControlPoints()},updateElement:function(t,e,n){var i=this,r=t.custom||{},a=i.getDataset(),s=i.chart.scale,l=i.chart.options.elements.point,u=s.getPointPositionForValue(e,a.data[e]);void 0!==a.radius&&void 0===a.pointRadius&&(a.pointRadius=a.radius),void 0!==a.hitRadius&&void 0===a.pointHitRadius&&(a.pointHitRadius=a.hitRadius),o.extend(t,{_datasetIndex:i.index,_index:e,_scale:s,_model:{x:n?s.xCenter:u.x,y:n?s.yCenter:u.y,tension:r.tension?r.tension:o.valueOrDefault(a.lineTension,i.chart.options.elements.line.tension),radius:r.radius?r.radius:o.valueAtIndexOrDefault(a.pointRadius,e,l.radius),backgroundColor:r.backgroundColor?r.backgroundColor:o.valueAtIndexOrDefault(a.pointBackgroundColor,e,l.backgroundColor),borderColor:r.borderColor?r.borderColor:o.valueAtIndexOrDefault(a.pointBorderColor,e,l.borderColor),borderWidth:r.borderWidth?r.borderWidth:o.valueAtIndexOrDefault(a.pointBorderWidth,e,l.borderWidth),pointStyle:r.pointStyle?r.pointStyle:o.valueAtIndexOrDefault(a.pointStyle,e,l.pointStyle),rotation:r.rotation?r.rotation:o.valueAtIndexOrDefault(a.pointRotation,e,l.rotation),hitRadius:r.hitRadius?r.hitRadius:o.valueAtIndexOrDefault(a.pointHitRadius,e,l.hitRadius)}}),t._model.skip=r.skip?r.skip:isNaN(t._model.x)||isNaN(t._model.y)},updateBezierControlPoints:function(){var t=this.chart.chartArea,e=this.getMeta();o.each(e.data,function(n,i){var r=n._model,a=o.splineCurve(o.previousItem(e.data,i,!0)._model,r,o.nextItem(e.data,i,!0)._model,r.tension);r.controlPointPreviousX=Math.max(Math.min(a.previous.x,t.right),t.left),r.controlPointPreviousY=Math.max(Math.min(a.previous.y,t.bottom),t.top),r.controlPointNextX=Math.max(Math.min(a.next.x,t.right),t.left),r.controlPointNextY=Math.max(Math.min(a.next.y,t.bottom),t.top),n.pivot()})},setHoverStyle:function(t){var e=this.chart.data.datasets[t._datasetIndex],n=t.custom||{},i=t._index,r=t._model;t.$previousStyle={backgroundColor:r.backgroundColor,borderColor:r.borderColor,borderWidth:r.borderWidth,radius:r.radius},r.radius=n.hoverRadius?n.hoverRadius:o.valueAtIndexOrDefault(e.pointHoverRadius,i,this.chart.options.elements.point.hoverRadius),r.backgroundColor=n.hoverBackgroundColor?n.hoverBackgroundColor:o.valueAtIndexOrDefault(e.pointHoverBackgroundColor,i,o.getHoverColor(r.backgroundColor)),r.borderColor=n.hoverBorderColor?n.hoverBorderColor:o.valueAtIndexOrDefault(e.pointHoverBorderColor,i,o.getHoverColor(r.borderColor)),r.borderWidth=n.hoverBorderWidth?n.hoverBorderWidth:o.valueAtIndexOrDefault(e.pointHoverBorderWidth,i,r.borderWidth)}})}},{26:26,41:41,46:46}],21:[function(t,e,n){"use strict";t(26)._set("scatter",{hover:{mode:"single"},scales:{xAxes:[{id:"x-axis-1",type:"linear",position:"bottom"}],yAxes:[{id:"y-axis-1",type:"linear",position:"left"}]},showLines:!1,tooltips:{callbacks:{title:function(){return""},label:function(t){return"("+t.xLabel+", "+t.yLabel+")"}}}}),e.exports=function(t){t.controllers.scatter=t.controllers.line}},{26:26}],22:[function(t,e,n){"use strict";var i=t(27);n=e.exports=i.extend({chart:null,currentStep:0,numSteps:60,easing:"",render:null,onAnimationProgress:null,onAnimationComplete:null}),Object.defineProperty(n.prototype,"animationObject",{get:function(){return this}}),Object.defineProperty(n.prototype,"chartInstance",{get:function(){return this.chart},set:function(t){this.chart=t}})},{27:27}],23:[function(t,e,n){"use strict";var i=t(26),r=t(46);i._set("global",{animation:{duration:1e3,easing:"easeOutQuart",onProgress:r.noop,onComplete:r.noop}}),e.exports={frameDuration:17,animations:[],dropFrames:0,request:null,addAnimation:function(t,e,n,i){var r,o,a=this.animations;for(e.chart=t,i||(t.animating=!0),r=0,o=a.length;r<o;++r)if(a[r].chart===t)return void(a[r]=e);a.push(e),1===a.length&&this.requestAnimationFrame()},cancelAnimation:function(t){var e=r.findIndex(this.animations,function(e){return e.chart===t});-1!==e&&(this.animations.splice(e,1),t.animating=!1)},requestAnimationFrame:function(){var t=this;null===t.request&&(t.request=r.requestAnimFrame.call(window,function(){t.request=null,t.startDigest()}))},startDigest:function(){var t=this,e=Date.now(),n=0;1<t.dropFrames&&(n=Math.floor(t.dropFrames),t.dropFrames=t.dropFrames%1),t.advance(1+n);var i=Date.now();t.dropFrames+=(i-e)/t.frameDuration,0<t.animations.length&&t.requestAnimationFrame()},advance:function(t){for(var e,n,i=this.animations,o=0;o<i.length;)n=(e=i[o]).chart,e.currentStep=(e.currentStep||0)+t,e.currentStep=Math.min(e.currentStep,e.numSteps),r.callback(e.render,[n,e],n),r.callback(e.onAnimationProgress,[e],n),e.currentStep>=e.numSteps?(r.callback(e.onAnimationComplete,[e],n),n.animating=!1,i.splice(o,1)):++o}}},{26:26,46:46}],24:[function(t,e,n){"use strict";var i=t(22),r=t(23),o=t(26),a=t(46),s=t(29),l=t(31),u=t(49),c=t(32),h=t(34),d=t(36);e.exports=function(t){function e(t){return"top"===t||"bottom"===t}t.types={},t.instances={},t.controllers={},a.extend(t.prototype,{construct:function(e,n){var i,r,s=this;(r=(i=(i=n)||{}).data=i.data||{}).datasets=r.datasets||[],r.labels=r.labels||[],i.options=a.configMerge(o.global,o[i.type],i.options||{}),n=i;var l=u.acquireContext(e,n),c=l&&l.canvas,h=c&&c.height,d=c&&c.width;s.id=a.uid(),s.ctx=l,s.canvas=c,s.config=n,s.width=d,s.height=h,s.aspectRatio=h?d/h:null,s.options=n.options,s._bufferedRender=!1,(s.chart=s).controller=s,t.instances[s.id]=s,Object.defineProperty(s,"data",{get:function(){return s.config.data},set:function(t){s.config.data=t}}),l&&c?(s.initialize(),s.update()):console.error("Failed to create chart: can't acquire context from the given item")},initialize:function(){var t=this;return c.notify(t,"beforeInit"),a.retinaScale(t,t.options.devicePixelRatio),t.bindEvents(),t.options.responsive&&t.resize(!0),t.ensureScalesHaveIDs(),t.buildOrUpdateScales(),t.initToolTip(),c.notify(t,"afterInit"),t},clear:function(){return a.canvas.clear(this),this},stop:function(){return r.cancelAnimation(this),this},resize:function(t){var e=this,n=e.options,i=e.canvas,r=n.maintainAspectRatio&&e.aspectRatio||null,o=Math.max(0,Math.floor(a.getMaximumWidth(i))),s=Math.max(0,Math.floor(r?o/r:a.getMaximumHeight(i)));if((e.width!==o||e.height!==s)&&(i.width=e.width=o,i.height=e.height=s,i.style.width=o+"px",i.style.height=s+"px",a.retinaScale(e,n.devicePixelRatio),!t)){var l={width:o,height:s};c.notify(e,"resize",[l]),e.options.onResize&&e.options.onResize(e,l),e.stop(),e.update({duration:e.options.responsiveAnimationDuration})}},ensureScalesHaveIDs:function(){var t=this.options,e=t.scales||{},n=t.scale;a.each(e.xAxes,function(t,e){t.id=t.id||"x-axis-"+e}),a.each(e.yAxes,function(t,e){t.id=t.id||"y-axis-"+e}),n&&(n.id=n.id||"scale")},buildOrUpdateScales:function(){var t=this,n=t.options,i=t.scales||{},r=[],o=Object.keys(i).reduce(function(t,e){return t[e]=!1,t},{});n.scales&&(r=r.concat((n.scales.xAxes||[]).map(function(t){return{options:t,dtype:"category",dposition:"bottom"}}),(n.scales.yAxes||[]).map(function(t){return{options:t,dtype:"linear",dposition:"left"}}))),n.scale&&r.push({options:n.scale,dtype:"radialLinear",isDefault:!0,dposition:"chartArea"}),a.each(r,function(n){var r=n.options,s=r.id,l=a.valueOrDefault(r.type,n.dtype);e(r.position)!==e(n.dposition)&&(r.position=n.dposition),o[s]=!0;var u=null;if(s in i&&i[s].type===l)(u=i[s]).options=r,u.ctx=t.ctx,u.chart=t;else{var c=h.getScaleConstructor(l);if(!c)return;u=new c({id:s,type:l,options:r,ctx:t.ctx,chart:t}),i[u.id]=u}u.mergeTicksOptions(),n.isDefault&&(t.scale=u)}),a.each(o,function(t,e){t||delete i[e]}),t.scales=i,h.addScalesToLayout(this)},buildOrUpdateControllers:function(){var e=this,n=[],i=[];return a.each(e.data.datasets,function(r,o){var a=e.getDatasetMeta(o),s=r.type||e.config.type;if(a.type&&a.type!==s&&(e.destroyDatasetMeta(o),a=e.getDatasetMeta(o)),a.type=s,n.push(a.type),a.controller)a.controller.updateIndex(o),a.controller.linkScales();else{var l=t.controllers[a.type];if(void 0===l)throw new Error('"'+a.type+'" is not a chart type.');a.controller=new l(e,o),i.push(a.controller)}},e),i},resetElements:function(){var t=this;a.each(t.data.datasets,function(e,n){t.getDatasetMeta(n).controller.reset()},t)},reset:function(){this.resetElements(),this.tooltip.initialize()},update:function(e){var n,i,r=this;if(e&&"object"==typeof e||(e={duration:e,lazy:arguments[1]}),i=(n=r).options,a.each(n.scales,function(t){l.removeBox(n,t)}),i=a.configMerge(t.defaults.global,t.defaults[n.config.type],i),n.options=n.config.options=i,n.ensureScalesHaveIDs(),n.buildOrUpdateScales(),n.tooltip._options=i.tooltips,n.tooltip.initialize(),c._invalidate(r),!1!==c.notify(r,"beforeUpdate")){r.tooltip._data=r.data;var o=r.buildOrUpdateControllers();a.each(r.data.datasets,function(t,e){r.getDatasetMeta(e).controller.buildOrUpdateElements()},r),r.updateLayout(),r.options.animation&&r.options.animation.duration&&a.each(o,function(t){t.reset()}),r.updateDatasets(),r.tooltip.initialize(),r.lastActive=[],c.notify(r,"afterUpdate"),r._bufferedRender?r._bufferedRequest={duration:e.duration,easing:e.easing,lazy:e.lazy}:r.render(e)}},updateLayout:function(){!1!==c.notify(this,"beforeLayout")&&(l.update(this,this.width,this.height),c.notify(this,"afterScaleUpdate"),c.notify(this,"afterLayout"))},updateDatasets:function(){if(!1!==c.notify(this,"beforeDatasetsUpdate")){for(var t=0,e=this.data.datasets.length;t<e;++t)this.updateDataset(t);c.notify(this,"afterDatasetsUpdate")}},updateDataset:function(t){var e=this.getDatasetMeta(t),n={meta:e,index:t};!1!==c.notify(this,"beforeDatasetUpdate",[n])&&(e.controller.update(),c.notify(this,"afterDatasetUpdate",[n]))},render:function(t){var e=this;t&&"object"==typeof t||(t={duration:t,lazy:arguments[1]});var n=t.duration,o=t.lazy;if(!1!==c.notify(e,"beforeRender")){var s=e.options.animation,l=function(t){c.notify(e,"afterRender"),a.callback(s&&s.onComplete,[t],e)};if(s&&(void 0!==n&&0!==n||void 0===n&&0!==s.duration)){var u=new i({numSteps:(n||s.duration)/16.66,easing:t.easing||s.easing,render:function(t,e){var n=a.easing.effects[e.easing],i=e.currentStep,r=i/e.numSteps;t.draw(n(r),r,i)},onAnimationProgress:s.onProgress,onAnimationComplete:l});r.addAnimation(e,u,n,o)}else e.draw(),l(new i({numSteps:0,chart:e}));return e}},draw:function(t){var e=this;e.clear(),a.isNullOrUndef(t)&&(t=1),e.transition(t),e.width<=0||e.height<=0||!1!==c.notify(e,"beforeDraw",[t])&&(a.each(e.boxes,function(t){t.draw(e.chartArea)},e),e.scale&&e.scale.draw(),e.drawDatasets(t),e._drawTooltip(t),c.notify(e,"afterDraw",[t]))},transition:function(t){for(var e=0,n=(this.data.datasets||[]).length;e<n;++e)this.isDatasetVisible(e)&&this.getDatasetMeta(e).controller.transition(t);this.tooltip.transition(t)},drawDatasets:function(t){var e=this;if(!1!==c.notify(e,"beforeDatasetsDraw",[t])){for(var n=(e.data.datasets||[]).length-1;0<=n;--n)e.isDatasetVisible(n)&&e.drawDataset(n,t);c.notify(e,"afterDatasetsDraw",[t])}},drawDataset:function(t,e){var n=this.getDatasetMeta(t),i={meta:n,index:t,easingValue:e};!1!==c.notify(this,"beforeDatasetDraw",[i])&&(n.controller.draw(e),c.notify(this,"afterDatasetDraw",[i]))},_drawTooltip:function(t){var e=this.tooltip,n={tooltip:e,easingValue:t};!1!==c.notify(this,"beforeTooltipDraw",[n])&&(e.draw(),c.notify(this,"afterTooltipDraw",[n]))},getElementAtEvent:function(t){return s.modes.single(this,t)},getElementsAtEvent:function(t){return s.modes.label(this,t,{intersect:!0})},getElementsAtXAxis:function(t){return s.modes["x-axis"](this,t,{intersect:!0})},getElementsAtEventForMode:function(t,e,n){var i=s.modes[e];return"function"==typeof i?i(this,t,n):[]},getDatasetAtEvent:function(t){return s.modes.dataset(this,t,{intersect:!0})},getDatasetMeta:function(t){var e=this.data.datasets[t];e._meta||(e._meta={});var n=e._meta[this.id];return n||(n=e._meta[this.id]={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null}),n},getVisibleDatasetCount:function(){for(var t=0,e=0,n=this.data.datasets.length;e<n;++e)this.isDatasetVisible(e)&&t++;return t},isDatasetVisible:function(t){var e=this.getDatasetMeta(t);return"boolean"==typeof e.hidden?!e.hidden:!this.data.datasets[t].hidden},generateLegend:function(){return this.options.legendCallback(this)},destroyDatasetMeta:function(t){var e=this.id,n=this.data.datasets[t],i=n._meta&&n._meta[e];i&&(i.controller.destroy(),delete n._meta[e])},destroy:function(){var e,n,i=this,r=i.canvas;for(i.stop(),e=0,n=i.data.datasets.length;e<n;++e)i.destroyDatasetMeta(e);r&&(i.unbindEvents(),a.canvas.clear(i),u.releaseContext(i.ctx),i.canvas=null,i.ctx=null),c.notify(i,"destroy"),delete t.instances[i.id]},toBase64Image:function(){return this.canvas.toDataURL.apply(this.canvas,arguments)},initToolTip:function(){var t=this;t.tooltip=new d({_chart:t,_chartInstance:t,_data:t.data,_options:t.options.tooltips},t)},bindEvents:function(){var t=this,e=t._listeners={},n=function(){t.eventHandler.apply(t,arguments)};a.each(t.options.events,function(i){u.addEventListener(t,i,n),e[i]=n}),t.options.responsive&&(n=function(){t.resize()},u.addEventListener(t,"resize",n),e.resize=n)},unbindEvents:function(){var t=this,e=t._listeners;e&&(delete t._listeners,a.each(e,function(e,n){u.removeEventListener(t,n,e)}))},updateHoverStyle:function(t,e,n){var i,r,o,a=n?"setHoverStyle":"removeHoverStyle";for(r=0,o=t.length;r<o;++r)(i=t[r])&&this.getDatasetMeta(i._datasetIndex).controller[a](i)},eventHandler:function(t){var e=this,n=e.tooltip;if(!1!==c.notify(e,"beforeEvent",[t])){e._bufferedRender=!0,e._bufferedRequest=null;var i=e.handleEvent(t);n&&(i=n._start?n.handleEvent(t):i|n.handleEvent(t)),c.notify(e,"afterEvent",[t]);var r=e._bufferedRequest;return r?e.render(r):i&&!e.animating&&(e.stop(),e.render({duration:e.options.hover.animationDuration,lazy:!0})),e._bufferedRender=!1,e._bufferedRequest=null,e}},handleEvent:function(t){var e,n=this,i=n.options||{},r=i.hover;return n.lastActive=n.lastActive||[],"mouseout"===t.type?n.active=[]:n.active=n.getElementsAtEventForMode(t,r.mode,r),a.callback(i.onHover||i.hover.onHover,[t["native"],n.active],n),"mouseup"!==t.type&&"click"!==t.type||i.onClick&&i.onClick.call(n,t["native"],n.active),n.lastActive.length&&n.updateHoverStyle(n.lastActive,r.mode,!1),n.active.length&&r.mode&&n.updateHoverStyle(n.active,r.mode,!0),e=!a.arrayEquals(n.active,n.lastActive),n.lastActive=n.active,e}}),t.Controller=t}},{22:22,23:23,26:26,29:29,31:31,32:32,34:34,36:36,46:46,49:49}],25:[function(t,e,n){"use strict";var i=t(46);e.exports=function(t){function e(t,e){var i=t._chartjs;if(i){var r=i.listeners,o=r.indexOf(e);-1!==o&&r.splice(o,1),0<r.length||(n.forEach(function(e){delete t[e]}),delete t._chartjs)}}var n=["push","pop","shift","splice","unshift"];t.DatasetController=function(t,e){this.initialize(t,e)},i.extend(t.DatasetController.prototype,{datasetElementType:null,dataElementType:null,initialize:function(t,e){this.chart=t,this.index=e,this.linkScales(),this.addElements()},updateIndex:function(t){this.index=t},linkScales:function(){var t=this,e=t.getMeta(),n=t.getDataset();null!==e.xAxisID&&e.xAxisID in t.chart.scales||(e.xAxisID=n.xAxisID||t.chart.options.scales.xAxes[0].id),null!==e.yAxisID&&e.yAxisID in t.chart.scales||(e.yAxisID=n.yAxisID||t.chart.options.scales.yAxes[0].id)},getDataset:function(){return this.chart.data.datasets[this.index]},getMeta:function(){return this.chart.getDatasetMeta(this.index)},getScaleForId:function(t){return this.chart.scales[t]},reset:function(){this.update(!0)},destroy:function(){this._data&&e(this._data,this)},createMetaDataset:function(){var t=this.datasetElementType;return t&&new t({_chart:this.chart,_datasetIndex:this.index})},createMetaData:function(t){var e=this.dataElementType;return e&&new e({_chart:this.chart,_datasetIndex:this.index,_index:t})},addElements:function(){var t,e,n=this.getMeta(),i=this.getDataset().data||[],r=n.data;for(t=0,e=i.length;t<e;++t)r[t]=r[t]||this.createMetaData(t);n.dataset=n.dataset||this.createMetaDataset()},addElementAndReset:function(t){var e=this.createMetaData(t);this.getMeta().data.splice(t,0,e),this.updateElement(e,t,!0)},buildOrUpdateElements:function(){var t,r,o=this,a=o.getDataset(),s=a.data||(a.data=[]);o._data!==s&&(o._data&&e(o._data,o),r=o,(t=s)._chartjs?t._chartjs.listeners.push(r):(Object.defineProperty(t,"_chartjs",{configurable:!0,enumerable:!1,value:{listeners:[r]}}),n.forEach(function(e){var n="onData"+e.charAt(0).toUpperCase()+e.slice(1),r=t[e];Object.defineProperty(t,e,{configurable:!0,enumerable:!1,value:function(){var e=Array.prototype.slice.call(arguments),o=r.apply(this,e);return i.each(t._chartjs.listeners,function(t){"function"==typeof t[n]&&t[n].apply(t,e)}),o}})})),o._data=s),o.resyncElements()},update:i.noop,transition:function(t){for(var e=this.getMeta(),n=e.data||[],i=n.length,r=0;r<i;++r)n[r].transition(t);e.dataset&&e.dataset.transition(t)},draw:function(){var t=this.getMeta(),e=t.data||[],n=e.length,i=0;for(t.dataset&&t.dataset.draw();i<n;++i)e[i].draw()},removeHoverStyle:function(t){i.merge(t._model,t.$previousStyle||{}),delete t.$previousStyle},setHoverStyle:function(t){var e=this.chart.data.datasets[t._datasetIndex],n=t._index,r=t.custom||{},o=i.valueAtIndexOrDefault,a=i.getHoverColor,s=t._model;t.$previousStyle={backgroundColor:s.backgroundColor,borderColor:s.borderColor,borderWidth:s.borderWidth},s.backgroundColor=r.hoverBackgroundColor?r.hoverBackgroundColor:o(e.hoverBackgroundColor,n,a(s.backgroundColor)),s.borderColor=r.hoverBorderColor?r.hoverBorderColor:o(e.hoverBorderColor,n,a(s.borderColor)),s.borderWidth=r.hoverBorderWidth?r.hoverBorderWidth:o(e.hoverBorderWidth,n,s.borderWidth)},resyncElements:function(){var t=this.getMeta(),e=this.getDataset().data,n=t.data.length,i=e.length;i<n?t.data.splice(i,n-i):n<i&&this.insertElements(n,i-n)},insertElements:function(t,e){for(var n=0;n<e;++n)this.addElementAndReset(t+n)},onDataPush:function(){this.insertElements(this.getDataset().data.length-1,arguments.length)},onDataPop:function(){this.getMeta().data.pop()},onDataShift:function(){this.getMeta().data.shift()},onDataSplice:function(t,e){this.getMeta().data.splice(t,e),this.insertElements(t,arguments.length-2)},onDataUnshift:function(){this.insertElements(0,arguments.length)}}),t.DatasetController.extend=i.inherits}},{46:46}],26:[function(t,e,n){"use strict";var i=t(46);e.exports={_set:function(t,e){return i.merge(this[t]||(this[t]={}),e)}}},{46:46}],27:[function(t,e,n){"use strict";var i=t(2),r=t(46),o=function(t){r.extend(this,t),this.initialize.apply(this,arguments)};r.extend(o.prototype,{initialize:function(){this.hidden=!1},pivot:function(){var t=this;return t._view||(t._view=r.clone(t._model)),t._start={},t},transition:function(t){var e=this,n=e._model,r=e._start,o=e._view;return n&&1!==t?(o||(o=e._view={}),r||(r=e._start={}),function(t,e,n,r){var o,a,s,l,u,c,h,d,f,p=Object.keys(n);for(o=0,a=p.length;o<a;++o)if(c=n[s=p[o]],e.hasOwnProperty(s)||(e[s]=c),(l=e[s])!==c&&"_"!==s[0]){if(t.hasOwnProperty(s)||(t[s]=l),(h=typeof c)==typeof(u=t[s]))if("string"===h){if((d=i(u)).valid&&(f=i(c)).valid){e[s]=f.mix(d,r).rgbString();continue}}else if("number"===h&&isFinite(u)&&isFinite(c)){e[s]=u+(c-u)*r;continue}e[s]=c}}(r,o,n,t)):(e._view=n,e._start=null),e},tooltipPosition:function(){return{x:this._model.x,y:this._model.y}},hasValue:function(){return r.isNumber(this._model.x)&&r.isNumber(this._model.y)}}),o.extend=r.inherits,e.exports=o},{2:2,46:46}],28:[function(t,e,n){"use strict";var i=t(2),r=t(26),o=t(46),a=t(34);e.exports=function(){function t(t,e,n){var i;return"string"==typeof t?(i=parseInt(t,10),-1!==t.indexOf("%")&&(i=i/100*e.parentNode[n])):i=t,i}function e(t){return null!=t&&"none"!==t}function n(n,i,r){var a=document.defaultView,s=o._getParentNode(n),l=a.getComputedStyle(n)[i],u=a.getComputedStyle(s)[i],c=e(l),h=e(u),d=Number.POSITIVE_INFINITY;return c||h?Math.min(c?t(l,n,r):d,h?t(u,s,r):d):"none"}o.configMerge=function(){return o.merge(o.clone(arguments[0]),[].slice.call(arguments,1),{merger:function(t,e,n,i){var r=e[t]||{},s=n[t];"scales"===t?e[t]=o.scaleMerge(r,s):"scale"===t?e[t]=o.merge(r,[a.getScaleDefaults(s.type),s]):o._merger(t,e,n,i)}})},o.scaleMerge=function(){return o.merge(o.clone(arguments[0]),[].slice.call(arguments,1),{merger:function(t,e,n,i){if("xAxes"===t||"yAxes"===t){var r,s,l,u=n[t].length;for(e[t]||(e[t]=[]),r=0;r<u;++r)l=n[t][r],s=o.valueOrDefault(l.type,"xAxes"===t?"category":"linear"),r>=e[t].length&&e[t].push({}),!e[t][r].type||l.type&&l.type!==e[t][r].type?o.merge(e[t][r],[a.getScaleDefaults(s),l]):o.merge(e[t][r],l)}else o._merger(t,e,n,i)}})},o.where=function(t,e){if(o.isArray(t)&&Array.prototype.filter)return t.filter(e);var n=[];return o.each(t,function(t){e(t)&&n.push(t)}),n},o.findIndex=Array.prototype.findIndex?function(t,e,n){return t.findIndex(e,n)}:function(t,e,n){n=void 0===n?t:n;for(var i=0,r=t.length;i<r;++i)if(e.call(n,t[i],i,t))return i;return-1},o.findNextWhere=function(t,e,n){o.isNullOrUndef(n)&&(n=-1);for(var i=n+1;i<t.length;i++){var r=t[i];if(e(r))return r}},o.findPreviousWhere=function(t,e,n){o.isNullOrUndef(n)&&(n=t.length);for(var i=n-1;0<=i;i--){var r=t[i];if(e(r))return r}},o.isNumber=function(t){return!isNaN(parseFloat(t))&&isFinite(t)},o.almostEquals=function(t,e,n){return Math.abs(t-e)<n},o.almostWhole=function(t,e){var n=Math.round(t);return n-e<t&&t<n+e},o.max=function(t){return t.reduce(function(t,e){return isNaN(e)?t:Math.max(t,e)},Number.NEGATIVE_INFINITY)},o.min=function(t){return t.reduce(function(t,e){return isNaN(e)?t:Math.min(t,e)},Number.POSITIVE_INFINITY)},o.sign=Math.sign?function(t){return Math.sign(t)}:function(t){return 0===(t=+t)||isNaN(t)?t:0<t?1:-1},o.log10=Math.log10?function(t){return Math.log10(t)}:function(t){var e=Math.log(t)*Math.LOG10E,n=Math.round(e);return t===Math.pow(10,n)?n:e},o.toRadians=function(t){return t*(Math.PI/180)},o.toDegrees=function(t){return t*(180/Math.PI)},o.getAngleFromPoint=function(t,e){var n=e.x-t.x,i=e.y-t.y,r=Math.sqrt(n*n+i*i),o=Math.atan2(i,n);return o<-.5*Math.PI&&(o+=2*Math.PI),{angle:o,distance:r}},o.distanceBetweenPoints=function(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))},o.aliasPixel=function(t){return t%2==0?0:.5},o.splineCurve=function(t,e,n,i){var r=t.skip?e:t,o=e,a=n.skip?e:n,s=Math.sqrt(Math.pow(o.x-r.x,2)+Math.pow(o.y-r.y,2)),l=Math.sqrt(Math.pow(a.x-o.x,2)+Math.pow(a.y-o.y,2)),u=s/(s+l),c=l/(s+l),h=i*(u=isNaN(u)?0:u),d=i*(c=isNaN(c)?0:c);return{previous:{x:o.x-h*(a.x-r.x),y:o.y-h*(a.y-r.y)
},next:{x:o.x+d*(a.x-r.x),y:o.y+d*(a.y-r.y)}}},o.EPSILON=Number.EPSILON||1e-14,o.splineCurveMonotone=function(t){var e,n,i,r,a,s,l,u,c,h=(t||[]).map(function(t){return{model:t._model,deltaK:0,mK:0}}),d=h.length;for(e=0;e<d;++e)if(!(i=h[e]).model.skip){if(n=0<e?h[e-1]:null,(r=e<d-1?h[e+1]:null)&&!r.model.skip){var f=r.model.x-i.model.x;i.deltaK=0!==f?(r.model.y-i.model.y)/f:0}!n||n.model.skip?i.mK=i.deltaK:!r||r.model.skip?i.mK=n.deltaK:this.sign(n.deltaK)!==this.sign(i.deltaK)?i.mK=0:i.mK=(n.deltaK+i.deltaK)/2}for(e=0;e<d-1;++e)i=h[e],r=h[e+1],i.model.skip||r.model.skip||(o.almostEquals(i.deltaK,0,this.EPSILON)?i.mK=r.mK=0:(a=i.mK/i.deltaK,s=r.mK/i.deltaK,(u=Math.pow(a,2)+Math.pow(s,2))<=9||(l=3/Math.sqrt(u),i.mK=a*l*i.deltaK,r.mK=s*l*i.deltaK)));for(e=0;e<d;++e)(i=h[e]).model.skip||(n=0<e?h[e-1]:null,r=e<d-1?h[e+1]:null,n&&!n.model.skip&&(c=(i.model.x-n.model.x)/3,i.model.controlPointPreviousX=i.model.x-c,i.model.controlPointPreviousY=i.model.y-c*i.mK),r&&!r.model.skip&&(c=(r.model.x-i.model.x)/3,i.model.controlPointNextX=i.model.x+c,i.model.controlPointNextY=i.model.y+c*i.mK))},o.nextItem=function(t,e,n){return n?e>=t.length-1?t[0]:t[e+1]:e>=t.length-1?t[t.length-1]:t[e+1]},o.previousItem=function(t,e,n){return n?e<=0?t[t.length-1]:t[e-1]:e<=0?t[0]:t[e-1]},o.niceNum=function(t,e){var n=Math.floor(o.log10(t)),i=t/Math.pow(10,n);return(e?i<1.5?1:i<3?2:i<7?5:10:i<=1?1:i<=2?2:i<=5?5:10)*Math.pow(10,n)},o.requestAnimFrame="undefined"==typeof window?function(t){t()}:window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){return window.setTimeout(t,1e3/60)},o.getRelativePosition=function(t,e){var n,i,r=t.originalEvent||t,a=t.target||t.srcElement,s=a.getBoundingClientRect(),l=r.touches;i=l&&0<l.length?(n=l[0].clientX,l[0].clientY):(n=r.clientX,r.clientY);var u=parseFloat(o.getStyle(a,"padding-left")),c=parseFloat(o.getStyle(a,"padding-top")),h=parseFloat(o.getStyle(a,"padding-right")),d=parseFloat(o.getStyle(a,"padding-bottom")),f=s.right-s.left-u-h,p=s.bottom-s.top-c-d;return{x:n=Math.round((n-s.left-u)/f*a.width/e.currentDevicePixelRatio),y:i=Math.round((i-s.top-c)/p*a.height/e.currentDevicePixelRatio)}},o.getConstraintWidth=function(t){return n(t,"max-width","clientWidth")},o.getConstraintHeight=function(t){return n(t,"max-height","clientHeight")},o._calculatePadding=function(t,e,n){return-1<(e=o.getStyle(t,e)).indexOf("%")?n/parseInt(e,10):parseInt(e,10)},o._getParentNode=function(t){var e=t.parentNode;return e&&e.host&&(e=e.host),e},o.getMaximumWidth=function(t){var e=o._getParentNode(t);if(!e)return t.clientWidth;var n=e.clientWidth,i=n-o._calculatePadding(e,"padding-left",n)-o._calculatePadding(e,"padding-right",n),r=o.getConstraintWidth(t);return isNaN(r)?i:Math.min(i,r)},o.getMaximumHeight=function(t){var e=o._getParentNode(t);if(!e)return t.clientHeight;var n=e.clientHeight,i=n-o._calculatePadding(e,"padding-top",n)-o._calculatePadding(e,"padding-bottom",n),r=o.getConstraintHeight(t);return isNaN(r)?i:Math.min(i,r)},o.getStyle=function(t,e){return t.currentStyle?t.currentStyle[e]:document.defaultView.getComputedStyle(t,null).getPropertyValue(e)},o.retinaScale=function(t,e){var n=t.currentDevicePixelRatio=e||"undefined"!=typeof window&&window.devicePixelRatio||1;if(1!==n){var i=t.canvas,r=t.height,o=t.width;i.height=r*n,i.width=o*n,t.ctx.scale(n,n),i.style.height||i.style.width||(i.style.height=r+"px",i.style.width=o+"px")}},o.fontString=function(t,e,n){return e+" "+t+"px "+n},o.longestText=function(t,e,n,i){var r=(i=i||{}).data=i.data||{},a=i.garbageCollect=i.garbageCollect||[];i.font!==e&&(r=i.data={},a=i.garbageCollect=[],i.font=e),t.font=e;var s=0;o.each(n,function(e){null!=e&&!0!==o.isArray(e)?s=o.measureText(t,r,a,s,e):o.isArray(e)&&o.each(e,function(e){null==e||o.isArray(e)||(s=o.measureText(t,r,a,s,e))})});var l=a.length/2;if(l>n.length){for(var u=0;u<l;u++)delete r[a[u]];a.splice(0,l)}return s},o.measureText=function(t,e,n,i,r){var o=e[r];return o||(o=e[r]=t.measureText(r).width,n.push(r)),i<o&&(i=o),i},o.numberOfLabelLines=function(t){var e=1;return o.each(t,function(t){o.isArray(t)&&t.length>e&&(e=t.length)}),e},o.color=i?function(t){return t instanceof CanvasGradient&&(t=r.global.defaultColor),i(t)}:function(t){return console.error("Color.js not found!"),t},o.getHoverColor=function(t){return t instanceof CanvasPattern?t:o.color(t).saturate(.5).darken(.1).rgbString()}}},{2:2,26:26,34:34,46:46}],29:[function(t,e,n){"use strict";function i(t,e){return t["native"]?{x:t.x,y:t.y}:u.getRelativePosition(t,e)}function r(t,e){var n,i,r,o,a;for(i=0,o=t.data.datasets.length;i<o;++i)if(t.isDatasetVisible(i))for(r=0,a=(n=t.getDatasetMeta(i)).data.length;r<a;++r){var s=n.data[r];s._view.skip||e(s)}}function o(t,e){var n=[];return r(t,function(t){t.inRange(e.x,e.y)&&n.push(t)}),n}function a(t,e,n,i){var o=Number.POSITIVE_INFINITY,a=[];return r(t,function(t){if(!n||t.inRange(e.x,e.y)){var r=t.getCenterPoint(),s=i(e,r);s<o?(a=[t],o=s):s===o&&a.push(t)}}),a}function s(t){var e=-1!==t.indexOf("x"),n=-1!==t.indexOf("y");return function(t,i){var r=e?Math.abs(t.x-i.x):0,o=n?Math.abs(t.y-i.y):0;return Math.sqrt(Math.pow(r,2)+Math.pow(o,2))}}function l(t,e,n){var r=i(e,t);n.axis=n.axis||"x";var l=s(n.axis),u=n.intersect?o(t,r):a(t,r,!1,l),c=[];return u.length?(t.data.datasets.forEach(function(e,n){if(t.isDatasetVisible(n)){var i=t.getDatasetMeta(n).data[u[0]._index];i&&!i._view.skip&&c.push(i)}}),c):[]}var u=t(46);e.exports={modes:{single:function(t,e){var n=i(e,t),o=[];return r(t,function(t){if(t.inRange(n.x,n.y))return o.push(t),o}),o.slice(0,1)},label:l,index:l,dataset:function(t,e,n){var r=i(e,t);n.axis=n.axis||"xy";var l=s(n.axis),u=n.intersect?o(t,r):a(t,r,!1,l);return 0<u.length&&(u=t.getDatasetMeta(u[0]._datasetIndex).data),u},"x-axis":function(t,e){return l(t,e,{intersect:!1})},point:function(t,e){return o(t,i(e,t))},nearest:function(t,e,n){var r=i(e,t);n.axis=n.axis||"xy";var o=s(n.axis),l=a(t,r,n.intersect,o);return 1<l.length&&l.sort(function(t,e){var n=t.getArea()-e.getArea();return 0===n&&(n=t._datasetIndex-e._datasetIndex),n}),l.slice(0,1)},x:function(t,e,n){var o=i(e,t),a=[],s=!1;return r(t,function(t){t.inXRange(o.x)&&a.push(t),t.inRange(o.x,o.y)&&(s=!0)}),n.intersect&&!s&&(a=[]),a},y:function(t,e,n){var o=i(e,t),a=[],s=!1;return r(t,function(t){t.inYRange(o.y)&&a.push(t),t.inRange(o.x,o.y)&&(s=!0)}),n.intersect&&!s&&(a=[]),a}}}},{46:46}],30:[function(t,e,n){"use strict";t(26)._set("global",{responsive:!0,responsiveAnimationDuration:0,maintainAspectRatio:!0,events:["mousemove","mouseout","click","touchstart","touchmove"],hover:{onHover:null,mode:"nearest",intersect:!0,animationDuration:400},onClick:null,defaultColor:"rgba(0,0,0,0.1)",defaultFontColor:"#666",defaultFontFamily:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",defaultFontSize:12,defaultFontStyle:"normal",showLines:!0,elements:{},layout:{padding:{top:0,right:0,bottom:0,left:0}}}),e.exports=function(){var t=function(t,e){return this.construct(t,e),this};return t.Chart=t}},{26:26}],31:[function(t,e,n){"use strict";function i(t,e){return o.where(t,function(t){return t.position===e})}function r(t,e){t.forEach(function(t,e){return t._tmpIndex_=e,t}),t.sort(function(t,n){var i=e?n:t,r=e?t:n;return i.weight===r.weight?i._tmpIndex_-r._tmpIndex_:i.weight-r.weight}),t.forEach(function(t){delete t._tmpIndex_})}var o=t(46);e.exports={defaults:{},addBox:function(t,e){t.boxes||(t.boxes=[]),e.fullWidth=e.fullWidth||!1,e.position=e.position||"top",e.weight=e.weight||0,t.boxes.push(e)},removeBox:function(t,e){var n=t.boxes?t.boxes.indexOf(e):-1;-1!==n&&t.boxes.splice(n,1)},configure:function(t,e,n){for(var i,r=["fullWidth","position","weight"],o=r.length,a=0;a<o;++a)i=r[a],n.hasOwnProperty(i)&&(e[i]=n[i])},update:function(t,e,n){function a(t){var e=o.findNextWhere(C,function(e){return e.box===t});if(e)if(t.isHorizontal()){var n={left:Math.max(O,D),right:Math.max(I,T),top:0,bottom:0};t.update(t.fullWidth?b:M,x/2,n)}else t.update(e.minSize.width,S)}function s(t){t.isHorizontal()?(t.left=t.fullWidth?c:O,t.right=t.fullWidth?e-h:O+M,t.top=H,t.bottom=H+t.height,H=t.bottom):(t.left=W,t.right=W+t.width,t.top=L,t.bottom=L+S,W=t.right)}if(t){var l=t.options.layout||{},u=o.options.toPadding(l.padding),c=u.left,h=u.right,d=u.top,f=u.bottom,p=i(t.boxes,"left"),g=i(t.boxes,"right"),m=i(t.boxes,"top"),v=i(t.boxes,"bottom"),y=i(t.boxes,"chartArea");r(p,!0),r(g,!1),r(m,!0),r(v,!1);var b=e-c-h,x=n-d-f,_=x/2,w=(e-b/2)/(p.length+g.length),k=(n-_)/(m.length+v.length),M=b,S=x,C=[];o.each(p.concat(g,m,v),function(t){var e,n=t.isHorizontal();n?(e=t.update(t.fullWidth?b:M,k),S-=e.height):(e=t.update(w,S),M-=e.width),C.push({horizontal:n,minSize:e,box:t})});var D=0,T=0,P=0,A=0;o.each(m.concat(v),function(t){if(t.getPadding){var e=t.getPadding();D=Math.max(D,e.left),T=Math.max(T,e.right)}}),o.each(p.concat(g),function(t){if(t.getPadding){var e=t.getPadding();P=Math.max(P,e.top),A=Math.max(A,e.bottom)}});var O=c,I=h,L=d,E=f;o.each(p.concat(g),a),o.each(p,function(t){O+=t.width}),o.each(g,function(t){I+=t.width}),o.each(m.concat(v),a),o.each(m,function(t){L+=t.height}),o.each(v,function(t){E+=t.height}),o.each(p.concat(g),function(t){var e=o.findNextWhere(C,function(e){return e.box===t}),n={left:0,right:0,top:L,bottom:E};e&&t.update(e.minSize.width,S,n)}),O=c,I=h,L=d,E=f,o.each(p,function(t){O+=t.width}),o.each(g,function(t){I+=t.width}),o.each(m,function(t){L+=t.height}),o.each(v,function(t){E+=t.height});var F=Math.max(D-O,0);O+=F,I+=Math.max(T-I,0);var N=Math.max(P-L,0);L+=N,E+=Math.max(A-E,0);var R=n-L-E,z=e-O-I;z===M&&R===S||(o.each(p,function(t){t.height=R}),o.each(g,function(t){t.height=R}),o.each(m,function(t){t.fullWidth||(t.width=z)}),o.each(v,function(t){t.fullWidth||(t.width=z)}),S=R,M=z);var W=c+F,H=d+N;o.each(p.concat(m),s),W+=M,H+=S,o.each(g,s),o.each(v,s),t.chartArea={left:O,top:L,right:O+M,bottom:L+S},o.each(y,function(e){e.left=t.chartArea.left,e.top=t.chartArea.top,e.right=t.chartArea.right,e.bottom=t.chartArea.bottom,e.update(M,S)})}}}},{46:46}],32:[function(t,e,n){"use strict";var i=t(26),r=t(46);i._set("global",{plugins:{}}),e.exports={_plugins:[],_cacheId:0,register:function(t){var e=this._plugins;[].concat(t).forEach(function(t){-1===e.indexOf(t)&&e.push(t)}),this._cacheId++},unregister:function(t){var e=this._plugins;[].concat(t).forEach(function(t){var n=e.indexOf(t);-1!==n&&e.splice(n,1)}),this._cacheId++},clear:function(){this._plugins=[],this._cacheId++},count:function(){return this._plugins.length},getAll:function(){return this._plugins},notify:function(t,e,n){var i,r,o,a,s,l=this.descriptors(t),u=l.length;for(i=0;i<u;++i)if("function"==typeof(s=(o=(r=l[i]).plugin)[e])&&((a=[t].concat(n||[])).push(r.options),!1===s.apply(o,a)))return!1;return!0},descriptors:function(t){var e=t.$plugins||(t.$plugins={});if(e.id===this._cacheId)return e.descriptors;var n=[],o=[],a=t&&t.config||{},s=a.options&&a.options.plugins||{};return this._plugins.concat(a.plugins||[]).forEach(function(t){if(-1===n.indexOf(t)){var e=t.id,a=s[e];!1!==a&&(!0===a&&(a=r.clone(i.global.plugins[e])),n.push(t),o.push({plugin:t,options:a||{}}))}}),e.descriptors=o,e.id=this._cacheId,o},_invalidate:function(t){delete t.$plugins}}},{26:26,46:46}],33:[function(t,e,n){"use strict";function i(t){var e,n,i=[];for(e=0,n=t.length;e<n;++e)i.push(t[e].label);return i}function r(t,e,n){var i=t.getPixelForTick(e);return n&&(i-=0===e?(t.getPixelForTick(1)-i)/2:(i-t.getPixelForTick(e-1))/2),i}function o(t,e,n){return c.isArray(e)?c.longestText(t,n,e):t.measureText(e).width}function a(t){var e=c.valueOrDefault,n=l.global,i=e(t.fontSize,n.defaultFontSize),r=e(t.fontStyle,n.defaultFontStyle),o=e(t.fontFamily,n.defaultFontFamily);return{size:i,style:r,family:o,font:c.fontString(i,r,o)}}function s(t){return c.options.toLineHeight(c.valueOrDefault(t.lineHeight,1.2),c.valueOrDefault(t.fontSize,l.global.defaultFontSize))}var l=t(26),u=t(27),c=t(46),h=t(35);l._set("scale",{display:!0,position:"left",offset:!1,gridLines:{display:!0,color:"rgba(0, 0, 0, 0.1)",lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickMarkLength:10,zeroLineWidth:1,zeroLineColor:"rgba(0,0,0,0.25)",zeroLineBorderDash:[],zeroLineBorderDashOffset:0,offsetGridLines:!1,borderDash:[],borderDashOffset:0},scaleLabel:{display:!1,labelString:"",lineHeight:1.2,padding:{top:4,bottom:4}},ticks:{beginAtZero:!1,minRotation:0,maxRotation:50,mirror:!1,padding:0,reverse:!1,display:!0,autoSkip:!0,autoSkipPadding:0,labelOffset:0,callback:h.formatters.values,minor:{},major:{}}}),e.exports=u.extend({getPadding:function(){return{left:this.paddingLeft||0,top:this.paddingTop||0,right:this.paddingRight||0,bottom:this.paddingBottom||0}},getTicks:function(){return this._ticks},mergeTicksOptions:function(){var t=this.options.ticks;for(var e in!1===t.minor&&(t.minor={display:!1}),!1===t.major&&(t.major={display:!1}),t)"major"!==e&&"minor"!==e&&(void 0===t.minor[e]&&(t.minor[e]=t[e]),void 0===t.major[e]&&(t.major[e]=t[e]))},beforeUpdate:function(){c.callback(this.options.beforeUpdate,[this])},update:function(t,e,n){var i,r,o,a,s,l,u=this;for(u.beforeUpdate(),u.maxWidth=t,u.maxHeight=e,u.margins=c.extend({left:0,right:0,top:0,bottom:0},n),u.longestTextCache=u.longestTextCache||{},u.beforeSetDimensions(),u.setDimensions(),u.afterSetDimensions(),u.beforeDataLimits(),u.determineDataLimits(),u.afterDataLimits(),u.beforeBuildTicks(),s=u.buildTicks()||[],u.afterBuildTicks(),u.beforeTickToLabelConversion(),o=u.convertTicksToLabels(s)||u.ticks,u.afterTickToLabelConversion(),i=0,r=(u.ticks=o).length;i<r;++i)a=o[i],(l=s[i])?l.label=a:s.push(l={label:a,major:!1});return u._ticks=s,u.beforeCalculateTickRotation(),u.calculateTickRotation(),u.afterCalculateTickRotation(),u.beforeFit(),u.fit(),u.afterFit(),u.afterUpdate(),u.minSize},afterUpdate:function(){c.callback(this.options.afterUpdate,[this])},beforeSetDimensions:function(){c.callback(this.options.beforeSetDimensions,[this])},setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0},afterSetDimensions:function(){c.callback(this.options.afterSetDimensions,[this])},beforeDataLimits:function(){c.callback(this.options.beforeDataLimits,[this])},determineDataLimits:c.noop,afterDataLimits:function(){c.callback(this.options.afterDataLimits,[this])},beforeBuildTicks:function(){c.callback(this.options.beforeBuildTicks,[this])},buildTicks:c.noop,afterBuildTicks:function(){c.callback(this.options.afterBuildTicks,[this])},beforeTickToLabelConversion:function(){c.callback(this.options.beforeTickToLabelConversion,[this])},convertTicksToLabels:function(){var t=this.options.ticks;this.ticks=this.ticks.map(t.userCallback||t.callback,this)},afterTickToLabelConversion:function(){c.callback(this.options.afterTickToLabelConversion,[this])},beforeCalculateTickRotation:function(){c.callback(this.options.beforeCalculateTickRotation,[this])},calculateTickRotation:function(){var t=this,e=t.ctx,n=t.options.ticks,r=i(t._ticks),o=a(n);e.font=o.font;var s=n.minRotation||0;if(r.length&&t.options.display&&t.isHorizontal())for(var l,u=c.longestText(e,o.font,r,t.longestTextCache),h=u,d=t.getPixelForTick(1)-t.getPixelForTick(0)-6;d<h&&s<n.maxRotation;){var f=c.toRadians(s);if(l=Math.cos(f),Math.sin(f)*u>t.maxHeight){s--;break}s++,h=l*u}t.labelRotation=s},afterCalculateTickRotation:function(){c.callback(this.options.afterCalculateTickRotation,[this])},beforeFit:function(){c.callback(this.options.beforeFit,[this])},fit:function(){var t=this,e=t.minSize={width:0,height:0},n=i(t._ticks),r=t.options,l=r.ticks,u=r.scaleLabel,h=r.gridLines,d=r.display,f=t.isHorizontal(),p=a(l),g=r.gridLines.tickMarkLength;if(e.width=f?t.isFullWidth()?t.maxWidth-t.margins.left-t.margins.right:t.maxWidth:d&&h.drawTicks?g:0,e.height=f?d&&h.drawTicks?g:0:t.maxHeight,u.display&&d){var m=s(u)+c.options.toPadding(u.padding).height;f?e.height+=m:e.width+=m}if(l.display&&d){var v=c.longestText(t.ctx,p.font,n,t.longestTextCache),y=c.numberOfLabelLines(n),b=.5*p.size,x=t.options.ticks.padding;if(f){t.longestLabelWidth=v;var _=c.toRadians(t.labelRotation),w=Math.cos(_),k=Math.sin(_)*v+p.size*y+b*(y-1)+b;e.height=Math.min(t.maxHeight,e.height+k+x),t.ctx.font=p.font;var M=o(t.ctx,n[0],p.font),S=o(t.ctx,n[n.length-1],p.font);0!==t.labelRotation?(t.paddingLeft="bottom"===r.position?w*M+3:w*b+3,t.paddingRight="bottom"===r.position?w*b+3:w*S+3):(t.paddingLeft=M/2+3,t.paddingRight=S/2+3)}else l.mirror?v=0:v+=x+b,e.width=Math.min(t.maxWidth,e.width+v),t.paddingTop=p.size/2,t.paddingBottom=p.size/2}t.handleMargins(),t.width=e.width,t.height=e.height},handleMargins:function(){var t=this;t.margins&&(t.paddingLeft=Math.max(t.paddingLeft-t.margins.left,0),t.paddingTop=Math.max(t.paddingTop-t.margins.top,0),t.paddingRight=Math.max(t.paddingRight-t.margins.right,0),t.paddingBottom=Math.max(t.paddingBottom-t.margins.bottom,0))},afterFit:function(){c.callback(this.options.afterFit,[this])},isHorizontal:function(){return"top"===this.options.position||"bottom"===this.options.position},isFullWidth:function(){return this.options.fullWidth},getRightValue:function(t){if(c.isNullOrUndef(t))return NaN;if("number"==typeof t&&!isFinite(t))return NaN;if(t)if(this.isHorizontal()){if(void 0!==t.x)return this.getRightValue(t.x)}else if(void 0!==t.y)return this.getRightValue(t.y);return t},getLabelForIndex:c.noop,getPixelForValue:c.noop,getValueForPixel:c.noop,getPixelForTick:function(t){var e=this,n=e.options.offset;if(e.isHorizontal()){var i=(e.width-(e.paddingLeft+e.paddingRight))/Math.max(e._ticks.length-(n?0:1),1),r=i*t+e.paddingLeft;n&&(r+=i/2);var o=e.left+Math.round(r);return o+=e.isFullWidth()?e.margins.left:0}var a=e.height-(e.paddingTop+e.paddingBottom);return e.top+t*(a/(e._ticks.length-1))},getPixelForDecimal:function(t){var e=this;if(e.isHorizontal()){var n=(e.width-(e.paddingLeft+e.paddingRight))*t+e.paddingLeft,i=e.left+Math.round(n);return i+=e.isFullWidth()?e.margins.left:0}return e.top+t*e.height},getBasePixel:function(){return this.getPixelForValue(this.getBaseValue())},getBaseValue:function(){var t=this.min,e=this.max;return this.beginAtZero?0:t<0&&e<0?e:0<t&&0<e?t:0},_autoSkip:function(t){var e,n,i,r,o=this,a=o.isHorizontal(),s=o.options.ticks.minor,l=t.length,u=c.toRadians(o.labelRotation),h=Math.cos(u),d=o.longestLabelWidth*h,f=[];for(s.maxTicksLimit&&(r=s.maxTicksLimit),a&&(e=!1,(d+s.autoSkipPadding)*l>o.width-(o.paddingLeft+o.paddingRight)&&(e=1+Math.floor((d+s.autoSkipPadding)*l/(o.width-(o.paddingLeft+o.paddingRight)))),r&&r<l&&(e=Math.max(e,Math.floor(l/r)))),n=0;n<l;n++)i=t[n],(1<e&&0<n%e||n%e==0&&l<=n+e)&&n!==l-1&&delete i.label,f.push(i);return f},draw:function(t){var e=this,n=e.options;if(n.display){var i=e.ctx,o=l.global,u=n.ticks.minor,h=n.ticks.major||u,d=n.gridLines,f=n.scaleLabel,p=0!==e.labelRotation,g=e.isHorizontal(),m=u.autoSkip?e._autoSkip(e.getTicks()):e.getTicks(),v=c.valueOrDefault(u.fontColor,o.defaultFontColor),y=a(u),b=c.valueOrDefault(h.fontColor,o.defaultFontColor),x=a(h),_=d.drawTicks?d.tickMarkLength:0,w=c.valueOrDefault(f.fontColor,o.defaultFontColor),k=a(f),M=c.options.toPadding(f.padding),S=c.toRadians(e.labelRotation),C=[],D=e.options.gridLines.lineWidth,T="right"===n.position?e.left:e.right-D-_,P="right"===n.position?e.left+_:e.right,A="bottom"===n.position?e.top+D:e.bottom-_-D,O="bottom"===n.position?e.top+D+_:e.bottom+D;if(c.each(m,function(i,a){if(!c.isNullOrUndef(i.label)){var s,l,h,f,v,y,b,x,w,k,M,I,L,E,F=i.label;f=a===e.zeroLineIndex&&n.offset===d.offsetGridLines?(s=d.zeroLineWidth,l=d.zeroLineColor,h=d.zeroLineBorderDash,d.zeroLineBorderDashOffset):(s=c.valueAtIndexOrDefault(d.lineWidth,a),l=c.valueAtIndexOrDefault(d.color,a),h=c.valueOrDefault(d.borderDash,o.borderDash),c.valueOrDefault(d.borderDashOffset,o.borderDashOffset));var N="middle",R="middle",z=u.padding;if(g){var W=_+z;E="bottom"===n.position?(R=p?"middle":"top",N=p?"right":"center",e.top+W):(R=p?"middle":"bottom",N=p?"left":"center",e.bottom-W);var H=r(e,a,d.offsetGridLines&&1<m.length);H<e.left&&(l="rgba(0,0,0,0)"),H+=c.aliasPixel(s),L=e.getPixelForTick(a)+u.labelOffset,v=b=w=M=H,y=A,x=O,k=t.top,I=t.bottom+D}else{var j,Y="left"===n.position;j=u.mirror?(N=Y?"left":"right",z):(N=Y?"right":"left",_+z),L=Y?e.right-j:e.left+j;var B=r(e,a,d.offsetGridLines&&1<m.length);B<e.top&&(l="rgba(0,0,0,0)"),B+=c.aliasPixel(s),E=e.getPixelForTick(a)+u.labelOffset,v=T,b=P,w=t.left,M=t.right+D,y=x=k=I=B}C.push({tx1:v,ty1:y,tx2:b,ty2:x,x1:w,y1:k,x2:M,y2:I,labelX:L,labelY:E,glWidth:s,glColor:l,glBorderDash:h,glBorderDashOffset:f,rotation:-1*S,label:F,major:i.major,textBaseline:R,textAlign:N})}}),c.each(C,function(t){if(d.display&&(i.save(),i.lineWidth=t.glWidth,i.strokeStyle=t.glColor,i.setLineDash&&(i.setLineDash(t.glBorderDash),i.lineDashOffset=t.glBorderDashOffset),i.beginPath(),d.drawTicks&&(i.moveTo(t.tx1,t.ty1),i.lineTo(t.tx2,t.ty2)),d.drawOnChartArea&&(i.moveTo(t.x1,t.y1),i.lineTo(t.x2,t.y2)),i.stroke(),i.restore()),u.display){i.save(),i.translate(t.labelX,t.labelY),i.rotate(t.rotation),i.font=t.major?x.font:y.font,i.fillStyle=t.major?b:v,i.textBaseline=t.textBaseline,i.textAlign=t.textAlign;var n=t.label;if(c.isArray(n))for(var r=n.length,o=1.5*y.size,a=e.isHorizontal()?0:-o*(r-1)/2,s=0;s<r;++s)i.fillText(""+n[s],0,a),a+=o;else i.fillText(n,0,0);i.restore()}}),f.display){var I,L,E=0,F=s(f)/2;if(g)I=e.left+(e.right-e.left)/2,L="bottom"===n.position?e.bottom-F-M.bottom:e.top+F+M.top;else{var N="left"===n.position;I=N?e.left+F+M.top:e.right-F-M.top,L=e.top+(e.bottom-e.top)/2,E=N?-.5*Math.PI:.5*Math.PI}i.save(),i.translate(I,L),i.rotate(E),i.textAlign="center",i.textBaseline="middle",i.fillStyle=w,i.font=k.font,i.fillText(f.labelString,0,0),i.restore()}if(d.drawBorder){i.lineWidth=c.valueAtIndexOrDefault(d.lineWidth,0),i.strokeStyle=c.valueAtIndexOrDefault(d.color,0);var R=e.left,z=e.right+D,W=e.top,H=e.bottom+D,j=c.aliasPixel(i.lineWidth);g?(W=H="top"===n.position?e.bottom:e.top,W+=j,H+=j):(R=z="left"===n.position?e.right:e.left,R+=j,z+=j),i.beginPath(),i.moveTo(R,W),i.lineTo(z,H),i.stroke()}}}})},{26:26,27:27,35:35,46:46}],34:[function(t,e,n){"use strict";var i=t(26),r=t(46),o=t(31);e.exports={constructors:{},defaults:{},registerScaleType:function(t,e,n){this.constructors[t]=e,this.defaults[t]=r.clone(n)},getScaleConstructor:function(t){return this.constructors.hasOwnProperty(t)?this.constructors[t]:void 0},getScaleDefaults:function(t){return this.defaults.hasOwnProperty(t)?r.merge({},[i.scale,this.defaults[t]]):{}},updateScaleDefaults:function(t,e){this.defaults.hasOwnProperty(t)&&(this.defaults[t]=r.extend(this.defaults[t],e))},addScalesToLayout:function(t){r.each(t.scales,function(e){e.fullWidth=e.options.fullWidth,e.position=e.options.position,e.weight=e.options.weight,o.addBox(t,e)})}}},{26:26,31:31,46:46}],35:[function(t,e,n){"use strict";var i=t(46);e.exports={formatters:{values:function(t){return i.isArray(t)?t:""+t},linear:function(t,e,n){var r=3<n.length?n[2]-n[1]:n[1]-n[0];1<Math.abs(r)&&t!==Math.floor(t)&&(r=t-Math.floor(t));var o=i.log10(Math.abs(r)),a="";if(0!==t)if(Math.max(Math.abs(n[0]),Math.abs(n[n.length-1]))<1e-4){var s=i.log10(Math.abs(t));a=t.toExponential(Math.floor(s)-Math.floor(o))}else{var l=-1*Math.floor(o);l=Math.max(Math.min(l,20),0),a=t.toFixed(l)}else a="0";return a},logarithmic:function(t,e,n){var r=t/Math.pow(10,Math.floor(i.log10(t)));return 0===t?"0":1===r||2===r||5===r||0===e||e===n.length-1?t.toExponential():""}}}},{46:46}],36:[function(t,e,n){"use strict";function i(t,e){var n=c.color(t);return n.alpha(e*n.alpha()).rgbaString()}function r(t,e){return e&&(c.isArray(e)?Array.prototype.push.apply(t,e):t.push(e)),t}function o(t){return("string"==typeof t||t instanceof String)&&-1<t.indexOf("\n")?t.split("\n"):t}function a(t){var e=l.global,n=c.valueOrDefault;return{xPadding:t.xPadding,yPadding:t.yPadding,xAlign:t.xAlign,yAlign:t.yAlign,bodyFontColor:t.bodyFontColor,_bodyFontFamily:n(t.bodyFontFamily,e.defaultFontFamily),_bodyFontStyle:n(t.bodyFontStyle,e.defaultFontStyle),_bodyAlign:t.bodyAlign,bodyFontSize:n(t.bodyFontSize,e.defaultFontSize),bodySpacing:t.bodySpacing,titleFontColor:t.titleFontColor,_titleFontFamily:n(t.titleFontFamily,e.defaultFontFamily),_titleFontStyle:n(t.titleFontStyle,e.defaultFontStyle),titleFontSize:n(t.titleFontSize,e.defaultFontSize),_titleAlign:t.titleAlign,titleSpacing:t.titleSpacing,titleMarginBottom:t.titleMarginBottom,footerFontColor:t.footerFontColor,_footerFontFamily:n(t.footerFontFamily,e.defaultFontFamily),_footerFontStyle:n(t.footerFontStyle,e.defaultFontStyle),footerFontSize:n(t.footerFontSize,e.defaultFontSize),_footerAlign:t.footerAlign,footerSpacing:t.footerSpacing,footerMarginTop:t.footerMarginTop,caretSize:t.caretSize,cornerRadius:t.cornerRadius,backgroundColor:t.backgroundColor,opacity:0,legendColorBackground:t.multiKeyBackground,displayColors:t.displayColors,borderColor:t.borderColor,borderWidth:t.borderWidth}}function s(t){return r([],o(t))}var l=t(26),u=t(27),c=t(46);l._set("global",{tooltips:{enabled:!0,custom:null,mode:"nearest",position:"average",intersect:!0,backgroundColor:"rgba(0,0,0,0.8)",titleFontStyle:"bold",titleSpacing:2,titleMarginBottom:6,titleFontColor:"#fff",titleAlign:"left",bodySpacing:2,bodyFontColor:"#fff",bodyAlign:"left",footerFontStyle:"bold",footerSpacing:2,footerMarginTop:6,footerFontColor:"#fff",footerAlign:"left",yPadding:6,xPadding:6,caretPadding:2,caretSize:5,cornerRadius:6,multiKeyBackground:"#fff",displayColors:!0,borderColor:"rgba(0,0,0,0)",borderWidth:0,callbacks:{beforeTitle:c.noop,title:function(t,e){var n="",i=e.labels,r=i?i.length:0;if(0<t.length){var o=t[0];o.xLabel?n=o.xLabel:0<r&&o.index<r&&(n=i[o.index])}return n},afterTitle:c.noop,beforeBody:c.noop,beforeLabel:c.noop,label:function(t,e){var n=e.datasets[t.datasetIndex].label||"";return n&&(n+=": "),n+=t.yLabel},labelColor:function(t,e){var n=e.getDatasetMeta(t.datasetIndex).data[t.index]._view;return{borderColor:n.borderColor,backgroundColor:n.backgroundColor}},labelTextColor:function(){return this._options.bodyFontColor},afterLabel:c.noop,afterBody:c.noop,beforeFooter:c.noop,footer:c.noop,afterFooter:c.noop}}});var h={average:function(t){if(!t.length)return!1;var e,n,i=0,r=0,o=0;for(e=0,n=t.length;e<n;++e){var a=t[e];if(a&&a.hasValue()){var s=a.tooltipPosition();i+=s.x,r+=s.y,++o}}return{x:Math.round(i/o),y:Math.round(r/o)}},nearest:function(t,e){var n,i,r,o=e.x,a=e.y,s=Number.POSITIVE_INFINITY;for(n=0,i=t.length;n<i;++n){var l=t[n];if(l&&l.hasValue()){var u=l.getCenterPoint(),h=c.distanceBetweenPoints(e,u);h<s&&(s=h,r=l)}}if(r){var d=r.tooltipPosition();o=d.x,a=d.y}return{x:o,y:a}}};(e.exports=u.extend({initialize:function(){this._model=a(this._options),this._lastActive=[]},getTitle:function(){var t=this._options.callbacks,e=t.beforeTitle.apply(this,arguments),n=t.title.apply(this,arguments),i=t.afterTitle.apply(this,arguments),a=[];return a=r(a=r(a=r(a,o(e)),o(n)),o(i))},getBeforeBody:function(){return s(this._options.callbacks.beforeBody.apply(this,arguments))},getBody:function(t,e){var n=this,i=n._options.callbacks,a=[];return c.each(t,function(t){var s={before:[],lines:[],after:[]};r(s.before,o(i.beforeLabel.call(n,t,e))),r(s.lines,i.label.call(n,t,e)),r(s.after,o(i.afterLabel.call(n,t,e))),a.push(s)}),a},getAfterBody:function(){return s(this._options.callbacks.afterBody.apply(this,arguments))},getFooter:function(){var t=this._options.callbacks,e=t.beforeFooter.apply(this,arguments),n=t.footer.apply(this,arguments),i=t.afterFooter.apply(this,arguments),a=[];return a=r(a=r(a=r(a,o(e)),o(n)),o(i))},update:function(t){var e,n,i,r,o,s,l,u,d,f,p,g,m,v,y,b,x,_,w,k,M=this,S=M._options,C=M._model,D=M._model=a(S),T=M._active,P=M._data,A={xAlign:C.xAlign,yAlign:C.yAlign},O={x:C.x,y:C.y},I={width:C.width,height:C.height},L={x:C.caretX,y:C.caretY};if(T.length){D.opacity=1;var E=[],F=[];L=h[S.position].call(M,T,M._eventPosition);var N=[];for(e=0,n=T.length;e<n;++e)N.push((b=T[e],_=x=void 0,x=b._xScale,_=b._yScale||b._scale,w=b._index,k=b._datasetIndex,{xLabel:x?x.getLabelForIndex(w,k):"",yLabel:_?_.getLabelForIndex(w,k):"",index:w,datasetIndex:k,x:b._model.x,y:b._model.y}));S.filter&&(N=N.filter(function(t){return S.filter(t,P)})),S.itemSort&&(N=N.sort(function(t,e){return S.itemSort(t,e,P)})),c.each(N,function(t){E.push(S.callbacks.labelColor.call(M,t,M._chart)),F.push(S.callbacks.labelTextColor.call(M,t,M._chart))}),D.title=M.getTitle(N,P),D.beforeBody=M.getBeforeBody(N,P),D.body=M.getBody(N,P),D.afterBody=M.getAfterBody(N,P),D.footer=M.getFooter(N,P),D.x=Math.round(L.x),D.y=Math.round(L.y),D.caretPadding=S.caretPadding,D.labelColors=E,D.labelTextColors=F,D.dataPoints=N,A=function(t,e){var n,i,r,o,a,s=t._model,l=t._chart,u=t._chart.chartArea,c="center",h="center";s.y<e.height?h="top":s.y>l.height-e.height&&(h="bottom");var d=(u.left+u.right)/2,f=(u.top+u.bottom)/2;i="center"===h?(n=function(t){return t<=d},function(t){return d<t}):(n=function(t){return t<=e.width/2},function(t){return t>=l.width-e.width/2}),r=function(t){return t+e.width+s.caretSize+s.caretPadding>l.width},o=function(t){return t-e.width-s.caretSize-s.caretPadding<0},a=function(t){return t<=f?"top":"bottom"},n(s.x)?(c="left",r(s.x)&&(c="center",h=a(s.y))):i(s.x)&&(c="right",o(s.x)&&(c="center",h=a(s.y)));var p=t._options;return{xAlign:p.xAlign?p.xAlign:c,yAlign:p.yAlign?p.yAlign:h}}(this,I=function(t,e){var n=t._chart.ctx,i=2*e.yPadding,r=0,o=e.body,a=o.reduce(function(t,e){return t+e.before.length+e.lines.length+e.after.length},0);a+=e.beforeBody.length+e.afterBody.length;var s=e.title.length,l=e.footer.length,u=e.titleFontSize,h=e.bodyFontSize,d=e.footerFontSize;i+=s*u,i+=s?(s-1)*e.titleSpacing:0,i+=s?e.titleMarginBottom:0,i+=a*h,i+=a?(a-1)*e.bodySpacing:0,i+=l?e.footerMarginTop:0,i+=l*d,i+=l?(l-1)*e.footerSpacing:0;var f=0,p=function(t){r=Math.max(r,n.measureText(t).width+f)};return n.font=c.fontString(u,e._titleFontStyle,e._titleFontFamily),c.each(e.title,p),n.font=c.fontString(h,e._bodyFontStyle,e._bodyFontFamily),c.each(e.beforeBody.concat(e.afterBody),p),f=e.displayColors?h+2:0,c.each(o,function(t){c.each(t.before,p),c.each(t.lines,p),c.each(t.after,p)}),f=0,n.font=c.fontString(d,e._footerFontStyle,e._footerFontFamily),c.each(e.footer,p),{width:r+=2*e.xPadding,height:i}}(this,D)),i=D,r=I,o=A,s=M._chart,l=i.x,u=i.y,d=i.caretSize,f=i.caretPadding,p=i.cornerRadius,g=o.xAlign,m=o.yAlign,v=d+f,y=p+f,"right"===g?l-=r.width:"center"===g&&((l-=r.width/2)+r.width>s.width&&(l=s.width-r.width),l<0&&(l=0)),"top"===m?u+=v:u-="bottom"===m?r.height+v:r.height/2,"center"===m?"left"===g?l+=v:"right"===g&&(l-=v):"left"===g?l-=y:"right"===g&&(l+=y),O={x:l,y:u}}else D.opacity=0;return D.xAlign=A.xAlign,D.yAlign=A.yAlign,D.x=O.x,D.y=O.y,D.width=I.width,D.height=I.height,D.caretX=L.x,D.caretY=L.y,M._model=D,t&&S.custom&&S.custom.call(M,D),M},drawCaret:function(t,e){var n=this._chart.ctx,i=this._view,r=this.getCaretPosition(t,e,i);n.lineTo(r.x1,r.y1),n.lineTo(r.x2,r.y2),n.lineTo(r.x3,r.y3)},getCaretPosition:function(t,e,n){var i,r,o,a,s,l,u=n.caretSize,c=n.cornerRadius,h=n.xAlign,d=n.yAlign,f=t.x,p=t.y,g=e.width,m=e.height;if("center"===d)s=p+m/2,l="left"===h?(r=(i=f)-u,o=i,a=s+u,s-u):(r=(i=f+g)+u,o=i,a=s-u,s+u);else if(i="left"===h?(r=f+c+u)-u:"right"===h?(r=f+g-c-u)-u:(r=n.caretX)-u,o=r+u,"top"===d)s=(a=p)-u,l=a;else{s=(a=p+m)+u,l=a;var v=o;o=i,i=v}return{x1:i,x2:r,x3:o,y1:a,y2:s,y3:l}},drawTitle:function(t,e,n,r){var o=e.title;if(o.length){n.textAlign=e._titleAlign,n.textBaseline="top";var a,s,l=e.titleFontSize,u=e.titleSpacing;for(n.fillStyle=i(e.titleFontColor,r),n.font=c.fontString(l,e._titleFontStyle,e._titleFontFamily),a=0,s=o.length;a<s;++a)n.fillText(o[a],t.x,t.y),t.y+=l+u,a+1===o.length&&(t.y+=e.titleMarginBottom-u)}},drawBody:function(t,e,n,r){var o=e.bodyFontSize,a=e.bodySpacing,s=e.body;n.textAlign=e._bodyAlign,n.textBaseline="top",n.font=c.fontString(o,e._bodyFontStyle,e._bodyFontFamily);
var l=0,u=function(e){n.fillText(e,t.x+l,t.y),t.y+=o+a};n.fillStyle=i(e.bodyFontColor,r),c.each(e.beforeBody,u);var h=e.displayColors;l=h?o+2:0,c.each(s,function(a,s){var l=i(e.labelTextColors[s],r);n.fillStyle=l,c.each(a.before,u),c.each(a.lines,function(a){h&&(n.fillStyle=i(e.legendColorBackground,r),n.fillRect(t.x,t.y,o,o),n.lineWidth=1,n.strokeStyle=i(e.labelColors[s].borderColor,r),n.strokeRect(t.x,t.y,o,o),n.fillStyle=i(e.labelColors[s].backgroundColor,r),n.fillRect(t.x+1,t.y+1,o-2,o-2),n.fillStyle=l),u(a)}),c.each(a.after,u)}),l=0,c.each(e.afterBody,u),t.y-=a},drawFooter:function(t,e,n,r){var o=e.footer;o.length&&(t.y+=e.footerMarginTop,n.textAlign=e._footerAlign,n.textBaseline="top",n.fillStyle=i(e.footerFontColor,r),n.font=c.fontString(e.footerFontSize,e._footerFontStyle,e._footerFontFamily),c.each(o,function(i){n.fillText(i,t.x,t.y),t.y+=e.footerFontSize+e.footerSpacing}))},drawBackground:function(t,e,n,r,o){n.fillStyle=i(e.backgroundColor,o),n.strokeStyle=i(e.borderColor,o),n.lineWidth=e.borderWidth;var a=e.xAlign,s=e.yAlign,l=t.x,u=t.y,c=r.width,h=r.height,d=e.cornerRadius;n.beginPath(),n.moveTo(l+d,u),"top"===s&&this.drawCaret(t,r),n.lineTo(l+c-d,u),n.quadraticCurveTo(l+c,u,l+c,u+d),"center"===s&&"right"===a&&this.drawCaret(t,r),n.lineTo(l+c,u+h-d),n.quadraticCurveTo(l+c,u+h,l+c-d,u+h),"bottom"===s&&this.drawCaret(t,r),n.lineTo(l+d,u+h),n.quadraticCurveTo(l,u+h,l,u+h-d),"center"===s&&"left"===a&&this.drawCaret(t,r),n.lineTo(l,u+d),n.quadraticCurveTo(l,u,l+d,u),n.closePath(),n.fill(),0<e.borderWidth&&n.stroke()},draw:function(){var t=this._chart.ctx,e=this._view;if(0!==e.opacity){var n={width:e.width,height:e.height},i={x:e.x,y:e.y},r=Math.abs(e.opacity<.001)?0:e.opacity,o=e.title.length||e.beforeBody.length||e.body.length||e.afterBody.length||e.footer.length;this._options.enabled&&o&&(this.drawBackground(i,e,t,n,r),i.x+=e.xPadding,i.y+=e.yPadding,this.drawTitle(i,e,t,r),this.drawBody(i,e,t,r),this.drawFooter(i,e,t,r))}},handleEvent:function(t){var e,n=this,i=n._options;return n._lastActive=n._lastActive||[],"mouseout"===t.type?n._active=[]:n._active=n._chart.getElementsAtEventForMode(t,i.mode,i),(e=!c.arrayEquals(n._active,n._lastActive))&&(n._lastActive=n._active,(i.enabled||i.custom)&&(n._eventPosition={x:t.x,y:t.y},n.update(!0),n.pivot())),e}})).positioners=h},{26:26,27:27,46:46}],37:[function(t,e,n){"use strict";var i=t(26),r=t(27),o=t(46);i._set("global",{elements:{arc:{backgroundColor:i.global.defaultColor,borderColor:"#fff",borderWidth:2}}}),e.exports=r.extend({inLabelRange:function(t){var e=this._view;return!!e&&Math.pow(t-e.x,2)<Math.pow(e.radius+e.hoverRadius,2)},inRange:function(t,e){var n=this._view;if(n){for(var i=o.getAngleFromPoint(n,{x:t,y:e}),r=i.angle,a=i.distance,s=n.startAngle,l=n.endAngle;l<s;)l+=2*Math.PI;for(;l<r;)r-=2*Math.PI;for(;r<s;)r+=2*Math.PI;var u=s<=r&&r<=l,c=a>=n.innerRadius&&a<=n.outerRadius;return u&&c}return!1},getCenterPoint:function(){var t=this._view,e=(t.startAngle+t.endAngle)/2,n=(t.innerRadius+t.outerRadius)/2;return{x:t.x+Math.cos(e)*n,y:t.y+Math.sin(e)*n}},getArea:function(){var t=this._view;return Math.PI*((t.endAngle-t.startAngle)/(2*Math.PI))*(Math.pow(t.outerRadius,2)-Math.pow(t.innerRadius,2))},tooltipPosition:function(){var t=this._view,e=t.startAngle+(t.endAngle-t.startAngle)/2,n=(t.outerRadius-t.innerRadius)/2+t.innerRadius;return{x:t.x+Math.cos(e)*n,y:t.y+Math.sin(e)*n}},draw:function(){var t=this._chart.ctx,e=this._view,n=e.startAngle,i=e.endAngle;t.beginPath(),t.arc(e.x,e.y,e.outerRadius,n,i),t.arc(e.x,e.y,e.innerRadius,i,n,!0),t.closePath(),t.strokeStyle=e.borderColor,t.lineWidth=e.borderWidth,t.fillStyle=e.backgroundColor,t.fill(),t.lineJoin="bevel",e.borderWidth&&t.stroke()}})},{26:26,27:27,46:46}],38:[function(t,e,n){"use strict";var i=t(26),r=t(27),o=t(46),a=i.global;i._set("global",{elements:{line:{tension:.4,backgroundColor:a.defaultColor,borderWidth:3,borderColor:a.defaultColor,borderCapStyle:"butt",borderDash:[],borderDashOffset:0,borderJoinStyle:"miter",capBezierPoints:!0,fill:!0}}}),e.exports=r.extend({draw:function(){var t,e,n,i,r=this._view,s=this._chart.ctx,l=r.spanGaps,u=this._children.slice(),c=a.elements.line,h=-1;for(this._loop&&u.length&&u.push(u[0]),s.save(),s.lineCap=r.borderCapStyle||c.borderCapStyle,s.setLineDash&&s.setLineDash(r.borderDash||c.borderDash),s.lineDashOffset=r.borderDashOffset||c.borderDashOffset,s.lineJoin=r.borderJoinStyle||c.borderJoinStyle,s.lineWidth=r.borderWidth||c.borderWidth,s.strokeStyle=r.borderColor||a.defaultColor,s.beginPath(),h=-1,t=0;t<u.length;++t)e=u[t],n=o.previousItem(u,t),i=e._view,0===t?i.skip||(s.moveTo(i.x,i.y),h=t):(n=-1===h?n:u[h],i.skip||(h!==t-1&&!l||-1===h?s.moveTo(i.x,i.y):o.canvas.lineTo(s,n._view,e._view),h=t));s.stroke(),s.restore()}})},{26:26,27:27,46:46}],39:[function(t,e,n){"use strict";function i(t){var e=this._view;return!!e&&Math.abs(t-e.x)<e.radius+e.hitRadius}var r=t(26),o=t(27),a=t(46),s=r.global.defaultColor;r._set("global",{elements:{point:{radius:3,pointStyle:"circle",backgroundColor:s,borderColor:s,borderWidth:1,hitRadius:1,hoverRadius:4,hoverBorderWidth:1}}}),e.exports=o.extend({inRange:function(t,e){var n=this._view;return!!n&&Math.pow(t-n.x,2)+Math.pow(e-n.y,2)<Math.pow(n.hitRadius+n.radius,2)},inLabelRange:i,inXRange:i,inYRange:function(t){var e=this._view;return!!e&&Math.abs(t-e.y)<e.radius+e.hitRadius},getCenterPoint:function(){var t=this._view;return{x:t.x,y:t.y}},getArea:function(){return Math.PI*Math.pow(this._view.radius,2)},tooltipPosition:function(){var t=this._view;return{x:t.x,y:t.y,padding:t.radius+t.borderWidth}},draw:function(t){var e=this._view,n=this._model,i=this._chart.ctx,o=e.pointStyle,l=e.rotation,u=e.radius,c=e.x,h=e.y;e.skip||(void 0===t||n.x>=t.left&&1.01*t.right>=n.x&&n.y>=t.top&&1.01*t.bottom>=n.y)&&(i.strokeStyle=e.borderColor||s,i.lineWidth=a.valueOrDefault(e.borderWidth,r.global.elements.point.borderWidth),i.fillStyle=e.backgroundColor||s,a.canvas.drawPoint(i,o,u,c,h,l))}})},{26:26,27:27,46:46}],40:[function(t,e,n){"use strict";function i(t){return void 0!==t._view.width}function r(t){var e,n,r,o,a=t._view;if(i(t)){var s=a.width/2;e=a.x-s,n=a.x+s,r=Math.min(a.y,a.base),o=Math.max(a.y,a.base)}else{var l=a.height/2;e=Math.min(a.x,a.base),n=Math.max(a.x,a.base),r=a.y-l,o=a.y+l}return{left:e,top:r,right:n,bottom:o}}var o=t(26),a=t(27);o._set("global",{elements:{rectangle:{backgroundColor:o.global.defaultColor,borderColor:o.global.defaultColor,borderSkipped:"bottom",borderWidth:0}}}),e.exports=a.extend({draw:function(){function t(t){return v[(y+t)%4]}var e,n,i,r,o,a,s,l=this._chart.ctx,u=this._view,c=u.borderWidth;if(s=u.horizontal?(e=u.base,n=u.x,i=u.y-u.height/2,r=u.y+u.height/2,o=e<n?1:-1,a=1,u.borderSkipped||"left"):(e=u.x-u.width/2,n=u.x+u.width/2,o=1,a=(i=u.y)<(r=u.base)?1:-1,u.borderSkipped||"bottom"),c){var h=Math.min(Math.abs(e-n),Math.abs(i-r)),d=(c=h<c?h:c)/2,f=e+("left"!==s?d*o:0),p=n+("right"!==s?-d*o:0),g=i+("top"!==s?d*a:0),m=r+("bottom"!==s?-d*a:0);f!==p&&(i=g,r=m),g!==m&&(e=f,n=p)}l.beginPath(),l.fillStyle=u.backgroundColor,l.strokeStyle=u.borderColor,l.lineWidth=c;var v=[[e,r],[e,i],[n,i],[n,r]],y=["bottom","left","top","right"].indexOf(s,0);-1===y&&(y=0);var b=t(0);l.moveTo(b[0],b[1]);for(var x=1;x<4;x++)b=t(x),l.lineTo(b[0],b[1]);l.fill(),c&&l.stroke()},height:function(){var t=this._view;return t.base-t.y},inRange:function(t,e){var n=!1;if(this._view){var i=r(this);n=t>=i.left&&t<=i.right&&e>=i.top&&e<=i.bottom}return n},inLabelRange:function(t,e){if(!this._view)return!1;var n=r(this);return i(this)?t>=n.left&&t<=n.right:e>=n.top&&e<=n.bottom},inXRange:function(t){var e=r(this);return t>=e.left&&t<=e.right},inYRange:function(t){var e=r(this);return t>=e.top&&t<=e.bottom},getCenterPoint:function(){var t,e,n=this._view;return e=i(this)?(t=n.x,(n.y+n.base)/2):(t=(n.x+n.base)/2,n.y),{x:t,y:e}},getArea:function(){var t=this._view;return t.width*Math.abs(t.y-t.base)},tooltipPosition:function(){var t=this._view;return{x:t.x,y:t.y}}})},{26:26,27:27}],41:[function(t,e,n){"use strict";e.exports={},e.exports.Arc=t(37),e.exports.Line=t(38),e.exports.Point=t(39),e.exports.Rectangle=t(40)},{37:37,38:38,39:39,40:40}],42:[function(t,e,n){"use strict";var i=t(43);n=e.exports={clear:function(t){t.ctx.clearRect(0,0,t.width,t.height)},roundedRect:function(t,e,n,i,r,o){if(o){var a=Math.min(o,r/2-1e-7,i/2-1e-7);t.moveTo(e+a,n),t.lineTo(e+i-a,n),t.arcTo(e+i,n,e+i,n+a,a),t.lineTo(e+i,n+r-a),t.arcTo(e+i,n+r,e+i-a,n+r,a),t.lineTo(e+a,n+r),t.arcTo(e,n+r,e,n+r-a,a),t.lineTo(e,n+a),t.arcTo(e,n,e+a,n,a),t.closePath(),t.moveTo(e,n)}else t.rect(e,n,i,r)},drawPoint:function(t,e,n,i,r,o){var a,s,l,u,c,h;if(o=o||0,!e||"object"!=typeof e||"[object HTMLImageElement]"!==(a=e.toString())&&"[object HTMLCanvasElement]"!==a){if(!(isNaN(n)||n<=0)){switch(t.save(),t.translate(i,r),t.rotate(o*Math.PI/180),t.beginPath(),e){default:t.arc(0,0,n,0,2*Math.PI),t.closePath();break;case"triangle":c=(s=3*n/Math.sqrt(3))*Math.sqrt(3)/2,t.moveTo(-s/2,c/3),t.lineTo(s/2,c/3),t.lineTo(0,-2*c/3),t.closePath();break;case"rect":h=1/Math.SQRT2*n,t.rect(-h,-h,2*h,2*h);break;case"rectRounded":var d=n/Math.SQRT2,f=-d,p=-d,g=Math.SQRT2*n;this.roundedRect(t,f,p,g,g,.425*n);break;case"rectRot":h=1/Math.SQRT2*n,t.moveTo(-h,0),t.lineTo(0,h),t.lineTo(h,0),t.lineTo(0,-h),t.closePath();break;case"cross":t.moveTo(0,n),t.lineTo(0,-n),t.moveTo(-n,0),t.lineTo(n,0);break;case"crossRot":l=Math.cos(Math.PI/4)*n,u=Math.sin(Math.PI/4)*n,t.moveTo(-l,-u),t.lineTo(l,u),t.moveTo(-l,u),t.lineTo(l,-u);break;case"star":t.moveTo(0,n),t.lineTo(0,-n),t.moveTo(-n,0),t.lineTo(n,0),l=Math.cos(Math.PI/4)*n,u=Math.sin(Math.PI/4)*n,t.moveTo(-l,-u),t.lineTo(l,u),t.moveTo(-l,u),t.lineTo(l,-u);break;case"line":t.moveTo(-n,0),t.lineTo(n,0);break;case"dash":t.moveTo(0,0),t.lineTo(n,0)}t.fill(),t.stroke(),t.restore()}}else t.drawImage(e,i-e.width/2,r-e.height/2,e.width,e.height)},clipArea:function(t,e){t.save(),t.beginPath(),t.rect(e.left,e.top,e.right-e.left,e.bottom-e.top),t.clip()},unclipArea:function(t){t.restore()},lineTo:function(t,e,n,i){return n.steppedLine?("after"===n.steppedLine&&!i||"after"!==n.steppedLine&&i?t.lineTo(e.x,n.y):t.lineTo(n.x,e.y),void t.lineTo(n.x,n.y)):void(n.tension?t.bezierCurveTo(i?e.controlPointPreviousX:e.controlPointNextX,i?e.controlPointPreviousY:e.controlPointNextY,i?n.controlPointNextX:n.controlPointPreviousX,i?n.controlPointNextY:n.controlPointPreviousY,n.x,n.y):t.lineTo(n.x,n.y))}},i.clear=n.clear,i.drawRoundedRectangle=function(t){t.beginPath(),n.roundedRect.apply(n,arguments)}},{43:43}],43:[function(t,e,n){"use strict";var i,r={noop:function(){},uid:(i=0,function(){return i++}),isNullOrUndef:function(t){return null==t},isArray:Array.isArray?Array.isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)},isObject:function(t){return null!==t&&"[object Object]"===Object.prototype.toString.call(t)},valueOrDefault:function(t,e){return void 0===t?e:t},valueAtIndexOrDefault:function(t,e,n){return r.valueOrDefault(r.isArray(t)?t[e]:t,n)},callback:function(t,e,n){if(t&&"function"==typeof t.call)return t.apply(n,e)},each:function(t,e,n,i){var o,a,s;if(r.isArray(t))if(a=t.length,i)for(o=a-1;0<=o;o--)e.call(n,t[o],o);else for(o=0;o<a;o++)e.call(n,t[o],o);else if(r.isObject(t))for(a=(s=Object.keys(t)).length,o=0;o<a;o++)e.call(n,t[s[o]],s[o])},arrayEquals:function(t,e){var n,i,o,a;if(!t||!e||t.length!==e.length)return!1;for(n=0,i=t.length;n<i;++n)if(o=t[n],a=e[n],o instanceof Array&&a instanceof Array){if(!r.arrayEquals(o,a))return!1}else if(o!==a)return!1;return!0},clone:function(t){if(r.isArray(t))return t.map(r.clone);if(r.isObject(t)){for(var e={},n=Object.keys(t),i=n.length,o=0;o<i;++o)e[n[o]]=r.clone(t[n[o]]);return e}return t},_merger:function(t,e,n,i){var o=e[t],a=n[t];r.isObject(o)&&r.isObject(a)?r.merge(o,a,i):e[t]=r.clone(a)},_mergerIf:function(t,e,n){var i=e[t],o=n[t];r.isObject(i)&&r.isObject(o)?r.mergeIf(i,o):e.hasOwnProperty(t)||(e[t]=r.clone(o))},merge:function(t,e,n){var i,o,a,s,l,u=r.isArray(e)?e:[e],c=u.length;if(!r.isObject(t))return t;for(i=(n=n||{}).merger||r._merger,o=0;o<c;++o)if(e=u[o],r.isObject(e))for(l=0,s=(a=Object.keys(e)).length;l<s;++l)i(a[l],t,e,n);return t},mergeIf:function(t,e){return r.merge(t,e,{merger:r._mergerIf})},extend:function(t){for(var e=function(e,n){t[n]=e},n=1,i=arguments.length;n<i;++n)r.each(arguments[n],e);return t},inherits:function(t){var e=this,n=t&&t.hasOwnProperty("constructor")?t.constructor:function(){return e.apply(this,arguments)},i=function(){this.constructor=n};return i.prototype=e.prototype,n.prototype=new i,n.extend=r.inherits,t&&r.extend(n.prototype,t),n.__super__=e.prototype,n}};(e.exports=r).callCallback=r.callback,r.indexOf=function(t,e,n){return Array.prototype.indexOf.call(t,e,n)},r.getValueOrDefault=r.valueOrDefault,r.getValueAtIndexOrDefault=r.valueAtIndexOrDefault},{}],44:[function(t,e,n){"use strict";var i=t(43),r={linear:function(t){return t},easeInQuad:function(t){return t*t},easeOutQuad:function(t){return-t*(t-2)},easeInOutQuad:function(t){return(t/=.5)<1?.5*t*t:-.5*(--t*(t-2)-1)},easeInCubic:function(t){return t*t*t},easeOutCubic:function(t){return(t-=1)*t*t+1},easeInOutCubic:function(t){return(t/=.5)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},easeInQuart:function(t){return t*t*t*t},easeOutQuart:function(t){return-((t-=1)*t*t*t-1)},easeInOutQuart:function(t){return(t/=.5)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)},easeInQuint:function(t){return t*t*t*t*t},easeOutQuint:function(t){return(t-=1)*t*t*t*t+1},easeInOutQuint:function(t){return(t/=.5)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},easeInSine:function(t){return 1-Math.cos(t*(Math.PI/2))},easeOutSine:function(t){return Math.sin(t*(Math.PI/2))},easeInOutSine:function(t){return-.5*(Math.cos(Math.PI*t)-1)},easeInExpo:function(t){return 0===t?0:Math.pow(2,10*(t-1))},easeOutExpo:function(t){return 1===t?1:1-Math.pow(2,-10*t)},easeInOutExpo:function(t){return 0===t?0:1===t?1:(t/=.5)<1?.5*Math.pow(2,10*(t-1)):.5*(2-Math.pow(2,-10*--t))},easeInCirc:function(t){return 1<=t?t:-(Math.sqrt(1-t*t)-1)},easeOutCirc:function(t){return Math.sqrt(1-(t-=1)*t)},easeInOutCirc:function(t){return(t/=.5)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},easeInElastic:function(t){var e=1.70158,n=0,i=1;return 0===t?0:1===t?1:(n||(n=.3),e=i<1?(i=1,n/4):n/(2*Math.PI)*Math.asin(1/i),-i*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/n))},easeOutElastic:function(t){var e=1.70158,n=0,i=1;return 0===t?0:1===t?1:(n||(n=.3),e=i<1?(i=1,n/4):n/(2*Math.PI)*Math.asin(1/i),i*Math.pow(2,-10*t)*Math.sin((t-e)*(2*Math.PI)/n)+1)},easeInOutElastic:function(t){var e=1.70158,n=0,i=1;return 0===t?0:2==(t/=.5)?1:(n||(n=.45),e=i<1?(i=1,n/4):n/(2*Math.PI)*Math.asin(1/i),t<1?i*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/n)*-.5:i*Math.pow(2,-10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/n)*.5+1)},easeInBack:function(t){return t*t*(2.70158*t-1.70158)},easeOutBack:function(t){return(t-=1)*t*(2.70158*t+1.70158)+1},easeInOutBack:function(t){var e=1.70158;return(t/=.5)<1?t*t*((1+(e*=1.525))*t-e)*.5:.5*((t-=2)*t*((1+(e*=1.525))*t+e)+2)},easeInBounce:function(t){return 1-r.easeOutBounce(1-t)},easeOutBounce:function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},easeInOutBounce:function(t){return t<.5?.5*r.easeInBounce(2*t):.5*r.easeOutBounce(2*t-1)+.5}};e.exports={effects:r},i.easingEffects=r},{43:43}],45:[function(t,e,n){"use strict";var i=t(43);e.exports={toLineHeight:function(t,e){var n=(""+t).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);if(!n||"normal"===n[1])return 1.2*e;switch(t=+n[2],n[3]){case"px":return t;case"%":t/=100}return e*t},toPadding:function(t){var e,n,r,o;return i.isObject(t)?(e=+t.top||0,n=+t.right||0,r=+t.bottom||0,o=+t.left||0):e=n=r=o=+t||0,{top:e,right:n,bottom:r,left:o,height:e+r,width:o+n}},resolve:function(t,e,n){var r,o,a;for(r=0,o=t.length;r<o;++r)if(void 0!==(a=t[r])&&(void 0!==e&&"function"==typeof a&&(a=a(e)),void 0!==n&&i.isArray(a)&&(a=a[n]),void 0!==a))return a}}},{43:43}],46:[function(t,e,n){"use strict";e.exports=t(43),e.exports.easing=t(44),e.exports.canvas=t(42),e.exports.options=t(45)},{42:42,43:43,44:44,45:45}],47:[function(t,e,n){e.exports={acquireContext:function(t){return t&&t.canvas&&(t=t.canvas),t&&t.getContext("2d")||null}}},{}],48:[function(t,e,n){"use strict";function i(t,e){var n=u.getStyle(t,e),i=n&&n.match(/^(\d+)(\.\d+)?px$/);return i?Number(i[1]):void 0}function r(t,e,n){t.addEventListener(e,n,m)}function o(t,e,n){t.removeEventListener(e,n,m)}function a(t,e,n,i,r){return{type:t,chart:e,"native":r||null,x:void 0!==n?n:null,y:void 0!==i?i:null}}function s(t,e,n){var i,o,s,l,g,m,v,y,b=t[c]||(t[c]={}),x=b.resizer=function(t){var e=document.createElement("div"),n=h+"size-monitor",i="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;";e.style.cssText=i,e.className=n,e.innerHTML='<div class="'+n+'-expand" style="'+i+'"><div style="position:absolute;width:1000000px;height:1000000px;left:0;top:0"></div></div><div class="'+n+'-shrink" style="'+i+'"><div style="position:absolute;width:200%;height:200%;left:0; top:0"></div></div>';var o=e.childNodes[0],a=e.childNodes[1];e._reset=function(){o.scrollLeft=1e6,o.scrollTop=1e6,a.scrollLeft=1e6,a.scrollTop=1e6};var s=function(){e._reset(),t()};return r(o,"scroll",s.bind(o,"expand")),r(a,"scroll",s.bind(a,"shrink")),e}((s=!(i=function(){if(b.resizer)return e(a("resize",n))}),l=[],function(){l=Array.prototype.slice.call(arguments),o=o||this,s||(s=!0,u.requestAnimFrame.call(window,function(){s=!1,i.apply(o,l)}))}));m=function(){if(b.resizer){var e=t.parentNode;e&&e!==x.parentNode&&e.insertBefore(x,e.firstChild),x._reset()}},v=(g=t)[c]||(g[c]={}),y=v.renderProxy=function(t){t.animationName===f&&m()},u.each(p,function(t){r(g,t,y)}),v.reflow=!!g.offsetParent,g.classList.add(d)}function l(t){var e,n,i,r=t[c]||{},a=r.resizer;delete r.resizer,n=(e=t)[c]||{},(i=n.renderProxy)&&(u.each(p,function(t){o(e,t,i)}),delete n.renderProxy),e.classList.remove(d),a&&a.parentNode&&a.parentNode.removeChild(a)}var u=t(46),c="$chartjs",h="chartjs-",d=h+"render-monitor",f=h+"render-animation",p=["animationstart","webkitAnimationStart"],g={touchstart:"mousedown",touchmove:"mousemove",touchend:"mouseup",pointerenter:"mouseenter",pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointerleave:"mouseout",pointerout:"mouseout"},m=!!function(){var t=!1;try{var e=Object.defineProperty({},"passive",{get:function(){t=!0}});window.addEventListener("e",null,e)}catch(t){}return t}()&&{passive:!0};e.exports={_enabled:"undefined"!=typeof window&&"undefined"!=typeof document,initialize:function(){var t,e,n,i="from{opacity:0.99}to{opacity:1}";e="@-webkit-keyframes "+f+"{"+i+"}@keyframes "+f+"{"+i+"}."+d+"{-webkit-animation:"+f+" 0.001s;animation:"+f+" 0.001s;}",n=(t=this)._style||document.createElement("style"),t._style||(e="/* Chart.js */\n"+e,(t._style=n).setAttribute("type","text/css"),document.getElementsByTagName("head")[0].appendChild(n)),n.appendChild(document.createTextNode(e))},acquireContext:function(t,e){"string"==typeof t?t=document.getElementById(t):t.length&&(t=t[0]),t&&t.canvas&&(t=t.canvas);var n=t&&t.getContext&&t.getContext("2d");return n&&n.canvas===t?(function(t,e){var n=t.style,r=t.getAttribute("height"),o=t.getAttribute("width");if(t[c]={initial:{height:r,width:o,style:{display:n.display,height:n.height,width:n.width}}},n.display=n.display||"block",null===o||""===o){var a=i(t,"width");void 0!==a&&(t.width=a)}if(null===r||""===r)if(""===t.style.height)t.height=t.width/(e.options.aspectRatio||2);else{var s=i(t,"height");void 0!==a&&(t.height=s)}}(t,e),n):null},releaseContext:function(t){var e=t.canvas;if(e[c]){var n=e[c].initial;["height","width"].forEach(function(t){var i=n[t];u.isNullOrUndef(i)?e.removeAttribute(t):e.setAttribute(t,i)}),u.each(n.style||{},function(t,n){e.style[n]=t}),e.width=e.width,delete e[c]}},addEventListener:function(t,e,n){var i=t.canvas;if("resize"!==e){var o=n[c]||(n[c]={});r(i,e,(o.proxies||(o.proxies={}))[t.id+"_"+e]=function(e){var i,r,o,s;n((r=t,o=g[(i=e).type]||i.type,s=u.getRelativePosition(i,r),a(o,r,s.x,s.y,i)))})}else s(i,n,t)},removeEventListener:function(t,e,n){var i=t.canvas;if("resize"!==e){var r=((n[c]||{}).proxies||{})[t.id+"_"+e];r&&o(i,e,r)}else l(i)}},u.addEvent=r,u.removeEvent=o},{46:46}],49:[function(t,e,n){"use strict";var i=t(46),r=t(47),o=t(48),a=o._enabled?o:r;e.exports=i.extend({initialize:function(){},acquireContext:function(){},releaseContext:function(){},addEventListener:function(){},removeEventListener:function(){}},a)},{46:46,47:47,48:48}],50:[function(t,e,n){"use strict";e.exports={},e.exports.filler=t(51),e.exports.legend=t(52),e.exports.title=t(53)},{51:51,52:52,53:53}],51:[function(t,e,n){"use strict";function i(t,e,n){var i,r=t._model||{},o=r.fill;if(void 0===o&&(o=!!r.backgroundColor),!1===o||null===o)return!1;if(!0===o)return"origin";if(i=parseFloat(o,10),isFinite(i)&&Math.floor(i)===i)return"-"!==o[0]&&"+"!==o[0]||(i=e+i),!(i===e||i<0||n<=i)&&i;switch(o){case"bottom":return"start";case"top":return"end";case"zero":return"origin";case"origin":case"start":case"end":return o;default:return!1}}function r(t){var e,n=t.el._model||{},i=t.el._scale||{},r=t.fill,o=null;if(isFinite(r))return null;if("start"===r?o=void 0===n.scaleBottom?i.bottom:n.scaleBottom:"end"===r?o=void 0===n.scaleTop?i.top:n.scaleTop:void 0!==n.scaleZero?o=n.scaleZero:i.getBasePosition?o=i.getBasePosition():i.getBasePixel&&(o=i.getBasePixel()),null!=o){if(void 0!==o.x&&void 0!==o.y)return o;if("number"==typeof o&&isFinite(o))return{x:(e=i.isHorizontal())?o:null,y:e?null:o}}return null}function o(t,e,n){var i,r=t[e].fill,o=[e];if(!n)return r;for(;!1!==r&&-1===o.indexOf(r);){if(!isFinite(r))return r;if(!(i=t[r]))return!1;if(i.visible)return r;o.push(r),r=i.fill}return!1}function a(t){return t&&!t.skip}function s(t,e,n,i,r){var o;if(i&&r){for(t.moveTo(e[0].x,e[0].y),o=1;o<i;++o)c.canvas.lineTo(t,e[o-1],e[o]);for(t.lineTo(n[r-1].x,n[r-1].y),o=r-1;0<o;--o)c.canvas.lineTo(t,n[o],n[o-1],!0)}}var l=t(26),u=t(41),c=t(46);l._set("global",{plugins:{filler:{propagate:!0}}});var h={dataset:function(t){var e=t.fill,n=t.chart,i=n.getDatasetMeta(e),r=i&&n.isDatasetVisible(e)&&i.dataset._children||[],o=r.length||0;return o?function(t,e){return e<o&&r[e]._view||null}:null},boundary:function(t){var e=t.boundary,n=e?e.x:null,i=e?e.y:null;return function(t){return{x:null===n?t.x:n,y:null===i?t.y:i}}}};e.exports={id:"filler",afterDatasetsUpdate:function(t,e){var n,a,s,l,c,d,f,p=(t.data.datasets||[]).length,g=e.propagate,m=[];for(a=0;a<p;++a)l=null,(s=(n=t.getDatasetMeta(a)).dataset)&&s._model&&s instanceof u.Line&&(l={visible:t.isDatasetVisible(a),fill:i(s,a,p),chart:t,el:s}),n.$filler=l,m.push(l);for(a=0;a<p;++a)(l=m[a])&&(l.fill=o(m,a,g),l.boundary=r(l),l.mapper=(f=void 0,d=(c=l).fill,!(f="dataset")===d?null:(isFinite(d)||(f="boundary"),h[f](c))))},beforeDatasetDraw:function(t,e){var n=e.meta.$filler;if(n){var i=t.ctx,r=n.el,o=r._view,u=r._children||[],h=n.mapper,d=o.backgroundColor||l.global.defaultColor;h&&d&&u.length&&(c.canvas.clipArea(i,t.chartArea),function(t,e,n,i,r,o){var l,u,c,h,d,f,p,g=e.length,m=i.spanGaps,v=[],y=[],b=0,x=0;for(t.beginPath(),l=0,u=g+!!o;l<u;++l)d=n(h=e[c=l%g]._view,c,i),f=a(h),p=a(d),f&&p?(b=v.push(h),x=y.push(d)):b&&x&&(m?(f&&v.push(h),p&&y.push(d)):(s(t,v,y,b,x),b=x=0,v=[],y=[]));s(t,v,y,b,x),t.closePath(),t.fillStyle=r,t.fill()}(i,u,h,o,d,r._loop),c.canvas.unclipArea(i))}}}},{26:26,41:41,46:46}],52:[function(t,e,n){"use strict";function i(t,e){return t.usePointStyle?e*Math.SQRT2:t.boxWidth}function r(t,e){var n=new c({ctx:t.ctx,options:e,chart:t});l.configure(t,n,e),l.addBox(t,n),t.legend=n}var o=t(26),a=t(27),s=t(46),l=t(31),u=s.noop;o._set("global",{legend:{display:!0,position:"top",fullWidth:!0,reverse:!1,weight:1e3,onClick:function(t,e){var n=e.datasetIndex,i=this.chart,r=i.getDatasetMeta(n);r.hidden=null===r.hidden?!i.data.datasets[n].hidden:null,i.update()},onHover:null,labels:{boxWidth:40,padding:10,generateLabels:function(t){var e=t.data;return s.isArray(e.datasets)?e.datasets.map(function(e,n){return{text:e.label,fillStyle:s.isArray(e.backgroundColor)?e.backgroundColor[0]:e.backgroundColor,hidden:!t.isDatasetVisible(n),lineCap:e.borderCapStyle,lineDash:e.borderDash,lineDashOffset:e.borderDashOffset,lineJoin:e.borderJoinStyle,lineWidth:e.borderWidth,strokeStyle:e.borderColor,pointStyle:e.pointStyle,datasetIndex:n}},this):[]}}},legendCallback:function(t){var e=[];e.push('<ul class="'+t.id+'-legend">');for(var n=0;n<t.data.datasets.length;n++)e.push('<li><span style="background-color:'+t.data.datasets[n].backgroundColor+'"></span>'),t.data.datasets[n].label&&e.push(t.data.datasets[n].label),e.push("</li>");return e.push("</ul>"),e.join("")}});var c=a.extend({initialize:function(t){s.extend(this,t),this.legendHitBoxes=[],this.doughnutMode=!1},beforeUpdate:u,update:function(t,e,n){var i=this;return i.beforeUpdate(),i.maxWidth=t,i.maxHeight=e,i.margins=n,i.beforeSetDimensions(),i.setDimensions(),i.afterSetDimensions(),i.beforeBuildLabels(),i.buildLabels(),i.afterBuildLabels(),i.beforeFit(),i.fit(),i.afterFit(),i.afterUpdate(),i.minSize},afterUpdate:u,beforeSetDimensions:u,setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0,t.minSize={width:0,height:0}},afterSetDimensions:u,beforeBuildLabels:u,buildLabels:function(){var t=this,e=t.options.labels||{},n=s.callback(e.generateLabels,[t.chart],t)||[];e.filter&&(n=n.filter(function(n){return e.filter(n,t.chart.data)})),t.options.reverse&&n.reverse(),t.legendItems=n},afterBuildLabels:u,beforeFit:u,fit:function(){var t=this,e=t.options,n=e.labels,r=e.display,a=t.ctx,l=o.global,u=s.valueOrDefault,c=u(n.fontSize,l.defaultFontSize),h=u(n.fontStyle,l.defaultFontStyle),d=u(n.fontFamily,l.defaultFontFamily),f=s.fontString(c,h,d),p=t.legendHitBoxes=[],g=t.minSize,m=t.isHorizontal();if(g.height=m?(g.width=t.maxWidth,r?10:0):(g.width=r?10:0,t.maxHeight),r)if(a.font=f,m){var v=t.lineWidths=[0],y=t.legendItems.length?c+n.padding:0;a.textAlign="left",a.textBaseline="top",s.each(t.legendItems,function(e,r){var o=i(n,c)+c/2+a.measureText(e.text).width;v[v.length-1]+o+n.padding>=t.width&&(y+=c+n.padding,v[v.length]=t.left),p[r]={left:0,top:0,width:o,height:c},v[v.length-1]+=o+n.padding}),g.height+=y}else{var b=n.padding,x=t.columnWidths=[],_=n.padding,w=0,k=0,M=c+b;s.each(t.legendItems,function(t,e){var r=i(n,c)+c/2+a.measureText(t.text).width;k+M>g.height&&(_+=w+n.padding,x.push(w),k=w=0),w=Math.max(w,r),k+=M,p[e]={left:0,top:0,width:r,height:c}}),_+=w,x.push(w),g.width+=_}t.width=g.width,t.height=g.height},afterFit:u,isHorizontal:function(){return"top"===this.options.position||"bottom"===this.options.position},draw:function(){var t=this,e=t.options,n=e.labels,r=o.global,a=r.elements.line,l=t.width,u=t.lineWidths;if(e.display){var c,h=t.ctx,d=s.valueOrDefault,f=d(n.fontColor,r.defaultFontColor),p=d(n.fontSize,r.defaultFontSize),g=d(n.fontStyle,r.defaultFontStyle),m=d(n.fontFamily,r.defaultFontFamily),v=s.fontString(p,g,m);h.textAlign="left",h.textBaseline="middle",h.lineWidth=.5,h.strokeStyle=f,h.fillStyle=f,h.font=v;var y=i(n,p),b=t.legendHitBoxes,x=t.isHorizontal();c=x?{x:t.left+(l-u[0])/2,y:t.top+n.padding,line:0}:{x:t.left+n.padding,y:t.top+n.padding,line:0};var _=p+n.padding;s.each(t.legendItems,function(i,o){var f,g,m,v,w,k=h.measureText(i.text).width,M=y+p/2+k,S=c.x,C=c.y;x?l<=S+M&&(C=c.y+=_,c.line++,S=c.x=t.left+(l-u[c.line])/2):C+_>t.bottom&&(S=c.x=S+t.columnWidths[c.line]+n.padding,C=c.y=t.top+n.padding,c.line++),function(t,n,i){if(!(isNaN(y)||y<=0)){h.save(),h.fillStyle=d(i.fillStyle,r.defaultColor),h.lineCap=d(i.lineCap,a.borderCapStyle),h.lineDashOffset=d(i.lineDashOffset,a.borderDashOffset),h.lineJoin=d(i.lineJoin,a.borderJoinStyle),h.lineWidth=d(i.lineWidth,a.borderWidth),h.strokeStyle=d(i.strokeStyle,r.defaultColor);var o=0===d(i.lineWidth,a.borderWidth);if(h.setLineDash&&h.setLineDash(d(i.lineDash,a.borderDash)),e.labels&&e.labels.usePointStyle){var l=p*Math.SQRT2/2,u=l/Math.SQRT2,c=t+u,f=n+u;s.canvas.drawPoint(h,i.pointStyle,l,c,f)}else o||h.strokeRect(t,n,y,p),h.fillRect(t,n,y,p);h.restore()}}(S,C,i),b[o].left=S,b[o].top=C,f=i,g=k,v=y+(m=p/2)+S,w=C+m,h.fillText(f.text,v,w),f.hidden&&(h.beginPath(),h.lineWidth=2,h.moveTo(v,w),h.lineTo(v+g,w),h.stroke()),x?c.x+=M+n.padding:c.y+=_})}},handleEvent:function(t){var e=this,n=e.options,i="mouseup"===t.type?"click":t.type,r=!1;if("mousemove"===i){if(!n.onHover)return}else{if("click"!==i)return;if(!n.onClick)return}var o=t.x,a=t.y;if(o>=e.left&&o<=e.right&&a>=e.top&&a<=e.bottom)for(var s=e.legendHitBoxes,l=0;l<s.length;++l){var u=s[l];if(o>=u.left&&o<=u.left+u.width&&a>=u.top&&a<=u.top+u.height){if("click"===i){n.onClick.call(e,t["native"],e.legendItems[l]),r=!0;break}if("mousemove"===i){n.onHover.call(e,t["native"],e.legendItems[l]),r=!0;break}}}return r}});e.exports={id:"legend",_element:c,beforeInit:function(t){var e=t.options.legend;e&&r(t,e)},beforeUpdate:function(t){var e=t.options.legend,n=t.legend;e?(s.mergeIf(e,o.global.legend),n?(l.configure(t,n,e),n.options=e):r(t,e)):n&&(l.removeBox(t,n),delete t.legend)},afterEvent:function(t,e){var n=t.legend;n&&n.handleEvent(e)}}},{26:26,27:27,31:31,46:46}],53:[function(t,e,n){"use strict";function i(t,e){var n=new u({ctx:t.ctx,options:e,chart:t});s.configure(t,n,e),s.addBox(t,n),t.titleBlock=n}var r=t(26),o=t(27),a=t(46),s=t(31),l=a.noop;r._set("global",{title:{display:!1,fontStyle:"bold",fullWidth:!0,lineHeight:1.2,padding:10,position:"top",text:"",weight:2e3}});var u=o.extend({initialize:function(t){a.extend(this,t),this.legendHitBoxes=[]},beforeUpdate:l,update:function(t,e,n){var i=this;return i.beforeUpdate(),i.maxWidth=t,i.maxHeight=e,i.margins=n,i.beforeSetDimensions(),i.setDimensions(),i.afterSetDimensions(),i.beforeBuildLabels(),i.buildLabels(),i.afterBuildLabels(),i.beforeFit(),i.fit(),i.afterFit(),i.afterUpdate(),i.minSize},afterUpdate:l,beforeSetDimensions:l,setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0,t.minSize={width:0,height:0}},afterSetDimensions:l,beforeBuildLabels:l,buildLabels:l,afterBuildLabels:l,beforeFit:l,fit:function(){var t=a.valueOrDefault,e=this.options,n=e.display,i=t(e.fontSize,r.global.defaultFontSize),o=this.minSize,s=a.isArray(e.text)?e.text.length:1,l=a.options.toLineHeight(e.lineHeight,i),u=n?s*l+2*e.padding:0;this.isHorizontal()?(o.width=this.maxWidth,o.height=u):(o.width=u,o.height=this.maxHeight),this.width=o.width,this.height=o.height},afterFit:l,isHorizontal:function(){var t=this.options.position;return"top"===t||"bottom"===t},draw:function(){var t=this.ctx,e=a.valueOrDefault,n=this.options,i=r.global;if(n.display){var o,s,l,u=e(n.fontSize,i.defaultFontSize),c=e(n.fontStyle,i.defaultFontStyle),h=e(n.fontFamily,i.defaultFontFamily),d=a.fontString(u,c,h),f=a.options.toLineHeight(n.lineHeight,u),p=f/2+n.padding,g=0,m=this.top,v=this.left,y=this.bottom,b=this.right;t.fillStyle=e(n.fontColor,i.defaultFontColor),t.font=d,this.isHorizontal()?(s=v+(b-v)/2,l=m+p,o=b-v):(s="left"===n.position?v+p:b-p,l=m+(y-m)/2,o=y-m,g=Math.PI*("left"===n.position?-.5:.5)),t.save(),t.translate(s,l),t.rotate(g),t.textAlign="center",t.textBaseline="middle";var x=n.text;if(a.isArray(x))for(var _=0,w=0;w<x.length;++w)t.fillText(x[w],0,_,o),_+=f;else t.fillText(x,0,0,o);t.restore()}}});e.exports={id:"title",_element:u,beforeInit:function(t){var e=t.options.title;e&&i(t,e)},beforeUpdate:function(t){var e=t.options.title,n=t.titleBlock;e?(a.mergeIf(e,r.global.title),n?(s.configure(t,n,e),n.options=e):i(t,e)):n&&(s.removeBox(t,n),delete t.titleBlock)}}},{26:26,27:27,31:31,46:46}],54:[function(t,e,n){"use strict";var i=t(33),r=t(34);e.exports=function(){
var t=i.extend({getLabels:function(){var t=this.chart.data;return this.options.labels||(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels},determineDataLimits:function(){var t,e=this,n=e.getLabels();e.minIndex=0,e.maxIndex=n.length-1,void 0!==e.options.ticks.min&&(t=n.indexOf(e.options.ticks.min),e.minIndex=-1!==t?t:e.minIndex),void 0!==e.options.ticks.max&&(t=n.indexOf(e.options.ticks.max),e.maxIndex=-1!==t?t:e.maxIndex),e.min=n[e.minIndex],e.max=n[e.maxIndex]},buildTicks:function(){var t=this.getLabels();this.ticks=0===this.minIndex&&this.maxIndex===t.length-1?t:t.slice(this.minIndex,this.maxIndex+1)},getLabelForIndex:function(t,e){var n=this.chart.data,i=this.isHorizontal();return n.yLabels&&!i?this.getRightValue(n.datasets[e].data[t]):this.ticks[t-this.minIndex]},getPixelForValue:function(t,e){var n,i=this,r=i.options.offset,o=Math.max(i.maxIndex+1-i.minIndex-(r?0:1),1);if(null!=t&&(n=i.isHorizontal()?t.x:t.y),void 0!==n||void 0!==t&&isNaN(e)){t=n||t;var a=i.getLabels().indexOf(t);e=-1!==a?a:e}if(i.isHorizontal()){var s=i.width/o,l=s*(e-i.minIndex);return r&&(l+=s/2),i.left+Math.round(l)}var u=i.height/o,c=u*(e-i.minIndex);return r&&(c+=u/2),i.top+Math.round(c)},getPixelForTick:function(t){return this.getPixelForValue(this.ticks[t],t+this.minIndex,null)},getValueForPixel:function(t){var e=this.options.offset,n=Math.max(this._ticks.length-(e?0:1),1),i=this.isHorizontal(),r=(i?this.width:this.height)/n;return t-=i?this.left:this.top,e&&(t-=r/2),(t<=0?0:Math.round(t/r))+this.minIndex},getBasePixel:function(){return this.bottom}});r.registerScaleType("category",t,{position:"bottom"})}},{33:33,34:34}],55:[function(t,e,n){"use strict";var i=t(26),r=t(46),o=t(34),a=t(35);e.exports=function(t){var e={position:"left",ticks:{callback:a.formatters.linear}},n=t.LinearScaleBase.extend({determineDataLimits:function(){function t(t){return a?t.xAxisID===e.id:t.yAxisID===e.id}var e=this,n=e.options,i=e.chart,o=i.data.datasets,a=e.isHorizontal();e.min=null,e.max=null;var s=n.stacked;if(void 0===s&&r.each(o,function(e,n){if(!s){var r=i.getDatasetMeta(n);i.isDatasetVisible(n)&&t(r)&&void 0!==r.stack&&(s=!0)}}),n.stacked||s){var l={};r.each(o,function(o,a){var s=i.getDatasetMeta(a),u=[s.type,void 0===n.stacked&&void 0===s.stack?a:"",s.stack].join(".");void 0===l[u]&&(l[u]={positiveValues:[],negativeValues:[]});var c=l[u].positiveValues,h=l[u].negativeValues;i.isDatasetVisible(a)&&t(s)&&r.each(o.data,function(t,i){var r=+e.getRightValue(t);isNaN(r)||s.data[i].hidden||(c[i]=c[i]||0,h[i]=h[i]||0,n.relativePoints?c[i]=100:r<0?h[i]+=r:c[i]+=r)})}),r.each(l,function(t){var n=t.positiveValues.concat(t.negativeValues),i=r.min(n),o=r.max(n);e.min=null===e.min?i:Math.min(e.min,i),e.max=null===e.max?o:Math.max(e.max,o)})}else r.each(o,function(n,o){var a=i.getDatasetMeta(o);i.isDatasetVisible(o)&&t(a)&&r.each(n.data,function(t,n){var i=+e.getRightValue(t);isNaN(i)||a.data[n].hidden||(null===e.min?e.min=i:i<e.min&&(e.min=i),null===e.max?e.max=i:i>e.max&&(e.max=i))})});e.min=isFinite(e.min)&&!isNaN(e.min)?e.min:0,e.max=isFinite(e.max)&&!isNaN(e.max)?e.max:1,this.handleTickRangeOptions()},getTickLimit:function(){var t,e=this.options.ticks;if(this.isHorizontal())t=Math.min(e.maxTicksLimit?e.maxTicksLimit:11,Math.ceil(this.width/50));else{var n=r.valueOrDefault(e.fontSize,i.global.defaultFontSize);t=Math.min(e.maxTicksLimit?e.maxTicksLimit:11,Math.ceil(this.height/(2*n)))}return t},handleDirectionalChanges:function(){this.isHorizontal()||this.ticks.reverse()},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},getPixelForValue:function(t){var e=this.start,n=+this.getRightValue(t),i=this.end-e;return this.isHorizontal()?this.left+this.width/i*(n-e):this.bottom-this.height/i*(n-e)},getValueForPixel:function(t){var e=this.isHorizontal(),n=e?this.width:this.height,i=(e?t-this.left:this.bottom-t)/n;return this.start+(this.end-this.start)*i},getPixelForTick:function(t){return this.getPixelForValue(this.ticksAsNumbers[t])}});o.registerScaleType("linear",n,e)}},{26:26,34:34,35:35,46:46}],56:[function(t,e,n){"use strict";var i=t(46),r=t(33);e.exports=function(t){var e=i.noop;t.LinearScaleBase=r.extend({getRightValue:function(t){return"string"==typeof t?+t:r.prototype.getRightValue.call(this,t)},handleTickRangeOptions:function(){var t=this,e=t.options.ticks;if(e.beginAtZero){var n=i.sign(t.min),r=i.sign(t.max);n<0&&r<0?t.max=0:0<n&&0<r&&(t.min=0)}var o=void 0!==e.min||void 0!==e.suggestedMin,a=void 0!==e.max||void 0!==e.suggestedMax;void 0!==e.min?t.min=e.min:void 0!==e.suggestedMin&&(null===t.min?t.min=e.suggestedMin:t.min=Math.min(t.min,e.suggestedMin)),void 0!==e.max?t.max=e.max:void 0!==e.suggestedMax&&(null===t.max?t.max=e.suggestedMax:t.max=Math.max(t.max,e.suggestedMax)),o!==a&&t.min>=t.max&&(o?t.max=t.min+1:t.min=t.max-1),t.min===t.max&&(t.max++,e.beginAtZero||t.min--)},getTickLimit:e,handleDirectionalChanges:e,buildTicks:function(){var t=this,e=t.options.ticks,n=t.getTickLimit(),r={maxTicks:n=Math.max(2,n),min:e.min,max:e.max,precision:e.precision,stepSize:i.valueOrDefault(e.fixedStepSize,e.stepSize)},o=t.ticks=function(t,e){var n,r,o,a=[];if(t.stepSize&&0<t.stepSize)o=t.stepSize;else{var s=i.niceNum(e.max-e.min,!1);o=i.niceNum(s/(t.maxTicks-1),!0),void 0!==(r=t.precision)&&(n=Math.pow(10,r),o=Math.ceil(o*n)/n)}var l=Math.floor(e.min/o)*o,u=Math.ceil(e.max/o)*o;i.isNullOrUndef(t.min)||i.isNullOrUndef(t.max)||!t.stepSize||i.almostWhole((t.max-t.min)/t.stepSize,o/1e3)&&(l=t.min,u=t.max);var c=(u-l)/o;c=i.almostEquals(c,Math.round(c),o/1e3)?Math.round(c):Math.ceil(c),o<(r=1)&&(r=Math.pow(10,1-Math.floor(i.log10(o))),l=Math.round(l*r)/r,u=Math.round(u*r)/r),a.push(void 0!==t.min?t.min:l);for(var h=1;h<c;++h)a.push(Math.round((l+h*o)*r)/r);return a.push(void 0!==t.max?t.max:u),a}(r,t);t.handleDirectionalChanges(),t.max=i.max(o),t.min=i.min(o),e.reverse?(o.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max)},convertTicksToLabels:function(){this.ticksAsNumbers=this.ticks.slice(),this.zeroLineIndex=this.ticks.indexOf(0),r.prototype.convertTicksToLabels.call(this)}})}},{33:33,46:46}],57:[function(t,e,n){"use strict";var i=t(46),r=t(33),o=t(34),a=t(35);e.exports=function(t){var e={position:"left",ticks:{callback:a.formatters.logarithmic}},n=r.extend({determineDataLimits:function(){function t(t){return a?t.xAxisID===e.id:t.yAxisID===e.id}var e=this,n=e.options,r=e.chart,o=r.data.datasets,a=e.isHorizontal();e.min=null,e.max=null,e.minNotZero=null;var s=n.stacked;if(void 0===s&&i.each(o,function(e,n){if(!s){var i=r.getDatasetMeta(n);r.isDatasetVisible(n)&&t(i)&&void 0!==i.stack&&(s=!0)}}),n.stacked||s){var l={};i.each(o,function(o,a){var s=r.getDatasetMeta(a),u=[s.type,void 0===n.stacked&&void 0===s.stack?a:"",s.stack].join(".");r.isDatasetVisible(a)&&t(s)&&(void 0===l[u]&&(l[u]=[]),i.each(o.data,function(t,n){var i=l[u],r=+e.getRightValue(t);isNaN(r)||s.data[n].hidden||r<0||(i[n]=i[n]||0,i[n]+=r)}))}),i.each(l,function(t){if(0<t.length){var n=i.min(t),r=i.max(t);e.min=null===e.min?n:Math.min(e.min,n),e.max=null===e.max?r:Math.max(e.max,r)}})}else i.each(o,function(n,o){var a=r.getDatasetMeta(o);r.isDatasetVisible(o)&&t(a)&&i.each(n.data,function(t,n){var i=+e.getRightValue(t);isNaN(i)||a.data[n].hidden||i<0||(null===e.min?e.min=i:i<e.min&&(e.min=i),null===e.max?e.max=i:i>e.max&&(e.max=i),0!==i&&(null===e.minNotZero||i<e.minNotZero)&&(e.minNotZero=i))})});this.handleTickRangeOptions()},handleTickRangeOptions:function(){var t=this,e=t.options.ticks,n=i.valueOrDefault;t.min=n(e.min,t.min),t.max=n(e.max,t.max),t.min===t.max&&(0!==t.min&&null!==t.min?(t.min=Math.pow(10,Math.floor(i.log10(t.min))-1),t.max=Math.pow(10,Math.floor(i.log10(t.max))+1)):(t.min=1,t.max=10)),null===t.min&&(t.min=Math.pow(10,Math.floor(i.log10(t.max))-1)),null===t.max&&(t.max=0!==t.min?Math.pow(10,Math.floor(i.log10(t.min))+1):10),null===t.minNotZero&&(0<t.min?t.minNotZero=t.min:t.max<1?t.minNotZero=Math.pow(10,Math.floor(i.log10(t.max))):t.minNotZero=1)},buildTicks:function(){var t=this,e=t.options.ticks,n=!t.isHorizontal(),r={min:e.min,max:e.max},o=t.ticks=function(t,e){var n,r,o=[],a=i.valueOrDefault,s=a(t.min,Math.pow(10,Math.floor(i.log10(e.min)))),l=Math.floor(i.log10(e.max)),u=Math.ceil(e.max/Math.pow(10,l));0===s?(n=Math.floor(i.log10(e.minNotZero)),r=Math.floor(e.minNotZero/Math.pow(10,n)),o.push(s),s=r*Math.pow(10,n)):(n=Math.floor(i.log10(s)),r=Math.floor(s/Math.pow(10,n)));for(var c=n<0?Math.pow(10,Math.abs(n)):1;o.push(s),10==++r&&(r=1,c=0<=++n?1:c),s=Math.round(r*Math.pow(10,n)*c)/c,n<l||n===l&&r<u;);var h=a(t.max,s);return o.push(h),o}(r,t);t.max=i.max(o),t.min=i.min(o),e.reverse?(n=!n,t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),n&&o.reverse()},convertTicksToLabels:function(){this.tickValues=this.ticks.slice(),r.prototype.convertTicksToLabels.call(this)},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},getPixelForTick:function(t){return this.getPixelForValue(this.tickValues[t])},_getFirstTickValue:function(t){var e=Math.floor(i.log10(t));return Math.floor(t/Math.pow(10,e))*Math.pow(10,e)},getPixelForValue:function(e){var n,r,o,a,s,l=this,u=l.options.ticks.reverse,c=i.log10,h=l._getFirstTickValue(l.minNotZero),d=0;return e=+l.getRightValue(e),s=u?(o=l.end,a=l.start,-1):(o=l.start,a=l.end,1),r=l.isHorizontal()?(n=l.width,u?l.right:l.left):(n=l.height,s*=-1,u?l.top:l.bottom),e!==o&&(0===o&&(n-=d=i.getValueOrDefault(l.options.ticks.fontSize,t.defaults.global.defaultFontSize),o=h),0!==e&&(d+=n/(c(a)-c(o))*(c(e)-c(o))),r+=s*d),r},getValueForPixel:function(e){var n,r,o,a,s=this,l=s.options.ticks.reverse,u=i.log10,c=s._getFirstTickValue(s.minNotZero);if(o=l?(r=s.end,s.start):(r=s.start,s.end),(a=s.isHorizontal()?(n=s.width,l?s.right-e:e-s.left):(n=s.height,l?e-s.top:s.bottom-e))!==r){if(0===r){var h=i.getValueOrDefault(s.options.ticks.fontSize,t.defaults.global.defaultFontSize);a-=h,n-=h,r=c}a*=u(o)-u(r),a/=n,a=Math.pow(10,u(r)+a)}return a}});o.registerScaleType("logarithmic",n,e)}},{33:33,34:34,35:35,46:46}],58:[function(t,e,n){"use strict";var i=t(26),r=t(46),o=t(34),a=t(35);e.exports=function(t){function e(t){var e=t.options;return e.angleLines.display||e.pointLabels.display?t.chart.data.labels.length:0}function n(t){var e=t.options.pointLabels,n=r.valueOrDefault(e.fontSize,c.defaultFontSize),i=r.valueOrDefault(e.fontStyle,c.defaultFontStyle),o=r.valueOrDefault(e.fontFamily,c.defaultFontFamily);return{size:n,style:i,family:o,font:r.fontString(n,i,o)}}function s(t,e,n,i,r){return t===i||t===r?{start:e-n/2,end:e+n/2}:t<i||r<t?{start:e-n-5,end:e}:{start:e,end:e+n+5}}function l(t,e,n,i){if(r.isArray(e))for(var o=n.y,a=1.5*i,s=0;s<e.length;++s)t.fillText(e[s],n.x,o),o+=a;else t.fillText(e,n.x,n.y)}function u(t){return r.isNumber(t)?t:0}var c=i.global,h={display:!0,animate:!0,position:"chartArea",angleLines:{display:!0,color:"rgba(0, 0, 0, 0.1)",lineWidth:1},gridLines:{circular:!1},ticks:{showLabelBackdrop:!0,backdropColor:"rgba(255,255,255,0.75)",backdropPaddingY:2,backdropPaddingX:2,callback:a.formatters.linear},pointLabels:{display:!0,fontSize:10,callback:function(t){return t}}},d=t.LinearScaleBase.extend({setDimensions:function(){var t=this,e=t.options,n=e.ticks;t.width=t.maxWidth,t.height=t.maxHeight,t.xCenter=Math.round(t.width/2),t.yCenter=Math.round(t.height/2);var i=r.min([t.height,t.width]),o=r.valueOrDefault(n.fontSize,c.defaultFontSize);t.drawingArea=e.display?i/2-(o/2+n.backdropPaddingY):i/2},determineDataLimits:function(){var t=this,e=t.chart,n=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;r.each(e.data.datasets,function(o,a){if(e.isDatasetVisible(a)){var s=e.getDatasetMeta(a);r.each(o.data,function(e,r){var o=+t.getRightValue(e);isNaN(o)||s.data[r].hidden||(n=Math.min(o,n),i=Math.max(o,i))})}}),t.min=n===Number.POSITIVE_INFINITY?0:n,t.max=i===Number.NEGATIVE_INFINITY?0:i,t.handleTickRangeOptions()},getTickLimit:function(){var t=this.options.ticks,e=r.valueOrDefault(t.fontSize,c.defaultFontSize);return Math.min(t.maxTicksLimit?t.maxTicksLimit:11,Math.ceil(this.drawingArea/(1.5*e)))},convertTicksToLabels:function(){t.LinearScaleBase.prototype.convertTicksToLabels.call(this),this.pointLabels=this.chart.data.labels.map(this.options.pointLabels.callback,this)},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},fit:function(){var t,i;this.options.pointLabels.display?function(t){var i,o,a,l=n(t),u=Math.min(t.height/2,t.width/2),c={r:t.width,l:0,t:t.height,b:0},h={};t.ctx.font=l.font,t._pointLabelSizes=[];var d,f,p,g=e(t);for(i=0;i<g;i++){a=t.getPointPosition(i,u),d=t.ctx,f=l.size,p=t.pointLabels[i]||"",o=r.isArray(p)?{w:r.longestText(d,d.font,p),h:p.length*f+1.5*(p.length-1)*f}:{w:d.measureText(p).width,h:f},t._pointLabelSizes[i]=o;var m=t.getIndexAngle(i),v=r.toDegrees(m)%360,y=s(v,a.x,o.w,0,180),b=s(v,a.y,o.h,90,270);y.start<c.l&&(c.l=y.start,h.l=m),y.end>c.r&&(c.r=y.end,h.r=m),b.start<c.t&&(c.t=b.start,h.t=m),b.end>c.b&&(c.b=b.end,h.b=m)}t.setReductions(u,c,h)}(this):(t=this,i=Math.min(t.height/2,t.width/2),t.drawingArea=Math.round(i),t.setCenterPoint(0,0,0,0))},setReductions:function(t,e,n){var i=e.l/Math.sin(n.l),r=Math.max(e.r-this.width,0)/Math.sin(n.r),o=-e.t/Math.cos(n.t),a=-Math.max(e.b-this.height,0)/Math.cos(n.b);i=u(i),r=u(r),o=u(o),a=u(a),this.drawingArea=Math.min(Math.round(t-(i+r)/2),Math.round(t-(o+a)/2)),this.setCenterPoint(i,r,o,a)},setCenterPoint:function(t,e,n,i){var r=this,o=r.width-e-r.drawingArea,a=t+r.drawingArea,s=n+r.drawingArea,l=r.height-i-r.drawingArea;r.xCenter=Math.round((a+o)/2+r.left),r.yCenter=Math.round((s+l)/2+r.top)},getIndexAngle:function(t){return t*(2*Math.PI/e(this))+(this.chart.options&&this.chart.options.startAngle?this.chart.options.startAngle:0)*Math.PI*2/360},getDistanceFromCenterForValue:function(t){if(null===t)return 0;var e=this.drawingArea/(this.max-this.min);return this.options.ticks.reverse?(this.max-t)*e:(t-this.min)*e},getPointPosition:function(t,e){var n=this.getIndexAngle(t)-Math.PI/2;return{x:Math.round(Math.cos(n)*e)+this.xCenter,y:Math.round(Math.sin(n)*e)+this.yCenter}},getPointPositionForValue:function(t,e){return this.getPointPosition(t,this.getDistanceFromCenterForValue(e))},getBasePosition:function(){var t=this.min,e=this.max;return this.getPointPositionForValue(0,this.beginAtZero?0:t<0&&e<0?e:0<t&&0<e?t:0)},draw:function(){var t=this,i=t.options,o=i.gridLines,a=i.ticks,s=r.valueOrDefault;if(i.display){var u=t.ctx,h=this.getIndexAngle(0),d=s(a.fontSize,c.defaultFontSize),f=s(a.fontStyle,c.defaultFontStyle),p=s(a.fontFamily,c.defaultFontFamily),g=r.fontString(d,f,p);r.each(t.ticks,function(n,i){if(0<i||a.reverse){var l=t.getDistanceFromCenterForValue(t.ticksAsNumbers[i]);if(o.display&&0!==i&&function(t,n,i,o){var a=t.ctx;if(a.strokeStyle=r.valueAtIndexOrDefault(n.color,o-1),a.lineWidth=r.valueAtIndexOrDefault(n.lineWidth,o-1),t.options.gridLines.circular)a.beginPath(),a.arc(t.xCenter,t.yCenter,i,0,2*Math.PI),a.closePath(),a.stroke();else{var s=e(t);if(0===s)return;a.beginPath();var l=t.getPointPosition(0,i);a.moveTo(l.x,l.y);for(var u=1;u<s;u++)l=t.getPointPosition(u,i),a.lineTo(l.x,l.y);a.closePath(),a.stroke()}}(t,o,l,i),a.display){var f=s(a.fontColor,c.defaultFontColor);if(u.font=g,u.save(),u.translate(t.xCenter,t.yCenter),u.rotate(h),a.showLabelBackdrop){var p=u.measureText(n).width;u.fillStyle=a.backdropColor,u.fillRect(-p/2-a.backdropPaddingX,-l-d/2-a.backdropPaddingY,p+2*a.backdropPaddingX,d+2*a.backdropPaddingY)}u.textAlign="center",u.textBaseline="middle",u.fillStyle=f,u.fillText(n,0,-l),u.restore()}}}),(i.angleLines.display||i.pointLabels.display)&&function(t){var i=t.ctx,o=t.options,a=o.angleLines,s=o.pointLabels;i.lineWidth=a.lineWidth,i.strokeStyle=a.color;var u,h,d,f,p=t.getDistanceFromCenterForValue(o.ticks.reverse?t.min:t.max),g=n(t);i.textBaseline="top";for(var m=e(t)-1;0<=m;m--){if(a.display){var v=t.getPointPosition(m,p);i.beginPath(),i.moveTo(t.xCenter,t.yCenter),i.lineTo(v.x,v.y),i.stroke(),i.closePath()}if(s.display){var y=t.getPointPosition(m,p+5),b=r.valueAtIndexOrDefault(s.fontColor,m,c.defaultFontColor);i.font=g.font,i.fillStyle=b;var x=t.getIndexAngle(m),_=r.toDegrees(x);i.textAlign=0===(f=_)||180===f?"center":f<180?"left":"right",u=_,h=t._pointLabelSizes[m],d=y,90===u||270===u?d.y-=h.h/2:(270<u||u<90)&&(d.y-=h.h),l(i,t.pointLabels[m]||"",y,g.size)}}}(t)}}});o.registerScaleType("radialLinear",d,h)}},{26:26,34:34,35:35,46:46}],59:[function(t,e,n){"use strict";function i(t,e){return t-e}function r(t){var e,n,i,r={},o=[];for(e=0,n=t.length;e<n;++e)r[i=t[e]]||(r[i]=!0,o.push(i));return o}function o(t,e,n,i){var r=function(t,e,n){for(var i,r,o,a=0,s=t.length-1;0<=a&&a<=s;){if(r=t[(i=a+s>>1)-1]||null,o=t[i],!r)return{lo:null,hi:o};if(o[e]<n)a=i+1;else{if(!(r[e]>n))return{lo:r,hi:o};s=i-1}}return{lo:o,hi:null}}(t,e,n),o=r.lo?r.hi?r.lo:t[t.length-2]:t[0],a=r.lo?r.hi?r.hi:t[t.length-1]:t[1],s=a[e]-o[e],l=s?(n-o[e])/s:0,u=(a[i]-o[i])*l;return o[i]+u}function a(t,e){var n=e.parser,i=e.parser||e.format;return"function"==typeof n?n(t):"string"==typeof t&&"string"==typeof i?c(t,i):(t instanceof c||(t=c(t)),t.isValid()?t:"function"==typeof i?i(t):t)}function s(t,e){if(d.isNullOrUndef(t))return null;var n=e.options.time,i=a(e.getRightValue(t),n);return i.isValid()?(n.round&&i.startOf(n.round),i.valueOf()):null}function l(t){for(var e=y.indexOf(t)+1,n=y.length;e<n;++e)if(v[y[e]].common)return y[e]}function u(t,e,n,i){var r,o=i.time,a=o.unit||function(t,e,n,i){var r,o,a,s=y.length;for(r=y.indexOf(t);r<s-1;++r)if(a=(o=v[y[r]]).steps?o.steps[o.steps.length-1]:m,o.common&&Math.ceil((n-e)/(a*o.size))<=i)return y[r];return y[s-1]}(o.minUnit,t,e,n),s=l(a),u=d.valueOrDefault(o.stepSize,o.unitStepSize),h="week"===a&&o.isoWeekday,f=i.ticks.major.enabled,p=v[a],g=c(t),b=c(e),x=[];for(u||(u=function(t,e,n,i){var r,o,a,s=e-t,l=v[n],u=l.size,c=l.steps;if(!c)return Math.ceil(s/(i*u));for(r=0,o=c.length;r<o&&(a=c[r],!(Math.ceil(s/(u*a))<=i));++r);return a}(t,e,a,n)),h&&(g=g.isoWeekday(h),b=b.isoWeekday(h)),g=g.startOf(h?"day":a),(b=b.startOf(h?"day":a))<e&&b.add(1,a),r=c(g),f&&s&&!h&&!o.round&&(r.startOf(s),r.add(~~((g-r)/(p.size*u))*u,a));r<b;r.add(u,a))x.push(+r);return x.push(+r),x}var c=t(6);c="function"==typeof c?c:window.moment;var h=t(26),d=t(46),f=t(33),p=t(34),g=Number.MIN_SAFE_INTEGER||-9007199254740991,m=Number.MAX_SAFE_INTEGER||9007199254740991,v={millisecond:{common:!0,size:1,steps:[1,2,5,10,20,50,100,250,500]},second:{common:!0,size:1e3,steps:[1,2,5,10,15,30]},minute:{common:!0,size:6e4,steps:[1,2,5,10,15,30]},hour:{common:!0,size:36e5,steps:[1,2,3,6,12]},day:{common:!0,size:864e5,steps:[1,2,5]},week:{common:!1,size:6048e5,steps:[1,2,3,4]},month:{common:!0,size:2628e6,steps:[1,2,3]},quarter:{common:!1,size:7884e6,steps:[1,2,3,4]},year:{common:!0,size:3154e7}},y=Object.keys(v);e.exports=function(){var t=f.extend({initialize:function(){if(!c)throw new Error("Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com");this.mergeTicksOptions(),f.prototype.initialize.call(this)},update:function(){var t=this.options;return t.time&&t.time.format&&console.warn("options.time.format is deprecated and replaced by options.time.parser."),f.prototype.update.apply(this,arguments)},getRightValue:function(t){return t&&void 0!==t.t&&(t=t.t),f.prototype.getRightValue.call(this,t)},determineDataLimits:function(){var t,e,n,o,a,l,u=this,h=u.chart,f=u.options.time,p=f.unit||"day",v=m,y=g,b=[],x=[],_=[];for(t=0,n=h.data.labels.length;t<n;++t)_.push(s(h.data.labels[t],u));for(t=0,n=(h.data.datasets||[]).length;t<n;++t)if(h.isDatasetVisible(t))if(a=h.data.datasets[t].data,d.isObject(a[0]))for(x[t]=[],e=0,o=a.length;e<o;++e)l=s(a[e],u),b.push(l),x[t][e]=l;else b.push.apply(b,_),x[t]=_.slice(0);else x[t]=[];_.length&&(_=r(_).sort(i),v=Math.min(v,_[0]),y=Math.max(y,_[_.length-1])),b.length&&(b=r(b).sort(i),v=Math.min(v,b[0]),y=Math.max(y,b[b.length-1])),v=s(f.min,u)||v,y=s(f.max,u)||y,v=v===m?+c().startOf(p):v,y=y===g?+c().endOf(p)+1:y,u.min=Math.min(v,y),u.max=Math.max(v+1,y),u._horizontal=u.isHorizontal(),u._table=[],u._timestamps={data:b,datasets:x,labels:_}},buildTicks:function(){var t,e,n,i,r,h,d,f,p,g,m,b,x=this,_=x.min,w=x.max,k=x.options,M=k.time,S=[],C=[];switch(k.ticks.source){case"data":S=x._timestamps.data;break;case"labels":S=x._timestamps.labels;break;case"auto":default:S=u(_,w,x.getLabelCapacity(_),k)}for("ticks"===k.bounds&&S.length&&(_=S[0],w=S[S.length-1]),_=s(M.min,x)||_,w=s(M.max,x)||w,t=0,e=S.length;t<e;++t)_<=(n=S[t])&&n<=w&&C.push(n);return x.min=_,x.max=w,x._unit=M.unit||function(t,e,n,i){var r,o,a=c.duration(c(i).diff(c(n)));for(r=y.length-1;r>=y.indexOf(e);r--)if(o=y[r],v[o].common&&a.as(o)>=t.length)return o;return y[e?y.indexOf(e):0]}(C,M.minUnit,x.min,x.max),x._majorUnit=l(x._unit),x._table=function(t,e,n,i){if("linear"===i||!t.length)return[{time:e,pos:0},{time:n,pos:1}];var r,o,a,s,l,u=[],c=[e];for(r=0,o=t.length;r<o;++r)e<(s=t[r])&&s<n&&c.push(s);for(c.push(n),r=0,o=c.length;r<o;++r)l=c[r+1],a=c[r-1],s=c[r],void 0!==a&&void 0!==l&&Math.round((l+a)/2)===s||u.push({time:s,pos:r/(o-1)});return u}(x._timestamps.data,_,w,k.distribution),x._offsets=(i=x._table,r=C,h=_,d=w,b=m=0,(f=k).offset&&r.length&&(f.time.min||(p=1<r.length?r[1]:d,g=r[0],m=(o(i,"time",p,"pos")-o(i,"time",g,"pos"))/2),f.time.max||(p=r[r.length-1],g=1<r.length?r[r.length-2]:h,b=(o(i,"time",p,"pos")-o(i,"time",g,"pos"))/2)),{left:m,right:b}),x._labelFormat=function(t,e){var n,i,r,o=t.length;for(n=0;n<o;n++){if(0!==(i=a(t[n],e)).millisecond())return"MMM D, YYYY h:mm:ss.SSS a";0===i.second()&&0===i.minute()&&0===i.hour()||(r=!0)}return r?"MMM D, YYYY h:mm:ss a":"MMM D, YYYY"}(x._timestamps.data,M),function(t,e){var n,i,r,o,a=[];for(n=0,i=t.length;n<i;++n)r=t[n],o=!!e&&r===+c(r).startOf(e),a.push({value:r,major:o});return a}(C,x._majorUnit)},getLabelForIndex:function(t,e){var n=this.chart.data,i=this.options.time,r=n.labels&&t<n.labels.length?n.labels[t]:"",o=n.datasets[e].data[t];return d.isObject(o)&&(r=this.getRightValue(o)),i.tooltipFormat?a(r,i).format(i.tooltipFormat):"string"==typeof r?r:a(r,i).format(this._labelFormat)},tickFormatFunction:function(t,e,n,i){var r=this.options,o=t.valueOf(),a=r.time.displayFormats,s=a[this._unit],l=this._majorUnit,u=a[l],c=t.clone().startOf(l).valueOf(),h=r.ticks.major,f=h.enabled&&l&&u&&o===c,p=t.format(i||(f?u:s)),g=f?h:r.ticks.minor,m=d.valueOrDefault(g.callback,g.userCallback);return m?m(p,e,n):p},convertTicksToLabels:function(t){var e,n,i=[];for(e=0,n=t.length;e<n;++e)i.push(this.tickFormatFunction(c(t[e].value),e,t));return i},getPixelForOffset:function(t){var e=this,n=e._horizontal?e.width:e.height,i=e._horizontal?e.left:e.top,r=o(e._table,"time",t,"pos");return i+n*(e._offsets.left+r)/(e._offsets.left+1+e._offsets.right)},getPixelForValue:function(t,e,n){var i=null;if(void 0!==e&&void 0!==n&&(i=this._timestamps.datasets[n][e]),null===i&&(i=s(t,this)),null!==i)return this.getPixelForOffset(i)},getPixelForTick:function(t){var e=this.getTicks();return 0<=t&&t<e.length?this.getPixelForOffset(e[t].value):null},getValueForPixel:function(t){var e=this,n=e._horizontal?e.width:e.height,i=e._horizontal?e.left:e.top,r=(n?(t-i)/n:0)*(e._offsets.left+1+e._offsets.left)-e._offsets.right,a=o(e._table,"pos",r,"time");return c(a)},getLabelWidth:function(t){var e=this.options.ticks,n=this.ctx.measureText(t).width,i=d.toRadians(e.maxRotation),r=Math.cos(i),o=Math.sin(i);return n*r+d.valueOrDefault(e.fontSize,h.global.defaultFontSize)*o},getLabelCapacity:function(t){var e=this.options.time.displayFormats.millisecond,n=this.tickFormatFunction(c(t),0,[],e),i=this.getLabelWidth(n),r=this.isHorizontal()?this.width:this.height,o=Math.floor(r/i);return 0<o?o:1}});p.registerScaleType("time",t,{position:"bottom",distribution:"linear",bounds:"data",time:{parser:!1,format:!1,unit:!1,round:!1,displayFormat:!1,isoWeekday:!1,minUnit:"millisecond",displayFormats:{millisecond:"h:mm:ss.SSS a",second:"h:mm:ss a",minute:"h:mm a",hour:"hA",day:"MMM D",week:"ll",month:"MMM YYYY",quarter:"[Q]Q - YYYY",year:"YYYY"}},ticks:{autoSkip:!1,source:"auto",major:{enabled:!1}}})}},{26:26,33:33,34:34,46:46,6:6}]},{},[7])(7)}),$(document).on("click",".switcher",function(){}),$(document).on("click",".switcher_service",function(){$(".switcher_service").removeClass("switcher_active"),$(this).toggleClass("switcher_active"),$(".switcher_service").parent().parent().parent().removeClass("services-item_active"),$(this).parent().parent().parent().toggleClass("services-item_active")}),$(document).on("click",".switcher_extra-service",function(){$(this).toggleClass("switcher_active"),$(this).parent().parent().parent().toggleClass("services-item_active")}),$(document).on("click",".content-hover",function(){popupclickclosefunction()}),$(document).on("click",".close-pop-up-b",function(){popupclickclosefunction()}),$(document).on("click","#info",function(){popupclickfunction(),$(".info").fadeIn()}),$(document).on("mouseover","a",function(){}),$(document).on("click",".index-heading__adventages-click",function(){return $(".index-heading__adventages-body_active").next().hasClass("index-heading__adventages-click")?($(".index-heading__adventages-body").removeClass("index-heading__adventages-body_active"),$(".index-heading__adventages-body").first().addClass("index-heading__adventages-body_active"),!1):void $(".index-heading__adventages-body_active").removeClass("index-heading__adventages-body_active").next().addClass("index-heading__adventages-body_active")}),function(t){for(var e=function(t,e,n){return t[0]*e+t[1]*n},n=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]],i=[],r=0;r<256;r++)i[r]=Math.floor(256*Math.random());for(var o=[],r=0;r<512;r++)o[r]=i[255&r];t.noise=function(t,i){var r,a,s,l,u,c=.5*(Math.sqrt(3)-1),h=(t+i)*c,d=Math.floor(t+h),f=Math.floor(i+h),p=(3-Math.sqrt(3))/6,g=(d+f)*p,m=d-g,v=f-g,y=t-m,b=i-v;y>b?(l=1,u=0):(l=0,u=1);var x=y-l+p,_=b-u+p,w=y-1+2*p,k=b-1+2*p,M=255&d,S=255&f,C=o[M+o[S]]%12,D=o[M+l+o[S+u]]%12,T=o[M+1+o[S+1]]%12,P=.5-y*y-b*b;P<0?r=0:(P*=P,r=P*P*e(n[C],y,b));var A=.5-x*x-_*_;A<0?a=0:(A*=A,a=A*A*e(n[D],x,_));var O=.5-w*w-k*k;return O<0?s=0:(O*=O,s=O*O*e(n[T],w,k)),70*(r+a+s)}}(this),$(document).ready(function(){});var pages={indexpage:["/index.html","/"],services:"/services.html",servicespages:["/services-landing-page.html","/services-e-shop.html","/services-visit-card-site.html","/services-corporative-site.html","/services-support.html"],contextadvpage:"/services-context.html",advpage:"/services-advertising.html"};$(document).ready(function(){function t(t){popupclickclosefunction();var e=t;$(".content-ajax-wrapper").load(e+" .content-ajax",function(t){fullpageload(),0!=$(document).find("#index").length&&$("#index").fadeIn(),window.scrollBy(0,-99999),document.title=t.split("<title>")[1].split("</title")[0]})}fullpageload(),0!=$(document).find("#index").length&&setTimeout(function(){$("#index").fadeIn()},"1000");var e="state"in window.history&&null!==window.history.state,n=location.href;$(".content-ajax-wrapper");$(document).on("click","a",function(){var e=$(this).attr("href");return history.pushState({page:e},"Loading...",e),document.title="Loading...",t(e),!1}),$(window).bind("popstate",function(i){var r=!e&&location.href==n;e=!0,r||(console.log("Popstate"),t(location.pathname))})}),function(t){function e(t){var e="";"lowerLetter"==t?e="abcdefghijklmnopqrstuvwxyz0123456789":"upperLetter"==t?e="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789":"symbol"==t&&(e=",.?/\\(^)![]{}*&^%$#'\"");var n=e.split("");return n[Math.floor(Math.random()*n.length)]}t.fn.shuffleLetters=function(n){var i=t.extend({step:8,fps:25,text:"",callback:function(){}},n);return this.each(function(){var n=t(this),r="";if(n.data("animated"))return!0;n.data("animated",!0),r=i.text?i.text.split(""):n.text().split("");for(var o=[],a=[],s=0;s<r.length;s++){var l=r[s];" "!=l?(/[a-z]/.test(l)?o[s]="lowerLetter":/[A-Z]/.test(l)?o[s]="upperLetter":o[s]="symbol",a.push(s)):o[s]="space"}n.html(""),function u(t){var s,l=a.length,c=r.slice(0);if(t>l)return n.data("animated",!1),void i.callback(n);for(s=Math.max(t,0);s<l;s++)s<t+i.step?c[a[s]]=e(o[a[s]]):c[a[s]]="";n.text(c.join("")),setTimeout(function(){u(t+1)},1e3/i.fps)}(-i.step)})}}($),$(document).ready(function(){$("body").append('<div class="helper close">      <div class="helper__person">        <img class="helper__person-img" src="imgsvg/hipsta.svg" alt="Bob">      </div>      <div class="helper__dialog">          <div class="helper__said">          </div>          <div class="helper__answer">            <input class="helper__answer-item input helper__input" id="helper-input-name" class="input" type="text" placeholder="Enter your name">            <span class="helper__answer-item helper__button" id="helper-button"><img src="imgsvg/plane.svg" alt="Plane"></span>          </div>      </div>      <div class="helper__toggle">        <div class="helper__toggle-inner">        </div>      </div>    </div>     <img class="helper__open" src="imgsvg/hipsta-head.svg" alt="Bob">          <img class="helper__close close" src="imgsvg/close.svg" alt="Close">    ');var t=getCookie("wasvisit");""==t&&(document.cookie="wasvisit=Guest; expires=1/1/2019 00:00:00")});var name="",bobsayHi=function(){var t=getCookie("wasvisit");"Guest"==t?(sayBob("Hi, my name is Rendal. I have no brains, but only a few algorithms, but I'll be happy to help, what's your name?"),$(".helper__answer").empty().append('<input class="helper__answer-item input helper__input" id="helper-input-name" class="input" type="text" placeholder="Enter your name">    <span onclick="nextStepBob(1)" class="helper__answer-item helper__button" id="helper-button"><img src="imgsvg/plane.svg" alt="Plane"></span>    ')):(sayBob("Oh, "+t+". You need my help?"),$(".helper__answer").empty().append('    <div onclick="nextStepBob(6)" class="helper__answer-item input helper__button" id="helper-input-name" class="input" type="text" >There is mistake in my name</div>    <div onclick="nextStepBob(2)" class="helper__answer-item input helper__button" id="helper-input-name" class="input" type="text" >Place order</div>    '))},bobChangeName=function(){sayBob("I am so sorry, how can i call you?"),$(".helper__answer").empty().append('<input class="helper__answer-item input helper__input" id="helper-input-name" class="input" type="text" placeholder="Enter your name">    <span onclick="nextStepBob(1)" class="helper__answer-item helper__button" id="helper-button"><img src="imgsvg/plane.svg" alt="Plane"></span>    ')},bobCheckName=function(){var t=($(".helper__said").text(),$("#helper-input-name").val());if("Egor Karpachev"==t)return sayBob("Sorry, i do not work with Petuh"),!1;document.cookie="wasvisit="+t+"; expires=1/1/2019 00:00:00";sayBob("Nice to meet you. "+t+". Place an order to contact my owner."),$(".helper__answer").empty().append('  <div onclick="nextStepBob(2)" class="helper__answer-item input helper__button" id="helper-input-name" class="input" type="text" >Place order</div>  ')},bobOpenform=function(){$(".helper__said").text(),$("#helper-input-name").val();sayBob("Ok, now i need your contact details: Email or Phone number."),$(".helper__answer").empty().append('<input class="helper__answer-item-contacts helper__answer-item input helper__input" id="helper-input-name" class="input" type="text" placeholder="Email or phone number">  <span onclick="nextStepBob(5)" class="helper__answer-item helper__button" id="helper-button"><img src="imgsvg/plane.svg" alt="Plane"></span>  ')},bobSendEnquiry=function(){function t(t){var e=/^[\w-\.]+@[\w-]+\.[a-z]{2,4}$/i,n=t,i=e.test(n);return sayBob("Sorry, I need valid information to send."),i}function e(t){t=t.replace("+","").replace("(","").replace(")","");var e=/^\d[\d\(\)\ -]{4,14}\d$/,n=t,i=e.test(n);return sayBob("Sorry, I need valid information to send."),i}var n=$(".helper__answer-item-contacts").val();return(0!=t(n)||0!=e(n))&&(sayBob("Thanks, now you will get all details in 10 minutes."),
void $(".helper__answer").empty().append('  <span onclick="closeBob()" class="helper__answer-item helper__button" id="helper-button">Thanks</span>  '))},bobTellMeMore=function(){$(".helper__said").text(),$("#helper-input-name").val();sayBob("Выбирай что тебе интересно, но ты также можешь пользоваться обычной навигацией - сверху"),$(".helper__answer").empty().append('<span onclick="nextStepBob(4)" class="helper__answer-item helper__button" id="helper-button">Узнать о создании сайтов</span>    <span onclick="nextStepBob(5)" class="helper__answer-item helper__button" id="helper-button">Узнать о продвижении</span>    <span onclick="nextStepBob(6)" class="helper__answer-item helper__button" id="helper-button">Узнать о поддержке</span>  ')},bobPhoneOrEmail=function(){$(".helper__said").text(),$("#helper-input-name").val();sayBob("Azazaza"),$(".helper__answer").empty().append('<span onclick="nextStepBob(4)" class="helper__answer-item helper__button" id="helper-button">Узнать о создании сайтов</span>    <span onclick="nextStepBob(5)" class="helper__answer-item helper__button" id="helper-button">Узнать о продвижении</span>    <span onclick="nextStepBob(6)" class="helper__answer-item helper__button" id="helper-button">Узнать о поддержке</span>  ')};bob=[[bobsayHi],[bobCheckName],[bobOpenform],[bobTellMeMore],[bobPhoneOrEmail],[bobSendEnquiry],[bobChangeName]],$(document).on("click",".helper__close",function(){closeBob()}),$(document).ready(function(){});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
