function popupclickfunction(){return!$(".content").hasClass("content_fixed")&&($(".close-pop-up-b").slideDown(),topscrollpopup=$(document).scrollTop(),$(".content").addClass("content_fixed"),$(".content").css("top",-topscrollpopup),$("body").scrollTop(0),void $(".content-hover").fadeIn())}function popupclickclosefunction(){return!!$(".content").hasClass("content_fixed")&&($(".close-pop-up-b").slideUp(),$(".nav").removeClass("nav_open"),$(".content").removeClass("content_no"),$(".nav__item-link-text").fadeOut(),$(".popups").children().fadeOut(),void setTimeout(function(){$(".content").removeClass("content_fixed"),$(".content").css("top","0"),$(document).scrollTop(topscrollpopup),$(".content-hover").fadeOut()},500))}function showMenu(){$(".nav").addClass("nav_open"),$(".content").addClass("content_no"),$(".nav__item-link-text").fadeIn(),popupclickfunction()}function openQuestion(){popupclickfunction(),$("#questions").fadeIn()}function openOrder(){popupclickfunction(),$("#questions").fadeIn()}function checkajaxpage(){function t(t){if("string"==typeof t&&window.location.pathname==t&&(e=!0),"object"==typeof t||"array"==typeof t)for(n=0;n<t.length;n++)window.location.pathname==t[n]&&(e=!0)}if(!arguments)return!1;for(var e=!1,n=0;n<arguments.length;n++)if(t(arguments[n]),1==e)return!0;return!1}function fullpageload(){if(checkajaxpage(pages.indexpage)?$(".content-ajax-wrapper").css("height","100%"):$(".content-ajax-wrapper").css("height","auto"),checkajaxpage(pages.services)&&$(".row_services").owlCarousel({margin:0,responsiveClass:!0,responsive:{0:{items:1,nav:!0,loop:!0},768:{items:3,nav:!1,loop:!1}}}),checkajaxpage(pages.contextadvpage)){var t=document.getElementById("chart").getContext("2d");new Chart(t,{type:"doughnut",data:{labels:["Yandex","Google"],datasets:[{data:[60,40],borderColor:"#333",borderWidth:"6",backgroundColor:["#27AE60","#EB5757"]}]},options:{title:{display:!0}}})}if(checkajaxpage(pages.advpage)){var t=document.getElementById("chart").getContext("2d");new Chart(t,{type:"doughnut",data:{labels:["Contextual ads","Blogs and Vlogs ads","CPA Networks","Social networks"],datasets:[{data:[50,10,18,15],borderColor:"#333",borderWidth:"6",backgroundColor:["#27AE60","#EB5757","#F2C94C","#2D9CDB"]}]},options:{title:{display:!0,borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)","rgba(75, 192, 192, 1)"]}}})}}function sayBob(t){$(".helper__said").remove(),$(".helper__dialog").append('<div class="helper__said"></div>'),$(".helper__said").empty().shuffleLetters({text:t})}function nextStepBob(t){var e=bob[t],n=e[0];n()}function closeBob(){return $(".helper").toggleClass("close"),$(".footer").toggleClass("close"),$(".helper__close").toggleClass("close"),!$(this).hasClass("clicked")&&($(this).addClass("clicked"),void nextStepBob(0))}function getCookie(t){for(var e=t+"=",n=document.cookie.split(";"),i=0;i<n.length;i++){for(var r=n[i];" "==r.charAt(0);)r=r.substring(1);if(0==r.indexOf(e))return r.substring(e.length,r.length)}return""}!function(t,e){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(t,e){"use strict";function n(t,e){e=e||nt;var n=e.createElement("script");n.text=t,e.head.appendChild(n).parentNode.removeChild(n)}function i(t){var e=!!t&&"length"in t&&t.length,n=gt.type(t);return"function"!==n&&!gt.isWindow(t)&&("array"===n||0===e||"number"==typeof e&&e>0&&e-1 in t)}function r(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}function o(t,e,n){return gt.isFunction(e)?gt.grep(t,function(t,i){return!!e.call(t,i,t)!==n}):e.nodeType?gt.grep(t,function(t){return t===e!==n}):"string"!=typeof e?gt.grep(t,function(t){return st.call(e,t)>-1!==n}):Ct.test(e)?gt.filter(e,t,n):(e=gt.filter(e,t),gt.grep(t,function(t){return st.call(e,t)>-1!==n&&1===t.nodeType}))}function a(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}function s(t){var e={};return gt.each(t.match(It)||[],function(t,n){e[n]=!0}),e}function l(t){return t}function u(t){throw t}function c(t,e,n,i){var r;try{t&&gt.isFunction(r=t.promise)?r.call(t).done(e).fail(n):t&&gt.isFunction(r=t.then)?r.call(t,e,n):e.apply(void 0,[t].slice(i))}catch(t){n.apply(void 0,[t])}}function d(){nt.removeEventListener("DOMContentLoaded",d),t.removeEventListener("load",d),gt.ready()}function h(){this.expando=gt.expando+h.uid++}function f(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:Wt.test(t)?JSON.parse(t):t)}function p(t,e,n){var i;if(void 0===n&&1===t.nodeType)if(i="data-"+e.replace(zt,"-$&").toLowerCase(),n=t.getAttribute(i),"string"==typeof n){try{n=f(n)}catch(r){}Nt.set(t,e,n)}else n=void 0;return n}function g(t,e,n,i){var r,o=1,a=20,s=i?function(){return i.cur()}:function(){return gt.css(t,e,"")},l=s(),u=n&&n[3]||(gt.cssNumber[e]?"":"px"),c=(gt.cssNumber[e]||"px"!==u&&+l)&&Bt.exec(gt.css(t,e));if(c&&c[3]!==u){u=u||c[3],n=n||[],c=+l||1;do o=o||".5",c/=o,gt.style(t,e,c+u);while(o!==(o=s()/l)&&1!==o&&--a)}return n&&(c=+c||+l||0,r=n[1]?c+(n[1]+1)*n[2]:+n[2],i&&(i.unit=u,i.start=c,i.end=r)),r}function m(t){var e,n=t.ownerDocument,i=t.nodeName,r=Yt[i];return r?r:(e=n.body.appendChild(n.createElement(i)),r=gt.css(e,"display"),e.parentNode.removeChild(e),"none"===r&&(r="block"),Yt[i]=r,r)}function v(t,e){for(var n,i,r=[],o=0,a=t.length;o<a;o++)i=t[o],i.style&&(n=i.style.display,e?("none"===n&&(r[o]=Rt.get(i,"display")||null,r[o]||(i.style.display="")),""===i.style.display&&jt(i)&&(r[o]=m(i))):"none"!==n&&(r[o]="none",Rt.set(i,"display",n)));for(o=0;o<a;o++)null!=r[o]&&(t[o].style.display=r[o]);return t}function y(t,e){var n;return n="undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e||"*"):"undefined"!=typeof t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&r(t,e)?gt.merge([t],n):n}function b(t,e){for(var n=0,i=t.length;n<i;n++)Rt.set(t[n],"globalEval",!e||Rt.get(e[n],"globalEval"))}function x(t,e,n,i,r){for(var o,a,s,l,u,c,d=e.createDocumentFragment(),h=[],f=0,p=t.length;f<p;f++)if(o=t[f],o||0===o)if("object"===gt.type(o))gt.merge(h,o.nodeType?[o]:o);else if(Xt.test(o)){for(a=a||d.appendChild(e.createElement("div")),s=(Ut.exec(o)||["",""])[1].toLowerCase(),l=Zt[s]||Zt._default,a.innerHTML=l[1]+gt.htmlPrefilter(o)+l[2],c=l[0];c--;)a=a.lastChild;gt.merge(h,a.childNodes),a=d.firstChild,a.textContent=""}else h.push(e.createTextNode(o));for(d.textContent="",f=0;o=h[f++];)if(i&&gt.inArray(o,i)>-1)r&&r.push(o);else if(u=gt.contains(o.ownerDocument,o),a=y(d.appendChild(o),"script"),u&&b(a),n)for(c=0;o=a[c++];)Gt.test(o.type||"")&&n.push(o);return d}function _(){return!0}function w(){return!1}function k(){try{return nt.activeElement}catch(t){}}function S(t,e,n,i,r,o){var a,s;if("object"==typeof e){"string"!=typeof n&&(i=i||n,n=void 0);for(s in e)S(t,s,n,i,e[s],o);return t}if(null==i&&null==r?(r=n,i=n=void 0):null==r&&("string"==typeof n?(r=i,i=void 0):(r=i,i=n,n=void 0)),r===!1)r=w;else if(!r)return t;return 1===o&&(a=r,r=function(t){return gt().off(t),a.apply(this,arguments)},r.guid=a.guid||(a.guid=gt.guid++)),t.each(function(){gt.event.add(this,e,r,i,n)})}function C(t,e){return r(t,"table")&&r(11!==e.nodeType?e:e.firstChild,"tr")?gt(">tbody",t)[0]||t:t}function M(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function D(t){var e=re.exec(t.type);return e?t.type=e[1]:t.removeAttribute("type"),t}function T(t,e){var n,i,r,o,a,s,l,u;if(1===e.nodeType){if(Rt.hasData(t)&&(o=Rt.access(t),a=Rt.set(e,o),u=o.events)){delete a.handle,a.events={};for(r in u)for(n=0,i=u[r].length;n<i;n++)gt.event.add(e,r,u[r][n])}Nt.hasData(t)&&(s=Nt.access(t),l=gt.extend({},s),Nt.set(e,l))}}function P(t,e){var n=e.nodeName.toLowerCase();"input"===n&&qt.test(t.type)?e.checked=t.checked:"input"!==n&&"textarea"!==n||(e.defaultValue=t.defaultValue)}function A(t,e,i,r){e=ot.apply([],e);var o,a,s,l,u,c,d=0,h=t.length,f=h-1,p=e[0],g=gt.isFunction(p);if(g||h>1&&"string"==typeof p&&!ft.checkClone&&ie.test(p))return t.each(function(n){var o=t.eq(n);g&&(e[0]=p.call(this,n,o.html())),A(o,e,i,r)});if(h&&(o=x(e,t[0].ownerDocument,!1,t,r),a=o.firstChild,1===o.childNodes.length&&(o=a),a||r)){for(s=gt.map(y(o,"script"),M),l=s.length;d<h;d++)u=o,d!==f&&(u=gt.clone(u,!0,!0),l&&gt.merge(s,y(u,"script"))),i.call(t[d],u,d);if(l)for(c=s[s.length-1].ownerDocument,gt.map(s,D),d=0;d<l;d++)u=s[d],Gt.test(u.type||"")&&!Rt.access(u,"globalEval")&&gt.contains(c,u)&&(u.src?gt._evalUrl&&gt._evalUrl(u.src):n(u.textContent.replace(oe,""),c))}return t}function I(t,e,n){for(var i,r=e?gt.filter(e,t):t,o=0;null!=(i=r[o]);o++)n||1!==i.nodeType||gt.cleanData(y(i)),i.parentNode&&(n&&gt.contains(i.ownerDocument,i)&&b(y(i,"script")),i.parentNode.removeChild(i));return t}function O(t,e,n){var i,r,o,a,s=t.style;return n=n||le(t),n&&(a=n.getPropertyValue(e)||n[e],""!==a||gt.contains(t.ownerDocument,t)||(a=gt.style(t,e)),!ft.pixelMarginRight()&&se.test(a)&&ae.test(e)&&(i=s.width,r=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=i,s.minWidth=r,s.maxWidth=o)),void 0!==a?a+"":a}function F(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function L(t){if(t in pe)return t;for(var e=t[0].toUpperCase()+t.slice(1),n=fe.length;n--;)if(t=fe[n]+e,t in pe)return t}function E(t){var e=gt.cssProps[t];return e||(e=gt.cssProps[t]=L(t)||t),e}function R(t,e,n){var i=Bt.exec(e);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):e}function N(t,e,n,i,r){var o,a=0;for(o=n===(i?"border":"content")?4:"width"===e?1:0;o<4;o+=2)"margin"===n&&(a+=gt.css(t,n+Vt[o],!0,r)),i?("content"===n&&(a-=gt.css(t,"padding"+Vt[o],!0,r)),"margin"!==n&&(a-=gt.css(t,"border"+Vt[o]+"Width",!0,r))):(a+=gt.css(t,"padding"+Vt[o],!0,r),"padding"!==n&&(a+=gt.css(t,"border"+Vt[o]+"Width",!0,r)));return a}function W(t,e,n){var i,r=le(t),o=O(t,e,r),a="border-box"===gt.css(t,"boxSizing",!1,r);return se.test(o)?o:(i=a&&(ft.boxSizingReliable()||o===t.style[e]),"auto"===o&&(o=t["offset"+e[0].toUpperCase()+e.slice(1)]),o=parseFloat(o)||0,o+N(t,e,n||(a?"border":"content"),i,r)+"px")}function z(t,e,n,i,r){return new z.prototype.init(t,e,n,i,r)}function H(){me&&(nt.hidden===!1&&t.requestAnimationFrame?t.requestAnimationFrame(H):t.setTimeout(H,gt.fx.interval),gt.fx.tick())}function B(){return t.setTimeout(function(){ge=void 0}),ge=gt.now()}function V(t,e){var n,i=0,r={height:t};for(e=e?1:0;i<4;i+=2-e)n=Vt[i],r["margin"+n]=r["padding"+n]=t;return e&&(r.opacity=r.width=t),r}function j(t,e,n){for(var i,r=(q.tweeners[e]||[]).concat(q.tweeners["*"]),o=0,a=r.length;o<a;o++)if(i=r[o].call(n,e,t))return i}function $(t,e,n){var i,r,o,a,s,l,u,c,d="width"in e||"height"in e,h=this,f={},p=t.style,g=t.nodeType&&jt(t),m=Rt.get(t,"fxshow");n.queue||(a=gt._queueHooks(t,"fx"),null==a.unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,h.always(function(){h.always(function(){a.unqueued--,gt.queue(t,"fx").length||a.empty.fire()})}));for(i in e)if(r=e[i],ve.test(r)){if(delete e[i],o=o||"toggle"===r,r===(g?"hide":"show")){if("show"!==r||!m||void 0===m[i])continue;g=!0}f[i]=m&&m[i]||gt.style(t,i)}if(l=!gt.isEmptyObject(e),l||!gt.isEmptyObject(f)){d&&1===t.nodeType&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],u=m&&m.display,null==u&&(u=Rt.get(t,"display")),c=gt.css(t,"display"),"none"===c&&(u?c=u:(v([t],!0),u=t.style.display||u,c=gt.css(t,"display"),v([t]))),("inline"===c||"inline-block"===c&&null!=u)&&"none"===gt.css(t,"float")&&(l||(h.done(function(){p.display=u}),null==u&&(c=p.display,u="none"===c?"":c)),p.display="inline-block")),n.overflow&&(p.overflow="hidden",h.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]})),l=!1;for(i in f)l||(m?"hidden"in m&&(g=m.hidden):m=Rt.access(t,"fxshow",{display:u}),o&&(m.hidden=!g),g&&v([t],!0),h.done(function(){g||v([t]),Rt.remove(t,"fxshow");for(i in f)gt.style(t,i,f[i])})),l=j(g?m[i]:0,i,h),i in m||(m[i]=l.start,g&&(l.end=l.start,l.start=0))}}function Y(t,e){var n,i,r,o,a;for(n in t)if(i=gt.camelCase(n),r=e[i],o=t[n],Array.isArray(o)&&(r=o[1],o=t[n]=o[0]),n!==i&&(t[i]=o,delete t[n]),a=gt.cssHooks[i],a&&"expand"in a){o=a.expand(o),delete t[i];for(n in o)n in t||(t[n]=o[n],e[n]=r)}else e[i]=r}function q(t,e,n){var i,r,o=0,a=q.prefilters.length,s=gt.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=ge||B(),n=Math.max(0,u.startTime+u.duration-e),i=n/u.duration||0,o=1-i,a=0,l=u.tweens.length;a<l;a++)u.tweens[a].run(o);return s.notifyWith(t,[u,o,n]),o<1&&l?n:(l||s.notifyWith(t,[u,1,0]),s.resolveWith(t,[u]),!1)},u=s.promise({elem:t,props:gt.extend({},e),opts:gt.extend(!0,{specialEasing:{},easing:gt.easing._default},n),originalProperties:e,originalOptions:n,startTime:ge||B(),duration:n.duration,tweens:[],createTween:function(e,n){var i=gt.Tween(t,u.opts,e,n,u.opts.specialEasing[e]||u.opts.easing);return u.tweens.push(i),i},stop:function(e){var n=0,i=e?u.tweens.length:0;if(r)return this;for(r=!0;n<i;n++)u.tweens[n].run(1);return e?(s.notifyWith(t,[u,1,0]),s.resolveWith(t,[u,e])):s.rejectWith(t,[u,e]),this}}),c=u.props;for(Y(c,u.opts.specialEasing);o<a;o++)if(i=q.prefilters[o].call(u,t,c,u.opts))return gt.isFunction(i.stop)&&(gt._queueHooks(u.elem,u.opts.queue).stop=gt.proxy(i.stop,i)),i;return gt.map(c,j,u),gt.isFunction(u.opts.start)&&u.opts.start.call(t,u),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always),gt.fx.timer(gt.extend(l,{elem:t,anim:u,queue:u.opts.queue})),u}function U(t){var e=t.match(It)||[];return e.join(" ")}function G(t){return t.getAttribute&&t.getAttribute("class")||""}function Z(t,e,n,i){var r;if(Array.isArray(e))gt.each(e,function(e,r){n||Te.test(t)?i(t,r):Z(t+"["+("object"==typeof r&&null!=r?e:"")+"]",r,n,i)});else if(n||"object"!==gt.type(e))i(t,e);else for(r in e)Z(t+"["+r+"]",e[r],n,i)}function X(t){return function(e,n){"string"!=typeof e&&(n=e,e="*");var i,r=0,o=e.toLowerCase().match(It)||[];if(gt.isFunction(n))for(;i=o[r++];)"+"===i[0]?(i=i.slice(1)||"*",(t[i]=t[i]||[]).unshift(n)):(t[i]=t[i]||[]).push(n)}}function Q(t,e,n,i){function r(s){var l;return o[s]=!0,gt.each(t[s]||[],function(t,s){var u=s(e,n,i);return"string"!=typeof u||a||o[u]?a?!(l=u):void 0:(e.dataTypes.unshift(u),r(u),!1)}),l}var o={},a=t===He;return r(e.dataTypes[0])||!o["*"]&&r("*")}function J(t,e){var n,i,r=gt.ajaxSettings.flatOptions||{};for(n in e)void 0!==e[n]&&((r[n]?t:i||(i={}))[n]=e[n]);return i&&gt.extend(!0,t,i),t}function K(t,e,n){for(var i,r,o,a,s=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=t.mimeType||e.getResponseHeader("Content-Type"));if(i)for(r in s)if(s[r]&&s[r].test(i)){l.unshift(r);break}if(l[0]in n)o=l[0];else{for(r in n){if(!l[0]||t.converters[r+" "+l[0]]){o=r;break}a||(a=r)}o=o||a}if(o)return o!==l[0]&&l.unshift(o),n[o]}function tt(t,e,n,i){var r,o,a,s,l,u={},c=t.dataTypes.slice();if(c[1])for(a in t.converters)u[a.toLowerCase()]=t.converters[a];for(o=c.shift();o;)if(t.responseFields[o]&&(n[t.responseFields[o]]=e),!l&&i&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(a=u[l+" "+o]||u["* "+o],!a)for(r in u)if(s=r.split(" "),s[1]===o&&(a=u[l+" "+s[0]]||u["* "+s[0]])){a===!0?a=u[r]:u[r]!==!0&&(o=s[0],c.unshift(s[1]));break}if(a!==!0)if(a&&t["throws"])e=a(e);else try{e=a(e)}catch(d){return{state:"parsererror",error:a?d:"No conversion from "+l+" to "+o}}}return{state:"success",data:e}}var et=[],nt=t.document,it=Object.getPrototypeOf,rt=et.slice,ot=et.concat,at=et.push,st=et.indexOf,lt={},ut=lt.toString,ct=lt.hasOwnProperty,dt=ct.toString,ht=dt.call(Object),ft={},pt="3.2.1",gt=function(t,e){return new gt.fn.init(t,e)},mt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g,vt=/^-ms-/,yt=/-([a-z])/g,bt=function(t,e){return e.toUpperCase()};gt.fn=gt.prototype={jquery:pt,constructor:gt,length:0,toArray:function(){return rt.call(this)},get:function(t){return null==t?rt.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=gt.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return gt.each(this,t)},map:function(t){return this.pushStack(gt.map(this,function(e,n){return t.call(e,n,e)}))},slice:function(){return this.pushStack(rt.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,n=+t+(t<0?e:0);return this.pushStack(n>=0&&n<e?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:at,sort:et.sort,splice:et.splice},gt.extend=gt.fn.extend=function(){var t,e,n,i,r,o,a=arguments[0]||{},s=1,l=arguments.length,u=!1;for("boolean"==typeof a&&(u=a,a=arguments[s]||{},s++),"object"==typeof a||gt.isFunction(a)||(a={}),s===l&&(a=this,s--);s<l;s++)if(null!=(t=arguments[s]))for(e in t)n=a[e],i=t[e],a!==i&&(u&&i&&(gt.isPlainObject(i)||(r=Array.isArray(i)))?(r?(r=!1,o=n&&Array.isArray(n)?n:[]):o=n&&gt.isPlainObject(n)?n:{},a[e]=gt.extend(u,o,i)):void 0!==i&&(a[e]=i));return a},gt.extend({expando:"jQuery"+(pt+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isFunction:function(t){return"function"===gt.type(t)},isWindow:function(t){return null!=t&&t===t.window},isNumeric:function(t){var e=gt.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},isPlainObject:function(t){var e,n;return!(!t||"[object Object]"!==ut.call(t)||(e=it(t))&&(n=ct.call(e,"constructor")&&e.constructor,"function"!=typeof n||dt.call(n)!==ht))},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},type:function(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?lt[ut.call(t)]||"object":typeof t},globalEval:function(t){n(t)},camelCase:function(t){return t.replace(vt,"ms-").replace(yt,bt)},each:function(t,e){var n,r=0;if(i(t))for(n=t.length;r<n&&e.call(t[r],r,t[r])!==!1;r++);else for(r in t)if(e.call(t[r],r,t[r])===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(mt,"")},makeArray:function(t,e){var n=e||[];return null!=t&&(i(Object(t))?gt.merge(n,"string"==typeof t?[t]:t):at.call(n,t)),n},inArray:function(t,e,n){return null==e?-1:st.call(e,t,n)},merge:function(t,e){for(var n=+e.length,i=0,r=t.length;i<n;i++)t[r++]=e[i];return t.length=r,t},grep:function(t,e,n){for(var i,r=[],o=0,a=t.length,s=!n;o<a;o++)i=!e(t[o],o),i!==s&&r.push(t[o]);return r},map:function(t,e,n){var r,o,a=0,s=[];if(i(t))for(r=t.length;a<r;a++)o=e(t[a],a,n),null!=o&&s.push(o);else for(a in t)o=e(t[a],a,n),null!=o&&s.push(o);return ot.apply([],s)},guid:1,proxy:function(t,e){var n,i,r;if("string"==typeof e&&(n=t[e],e=t,t=n),gt.isFunction(t))return i=rt.call(arguments,2),r=function(){return t.apply(e||this,i.concat(rt.call(arguments)))},r.guid=t.guid=t.guid||gt.guid++,r},now:Date.now,support:ft}),"function"==typeof Symbol&&(gt.fn[Symbol.iterator]=et[Symbol.iterator]),gt.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){lt["[object "+e+"]"]=e.toLowerCase()});var xt=function(t){function e(t,e,n,i){var r,o,a,s,l,u,c,h=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!i&&((e?e.ownerDocument||e:B)!==F&&O(e),e=e||F,E)){if(11!==p&&(l=vt.exec(t)))if(r=l[1]){if(9===p){if(!(a=e.getElementById(r)))return n;if(a.id===r)return n.push(a),n}else if(h&&(a=h.getElementById(r))&&z(e,a)&&a.id===r)return n.push(a),n}else{if(l[2])return J.apply(n,e.getElementsByTagName(t)),n;if((r=l[3])&&w.getElementsByClassName&&e.getElementsByClassName)return J.apply(n,e.getElementsByClassName(r)),n}if(w.qsa&&!q[t+" "]&&(!R||!R.test(t))){if(1!==p)h=e,c=t;else if("object"!==e.nodeName.toLowerCase()){for((s=e.getAttribute("id"))?s=s.replace(_t,wt):e.setAttribute("id",s=H),u=M(t),o=u.length;o--;)u[o]="#"+s+" "+f(u[o]);c=u.join(","),h=yt.test(t)&&d(e.parentNode)||e}if(c)try{return J.apply(n,h.querySelectorAll(c)),n}catch(g){}finally{s===H&&e.removeAttribute("id")}}}return T(t.replace(st,"$1"),e,n,i)}function n(){function t(n,i){return e.push(n+" ")>k.cacheLength&&delete t[e.shift()],t[n+" "]=i}var e=[];return t}function i(t){return t[H]=!0,t}function r(t){var e=F.createElement("fieldset");try{return!!t(e)}catch(n){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function o(t,e){for(var n=t.split("|"),i=n.length;i--;)k.attrHandle[n[i]]=e}function a(t,e){var n=e&&t,i=n&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===e)return-1;return t?1:-1}function s(t){return function(e){var n=e.nodeName.toLowerCase();return"input"===n&&e.type===t}}function l(t){return function(e){var n=e.nodeName.toLowerCase();return("input"===n||"button"===n)&&e.type===t}}function u(t){return function(e){return"form"in e?e.parentNode&&e.disabled===!1?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&St(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function c(t){return i(function(e){return e=+e,i(function(n,i){for(var r,o=t([],n.length,e),a=o.length;a--;)n[r=o[a]]&&(n[r]=!(i[r]=n[r]))})})}function d(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function h(){}function f(t){for(var e=0,n=t.length,i="";e<n;e++)i+=t[e].value;return i}function p(t,e,n){var i=e.dir,r=e.next,o=r||i,a=n&&"parentNode"===o,s=j++;return e.first?function(e,n,r){for(;e=e[i];)if(1===e.nodeType||a)return t(e,n,r);return!1}:function(e,n,l){var u,c,d,h=[V,s];if(l){for(;e=e[i];)if((1===e.nodeType||a)&&t(e,n,l))return!0}else for(;e=e[i];)if(1===e.nodeType||a)if(d=e[H]||(e[H]={}),c=d[e.uniqueID]||(d[e.uniqueID]={}),r&&r===e.nodeName.toLowerCase())e=e[i]||e;else{if((u=c[o])&&u[0]===V&&u[1]===s)return h[2]=u[2];if(c[o]=h,h[2]=t(e,n,l))return!0}return!1}}function g(t){return t.length>1?function(e,n,i){for(var r=t.length;r--;)if(!t[r](e,n,i))return!1;return!0}:t[0]}function m(t,n,i){for(var r=0,o=n.length;r<o;r++)e(t,n[r],i);return i}function v(t,e,n,i,r){for(var o,a=[],s=0,l=t.length,u=null!=e;s<l;s++)(o=t[s])&&(n&&!n(o,i,r)||(a.push(o),u&&e.push(s)));return a}function y(t,e,n,r,o,a){return r&&!r[H]&&(r=y(r)),o&&!o[H]&&(o=y(o,a)),i(function(i,a,s,l){var u,c,d,h=[],f=[],p=a.length,g=i||m(e||"*",s.nodeType?[s]:s,[]),y=!t||!i&&e?g:v(g,h,t,s,l),b=n?o||(i?t:p||r)?[]:a:y;if(n&&n(y,b,s,l),r)for(u=v(b,f),r(u,[],s,l),c=u.length;c--;)(d=u[c])&&(b[f[c]]=!(y[f[c]]=d));if(i){if(o||t){if(o){for(u=[],c=b.length;c--;)(d=b[c])&&u.push(y[c]=d);o(null,b=[],u,l)}for(c=b.length;c--;)(d=b[c])&&(u=o?tt(i,d):h[c])>-1&&(i[u]=!(a[u]=d))}}else b=v(b===a?b.splice(p,b.length):b),o?o(null,a,b,l):J.apply(a,b)})}function b(t){for(var e,n,i,r=t.length,o=k.relative[t[0].type],a=o||k.relative[" "],s=o?1:0,l=p(function(t){return t===e},a,!0),u=p(function(t){return tt(e,t)>-1},a,!0),c=[function(t,n,i){var r=!o&&(i||n!==P)||((e=n).nodeType?l(t,n,i):u(t,n,i));return e=null,r}];s<r;s++)if(n=k.relative[t[s].type])c=[p(g(c),n)];else{if(n=k.filter[t[s].type].apply(null,t[s].matches),n[H]){for(i=++s;i<r&&!k.relative[t[i].type];i++);return y(s>1&&g(c),s>1&&f(t.slice(0,s-1).concat({value:" "===t[s-2].type?"*":""})).replace(st,"$1"),n,s<i&&b(t.slice(s,i)),i<r&&b(t=t.slice(i)),i<r&&f(t))}c.push(n)}return g(c)}function x(t,n){var r=n.length>0,o=t.length>0,a=function(i,a,s,l,u){var c,d,h,f=0,p="0",g=i&&[],m=[],y=P,b=i||o&&k.find.TAG("*",u),x=V+=null==y?1:Math.random()||.1,_=b.length;for(u&&(P=a===F||a||u);p!==_&&null!=(c=b[p]);p++){if(o&&c){for(d=0,a||c.ownerDocument===F||(O(c),s=!E);h=t[d++];)if(h(c,a||F,s)){l.push(c);break}u&&(V=x)}r&&((c=!h&&c)&&f--,i&&g.push(c))}if(f+=p,r&&p!==f){for(d=0;h=n[d++];)h(g,m,a,s);if(i){if(f>0)for(;p--;)g[p]||m[p]||(m[p]=X.call(l));m=v(m)}J.apply(l,m),u&&!i&&m.length>0&&f+n.length>1&&e.uniqueSort(l)}return u&&(V=x,P=y),g};return r?i(a):a}var _,w,k,S,C,M,D,T,P,A,I,O,F,L,E,R,N,W,z,H="sizzle"+1*new Date,B=t.document,V=0,j=0,$=n(),Y=n(),q=n(),U=function(t,e){return t===e&&(I=!0),0},G={}.hasOwnProperty,Z=[],X=Z.pop,Q=Z.push,J=Z.push,K=Z.slice,tt=function(t,e){for(var n=0,i=t.length;n<i;n++)if(t[n]===e)return n;return-1},et="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",nt="[\\x20\\t\\r\\n\\f]",it="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",rt="\\["+nt+"*("+it+")(?:"+nt+"*([*^$|!~]?=)"+nt+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+it+"))|)"+nt+"*\\]",ot=":("+it+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+rt+")*)|.*)\\)|)",at=new RegExp(nt+"+","g"),st=new RegExp("^"+nt+"+|((?:^|[^\\\\])(?:\\\\.)*)"+nt+"+$","g"),lt=new RegExp("^"+nt+"*,"+nt+"*"),ut=new RegExp("^"+nt+"*([>+~]|"+nt+")"+nt+"*"),ct=new RegExp("="+nt+"*([^\\]'\"]*?)"+nt+"*\\]","g"),dt=new RegExp(ot),ht=new RegExp("^"+it+"$"),ft={ID:new RegExp("^#("+it+")"),CLASS:new RegExp("^\\.("+it+")"),TAG:new RegExp("^("+it+"|[*])"),ATTR:new RegExp("^"+rt),PSEUDO:new RegExp("^"+ot),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+nt+"*(even|odd|(([+-]|)(\\d*)n|)"+nt+"*(?:([+-]|)"+nt+"*(\\d+)|))"+nt+"*\\)|)","i"),bool:new RegExp("^(?:"+et+")$","i"),needsContext:new RegExp("^"+nt+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+nt+"*((?:-\\d)?\\d*)"+nt+"*\\)|)(?=[^-]|$)","i")},pt=/^(?:input|select|textarea|button)$/i,gt=/^h\d$/i,mt=/^[^{]+\{\s*\[native \w/,vt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,yt=/[+~]/,bt=new RegExp("\\\\([\\da-f]{1,6}"+nt+"?|("+nt+")|.)","ig"),xt=function(t,e,n){var i="0x"+e-65536;return i!==i||n?e:i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},_t=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,wt=function(t,e){return e?"\0"===t?"�":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},kt=function(){O()},St=p(function(t){return t.disabled===!0&&("form"in t||"label"in t)},{dir:"parentNode",next:"legend"});try{J.apply(Z=K.call(B.childNodes),B.childNodes),Z[B.childNodes.length].nodeType}catch(Ct){J={apply:Z.length?function(t,e){Q.apply(t,K.call(e))}:function(t,e){for(var n=t.length,i=0;t[n++]=e[i++];);t.length=n-1}}}w=e.support={},C=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},O=e.setDocument=function(t){var e,n,i=t?t.ownerDocument||t:B;return i!==F&&9===i.nodeType&&i.documentElement?(F=i,L=F.documentElement,E=!C(F),B!==F&&(n=F.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",kt,!1):n.attachEvent&&n.attachEvent("onunload",kt)),w.attributes=r(function(t){return t.className="i",!t.getAttribute("className")}),w.getElementsByTagName=r(function(t){return t.appendChild(F.createComment("")),!t.getElementsByTagName("*").length}),w.getElementsByClassName=mt.test(F.getElementsByClassName),w.getById=r(function(t){return L.appendChild(t).id=H,!F.getElementsByName||!F.getElementsByName(H).length}),w.getById?(k.filter.ID=function(t){var e=t.replace(bt,xt);return function(t){return t.getAttribute("id")===e}},k.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&E){var n=e.getElementById(t);return n?[n]:[]}}):(k.filter.ID=function(t){var e=t.replace(bt,xt);return function(t){var n="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return n&&n.value===e}},k.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&E){var n,i,r,o=e.getElementById(t);if(o){if(n=o.getAttributeNode("id"),n&&n.value===t)return[o];for(r=e.getElementsByName(t),i=0;o=r[i++];)if(n=o.getAttributeNode("id"),n&&n.value===t)return[o]}return[]}}),k.find.TAG=w.getElementsByTagName?function(t,e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t):w.qsa?e.querySelectorAll(t):void 0}:function(t,e){var n,i=[],r=0,o=e.getElementsByTagName(t);if("*"===t){for(;n=o[r++];)1===n.nodeType&&i.push(n);return i}return o},k.find.CLASS=w.getElementsByClassName&&function(t,e){if("undefined"!=typeof e.getElementsByClassName&&E)return e.getElementsByClassName(t)},N=[],R=[],(w.qsa=mt.test(F.querySelectorAll))&&(r(function(t){L.appendChild(t).innerHTML="<a id='"+H+"'></a><select id='"+H+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&R.push("[*^$]="+nt+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||R.push("\\["+nt+"*(?:value|"+et+")"),t.querySelectorAll("[id~="+H+"-]").length||R.push("~="),t.querySelectorAll(":checked").length||R.push(":checked"),t.querySelectorAll("a#"+H+"+*").length||R.push(".#.+[+~]")}),r(function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=F.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&R.push("name"+nt+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&R.push(":enabled",":disabled"),L.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&R.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),R.push(",.*:")})),(w.matchesSelector=mt.test(W=L.matches||L.webkitMatchesSelector||L.mozMatchesSelector||L.oMatchesSelector||L.msMatchesSelector))&&r(function(t){w.disconnectedMatch=W.call(t,"*"),W.call(t,"[s!='']:x"),N.push("!=",ot)}),R=R.length&&new RegExp(R.join("|")),N=N.length&&new RegExp(N.join("|")),e=mt.test(L.compareDocumentPosition),z=e||mt.test(L.contains)?function(t,e){var n=9===t.nodeType?t.documentElement:t,i=e&&e.parentNode;return t===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):t.compareDocumentPosition&&16&t.compareDocumentPosition(i)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},U=e?function(t,e){if(t===e)return I=!0,0;var n=!t.compareDocumentPosition-!e.compareDocumentPosition;return n?n:(n=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&n||!w.sortDetached&&e.compareDocumentPosition(t)===n?t===F||t.ownerDocument===B&&z(B,t)?-1:e===F||e.ownerDocument===B&&z(B,e)?1:A?tt(A,t)-tt(A,e):0:4&n?-1:1)}:function(t,e){if(t===e)return I=!0,0;var n,i=0,r=t.parentNode,o=e.parentNode,s=[t],l=[e];if(!r||!o)return t===F?-1:e===F?1:r?-1:o?1:A?tt(A,t)-tt(A,e):0;if(r===o)return a(t,e);for(n=t;n=n.parentNode;)s.unshift(n);for(n=e;n=n.parentNode;)l.unshift(n);for(;s[i]===l[i];)i++;return i?a(s[i],l[i]):s[i]===B?-1:l[i]===B?1:0},F):F},e.matches=function(t,n){return e(t,null,null,n)},e.matchesSelector=function(t,n){if((t.ownerDocument||t)!==F&&O(t),n=n.replace(ct,"='$1']"),w.matchesSelector&&E&&!q[n+" "]&&(!N||!N.test(n))&&(!R||!R.test(n)))try{var i=W.call(t,n);if(i||w.disconnectedMatch||t.document&&11!==t.document.nodeType)return i}catch(r){}return e(n,F,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==F&&O(t),z(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==F&&O(t);var n=k.attrHandle[e.toLowerCase()],i=n&&G.call(k.attrHandle,e.toLowerCase())?n(t,e,!E):void 0;return void 0!==i?i:w.attributes||!E?t.getAttribute(e):(i=t.getAttributeNode(e))&&i.specified?i.value:null},e.escape=function(t){return(t+"").replace(_t,wt)},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,n=[],i=0,r=0;if(I=!w.detectDuplicates,A=!w.sortStable&&t.slice(0),t.sort(U),I){for(;e=t[r++];)e===t[r]&&(i=n.push(r));for(;i--;)t.splice(n[i],1)}return A=null,t},S=e.getText=function(t){var e,n="",i=0,r=t.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)n+=S(t)}else if(3===r||4===r)return t.nodeValue}else for(;e=t[i++];)n+=S(e);return n},k=e.selectors={cacheLength:50,createPseudo:i,match:ft,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(bt,xt),t[3]=(t[3]||t[4]||t[5]||"").replace(bt,xt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),
t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,n=!t[6]&&t[2];return ft.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":n&&dt.test(n)&&(e=M(n,!0))&&(e=n.indexOf(")",n.length-e)-n.length)&&(t[0]=t[0].slice(0,e),t[2]=n.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(bt,xt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=$[t+" "];return e||(e=new RegExp("(^|"+nt+")"+t+"("+nt+"|$)"))&&$(t,function(t){return e.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,n,i){return function(r){var o=e.attr(r,t);return null==o?"!="===n:!n||(o+="","="===n?o===i:"!="===n?o!==i:"^="===n?i&&0===o.indexOf(i):"*="===n?i&&o.indexOf(i)>-1:"$="===n?i&&o.slice(-i.length)===i:"~="===n?(" "+o.replace(at," ")+" ").indexOf(i)>-1:"|="===n&&(o===i||o.slice(0,i.length+1)===i+"-"))}},CHILD:function(t,e,n,i,r){var o="nth"!==t.slice(0,3),a="last"!==t.slice(-4),s="of-type"===e;return 1===i&&0===r?function(t){return!!t.parentNode}:function(e,n,l){var u,c,d,h,f,p,g=o!==a?"nextSibling":"previousSibling",m=e.parentNode,v=s&&e.nodeName.toLowerCase(),y=!l&&!s,b=!1;if(m){if(o){for(;g;){for(h=e;h=h[g];)if(s?h.nodeName.toLowerCase()===v:1===h.nodeType)return!1;p=g="only"===t&&!p&&"nextSibling"}return!0}if(p=[a?m.firstChild:m.lastChild],a&&y){for(h=m,d=h[H]||(h[H]={}),c=d[h.uniqueID]||(d[h.uniqueID]={}),u=c[t]||[],f=u[0]===V&&u[1],b=f&&u[2],h=f&&m.childNodes[f];h=++f&&h&&h[g]||(b=f=0)||p.pop();)if(1===h.nodeType&&++b&&h===e){c[t]=[V,f,b];break}}else if(y&&(h=e,d=h[H]||(h[H]={}),c=d[h.uniqueID]||(d[h.uniqueID]={}),u=c[t]||[],f=u[0]===V&&u[1],b=f),b===!1)for(;(h=++f&&h&&h[g]||(b=f=0)||p.pop())&&((s?h.nodeName.toLowerCase()!==v:1!==h.nodeType)||!++b||(y&&(d=h[H]||(h[H]={}),c=d[h.uniqueID]||(d[h.uniqueID]={}),c[t]=[V,b]),h!==e)););return b-=r,b===i||b%i===0&&b/i>=0}}},PSEUDO:function(t,n){var r,o=k.pseudos[t]||k.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return o[H]?o(n):o.length>1?(r=[t,t,"",n],k.setFilters.hasOwnProperty(t.toLowerCase())?i(function(t,e){for(var i,r=o(t,n),a=r.length;a--;)i=tt(t,r[a]),t[i]=!(e[i]=r[a])}):function(t){return o(t,0,r)}):o}},pseudos:{not:i(function(t){var e=[],n=[],r=D(t.replace(st,"$1"));return r[H]?i(function(t,e,n,i){for(var o,a=r(t,null,i,[]),s=t.length;s--;)(o=a[s])&&(t[s]=!(e[s]=o))}):function(t,i,o){return e[0]=t,r(e,null,o,n),e[0]=null,!n.pop()}}),has:i(function(t){return function(n){return e(t,n).length>0}}),contains:i(function(t){return t=t.replace(bt,xt),function(e){return(e.textContent||e.innerText||S(e)).indexOf(t)>-1}}),lang:i(function(t){return ht.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(bt,xt).toLowerCase(),function(e){var n;do if(n=E?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return n=n.toLowerCase(),n===t||0===n.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var n=t.location&&t.location.hash;return n&&n.slice(1)===e.id},root:function(t){return t===L},focus:function(t){return t===F.activeElement&&(!F.hasFocus||F.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:u(!1),disabled:u(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!k.pseudos.empty(t)},header:function(t){return gt.test(t.nodeName)},input:function(t){return pt.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:c(function(){return[0]}),last:c(function(t,e){return[e-1]}),eq:c(function(t,e,n){return[n<0?n+e:n]}),even:c(function(t,e){for(var n=0;n<e;n+=2)t.push(n);return t}),odd:c(function(t,e){for(var n=1;n<e;n+=2)t.push(n);return t}),lt:c(function(t,e,n){for(var i=n<0?n+e:n;--i>=0;)t.push(i);return t}),gt:c(function(t,e,n){for(var i=n<0?n+e:n;++i<e;)t.push(i);return t})}},k.pseudos.nth=k.pseudos.eq;for(_ in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})k.pseudos[_]=s(_);for(_ in{submit:!0,reset:!0})k.pseudos[_]=l(_);return h.prototype=k.filters=k.pseudos,k.setFilters=new h,M=e.tokenize=function(t,n){var i,r,o,a,s,l,u,c=Y[t+" "];if(c)return n?0:c.slice(0);for(s=t,l=[],u=k.preFilter;s;){i&&!(r=lt.exec(s))||(r&&(s=s.slice(r[0].length)||s),l.push(o=[])),i=!1,(r=ut.exec(s))&&(i=r.shift(),o.push({value:i,type:r[0].replace(st," ")}),s=s.slice(i.length));for(a in k.filter)!(r=ft[a].exec(s))||u[a]&&!(r=u[a](r))||(i=r.shift(),o.push({value:i,type:a,matches:r}),s=s.slice(i.length));if(!i)break}return n?s.length:s?e.error(t):Y(t,l).slice(0)},D=e.compile=function(t,e){var n,i=[],r=[],o=q[t+" "];if(!o){for(e||(e=M(t)),n=e.length;n--;)o=b(e[n]),o[H]?i.push(o):r.push(o);o=q(t,x(r,i)),o.selector=t}return o},T=e.select=function(t,e,n,i){var r,o,a,s,l,u="function"==typeof t&&t,c=!i&&M(t=u.selector||t);if(n=n||[],1===c.length){if(o=c[0]=c[0].slice(0),o.length>2&&"ID"===(a=o[0]).type&&9===e.nodeType&&E&&k.relative[o[1].type]){if(e=(k.find.ID(a.matches[0].replace(bt,xt),e)||[])[0],!e)return n;u&&(e=e.parentNode),t=t.slice(o.shift().value.length)}for(r=ft.needsContext.test(t)?0:o.length;r--&&(a=o[r],!k.relative[s=a.type]);)if((l=k.find[s])&&(i=l(a.matches[0].replace(bt,xt),yt.test(o[0].type)&&d(e.parentNode)||e))){if(o.splice(r,1),t=i.length&&f(o),!t)return J.apply(n,i),n;break}}return(u||D(t,c))(i,e,!E,n,!e||yt.test(t)&&d(e.parentNode)||e),n},w.sortStable=H.split("").sort(U).join("")===H,w.detectDuplicates=!!I,O(),w.sortDetached=r(function(t){return 1&t.compareDocumentPosition(F.createElement("fieldset"))}),r(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||o("type|href|height|width",function(t,e,n){if(!n)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),w.attributes&&r(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||o("value",function(t,e,n){if(!n&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),r(function(t){return null==t.getAttribute("disabled")})||o(et,function(t,e,n){var i;if(!n)return t[e]===!0?e.toLowerCase():(i=t.getAttributeNode(e))&&i.specified?i.value:null}),e}(t);gt.find=xt,gt.expr=xt.selectors,gt.expr[":"]=gt.expr.pseudos,gt.uniqueSort=gt.unique=xt.uniqueSort,gt.text=xt.getText,gt.isXMLDoc=xt.isXML,gt.contains=xt.contains,gt.escapeSelector=xt.escape;var _t=function(t,e,n){for(var i=[],r=void 0!==n;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(r&&gt(t).is(n))break;i.push(t)}return i},wt=function(t,e){for(var n=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&n.push(t);return n},kt=gt.expr.match.needsContext,St=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i,Ct=/^.[^:#\[\.,]*$/;gt.filter=function(t,e,n){var i=e[0];return n&&(t=":not("+t+")"),1===e.length&&1===i.nodeType?gt.find.matchesSelector(i,t)?[i]:[]:gt.find.matches(t,gt.grep(e,function(t){return 1===t.nodeType}))},gt.fn.extend({find:function(t){var e,n,i=this.length,r=this;if("string"!=typeof t)return this.pushStack(gt(t).filter(function(){for(e=0;e<i;e++)if(gt.contains(r[e],this))return!0}));for(n=this.pushStack([]),e=0;e<i;e++)gt.find(t,r[e],n);return i>1?gt.uniqueSort(n):n},filter:function(t){return this.pushStack(o(this,t||[],!1))},not:function(t){return this.pushStack(o(this,t||[],!0))},is:function(t){return!!o(this,"string"==typeof t&&kt.test(t)?gt(t):t||[],!1).length}});var Mt,Dt=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,Tt=gt.fn.init=function(t,e,n){var i,r;if(!t)return this;if(n=n||Mt,"string"==typeof t){if(i="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:Dt.exec(t),!i||!i[1]&&e)return!e||e.jquery?(e||n).find(t):this.constructor(e).find(t);if(i[1]){if(e=e instanceof gt?e[0]:e,gt.merge(this,gt.parseHTML(i[1],e&&e.nodeType?e.ownerDocument||e:nt,!0)),St.test(i[1])&&gt.isPlainObject(e))for(i in e)gt.isFunction(this[i])?this[i](e[i]):this.attr(i,e[i]);return this}return r=nt.getElementById(i[2]),r&&(this[0]=r,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):gt.isFunction(t)?void 0!==n.ready?n.ready(t):t(gt):gt.makeArray(t,this)};Tt.prototype=gt.fn,Mt=gt(nt);var Pt=/^(?:parents|prev(?:Until|All))/,At={children:!0,contents:!0,next:!0,prev:!0};gt.fn.extend({has:function(t){var e=gt(t,this),n=e.length;return this.filter(function(){for(var t=0;t<n;t++)if(gt.contains(this,e[t]))return!0})},closest:function(t,e){var n,i=0,r=this.length,o=[],a="string"!=typeof t&&gt(t);if(!kt.test(t))for(;i<r;i++)for(n=this[i];n&&n!==e;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&gt.find.matchesSelector(n,t))){o.push(n);break}return this.pushStack(o.length>1?gt.uniqueSort(o):o)},index:function(t){return t?"string"==typeof t?st.call(gt(t),this[0]):st.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(gt.uniqueSort(gt.merge(this.get(),gt(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),gt.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return _t(t,"parentNode")},parentsUntil:function(t,e,n){return _t(t,"parentNode",n)},next:function(t){return a(t,"nextSibling")},prev:function(t){return a(t,"previousSibling")},nextAll:function(t){return _t(t,"nextSibling")},prevAll:function(t){return _t(t,"previousSibling")},nextUntil:function(t,e,n){return _t(t,"nextSibling",n)},prevUntil:function(t,e,n){return _t(t,"previousSibling",n)},siblings:function(t){return wt((t.parentNode||{}).firstChild,t)},children:function(t){return wt(t.firstChild)},contents:function(t){return r(t,"iframe")?t.contentDocument:(r(t,"template")&&(t=t.content||t),gt.merge([],t.childNodes))}},function(t,e){gt.fn[t]=function(n,i){var r=gt.map(this,e,n);return"Until"!==t.slice(-5)&&(i=n),i&&"string"==typeof i&&(r=gt.filter(i,r)),this.length>1&&(At[t]||gt.uniqueSort(r),Pt.test(t)&&r.reverse()),this.pushStack(r)}});var It=/[^\x20\t\r\n\f]+/g;gt.Callbacks=function(t){t="string"==typeof t?s(t):gt.extend({},t);var e,n,i,r,o=[],a=[],l=-1,u=function(){for(r=r||t.once,i=e=!0;a.length;l=-1)for(n=a.shift();++l<o.length;)o[l].apply(n[0],n[1])===!1&&t.stopOnFalse&&(l=o.length,n=!1);t.memory||(n=!1),e=!1,r&&(o=n?[]:"")},c={add:function(){return o&&(n&&!e&&(l=o.length-1,a.push(n)),function i(e){gt.each(e,function(e,n){gt.isFunction(n)?t.unique&&c.has(n)||o.push(n):n&&n.length&&"string"!==gt.type(n)&&i(n)})}(arguments),n&&!e&&u()),this},remove:function(){return gt.each(arguments,function(t,e){for(var n;(n=gt.inArray(e,o,n))>-1;)o.splice(n,1),n<=l&&l--}),this},has:function(t){return t?gt.inArray(t,o)>-1:o.length>0},empty:function(){return o&&(o=[]),this},disable:function(){return r=a=[],o=n="",this},disabled:function(){return!o},lock:function(){return r=a=[],n||e||(o=n=""),this},locked:function(){return!!r},fireWith:function(t,n){return r||(n=n||[],n=[t,n.slice?n.slice():n],a.push(n),e||u()),this},fire:function(){return c.fireWith(this,arguments),this},fired:function(){return!!i}};return c},gt.extend({Deferred:function(e){var n=[["notify","progress",gt.Callbacks("memory"),gt.Callbacks("memory"),2],["resolve","done",gt.Callbacks("once memory"),gt.Callbacks("once memory"),0,"resolved"],["reject","fail",gt.Callbacks("once memory"),gt.Callbacks("once memory"),1,"rejected"]],i="pending",r={state:function(){return i},always:function(){return o.done(arguments).fail(arguments),this},"catch":function(t){return r.then(null,t)},pipe:function(){var t=arguments;return gt.Deferred(function(e){gt.each(n,function(n,i){var r=gt.isFunction(t[i[4]])&&t[i[4]];o[i[1]](function(){var t=r&&r.apply(this,arguments);t&&gt.isFunction(t.promise)?t.promise().progress(e.notify).done(e.resolve).fail(e.reject):e[i[0]+"With"](this,r?[t]:arguments)})}),t=null}).promise()},then:function(e,i,r){function o(e,n,i,r){return function(){var s=this,c=arguments,d=function(){var t,d;if(!(e<a)){if(t=i.apply(s,c),t===n.promise())throw new TypeError("Thenable self-resolution");d=t&&("object"==typeof t||"function"==typeof t)&&t.then,gt.isFunction(d)?r?d.call(t,o(a,n,l,r),o(a,n,u,r)):(a++,d.call(t,o(a,n,l,r),o(a,n,u,r),o(a,n,l,n.notifyWith))):(i!==l&&(s=void 0,c=[t]),(r||n.resolveWith)(s,c))}},h=r?d:function(){try{d()}catch(t){gt.Deferred.exceptionHook&&gt.Deferred.exceptionHook(t,h.stackTrace),e+1>=a&&(i!==u&&(s=void 0,c=[t]),n.rejectWith(s,c))}};e?h():(gt.Deferred.getStackHook&&(h.stackTrace=gt.Deferred.getStackHook()),t.setTimeout(h))}}var a=0;return gt.Deferred(function(t){n[0][3].add(o(0,t,gt.isFunction(r)?r:l,t.notifyWith)),n[1][3].add(o(0,t,gt.isFunction(e)?e:l)),n[2][3].add(o(0,t,gt.isFunction(i)?i:u))}).promise()},promise:function(t){return null!=t?gt.extend(t,r):r}},o={};return gt.each(n,function(t,e){var a=e[2],s=e[5];r[e[1]]=a.add,s&&a.add(function(){i=s},n[3-t][2].disable,n[0][2].lock),a.add(e[3].fire),o[e[0]]=function(){return o[e[0]+"With"](this===o?void 0:this,arguments),this},o[e[0]+"With"]=a.fireWith}),r.promise(o),e&&e.call(o,o),o},when:function(t){var e=arguments.length,n=e,i=Array(n),r=rt.call(arguments),o=gt.Deferred(),a=function(t){return function(n){i[t]=this,r[t]=arguments.length>1?rt.call(arguments):n,--e||o.resolveWith(i,r)}};if(e<=1&&(c(t,o.done(a(n)).resolve,o.reject,!e),"pending"===o.state()||gt.isFunction(r[n]&&r[n].then)))return o.then();for(;n--;)c(r[n],a(n),o.reject);return o.promise()}});var Ot=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;gt.Deferred.exceptionHook=function(e,n){t.console&&t.console.warn&&e&&Ot.test(e.name)&&t.console.warn("jQuery.Deferred exception: "+e.message,e.stack,n)},gt.readyException=function(e){t.setTimeout(function(){throw e})};var Ft=gt.Deferred();gt.fn.ready=function(t){return Ft.then(t)["catch"](function(t){gt.readyException(t)}),this},gt.extend({isReady:!1,readyWait:1,ready:function(t){(t===!0?--gt.readyWait:gt.isReady)||(gt.isReady=!0,t!==!0&&--gt.readyWait>0||Ft.resolveWith(nt,[gt]))}}),gt.ready.then=Ft.then,"complete"===nt.readyState||"loading"!==nt.readyState&&!nt.documentElement.doScroll?t.setTimeout(gt.ready):(nt.addEventListener("DOMContentLoaded",d),t.addEventListener("load",d));var Lt=function(t,e,n,i,r,o,a){var s=0,l=t.length,u=null==n;if("object"===gt.type(n)){r=!0;for(s in n)Lt(t,e,s,n[s],!0,o,a)}else if(void 0!==i&&(r=!0,gt.isFunction(i)||(a=!0),u&&(a?(e.call(t,i),e=null):(u=e,e=function(t,e,n){return u.call(gt(t),n)})),e))for(;s<l;s++)e(t[s],n,a?i:i.call(t[s],s,e(t[s],n)));return r?t:u?e.call(t):l?e(t[0],n):o},Et=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};h.uid=1,h.prototype={cache:function(t){var e=t[this.expando];return e||(e={},Et(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,n){var i,r=this.cache(t);if("string"==typeof e)r[gt.camelCase(e)]=n;else for(i in e)r[gt.camelCase(i)]=e[i];return r},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][gt.camelCase(e)]},access:function(t,e,n){return void 0===e||e&&"string"==typeof e&&void 0===n?this.get(t,e):(this.set(t,e,n),void 0!==n?n:e)},remove:function(t,e){var n,i=t[this.expando];if(void 0!==i){if(void 0!==e){Array.isArray(e)?e=e.map(gt.camelCase):(e=gt.camelCase(e),e=e in i?[e]:e.match(It)||[]),n=e.length;for(;n--;)delete i[e[n]]}(void 0===e||gt.isEmptyObject(i))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!gt.isEmptyObject(e)}};var Rt=new h,Nt=new h,Wt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,zt=/[A-Z]/g;gt.extend({hasData:function(t){return Nt.hasData(t)||Rt.hasData(t)},data:function(t,e,n){return Nt.access(t,e,n)},removeData:function(t,e){Nt.remove(t,e)},_data:function(t,e,n){return Rt.access(t,e,n)},_removeData:function(t,e){Rt.remove(t,e)}}),gt.fn.extend({data:function(t,e){var n,i,r,o=this[0],a=o&&o.attributes;if(void 0===t){if(this.length&&(r=Nt.get(o),1===o.nodeType&&!Rt.get(o,"hasDataAttrs"))){for(n=a.length;n--;)a[n]&&(i=a[n].name,0===i.indexOf("data-")&&(i=gt.camelCase(i.slice(5)),p(o,i,r[i])));Rt.set(o,"hasDataAttrs",!0)}return r}return"object"==typeof t?this.each(function(){Nt.set(this,t)}):Lt(this,function(e){var n;if(o&&void 0===e){if(n=Nt.get(o,t),void 0!==n)return n;if(n=p(o,t),void 0!==n)return n}else this.each(function(){Nt.set(this,t,e)})},null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){Nt.remove(this,t)})}}),gt.extend({queue:function(t,e,n){var i;if(t)return e=(e||"fx")+"queue",i=Rt.get(t,e),n&&(!i||Array.isArray(n)?i=Rt.access(t,e,gt.makeArray(n)):i.push(n)),i||[]},dequeue:function(t,e){e=e||"fx";var n=gt.queue(t,e),i=n.length,r=n.shift(),o=gt._queueHooks(t,e),a=function(){gt.dequeue(t,e)};"inprogress"===r&&(r=n.shift(),i--),r&&("fx"===e&&n.unshift("inprogress"),delete o.stop,r.call(t,a,o)),!i&&o&&o.empty.fire()},_queueHooks:function(t,e){var n=e+"queueHooks";return Rt.get(t,n)||Rt.access(t,n,{empty:gt.Callbacks("once memory").add(function(){Rt.remove(t,[e+"queue",n])})})}}),gt.fn.extend({queue:function(t,e){var n=2;return"string"!=typeof t&&(e=t,t="fx",n--),arguments.length<n?gt.queue(this[0],t):void 0===e?this:this.each(function(){var n=gt.queue(this,t,e);gt._queueHooks(this,t),"fx"===t&&"inprogress"!==n[0]&&gt.dequeue(this,t)})},dequeue:function(t){return this.each(function(){gt.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var n,i=1,r=gt.Deferred(),o=this,a=this.length,s=function(){--i||r.resolveWith(o,[o])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";a--;)n=Rt.get(o[a],t+"queueHooks"),n&&n.empty&&(i++,n.empty.add(s));return s(),r.promise(e)}});var Ht=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,Bt=new RegExp("^(?:([+-])=|)("+Ht+")([a-z%]*)$","i"),Vt=["Top","Right","Bottom","Left"],jt=function(t,e){return t=e||t,"none"===t.style.display||""===t.style.display&&gt.contains(t.ownerDocument,t)&&"none"===gt.css(t,"display")},$t=function(t,e,n,i){var r,o,a={};for(o in e)a[o]=t.style[o],t.style[o]=e[o];r=n.apply(t,i||[]);for(o in e)t.style[o]=a[o];return r},Yt={};gt.fn.extend({show:function(){return v(this,!0)},hide:function(){return v(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){jt(this)?gt(this).show():gt(this).hide()})}});var qt=/^(?:checkbox|radio)$/i,Ut=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Gt=/^$|\/(?:java|ecma)script/i,Zt={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};Zt.optgroup=Zt.option,Zt.tbody=Zt.tfoot=Zt.colgroup=Zt.caption=Zt.thead,Zt.th=Zt.td;var Xt=/<|&#?\w+;/;!function(){var t=nt.createDocumentFragment(),e=t.appendChild(nt.createElement("div")),n=nt.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),e.appendChild(n),ft.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML="<textarea>x</textarea>",ft.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var Qt=nt.documentElement,Jt=/^key/,Kt=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,te=/^([^.]*)(?:\.(.+)|)/;gt.event={global:{},add:function(t,e,n,i,r){var o,a,s,l,u,c,d,h,f,p,g,m=Rt.get(t);if(m)for(n.handler&&(o=n,n=o.handler,r=o.selector),r&&gt.find.matchesSelector(Qt,r),n.guid||(n.guid=gt.guid++),(l=m.events)||(l=m.events={}),(a=m.handle)||(a=m.handle=function(e){return"undefined"!=typeof gt&&gt.event.triggered!==e.type?gt.event.dispatch.apply(t,arguments):void 0}),e=(e||"").match(It)||[""],u=e.length;u--;)s=te.exec(e[u])||[],f=g=s[1],p=(s[2]||"").split(".").sort(),f&&(d=gt.event.special[f]||{},f=(r?d.delegateType:d.bindType)||f,d=gt.event.special[f]||{},c=gt.extend({type:f,origType:g,data:i,handler:n,guid:n.guid,selector:r,needsContext:r&&gt.expr.match.needsContext.test(r),namespace:p.join(".")},o),(h=l[f])||(h=l[f]=[],h.delegateCount=0,d.setup&&d.setup.call(t,i,p,a)!==!1||t.addEventListener&&t.addEventListener(f,a)),d.add&&(d.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),r?h.splice(h.delegateCount++,0,c):h.push(c),gt.event.global[f]=!0)},remove:function(t,e,n,i,r){var o,a,s,l,u,c,d,h,f,p,g,m=Rt.hasData(t)&&Rt.get(t);if(m&&(l=m.events)){for(e=(e||"").match(It)||[""],u=e.length;u--;)if(s=te.exec(e[u])||[],f=g=s[1],p=(s[2]||"").split(".").sort(),f){for(d=gt.event.special[f]||{},f=(i?d.delegateType:d.bindType)||f,h=l[f]||[],s=s[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=h.length;o--;)c=h[o],!r&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||i&&i!==c.selector&&("**"!==i||!c.selector)||(h.splice(o,1),c.selector&&h.delegateCount--,d.remove&&d.remove.call(t,c));a&&!h.length&&(d.teardown&&d.teardown.call(t,p,m.handle)!==!1||gt.removeEvent(t,f,m.handle),delete l[f])}else for(f in l)gt.event.remove(t,f+e[u],n,i,!0);gt.isEmptyObject(l)&&Rt.remove(t,"handle events")}},dispatch:function(t){var e,n,i,r,o,a,s=gt.event.fix(t),l=new Array(arguments.length),u=(Rt.get(this,"events")||{})[s.type]||[],c=gt.event.special[s.type]||{};for(l[0]=s,e=1;e<arguments.length;e++)l[e]=arguments[e];if(s.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,s)!==!1){for(a=gt.event.handlers.call(this,s,u),e=0;(r=a[e++])&&!s.isPropagationStopped();)for(s.currentTarget=r.elem,n=0;(o=r.handlers[n++])&&!s.isImmediatePropagationStopped();)s.rnamespace&&!s.rnamespace.test(o.namespace)||(s.handleObj=o,s.data=o.data,i=((gt.event.special[o.origType]||{}).handle||o.handler).apply(r.elem,l),void 0!==i&&(s.result=i)===!1&&(s.preventDefault(),s.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,s),s.result}},handlers:function(t,e){var n,i,r,o,a,s=[],l=e.delegateCount,u=t.target;if(l&&u.nodeType&&!("click"===t.type&&t.button>=1))for(;u!==this;u=u.parentNode||this)if(1===u.nodeType&&("click"!==t.type||u.disabled!==!0)){for(o=[],a={},n=0;n<l;n++)i=e[n],r=i.selector+" ",void 0===a[r]&&(a[r]=i.needsContext?gt(r,this).index(u)>-1:gt.find(r,this,null,[u]).length),a[r]&&o.push(i);o.length&&s.push({elem:u,handlers:o})}return u=this,l<e.length&&s.push({elem:u,handlers:e.slice(l)}),s},addProp:function(t,e){Object.defineProperty(gt.Event.prototype,t,{enumerable:!0,configurable:!0,get:gt.isFunction(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[gt.expando]?t:new gt.Event(t)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==k()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===k()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&r(this,"input"))return this.click(),!1},_default:function(t){return r(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},gt.removeEvent=function(t,e,n){t.removeEventListener&&t.removeEventListener(e,n)},gt.Event=function(t,e){return this instanceof gt.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?_:w,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&gt.extend(this,e),this.timeStamp=t&&t.timeStamp||gt.now(),void(this[gt.expando]=!0)):new gt.Event(t,e)},gt.Event.prototype={constructor:gt.Event,isDefaultPrevented:w,isPropagationStopped:w,isImmediatePropagationStopped:w,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=_,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=_,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=_,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},gt.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&Jt.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&Kt.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},gt.event.addProp),gt.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){gt.event.special[t]={delegateType:e,bindType:e,handle:function(t){var n,i=this,r=t.relatedTarget,o=t.handleObj;return r&&(r===i||gt.contains(i,r))||(t.type=o.origType,n=o.handler.apply(this,arguments),t.type=e),n}}}),gt.fn.extend({on:function(t,e,n,i){return S(this,t,e,n,i)},one:function(t,e,n,i){return S(this,t,e,n,i,1)},off:function(t,e,n){var i,r;if(t&&t.preventDefault&&t.handleObj)return i=t.handleObj,gt(t.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof t){for(r in t)this.off(r,e,t[r]);return this}return e!==!1&&"function"!=typeof e||(n=e,e=void 0),n===!1&&(n=w),this.each(function(){gt.event.remove(this,t,n,e)})}});var ee=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,ne=/<script|<style|<link/i,ie=/checked\s*(?:[^=]|=\s*.checked.)/i,re=/^true\/(.*)/,oe=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;gt.extend({htmlPrefilter:function(t){return t.replace(ee,"<$1></$2>")},clone:function(t,e,n){var i,r,o,a,s=t.cloneNode(!0),l=gt.contains(t.ownerDocument,t);if(!(ft.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||gt.isXMLDoc(t)))for(a=y(s),o=y(t),i=0,r=o.length;i<r;i++)P(o[i],a[i]);if(e)if(n)for(o=o||y(t),a=a||y(s),i=0,r=o.length;i<r;i++)T(o[i],a[i]);else T(t,s);return a=y(s,"script"),a.length>0&&b(a,!l&&y(t,"script")),s},cleanData:function(t){for(var e,n,i,r=gt.event.special,o=0;void 0!==(n=t[o]);o++)if(Et(n)){if(e=n[Rt.expando]){if(e.events)for(i in e.events)r[i]?gt.event.remove(n,i):gt.removeEvent(n,i,e.handle);n[Rt.expando]=void 0}n[Nt.expando]&&(n[Nt.expando]=void 0)}}}),gt.fn.extend({detach:function(t){return I(this,t,!0)},remove:function(t){return I(this,t)},text:function(t){return Lt(this,function(t){return void 0===t?gt.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return A(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=C(this,t);e.appendChild(t)}})},prepend:function(){return A(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=C(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return A(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return A(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(gt.cleanData(y(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return gt.clone(this,t,e)})},html:function(t){return Lt(this,function(t){var e=this[0]||{},n=0,i=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!ne.test(t)&&!Zt[(Ut.exec(t)||["",""])[1].toLowerCase()]){t=gt.htmlPrefilter(t);try{for(;n<i;n++)e=this[n]||{},1===e.nodeType&&(gt.cleanData(y(e,!1)),e.innerHTML=t);e=0}catch(r){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return A(this,arguments,function(e){var n=this.parentNode;gt.inArray(this,t)<0&&(gt.cleanData(y(this)),n&&n.replaceChild(e,this))},t)}}),gt.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){gt.fn[t]=function(t){for(var n,i=[],r=gt(t),o=r.length-1,a=0;a<=o;a++)n=a===o?this:this.clone(!0),gt(r[a])[e](n),at.apply(i,n.get());return this.pushStack(i)}});var ae=/^margin/,se=new RegExp("^("+Ht+")(?!px)[a-z%]+$","i"),le=function(e){var n=e.ownerDocument.defaultView;return n&&n.opener||(n=t),n.getComputedStyle(e)};!function(){function e(){if(s){s.style.cssText="box-sizing:border-box;position:relative;display:block;margin:auto;border:1px;padding:1px;top:1%;width:50%",s.innerHTML="",Qt.appendChild(a);var e=t.getComputedStyle(s);n="1%"!==e.top,o="2px"===e.marginLeft,i="4px"===e.width,s.style.marginRight="50%",r="4px"===e.marginRight,Qt.removeChild(a),s=null}}var n,i,r,o,a=nt.createElement("div"),s=nt.createElement("div");s.style&&(s.style.backgroundClip="content-box",s.cloneNode(!0).style.backgroundClip="",ft.clearCloneStyle="content-box"===s.style.backgroundClip,a.style.cssText="border:0;width:8px;height:0;top:0;left:-9999px;padding:0;margin-top:1px;position:absolute",a.appendChild(s),gt.extend(ft,{pixelPosition:function(){return e(),n},boxSizingReliable:function(){return e(),i},pixelMarginRight:function(){return e(),r},reliableMarginLeft:function(){return e(),o}}))}();var ue=/^(none|table(?!-c[ea]).+)/,ce=/^--/,de={position:"absolute",visibility:"hidden",display:"block"},he={letterSpacing:"0",fontWeight:"400"},fe=["Webkit","Moz","ms"],pe=nt.createElement("div").style;gt.extend({cssHooks:{opacity:{get:function(t,e){if(e){var n=O(t,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{"float":"cssFloat"},style:function(t,e,n,i){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var r,o,a,s=gt.camelCase(e),l=ce.test(e),u=t.style;return l||(e=E(s)),a=gt.cssHooks[e]||gt.cssHooks[s],void 0===n?a&&"get"in a&&void 0!==(r=a.get(t,!1,i))?r:u[e]:(o=typeof n,"string"===o&&(r=Bt.exec(n))&&r[1]&&(n=g(t,e,r),o="number"),void(null!=n&&n===n&&("number"===o&&(n+=r&&r[3]||(gt.cssNumber[s]?"":"px")),ft.clearCloneStyle||""!==n||0!==e.indexOf("background")||(u[e]="inherit"),a&&"set"in a&&void 0===(n=a.set(t,n,i))||(l?u.setProperty(e,n):u[e]=n))))}},css:function(t,e,n,i){var r,o,a,s=gt.camelCase(e),l=ce.test(e);return l||(e=E(s)),a=gt.cssHooks[e]||gt.cssHooks[s],a&&"get"in a&&(r=a.get(t,!0,n)),void 0===r&&(r=O(t,e,i)),"normal"===r&&e in he&&(r=he[e]),""===n||n?(o=parseFloat(r),n===!0||isFinite(o)?o||0:r):r}}),gt.each(["height","width"],function(t,e){gt.cssHooks[e]={get:function(t,n,i){if(n)return!ue.test(gt.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?W(t,e,i):$t(t,de,function(){return W(t,e,i)})},set:function(t,n,i){var r,o=i&&le(t),a=i&&N(t,e,i,"border-box"===gt.css(t,"boxSizing",!1,o),o);return a&&(r=Bt.exec(n))&&"px"!==(r[3]||"px")&&(t.style[e]=n,n=gt.css(t,e)),R(t,n,a)}}}),gt.cssHooks.marginLeft=F(ft.reliableMarginLeft,function(t,e){if(e)return(parseFloat(O(t,"marginLeft"))||t.getBoundingClientRect().left-$t(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),gt.each({margin:"",padding:"",border:"Width"},function(t,e){gt.cssHooks[t+e]={expand:function(n){for(var i=0,r={},o="string"==typeof n?n.split(" "):[n];i<4;i++)r[t+Vt[i]+e]=o[i]||o[i-2]||o[0];return r}},ae.test(t)||(gt.cssHooks[t+e].set=R)}),gt.fn.extend({css:function(t,e){return Lt(this,function(t,e,n){var i,r,o={},a=0;if(Array.isArray(e)){
for(i=le(t),r=e.length;a<r;a++)o[e[a]]=gt.css(t,e[a],!1,i);return o}return void 0!==n?gt.style(t,e,n):gt.css(t,e)},t,e,arguments.length>1)}}),gt.Tween=z,z.prototype={constructor:z,init:function(t,e,n,i,r,o){this.elem=t,this.prop=n,this.easing=r||gt.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=i,this.unit=o||(gt.cssNumber[n]?"":"px")},cur:function(){var t=z.propHooks[this.prop];return t&&t.get?t.get(this):z.propHooks._default.get(this)},run:function(t){var e,n=z.propHooks[this.prop];return this.options.duration?this.pos=e=gt.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):z.propHooks._default.set(this),this}},z.prototype.init.prototype=z.prototype,z.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=gt.css(t.elem,t.prop,""),e&&"auto"!==e?e:0)},set:function(t){gt.fx.step[t.prop]?gt.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[gt.cssProps[t.prop]]&&!gt.cssHooks[t.prop]?t.elem[t.prop]=t.now:gt.style(t.elem,t.prop,t.now+t.unit)}}},z.propHooks.scrollTop=z.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},gt.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},gt.fx=z.prototype.init,gt.fx.step={};var ge,me,ve=/^(?:toggle|show|hide)$/,ye=/queueHooks$/;gt.Animation=gt.extend(q,{tweeners:{"*":[function(t,e){var n=this.createTween(t,e);return g(n.elem,t,Bt.exec(e),n),n}]},tweener:function(t,e){gt.isFunction(t)?(e=t,t=["*"]):t=t.match(It);for(var n,i=0,r=t.length;i<r;i++)n=t[i],q.tweeners[n]=q.tweeners[n]||[],q.tweeners[n].unshift(e)},prefilters:[$],prefilter:function(t,e){e?q.prefilters.unshift(t):q.prefilters.push(t)}}),gt.speed=function(t,e,n){var i=t&&"object"==typeof t?gt.extend({},t):{complete:n||!n&&e||gt.isFunction(t)&&t,duration:t,easing:n&&e||e&&!gt.isFunction(e)&&e};return gt.fx.off?i.duration=0:"number"!=typeof i.duration&&(i.duration in gt.fx.speeds?i.duration=gt.fx.speeds[i.duration]:i.duration=gt.fx.speeds._default),null!=i.queue&&i.queue!==!0||(i.queue="fx"),i.old=i.complete,i.complete=function(){gt.isFunction(i.old)&&i.old.call(this),i.queue&&gt.dequeue(this,i.queue)},i},gt.fn.extend({fadeTo:function(t,e,n,i){return this.filter(jt).css("opacity",0).show().end().animate({opacity:e},t,n,i)},animate:function(t,e,n,i){var r=gt.isEmptyObject(t),o=gt.speed(e,n,i),a=function(){var e=q(this,gt.extend({},t),o);(r||Rt.get(this,"finish"))&&e.stop(!0)};return a.finish=a,r||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(t,e,n){var i=function(t){var e=t.stop;delete t.stop,e(n)};return"string"!=typeof t&&(n=e,e=t,t=void 0),e&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var e=!0,r=null!=t&&t+"queueHooks",o=gt.timers,a=Rt.get(this);if(r)a[r]&&a[r].stop&&i(a[r]);else for(r in a)a[r]&&a[r].stop&&ye.test(r)&&i(a[r]);for(r=o.length;r--;)o[r].elem!==this||null!=t&&o[r].queue!==t||(o[r].anim.stop(n),e=!1,o.splice(r,1));!e&&n||gt.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var e,n=Rt.get(this),i=n[t+"queue"],r=n[t+"queueHooks"],o=gt.timers,a=i?i.length:0;for(n.finish=!0,gt.queue(this,t,[]),r&&r.stop&&r.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===t&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<a;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete n.finish})}}),gt.each(["toggle","show","hide"],function(t,e){var n=gt.fn[e];gt.fn[e]=function(t,i,r){return null==t||"boolean"==typeof t?n.apply(this,arguments):this.animate(V(e,!0),t,i,r)}}),gt.each({slideDown:V("show"),slideUp:V("hide"),slideToggle:V("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){gt.fn[t]=function(t,n,i){return this.animate(e,t,n,i)}}),gt.timers=[],gt.fx.tick=function(){var t,e=0,n=gt.timers;for(ge=gt.now();e<n.length;e++)t=n[e],t()||n[e]!==t||n.splice(e--,1);n.length||gt.fx.stop(),ge=void 0},gt.fx.timer=function(t){gt.timers.push(t),gt.fx.start()},gt.fx.interval=13,gt.fx.start=function(){me||(me=!0,H())},gt.fx.stop=function(){me=null},gt.fx.speeds={slow:600,fast:200,_default:400},gt.fn.delay=function(e,n){return e=gt.fx?gt.fx.speeds[e]||e:e,n=n||"fx",this.queue(n,function(n,i){var r=t.setTimeout(n,e);i.stop=function(){t.clearTimeout(r)}})},function(){var t=nt.createElement("input"),e=nt.createElement("select"),n=e.appendChild(nt.createElement("option"));t.type="checkbox",ft.checkOn=""!==t.value,ft.optSelected=n.selected,t=nt.createElement("input"),t.value="t",t.type="radio",ft.radioValue="t"===t.value}();var be,xe=gt.expr.attrHandle;gt.fn.extend({attr:function(t,e){return Lt(this,gt.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){gt.removeAttr(this,t)})}}),gt.extend({attr:function(t,e,n){var i,r,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof t.getAttribute?gt.prop(t,e,n):(1===o&&gt.isXMLDoc(t)||(r=gt.attrHooks[e.toLowerCase()]||(gt.expr.match.bool.test(e)?be:void 0)),void 0!==n?null===n?void gt.removeAttr(t,e):r&&"set"in r&&void 0!==(i=r.set(t,n,e))?i:(t.setAttribute(e,n+""),n):r&&"get"in r&&null!==(i=r.get(t,e))?i:(i=gt.find.attr(t,e),null==i?void 0:i))},attrHooks:{type:{set:function(t,e){if(!ft.radioValue&&"radio"===e&&r(t,"input")){var n=t.value;return t.setAttribute("type",e),n&&(t.value=n),e}}}},removeAttr:function(t,e){var n,i=0,r=e&&e.match(It);if(r&&1===t.nodeType)for(;n=r[i++];)t.removeAttribute(n)}}),be={set:function(t,e,n){return e===!1?gt.removeAttr(t,n):t.setAttribute(n,n),n}},gt.each(gt.expr.match.bool.source.match(/\w+/g),function(t,e){var n=xe[e]||gt.find.attr;xe[e]=function(t,e,i){var r,o,a=e.toLowerCase();return i||(o=xe[a],xe[a]=r,r=null!=n(t,e,i)?a:null,xe[a]=o),r}});var _e=/^(?:input|select|textarea|button)$/i,we=/^(?:a|area)$/i;gt.fn.extend({prop:function(t,e){return Lt(this,gt.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[gt.propFix[t]||t]})}}),gt.extend({prop:function(t,e,n){var i,r,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&gt.isXMLDoc(t)||(e=gt.propFix[e]||e,r=gt.propHooks[e]),void 0!==n?r&&"set"in r&&void 0!==(i=r.set(t,n,e))?i:t[e]=n:r&&"get"in r&&null!==(i=r.get(t,e))?i:t[e]},propHooks:{tabIndex:{get:function(t){var e=gt.find.attr(t,"tabindex");return e?parseInt(e,10):_e.test(t.nodeName)||we.test(t.nodeName)&&t.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),ft.optSelected||(gt.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),gt.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){gt.propFix[this.toLowerCase()]=this}),gt.fn.extend({addClass:function(t){var e,n,i,r,o,a,s,l=0;if(gt.isFunction(t))return this.each(function(e){gt(this).addClass(t.call(this,e,G(this)))});if("string"==typeof t&&t)for(e=t.match(It)||[];n=this[l++];)if(r=G(n),i=1===n.nodeType&&" "+U(r)+" "){for(a=0;o=e[a++];)i.indexOf(" "+o+" ")<0&&(i+=o+" ");s=U(i),r!==s&&n.setAttribute("class",s)}return this},removeClass:function(t){var e,n,i,r,o,a,s,l=0;if(gt.isFunction(t))return this.each(function(e){gt(this).removeClass(t.call(this,e,G(this)))});if(!arguments.length)return this.attr("class","");if("string"==typeof t&&t)for(e=t.match(It)||[];n=this[l++];)if(r=G(n),i=1===n.nodeType&&" "+U(r)+" "){for(a=0;o=e[a++];)for(;i.indexOf(" "+o+" ")>-1;)i=i.replace(" "+o+" "," ");s=U(i),r!==s&&n.setAttribute("class",s)}return this},toggleClass:function(t,e){var n=typeof t;return"boolean"==typeof e&&"string"===n?e?this.addClass(t):this.removeClass(t):gt.isFunction(t)?this.each(function(n){gt(this).toggleClass(t.call(this,n,G(this),e),e)}):this.each(function(){var e,i,r,o;if("string"===n)for(i=0,r=gt(this),o=t.match(It)||[];e=o[i++];)r.hasClass(e)?r.removeClass(e):r.addClass(e);else void 0!==t&&"boolean"!==n||(e=G(this),e&&Rt.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||t===!1?"":Rt.get(this,"__className__")||""))})},hasClass:function(t){var e,n,i=0;for(e=" "+t+" ";n=this[i++];)if(1===n.nodeType&&(" "+U(G(n))+" ").indexOf(e)>-1)return!0;return!1}});var ke=/\r/g;gt.fn.extend({val:function(t){var e,n,i,r=this[0];return arguments.length?(i=gt.isFunction(t),this.each(function(n){var r;1===this.nodeType&&(r=i?t.call(this,n,gt(this).val()):t,null==r?r="":"number"==typeof r?r+="":Array.isArray(r)&&(r=gt.map(r,function(t){return null==t?"":t+""})),e=gt.valHooks[this.type]||gt.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,r,"value")||(this.value=r))})):r?(e=gt.valHooks[r.type]||gt.valHooks[r.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(n=e.get(r,"value"))?n:(n=r.value,"string"==typeof n?n.replace(ke,""):null==n?"":n)):void 0}}),gt.extend({valHooks:{option:{get:function(t){var e=gt.find.attr(t,"value");return null!=e?e:U(gt.text(t))}},select:{get:function(t){var e,n,i,o=t.options,a=t.selectedIndex,s="select-one"===t.type,l=s?null:[],u=s?a+1:o.length;for(i=a<0?u:s?a:0;i<u;i++)if(n=o[i],(n.selected||i===a)&&!n.disabled&&(!n.parentNode.disabled||!r(n.parentNode,"optgroup"))){if(e=gt(n).val(),s)return e;l.push(e)}return l},set:function(t,e){for(var n,i,r=t.options,o=gt.makeArray(e),a=r.length;a--;)i=r[a],(i.selected=gt.inArray(gt.valHooks.option.get(i),o)>-1)&&(n=!0);return n||(t.selectedIndex=-1),o}}}}),gt.each(["radio","checkbox"],function(){gt.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=gt.inArray(gt(t).val(),e)>-1}},ft.checkOn||(gt.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})});var Se=/^(?:focusinfocus|focusoutblur)$/;gt.extend(gt.event,{trigger:function(e,n,i,r){var o,a,s,l,u,c,d,h=[i||nt],f=ct.call(e,"type")?e.type:e,p=ct.call(e,"namespace")?e.namespace.split("."):[];if(a=s=i=i||nt,3!==i.nodeType&&8!==i.nodeType&&!Se.test(f+gt.event.triggered)&&(f.indexOf(".")>-1&&(p=f.split("."),f=p.shift(),p.sort()),u=f.indexOf(":")<0&&"on"+f,e=e[gt.expando]?e:new gt.Event(f,"object"==typeof e&&e),e.isTrigger=r?2:3,e.namespace=p.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),n=null==n?[e]:gt.makeArray(n,[e]),d=gt.event.special[f]||{},r||!d.trigger||d.trigger.apply(i,n)!==!1)){if(!r&&!d.noBubble&&!gt.isWindow(i)){for(l=d.delegateType||f,Se.test(l+f)||(a=a.parentNode);a;a=a.parentNode)h.push(a),s=a;s===(i.ownerDocument||nt)&&h.push(s.defaultView||s.parentWindow||t)}for(o=0;(a=h[o++])&&!e.isPropagationStopped();)e.type=o>1?l:d.bindType||f,c=(Rt.get(a,"events")||{})[e.type]&&Rt.get(a,"handle"),c&&c.apply(a,n),c=u&&a[u],c&&c.apply&&Et(a)&&(e.result=c.apply(a,n),e.result===!1&&e.preventDefault());return e.type=f,r||e.isDefaultPrevented()||d._default&&d._default.apply(h.pop(),n)!==!1||!Et(i)||u&&gt.isFunction(i[f])&&!gt.isWindow(i)&&(s=i[u],s&&(i[u]=null),gt.event.triggered=f,i[f](),gt.event.triggered=void 0,s&&(i[u]=s)),e.result}},simulate:function(t,e,n){var i=gt.extend(new gt.Event,n,{type:t,isSimulated:!0});gt.event.trigger(i,null,e)}}),gt.fn.extend({trigger:function(t,e){return this.each(function(){gt.event.trigger(t,e,this)})},triggerHandler:function(t,e){var n=this[0];if(n)return gt.event.trigger(t,e,n,!0)}}),gt.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(t,e){gt.fn[e]=function(t,n){return arguments.length>0?this.on(e,null,t,n):this.trigger(e)}}),gt.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),ft.focusin="onfocusin"in t,ft.focusin||gt.each({focus:"focusin",blur:"focusout"},function(t,e){var n=function(t){gt.event.simulate(e,t.target,gt.event.fix(t))};gt.event.special[e]={setup:function(){var i=this.ownerDocument||this,r=Rt.access(i,e);r||i.addEventListener(t,n,!0),Rt.access(i,e,(r||0)+1)},teardown:function(){var i=this.ownerDocument||this,r=Rt.access(i,e)-1;r?Rt.access(i,e,r):(i.removeEventListener(t,n,!0),Rt.remove(i,e))}}});var Ce=t.location,Me=gt.now(),De=/\?/;gt.parseXML=function(e){var n;if(!e||"string"!=typeof e)return null;try{n=(new t.DOMParser).parseFromString(e,"text/xml")}catch(i){n=void 0}return n&&!n.getElementsByTagName("parsererror").length||gt.error("Invalid XML: "+e),n};var Te=/\[\]$/,Pe=/\r?\n/g,Ae=/^(?:submit|button|image|reset|file)$/i,Ie=/^(?:input|select|textarea|keygen)/i;gt.param=function(t,e){var n,i=[],r=function(t,e){var n=gt.isFunction(e)?e():e;i[i.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==n?"":n)};if(Array.isArray(t)||t.jquery&&!gt.isPlainObject(t))gt.each(t,function(){r(this.name,this.value)});else for(n in t)Z(n,t[n],e,r);return i.join("&")},gt.fn.extend({serialize:function(){return gt.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=gt.prop(this,"elements");return t?gt.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!gt(this).is(":disabled")&&Ie.test(this.nodeName)&&!Ae.test(t)&&(this.checked||!qt.test(t))}).map(function(t,e){var n=gt(this).val();return null==n?null:Array.isArray(n)?gt.map(n,function(t){return{name:e.name,value:t.replace(Pe,"\r\n")}}):{name:e.name,value:n.replace(Pe,"\r\n")}}).get()}});var Oe=/%20/g,Fe=/#.*$/,Le=/([?&])_=[^&]*/,Ee=/^(.*?):[ \t]*([^\r\n]*)$/gm,Re=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Ne=/^(?:GET|HEAD)$/,We=/^\/\//,ze={},He={},Be="*/".concat("*"),Ve=nt.createElement("a");Ve.href=Ce.href,gt.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ce.href,type:"GET",isLocal:Re.test(Ce.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":Be,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":gt.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?J(J(t,gt.ajaxSettings),e):J(gt.ajaxSettings,t)},ajaxPrefilter:X(ze),ajaxTransport:X(He),ajax:function(e,n){function i(e,n,i,s){var u,h,f,x,_,w=n;c||(c=!0,l&&t.clearTimeout(l),r=void 0,a=s||"",k.readyState=e>0?4:0,u=e>=200&&e<300||304===e,i&&(x=K(p,k,i)),x=tt(p,x,k,u),u?(p.ifModified&&(_=k.getResponseHeader("Last-Modified"),_&&(gt.lastModified[o]=_),_=k.getResponseHeader("etag"),_&&(gt.etag[o]=_)),204===e||"HEAD"===p.type?w="nocontent":304===e?w="notmodified":(w=x.state,h=x.data,f=x.error,u=!f)):(f=w,!e&&w||(w="error",e<0&&(e=0))),k.status=e,k.statusText=(n||w)+"",u?v.resolveWith(g,[h,w,k]):v.rejectWith(g,[k,w,f]),k.statusCode(b),b=void 0,d&&m.trigger(u?"ajaxSuccess":"ajaxError",[k,p,u?h:f]),y.fireWith(g,[k,w]),d&&(m.trigger("ajaxComplete",[k,p]),--gt.active||gt.event.trigger("ajaxStop")))}"object"==typeof e&&(n=e,e=void 0),n=n||{};var r,o,a,s,l,u,c,d,h,f,p=gt.ajaxSetup({},n),g=p.context||p,m=p.context&&(g.nodeType||g.jquery)?gt(g):gt.event,v=gt.Deferred(),y=gt.Callbacks("once memory"),b=p.statusCode||{},x={},_={},w="canceled",k={readyState:0,getResponseHeader:function(t){var e;if(c){if(!s)for(s={};e=Ee.exec(a);)s[e[1].toLowerCase()]=e[2];e=s[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return c?a:null},setRequestHeader:function(t,e){return null==c&&(t=_[t.toLowerCase()]=_[t.toLowerCase()]||t,x[t]=e),this},overrideMimeType:function(t){return null==c&&(p.mimeType=t),this},statusCode:function(t){var e;if(t)if(c)k.always(t[k.status]);else for(e in t)b[e]=[b[e],t[e]];return this},abort:function(t){var e=t||w;return r&&r.abort(e),i(0,e),this}};if(v.promise(k),p.url=((e||p.url||Ce.href)+"").replace(We,Ce.protocol+"//"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=(p.dataType||"*").toLowerCase().match(It)||[""],null==p.crossDomain){u=nt.createElement("a");try{u.href=p.url,u.href=u.href,p.crossDomain=Ve.protocol+"//"+Ve.host!=u.protocol+"//"+u.host}catch(S){p.crossDomain=!0}}if(p.data&&p.processData&&"string"!=typeof p.data&&(p.data=gt.param(p.data,p.traditional)),Q(ze,p,n,k),c)return k;d=gt.event&&p.global,d&&0===gt.active++&&gt.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!Ne.test(p.type),o=p.url.replace(Fe,""),p.hasContent?p.data&&p.processData&&0===(p.contentType||"").indexOf("application/x-www-form-urlencoded")&&(p.data=p.data.replace(Oe,"+")):(f=p.url.slice(o.length),p.data&&(o+=(De.test(o)?"&":"?")+p.data,delete p.data),p.cache===!1&&(o=o.replace(Le,"$1"),f=(De.test(o)?"&":"?")+"_="+Me++ +f),p.url=o+f),p.ifModified&&(gt.lastModified[o]&&k.setRequestHeader("If-Modified-Since",gt.lastModified[o]),gt.etag[o]&&k.setRequestHeader("If-None-Match",gt.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&k.setRequestHeader("Content-Type",p.contentType),k.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+Be+"; q=0.01":""):p.accepts["*"]);for(h in p.headers)k.setRequestHeader(h,p.headers[h]);if(p.beforeSend&&(p.beforeSend.call(g,k,p)===!1||c))return k.abort();if(w="abort",y.add(p.complete),k.done(p.success),k.fail(p.error),r=Q(He,p,n,k)){if(k.readyState=1,d&&m.trigger("ajaxSend",[k,p]),c)return k;p.async&&p.timeout>0&&(l=t.setTimeout(function(){k.abort("timeout")},p.timeout));try{c=!1,r.send(x,i)}catch(S){if(c)throw S;i(-1,S)}}else i(-1,"No Transport");return k},getJSON:function(t,e,n){return gt.get(t,e,n,"json")},getScript:function(t,e){return gt.get(t,void 0,e,"script")}}),gt.each(["get","post"],function(t,e){gt[e]=function(t,n,i,r){return gt.isFunction(n)&&(r=r||i,i=n,n=void 0),gt.ajax(gt.extend({url:t,type:e,dataType:r,data:n,success:i},gt.isPlainObject(t)&&t))}}),gt._evalUrl=function(t){return gt.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},gt.fn.extend({wrapAll:function(t){var e;return this[0]&&(gt.isFunction(t)&&(t=t.call(this[0])),e=gt(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this},wrapInner:function(t){return gt.isFunction(t)?this.each(function(e){gt(this).wrapInner(t.call(this,e))}):this.each(function(){var e=gt(this),n=e.contents();n.length?n.wrapAll(t):e.append(t)})},wrap:function(t){var e=gt.isFunction(t);return this.each(function(n){gt(this).wrapAll(e?t.call(this,n):t)})},unwrap:function(t){return this.parent(t).not("body").each(function(){gt(this).replaceWith(this.childNodes)}),this}}),gt.expr.pseudos.hidden=function(t){return!gt.expr.pseudos.visible(t)},gt.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},gt.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(e){}};var je={0:200,1223:204},$e=gt.ajaxSettings.xhr();ft.cors=!!$e&&"withCredentials"in $e,ft.ajax=$e=!!$e,gt.ajaxTransport(function(e){var n,i;if(ft.cors||$e&&!e.crossDomain)return{send:function(r,o){var a,s=e.xhr();if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(a in e.xhrFields)s[a]=e.xhrFields[a];e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest");for(a in r)s.setRequestHeader(a,r[a]);n=function(t){return function(){n&&(n=i=s.onload=s.onerror=s.onabort=s.onreadystatechange=null,"abort"===t?s.abort():"error"===t?"number"!=typeof s.status?o(0,"error"):o(s.status,s.statusText):o(je[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=n(),i=s.onerror=n("error"),void 0!==s.onabort?s.onabort=i:s.onreadystatechange=function(){4===s.readyState&&t.setTimeout(function(){n&&i()})},n=n("abort");try{s.send(e.hasContent&&e.data||null)}catch(l){if(n)throw l}},abort:function(){n&&n()}}}),gt.ajaxPrefilter(function(t){t.crossDomain&&(t.contents.script=!1)}),gt.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return gt.globalEval(t),t}}}),gt.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),gt.ajaxTransport("script",function(t){if(t.crossDomain){var e,n;return{send:function(i,r){e=gt("<script>").prop({charset:t.scriptCharset,src:t.url}).on("load error",n=function(t){e.remove(),n=null,t&&r("error"===t.type?404:200,t.type)}),nt.head.appendChild(e[0])},abort:function(){n&&n()}}}});var Ye=[],qe=/(=)\?(?=&|$)|\?\?/;gt.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Ye.pop()||gt.expando+"_"+Me++;return this[t]=!0,t}}),gt.ajaxPrefilter("json jsonp",function(e,n,i){var r,o,a,s=e.jsonp!==!1&&(qe.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&qe.test(e.data)&&"data");if(s||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=gt.isFunction(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(qe,"$1"+r):e.jsonp!==!1&&(e.url+=(De.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return a||gt.error(r+" was not called"),a[0]},e.dataTypes[0]="json",o=t[r],t[r]=function(){a=arguments},i.always(function(){void 0===o?gt(t).removeProp(r):t[r]=o,e[r]&&(e.jsonpCallback=n.jsonpCallback,Ye.push(r)),a&&gt.isFunction(o)&&o(a[0]),a=o=void 0}),"script"}),ft.createHTMLDocument=function(){var t=nt.implementation.createHTMLDocument("").body;return t.innerHTML="<form></form><form></form>",2===t.childNodes.length}(),gt.parseHTML=function(t,e,n){if("string"!=typeof t)return[];"boolean"==typeof e&&(n=e,e=!1);var i,r,o;return e||(ft.createHTMLDocument?(e=nt.implementation.createHTMLDocument(""),i=e.createElement("base"),i.href=nt.location.href,e.head.appendChild(i)):e=nt),r=St.exec(t),o=!n&&[],r?[e.createElement(r[1])]:(r=x([t],e,o),o&&o.length&&gt(o).remove(),gt.merge([],r.childNodes))},gt.fn.load=function(t,e,n){var i,r,o,a=this,s=t.indexOf(" ");return s>-1&&(i=U(t.slice(s)),t=t.slice(0,s)),gt.isFunction(e)?(n=e,e=void 0):e&&"object"==typeof e&&(r="POST"),a.length>0&&gt.ajax({url:t,type:r||"GET",dataType:"html",data:e}).done(function(t){o=arguments,a.html(i?gt("<div>").append(gt.parseHTML(t)).find(i):t)}).always(n&&function(t,e){a.each(function(){n.apply(this,o||[t.responseText,e,t])})}),this},gt.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){gt.fn[e]=function(t){return this.on(e,t)}}),gt.expr.pseudos.animated=function(t){return gt.grep(gt.timers,function(e){return t===e.elem}).length},gt.offset={setOffset:function(t,e,n){var i,r,o,a,s,l,u,c=gt.css(t,"position"),d=gt(t),h={};"static"===c&&(t.style.position="relative"),s=d.offset(),o=gt.css(t,"top"),l=gt.css(t,"left"),u=("absolute"===c||"fixed"===c)&&(o+l).indexOf("auto")>-1,u?(i=d.position(),a=i.top,r=i.left):(a=parseFloat(o)||0,r=parseFloat(l)||0),gt.isFunction(e)&&(e=e.call(t,n,gt.extend({},s))),null!=e.top&&(h.top=e.top-s.top+a),null!=e.left&&(h.left=e.left-s.left+r),"using"in e?e.using.call(t,h):d.css(h)}},gt.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){gt.offset.setOffset(this,t,e)});var e,n,i,r,o=this[0];return o?o.getClientRects().length?(i=o.getBoundingClientRect(),e=o.ownerDocument,n=e.documentElement,r=e.defaultView,{top:i.top+r.pageYOffset-n.clientTop,left:i.left+r.pageXOffset-n.clientLeft}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,n=this[0],i={top:0,left:0};return"fixed"===gt.css(n,"position")?e=n.getBoundingClientRect():(t=this.offsetParent(),e=this.offset(),r(t[0],"html")||(i=t.offset()),i={top:i.top+gt.css(t[0],"borderTopWidth",!0),left:i.left+gt.css(t[0],"borderLeftWidth",!0)}),{top:e.top-i.top-gt.css(n,"marginTop",!0),left:e.left-i.left-gt.css(n,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===gt.css(t,"position");)t=t.offsetParent;return t||Qt})}}),gt.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var n="pageYOffset"===e;gt.fn[t]=function(i){return Lt(this,function(t,i,r){var o;return gt.isWindow(t)?o=t:9===t.nodeType&&(o=t.defaultView),void 0===r?o?o[e]:t[i]:void(o?o.scrollTo(n?o.pageXOffset:r,n?r:o.pageYOffset):t[i]=r)},t,i,arguments.length)}}),gt.each(["top","left"],function(t,e){gt.cssHooks[e]=F(ft.pixelPosition,function(t,n){if(n)return n=O(t,e),se.test(n)?gt(t).position()[e]+"px":n})}),gt.each({Height:"height",Width:"width"},function(t,e){gt.each({padding:"inner"+t,content:e,"":"outer"+t},function(n,i){gt.fn[i]=function(r,o){var a=arguments.length&&(n||"boolean"!=typeof r),s=n||(r===!0||o===!0?"margin":"border");return Lt(this,function(e,n,r){var o;return gt.isWindow(e)?0===i.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(o=e.documentElement,Math.max(e.body["scroll"+t],o["scroll"+t],e.body["offset"+t],o["offset"+t],o["client"+t])):void 0===r?gt.css(e,n,s):gt.style(e,n,r,s)},e,a?r:void 0,a)}})}),gt.fn.extend({bind:function(t,e,n){return this.on(t,null,e,n)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,n,i){return this.on(e,t,n,i)},undelegate:function(t,e,n){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",n)}}),gt.holdReady=function(t){t?gt.readyWait++:gt.ready(!0)},gt.isArray=Array.isArray,gt.parseJSON=JSON.parse,gt.nodeName=r,"function"==typeof define&&define.amd&&define("jquery",[],function(){return gt});var Ue=t.jQuery,Ge=t.$;return gt.noConflict=function(e){return t.$===gt&&(t.$=Ge),e&&t.jQuery===gt&&(t.jQuery=Ue),gt},e||(t.jQuery=t.$=gt),gt}),!function(t,e,n,i){function r(e,n){this.settings=null,this.options=t.extend({},r.Defaults,n),this.$element=t(e),this._handlers={},this._plugins={},this._supress={},this._current=null,this._speed=null,this._coordinates=[],this._breakpoint=null,this._width=null,this._items=[],this._clones=[],this._mergers=[],this._widths=[],this._invalidated={},this._pipe=[],this._drag={time:null,target:null,pointer:null,stage:{start:null,current:null},direction:null},this._states={current:{},tags:{initializing:["busy"],animating:["busy"],dragging:["interacting"]}},t.each(["onResize","onThrottledResize"],t.proxy(function(e,n){this._handlers[n]=t.proxy(this[n],this)},this)),t.each(r.Plugins,t.proxy(function(t,e){this._plugins[t.charAt(0).toLowerCase()+t.slice(1)]=new e(this)},this)),t.each(r.Workers,t.proxy(function(e,n){this._pipe.push({filter:n.filter,run:t.proxy(n.run,this)})},this)),this.setup(),this.initialize()}r.Defaults={items:3,loop:!1,center:!1,rewind:!1,mouseDrag:!0,touchDrag:!0,pullDrag:!0,freeDrag:!1,margin:0,stagePadding:0,merge:!1,mergeFit:!0,autoWidth:!1,startPosition:0,rtl:!1,smartSpeed:250,fluidSpeed:!1,dragEndSpeed:!1,responsive:{},responsiveRefreshRate:200,responsiveBaseElement:e,fallbackEasing:"swing",info:!1,nestedItemSelector:!1,itemElement:"div",stageElement:"div",refreshClass:"owl-refresh",loadedClass:"owl-loaded",loadingClass:"owl-loading",rtlClass:"owl-rtl",responsiveClass:"owl-responsive",dragClass:"owl-drag",itemClass:"owl-item",stageClass:"owl-stage",stageOuterClass:"owl-stage-outer",grabClass:"owl-grab"},r.Width={Default:"default",Inner:"inner",Outer:"outer"},r.Type={Event:"event",State:"state"},r.Plugins={},r.Workers=[{filter:["width","settings"],run:function(){this._width=this.$element.width()}},{filter:["width","items","settings"],run:function(t){t.current=this._items&&this._items[this.relative(this._current)]}},{filter:["items","settings"],run:function(){this.$stage.children(".cloned").remove()}},{filter:["width","items","settings"],run:function(t){var e=this.settings.margin||"",n=!this.settings.autoWidth,i=this.settings.rtl,r={width:"auto","margin-left":i?e:"","margin-right":i?"":e};!n&&this.$stage.children().css(r),t.css=r}},{filter:["width","items","settings"],run:function(t){var e=(this.width()/this.settings.items).toFixed(3)-this.settings.margin,n=null,i=this._items.length,r=!this.settings.autoWidth,o=[];for(t.items={merge:!1,width:e};i--;)n=this._mergers[i],n=this.settings.mergeFit&&Math.min(n,this.settings.items)||n,t.items.merge=n>1||t.items.merge,o[i]=r?e*n:this._items[i].width();this._widths=o}},{filter:["items","settings"],run:function(){var e=[],n=this._items,i=this.settings,r=Math.max(2*i.items,4),o=2*Math.ceil(n.length/2),a=i.loop&&n.length?i.rewind?r:Math.max(r,o):0,s="",l="";for(a/=2;a--;)e.push(this.normalize(e.length/2,!0)),s+=n[e[e.length-1]][0].outerHTML,e.push(this.normalize(n.length-1-(e.length-1)/2,!0)),l=n[e[e.length-1]][0].outerHTML+l;this._clones=e,t(s).addClass("cloned").appendTo(this.$stage),t(l).addClass("cloned").prependTo(this.$stage)}},{filter:["width","items","settings"],run:function(){for(var t=this.settings.rtl?1:-1,e=this._clones.length+this._items.length,n=-1,i=0,r=0,o=[];++n<e;)i=o[n-1]||0,r=this._widths[this.relative(n)]+this.settings.margin,o.push(i+r*t);this._coordinates=o}},{filter:["width","items","settings"],run:function(){var t=this.settings.stagePadding,e=this._coordinates,n={width:Math.ceil(Math.abs(e[e.length-1]))+2*t,"padding-left":t||"","padding-right":t||""};this.$stage.css(n)}},{filter:["width","items","settings"],run:function(t){var e=this._coordinates.length,n=!this.settings.autoWidth,i=this.$stage.children();if(n&&t.items.merge)for(;e--;)t.css.width=this._widths[this.relative(e)],i.eq(e).css(t.css);else n&&(t.css.width=t.items.width,i.css(t.css))}},{filter:["items"],run:function(){this._coordinates.length<1&&this.$stage.removeAttr("style")}},{filter:["width","items","settings"],run:function(t){t.current=t.current?this.$stage.children().index(t.current):0,t.current=Math.max(this.minimum(),Math.min(this.maximum(),t.current)),this.reset(t.current)}},{filter:["position"],run:function(){this.animate(this.coordinates(this._current))}},{filter:["width","position","items","settings"],run:function(){var t,e,n,i,r=this.settings.rtl?1:-1,o=2*this.settings.stagePadding,a=this.coordinates(this.current())+o,s=a+this.width()*r,l=[];for(n=0,i=this._coordinates.length;n<i;n++)t=this._coordinates[n-1]||0,e=Math.abs(this._coordinates[n])+o*r,(this.op(t,"<=",a)&&this.op(t,">",s)||this.op(e,"<",a)&&this.op(e,">",s))&&l.push(n);this.$stage.children(".active").removeClass("active"),this.$stage.children(":eq("+l.join("), :eq(")+")").addClass("active"),this.settings.center&&(this.$stage.children(".center").removeClass("center"),this.$stage.children().eq(this.current()).addClass("center"))}}],r.prototype.initialize=function(){if(this.enter("initializing"),this.trigger("initialize"),this.$element.toggleClass(this.settings.rtlClass,this.settings.rtl),this.settings.autoWidth&&!this.is("pre-loading")){var e,n,r;e=this.$element.find("img"),n=this.settings.nestedItemSelector?"."+this.settings.nestedItemSelector:i,r=this.$element.children(n).width(),e.length&&r<=0&&this.preloadAutoWidthImages(e)}this.$element.addClass(this.options.loadingClass),this.$stage=t("<"+this.settings.stageElement+' class="'+this.settings.stageClass+'"/>').wrap('<div class="'+this.settings.stageOuterClass+'"/>'),this.$element.append(this.$stage.parent()),this.replace(this.$element.children().not(this.$stage.parent())),this.$element.is(":visible")?this.refresh():this.invalidate("width"),this.$element.removeClass(this.options.loadingClass).addClass(this.options.loadedClass),this.registerEventHandlers(),this.leave("initializing"),this.trigger("initialized")},r.prototype.setup=function(){var e=this.viewport(),n=this.options.responsive,i=-1,r=null;n?(t.each(n,function(t){t<=e&&t>i&&(i=Number(t));
}),r=t.extend({},this.options,n[i]),"function"==typeof r.stagePadding&&(r.stagePadding=r.stagePadding()),delete r.responsive,r.responsiveClass&&this.$element.attr("class",this.$element.attr("class").replace(new RegExp("("+this.options.responsiveClass+"-)\\S+\\s","g"),"$1"+i))):r=t.extend({},this.options),this.trigger("change",{property:{name:"settings",value:r}}),this._breakpoint=i,this.settings=r,this.invalidate("settings"),this.trigger("changed",{property:{name:"settings",value:this.settings}})},r.prototype.optionsLogic=function(){this.settings.autoWidth&&(this.settings.stagePadding=!1,this.settings.merge=!1)},r.prototype.prepare=function(e){var n=this.trigger("prepare",{content:e});return n.data||(n.data=t("<"+this.settings.itemElement+"/>").addClass(this.options.itemClass).append(e)),this.trigger("prepared",{content:n.data}),n.data},r.prototype.update=function(){for(var e=0,n=this._pipe.length,i=t.proxy(function(t){return this[t]},this._invalidated),r={};e<n;)(this._invalidated.all||t.grep(this._pipe[e].filter,i).length>0)&&this._pipe[e].run(r),e++;this._invalidated={},!this.is("valid")&&this.enter("valid")},r.prototype.width=function(t){switch(t=t||r.Width.Default){case r.Width.Inner:case r.Width.Outer:return this._width;default:return this._width-2*this.settings.stagePadding+this.settings.margin}},r.prototype.refresh=function(){this.enter("refreshing"),this.trigger("refresh"),this.setup(),this.optionsLogic(),this.$element.addClass(this.options.refreshClass),this.update(),this.$element.removeClass(this.options.refreshClass),this.leave("refreshing"),this.trigger("refreshed")},r.prototype.onThrottledResize=function(){e.clearTimeout(this.resizeTimer),this.resizeTimer=e.setTimeout(this._handlers.onResize,this.settings.responsiveRefreshRate)},r.prototype.onResize=function(){return!!this._items.length&&this._width!==this.$element.width()&&!!this.$element.is(":visible")&&(this.enter("resizing"),this.trigger("resize").isDefaultPrevented()?(this.leave("resizing"),!1):(this.invalidate("width"),this.refresh(),this.leave("resizing"),void this.trigger("resized")))},r.prototype.registerEventHandlers=function(){t.support.transition&&this.$stage.on(t.support.transition.end+".owl.core",t.proxy(this.onTransitionEnd,this)),this.settings.responsive!==!1&&this.on(e,"resize",this._handlers.onThrottledResize),this.settings.mouseDrag&&(this.$element.addClass(this.options.dragClass),this.$stage.on("mousedown.owl.core",t.proxy(this.onDragStart,this)),this.$stage.on("dragstart.owl.core selectstart.owl.core",function(){return!1})),this.settings.touchDrag&&(this.$stage.on("touchstart.owl.core",t.proxy(this.onDragStart,this)),this.$stage.on("touchcancel.owl.core",t.proxy(this.onDragEnd,this)))},r.prototype.onDragStart=function(e){var i=null;3!==e.which&&(t.support.transform?(i=this.$stage.css("transform").replace(/.*\(|\)| /g,"").split(","),i={x:i[16===i.length?12:4],y:i[16===i.length?13:5]}):(i=this.$stage.position(),i={x:this.settings.rtl?i.left+this.$stage.width()-this.width()+this.settings.margin:i.left,y:i.top}),this.is("animating")&&(t.support.transform?this.animate(i.x):this.$stage.stop(),this.invalidate("position")),this.$element.toggleClass(this.options.grabClass,"mousedown"===e.type),this.speed(0),this._drag.time=(new Date).getTime(),this._drag.target=t(e.target),this._drag.stage.start=i,this._drag.stage.current=i,this._drag.pointer=this.pointer(e),t(n).on("mouseup.owl.core touchend.owl.core",t.proxy(this.onDragEnd,this)),t(n).one("mousemove.owl.core touchmove.owl.core",t.proxy(function(e){var i=this.difference(this._drag.pointer,this.pointer(e));t(n).on("mousemove.owl.core touchmove.owl.core",t.proxy(this.onDragMove,this)),Math.abs(i.x)<Math.abs(i.y)&&this.is("valid")||(e.preventDefault(),this.enter("dragging"),this.trigger("drag"))},this)))},r.prototype.onDragMove=function(t){var e=null,n=null,i=null,r=this.difference(this._drag.pointer,this.pointer(t)),o=this.difference(this._drag.stage.start,r);this.is("dragging")&&(t.preventDefault(),this.settings.loop?(e=this.coordinates(this.minimum()),n=this.coordinates(this.maximum()+1)-e,o.x=((o.x-e)%n+n)%n+e):(e=this.settings.rtl?this.coordinates(this.maximum()):this.coordinates(this.minimum()),n=this.settings.rtl?this.coordinates(this.minimum()):this.coordinates(this.maximum()),i=this.settings.pullDrag?-1*r.x/5:0,o.x=Math.max(Math.min(o.x,e+i),n+i)),this._drag.stage.current=o,this.animate(o.x))},r.prototype.onDragEnd=function(e){var i=this.difference(this._drag.pointer,this.pointer(e)),r=this._drag.stage.current,o=i.x>0^this.settings.rtl?"left":"right";t(n).off(".owl.core"),this.$element.removeClass(this.options.grabClass),(0!==i.x&&this.is("dragging")||!this.is("valid"))&&(this.speed(this.settings.dragEndSpeed||this.settings.smartSpeed),this.current(this.closest(r.x,0!==i.x?o:this._drag.direction)),this.invalidate("position"),this.update(),this._drag.direction=o,(Math.abs(i.x)>3||(new Date).getTime()-this._drag.time>300)&&this._drag.target.one("click.owl.core",function(){return!1})),this.is("dragging")&&(this.leave("dragging"),this.trigger("dragged"))},r.prototype.closest=function(e,n){var i=-1,r=30,o=this.width(),a=this.coordinates();return this.settings.freeDrag||t.each(a,t.proxy(function(t,s){return"left"===n&&e>s-r&&e<s+r?i=t:"right"===n&&e>s-o-r&&e<s-o+r?i=t+1:this.op(e,"<",s)&&this.op(e,">",a[t+1]||s-o)&&(i="left"===n?t+1:t),i===-1},this)),this.settings.loop||(this.op(e,">",a[this.minimum()])?i=e=this.minimum():this.op(e,"<",a[this.maximum()])&&(i=e=this.maximum())),i},r.prototype.animate=function(e){var n=this.speed()>0;this.is("animating")&&this.onTransitionEnd(),n&&(this.enter("animating"),this.trigger("translate")),t.support.transform3d&&t.support.transition?this.$stage.css({transform:"translate3d("+e+"px,0px,0px)",transition:this.speed()/1e3+"s"}):n?this.$stage.animate({left:e+"px"},this.speed(),this.settings.fallbackEasing,t.proxy(this.onTransitionEnd,this)):this.$stage.css({left:e+"px"})},r.prototype.is=function(t){return this._states.current[t]&&this._states.current[t]>0},r.prototype.current=function(t){if(t===i)return this._current;if(0===this._items.length)return i;if(t=this.normalize(t),this._current!==t){var e=this.trigger("change",{property:{name:"position",value:t}});e.data!==i&&(t=this.normalize(e.data)),this._current=t,this.invalidate("position"),this.trigger("changed",{property:{name:"position",value:this._current}})}return this._current},r.prototype.invalidate=function(e){return"string"===t.type(e)&&(this._invalidated[e]=!0,this.is("valid")&&this.leave("valid")),t.map(this._invalidated,function(t,e){return e})},r.prototype.reset=function(t){t=this.normalize(t),t!==i&&(this._speed=0,this._current=t,this.suppress(["translate","translated"]),this.animate(this.coordinates(t)),this.release(["translate","translated"]))},r.prototype.normalize=function(t,e){var n=this._items.length,r=e?0:this._clones.length;return!this.isNumeric(t)||n<1?t=i:(t<0||t>=n+r)&&(t=((t-r/2)%n+n)%n+r/2),t},r.prototype.relative=function(t){return t-=this._clones.length/2,this.normalize(t,!0)},r.prototype.maximum=function(t){var e,n,i,r=this.settings,o=this._coordinates.length;if(r.loop)o=this._clones.length/2+this._items.length-1;else if(r.autoWidth||r.merge){for(e=this._items.length,n=this._items[--e].width(),i=this.$element.width();e--&&(n+=this._items[e].width()+this.settings.margin,!(n>i)););o=e+1}else o=r.center?this._items.length-1:this._items.length-r.items;return t&&(o-=this._clones.length/2),Math.max(o,0)},r.prototype.minimum=function(t){return t?0:this._clones.length/2},r.prototype.items=function(t){return t===i?this._items.slice():(t=this.normalize(t,!0),this._items[t])},r.prototype.mergers=function(t){return t===i?this._mergers.slice():(t=this.normalize(t,!0),this._mergers[t])},r.prototype.clones=function(e){var n=this._clones.length/2,r=n+this._items.length,o=function(t){return t%2===0?r+t/2:n-(t+1)/2};return e===i?t.map(this._clones,function(t,e){return o(e)}):t.map(this._clones,function(t,n){return t===e?o(n):null})},r.prototype.speed=function(t){return t!==i&&(this._speed=t),this._speed},r.prototype.coordinates=function(e){var n,r=1,o=e-1;return e===i?t.map(this._coordinates,t.proxy(function(t,e){return this.coordinates(e)},this)):(this.settings.center?(this.settings.rtl&&(r=-1,o=e+1),n=this._coordinates[e],n+=(this.width()-n+(this._coordinates[o]||0))/2*r):n=this._coordinates[o]||0,n=Math.ceil(n))},r.prototype.duration=function(t,e,n){return 0===n?0:Math.min(Math.max(Math.abs(e-t),1),6)*Math.abs(n||this.settings.smartSpeed)},r.prototype.to=function(t,e){var n=this.current(),i=null,r=t-this.relative(n),o=(r>0)-(r<0),a=this._items.length,s=this.minimum(),l=this.maximum();this.settings.loop?(!this.settings.rewind&&Math.abs(r)>a/2&&(r+=o*-1*a),t=n+r,i=((t-s)%a+a)%a+s,i!==t&&i-r<=l&&i-r>0&&(n=i-r,t=i,this.reset(n))):this.settings.rewind?(l+=1,t=(t%l+l)%l):t=Math.max(s,Math.min(l,t)),this.speed(this.duration(n,t,e)),this.current(t),this.$element.is(":visible")&&this.update()},r.prototype.next=function(t){t=t||!1,this.to(this.relative(this.current())+1,t)},r.prototype.prev=function(t){t=t||!1,this.to(this.relative(this.current())-1,t)},r.prototype.onTransitionEnd=function(t){return(t===i||(t.stopPropagation(),(t.target||t.srcElement||t.originalTarget)===this.$stage.get(0)))&&(this.leave("animating"),void this.trigger("translated"))},r.prototype.viewport=function(){var i;return this.options.responsiveBaseElement!==e?i=t(this.options.responsiveBaseElement).width():e.innerWidth?i=e.innerWidth:n.documentElement&&n.documentElement.clientWidth?i=n.documentElement.clientWidth:console.warn("Can not detect viewport width."),i},r.prototype.replace=function(e){this.$stage.empty(),this._items=[],e&&(e=e instanceof jQuery?e:t(e)),this.settings.nestedItemSelector&&(e=e.find("."+this.settings.nestedItemSelector)),e.filter(function(){return 1===this.nodeType}).each(t.proxy(function(t,e){e=this.prepare(e),this.$stage.append(e),this._items.push(e),this._mergers.push(1*e.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)},this)),this.reset(this.isNumeric(this.settings.startPosition)?this.settings.startPosition:0),this.invalidate("items")},r.prototype.add=function(e,n){var r=this.relative(this._current);n=n===i?this._items.length:this.normalize(n,!0),e=e instanceof jQuery?e:t(e),this.trigger("add",{content:e,position:n}),e=this.prepare(e),0===this._items.length||n===this._items.length?(0===this._items.length&&this.$stage.append(e),0!==this._items.length&&this._items[n-1].after(e),this._items.push(e),this._mergers.push(1*e.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)):(this._items[n].before(e),this._items.splice(n,0,e),this._mergers.splice(n,0,1*e.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)),this._items[r]&&this.reset(this._items[r].index()),this.invalidate("items"),this.trigger("added",{content:e,position:n})},r.prototype.remove=function(t){t=this.normalize(t,!0),t!==i&&(this.trigger("remove",{content:this._items[t],position:t}),this._items[t].remove(),this._items.splice(t,1),this._mergers.splice(t,1),this.invalidate("items"),this.trigger("removed",{content:null,position:t}))},r.prototype.preloadAutoWidthImages=function(e){e.each(t.proxy(function(e,n){this.enter("pre-loading"),n=t(n),t(new Image).one("load",t.proxy(function(t){n.attr("src",t.target.src),n.css("opacity",1),this.leave("pre-loading"),!this.is("pre-loading")&&!this.is("initializing")&&this.refresh()},this)).attr("src",n.attr("src")||n.attr("data-src")||n.attr("data-src-retina"))},this))},r.prototype.destroy=function(){this.$element.off(".owl.core"),this.$stage.off(".owl.core"),t(n).off(".owl.core"),this.settings.responsive!==!1&&(e.clearTimeout(this.resizeTimer),this.off(e,"resize",this._handlers.onThrottledResize));for(var i in this._plugins)this._plugins[i].destroy();this.$stage.children(".cloned").remove(),this.$stage.unwrap(),this.$stage.children().contents().unwrap(),this.$stage.children().unwrap(),this.$element.removeClass(this.options.refreshClass).removeClass(this.options.loadingClass).removeClass(this.options.loadedClass).removeClass(this.options.rtlClass).removeClass(this.options.dragClass).removeClass(this.options.grabClass).attr("class",this.$element.attr("class").replace(new RegExp(this.options.responsiveClass+"-\\S+\\s","g"),"")).removeData("owl.carousel")},r.prototype.op=function(t,e,n){var i=this.settings.rtl;switch(e){case"<":return i?t>n:t<n;case">":return i?t<n:t>n;case">=":return i?t<=n:t>=n;case"<=":return i?t>=n:t<=n}},r.prototype.on=function(t,e,n,i){t.addEventListener?t.addEventListener(e,n,i):t.attachEvent&&t.attachEvent("on"+e,n)},r.prototype.off=function(t,e,n,i){t.removeEventListener?t.removeEventListener(e,n,i):t.detachEvent&&t.detachEvent("on"+e,n)},r.prototype.trigger=function(e,n,i,o,a){var s={item:{count:this._items.length,index:this.current()}},l=t.camelCase(t.grep(["on",e,i],function(t){return t}).join("-").toLowerCase()),u=t.Event([e,"owl",i||"carousel"].join(".").toLowerCase(),t.extend({relatedTarget:this},s,n));return this._supress[e]||(t.each(this._plugins,function(t,e){e.onTrigger&&e.onTrigger(u)}),this.register({type:r.Type.Event,name:e}),this.$element.trigger(u),this.settings&&"function"==typeof this.settings[l]&&this.settings[l].call(this,u)),u},r.prototype.enter=function(e){t.each([e].concat(this._states.tags[e]||[]),t.proxy(function(t,e){this._states.current[e]===i&&(this._states.current[e]=0),this._states.current[e]++},this))},r.prototype.leave=function(e){t.each([e].concat(this._states.tags[e]||[]),t.proxy(function(t,e){this._states.current[e]--},this))},r.prototype.register=function(e){if(e.type===r.Type.Event){if(t.event.special[e.name]||(t.event.special[e.name]={}),!t.event.special[e.name].owl){var n=t.event.special[e.name]._default;t.event.special[e.name]._default=function(t){return!n||!n.apply||t.namespace&&t.namespace.indexOf("owl")!==-1?t.namespace&&t.namespace.indexOf("owl")>-1:n.apply(this,arguments)},t.event.special[e.name].owl=!0}}else e.type===r.Type.State&&(this._states.tags[e.name]?this._states.tags[e.name]=this._states.tags[e.name].concat(e.tags):this._states.tags[e.name]=e.tags,this._states.tags[e.name]=t.grep(this._states.tags[e.name],t.proxy(function(n,i){return t.inArray(n,this._states.tags[e.name])===i},this)))},r.prototype.suppress=function(e){t.each(e,t.proxy(function(t,e){this._supress[e]=!0},this))},r.prototype.release=function(e){t.each(e,t.proxy(function(t,e){delete this._supress[e]},this))},r.prototype.pointer=function(t){var n={x:null,y:null};return t=t.originalEvent||t||e.event,t=t.touches&&t.touches.length?t.touches[0]:t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:t,t.pageX?(n.x=t.pageX,n.y=t.pageY):(n.x=t.clientX,n.y=t.clientY),n},r.prototype.isNumeric=function(t){return!isNaN(parseFloat(t))},r.prototype.difference=function(t,e){return{x:t.x-e.x,y:t.y-e.y}},t.fn.owlCarousel=function(e){var n=Array.prototype.slice.call(arguments,1);return this.each(function(){var i=t(this),o=i.data("owl.carousel");o||(o=new r(this,"object"==typeof e&&e),i.data("owl.carousel",o),t.each(["next","prev","to","destroy","refresh","replace","add","remove"],function(e,n){o.register({type:r.Type.Event,name:n}),o.$element.on(n+".owl.carousel.core",t.proxy(function(t){t.namespace&&t.relatedTarget!==this&&(this.suppress([n]),o[n].apply(this,[].slice.call(arguments,1)),this.release([n]))},o))})),"string"==typeof e&&"_"!==e.charAt(0)&&o[e].apply(o,n)})},t.fn.owlCarousel.Constructor=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this._core=e,this._interval=null,this._visible=null,this._handlers={"initialized.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.autoRefresh&&this.watch()},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this._core.$element.on(this._handlers)};r.Defaults={autoRefresh:!0,autoRefreshInterval:500},r.prototype.watch=function(){this._interval||(this._visible=this._core.$element.is(":visible"),this._interval=e.setInterval(t.proxy(this.refresh,this),this._core.settings.autoRefreshInterval))},r.prototype.refresh=function(){this._core.$element.is(":visible")!==this._visible&&(this._visible=!this._visible,this._core.$element.toggleClass("owl-hidden",!this._visible),this._visible&&this._core.invalidate("width")&&this._core.refresh())},r.prototype.destroy=function(){var t,n;e.clearInterval(this._interval);for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(n in Object.getOwnPropertyNames(this))"function"!=typeof this[n]&&(this[n]=null)},t.fn.owlCarousel.Constructor.Plugins.AutoRefresh=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this._core=e,this._loaded=[],this._handlers={"initialized.owl.carousel change.owl.carousel resized.owl.carousel":t.proxy(function(e){if(e.namespace&&this._core.settings&&this._core.settings.lazyLoad&&(e.property&&"position"==e.property.name||"initialized"==e.type))for(var n=this._core.settings,r=n.center&&Math.ceil(n.items/2)||n.items,o=n.center&&r*-1||0,a=(e.property&&e.property.value!==i?e.property.value:this._core.current())+o,s=this._core.clones().length,l=t.proxy(function(t,e){this.load(e)},this);o++<r;)this.load(s/2+this._core.relative(a)),s&&t.each(this._core.clones(this._core.relative(a)),l),a++},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this._core.$element.on(this._handlers)};r.Defaults={lazyLoad:!1},r.prototype.load=function(n){var i=this._core.$stage.children().eq(n),r=i&&i.find(".owl-lazy");!r||t.inArray(i.get(0),this._loaded)>-1||(r.each(t.proxy(function(n,i){var r,o=t(i),a=e.devicePixelRatio>1&&o.attr("data-src-retina")||o.attr("data-src");this._core.trigger("load",{element:o,url:a},"lazy"),o.is("img")?o.one("load.owl.lazy",t.proxy(function(){o.css("opacity",1),this._core.trigger("loaded",{element:o,url:a},"lazy")},this)).attr("src",a):(r=new Image,r.onload=t.proxy(function(){o.css({"background-image":'url("'+a+'")',opacity:"1"}),this._core.trigger("loaded",{element:o,url:a},"lazy")},this),r.src=a)},this)),this._loaded.push(i.get(0)))},r.prototype.destroy=function(){var t,e;for(t in this.handlers)this._core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.Lazy=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this._core=e,this._handlers={"initialized.owl.carousel refreshed.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&this.update()},this),"changed.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&"position"==t.property.name&&this.update()},this),"loaded.owl.lazy":t.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&t.element.closest("."+this._core.settings.itemClass).index()===this._core.current()&&this.update()},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this._core.$element.on(this._handlers)};r.Defaults={autoHeight:!1,autoHeightClass:"owl-height"},r.prototype.update=function(){var e=this._core._current,n=e+this._core.settings.items,i=this._core.$stage.children().toArray().slice(e,n),r=[],o=0;t.each(i,function(e,n){r.push(t(n).height())}),o=Math.max.apply(null,r),this._core.$stage.parent().height(o).addClass(this._core.settings.autoHeightClass)},r.prototype.destroy=function(){var t,e;for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.AutoHeight=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this._core=e,this._videos={},this._playing=null,this._handlers={"initialized.owl.carousel":t.proxy(function(t){t.namespace&&this._core.register({type:"state",name:"playing",tags:["interacting"]})},this),"resize.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.video&&this.isInFullScreen()&&t.preventDefault()},this),"refreshed.owl.carousel":t.proxy(function(t){t.namespace&&this._core.is("resizing")&&this._core.$stage.find(".cloned .owl-video-frame").remove()},this),"changed.owl.carousel":t.proxy(function(t){t.namespace&&"position"===t.property.name&&this._playing&&this.stop()},this),"prepared.owl.carousel":t.proxy(function(e){if(e.namespace){var n=t(e.content).find(".owl-video");n.length&&(n.css("display","none"),this.fetch(n,t(e.content)))}},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this._core.$element.on(this._handlers),this._core.$element.on("click.owl.video",".owl-video-play-icon",t.proxy(function(t){this.play(t)},this))};r.Defaults={video:!1,videoHeight:!1,videoWidth:!1},r.prototype.fetch=function(t,e){var n=function(){return t.attr("data-vimeo-id")?"vimeo":t.attr("data-vzaar-id")?"vzaar":"youtube"}(),i=t.attr("data-vimeo-id")||t.attr("data-youtube-id")||t.attr("data-vzaar-id"),r=t.attr("data-width")||this._core.settings.videoWidth,o=t.attr("data-height")||this._core.settings.videoHeight,a=t.attr("href");if(!a)throw new Error("Missing video URL.");if(i=a.match(/(http:|https:|)\/\/(player.|www.|app.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com)|vzaar\.com)\/(video\/|videos\/|embed\/|channels\/.+\/|groups\/.+\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/),i[3].indexOf("youtu")>-1)n="youtube";else if(i[3].indexOf("vimeo")>-1)n="vimeo";else{if(!(i[3].indexOf("vzaar")>-1))throw new Error("Video URL not supported.");n="vzaar"}i=i[6],this._videos[a]={type:n,id:i,width:r,height:o},e.attr("data-video",a),this.thumbnail(t,this._videos[a])},r.prototype.thumbnail=function(e,n){var i,r,o,a=n.width&&n.height?'style="width:'+n.width+"px;height:"+n.height+'px;"':"",s=e.find("img"),l="src",u="",c=this._core.settings,d=function(t){r='<div class="owl-video-play-icon"></div>',i=c.lazyLoad?'<div class="owl-video-tn '+u+'" '+l+'="'+t+'"></div>':'<div class="owl-video-tn" style="opacity:1;background-image:url('+t+')"></div>',e.after(i),e.after(r)};return e.wrap('<div class="owl-video-wrapper"'+a+"></div>"),this._core.settings.lazyLoad&&(l="data-src",u="owl-lazy"),s.length?(d(s.attr(l)),s.remove(),!1):void("youtube"===n.type?(o="//img.youtube.com/vi/"+n.id+"/hqdefault.jpg",d(o)):"vimeo"===n.type?t.ajax({type:"GET",url:"//vimeo.com/api/v2/video/"+n.id+".json",jsonp:"callback",dataType:"jsonp",success:function(t){o=t[0].thumbnail_large,d(o)}}):"vzaar"===n.type&&t.ajax({type:"GET",url:"//vzaar.com/api/videos/"+n.id+".json",jsonp:"callback",dataType:"jsonp",success:function(t){o=t.framegrab_url,d(o)}}))},r.prototype.stop=function(){this._core.trigger("stop",null,"video"),this._playing.find(".owl-video-frame").remove(),this._playing.removeClass("owl-video-playing"),this._playing=null,this._core.leave("playing"),this._core.trigger("stopped",null,"video")},r.prototype.play=function(e){var n,i=t(e.target),r=i.closest("."+this._core.settings.itemClass),o=this._videos[r.attr("data-video")],a=o.width||"100%",s=o.height||this._core.$stage.height();this._playing||(this._core.enter("playing"),this._core.trigger("play",null,"video"),r=this._core.items(this._core.relative(r.index())),this._core.reset(r.index()),"youtube"===o.type?n='<iframe width="'+a+'" height="'+s+'" src="//www.youtube.com/embed/'+o.id+"?autoplay=1&rel=0&v="+o.id+'" frameborder="0" allowfullscreen></iframe>':"vimeo"===o.type?n='<iframe src="//player.vimeo.com/video/'+o.id+'?autoplay=1" width="'+a+'" height="'+s+'" frameborder="0" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>':"vzaar"===o.type&&(n='<iframe frameborder="0"height="'+s+'"width="'+a+'" allowfullscreen mozallowfullscreen webkitAllowFullScreen src="//view.vzaar.com/'+o.id+'/player?autoplay=true"></iframe>'),t('<div class="owl-video-frame">'+n+"</div>").insertAfter(r.find(".owl-video")),this._playing=r.addClass("owl-video-playing"))},r.prototype.isInFullScreen=function(){var e=n.fullscreenElement||n.mozFullScreenElement||n.webkitFullscreenElement;return e&&t(e).parent().hasClass("owl-video-frame")},r.prototype.destroy=function(){var t,e;this._core.$element.off("click.owl.video");for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.Video=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this.core=e,this.core.options=t.extend({},r.Defaults,this.core.options),this.swapping=!0,this.previous=i,this.next=i,this.handlers={"change.owl.carousel":t.proxy(function(t){t.namespace&&"position"==t.property.name&&(this.previous=this.core.current(),this.next=t.property.value)},this),"drag.owl.carousel dragged.owl.carousel translated.owl.carousel":t.proxy(function(t){t.namespace&&(this.swapping="translated"==t.type)},this),"translate.owl.carousel":t.proxy(function(t){t.namespace&&this.swapping&&(this.core.options.animateOut||this.core.options.animateIn)&&this.swap()},this)},this.core.$element.on(this.handlers)};r.Defaults={animateOut:!1,animateIn:!1},r.prototype.swap=function(){if(1===this.core.settings.items&&t.support.animation&&t.support.transition){this.core.speed(0);var e,n=t.proxy(this.clear,this),i=this.core.$stage.children().eq(this.previous),r=this.core.$stage.children().eq(this.next),o=this.core.settings.animateIn,a=this.core.settings.animateOut;this.core.current()!==this.previous&&(a&&(e=this.core.coordinates(this.previous)-this.core.coordinates(this.next),i.one(t.support.animation.end,n).css({left:e+"px"}).addClass("animated owl-animated-out").addClass(a)),o&&r.one(t.support.animation.end,n).addClass("animated owl-animated-in").addClass(o))}},r.prototype.clear=function(e){t(e.target).css({left:""}).removeClass("animated owl-animated-out owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut),this.core.onTransitionEnd()},r.prototype.destroy=function(){var t,e;for(t in this.handlers)this.core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.Animate=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this._core=e,this._timeout=null,this._paused=!1,this._handlers={"changed.owl.carousel":t.proxy(function(t){t.namespace&&"settings"===t.property.name?this._core.settings.autoplay?this.play():this.stop():t.namespace&&"position"===t.property.name&&this._core.settings.autoplay&&this._setAutoPlayInterval()},this),"initialized.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.autoplay&&this.play()},this),"play.owl.autoplay":t.proxy(function(t,e,n){t.namespace&&this.play(e,n)},this),"stop.owl.autoplay":t.proxy(function(t){t.namespace&&this.stop()},this),"mouseover.owl.autoplay":t.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"mouseleave.owl.autoplay":t.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.play()},this),"touchstart.owl.core":t.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"touchend.owl.core":t.proxy(function(){this._core.settings.autoplayHoverPause&&this.play()},this)},this._core.$element.on(this._handlers),this._core.options=t.extend({},r.Defaults,this._core.options)};r.Defaults={autoplay:!1,autoplayTimeout:5e3,autoplayHoverPause:!1,autoplaySpeed:!1},r.prototype.play=function(t,e){this._paused=!1,this._core.is("rotating")||(this._core.enter("rotating"),this._setAutoPlayInterval())},r.prototype._getNextTimeout=function(i,r){return this._timeout&&e.clearTimeout(this._timeout),e.setTimeout(t.proxy(function(){this._paused||this._core.is("busy")||this._core.is("interacting")||n.hidden||this._core.next(r||this._core.settings.autoplaySpeed)},this),i||this._core.settings.autoplayTimeout)},r.prototype._setAutoPlayInterval=function(){this._timeout=this._getNextTimeout()},r.prototype.stop=function(){this._core.is("rotating")&&(e.clearTimeout(this._timeout),this._core.leave("rotating"))},r.prototype.pause=function(){this._core.is("rotating")&&(this._paused=!0)},r.prototype.destroy=function(){var t,e;this.stop();for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.autoplay=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){"use strict";var r=function(e){this._core=e,this._initialized=!1,this._pages=[],this._controls={},this._templates=[],this.$element=this._core.$element,this._overrides={next:this._core.next,prev:this._core.prev,to:this._core.to},this._handlers={"prepared.owl.carousel":t.proxy(function(e){e.namespace&&this._core.settings.dotsData&&this._templates.push('<div class="'+this._core.settings.dotClass+'">'+t(e.content).find("[data-dot]").addBack("[data-dot]").attr("data-dot")+"</div>")},this),"added.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.dotsData&&this._templates.splice(t.position,0,this._templates.pop())},this),"remove.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.dotsData&&this._templates.splice(t.position,1)},this),"changed.owl.carousel":t.proxy(function(t){t.namespace&&"position"==t.property.name&&this.draw()},this),"initialized.owl.carousel":t.proxy(function(t){t.namespace&&!this._initialized&&(this._core.trigger("initialize",null,"navigation"),this.initialize(),this.update(),this.draw(),this._initialized=!0,this._core.trigger("initialized",null,"navigation"))},this),"refreshed.owl.carousel":t.proxy(function(t){t.namespace&&this._initialized&&(this._core.trigger("refresh",null,"navigation"),this.update(),this.draw(),this._core.trigger("refreshed",null,"navigation"))},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this.$element.on(this._handlers)};r.Defaults={nav:!1,navText:["prev","next"],navSpeed:!1,navElement:"div",navContainer:!1,navContainerClass:"owl-nav",navClass:["owl-prev","owl-next"],slideBy:1,dotClass:"owl-dot",dotsClass:"owl-dots",dots:!0,dotsEach:!1,dotsData:!1,dotsSpeed:!1,dotsContainer:!1},r.prototype.initialize=function(){var e,n=this._core.settings;this._controls.$relative=(n.navContainer?t(n.navContainer):t("<div>").addClass(n.navContainerClass).appendTo(this.$element)).addClass("disabled"),this._controls.$previous=t("<"+n.navElement+">").addClass(n.navClass[0]).html(n.navText[0]).prependTo(this._controls.$relative).on("click",t.proxy(function(t){this.prev(n.navSpeed)},this)),this._controls.$next=t("<"+n.navElement+">").addClass(n.navClass[1]).html(n.navText[1]).appendTo(this._controls.$relative).on("click",t.proxy(function(t){this.next(n.navSpeed)},this)),n.dotsData||(this._templates=[t("<div>").addClass(n.dotClass).append(t("<span>")).prop("outerHTML")]),this._controls.$absolute=(n.dotsContainer?t(n.dotsContainer):t("<div>").addClass(n.dotsClass).appendTo(this.$element)).addClass("disabled"),this._controls.$absolute.on("click","div",t.proxy(function(e){var i=t(e.target).parent().is(this._controls.$absolute)?t(e.target).index():t(e.target).parent().index();e.preventDefault(),this.to(i,n.dotsSpeed)},this));for(e in this._overrides)this._core[e]=t.proxy(this[e],this)},r.prototype.destroy=function(){var t,e,n,i;for(t in this._handlers)this.$element.off(t,this._handlers[t]);for(e in this._controls)this._controls[e].remove();for(i in this.overides)this._core[i]=this._overrides[i];for(n in Object.getOwnPropertyNames(this))"function"!=typeof this[n]&&(this[n]=null)},r.prototype.update=function(){var t,e,n,i=this._core.clones().length/2,r=i+this._core.items().length,o=this._core.maximum(!0),a=this._core.settings,s=a.center||a.autoWidth||a.dotsData?1:a.dotsEach||a.items;if("page"!==a.slideBy&&(a.slideBy=Math.min(a.slideBy,a.items)),a.dots||"page"==a.slideBy)for(this._pages=[],t=i,e=0,n=0;t<r;t++){if(e>=s||0===e){if(this._pages.push({start:Math.min(o,t-i),end:t-i+s-1
}),Math.min(o,t-i)===o)break;e=0,++n}e+=this._core.mergers(this._core.relative(t))}},r.prototype.draw=function(){var e,n=this._core.settings,i=this._core.items().length<=n.items,r=this._core.relative(this._core.current()),o=n.loop||n.rewind;this._controls.$relative.toggleClass("disabled",!n.nav||i),n.nav&&(this._controls.$previous.toggleClass("disabled",!o&&r<=this._core.minimum(!0)),this._controls.$next.toggleClass("disabled",!o&&r>=this._core.maximum(!0))),this._controls.$absolute.toggleClass("disabled",!n.dots||i),n.dots&&(e=this._pages.length-this._controls.$absolute.children().length,n.dotsData&&0!==e?this._controls.$absolute.html(this._templates.join("")):e>0?this._controls.$absolute.append(new Array(e+1).join(this._templates[0])):e<0&&this._controls.$absolute.children().slice(e).remove(),this._controls.$absolute.find(".active").removeClass("active"),this._controls.$absolute.children().eq(t.inArray(this.current(),this._pages)).addClass("active"))},r.prototype.onTrigger=function(e){var n=this._core.settings;e.page={index:t.inArray(this.current(),this._pages),count:this._pages.length,size:n&&(n.center||n.autoWidth||n.dotsData?1:n.dotsEach||n.items)}},r.prototype.current=function(){var e=this._core.relative(this._core.current());return t.grep(this._pages,t.proxy(function(t,n){return t.start<=e&&t.end>=e},this)).pop()},r.prototype.getPosition=function(e){var n,i,r=this._core.settings;return"page"==r.slideBy?(n=t.inArray(this.current(),this._pages),i=this._pages.length,e?++n:--n,n=this._pages[(n%i+i)%i].start):(n=this._core.relative(this._core.current()),i=this._core.items().length,e?n+=r.slideBy:n-=r.slideBy),n},r.prototype.next=function(e){t.proxy(this._overrides.to,this._core)(this.getPosition(!0),e)},r.prototype.prev=function(e){t.proxy(this._overrides.to,this._core)(this.getPosition(!1),e)},r.prototype.to=function(e,n,i){var r;!i&&this._pages.length?(r=this._pages.length,t.proxy(this._overrides.to,this._core)(this._pages[(e%r+r)%r].start,n)):t.proxy(this._overrides.to,this._core)(e,n)},t.fn.owlCarousel.Constructor.Plugins.Navigation=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){"use strict";var r=function(n){this._core=n,this._hashes={},this.$element=this._core.$element,this._handlers={"initialized.owl.carousel":t.proxy(function(n){n.namespace&&"URLHash"===this._core.settings.startPosition&&t(e).trigger("hashchange.owl.navigation")},this),"prepared.owl.carousel":t.proxy(function(e){if(e.namespace){var n=t(e.content).find("[data-hash]").addBack("[data-hash]").attr("data-hash");if(!n)return;this._hashes[n]=e.content}},this),"changed.owl.carousel":t.proxy(function(n){if(n.namespace&&"position"===n.property.name){var i=this._core.items(this._core.relative(this._core.current())),r=t.map(this._hashes,function(t,e){return t===i?e:null}).join();if(!r||e.location.hash.slice(1)===r)return;e.location.hash=r}},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this.$element.on(this._handlers),t(e).on("hashchange.owl.navigation",t.proxy(function(t){var n=e.location.hash.substring(1),r=this._core.$stage.children(),o=this._hashes[n]&&r.index(this._hashes[n]);o!==i&&o!==this._core.current()&&this._core.to(this._core.relative(o),!1,!0)},this))};r.Defaults={URLhashListener:!1},r.prototype.destroy=function(){var n,i;t(e).off("hashchange.owl.navigation");for(n in this._handlers)this._core.$element.off(n,this._handlers[n]);for(i in Object.getOwnPropertyNames(this))"function"!=typeof this[i]&&(this[i]=null)},t.fn.owlCarousel.Constructor.Plugins.Hash=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){function r(e,n){var r=!1,o=e.charAt(0).toUpperCase()+e.slice(1);return t.each((e+" "+s.join(o+" ")+o).split(" "),function(t,e){if(a[e]!==i)return r=!n||e,!1}),r}function o(t){return r(t,!0)}var a=t("<support>").get(0).style,s="Webkit Moz O ms".split(" "),l={transition:{end:{WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"}},animation:{end:{WebkitAnimation:"webkitAnimationEnd",MozAnimation:"animationend",OAnimation:"oAnimationEnd",animation:"animationend"}}},u={csstransforms:function(){return!!r("transform")},csstransforms3d:function(){return!!r("perspective")},csstransitions:function(){return!!r("transition")},cssanimations:function(){return!!r("animation")}};u.csstransitions()&&(t.support.transition=new String(o("transition")),t.support.transition.end=l.transition.end[t.support.transition]),u.cssanimations()&&(t.support.animation=new String(o("animation")),t.support.animation.end=l.animation.end[t.support.animation]),u.csstransforms()&&(t.support.transform=new String(o("transform")),t.support.transform3d=u.csstransforms3d())}(window.Zepto||window.jQuery,window,document),!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;e="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,e.Chart=t()}}(function(){var t;return function e(t,n,i){function r(a,s){if(!n[a]){if(!t[a]){var l="function"==typeof require&&require;if(!s&&l)return l(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var c=n[a]={exports:{}};t[a][0].call(c.exports,function(e){var n=t[a][1][e];return r(n?n:e)},c,c.exports,e,t,n,i)}return n[a].exports}for(var o="function"==typeof require&&require,a=0;a<i.length;a++)r(i[a]);return r}({1:[function(t,e,n){function i(t){if(t){var e=/^#([a-fA-F0-9]{3})$/,n=/^#([a-fA-F0-9]{6})$/,i=/^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,r=/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/,o=/(\w+)/,a=[0,0,0],s=1,l=t.match(e);if(l){l=l[1];for(var u=0;u<a.length;u++)a[u]=parseInt(l[u]+l[u],16)}else if(l=t.match(n)){l=l[1];for(var u=0;u<a.length;u++)a[u]=parseInt(l.slice(2*u,2*u+2),16)}else if(l=t.match(i)){for(var u=0;u<a.length;u++)a[u]=parseInt(l[u+1]);s=parseFloat(l[4])}else if(l=t.match(r)){for(var u=0;u<a.length;u++)a[u]=Math.round(2.55*parseFloat(l[u+1]));s=parseFloat(l[4])}else if(l=t.match(o)){if("transparent"==l[1])return[0,0,0,0];if(a=x[l[1]],!a)return}for(var u=0;u<a.length;u++)a[u]=y(a[u],0,255);return s=s||0==s?y(s,0,1):1,a[3]=s,a}}function r(t){if(t){var e=/^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/,n=t.match(e);if(n){var i=parseFloat(n[4]),r=y(parseInt(n[1]),0,360),o=y(parseFloat(n[2]),0,100),a=y(parseFloat(n[3]),0,100),s=y(isNaN(i)?1:i,0,1);return[r,o,a,s]}}}function o(t){if(t){var e=/^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/,n=t.match(e);if(n){var i=parseFloat(n[4]),r=y(parseInt(n[1]),0,360),o=y(parseFloat(n[2]),0,100),a=y(parseFloat(n[3]),0,100),s=y(isNaN(i)?1:i,0,1);return[r,o,a,s]}}}function a(t){var e=i(t);return e&&e.slice(0,3)}function s(t){var e=r(t);return e&&e.slice(0,3)}function l(t){var e=i(t);return e?e[3]:(e=r(t))?e[3]:(e=o(t))?e[3]:void 0}function u(t){return"#"+b(t[0])+b(t[1])+b(t[2])}function c(t,e){return e<1||t[3]&&t[3]<1?d(t,e):"rgb("+t[0]+", "+t[1]+", "+t[2]+")"}function d(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),"rgba("+t[0]+", "+t[1]+", "+t[2]+", "+e+")"}function h(t,e){if(e<1||t[3]&&t[3]<1)return f(t,e);var n=Math.round(t[0]/255*100),i=Math.round(t[1]/255*100),r=Math.round(t[2]/255*100);return"rgb("+n+"%, "+i+"%, "+r+"%)"}function f(t,e){var n=Math.round(t[0]/255*100),i=Math.round(t[1]/255*100),r=Math.round(t[2]/255*100);return"rgba("+n+"%, "+i+"%, "+r+"%, "+(e||t[3]||1)+")"}function p(t,e){return e<1||t[3]&&t[3]<1?g(t,e):"hsl("+t[0]+", "+t[1]+"%, "+t[2]+"%)"}function g(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),"hsla("+t[0]+", "+t[1]+"%, "+t[2]+"%, "+e+")"}function m(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),"hwb("+t[0]+", "+t[1]+"%, "+t[2]+"%"+(void 0!==e&&1!==e?", "+e:"")+")"}function v(t){return _[t.slice(0,3)]}function y(t,e,n){return Math.min(Math.max(e,t),n)}function b(t){var e=t.toString(16).toUpperCase();return e.length<2?"0"+e:e}var x=t(5);e.exports={getRgba:i,getHsla:r,getRgb:a,getHsl:s,getHwb:o,getAlpha:l,hexString:u,rgbString:c,rgbaString:d,percentString:h,percentaString:f,hslString:p,hslaString:g,hwbString:m,keyword:v};var _={};for(var w in x)_[x[w]]=w},{5:5}],2:[function(t,e,n){var i=t(4),r=t(1),o=function(t){if(t instanceof o)return t;if(!(this instanceof o))return new o(t);this.valid=!1,this.values={rgb:[0,0,0],hsl:[0,0,0],hsv:[0,0,0],hwb:[0,0,0],cmyk:[0,0,0,0],alpha:1};var e;"string"==typeof t?(e=r.getRgba(t),e?this.setValues("rgb",e):(e=r.getHsla(t))?this.setValues("hsl",e):(e=r.getHwb(t))&&this.setValues("hwb",e)):"object"==typeof t&&(e=t,void 0!==e.r||void 0!==e.red?this.setValues("rgb",e):void 0!==e.l||void 0!==e.lightness?this.setValues("hsl",e):void 0!==e.v||void 0!==e.value?this.setValues("hsv",e):void 0!==e.w||void 0!==e.whiteness?this.setValues("hwb",e):void 0===e.c&&void 0===e.cyan||this.setValues("cmyk",e))};o.prototype={isValid:function(){return this.valid},rgb:function(){return this.setSpace("rgb",arguments)},hsl:function(){return this.setSpace("hsl",arguments)},hsv:function(){return this.setSpace("hsv",arguments)},hwb:function(){return this.setSpace("hwb",arguments)},cmyk:function(){return this.setSpace("cmyk",arguments)},rgbArray:function(){return this.values.rgb},hslArray:function(){return this.values.hsl},hsvArray:function(){return this.values.hsv},hwbArray:function(){var t=this.values;return 1!==t.alpha?t.hwb.concat([t.alpha]):t.hwb},cmykArray:function(){return this.values.cmyk},rgbaArray:function(){var t=this.values;return t.rgb.concat([t.alpha])},hslaArray:function(){var t=this.values;return t.hsl.concat([t.alpha])},alpha:function(t){return void 0===t?this.values.alpha:(this.setValues("alpha",t),this)},red:function(t){return this.setChannel("rgb",0,t)},green:function(t){return this.setChannel("rgb",1,t)},blue:function(t){return this.setChannel("rgb",2,t)},hue:function(t){return t&&(t%=360,t=t<0?360+t:t),this.setChannel("hsl",0,t)},saturation:function(t){return this.setChannel("hsl",1,t)},lightness:function(t){return this.setChannel("hsl",2,t)},saturationv:function(t){return this.setChannel("hsv",1,t)},whiteness:function(t){return this.setChannel("hwb",1,t)},blackness:function(t){return this.setChannel("hwb",2,t)},value:function(t){return this.setChannel("hsv",2,t)},cyan:function(t){return this.setChannel("cmyk",0,t)},magenta:function(t){return this.setChannel("cmyk",1,t)},yellow:function(t){return this.setChannel("cmyk",2,t)},black:function(t){return this.setChannel("cmyk",3,t)},hexString:function(){return r.hexString(this.values.rgb)},rgbString:function(){return r.rgbString(this.values.rgb,this.values.alpha)},rgbaString:function(){return r.rgbaString(this.values.rgb,this.values.alpha)},percentString:function(){return r.percentString(this.values.rgb,this.values.alpha)},hslString:function(){return r.hslString(this.values.hsl,this.values.alpha)},hslaString:function(){return r.hslaString(this.values.hsl,this.values.alpha)},hwbString:function(){return r.hwbString(this.values.hwb,this.values.alpha)},keyword:function(){return r.keyword(this.values.rgb,this.values.alpha)},rgbNumber:function(){var t=this.values.rgb;return t[0]<<16|t[1]<<8|t[2]},luminosity:function(){for(var t=this.values.rgb,e=[],n=0;n<t.length;n++){var i=t[n]/255;e[n]=i<=.03928?i/12.92:Math.pow((i+.055)/1.055,2.4)}return.2126*e[0]+.7152*e[1]+.0722*e[2]},contrast:function(t){var e=this.luminosity(),n=t.luminosity();return e>n?(e+.05)/(n+.05):(n+.05)/(e+.05)},level:function(t){var e=this.contrast(t);return e>=7.1?"AAA":e>=4.5?"AA":""},dark:function(){var t=this.values.rgb,e=(299*t[0]+587*t[1]+114*t[2])/1e3;return e<128},light:function(){return!this.dark()},negate:function(){for(var t=[],e=0;e<3;e++)t[e]=255-this.values.rgb[e];return this.setValues("rgb",t),this},lighten:function(t){var e=this.values.hsl;return e[2]+=e[2]*t,this.setValues("hsl",e),this},darken:function(t){var e=this.values.hsl;return e[2]-=e[2]*t,this.setValues("hsl",e),this},saturate:function(t){var e=this.values.hsl;return e[1]+=e[1]*t,this.setValues("hsl",e),this},desaturate:function(t){var e=this.values.hsl;return e[1]-=e[1]*t,this.setValues("hsl",e),this},whiten:function(t){var e=this.values.hwb;return e[1]+=e[1]*t,this.setValues("hwb",e),this},blacken:function(t){var e=this.values.hwb;return e[2]+=e[2]*t,this.setValues("hwb",e),this},greyscale:function(){var t=this.values.rgb,e=.3*t[0]+.59*t[1]+.11*t[2];return this.setValues("rgb",[e,e,e]),this},clearer:function(t){var e=this.values.alpha;return this.setValues("alpha",e-e*t),this},opaquer:function(t){var e=this.values.alpha;return this.setValues("alpha",e+e*t),this},rotate:function(t){var e=this.values.hsl,n=(e[0]+t)%360;return e[0]=n<0?360+n:n,this.setValues("hsl",e),this},mix:function(t,e){var n=this,i=t,r=void 0===e?.5:e,o=2*r-1,a=n.alpha()-i.alpha(),s=((o*a===-1?o:(o+a)/(1+o*a))+1)/2,l=1-s;return this.rgb(s*n.red()+l*i.red(),s*n.green()+l*i.green(),s*n.blue()+l*i.blue()).alpha(n.alpha()*r+i.alpha()*(1-r))},toJSON:function(){return this.rgb()},clone:function(){var t,e,n=new o,i=this.values,r=n.values;for(var a in i)i.hasOwnProperty(a)&&(t=i[a],e={}.toString.call(t),"[object Array]"===e?r[a]=t.slice(0):"[object Number]"===e?r[a]=t:console.error("unexpected color value:",t));return n}},o.prototype.spaces={rgb:["red","green","blue"],hsl:["hue","saturation","lightness"],hsv:["hue","saturation","value"],hwb:["hue","whiteness","blackness"],cmyk:["cyan","magenta","yellow","black"]},o.prototype.maxes={rgb:[255,255,255],hsl:[360,100,100],hsv:[360,100,100],hwb:[360,100,100],cmyk:[100,100,100,100]},o.prototype.getValues=function(t){for(var e=this.values,n={},i=0;i<t.length;i++)n[t.charAt(i)]=e[t][i];return 1!==e.alpha&&(n.a=e.alpha),n},o.prototype.setValues=function(t,e){var n,r=this.values,o=this.spaces,a=this.maxes,s=1;if(this.valid=!0,"alpha"===t)s=e;else if(e.length)r[t]=e.slice(0,t.length),s=e[t.length];else if(void 0!==e[t.charAt(0)]){for(n=0;n<t.length;n++)r[t][n]=e[t.charAt(n)];s=e.a}else if(void 0!==e[o[t][0]]){var l=o[t];for(n=0;n<t.length;n++)r[t][n]=e[l[n]];s=e.alpha}if(r.alpha=Math.max(0,Math.min(1,void 0===s?r.alpha:s)),"alpha"===t)return!1;var u;for(n=0;n<t.length;n++)u=Math.max(0,Math.min(a[t][n],r[t][n])),r[t][n]=Math.round(u);for(var c in o)c!==t&&(r[c]=i[t][c](r[t]));return!0},o.prototype.setSpace=function(t,e){var n=e[0];return void 0===n?this.getValues(t):("number"==typeof n&&(n=Array.prototype.slice.call(e)),this.setValues(t,n),this)},o.prototype.setChannel=function(t,e,n){var i=this.values[t];return void 0===n?i[e]:n===i[e]?this:(i[e]=n,this.setValues(t,i),this)},"undefined"!=typeof window&&(window.Color=o),e.exports=o},{1:1,4:4}],3:[function(t,e,n){function i(t){var e,n,i,r=t[0]/255,o=t[1]/255,a=t[2]/255,s=Math.min(r,o,a),l=Math.max(r,o,a),u=l-s;return l==s?e=0:r==l?e=(o-a)/u:o==l?e=2+(a-r)/u:a==l&&(e=4+(r-o)/u),e=Math.min(60*e,360),e<0&&(e+=360),i=(s+l)/2,n=l==s?0:i<=.5?u/(l+s):u/(2-l-s),[e,100*n,100*i]}function o(t){var e,n,i,r=t[0],o=t[1],a=t[2],s=Math.min(r,o,a),l=Math.max(r,o,a),u=l-s;return n=0==l?0:u/l*1e3/10,l==s?e=0:r==l?e=(o-a)/u:o==l?e=2+(a-r)/u:a==l&&(e=4+(r-o)/u),e=Math.min(60*e,360),e<0&&(e+=360),i=l/255*1e3/10,[e,n,i]}function a(t){var e=t[0],n=t[1],r=t[2],o=i(t)[0],a=1/255*Math.min(e,Math.min(n,r)),r=1-1/255*Math.max(e,Math.max(n,r));return[o,100*a,100*r]}function s(t){var e,n,i,r,o=t[0]/255,a=t[1]/255,s=t[2]/255;return r=Math.min(1-o,1-a,1-s),e=(1-o-r)/(1-r)||0,n=(1-a-r)/(1-r)||0,i=(1-s-r)/(1-r)||0,[100*e,100*n,100*i,100*r]}function l(t){return Q[JSON.stringify(t)]}function u(t){var e=t[0]/255,n=t[1]/255,i=t[2]/255;e=e>.04045?Math.pow((e+.055)/1.055,2.4):e/12.92,n=n>.04045?Math.pow((n+.055)/1.055,2.4):n/12.92,i=i>.04045?Math.pow((i+.055)/1.055,2.4):i/12.92;var r=.4124*e+.3576*n+.1805*i,o=.2126*e+.7152*n+.0722*i,a=.0193*e+.1192*n+.9505*i;return[100*r,100*o,100*a]}function c(t){var e,n,i,r=u(t),o=r[0],a=r[1],s=r[2];return o/=95.047,a/=100,s/=108.883,o=o>.008856?Math.pow(o,1/3):7.787*o+16/116,a=a>.008856?Math.pow(a,1/3):7.787*a+16/116,s=s>.008856?Math.pow(s,1/3):7.787*s+16/116,e=116*a-16,n=500*(o-a),i=200*(a-s),[e,n,i]}function d(t){return W(c(t))}function h(t){var e,n,i,r,o,a=t[0]/360,s=t[1]/100,l=t[2]/100;if(0==s)return o=255*l,[o,o,o];n=l<.5?l*(1+s):l+s-l*s,e=2*l-n,r=[0,0,0];for(var u=0;u<3;u++)i=a+1/3*-(u-1),i<0&&i++,i>1&&i--,o=6*i<1?e+6*(n-e)*i:2*i<1?n:3*i<2?e+(n-e)*(2/3-i)*6:e,r[u]=255*o;return r}function f(t){var e,n,i=t[0],r=t[1]/100,o=t[2]/100;return 0===o?[0,0,0]:(o*=2,r*=o<=1?o:2-o,n=(o+r)/2,e=2*r/(o+r),[i,100*e,100*n])}function p(t){return a(h(t))}function m(t){return s(h(t))}function v(t){return l(h(t))}function y(t){var e=t[0]/60,n=t[1]/100,i=t[2]/100,r=Math.floor(e)%6,o=e-Math.floor(e),a=255*i*(1-n),s=255*i*(1-n*o),l=255*i*(1-n*(1-o)),i=255*i;switch(r){case 0:return[i,l,a];case 1:return[s,i,a];case 2:return[a,i,l];case 3:return[a,s,i];case 4:return[l,a,i];case 5:return[i,a,s]}}function x(t){var e,n,i=t[0],r=t[1]/100,o=t[2]/100;return n=(2-r)*o,e=r*o,e/=n<=1?n:2-n,e=e||0,n/=2,[i,100*e,100*n]}function _(t){return a(y(t))}function w(t){return s(y(t))}function k(t){return l(y(t))}function S(t){var e,n,i,o,a=t[0]/360,s=t[1]/100,l=t[2]/100,u=s+l;switch(u>1&&(s/=u,l/=u),e=Math.floor(6*a),n=1-l,i=6*a-e,0!=(1&e)&&(i=1-i),o=s+i*(n-s),e){default:case 6:case 0:r=n,g=o,b=s;break;case 1:r=o,g=n,b=s;break;case 2:r=s,g=n,b=o;break;case 3:r=s,g=o,b=n;break;case 4:r=o,g=s,b=n;break;case 5:r=n,g=s,b=o}return[255*r,255*g,255*b]}function C(t){return i(S(t))}function M(t){return o(S(t))}function D(t){return s(S(t))}function T(t){return l(S(t))}function P(t){var e,n,i,r=t[0]/100,o=t[1]/100,a=t[2]/100,s=t[3]/100;return e=1-Math.min(1,r*(1-s)+s),n=1-Math.min(1,o*(1-s)+s),i=1-Math.min(1,a*(1-s)+s),[255*e,255*n,255*i]}function A(t){return i(P(t))}function I(t){return o(P(t))}function O(t){return a(P(t))}function F(t){return l(P(t))}function L(t){var e,n,i,r=t[0]/100,o=t[1]/100,a=t[2]/100;return e=3.2406*r+o*-1.5372+a*-.4986,n=r*-.9689+1.8758*o+.0415*a,i=.0557*r+o*-.204+1.057*a,e=e>.0031308?1.055*Math.pow(e,1/2.4)-.055:e*=12.92,n=n>.0031308?1.055*Math.pow(n,1/2.4)-.055:n*=12.92,i=i>.0031308?1.055*Math.pow(i,1/2.4)-.055:i*=12.92,e=Math.min(Math.max(0,e),1),n=Math.min(Math.max(0,n),1),i=Math.min(Math.max(0,i),1),[255*e,255*n,255*i]}function E(t){var e,n,i,r=t[0],o=t[1],a=t[2];return r/=95.047,o/=100,a/=108.883,r=r>.008856?Math.pow(r,1/3):7.787*r+16/116,o=o>.008856?Math.pow(o,1/3):7.787*o+16/116,a=a>.008856?Math.pow(a,1/3):7.787*a+16/116,e=116*o-16,n=500*(r-o),i=200*(o-a),[e,n,i]}function R(t){return W(E(t))}function N(t){var e,n,i,r,o=t[0],a=t[1],s=t[2];return o<=8?(n=100*o/903.3,r=7.787*(n/100)+16/116):(n=100*Math.pow((o+16)/116,3),r=Math.pow(n/100,1/3)),e=e/95.047<=.008856?e=95.047*(a/500+r-16/116)/7.787:95.047*Math.pow(a/500+r,3),i=i/108.883<=.008859?i=108.883*(r-s/200-16/116)/7.787:108.883*Math.pow(r-s/200,3),[e,n,i]}function W(t){var e,n,i,r=t[0],o=t[1],a=t[2];return e=Math.atan2(a,o),n=360*e/2/Math.PI,n<0&&(n+=360),i=Math.sqrt(o*o+a*a),[r,i,n]}function z(t){return L(N(t))}function H(t){var e,n,i,r=t[0],o=t[1],a=t[2];return i=a/360*2*Math.PI,e=o*Math.cos(i),n=o*Math.sin(i),[r,e,n]}function B(t){return N(H(t))}function V(t){return z(H(t))}function j(t){return X[t]}function $(t){return i(j(t))}function Y(t){return o(j(t))}function q(t){return a(j(t))}function U(t){return s(j(t))}function G(t){return c(j(t))}function Z(t){return u(j(t))}e.exports={rgb2hsl:i,rgb2hsv:o,rgb2hwb:a,rgb2cmyk:s,rgb2keyword:l,rgb2xyz:u,rgb2lab:c,rgb2lch:d,hsl2rgb:h,hsl2hsv:f,hsl2hwb:p,hsl2cmyk:m,hsl2keyword:v,hsv2rgb:y,hsv2hsl:x,hsv2hwb:_,hsv2cmyk:w,hsv2keyword:k,hwb2rgb:S,hwb2hsl:C,hwb2hsv:M,hwb2cmyk:D,hwb2keyword:T,cmyk2rgb:P,cmyk2hsl:A,cmyk2hsv:I,cmyk2hwb:O,cmyk2keyword:F,keyword2rgb:j,keyword2hsl:$,keyword2hsv:Y,keyword2hwb:q,keyword2cmyk:U,keyword2lab:G,keyword2xyz:Z,xyz2rgb:L,xyz2lab:E,xyz2lch:R,lab2xyz:N,lab2rgb:z,lab2lch:W,lch2lab:H,lch2xyz:B,lch2rgb:V};var X={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},Q={};for(var J in X)Q[JSON.stringify(X[J])]=J},{}],4:[function(t,e,n){var i=t(3),r=function(){return new u};for(var o in i){r[o+"Raw"]=function(t){return function(e){return"number"==typeof e&&(e=Array.prototype.slice.call(arguments)),i[t](e)}}(o);var a=/(\w+)2(\w+)/.exec(o),s=a[1],l=a[2];r[s]=r[s]||{},r[s][l]=r[o]=function(t){return function(e){"number"==typeof e&&(e=Array.prototype.slice.call(arguments));var n=i[t](e);if("string"==typeof n||void 0===n)return n;for(var r=0;r<n.length;r++)n[r]=Math.round(n[r]);return n}}(o)}var u=function(){this.convs={}};u.prototype.routeSpace=function(t,e){var n=e[0];return void 0===n?this.getValues(t):("number"==typeof n&&(n=Array.prototype.slice.call(e)),this.setValues(t,n))},u.prototype.setValues=function(t,e){return this.space=t,this.convs={},this.convs[t]=e,this},u.prototype.getValues=function(t){var e=this.convs[t];if(!e){var n=this.space,i=this.convs[n];e=r[n][t](i),this.convs[t]=e}return e},["rgb","hsl","hsv","cmyk","keyword"].forEach(function(t){u.prototype[t]=function(e){return this.routeSpace(t,arguments)}}),e.exports=r},{3:3}],5:[function(t,e,n){e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},{}],6:[function(e,n,i){!function(e,r){"object"==typeof i&&"undefined"!=typeof n?n.exports=r():"function"==typeof t&&t.amd?t(r):e.moment=r()}(this,function(){"use strict";function t(){return _i.apply(null,arguments)}function i(t){_i=t}function r(t){return t instanceof Array||"[object Array]"===Object.prototype.toString.call(t)}function o(t){return null!=t&&"[object Object]"===Object.prototype.toString.call(t)}function a(t){var e;for(e in t)return!1;return!0}function s(t){return void 0===t}function l(t){return"number"==typeof t||"[object Number]"===Object.prototype.toString.call(t)}function u(t){return t instanceof Date||"[object Date]"===Object.prototype.toString.call(t)}function c(t,e){var n,i=[];for(n=0;n<t.length;++n)i.push(e(t[n],n));return i}function d(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function h(t,e){for(var n in e)d(e,n)&&(t[n]=e[n]);return d(e,"toString")&&(t.toString=e.toString),d(e,"valueOf")&&(t.valueOf=e.valueOf),t}function f(t,e,n,i){return xe(t,e,n,i,!0).utc()}function p(){return{empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}}function g(t){return null==t._pf&&(t._pf=p()),t._pf}function m(t){if(null==t._isValid){var e=g(t),n=ki.call(e.parsedDateParts,function(t){return null!=t}),i=!isNaN(t._d.getTime())&&e.overflow<0&&!e.empty&&!e.invalidMonth&&!e.invalidWeekday&&!e.nullInput&&!e.invalidFormat&&!e.userInvalidated&&(!e.meridiem||e.meridiem&&n);if(t._strict&&(i=i&&0===e.charsLeftOver&&0===e.unusedTokens.length&&void 0===e.bigHour),null!=Object.isFrozen&&Object.isFrozen(t))return i;t._isValid=i}return t._isValid}function v(t){var e=f(NaN);return null!=t?h(g(e),t):g(e).userInvalidated=!0,e}function y(t,e){var n,i,r;if(s(e._isAMomentObject)||(t._isAMomentObject=e._isAMomentObject),s(e._i)||(t._i=e._i),s(e._f)||(t._f=e._f),s(e._l)||(t._l=e._l),s(e._strict)||(t._strict=e._strict),s(e._tzm)||(t._tzm=e._tzm),s(e._isUTC)||(t._isUTC=e._isUTC),s(e._offset)||(t._offset=e._offset),s(e._pf)||(t._pf=g(e)),s(e._locale)||(t._locale=e._locale),Si.length>0)for(n=0;n<Si.length;n++)i=Si[n],r=e[i],s(r)||(t[i]=r);return t}function b(e){y(this,e),this._d=new Date(null!=e._d?e._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),Ci===!1&&(Ci=!0,t.updateOffset(this),Ci=!1)}function x(t){return t instanceof b||null!=t&&null!=t._isAMomentObject}function _(t){return t<0?Math.ceil(t)||0:Math.floor(t)}function w(t){var e=+t,n=0;return 0!==e&&isFinite(e)&&(n=_(e)),n}function k(t,e,n){var i,r=Math.min(t.length,e.length),o=Math.abs(t.length-e.length),a=0;for(i=0;i<r;i++)(n&&t[i]!==e[i]||!n&&w(t[i])!==w(e[i]))&&a++;return a+o}function S(e){t.suppressDeprecationWarnings===!1&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+e)}function C(e,n){var i=!0;return h(function(){if(null!=t.deprecationHandler&&t.deprecationHandler(null,e),i){for(var r,o=[],a=0;a<arguments.length;a++){if(r="","object"==typeof arguments[a]){r+="\n["+a+"] ";for(var s in arguments[0])r+=s+": "+arguments[0][s]+", ";r=r.slice(0,-2)}else r=arguments[a];o.push(r)}S(e+"\nArguments: "+Array.prototype.slice.call(o).join("")+"\n"+(new Error).stack),i=!1}return n.apply(this,arguments)},n)}function M(e,n){null!=t.deprecationHandler&&t.deprecationHandler(e,n),Mi[e]||(S(n),Mi[e]=!0)}function D(t){return t instanceof Function||"[object Function]"===Object.prototype.toString.call(t)}function T(t){var e,n;for(n in t)e=t[n],D(e)?this[n]=e:this["_"+n]=e;this._config=t,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)}function P(t,e){var n,i=h({},t);for(n in e)d(e,n)&&(o(t[n])&&o(e[n])?(i[n]={},h(i[n],t[n]),h(i[n],e[n])):null!=e[n]?i[n]=e[n]:delete i[n]);for(n in t)d(t,n)&&!d(e,n)&&o(t[n])&&(i[n]=h({},i[n]));return i}function A(t){null!=t&&this.set(t)}function I(t,e,n){var i=this._calendar[t]||this._calendar.sameElse;return D(i)?i.call(e,n):i}function O(t){
var e=this._longDateFormat[t],n=this._longDateFormat[t.toUpperCase()];return e||!n?e:(this._longDateFormat[t]=n.replace(/MMMM|MM|DD|dddd/g,function(t){return t.slice(1)}),this._longDateFormat[t])}function F(){return this._invalidDate}function L(t){return this._ordinal.replace("%d",t)}function E(t,e,n,i){var r=this._relativeTime[n];return D(r)?r(t,e,n,i):r.replace(/%d/i,t)}function R(t,e){var n=this._relativeTime[t>0?"future":"past"];return D(n)?n(e):n.replace(/%s/i,e)}function N(t,e){var n=t.toLowerCase();Ri[n]=Ri[n+"s"]=Ri[e]=t}function W(t){return"string"==typeof t?Ri[t]||Ri[t.toLowerCase()]:void 0}function z(t){var e,n,i={};for(n in t)d(t,n)&&(e=W(n),e&&(i[e]=t[n]));return i}function H(t,e){Ni[t]=e}function B(t){var e=[];for(var n in t)e.push({unit:n,priority:Ni[n]});return e.sort(function(t,e){return t.priority-e.priority}),e}function V(e,n){return function(i){return null!=i?($(this,e,i),t.updateOffset(this,n),this):j(this,e)}}function j(t,e){return t.isValid()?t._d["get"+(t._isUTC?"UTC":"")+e]():NaN}function $(t,e,n){t.isValid()&&t._d["set"+(t._isUTC?"UTC":"")+e](n)}function Y(t){return t=W(t),D(this[t])?this[t]():this}function q(t,e){if("object"==typeof t){t=z(t);for(var n=B(t),i=0;i<n.length;i++)this[n[i].unit](t[n[i].unit])}else if(t=W(t),D(this[t]))return this[t](e);return this}function U(t,e,n){var i=""+Math.abs(t),r=e-i.length,o=t>=0;return(o?n?"+":"":"-")+Math.pow(10,Math.max(0,r)).toString().substr(1)+i}function G(t,e,n,i){var r=i;"string"==typeof i&&(r=function(){return this[i]()}),t&&(Bi[t]=r),e&&(Bi[e[0]]=function(){return U(r.apply(this,arguments),e[1],e[2])}),n&&(Bi[n]=function(){return this.localeData().ordinal(r.apply(this,arguments),t)})}function Z(t){return t.match(/\[[\s\S]/)?t.replace(/^\[|\]$/g,""):t.replace(/\\/g,"")}function X(t){var e,n,i=t.match(Wi);for(e=0,n=i.length;e<n;e++)Bi[i[e]]?i[e]=Bi[i[e]]:i[e]=Z(i[e]);return function(e){var r,o="";for(r=0;r<n;r++)o+=D(i[r])?i[r].call(e,t):i[r];return o}}function Q(t,e){return t.isValid()?(e=J(e,t.localeData()),Hi[e]=Hi[e]||X(e),Hi[e](t)):t.localeData().invalidDate()}function J(t,e){function n(t){return e.longDateFormat(t)||t}var i=5;for(zi.lastIndex=0;i>=0&&zi.test(t);)t=t.replace(zi,n),zi.lastIndex=0,i-=1;return t}function K(t,e,n){or[t]=D(e)?e:function(t,i){return t&&n?n:e}}function tt(t,e){return d(or,t)?or[t](e._strict,e._locale):new RegExp(et(t))}function et(t){return nt(t.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(t,e,n,i,r){return e||n||i||r}))}function nt(t){return t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function it(t,e){var n,i=e;for("string"==typeof t&&(t=[t]),l(e)&&(i=function(t,n){n[e]=w(t)}),n=0;n<t.length;n++)ar[t[n]]=i}function rt(t,e){it(t,function(t,n,i,r){i._w=i._w||{},e(t,i._w,i,r)})}function ot(t,e,n){null!=e&&d(ar,t)&&ar[t](e,n._a,n,t)}function at(t,e){return new Date(Date.UTC(t,e+1,0)).getUTCDate()}function st(t,e){return t?r(this._months)?this._months[t.month()]:this._months[(this._months.isFormat||vr).test(e)?"format":"standalone"][t.month()]:r(this._months)?this._months:this._months.standalone}function lt(t,e){return t?r(this._monthsShort)?this._monthsShort[t.month()]:this._monthsShort[vr.test(e)?"format":"standalone"][t.month()]:r(this._monthsShort)?this._monthsShort:this._monthsShort.standalone}function ut(t,e,n){var i,r,o,a=t.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],i=0;i<12;++i)o=f([2e3,i]),this._shortMonthsParse[i]=this.monthsShort(o,"").toLocaleLowerCase(),this._longMonthsParse[i]=this.months(o,"").toLocaleLowerCase();return n?"MMM"===e?(r=mr.call(this._shortMonthsParse,a),r!==-1?r:null):(r=mr.call(this._longMonthsParse,a),r!==-1?r:null):"MMM"===e?(r=mr.call(this._shortMonthsParse,a),r!==-1?r:(r=mr.call(this._longMonthsParse,a),r!==-1?r:null)):(r=mr.call(this._longMonthsParse,a),r!==-1?r:(r=mr.call(this._shortMonthsParse,a),r!==-1?r:null))}function ct(t,e,n){var i,r,o;if(this._monthsParseExact)return ut.call(this,t,e,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),i=0;i<12;i++){if(r=f([2e3,i]),n&&!this._longMonthsParse[i]&&(this._longMonthsParse[i]=new RegExp("^"+this.months(r,"").replace(".","")+"$","i"),this._shortMonthsParse[i]=new RegExp("^"+this.monthsShort(r,"").replace(".","")+"$","i")),n||this._monthsParse[i]||(o="^"+this.months(r,"")+"|^"+this.monthsShort(r,""),this._monthsParse[i]=new RegExp(o.replace(".",""),"i")),n&&"MMMM"===e&&this._longMonthsParse[i].test(t))return i;if(n&&"MMM"===e&&this._shortMonthsParse[i].test(t))return i;if(!n&&this._monthsParse[i].test(t))return i}}function dt(t,e){var n;if(!t.isValid())return t;if("string"==typeof e)if(/^\d+$/.test(e))e=w(e);else if(e=t.localeData().monthsParse(e),!l(e))return t;return n=Math.min(t.date(),at(t.year(),e)),t._d["set"+(t._isUTC?"UTC":"")+"Month"](e,n),t}function ht(e){return null!=e?(dt(this,e),t.updateOffset(this,!0),this):j(this,"Month")}function ft(){return at(this.year(),this.month())}function pt(t){return this._monthsParseExact?(d(this,"_monthsRegex")||mt.call(this),t?this._monthsShortStrictRegex:this._monthsShortRegex):(d(this,"_monthsShortRegex")||(this._monthsShortRegex=xr),this._monthsShortStrictRegex&&t?this._monthsShortStrictRegex:this._monthsShortRegex)}function gt(t){return this._monthsParseExact?(d(this,"_monthsRegex")||mt.call(this),t?this._monthsStrictRegex:this._monthsRegex):(d(this,"_monthsRegex")||(this._monthsRegex=_r),this._monthsStrictRegex&&t?this._monthsStrictRegex:this._monthsRegex)}function mt(){function t(t,e){return e.length-t.length}var e,n,i=[],r=[],o=[];for(e=0;e<12;e++)n=f([2e3,e]),i.push(this.monthsShort(n,"")),r.push(this.months(n,"")),o.push(this.months(n,"")),o.push(this.monthsShort(n,""));for(i.sort(t),r.sort(t),o.sort(t),e=0;e<12;e++)i[e]=nt(i[e]),r[e]=nt(r[e]);for(e=0;e<24;e++)o[e]=nt(o[e]);this._monthsRegex=new RegExp("^("+o.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+i.join("|")+")","i")}function vt(t){return yt(t)?366:365}function yt(t){return t%4===0&&t%100!==0||t%400===0}function bt(){return yt(this.year())}function xt(t,e,n,i,r,o,a){var s=new Date(t,e,n,i,r,o,a);return t<100&&t>=0&&isFinite(s.getFullYear())&&s.setFullYear(t),s}function _t(t){var e=new Date(Date.UTC.apply(null,arguments));return t<100&&t>=0&&isFinite(e.getUTCFullYear())&&e.setUTCFullYear(t),e}function wt(t,e,n){var i=7+e-n,r=(7+_t(t,0,i).getUTCDay()-e)%7;return-r+i-1}function kt(t,e,n,i,r){var o,a,s=(7+n-i)%7,l=wt(t,i,r),u=1+7*(e-1)+s+l;return u<=0?(o=t-1,a=vt(o)+u):u>vt(t)?(o=t+1,a=u-vt(t)):(o=t,a=u),{year:o,dayOfYear:a}}function St(t,e,n){var i,r,o=wt(t.year(),e,n),a=Math.floor((t.dayOfYear()-o-1)/7)+1;return a<1?(r=t.year()-1,i=a+Ct(r,e,n)):a>Ct(t.year(),e,n)?(i=a-Ct(t.year(),e,n),r=t.year()+1):(r=t.year(),i=a),{week:i,year:r}}function Ct(t,e,n){var i=wt(t,e,n),r=wt(t+1,e,n);return(vt(t)-i+r)/7}function Mt(t){return St(t,this._week.dow,this._week.doy).week}function Dt(){return this._week.dow}function Tt(){return this._week.doy}function Pt(t){var e=this.localeData().week(this);return null==t?e:this.add(7*(t-e),"d")}function At(t){var e=St(this,1,4).week;return null==t?e:this.add(7*(t-e),"d")}function It(t,e){return"string"!=typeof t?t:isNaN(t)?(t=e.weekdaysParse(t),"number"==typeof t?t:null):parseInt(t,10)}function Ot(t,e){return"string"==typeof t?e.weekdaysParse(t)%7||7:isNaN(t)?null:t}function Ft(t,e){return t?r(this._weekdays)?this._weekdays[t.day()]:this._weekdays[this._weekdays.isFormat.test(e)?"format":"standalone"][t.day()]:r(this._weekdays)?this._weekdays:this._weekdays.standalone}function Lt(t){return t?this._weekdaysShort[t.day()]:this._weekdaysShort}function Et(t){return t?this._weekdaysMin[t.day()]:this._weekdaysMin}function Rt(t,e,n){var i,r,o,a=t.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],i=0;i<7;++i)o=f([2e3,1]).day(i),this._minWeekdaysParse[i]=this.weekdaysMin(o,"").toLocaleLowerCase(),this._shortWeekdaysParse[i]=this.weekdaysShort(o,"").toLocaleLowerCase(),this._weekdaysParse[i]=this.weekdays(o,"").toLocaleLowerCase();return n?"dddd"===e?(r=mr.call(this._weekdaysParse,a),r!==-1?r:null):"ddd"===e?(r=mr.call(this._shortWeekdaysParse,a),r!==-1?r:null):(r=mr.call(this._minWeekdaysParse,a),r!==-1?r:null):"dddd"===e?(r=mr.call(this._weekdaysParse,a),r!==-1?r:(r=mr.call(this._shortWeekdaysParse,a),r!==-1?r:(r=mr.call(this._minWeekdaysParse,a),r!==-1?r:null))):"ddd"===e?(r=mr.call(this._shortWeekdaysParse,a),r!==-1?r:(r=mr.call(this._weekdaysParse,a),r!==-1?r:(r=mr.call(this._minWeekdaysParse,a),r!==-1?r:null))):(r=mr.call(this._minWeekdaysParse,a),r!==-1?r:(r=mr.call(this._weekdaysParse,a),r!==-1?r:(r=mr.call(this._shortWeekdaysParse,a),r!==-1?r:null)))}function Nt(t,e,n){var i,r,o;if(this._weekdaysParseExact)return Rt.call(this,t,e,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),i=0;i<7;i++){if(r=f([2e3,1]).day(i),n&&!this._fullWeekdaysParse[i]&&(this._fullWeekdaysParse[i]=new RegExp("^"+this.weekdays(r,"").replace(".",".?")+"$","i"),this._shortWeekdaysParse[i]=new RegExp("^"+this.weekdaysShort(r,"").replace(".",".?")+"$","i"),this._minWeekdaysParse[i]=new RegExp("^"+this.weekdaysMin(r,"").replace(".",".?")+"$","i")),this._weekdaysParse[i]||(o="^"+this.weekdays(r,"")+"|^"+this.weekdaysShort(r,"")+"|^"+this.weekdaysMin(r,""),this._weekdaysParse[i]=new RegExp(o.replace(".",""),"i")),n&&"dddd"===e&&this._fullWeekdaysParse[i].test(t))return i;if(n&&"ddd"===e&&this._shortWeekdaysParse[i].test(t))return i;if(n&&"dd"===e&&this._minWeekdaysParse[i].test(t))return i;if(!n&&this._weekdaysParse[i].test(t))return i}}function Wt(t){if(!this.isValid())return null!=t?this:NaN;var e=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=t?(t=It(t,this.localeData()),this.add(t-e,"d")):e}function zt(t){if(!this.isValid())return null!=t?this:NaN;var e=(this.day()+7-this.localeData()._week.dow)%7;return null==t?e:this.add(t-e,"d")}function Ht(t){if(!this.isValid())return null!=t?this:NaN;if(null!=t){var e=Ot(t,this.localeData());return this.day(this.day()%7?e:e-7)}return this.day()||7}function Bt(t){return this._weekdaysParseExact?(d(this,"_weekdaysRegex")||$t.call(this),t?this._weekdaysStrictRegex:this._weekdaysRegex):(d(this,"_weekdaysRegex")||(this._weekdaysRegex=Dr),this._weekdaysStrictRegex&&t?this._weekdaysStrictRegex:this._weekdaysRegex)}function Vt(t){return this._weekdaysParseExact?(d(this,"_weekdaysRegex")||$t.call(this),t?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(d(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=Tr),this._weekdaysShortStrictRegex&&t?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)}function jt(t){return this._weekdaysParseExact?(d(this,"_weekdaysRegex")||$t.call(this),t?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(d(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=Pr),this._weekdaysMinStrictRegex&&t?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)}function $t(){function t(t,e){return e.length-t.length}var e,n,i,r,o,a=[],s=[],l=[],u=[];for(e=0;e<7;e++)n=f([2e3,1]).day(e),i=this.weekdaysMin(n,""),r=this.weekdaysShort(n,""),o=this.weekdays(n,""),a.push(i),s.push(r),l.push(o),u.push(i),u.push(r),u.push(o);for(a.sort(t),s.sort(t),l.sort(t),u.sort(t),e=0;e<7;e++)s[e]=nt(s[e]),l[e]=nt(l[e]),u[e]=nt(u[e]);this._weekdaysRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+s.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+a.join("|")+")","i")}function Yt(){return this.hours()%12||12}function qt(){return this.hours()||24}function Ut(t,e){G(t,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),e)})}function Gt(t,e){return e._meridiemParse}function Zt(t){return"p"===(t+"").toLowerCase().charAt(0)}function Xt(t,e,n){return t>11?n?"pm":"PM":n?"am":"AM"}function Qt(t){return t?t.toLowerCase().replace("_","-"):t}function Jt(t){for(var e,n,i,r,o=0;o<t.length;){for(r=Qt(t[o]).split("-"),e=r.length,n=Qt(t[o+1]),n=n?n.split("-"):null;e>0;){if(i=Kt(r.slice(0,e).join("-")))return i;if(n&&n.length>=e&&k(r,n,!0)>=e-1)break;e--}o++}return null}function Kt(t){var i=null;if(!Lr[t]&&"undefined"!=typeof n&&n&&n.exports)try{i=Ar._abbr,e("./locale/"+t),te(i)}catch(t){}return Lr[t]}function te(t,e){var n;return t&&(n=s(e)?ie(t):ee(t,e),n&&(Ar=n)),Ar._abbr}function ee(t,e){if(null!==e){var n=Fr;if(e.abbr=t,null!=Lr[t])M("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),n=Lr[t]._config;else if(null!=e.parentLocale){if(null==Lr[e.parentLocale])return Er[e.parentLocale]||(Er[e.parentLocale]=[]),Er[e.parentLocale].push({name:t,config:e}),null;n=Lr[e.parentLocale]._config}return Lr[t]=new A(P(n,e)),Er[t]&&Er[t].forEach(function(t){ee(t.name,t.config)}),te(t),Lr[t]}return delete Lr[t],null}function ne(t,e){if(null!=e){var n,i=Fr;null!=Lr[t]&&(i=Lr[t]._config),e=P(i,e),n=new A(e),n.parentLocale=Lr[t],Lr[t]=n,te(t)}else null!=Lr[t]&&(null!=Lr[t].parentLocale?Lr[t]=Lr[t].parentLocale:null!=Lr[t]&&delete Lr[t]);return Lr[t]}function ie(t){var e;if(t&&t._locale&&t._locale._abbr&&(t=t._locale._abbr),!t)return Ar;if(!r(t)){if(e=Kt(t))return e;t=[t]}return Jt(t)}function re(){return Pi(Lr)}function oe(t){var e,n=t._a;return n&&g(t).overflow===-2&&(e=n[lr]<0||n[lr]>11?lr:n[ur]<1||n[ur]>at(n[sr],n[lr])?ur:n[cr]<0||n[cr]>24||24===n[cr]&&(0!==n[dr]||0!==n[hr]||0!==n[fr])?cr:n[dr]<0||n[dr]>59?dr:n[hr]<0||n[hr]>59?hr:n[fr]<0||n[fr]>999?fr:-1,g(t)._overflowDayOfYear&&(e<sr||e>ur)&&(e=ur),g(t)._overflowWeeks&&e===-1&&(e=pr),g(t)._overflowWeekday&&e===-1&&(e=gr),g(t).overflow=e),t}function ae(t){var e,n,i,r,o,a,s=t._i,l=Rr.exec(s)||Nr.exec(s);if(l){for(g(t).iso=!0,e=0,n=zr.length;e<n;e++)if(zr[e][1].exec(l[1])){r=zr[e][0],i=zr[e][2]!==!1;break}if(null==r)return void(t._isValid=!1);if(l[3]){for(e=0,n=Hr.length;e<n;e++)if(Hr[e][1].exec(l[3])){o=(l[2]||" ")+Hr[e][0];break}if(null==o)return void(t._isValid=!1)}if(!i&&null!=o)return void(t._isValid=!1);if(l[4]){if(!Wr.exec(l[4]))return void(t._isValid=!1);a="Z"}t._f=r+(o||"")+(a||""),fe(t)}else t._isValid=!1}function se(t){var e,n,i,r,o,a,s,l,u={" GMT":" +0000"," EDT":" -0400"," EST":" -0500"," CDT":" -0500"," CST":" -0600"," MDT":" -0600"," MST":" -0700"," PDT":" -0700"," PST":" -0800"},c="YXWVUTSRQPONZABCDEFGHIKLM";if(e=t._i.replace(/\([^\)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s|\s$/g,""),n=Vr.exec(e)){if(i=n[1]?"ddd"+(5===n[1].length?", ":" "):"",r="D MMM "+(n[2].length>10?"YYYY ":"YY "),o="HH:mm"+(n[4]?":ss":""),n[1]){var d=new Date(n[2]),h=["Sun","Mon","Tue","Wed","Thu","Fri","Sat"][d.getDay()];if(n[1].substr(0,3)!==h)return g(t).weekdayMismatch=!0,void(t._isValid=!1)}switch(n[5].length){case 2:0===l?s=" +0000":(l=c.indexOf(n[5][1].toUpperCase())-12,s=(l<0?" -":" +")+(""+l).replace(/^-?/,"0").match(/..$/)[0]+"00");break;case 4:s=u[n[5]];break;default:s=u[" GMT"]}n[5]=s,t._i=n.splice(1).join(""),a=" ZZ",t._f=i+r+o+a,fe(t),g(t).rfc2822=!0}else t._isValid=!1}function le(e){var n=Br.exec(e._i);return null!==n?void(e._d=new Date((+n[1]))):(ae(e),void(e._isValid===!1&&(delete e._isValid,se(e),e._isValid===!1&&(delete e._isValid,t.createFromInputFallback(e)))))}function ue(t,e,n){return null!=t?t:null!=e?e:n}function ce(e){var n=new Date(t.now());return e._useUTC?[n.getUTCFullYear(),n.getUTCMonth(),n.getUTCDate()]:[n.getFullYear(),n.getMonth(),n.getDate()]}function de(t){var e,n,i,r,o=[];if(!t._d){for(i=ce(t),t._w&&null==t._a[ur]&&null==t._a[lr]&&he(t),null!=t._dayOfYear&&(r=ue(t._a[sr],i[sr]),(t._dayOfYear>vt(r)||0===t._dayOfYear)&&(g(t)._overflowDayOfYear=!0),n=_t(r,0,t._dayOfYear),t._a[lr]=n.getUTCMonth(),t._a[ur]=n.getUTCDate()),e=0;e<3&&null==t._a[e];++e)t._a[e]=o[e]=i[e];for(;e<7;e++)t._a[e]=o[e]=null==t._a[e]?2===e?1:0:t._a[e];24===t._a[cr]&&0===t._a[dr]&&0===t._a[hr]&&0===t._a[fr]&&(t._nextDay=!0,t._a[cr]=0),t._d=(t._useUTC?_t:xt).apply(null,o),null!=t._tzm&&t._d.setUTCMinutes(t._d.getUTCMinutes()-t._tzm),t._nextDay&&(t._a[cr]=24)}}function he(t){var e,n,i,r,o,a,s,l;if(e=t._w,null!=e.GG||null!=e.W||null!=e.E)o=1,a=4,n=ue(e.GG,t._a[sr],St(_e(),1,4).year),i=ue(e.W,1),r=ue(e.E,1),(r<1||r>7)&&(l=!0);else{o=t._locale._week.dow,a=t._locale._week.doy;var u=St(_e(),o,a);n=ue(e.gg,t._a[sr],u.year),i=ue(e.w,u.week),null!=e.d?(r=e.d,(r<0||r>6)&&(l=!0)):null!=e.e?(r=e.e+o,(e.e<0||e.e>6)&&(l=!0)):r=o}i<1||i>Ct(n,o,a)?g(t)._overflowWeeks=!0:null!=l?g(t)._overflowWeekday=!0:(s=kt(n,i,r,o,a),t._a[sr]=s.year,t._dayOfYear=s.dayOfYear)}function fe(e){if(e._f===t.ISO_8601)return void ae(e);if(e._f===t.RFC_2822)return void se(e);e._a=[],g(e).empty=!0;var n,i,r,o,a,s=""+e._i,l=s.length,u=0;for(r=J(e._f,e._locale).match(Wi)||[],n=0;n<r.length;n++)o=r[n],i=(s.match(tt(o,e))||[])[0],i&&(a=s.substr(0,s.indexOf(i)),a.length>0&&g(e).unusedInput.push(a),s=s.slice(s.indexOf(i)+i.length),u+=i.length),Bi[o]?(i?g(e).empty=!1:g(e).unusedTokens.push(o),ot(o,i,e)):e._strict&&!i&&g(e).unusedTokens.push(o);g(e).charsLeftOver=l-u,s.length>0&&g(e).unusedInput.push(s),e._a[cr]<=12&&g(e).bigHour===!0&&e._a[cr]>0&&(g(e).bigHour=void 0),g(e).parsedDateParts=e._a.slice(0),g(e).meridiem=e._meridiem,e._a[cr]=pe(e._locale,e._a[cr],e._meridiem),de(e),oe(e)}function pe(t,e,n){var i;return null==n?e:null!=t.meridiemHour?t.meridiemHour(e,n):null!=t.isPM?(i=t.isPM(n),i&&e<12&&(e+=12),i||12!==e||(e=0),e):e}function ge(t){var e,n,i,r,o;if(0===t._f.length)return g(t).invalidFormat=!0,void(t._d=new Date(NaN));for(r=0;r<t._f.length;r++)o=0,e=y({},t),null!=t._useUTC&&(e._useUTC=t._useUTC),e._f=t._f[r],fe(e),m(e)&&(o+=g(e).charsLeftOver,o+=10*g(e).unusedTokens.length,g(e).score=o,(null==i||o<i)&&(i=o,n=e));h(t,n||e)}function me(t){if(!t._d){var e=z(t._i);t._a=c([e.year,e.month,e.day||e.date,e.hour,e.minute,e.second,e.millisecond],function(t){return t&&parseInt(t,10)}),de(t)}}function ve(t){var e=new b(oe(ye(t)));return e._nextDay&&(e.add(1,"d"),e._nextDay=void 0),e}function ye(t){var e=t._i,n=t._f;return t._locale=t._locale||ie(t._l),null===e||void 0===n&&""===e?v({nullInput:!0}):("string"==typeof e&&(t._i=e=t._locale.preparse(e)),x(e)?new b(oe(e)):(u(e)?t._d=e:r(n)?ge(t):n?fe(t):be(t),m(t)||(t._d=null),t))}function be(e){var n=e._i;s(n)?e._d=new Date(t.now()):u(n)?e._d=new Date(n.valueOf()):"string"==typeof n?le(e):r(n)?(e._a=c(n.slice(0),function(t){return parseInt(t,10)}),de(e)):o(n)?me(e):l(n)?e._d=new Date(n):t.createFromInputFallback(e)}function xe(t,e,n,i,s){var l={};return n!==!0&&n!==!1||(i=n,n=void 0),(o(t)&&a(t)||r(t)&&0===t.length)&&(t=void 0),l._isAMomentObject=!0,l._useUTC=l._isUTC=s,l._l=n,l._i=t,l._f=e,l._strict=i,ve(l)}function _e(t,e,n,i){return xe(t,e,n,i,!1)}function we(t,e){var n,i;if(1===e.length&&r(e[0])&&(e=e[0]),!e.length)return _e();for(n=e[0],i=1;i<e.length;++i)e[i].isValid()&&!e[i][t](n)||(n=e[i]);return n}function ke(){var t=[].slice.call(arguments,0);return we("isBefore",t)}function Se(){var t=[].slice.call(arguments,0);return we("isAfter",t)}function Ce(t){for(var e in t)if(qr.indexOf(e)===-1||null!=t[e]&&isNaN(t[e]))return!1;for(var n=!1,i=0;i<qr.length;++i)if(t[qr[i]]){if(n)return!1;parseFloat(t[qr[i]])!==w(t[qr[i]])&&(n=!0)}return!0}function Me(){return this._isValid}function De(){return qe(NaN)}function Te(t){var e=z(t),n=e.year||0,i=e.quarter||0,r=e.month||0,o=e.week||0,a=e.day||0,s=e.hour||0,l=e.minute||0,u=e.second||0,c=e.millisecond||0;this._isValid=Ce(e),this._milliseconds=+c+1e3*u+6e4*l+1e3*s*60*60,this._days=+a+7*o,this._months=+r+3*i+12*n,this._data={},this._locale=ie(),this._bubble()}function Pe(t){return t instanceof Te}function Ae(t){return t<0?Math.round(-1*t)*-1:Math.round(t)}function Ie(t,e){G(t,0,0,function(){var t=this.utcOffset(),n="+";return t<0&&(t=-t,n="-"),n+U(~~(t/60),2)+e+U(~~t%60,2)})}function Oe(t,e){var n=(e||"").match(t);if(null===n)return null;var i=n[n.length-1]||[],r=(i+"").match(Ur)||["-",0,0],o=+(60*r[1])+w(r[2]);return 0===o?0:"+"===r[0]?o:-o}function Fe(e,n){var i,r;return n._isUTC?(i=n.clone(),r=(x(e)||u(e)?e.valueOf():_e(e).valueOf())-i.valueOf(),i._d.setTime(i._d.valueOf()+r),t.updateOffset(i,!1),i):_e(e).local()}function Le(t){return 15*-Math.round(t._d.getTimezoneOffset()/15)}function Ee(e,n,i){var r,o=this._offset||0;if(!this.isValid())return null!=e?this:NaN;if(null!=e){if("string"==typeof e){if(e=Oe(nr,e),null===e)return this}else Math.abs(e)<16&&!i&&(e*=60);return!this._isUTC&&n&&(r=Le(this)),this._offset=e,this._isUTC=!0,null!=r&&this.add(r,"m"),o!==e&&(!n||this._changeInProgress?Qe(this,qe(e-o,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,t.updateOffset(this,!0),this._changeInProgress=null)),this}return this._isUTC?o:Le(this)}function Re(t,e){return null!=t?("string"!=typeof t&&(t=-t),this.utcOffset(t,e),this):-this.utcOffset()}function Ne(t){return this.utcOffset(0,t)}function We(t){return this._isUTC&&(this.utcOffset(0,t),this._isUTC=!1,t&&this.subtract(Le(this),"m")),this}function ze(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var t=Oe(er,this._i);null!=t?this.utcOffset(t):this.utcOffset(0,!0)}return this}function He(t){return!!this.isValid()&&(t=t?_e(t).utcOffset():0,(this.utcOffset()-t)%60===0)}function Be(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()}function Ve(){if(!s(this._isDSTShifted))return this._isDSTShifted;var t={};if(y(t,this),t=ye(t),t._a){var e=t._isUTC?f(t._a):_e(t._a);this._isDSTShifted=this.isValid()&&k(t._a,e.toArray())>0}else this._isDSTShifted=!1;return this._isDSTShifted}function je(){return!!this.isValid()&&!this._isUTC}function $e(){return!!this.isValid()&&this._isUTC}function Ye(){return!!this.isValid()&&this._isUTC&&0===this._offset}function qe(t,e){var n,i,r,o=t,a=null;return Pe(t)?o={ms:t._milliseconds,d:t._days,M:t._months}:l(t)?(o={},e?o[e]=t:o.milliseconds=t):(a=Gr.exec(t))?(n="-"===a[1]?-1:1,o={y:0,d:w(a[ur])*n,h:w(a[cr])*n,m:w(a[dr])*n,s:w(a[hr])*n,ms:w(Ae(1e3*a[fr]))*n}):(a=Zr.exec(t))?(n="-"===a[1]?-1:1,o={y:Ue(a[2],n),M:Ue(a[3],n),w:Ue(a[4],n),d:Ue(a[5],n),h:Ue(a[6],n),m:Ue(a[7],n),s:Ue(a[8],n)}):null==o?o={}:"object"==typeof o&&("from"in o||"to"in o)&&(r=Ze(_e(o.from),_e(o.to)),o={},o.ms=r.milliseconds,o.M=r.months),i=new Te(o),Pe(t)&&d(t,"_locale")&&(i._locale=t._locale),i}function Ue(t,e){var n=t&&parseFloat(t.replace(",","."));return(isNaN(n)?0:n)*e}function Ge(t,e){var n={milliseconds:0,months:0};return n.months=e.month()-t.month()+12*(e.year()-t.year()),t.clone().add(n.months,"M").isAfter(e)&&--n.months,n.milliseconds=+e-+t.clone().add(n.months,"M"),n}function Ze(t,e){var n;return t.isValid()&&e.isValid()?(e=Fe(e,t),t.isBefore(e)?n=Ge(t,e):(n=Ge(e,t),n.milliseconds=-n.milliseconds,n.months=-n.months),n):{milliseconds:0,months:0}}function Xe(t,e){return function(n,i){var r,o;return null===i||isNaN(+i)||(M(e,"moment()."+e+"(period, number) is deprecated. Please use moment()."+e+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),o=n,n=i,i=o),n="string"==typeof n?+n:n,r=qe(n,i),Qe(this,r,t),this}}function Qe(e,n,i,r){var o=n._milliseconds,a=Ae(n._days),s=Ae(n._months);e.isValid()&&(r=null==r||r,o&&e._d.setTime(e._d.valueOf()+o*i),a&&$(e,"Date",j(e,"Date")+a*i),s&&dt(e,j(e,"Month")+s*i),r&&t.updateOffset(e,a||s))}function Je(t,e){var n=t.diff(e,"days",!0);return n<-6?"sameElse":n<-1?"lastWeek":n<0?"lastDay":n<1?"sameDay":n<2?"nextDay":n<7?"nextWeek":"sameElse"}function Ke(e,n){var i=e||_e(),r=Fe(i,this).startOf("day"),o=t.calendarFormat(this,r)||"sameElse",a=n&&(D(n[o])?n[o].call(this,i):n[o]);return this.format(a||this.localeData().calendar(o,this,_e(i)))}function tn(){return new b(this)}function en(t,e){var n=x(t)?t:_e(t);return!(!this.isValid()||!n.isValid())&&(e=W(s(e)?"millisecond":e),"millisecond"===e?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(e).valueOf())}function nn(t,e){var n=x(t)?t:_e(t);return!(!this.isValid()||!n.isValid())&&(e=W(s(e)?"millisecond":e),"millisecond"===e?this.valueOf()<n.valueOf():this.clone().endOf(e).valueOf()<n.valueOf())}function rn(t,e,n,i){return i=i||"()",("("===i[0]?this.isAfter(t,n):!this.isBefore(t,n))&&(")"===i[1]?this.isBefore(e,n):!this.isAfter(e,n))}function on(t,e){var n,i=x(t)?t:_e(t);return!(!this.isValid()||!i.isValid())&&(e=W(e||"millisecond"),"millisecond"===e?this.valueOf()===i.valueOf():(n=i.valueOf(),this.clone().startOf(e).valueOf()<=n&&n<=this.clone().endOf(e).valueOf()))}function an(t,e){return this.isSame(t,e)||this.isAfter(t,e)}function sn(t,e){return this.isSame(t,e)||this.isBefore(t,e)}function ln(t,e,n){var i,r,o,a;return this.isValid()?(i=Fe(t,this),i.isValid()?(r=6e4*(i.utcOffset()-this.utcOffset()),e=W(e),"year"===e||"month"===e||"quarter"===e?(a=un(this,i),"quarter"===e?a/=3:"year"===e&&(a/=12)):(o=this-i,a="second"===e?o/1e3:"minute"===e?o/6e4:"hour"===e?o/36e5:"day"===e?(o-r)/864e5:"week"===e?(o-r)/6048e5:o),n?a:_(a)):NaN):NaN}function un(t,e){var n,i,r=12*(e.year()-t.year())+(e.month()-t.month()),o=t.clone().add(r,"months");return e-o<0?(n=t.clone().add(r-1,"months"),i=(e-o)/(o-n)):(n=t.clone().add(r+1,"months"),i=(e-o)/(n-o)),-(r+i)||0}function cn(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")}function dn(){if(!this.isValid())return null;var t=this.clone().utc();return t.year()<0||t.year()>9999?Q(t,"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]"):D(Date.prototype.toISOString)?this.toDate().toISOString():Q(t,"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]")}function hn(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var t="moment",e="";this.isLocal()||(t=0===this.utcOffset()?"moment.utc":"moment.parseZone",e="Z");var n="["+t+'("]',i=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",r="-MM-DD[T]HH:mm:ss.SSS",o=e+'[")]';return this.format(n+i+r+o)}function fn(e){e||(e=this.isUtc()?t.defaultFormatUtc:t.defaultFormat);var n=Q(this,e);return this.localeData().postformat(n)}function pn(t,e){return this.isValid()&&(x(t)&&t.isValid()||_e(t).isValid())?qe({to:this,from:t}).locale(this.locale()).humanize(!e):this.localeData().invalidDate()}function gn(t){return this.from(_e(),t)}function mn(t,e){return this.isValid()&&(x(t)&&t.isValid()||_e(t).isValid())?qe({from:this,to:t}).locale(this.locale()).humanize(!e):this.localeData().invalidDate()}function vn(t){return this.to(_e(),t)}function yn(t){var e;return void 0===t?this._locale._abbr:(e=ie(t),null!=e&&(this._locale=e),this)}function bn(){return this._locale}function xn(t){switch(t=W(t)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":case"date":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===t&&this.weekday(0),"isoWeek"===t&&this.isoWeekday(1),"quarter"===t&&this.month(3*Math.floor(this.month()/3)),this}function _n(t){return t=W(t),void 0===t||"millisecond"===t?this:("date"===t&&(t="day"),this.startOf(t).add(1,"isoWeek"===t?"week":t).subtract(1,"ms"))}function wn(){return this._d.valueOf()-6e4*(this._offset||0)}function kn(){return Math.floor(this.valueOf()/1e3)}function Sn(){return new Date(this.valueOf())}function Cn(){var t=this;return[t.year(),t.month(),t.date(),t.hour(),t.minute(),t.second(),t.millisecond()]}function Mn(){var t=this;return{years:t.year(),months:t.month(),date:t.date(),hours:t.hours(),minutes:t.minutes(),seconds:t.seconds(),milliseconds:t.milliseconds()}}function Dn(){return this.isValid()?this.toISOString():null}function Tn(){return m(this)}function Pn(){return h({},g(this))}function An(){return g(this).overflow}function In(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}}function On(t,e){G(0,[t,t.length],0,e)}function Fn(t){return Nn.call(this,t,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)}function Ln(t){return Nn.call(this,t,this.isoWeek(),this.isoWeekday(),1,4)}function En(){return Ct(this.year(),1,4)}function Rn(){var t=this.localeData()._week;return Ct(this.year(),t.dow,t.doy)}function Nn(t,e,n,i,r){var o;return null==t?St(this,i,r).year:(o=Ct(t,i,r),e>o&&(e=o),Wn.call(this,t,e,n,i,r))}function Wn(t,e,n,i,r){var o=kt(t,e,n,i,r),a=_t(o.year,0,o.dayOfYear);return this.year(a.getUTCFullYear()),this.month(a.getUTCMonth()),this.date(a.getUTCDate()),this}function zn(t){return null==t?Math.ceil((this.month()+1)/3):this.month(3*(t-1)+this.month()%3)}function Hn(t){var e=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==t?e:this.add(t-e,"d")}function Bn(t,e){e[fr]=w(1e3*("0."+t))}function Vn(){return this._isUTC?"UTC":""}function jn(){return this._isUTC?"Coordinated Universal Time":""}function $n(t){return _e(1e3*t)}function Yn(){return _e.apply(null,arguments).parseZone()}function qn(t){return t}function Un(t,e,n,i){var r=ie(),o=f().set(i,e);return r[n](o,t)}function Gn(t,e,n){if(l(t)&&(e=t,t=void 0),t=t||"",null!=e)return Un(t,e,n,"month");var i,r=[];for(i=0;i<12;i++)r[i]=Un(t,i,n,"month");return r}function Zn(t,e,n,i){"boolean"==typeof t?(l(e)&&(n=e,e=void 0),e=e||""):(e=t,n=e,t=!1,l(e)&&(n=e,e=void 0),e=e||"");var r=ie(),o=t?r._week.dow:0;if(null!=n)return Un(e,(n+o)%7,i,"day");var a,s=[];for(a=0;a<7;a++)s[a]=Un(e,(a+o)%7,i,"day");return s}function Xn(t,e){return Gn(t,e,"months")}function Qn(t,e){return Gn(t,e,"monthsShort")}function Jn(t,e,n){return Zn(t,e,n,"weekdays")}function Kn(t,e,n){return Zn(t,e,n,"weekdaysShort")}function ti(t,e,n){return Zn(t,e,n,"weekdaysMin")}function ei(){var t=this._data;return this._milliseconds=ao(this._milliseconds),this._days=ao(this._days),this._months=ao(this._months),t.milliseconds=ao(t.milliseconds),t.seconds=ao(t.seconds),t.minutes=ao(t.minutes),t.hours=ao(t.hours),t.months=ao(t.months),t.years=ao(t.years),this}function ni(t,e,n,i){var r=qe(e,n);return t._milliseconds+=i*r._milliseconds,t._days+=i*r._days,t._months+=i*r._months,t._bubble()}function ii(t,e){return ni(this,t,e,1)}function ri(t,e){return ni(this,t,e,-1)}function oi(t){return t<0?Math.floor(t):Math.ceil(t)}function ai(){var t,e,n,i,r,o=this._milliseconds,a=this._days,s=this._months,l=this._data;return o>=0&&a>=0&&s>=0||o<=0&&a<=0&&s<=0||(o+=864e5*oi(li(s)+a),a=0,s=0),l.milliseconds=o%1e3,t=_(o/1e3),l.seconds=t%60,e=_(t/60),l.minutes=e%60,n=_(e/60),l.hours=n%24,a+=_(n/24),r=_(si(a)),s+=r,a-=oi(li(r)),i=_(s/12),s%=12,l.days=a,l.months=s,l.years=i,this}function si(t){return 4800*t/146097}function li(t){return 146097*t/4800}function ui(t){if(!this.isValid())return NaN;var e,n,i=this._milliseconds;if(t=W(t),"month"===t||"year"===t)return e=this._days+i/864e5,n=this._months+si(e),"month"===t?n:n/12;switch(e=this._days+Math.round(li(this._months)),t){case"week":return e/7+i/6048e5;case"day":return e+i/864e5;case"hour":return 24*e+i/36e5;case"minute":return 1440*e+i/6e4;case"second":return 86400*e+i/1e3;case"millisecond":return Math.floor(864e5*e)+i;default:throw new Error("Unknown unit "+t)}}function ci(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*w(this._months/12):NaN}function di(t){return function(){return this.as(t)}}function hi(t){return t=W(t),this.isValid()?this[t+"s"]():NaN}function fi(t){return function(){return this.isValid()?this._data[t]:NaN}}function pi(){return _(this.days()/7)}function gi(t,e,n,i,r){return r.relativeTime(e||1,!!n,t,i)}function mi(t,e,n){var i=qe(t).abs(),r=ko(i.as("s")),o=ko(i.as("m")),a=ko(i.as("h")),s=ko(i.as("d")),l=ko(i.as("M")),u=ko(i.as("y")),c=r<=So.ss&&["s",r]||r<So.s&&["ss",r]||o<=1&&["m"]||o<So.m&&["mm",o]||a<=1&&["h"]||a<So.h&&["hh",a]||s<=1&&["d"]||s<So.d&&["dd",s]||l<=1&&["M"]||l<So.M&&["MM",l]||u<=1&&["y"]||["yy",u];
return c[2]=e,c[3]=+t>0,c[4]=n,gi.apply(null,c)}function vi(t){return void 0===t?ko:"function"==typeof t&&(ko=t,!0)}function yi(t,e){return void 0!==So[t]&&(void 0===e?So[t]:(So[t]=e,"s"===t&&(So.ss=e-1),!0))}function bi(t){if(!this.isValid())return this.localeData().invalidDate();var e=this.localeData(),n=mi(this,!t,e);return t&&(n=e.pastFuture(+this,n)),e.postformat(n)}function xi(){if(!this.isValid())return this.localeData().invalidDate();var t,e,n,i=Co(this._milliseconds)/1e3,r=Co(this._days),o=Co(this._months);t=_(i/60),e=_(t/60),i%=60,t%=60,n=_(o/12),o%=12;var a=n,s=o,l=r,u=e,c=t,d=i,h=this.asSeconds();return h?(h<0?"-":"")+"P"+(a?a+"Y":"")+(s?s+"M":"")+(l?l+"D":"")+(u||c||d?"T":"")+(u?u+"H":"")+(c?c+"M":"")+(d?d+"S":""):"P0D"}var _i,wi;wi=Array.prototype.some?Array.prototype.some:function(t){for(var e=Object(this),n=e.length>>>0,i=0;i<n;i++)if(i in e&&t.call(this,e[i],i,e))return!0;return!1};var ki=wi,Si=t.momentProperties=[],Ci=!1,Mi={};t.suppressDeprecationWarnings=!1,t.deprecationHandler=null;var Di;Di=Object.keys?Object.keys:function(t){var e,n=[];for(e in t)d(t,e)&&n.push(e);return n};var Ti,Pi=Di,Ai={sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},Ii={LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},Oi="Invalid date",Fi="%d",Li=/\d{1,2}/,Ei={future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},Ri={},Ni={},Wi=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,zi=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,Hi={},Bi={},Vi=/\d/,ji=/\d\d/,$i=/\d{3}/,Yi=/\d{4}/,qi=/[+-]?\d{6}/,Ui=/\d\d?/,Gi=/\d\d\d\d?/,Zi=/\d\d\d\d\d\d?/,Xi=/\d{1,3}/,Qi=/\d{1,4}/,Ji=/[+-]?\d{1,6}/,Ki=/\d+/,tr=/[+-]?\d+/,er=/Z|[+-]\d\d:?\d\d/gi,nr=/Z|[+-]\d\d(?::?\d\d)?/gi,ir=/[+-]?\d+(\.\d{1,3})?/,rr=/[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i,or={},ar={},sr=0,lr=1,ur=2,cr=3,dr=4,hr=5,fr=6,pr=7,gr=8;Ti=Array.prototype.indexOf?Array.prototype.indexOf:function(t){var e;for(e=0;e<this.length;++e)if(this[e]===t)return e;return-1};var mr=Ti;G("M",["MM",2],"Mo",function(){return this.month()+1}),G("MMM",0,0,function(t){return this.localeData().monthsShort(this,t)}),G("MMMM",0,0,function(t){return this.localeData().months(this,t)}),N("month","M"),H("month",8),K("M",Ui),K("MM",Ui,ji),K("MMM",function(t,e){return e.monthsShortRegex(t)}),K("MMMM",function(t,e){return e.monthsRegex(t)}),it(["M","MM"],function(t,e){e[lr]=w(t)-1}),it(["MMM","MMMM"],function(t,e,n,i){var r=n._locale.monthsParse(t,i,n._strict);null!=r?e[lr]=r:g(n).invalidMonth=t});var vr=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,yr="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),br="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),xr=rr,_r=rr;G("Y",0,0,function(){var t=this.year();return t<=9999?""+t:"+"+t}),G(0,["YY",2],0,function(){return this.year()%100}),G(0,["YYYY",4],0,"year"),G(0,["YYYYY",5],0,"year"),G(0,["YYYYYY",6,!0],0,"year"),N("year","y"),H("year",1),K("Y",tr),K("YY",Ui,ji),K("YYYY",Qi,Yi),K("YYYYY",Ji,qi),K("YYYYYY",Ji,qi),it(["YYYYY","YYYYYY"],sr),it("YYYY",function(e,n){n[sr]=2===e.length?t.parseTwoDigitYear(e):w(e)}),it("YY",function(e,n){n[sr]=t.parseTwoDigitYear(e)}),it("Y",function(t,e){e[sr]=parseInt(t,10)}),t.parseTwoDigitYear=function(t){return w(t)+(w(t)>68?1900:2e3)};var wr=V("FullYear",!0);G("w",["ww",2],"wo","week"),G("W",["WW",2],"Wo","isoWeek"),N("week","w"),N("isoWeek","W"),H("week",5),H("isoWeek",5),K("w",Ui),K("ww",Ui,ji),K("W",Ui),K("WW",Ui,ji),rt(["w","ww","W","WW"],function(t,e,n,i){e[i.substr(0,1)]=w(t)});var kr={dow:0,doy:6};G("d",0,"do","day"),G("dd",0,0,function(t){return this.localeData().weekdaysMin(this,t)}),G("ddd",0,0,function(t){return this.localeData().weekdaysShort(this,t)}),G("dddd",0,0,function(t){return this.localeData().weekdays(this,t)}),G("e",0,0,"weekday"),G("E",0,0,"isoWeekday"),N("day","d"),N("weekday","e"),N("isoWeekday","E"),H("day",11),H("weekday",11),H("isoWeekday",11),K("d",Ui),K("e",Ui),K("E",Ui),K("dd",function(t,e){return e.weekdaysMinRegex(t)}),K("ddd",function(t,e){return e.weekdaysShortRegex(t)}),K("dddd",function(t,e){return e.weekdaysRegex(t)}),rt(["dd","ddd","dddd"],function(t,e,n,i){var r=n._locale.weekdaysParse(t,i,n._strict);null!=r?e.d=r:g(n).invalidWeekday=t}),rt(["d","e","E"],function(t,e,n,i){e[i]=w(t)});var Sr="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),Cr="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),Mr="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),Dr=rr,Tr=rr,Pr=rr;G("H",["HH",2],0,"hour"),G("h",["hh",2],0,Yt),G("k",["kk",2],0,qt),G("hmm",0,0,function(){return""+Yt.apply(this)+U(this.minutes(),2)}),G("hmmss",0,0,function(){return""+Yt.apply(this)+U(this.minutes(),2)+U(this.seconds(),2)}),G("Hmm",0,0,function(){return""+this.hours()+U(this.minutes(),2)}),G("Hmmss",0,0,function(){return""+this.hours()+U(this.minutes(),2)+U(this.seconds(),2)}),Ut("a",!0),Ut("A",!1),N("hour","h"),H("hour",13),K("a",Gt),K("A",Gt),K("H",Ui),K("h",Ui),K("k",Ui),K("HH",Ui,ji),K("hh",Ui,ji),K("kk",Ui,ji),K("hmm",Gi),K("hmmss",Zi),K("Hmm",Gi),K("Hmmss",Zi),it(["H","HH"],cr),it(["k","kk"],function(t,e,n){var i=w(t);e[cr]=24===i?0:i}),it(["a","A"],function(t,e,n){n._isPm=n._locale.isPM(t),n._meridiem=t}),it(["h","hh"],function(t,e,n){e[cr]=w(t),g(n).bigHour=!0}),it("hmm",function(t,e,n){var i=t.length-2;e[cr]=w(t.substr(0,i)),e[dr]=w(t.substr(i)),g(n).bigHour=!0}),it("hmmss",function(t,e,n){var i=t.length-4,r=t.length-2;e[cr]=w(t.substr(0,i)),e[dr]=w(t.substr(i,2)),e[hr]=w(t.substr(r)),g(n).bigHour=!0}),it("Hmm",function(t,e,n){var i=t.length-2;e[cr]=w(t.substr(0,i)),e[dr]=w(t.substr(i))}),it("Hmmss",function(t,e,n){var i=t.length-4,r=t.length-2;e[cr]=w(t.substr(0,i)),e[dr]=w(t.substr(i,2)),e[hr]=w(t.substr(r))});var Ar,Ir=/[ap]\.?m?\.?/i,Or=V("Hours",!0),Fr={calendar:Ai,longDateFormat:Ii,invalidDate:Oi,ordinal:Fi,dayOfMonthOrdinalParse:Li,relativeTime:Ei,months:yr,monthsShort:br,week:kr,weekdays:Sr,weekdaysMin:Mr,weekdaysShort:Cr,meridiemParse:Ir},Lr={},Er={},Rr=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Nr=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,Wr=/Z|[+-]\d\d(?::?\d\d)?/,zr=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],Hr=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],Br=/^\/?Date\((\-?\d+)/i,Vr=/^((?:Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d?\d\s(?:Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(?:\d\d)?\d\d\s)(\d\d:\d\d)(\:\d\d)?(\s(?:UT|GMT|[ECMP][SD]T|[A-IK-Za-ik-z]|[+-]\d{4}))$/;t.createFromInputFallback=C("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(t){t._d=new Date(t._i+(t._useUTC?" UTC":""))}),t.ISO_8601=function(){},t.RFC_2822=function(){};var jr=C("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var t=_e.apply(null,arguments);return this.isValid()&&t.isValid()?t<this?this:t:v()}),$r=C("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var t=_e.apply(null,arguments);return this.isValid()&&t.isValid()?t>this?this:t:v()}),Yr=function(){return Date.now?Date.now():+new Date},qr=["year","quarter","month","week","day","hour","minute","second","millisecond"];Ie("Z",":"),Ie("ZZ",""),K("Z",nr),K("ZZ",nr),it(["Z","ZZ"],function(t,e,n){n._useUTC=!0,n._tzm=Oe(nr,t)});var Ur=/([\+\-]|\d\d)/gi;t.updateOffset=function(){};var Gr=/^(\-)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,Zr=/^(-)?P(?:(-?[0-9,.]*)Y)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)W)?(?:(-?[0-9,.]*)D)?(?:T(?:(-?[0-9,.]*)H)?(?:(-?[0-9,.]*)M)?(?:(-?[0-9,.]*)S)?)?$/;qe.fn=Te.prototype,qe.invalid=De;var Xr=Xe(1,"add"),Qr=Xe(-1,"subtract");t.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",t.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var Jr=C("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(t){return void 0===t?this.localeData():this.locale(t)});G(0,["gg",2],0,function(){return this.weekYear()%100}),G(0,["GG",2],0,function(){return this.isoWeekYear()%100}),On("gggg","weekYear"),On("ggggg","weekYear"),On("GGGG","isoWeekYear"),On("GGGGG","isoWeekYear"),N("weekYear","gg"),N("isoWeekYear","GG"),H("weekYear",1),H("isoWeekYear",1),K("G",tr),K("g",tr),K("GG",Ui,ji),K("gg",Ui,ji),K("GGGG",Qi,Yi),K("gggg",Qi,Yi),K("GGGGG",Ji,qi),K("ggggg",Ji,qi),rt(["gggg","ggggg","GGGG","GGGGG"],function(t,e,n,i){e[i.substr(0,2)]=w(t)}),rt(["gg","GG"],function(e,n,i,r){n[r]=t.parseTwoDigitYear(e)}),G("Q",0,"Qo","quarter"),N("quarter","Q"),H("quarter",7),K("Q",Vi),it("Q",function(t,e){e[lr]=3*(w(t)-1)}),G("D",["DD",2],"Do","date"),N("date","D"),H("date",9),K("D",Ui),K("DD",Ui,ji),K("Do",function(t,e){return t?e._dayOfMonthOrdinalParse||e._ordinalParse:e._dayOfMonthOrdinalParseLenient}),it(["D","DD"],ur),it("Do",function(t,e){e[ur]=w(t.match(Ui)[0],10)});var Kr=V("Date",!0);G("DDD",["DDDD",3],"DDDo","dayOfYear"),N("dayOfYear","DDD"),H("dayOfYear",4),K("DDD",Xi),K("DDDD",$i),it(["DDD","DDDD"],function(t,e,n){n._dayOfYear=w(t)}),G("m",["mm",2],0,"minute"),N("minute","m"),H("minute",14),K("m",Ui),K("mm",Ui,ji),it(["m","mm"],dr);var to=V("Minutes",!1);G("s",["ss",2],0,"second"),N("second","s"),H("second",15),K("s",Ui),K("ss",Ui,ji),it(["s","ss"],hr);var eo=V("Seconds",!1);G("S",0,0,function(){return~~(this.millisecond()/100)}),G(0,["SS",2],0,function(){return~~(this.millisecond()/10)}),G(0,["SSS",3],0,"millisecond"),G(0,["SSSS",4],0,function(){return 10*this.millisecond()}),G(0,["SSSSS",5],0,function(){return 100*this.millisecond()}),G(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond()}),G(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond()}),G(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond()}),G(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond()}),N("millisecond","ms"),H("millisecond",16),K("S",Xi,Vi),K("SS",Xi,ji),K("SSS",Xi,$i);var no;for(no="SSSS";no.length<=9;no+="S")K(no,Ki);for(no="S";no.length<=9;no+="S")it(no,Bn);var io=V("Milliseconds",!1);G("z",0,0,"zoneAbbr"),G("zz",0,0,"zoneName");var ro=b.prototype;ro.add=Xr,ro.calendar=Ke,ro.clone=tn,ro.diff=ln,ro.endOf=_n,ro.format=fn,ro.from=pn,ro.fromNow=gn,ro.to=mn,ro.toNow=vn,ro.get=Y,ro.invalidAt=An,ro.isAfter=en,ro.isBefore=nn,ro.isBetween=rn,ro.isSame=on,ro.isSameOrAfter=an,ro.isSameOrBefore=sn,ro.isValid=Tn,ro.lang=Jr,ro.locale=yn,ro.localeData=bn,ro.max=$r,ro.min=jr,ro.parsingFlags=Pn,ro.set=q,ro.startOf=xn,ro.subtract=Qr,ro.toArray=Cn,ro.toObject=Mn,ro.toDate=Sn,ro.toISOString=dn,ro.inspect=hn,ro.toJSON=Dn,ro.toString=cn,ro.unix=kn,ro.valueOf=wn,ro.creationData=In,ro.year=wr,ro.isLeapYear=bt,ro.weekYear=Fn,ro.isoWeekYear=Ln,ro.quarter=ro.quarters=zn,ro.month=ht,ro.daysInMonth=ft,ro.week=ro.weeks=Pt,ro.isoWeek=ro.isoWeeks=At,ro.weeksInYear=Rn,ro.isoWeeksInYear=En,ro.date=Kr,ro.day=ro.days=Wt,ro.weekday=zt,ro.isoWeekday=Ht,ro.dayOfYear=Hn,ro.hour=ro.hours=Or,ro.minute=ro.minutes=to,ro.second=ro.seconds=eo,ro.millisecond=ro.milliseconds=io,ro.utcOffset=Ee,ro.utc=Ne,ro.local=We,ro.parseZone=ze,ro.hasAlignedHourOffset=He,ro.isDST=Be,ro.isLocal=je,ro.isUtcOffset=$e,ro.isUtc=Ye,ro.isUTC=Ye,ro.zoneAbbr=Vn,ro.zoneName=jn,ro.dates=C("dates accessor is deprecated. Use date instead.",Kr),ro.months=C("months accessor is deprecated. Use month instead",ht),ro.years=C("years accessor is deprecated. Use year instead",wr),ro.zone=C("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",Re),ro.isDSTShifted=C("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",Ve);var oo=A.prototype;oo.calendar=I,oo.longDateFormat=O,oo.invalidDate=F,oo.ordinal=L,oo.preparse=qn,oo.postformat=qn,oo.relativeTime=E,oo.pastFuture=R,oo.set=T,oo.months=st,oo.monthsShort=lt,oo.monthsParse=ct,oo.monthsRegex=gt,oo.monthsShortRegex=pt,oo.week=Mt,oo.firstDayOfYear=Tt,oo.firstDayOfWeek=Dt,oo.weekdays=Ft,oo.weekdaysMin=Et,oo.weekdaysShort=Lt,oo.weekdaysParse=Nt,oo.weekdaysRegex=Bt,oo.weekdaysShortRegex=Vt,oo.weekdaysMinRegex=jt,oo.isPM=Zt,oo.meridiem=Xt,te("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(t){var e=t%10,n=1===w(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th";return t+n}}),t.lang=C("moment.lang is deprecated. Use moment.locale instead.",te),t.langData=C("moment.langData is deprecated. Use moment.localeData instead.",ie);var ao=Math.abs,so=di("ms"),lo=di("s"),uo=di("m"),co=di("h"),ho=di("d"),fo=di("w"),po=di("M"),go=di("y"),mo=fi("milliseconds"),vo=fi("seconds"),yo=fi("minutes"),bo=fi("hours"),xo=fi("days"),_o=fi("months"),wo=fi("years"),ko=Math.round,So={ss:44,s:45,m:45,h:22,d:26,M:11},Co=Math.abs,Mo=Te.prototype;return Mo.isValid=Me,Mo.abs=ei,Mo.add=ii,Mo.subtract=ri,Mo.as=ui,Mo.asMilliseconds=so,Mo.asSeconds=lo,Mo.asMinutes=uo,Mo.asHours=co,Mo.asDays=ho,Mo.asWeeks=fo,Mo.asMonths=po,Mo.asYears=go,Mo.valueOf=ci,Mo._bubble=ai,Mo.get=hi,Mo.milliseconds=mo,Mo.seconds=vo,Mo.minutes=yo,Mo.hours=bo,Mo.days=xo,Mo.weeks=pi,Mo.months=_o,Mo.years=wo,Mo.humanize=bi,Mo.toISOString=xi,Mo.toString=xi,Mo.toJSON=xi,Mo.locale=yn,Mo.localeData=bn,Mo.toIsoString=C("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",xi),Mo.lang=Jr,G("X",0,0,"unix"),G("x",0,0,"valueOf"),K("x",tr),K("X",ir),it("X",function(t,e,n){n._d=new Date(1e3*parseFloat(t,10))}),it("x",function(t,e,n){n._d=new Date(w(t))}),t.version="2.18.1",i(_e),t.fn=ro,t.min=ke,t.max=Se,t.now=Yr,t.utc=f,t.unix=$n,t.months=Xn,t.isDate=u,t.locale=te,t.invalid=v,t.duration=qe,t.isMoment=x,t.weekdays=Jn,t.parseZone=Yn,t.localeData=ie,t.isDuration=Pe,t.monthsShort=Qn,t.weekdaysMin=ti,t.defineLocale=ee,t.updateLocale=ne,t.locales=re,t.weekdaysShort=Kn,t.normalizeUnits=W,t.relativeTimeRounding=vi,t.relativeTimeThreshold=yi,t.calendarFormat=Je,t.prototype=ro,t})},{}],7:[function(t,e,n){var i=t(28)();t(26)(i),t(40)(i),t(22)(i),t(25)(i),t(30)(i),t(21)(i),t(23)(i),t(24)(i),t(29)(i),t(32)(i),t(33)(i),t(31)(i),t(27)(i),t(34)(i),t(35)(i),t(36)(i),t(37)(i),t(38)(i),t(46)(i),t(44)(i),t(45)(i),t(47)(i),t(48)(i),t(49)(i),t(15)(i),t(16)(i),t(17)(i),t(18)(i),t(19)(i),t(20)(i),t(8)(i),t(9)(i),t(10)(i),t(11)(i),t(12)(i),t(13)(i),t(14)(i);var r=[];r.push(t(41)(i),t(42)(i),t(43)(i)),i.plugins.register(r),e.exports=i,"undefined"!=typeof window&&(window.Chart=i)},{10:10,11:11,12:12,13:13,14:14,15:15,16:16,17:17,18:18,19:19,20:20,21:21,22:22,23:23,24:24,25:25,26:26,27:27,28:28,29:29,30:30,31:31,32:32,33:33,34:34,35:35,36:36,37:37,38:38,40:40,41:41,42:42,43:43,44:44,45:45,46:46,47:47,48:48,49:49,8:8,9:9}],8:[function(t,e,n){"use strict";e.exports=function(t){t.Bar=function(e,n){return n.type="bar",new t(e,n)}}},{}],9:[function(t,e,n){"use strict";e.exports=function(t){t.Bubble=function(e,n){return n.type="bubble",new t(e,n)}}},{}],10:[function(t,e,n){"use strict";e.exports=function(t){t.Doughnut=function(e,n){return n.type="doughnut",new t(e,n)}}},{}],11:[function(t,e,n){"use strict";e.exports=function(t){t.Line=function(e,n){return n.type="line",new t(e,n)}}},{}],12:[function(t,e,n){"use strict";e.exports=function(t){t.PolarArea=function(e,n){return n.type="polarArea",new t(e,n)}}},{}],13:[function(t,e,n){"use strict";e.exports=function(t){t.Radar=function(e,n){return n.type="radar",new t(e,n)}}},{}],14:[function(t,e,n){"use strict";e.exports=function(t){var e={hover:{mode:"single"},scales:{xAxes:[{type:"linear",position:"bottom",id:"x-axis-1"}],yAxes:[{type:"linear",position:"left",id:"y-axis-1"}]},tooltips:{callbacks:{title:function(){return""},label:function(t){return"("+t.xLabel+", "+t.yLabel+")"}}}};t.defaults.scatter=e,t.controllers.scatter=t.controllers.line,t.Scatter=function(e,n){return n.type="scatter",new t(e,n)}}},{}],15:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers;t.defaults.bar={hover:{mode:"label"},scales:{xAxes:[{type:"category",categoryPercentage:.8,barPercentage:.9,gridLines:{offsetGridLines:!0}}],yAxes:[{type:"linear"}]}},t.controllers.bar=t.DatasetController.extend({dataElementType:t.elements.Rectangle,initialize:function(){var e,n=this;t.DatasetController.prototype.initialize.apply(n,arguments),e=n.getMeta(),e.stack=n.getDataset().stack,e.bar=!0},update:function(t){var e,n,i=this,r=i.getMeta().data;for(i._ruler=i.getRuler(),e=0,n=r.length;e<n;++e)i.updateElement(r[e],e,t)},updateElement:function(t,n,i){var r=this,o=r.chart,a=r.getMeta(),s=r.getDataset(),l=t.custom||{},u=o.options.elements.rectangle;t._xScale=r.getScaleForId(a.xAxisID),t._yScale=r.getScaleForId(a.yAxisID),t._datasetIndex=r.index,t._index=n,t._model={datasetLabel:s.label,label:o.data.labels[n],borderSkipped:l.borderSkipped?l.borderSkipped:u.borderSkipped,backgroundColor:l.backgroundColor?l.backgroundColor:e.getValueAtIndexOrDefault(s.backgroundColor,n,u.backgroundColor),borderColor:l.borderColor?l.borderColor:e.getValueAtIndexOrDefault(s.borderColor,n,u.borderColor),borderWidth:l.borderWidth?l.borderWidth:e.getValueAtIndexOrDefault(s.borderWidth,n,u.borderWidth)},r.updateElementGeometry(t,n,i),t.pivot()},updateElementGeometry:function(t,e,n){var i=this,r=t._model,o=i.getValueScale(),a=o.getBasePixel(),s=o.isHorizontal(),l=i._ruler||i.getRuler(),u=i.calculateBarValuePixels(i.index,e),c=i.calculateBarIndexPixels(i.index,e,l);r.horizontal=s,r.base=n?a:u.base,r.x=s?n?a:u.head:c.center,r.y=s?c.center:n?a:u.head,r.height=s?c.size:void 0,r.width=s?void 0:c.size},getValueScaleId:function(){return this.getMeta().yAxisID},getIndexScaleId:function(){return this.getMeta().xAxisID},getValueScale:function(){return this.getScaleForId(this.getValueScaleId())},getIndexScale:function(){return this.getScaleForId(this.getIndexScaleId())},getStackCount:function(t){var e,n,i=this,r=i.chart,o=i.getIndexScale(),a=o.options.stacked,s=void 0===t?r.data.datasets.length:t+1,l=[];for(e=0;e<s;++e)n=r.getDatasetMeta(e),n.bar&&r.isDatasetVisible(e)&&(a===!1||a===!0&&l.indexOf(n.stack)===-1||void 0===a&&(void 0===n.stack||l.indexOf(n.stack)===-1))&&l.push(n.stack);return l.length},getStackIndex:function(t){return this.getStackCount(t)-1},getRuler:function(){var t=this,n=t.getIndexScale(),i=n.options,r=t.getStackCount(),o=n.isHorizontal()?n.width:n.height,a=o/n.ticks.length,s=a*i.categoryPercentage,l=s/r,u=l*i.barPercentage;return u=Math.min(e.getValueOrDefault(i.barThickness,u),e.getValueOrDefault(i.maxBarThickness,1/0)),{stackCount:r,tickSize:a,categorySize:s,categorySpacing:a-s,fullBarSize:l,barSize:u,barSpacing:l-u,scale:n}},calculateBarValuePixels:function(t,e){var n,i,r,o,a,s,l=this,u=l.chart,c=l.getMeta(),d=l.getValueScale(),h=u.data.datasets,f=Number(h[t].data[e]),p=d.options.stacked,g=c.stack,m=0;if(p||void 0===p&&void 0!==g)for(n=0;n<t;++n)i=u.getDatasetMeta(n),i.bar&&i.stack===g&&i.controller.getValueScaleId()===d.id&&u.isDatasetVisible(n)&&(r=Number(h[n].data[e]),(f<0&&r<0||f>=0&&r>0)&&(m+=r));return o=d.getPixelForValue(m),a=d.getPixelForValue(m+f),s=(a-o)/2,{size:s,base:o,head:a,center:a+s/2}},calculateBarIndexPixels:function(t,e,n){var i=this,r=n.scale,o=i.chart.isCombo,a=i.getStackIndex(t),s=r.getPixelForValue(null,e,t,o),l=n.barSize;return s-=o?n.tickSize/2:0,s+=n.fullBarSize*a,s+=n.categorySpacing/2,s+=n.barSpacing/2,{size:l,base:s,head:s+l,center:s+l/2}},draw:function(){var t,n=this,i=n.chart,r=n.getMeta().data,o=n.getDataset(),a=r.length,s=0;for(e.canvas.clipArea(i.ctx,i.chartArea);s<a;++s)t=o.data[s],null===t||void 0===t||isNaN(t)||r[s].draw();e.canvas.unclipArea(i.ctx)},setHoverStyle:function(t){var n=this.chart.data.datasets[t._datasetIndex],i=t._index,r=t.custom||{},o=t._model;o.backgroundColor=r.hoverBackgroundColor?r.hoverBackgroundColor:e.getValueAtIndexOrDefault(n.hoverBackgroundColor,i,e.getHoverColor(o.backgroundColor)),o.borderColor=r.hoverBorderColor?r.hoverBorderColor:e.getValueAtIndexOrDefault(n.hoverBorderColor,i,e.getHoverColor(o.borderColor)),o.borderWidth=r.hoverBorderWidth?r.hoverBorderWidth:e.getValueAtIndexOrDefault(n.hoverBorderWidth,i,o.borderWidth)},removeHoverStyle:function(t){var n=this.chart.data.datasets[t._datasetIndex],i=t._index,r=t.custom||{},o=t._model,a=this.chart.options.elements.rectangle;o.backgroundColor=r.backgroundColor?r.backgroundColor:e.getValueAtIndexOrDefault(n.backgroundColor,i,a.backgroundColor),o.borderColor=r.borderColor?r.borderColor:e.getValueAtIndexOrDefault(n.borderColor,i,a.borderColor),o.borderWidth=r.borderWidth?r.borderWidth:e.getValueAtIndexOrDefault(n.borderWidth,i,a.borderWidth)}}),t.defaults.horizontalBar={hover:{mode:"label"},scales:{xAxes:[{type:"linear",position:"bottom"}],yAxes:[{position:"left",type:"category",categoryPercentage:.8,barPercentage:.9,gridLines:{offsetGridLines:!0}}]},elements:{rectangle:{borderSkipped:"left"}},tooltips:{callbacks:{title:function(t,e){var n="";return t.length>0&&(t[0].yLabel?n=t[0].yLabel:e.labels.length>0&&t[0].index<e.labels.length&&(n=e.labels[t[0].index])),n},label:function(t,e){var n=e.datasets[t.datasetIndex].label||"";return n+": "+t.xLabel}}}},t.controllers.horizontalBar=t.controllers.bar.extend({getValueScaleId:function(){return this.getMeta().xAxisID},getIndexScaleId:function(){return this.getMeta().yAxisID}})}},{}],16:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers;t.defaults.bubble={hover:{mode:"single"},scales:{xAxes:[{type:"linear",position:"bottom",id:"x-axis-0"}],yAxes:[{type:"linear",position:"left",id:"y-axis-0"}]},tooltips:{callbacks:{title:function(){return""},label:function(t,e){var n=e.datasets[t.datasetIndex].label||"",i=e.datasets[t.datasetIndex].data[t.index];return n+": ("+t.xLabel+", "+t.yLabel+", "+i.r+")"}}}},t.controllers.bubble=t.DatasetController.extend({dataElementType:t.elements.Point,update:function(t){var n=this,i=n.getMeta(),r=i.data;e.each(r,function(e,i){n.updateElement(e,i,t)})},updateElement:function(n,i,r){var o=this,a=o.getMeta(),s=o.getScaleForId(a.xAxisID),l=o.getScaleForId(a.yAxisID),u=n.custom||{},c=o.getDataset(),d=c.data[i],h=o.chart.options.elements.point,f=o.index;e.extend(n,{_xScale:s,_yScale:l,_datasetIndex:f,_index:i,_model:{x:r?s.getPixelForDecimal(.5):s.getPixelForValue("object"==typeof d?d:NaN,i,f,o.chart.isCombo),y:r?l.getBasePixel():l.getPixelForValue(d,i,f),radius:r?0:u.radius?u.radius:o.getRadius(d),hitRadius:u.hitRadius?u.hitRadius:e.getValueAtIndexOrDefault(c.hitRadius,i,h.hitRadius)}}),t.DatasetController.prototype.removeHoverStyle.call(o,n,h);var p=n._model;p.skip=u.skip?u.skip:isNaN(p.x)||isNaN(p.y),n.pivot()},getRadius:function(t){return t.r||this.chart.options.elements.point.radius},setHoverStyle:function(n){var i=this;t.DatasetController.prototype.setHoverStyle.call(i,n);var r=i.chart.data.datasets[n._datasetIndex],o=n._index,a=n.custom||{},s=n._model;s.radius=a.hoverRadius?a.hoverRadius:e.getValueAtIndexOrDefault(r.hoverRadius,o,i.chart.options.elements.point.hoverRadius)+i.getRadius(r.data[o])},removeHoverStyle:function(e){var n=this;t.DatasetController.prototype.removeHoverStyle.call(n,e,n.chart.options.elements.point);var i=n.chart.data.datasets[e._datasetIndex].data[e._index],r=e.custom||{},o=e._model;o.radius=r.radius?r.radius:n.getRadius(i)}})}},{}],17:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers,n=t.defaults;n.doughnut={animation:{animateRotate:!0,animateScale:!1},aspectRatio:1,hover:{mode:"single"},legendCallback:function(t){var e=[];e.push('<ul class="'+t.id+'-legend">');var n=t.data,i=n.datasets,r=n.labels;if(i.length)for(var o=0;o<i[0].data.length;++o)e.push('<li><span style="background-color:'+i[0].backgroundColor[o]+'"></span>'),r[o]&&e.push(r[o]),e.push("</li>");return e.push("</ul>"),e.join("")},legend:{labels:{generateLabels:function(t){var n=t.data;return n.labels.length&&n.datasets.length?n.labels.map(function(i,r){var o=t.getDatasetMeta(0),a=n.datasets[0],s=o.data[r],l=s&&s.custom||{},u=e.getValueAtIndexOrDefault,c=t.options.elements.arc,d=l.backgroundColor?l.backgroundColor:u(a.backgroundColor,r,c.backgroundColor),h=l.borderColor?l.borderColor:u(a.borderColor,r,c.borderColor),f=l.borderWidth?l.borderWidth:u(a.borderWidth,r,c.borderWidth);return{text:i,fillStyle:d,strokeStyle:h,lineWidth:f,hidden:isNaN(a.data[r])||o.data[r].hidden,index:r}}):[]}},onClick:function(t,e){var n,i,r,o=e.index,a=this.chart;for(n=0,i=(a.data.datasets||[]).length;n<i;++n)r=a.getDatasetMeta(n),r.data[o]&&(r.data[o].hidden=!r.data[o].hidden);a.update()}},cutoutPercentage:50,rotation:Math.PI*-.5,circumference:2*Math.PI,tooltips:{callbacks:{title:function(){return""},label:function(t,n){var i=n.labels[t.index],r=": "+n.datasets[t.datasetIndex].data[t.index];return e.isArray(i)?(i=i.slice(),i[0]+=r):i+=r,i}}}},n.pie=e.clone(n.doughnut),e.extend(n.pie,{cutoutPercentage:0}),t.controllers.doughnut=t.controllers.pie=t.DatasetController.extend({dataElementType:t.elements.Arc,linkScales:e.noop,getRingIndex:function(t){for(var e=0,n=0;n<t;++n)this.chart.isDatasetVisible(n)&&++e;return e},update:function(t){var n=this,i=n.chart,r=i.chartArea,o=i.options,a=o.elements.arc,s=r.right-r.left-a.borderWidth,l=r.bottom-r.top-a.borderWidth,u=Math.min(s,l),c={x:0,y:0},d=n.getMeta(),h=o.cutoutPercentage,f=o.circumference;if(f<2*Math.PI){var p=o.rotation%(2*Math.PI);p+=2*Math.PI*(p>=Math.PI?-1:p<-Math.PI?1:0);var g=p+f,m={x:Math.cos(p),y:Math.sin(p)},v={x:Math.cos(g),y:Math.sin(g)},y=p<=0&&0<=g||p<=2*Math.PI&&2*Math.PI<=g,b=p<=.5*Math.PI&&.5*Math.PI<=g||p<=2.5*Math.PI&&2.5*Math.PI<=g,x=p<=-Math.PI&&-Math.PI<=g||p<=Math.PI&&Math.PI<=g,_=p<=.5*-Math.PI&&.5*-Math.PI<=g||p<=1.5*Math.PI&&1.5*Math.PI<=g,w=h/100,k={x:x?-1:Math.min(m.x*(m.x<0?1:w),v.x*(v.x<0?1:w)),y:_?-1:Math.min(m.y*(m.y<0?1:w),v.y*(v.y<0?1:w))},S={x:y?1:Math.max(m.x*(m.x>0?1:w),v.x*(v.x>0?1:w)),y:b?1:Math.max(m.y*(m.y>0?1:w),v.y*(v.y>0?1:w))},C={width:.5*(S.x-k.x),height:.5*(S.y-k.y)};u=Math.min(s/C.width,l/C.height),c={x:(S.x+k.x)*-.5,y:(S.y+k.y)*-.5}}i.borderWidth=n.getMaxBorderWidth(d.data),i.outerRadius=Math.max((u-i.borderWidth)/2,0),i.innerRadius=Math.max(h?i.outerRadius/100*h:0,0),i.radiusLength=(i.outerRadius-i.innerRadius)/i.getVisibleDatasetCount(),i.offsetX=c.x*i.outerRadius,i.offsetY=c.y*i.outerRadius,d.total=n.calculateTotal(),n.outerRadius=i.outerRadius-i.radiusLength*n.getRingIndex(n.index),n.innerRadius=Math.max(n.outerRadius-i.radiusLength,0),e.each(d.data,function(e,i){n.updateElement(e,i,t)})},updateElement:function(t,n,i){var r=this,o=r.chart,a=o.chartArea,s=o.options,l=s.animation,u=(a.left+a.right)/2,c=(a.top+a.bottom)/2,d=s.rotation,h=s.rotation,f=r.getDataset(),p=i&&l.animateRotate?0:t.hidden?0:r.calculateCircumference(f.data[n])*(s.circumference/(2*Math.PI)),g=i&&l.animateScale?0:r.innerRadius,m=i&&l.animateScale?0:r.outerRadius,v=e.getValueAtIndexOrDefault;e.extend(t,{_datasetIndex:r.index,_index:n,_model:{x:u+o.offsetX,y:c+o.offsetY,startAngle:d,endAngle:h,circumference:p,outerRadius:m,innerRadius:g,label:v(f.label,n,o.data.labels[n])}});var y=t._model;this.removeHoverStyle(t),i&&l.animateRotate||(0===n?y.startAngle=s.rotation:y.startAngle=r.getMeta().data[n-1]._model.endAngle,y.endAngle=y.startAngle+y.circumference),t.pivot()},removeHoverStyle:function(e){t.DatasetController.prototype.removeHoverStyle.call(this,e,this.chart.options.elements.arc)},calculateTotal:function(){var t,n=this.getDataset(),i=this.getMeta(),r=0;return e.each(i.data,function(e,i){t=n.data[i],isNaN(t)||e.hidden||(r+=Math.abs(t))}),r},calculateCircumference:function(t){var e=this.getMeta().total;return e>0&&!isNaN(t)?2*Math.PI*(t/e):0},getMaxBorderWidth:function(t){for(var e,n,i=0,r=this.index,o=t.length,a=0;a<o;a++)e=t[a]._model?t[a]._model.borderWidth:0,n=t[a]._chart?t[a]._chart.config.data.datasets[r].hoverBorderWidth:0,i=e>i?e:i,i=n>i?n:i;return i}})}},{}],18:[function(t,e,n){"use strict";e.exports=function(t){function e(t,e){return n.getValueOrDefault(t.showLine,e.showLines)}var n=t.helpers;t.defaults.line={showLines:!0,spanGaps:!1,hover:{mode:"label"},scales:{xAxes:[{type:"category",id:"x-axis-0"}],yAxes:[{type:"linear",id:"y-axis-0"}]}},t.controllers.line=t.DatasetController.extend({datasetElementType:t.elements.Line,dataElementType:t.elements.Point,update:function(t){var i,r,o,a=this,s=a.getMeta(),l=s.dataset,u=s.data||[],c=a.chart.options,d=c.elements.line,h=a.getScaleForId(s.yAxisID),f=a.getDataset(),p=e(f,c);for(p&&(o=l.custom||{},void 0!==f.tension&&void 0===f.lineTension&&(f.lineTension=f.tension),l._scale=h,l._datasetIndex=a.index,l._children=u,l._model={spanGaps:f.spanGaps?f.spanGaps:c.spanGaps,tension:o.tension?o.tension:n.getValueOrDefault(f.lineTension,d.tension),backgroundColor:o.backgroundColor?o.backgroundColor:f.backgroundColor||d.backgroundColor,borderWidth:o.borderWidth?o.borderWidth:f.borderWidth||d.borderWidth,borderColor:o.borderColor?o.borderColor:f.borderColor||d.borderColor,borderCapStyle:o.borderCapStyle?o.borderCapStyle:f.borderCapStyle||d.borderCapStyle,borderDash:o.borderDash?o.borderDash:f.borderDash||d.borderDash,borderDashOffset:o.borderDashOffset?o.borderDashOffset:f.borderDashOffset||d.borderDashOffset,borderJoinStyle:o.borderJoinStyle?o.borderJoinStyle:f.borderJoinStyle||d.borderJoinStyle,fill:o.fill?o.fill:void 0!==f.fill?f.fill:d.fill,steppedLine:o.steppedLine?o.steppedLine:n.getValueOrDefault(f.steppedLine,d.stepped),cubicInterpolationMode:o.cubicInterpolationMode?o.cubicInterpolationMode:n.getValueOrDefault(f.cubicInterpolationMode,d.cubicInterpolationMode)},l.pivot()),i=0,r=u.length;i<r;++i)a.updateElement(u[i],i,t);for(p&&0!==l._model.tension&&a.updateBezierControlPoints(),i=0,r=u.length;i<r;++i)u[i].pivot()},getPointBackgroundColor:function(t,e){var i=this.chart.options.elements.point.backgroundColor,r=this.getDataset(),o=t.custom||{};return o.backgroundColor?i=o.backgroundColor:r.pointBackgroundColor?i=n.getValueAtIndexOrDefault(r.pointBackgroundColor,e,i):r.backgroundColor&&(i=r.backgroundColor),i},getPointBorderColor:function(t,e){var i=this.chart.options.elements.point.borderColor,r=this.getDataset(),o=t.custom||{};return o.borderColor?i=o.borderColor:r.pointBorderColor?i=n.getValueAtIndexOrDefault(r.pointBorderColor,e,i):r.borderColor&&(i=r.borderColor),i},getPointBorderWidth:function(t,e){var i=this.chart.options.elements.point.borderWidth,r=this.getDataset(),o=t.custom||{};return isNaN(o.borderWidth)?isNaN(r.pointBorderWidth)?isNaN(r.borderWidth)||(i=r.borderWidth):i=n.getValueAtIndexOrDefault(r.pointBorderWidth,e,i):i=o.borderWidth,i},updateElement:function(t,e,i){var r,o,a=this,s=a.getMeta(),l=t.custom||{},u=a.getDataset(),c=a.index,d=u.data[e],h=a.getScaleForId(s.yAxisID),f=a.getScaleForId(s.xAxisID),p=a.chart.options.elements.point,g=a.chart.data.labels||[],m=1===g.length||1===u.data.length||a.chart.isCombo;void 0!==u.radius&&void 0===u.pointRadius&&(u.pointRadius=u.radius),void 0!==u.hitRadius&&void 0===u.pointHitRadius&&(u.pointHitRadius=u.hitRadius),
r=f.getPixelForValue("object"==typeof d?d:NaN,e,c,m),o=i?h.getBasePixel():a.calculatePointY(d,e,c),t._xScale=f,t._yScale=h,t._datasetIndex=c,t._index=e,t._model={x:r,y:o,skip:l.skip||isNaN(r)||isNaN(o),radius:l.radius||n.getValueAtIndexOrDefault(u.pointRadius,e,p.radius),pointStyle:l.pointStyle||n.getValueAtIndexOrDefault(u.pointStyle,e,p.pointStyle),backgroundColor:a.getPointBackgroundColor(t,e),borderColor:a.getPointBorderColor(t,e),borderWidth:a.getPointBorderWidth(t,e),tension:s.dataset._model?s.dataset._model.tension:0,steppedLine:!!s.dataset._model&&s.dataset._model.steppedLine,hitRadius:l.hitRadius||n.getValueAtIndexOrDefault(u.pointHitRadius,e,p.hitRadius)}},calculatePointY:function(t,e,n){var i,r,o,a=this,s=a.chart,l=a.getMeta(),u=a.getScaleForId(l.yAxisID),c=0,d=0;if(u.options.stacked){for(i=0;i<n;i++)if(r=s.data.datasets[i],o=s.getDatasetMeta(i),"line"===o.type&&o.yAxisID===u.id&&s.isDatasetVisible(i)){var h=Number(u.getRightValue(r.data[e]));h<0?d+=h||0:c+=h||0}var f=Number(u.getRightValue(t));return f<0?u.getPixelForValue(d+f):u.getPixelForValue(c+f)}return u.getPixelForValue(t)},updateBezierControlPoints:function(){function t(t,e,n){return Math.max(Math.min(t,n),e)}var e,i,r,o,a,s=this,l=s.getMeta(),u=s.chart.chartArea,c=l.data||[];if(l.dataset._model.spanGaps&&(c=c.filter(function(t){return!t._model.skip})),"monotone"===l.dataset._model.cubicInterpolationMode)n.splineCurveMonotone(c);else for(e=0,i=c.length;e<i;++e)r=c[e],o=r._model,a=n.splineCurve(n.previousItem(c,e)._model,o,n.nextItem(c,e)._model,l.dataset._model.tension),o.controlPointPreviousX=a.previous.x,o.controlPointPreviousY=a.previous.y,o.controlPointNextX=a.next.x,o.controlPointNextY=a.next.y;if(s.chart.options.elements.line.capBezierPoints)for(e=0,i=c.length;e<i;++e)o=c[e]._model,o.controlPointPreviousX=t(o.controlPointPreviousX,u.left,u.right),o.controlPointPreviousY=t(o.controlPointPreviousY,u.top,u.bottom),o.controlPointNextX=t(o.controlPointNextX,u.left,u.right),o.controlPointNextY=t(o.controlPointNextY,u.top,u.bottom)},draw:function(){var n=this,i=n.chart,r=n.getMeta(),o=r.data||[],a=i.chartArea,s=o.length,l=0;for(t.canvasHelpers.clipArea(i.ctx,a),e(n.getDataset(),i.options)&&r.dataset.draw(),t.canvasHelpers.unclipArea(i.ctx);l<s;++l)o[l].draw(a)},setHoverStyle:function(t){var e=this.chart.data.datasets[t._datasetIndex],i=t._index,r=t.custom||{},o=t._model;o.radius=r.hoverRadius||n.getValueAtIndexOrDefault(e.pointHoverRadius,i,this.chart.options.elements.point.hoverRadius),o.backgroundColor=r.hoverBackgroundColor||n.getValueAtIndexOrDefault(e.pointHoverBackgroundColor,i,n.getHoverColor(o.backgroundColor)),o.borderColor=r.hoverBorderColor||n.getValueAtIndexOrDefault(e.pointHoverBorderColor,i,n.getHoverColor(o.borderColor)),o.borderWidth=r.hoverBorderWidth||n.getValueAtIndexOrDefault(e.pointHoverBorderWidth,i,o.borderWidth)},removeHoverStyle:function(t){var e=this,i=e.chart.data.datasets[t._datasetIndex],r=t._index,o=t.custom||{},a=t._model;void 0!==i.radius&&void 0===i.pointRadius&&(i.pointRadius=i.radius),a.radius=o.radius||n.getValueAtIndexOrDefault(i.pointRadius,r,e.chart.options.elements.point.radius),a.backgroundColor=e.getPointBackgroundColor(t,r),a.borderColor=e.getPointBorderColor(t,r),a.borderWidth=e.getPointBorderWidth(t,r)}})}},{}],19:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers;t.defaults.polarArea={scale:{type:"radialLinear",angleLines:{display:!1},gridLines:{circular:!0},pointLabels:{display:!1},ticks:{beginAtZero:!0}},animation:{animateRotate:!0,animateScale:!0},startAngle:-.5*Math.PI,aspectRatio:1,legendCallback:function(t){var e=[];e.push('<ul class="'+t.id+'-legend">');var n=t.data,i=n.datasets,r=n.labels;if(i.length)for(var o=0;o<i[0].data.length;++o)e.push('<li><span style="background-color:'+i[0].backgroundColor[o]+'"></span>'),r[o]&&e.push(r[o]),e.push("</li>");return e.push("</ul>"),e.join("")},legend:{labels:{generateLabels:function(t){var n=t.data;return n.labels.length&&n.datasets.length?n.labels.map(function(i,r){var o=t.getDatasetMeta(0),a=n.datasets[0],s=o.data[r],l=s.custom||{},u=e.getValueAtIndexOrDefault,c=t.options.elements.arc,d=l.backgroundColor?l.backgroundColor:u(a.backgroundColor,r,c.backgroundColor),h=l.borderColor?l.borderColor:u(a.borderColor,r,c.borderColor),f=l.borderWidth?l.borderWidth:u(a.borderWidth,r,c.borderWidth);return{text:i,fillStyle:d,strokeStyle:h,lineWidth:f,hidden:isNaN(a.data[r])||o.data[r].hidden,index:r}}):[]}},onClick:function(t,e){var n,i,r,o=e.index,a=this.chart;for(n=0,i=(a.data.datasets||[]).length;n<i;++n)r=a.getDatasetMeta(n),r.data[o].hidden=!r.data[o].hidden;a.update()}},tooltips:{callbacks:{title:function(){return""},label:function(t,e){return e.labels[t.index]+": "+t.yLabel}}}},t.controllers.polarArea=t.DatasetController.extend({dataElementType:t.elements.Arc,linkScales:e.noop,update:function(t){var n=this,i=n.chart,r=i.chartArea,o=n.getMeta(),a=i.options,s=a.elements.arc,l=Math.min(r.right-r.left,r.bottom-r.top);i.outerRadius=Math.max((l-s.borderWidth/2)/2,0),i.innerRadius=Math.max(a.cutoutPercentage?i.outerRadius/100*a.cutoutPercentage:1,0),i.radiusLength=(i.outerRadius-i.innerRadius)/i.getVisibleDatasetCount(),n.outerRadius=i.outerRadius-i.radiusLength*n.index,n.innerRadius=n.outerRadius-i.radiusLength,o.count=n.countVisibleElements(),e.each(o.data,function(e,i){n.updateElement(e,i,t)})},updateElement:function(t,n,i){for(var r=this,o=r.chart,a=r.getDataset(),s=o.options,l=s.animation,u=o.scale,c=e.getValueAtIndexOrDefault,d=o.data.labels,h=r.calculateCircumference(a.data[n]),f=u.xCenter,p=u.yCenter,g=0,m=r.getMeta(),v=0;v<n;++v)isNaN(a.data[v])||m.data[v].hidden||++g;var y=s.startAngle,b=t.hidden?0:u.getDistanceFromCenterForValue(a.data[n]),x=y+h*g,_=x+(t.hidden?0:h),w=l.animateScale?0:u.getDistanceFromCenterForValue(a.data[n]);e.extend(t,{_datasetIndex:r.index,_index:n,_scale:u,_model:{x:f,y:p,innerRadius:0,outerRadius:i?w:b,startAngle:i&&l.animateRotate?y:x,endAngle:i&&l.animateRotate?y:_,label:c(d,n,d[n])}}),r.removeHoverStyle(t),t.pivot()},removeHoverStyle:function(e){t.DatasetController.prototype.removeHoverStyle.call(this,e,this.chart.options.elements.arc)},countVisibleElements:function(){var t=this.getDataset(),n=this.getMeta(),i=0;return e.each(n.data,function(e,n){isNaN(t.data[n])||e.hidden||i++}),i},calculateCircumference:function(t){var e=this.getMeta().count;return e>0&&!isNaN(t)?2*Math.PI/e:0}})}},{}],20:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers;t.defaults.radar={aspectRatio:1,scale:{type:"radialLinear"},elements:{line:{tension:0}}},t.controllers.radar=t.DatasetController.extend({datasetElementType:t.elements.Line,dataElementType:t.elements.Point,linkScales:e.noop,update:function(t){var n=this,i=n.getMeta(),r=i.dataset,o=i.data,a=r.custom||{},s=n.getDataset(),l=n.chart.options.elements.line,u=n.chart.scale;void 0!==s.tension&&void 0===s.lineTension&&(s.lineTension=s.tension),e.extend(i.dataset,{_datasetIndex:n.index,_scale:u,_children:o,_loop:!0,_model:{tension:a.tension?a.tension:e.getValueOrDefault(s.lineTension,l.tension),backgroundColor:a.backgroundColor?a.backgroundColor:s.backgroundColor||l.backgroundColor,borderWidth:a.borderWidth?a.borderWidth:s.borderWidth||l.borderWidth,borderColor:a.borderColor?a.borderColor:s.borderColor||l.borderColor,fill:a.fill?a.fill:void 0!==s.fill?s.fill:l.fill,borderCapStyle:a.borderCapStyle?a.borderCapStyle:s.borderCapStyle||l.borderCapStyle,borderDash:a.borderDash?a.borderDash:s.borderDash||l.borderDash,borderDashOffset:a.borderDashOffset?a.borderDashOffset:s.borderDashOffset||l.borderDashOffset,borderJoinStyle:a.borderJoinStyle?a.borderJoinStyle:s.borderJoinStyle||l.borderJoinStyle}}),i.dataset.pivot(),e.each(o,function(e,i){n.updateElement(e,i,t)},n),n.updateBezierControlPoints()},updateElement:function(t,n,i){var r=this,o=t.custom||{},a=r.getDataset(),s=r.chart.scale,l=r.chart.options.elements.point,u=s.getPointPositionForValue(n,a.data[n]);void 0!==a.radius&&void 0===a.pointRadius&&(a.pointRadius=a.radius),void 0!==a.hitRadius&&void 0===a.pointHitRadius&&(a.pointHitRadius=a.hitRadius),e.extend(t,{_datasetIndex:r.index,_index:n,_scale:s,_model:{x:i?s.xCenter:u.x,y:i?s.yCenter:u.y,tension:o.tension?o.tension:e.getValueOrDefault(a.lineTension,r.chart.options.elements.line.tension),radius:o.radius?o.radius:e.getValueAtIndexOrDefault(a.pointRadius,n,l.radius),backgroundColor:o.backgroundColor?o.backgroundColor:e.getValueAtIndexOrDefault(a.pointBackgroundColor,n,l.backgroundColor),borderColor:o.borderColor?o.borderColor:e.getValueAtIndexOrDefault(a.pointBorderColor,n,l.borderColor),borderWidth:o.borderWidth?o.borderWidth:e.getValueAtIndexOrDefault(a.pointBorderWidth,n,l.borderWidth),pointStyle:o.pointStyle?o.pointStyle:e.getValueAtIndexOrDefault(a.pointStyle,n,l.pointStyle),hitRadius:o.hitRadius?o.hitRadius:e.getValueAtIndexOrDefault(a.pointHitRadius,n,l.hitRadius)}}),t._model.skip=o.skip?o.skip:isNaN(t._model.x)||isNaN(t._model.y)},updateBezierControlPoints:function(){var t=this.chart.chartArea,n=this.getMeta();e.each(n.data,function(i,r){var o=i._model,a=e.splineCurve(e.previousItem(n.data,r,!0)._model,o,e.nextItem(n.data,r,!0)._model,o.tension);o.controlPointPreviousX=Math.max(Math.min(a.previous.x,t.right),t.left),o.controlPointPreviousY=Math.max(Math.min(a.previous.y,t.bottom),t.top),o.controlPointNextX=Math.max(Math.min(a.next.x,t.right),t.left),o.controlPointNextY=Math.max(Math.min(a.next.y,t.bottom),t.top),i.pivot()})},setHoverStyle:function(t){var n=this.chart.data.datasets[t._datasetIndex],i=t.custom||{},r=t._index,o=t._model;o.radius=i.hoverRadius?i.hoverRadius:e.getValueAtIndexOrDefault(n.pointHoverRadius,r,this.chart.options.elements.point.hoverRadius),o.backgroundColor=i.hoverBackgroundColor?i.hoverBackgroundColor:e.getValueAtIndexOrDefault(n.pointHoverBackgroundColor,r,e.getHoverColor(o.backgroundColor)),o.borderColor=i.hoverBorderColor?i.hoverBorderColor:e.getValueAtIndexOrDefault(n.pointHoverBorderColor,r,e.getHoverColor(o.borderColor)),o.borderWidth=i.hoverBorderWidth?i.hoverBorderWidth:e.getValueAtIndexOrDefault(n.pointHoverBorderWidth,r,o.borderWidth)},removeHoverStyle:function(t){var n=this.chart.data.datasets[t._datasetIndex],i=t.custom||{},r=t._index,o=t._model,a=this.chart.options.elements.point;o.radius=i.radius?i.radius:e.getValueAtIndexOrDefault(n.pointRadius,r,a.radius),o.backgroundColor=i.backgroundColor?i.backgroundColor:e.getValueAtIndexOrDefault(n.pointBackgroundColor,r,a.backgroundColor),o.borderColor=i.borderColor?i.borderColor:e.getValueAtIndexOrDefault(n.pointBorderColor,r,a.borderColor),o.borderWidth=i.borderWidth?i.borderWidth:e.getValueAtIndexOrDefault(n.pointBorderWidth,r,a.borderWidth)}})}},{}],21:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers;t.defaults.global.animation={duration:1e3,easing:"easeOutQuart",onProgress:e.noop,onComplete:e.noop},t.Animation=t.Element.extend({chart:null,currentStep:0,numSteps:60,easing:"",render:null,onAnimationProgress:null,onAnimationComplete:null}),t.animationService={frameDuration:17,animations:[],dropFrames:0,request:null,addAnimation:function(t,e,n,i){var r,o,a=this.animations;for(e.chart=t,i||(t.animating=!0),r=0,o=a.length;r<o;++r)if(a[r].chart===t)return void(a[r]=e);a.push(e),1===a.length&&this.requestAnimationFrame()},cancelAnimation:function(t){var n=e.findIndex(this.animations,function(e){return e.chart===t});n!==-1&&(this.animations.splice(n,1),t.animating=!1)},requestAnimationFrame:function(){var t=this;null===t.request&&(t.request=e.requestAnimFrame.call(window,function(){t.request=null,t.startDigest()}))},startDigest:function(){var t=this,e=Date.now(),n=0;t.dropFrames>1&&(n=Math.floor(t.dropFrames),t.dropFrames=t.dropFrames%1),t.advance(1+n);var i=Date.now();t.dropFrames+=(i-e)/t.frameDuration,t.animations.length>0&&t.requestAnimationFrame()},advance:function(t){for(var n,i,r=this.animations,o=0;o<r.length;)n=r[o],i=n.chart,n.currentStep=(n.currentStep||0)+t,n.currentStep=Math.min(n.currentStep,n.numSteps),e.callback(n.render,[i,n],i),e.callback(n.onAnimationProgress,[n],i),n.currentStep>=n.numSteps?(e.callback(n.onAnimationComplete,[n],i),i.animating=!1,r.splice(o,1)):++o}},Object.defineProperty(t.Animation.prototype,"animationObject",{get:function(){return this}}),Object.defineProperty(t.Animation.prototype,"chartInstance",{get:function(){return this.chart},set:function(t){this.chart=t}})}},{}],22:[function(t,e,n){"use strict";e.exports=function(t){var e=t.canvasHelpers={};e.drawPoint=function(e,n,i,r,o){var a,s,l,u,c,d;if("object"==typeof n&&(a=n.toString(),"[object HTMLImageElement]"===a||"[object HTMLCanvasElement]"===a))return void e.drawImage(n,r-n.width/2,o-n.height/2,n.width,n.height);if(!(isNaN(i)||i<=0)){switch(n){default:e.beginPath(),e.arc(r,o,i,0,2*Math.PI),e.closePath(),e.fill();break;case"triangle":e.beginPath(),s=3*i/Math.sqrt(3),c=s*Math.sqrt(3)/2,e.moveTo(r-s/2,o+c/3),e.lineTo(r+s/2,o+c/3),e.lineTo(r,o-2*c/3),e.closePath(),e.fill();break;case"rect":d=1/Math.SQRT2*i,e.beginPath(),e.fillRect(r-d,o-d,2*d,2*d),e.strokeRect(r-d,o-d,2*d,2*d);break;case"rectRounded":var h=i/Math.SQRT2,f=r-h,p=o-h,g=Math.SQRT2*i;t.helpers.drawRoundedRectangle(e,f,p,g,g,i/2),e.fill();break;case"rectRot":d=1/Math.SQRT2*i,e.beginPath(),e.moveTo(r-d,o),e.lineTo(r,o+d),e.lineTo(r+d,o),e.lineTo(r,o-d),e.closePath(),e.fill();break;case"cross":e.beginPath(),e.moveTo(r,o+i),e.lineTo(r,o-i),e.moveTo(r-i,o),e.lineTo(r+i,o),e.closePath();break;case"crossRot":e.beginPath(),l=Math.cos(Math.PI/4)*i,u=Math.sin(Math.PI/4)*i,e.moveTo(r-l,o-u),e.lineTo(r+l,o+u),e.moveTo(r-l,o+u),e.lineTo(r+l,o-u),e.closePath();break;case"star":e.beginPath(),e.moveTo(r,o+i),e.lineTo(r,o-i),e.moveTo(r-i,o),e.lineTo(r+i,o),l=Math.cos(Math.PI/4)*i,u=Math.sin(Math.PI/4)*i,e.moveTo(r-l,o-u),e.lineTo(r+l,o+u),e.moveTo(r-l,o+u),e.lineTo(r+l,o-u),e.closePath();break;case"line":e.beginPath(),e.moveTo(r-i,o),e.lineTo(r+i,o),e.closePath();break;case"dash":e.beginPath(),e.moveTo(r,o),e.lineTo(r+i,o),e.closePath()}e.stroke()}},e.clipArea=function(t,e){t.save(),t.beginPath(),t.rect(e.left,e.top,e.right-e.left,e.bottom-e.top),t.clip()},e.unclipArea=function(t){t.restore()},e.lineTo=function(t,e,n,i){return n.steppedLine?("after"===n.steppedLine?t.lineTo(e.x,n.y):t.lineTo(n.x,e.y),void t.lineTo(n.x,n.y)):n.tension?void t.bezierCurveTo(i?e.controlPointPreviousX:e.controlPointNextX,i?e.controlPointPreviousY:e.controlPointNextY,i?n.controlPointNextX:n.controlPointPreviousX,i?n.controlPointNextY:n.controlPointPreviousY,n.x,n.y):void t.lineTo(n.x,n.y)},t.helpers.canvas=e}},{}],23:[function(t,e,n){"use strict";e.exports=function(t){function e(e){e=e||{};var n=e.data=e.data||{};return n.datasets=n.datasets||[],n.labels=n.labels||[],e.options=r.configMerge(t.defaults.global,t.defaults[e.type],e.options||{}),e}function n(t){var e=t.options;e.scale?t.scale.options=e.scale:e.scales&&e.scales.xAxes.concat(e.scales.yAxes).forEach(function(e){t.scales[e.id].options=e}),t.tooltip._options=e.tooltips}function i(t){return"top"===t||"bottom"===t}var r=t.helpers,o=t.plugins,a=t.platform;t.types={},t.instances={},t.controllers={},r.extend(t.prototype,{construct:function(n,i){var o=this;i=e(i);var s=a.acquireContext(n,i),l=s&&s.canvas,u=l&&l.height,c=l&&l.width;return o.id=r.uid(),o.ctx=s,o.canvas=l,o.config=i,o.width=c,o.height=u,o.aspectRatio=u?c/u:null,o.options=i.options,o._bufferedRender=!1,o.chart=o,o.controller=o,t.instances[o.id]=o,Object.defineProperty(o,"data",{get:function(){return o.config.data},set:function(t){o.config.data=t}}),s&&l?(o.initialize(),void o.update()):void console.error("Failed to create chart: can't acquire context from the given item")},initialize:function(){var t=this;return o.notify(t,"beforeInit"),r.retinaScale(t),t.bindEvents(),t.options.responsive&&t.resize(!0),t.ensureScalesHaveIDs(),t.buildScales(),t.initToolTip(),o.notify(t,"afterInit"),t},clear:function(){return r.clear(this),this},stop:function(){return t.animationService.cancelAnimation(this),this},resize:function(t){var e=this,n=e.options,i=e.canvas,a=n.maintainAspectRatio&&e.aspectRatio||null,s=Math.floor(r.getMaximumWidth(i)),l=Math.floor(a?s/a:r.getMaximumHeight(i));if((e.width!==s||e.height!==l)&&(i.width=e.width=s,i.height=e.height=l,i.style.width=s+"px",i.style.height=l+"px",r.retinaScale(e),!t)){var u={width:s,height:l};o.notify(e,"resize",[u]),e.options.onResize&&e.options.onResize(e,u),e.stop(),e.update(e.options.responsiveAnimationDuration)}},ensureScalesHaveIDs:function(){var t=this.options,e=t.scales||{},n=t.scale;r.each(e.xAxes,function(t,e){t.id=t.id||"x-axis-"+e}),r.each(e.yAxes,function(t,e){t.id=t.id||"y-axis-"+e}),n&&(n.id=n.id||"scale")},buildScales:function(){var e=this,n=e.options,o=e.scales={},a=[];n.scales&&(a=a.concat((n.scales.xAxes||[]).map(function(t){return{options:t,dtype:"category",dposition:"bottom"}}),(n.scales.yAxes||[]).map(function(t){return{options:t,dtype:"linear",dposition:"left"}}))),n.scale&&a.push({options:n.scale,dtype:"radialLinear",isDefault:!0,dposition:"chartArea"}),r.each(a,function(n){var a=n.options,s=r.getValueOrDefault(a.type,n.dtype),l=t.scaleService.getScaleConstructor(s);if(l){i(a.position)!==i(n.dposition)&&(a.position=n.dposition);var u=new l({id:a.id,options:a,ctx:e.ctx,chart:e});o[u.id]=u,n.isDefault&&(e.scale=u)}}),t.scaleService.addScalesToLayout(this)},buildOrUpdateControllers:function(){var e=this,n=[],i=[];if(r.each(e.data.datasets,function(r,o){var a=e.getDatasetMeta(o);if(a.type||(a.type=r.type||e.config.type),n.push(a.type),a.controller)a.controller.updateIndex(o);else{var s=t.controllers[a.type];if(void 0===s)throw new Error('"'+a.type+'" is not a chart type.');a.controller=new s(e,o),i.push(a.controller)}},e),n.length>1)for(var o=1;o<n.length;o++)if(n[o]!==n[o-1]){e.isCombo=!0;break}return i},resetElements:function(){var t=this;r.each(t.data.datasets,function(e,n){t.getDatasetMeta(n).controller.reset()},t)},reset:function(){this.resetElements(),this.tooltip.initialize()},update:function(t,e){var i=this;if(n(i),o.notify(i,"beforeUpdate")!==!1){i.tooltip._data=i.data;var a=i.buildOrUpdateControllers();r.each(i.data.datasets,function(t,e){i.getDatasetMeta(e).controller.buildOrUpdateElements()},i),i.updateLayout(),r.each(a,function(t){t.reset()}),i.updateDatasets(),o.notify(i,"afterUpdate"),i._bufferedRender?i._bufferedRequest={lazy:e,duration:t}:i.render(t,e)}},updateLayout:function(){var e=this;o.notify(e,"beforeLayout")!==!1&&(t.layoutService.update(this,this.width,this.height),o.notify(e,"afterScaleUpdate"),o.notify(e,"afterLayout"))},updateDatasets:function(){var t=this;if(o.notify(t,"beforeDatasetsUpdate")!==!1){for(var e=0,n=t.data.datasets.length;e<n;++e)t.updateDataset(e);o.notify(t,"afterDatasetsUpdate")}},updateDataset:function(t){var e=this,n=e.getDatasetMeta(t),i={meta:n,index:t};o.notify(e,"beforeDatasetUpdate",[i])!==!1&&(n.controller.update(),o.notify(e,"afterDatasetUpdate",[i]))},render:function(e,n){var i=this;if(o.notify(i,"beforeRender")!==!1){var a=i.options.animation,s=function(t){o.notify(i,"afterRender"),r.callback(a&&a.onComplete,[t],i)};if(a&&("undefined"!=typeof e&&0!==e||"undefined"==typeof e&&0!==a.duration)){var l=new t.Animation({numSteps:(e||a.duration)/16.66,easing:a.easing,render:function(t,e){var n=r.easingEffects[e.easing],i=e.currentStep,o=i/e.numSteps;t.draw(n(o),o,i)},onAnimationProgress:a.onProgress,onAnimationComplete:s});t.animationService.addAnimation(i,l,e,n)}else i.draw(),s(new t.Animation({numSteps:0,chart:i}));return i}},draw:function(t){var e=this;e.clear(),void 0!==t&&null!==t||(t=1),e.transition(t),o.notify(e,"beforeDraw",[t])!==!1&&(r.each(e.boxes,function(t){t.draw(e.chartArea)},e),e.scale&&e.scale.draw(),e.drawDatasets(t),e.tooltip.draw(),o.notify(e,"afterDraw",[t]))},transition:function(t){for(var e=this,n=0,i=(e.data.datasets||[]).length;n<i;++n)e.isDatasetVisible(n)&&e.getDatasetMeta(n).controller.transition(t);e.tooltip.transition(t)},drawDatasets:function(t){var e=this;if(o.notify(e,"beforeDatasetsDraw",[t])!==!1){for(var n=(e.data.datasets||[]).length-1;n>=0;--n)e.isDatasetVisible(n)&&e.drawDataset(n,t);o.notify(e,"afterDatasetsDraw",[t])}},drawDataset:function(t,e){var n=this,i=n.getDatasetMeta(t),r={meta:i,index:t,easingValue:e};o.notify(n,"beforeDatasetDraw",[r])!==!1&&(i.controller.draw(e),o.notify(n,"afterDatasetDraw",[r]))},getElementAtEvent:function(e){return t.Interaction.modes.single(this,e)},getElementsAtEvent:function(e){return t.Interaction.modes.label(this,e,{intersect:!0})},getElementsAtXAxis:function(e){return t.Interaction.modes["x-axis"](this,e,{intersect:!0})},getElementsAtEventForMode:function(e,n,i){var r=t.Interaction.modes[n];return"function"==typeof r?r(this,e,i):[]},getDatasetAtEvent:function(e){return t.Interaction.modes.dataset(this,e,{intersect:!0})},getDatasetMeta:function(t){var e=this,n=e.data.datasets[t];n._meta||(n._meta={});var i=n._meta[e.id];return i||(i=n._meta[e.id]={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null}),i},getVisibleDatasetCount:function(){for(var t=0,e=0,n=this.data.datasets.length;e<n;++e)this.isDatasetVisible(e)&&t++;return t},isDatasetVisible:function(t){var e=this.getDatasetMeta(t);return"boolean"==typeof e.hidden?!e.hidden:!this.data.datasets[t].hidden},generateLegend:function(){return this.options.legendCallback(this)},destroy:function(){var e,n,i,s=this,l=s.canvas;for(s.stop(),n=0,i=s.data.datasets.length;n<i;++n)e=s.getDatasetMeta(n),e.controller&&(e.controller.destroy(),e.controller=null);l&&(s.unbindEvents(),r.clear(s),a.releaseContext(s.ctx),s.canvas=null,s.ctx=null),o.notify(s,"destroy"),delete t.instances[s.id]},toBase64Image:function(){return this.canvas.toDataURL.apply(this.canvas,arguments)},initToolTip:function(){var e=this;e.tooltip=new t.Tooltip({_chart:e,_chartInstance:e,_data:e.data,_options:e.options.tooltips},e),e.tooltip.initialize()},bindEvents:function(){var t=this,e=t._listeners={},n=function(){t.eventHandler.apply(t,arguments)};r.each(t.options.events,function(i){a.addEventListener(t,i,n),e[i]=n}),t.options.responsive&&(n=function(){t.resize()},a.addEventListener(t,"resize",n),e.resize=n)},unbindEvents:function(){var t=this,e=t._listeners;e&&(delete t._listeners,r.each(e,function(e,n){a.removeEventListener(t,n,e)}))},updateHoverStyle:function(t,e,n){var i,r,o,a=n?"setHoverStyle":"removeHoverStyle";for(r=0,o=t.length;r<o;++r)i=t[r],i&&this.getDatasetMeta(i._datasetIndex).controller[a](i)},eventHandler:function(t){var e=this,n=e.tooltip;if(o.notify(e,"beforeEvent",[t])!==!1){e._bufferedRender=!0,e._bufferedRequest=null;var i=e.handleEvent(t);i|=n&&n.handleEvent(t),o.notify(e,"afterEvent",[t]);var r=e._bufferedRequest;return r?e.render(r.duration,r.lazy):i&&!e.animating&&(e.stop(),e.render(e.options.hover.animationDuration,!0)),e._bufferedRender=!1,e._bufferedRequest=null,e}},handleEvent:function(t){var e=this,n=e.options||{},i=n.hover,o=!1;return e.lastActive=e.lastActive||[],"mouseout"===t.type?e.active=[]:e.active=e.getElementsAtEventForMode(t,i.mode,i),i.onHover&&i.onHover.call(e,t["native"],e.active),"mouseup"!==t.type&&"click"!==t.type||n.onClick&&n.onClick.call(e,t["native"],e.active),e.lastActive.length&&e.updateHoverStyle(e.lastActive,i.mode,!1),e.active.length&&i.mode&&e.updateHoverStyle(e.active,i.mode,!0),o=!r.arrayEquals(e.active,e.lastActive),e.lastActive=e.active,o}}),t.Controller=t}},{}],24:[function(t,e,n){"use strict";e.exports=function(t){function e(t,e){return t._chartjs?void t._chartjs.listeners.push(e):(Object.defineProperty(t,"_chartjs",{configurable:!0,enumerable:!1,value:{listeners:[e]}}),void r.forEach(function(e){var n="onData"+e.charAt(0).toUpperCase()+e.slice(1),r=t[e];Object.defineProperty(t,e,{configurable:!0,enumerable:!1,value:function(){var e=Array.prototype.slice.call(arguments),o=r.apply(this,e);return i.each(t._chartjs.listeners,function(t){"function"==typeof t[n]&&t[n].apply(t,e)}),o}})}))}function n(t,e){var n=t._chartjs;if(n){var i=n.listeners,o=i.indexOf(e);o!==-1&&i.splice(o,1),i.length>0||(r.forEach(function(e){delete t[e]}),delete t._chartjs)}}var i=t.helpers,r=["push","pop","shift","splice","unshift"];t.DatasetController=function(t,e){this.initialize(t,e)},i.extend(t.DatasetController.prototype,{datasetElementType:null,dataElementType:null,initialize:function(t,e){var n=this;n.chart=t,n.index=e,n.linkScales(),n.addElements()},updateIndex:function(t){this.index=t},linkScales:function(){var t=this,e=t.getMeta(),n=t.getDataset();null===e.xAxisID&&(e.xAxisID=n.xAxisID||t.chart.options.scales.xAxes[0].id),null===e.yAxisID&&(e.yAxisID=n.yAxisID||t.chart.options.scales.yAxes[0].id)},getDataset:function(){return this.chart.data.datasets[this.index]},getMeta:function(){return this.chart.getDatasetMeta(this.index)},getScaleForId:function(t){return this.chart.scales[t]},reset:function(){this.update(!0)},destroy:function(){this._data&&n(this._data,this)},createMetaDataset:function(){var t=this,e=t.datasetElementType;return e&&new e({_chart:t.chart,_datasetIndex:t.index})},createMetaData:function(t){var e=this,n=e.dataElementType;return n&&new n({_chart:e.chart,_datasetIndex:e.index,_index:t})},addElements:function(){var t,e,n=this,i=n.getMeta(),r=n.getDataset().data||[],o=i.data;for(t=0,e=r.length;t<e;++t)o[t]=o[t]||n.createMetaData(t);i.dataset=i.dataset||n.createMetaDataset()},addElementAndReset:function(t){var e=this.createMetaData(t);this.getMeta().data.splice(t,0,e),this.updateElement(e,t,!0)},buildOrUpdateElements:function(){var t=this,i=t.getDataset(),r=i.data||(i.data=[]);t._data!==r&&(t._data&&n(t._data,t),e(r,t),t._data=r),t.resyncElements()},update:i.noop,transition:function(t){for(var e=this.getMeta(),n=e.data||[],i=n.length,r=0;r<i;++r)n[r].transition(t);e.dataset&&e.dataset.transition(t)},draw:function(){var t=this.getMeta(),e=t.data||[],n=e.length,i=0;for(t.dataset&&t.dataset.draw();i<n;++i)e[i].draw()},removeHoverStyle:function(t,e){var n=this.chart.data.datasets[t._datasetIndex],r=t._index,o=t.custom||{},a=i.getValueAtIndexOrDefault,s=t._model;s.backgroundColor=o.backgroundColor?o.backgroundColor:a(n.backgroundColor,r,e.backgroundColor),s.borderColor=o.borderColor?o.borderColor:a(n.borderColor,r,e.borderColor),s.borderWidth=o.borderWidth?o.borderWidth:a(n.borderWidth,r,e.borderWidth)},setHoverStyle:function(t){var e=this.chart.data.datasets[t._datasetIndex],n=t._index,r=t.custom||{},o=i.getValueAtIndexOrDefault,a=i.getHoverColor,s=t._model;s.backgroundColor=r.hoverBackgroundColor?r.hoverBackgroundColor:o(e.hoverBackgroundColor,n,a(s.backgroundColor)),s.borderColor=r.hoverBorderColor?r.hoverBorderColor:o(e.hoverBorderColor,n,a(s.borderColor)),s.borderWidth=r.hoverBorderWidth?r.hoverBorderWidth:o(e.hoverBorderWidth,n,s.borderWidth)},resyncElements:function(){var t=this,e=t.getMeta(),n=t.getDataset().data,i=e.data.length,r=n.length;r<i?e.data.splice(r,i-r):r>i&&t.insertElements(i,r-i)},insertElements:function(t,e){for(var n=0;n<e;++n)this.addElementAndReset(t+n)},onDataPush:function(){this.insertElements(this.getDataset().data.length-1,arguments.length)},onDataPop:function(){this.getMeta().data.pop()},onDataShift:function(){this.getMeta().data.shift()},onDataSplice:function(t,e){this.getMeta().data.splice(t,e),this.insertElements(t,arguments.length-2)},onDataUnshift:function(){this.insertElements(0,arguments.length)}}),t.DatasetController.extend=i.inherits}},{}],25:[function(t,e,n){"use strict";var i=t(2);e.exports=function(t){function e(t,e,n,r){var o,a,s,l,u,c,d,h,f,p=Object.keys(n);for(o=0,a=p.length;o<a;++o)if(s=p[o],c=n[s],e.hasOwnProperty(s)||(e[s]=c),l=e[s],l!==c&&"_"!==s[0]){if(t.hasOwnProperty(s)||(t[s]=l),u=t[s],d=typeof c,d===typeof u)if("string"===d){if(h=i(u),h.valid&&(f=i(c),f.valid)){e[s]=f.mix(h,r).rgbString();continue}}else if("number"===d&&isFinite(u)&&isFinite(c)){e[s]=u+(c-u)*r;continue}e[s]=c}}var n=t.helpers;t.elements={},t.Element=function(t){n.extend(this,t),this.initialize.apply(this,arguments)},n.extend(t.Element.prototype,{initialize:function(){this.hidden=!1},pivot:function(){var t=this;return t._view||(t._view=n.clone(t._model)),t._start={},t},transition:function(t){var n=this,i=n._model,r=n._start,o=n._view;return i&&1!==t?(o||(o=n._view={}),r||(r=n._start={}),e(r,o,i,t),n):(n._view=i,n._start=null,n)},tooltipPosition:function(){return{x:this._model.x,y:this._model.y}},hasValue:function(){return n.isNumber(this._model.x)&&n.isNumber(this._model.y)}}),t.Element.extend=n.inherits}},{2:2}],26:[function(t,e,n){"use strict";var i=t(2);e.exports=function(t){function e(t,e,n){var i;return"string"==typeof t?(i=parseInt(t,10),t.indexOf("%")!==-1&&(i=i/100*e.parentNode[n])):i=t,i}function n(t){return void 0!==t&&null!==t&&"none"!==t}function r(t,i,r){var o=document.defaultView,a=t.parentNode,s=o.getComputedStyle(t)[i],l=o.getComputedStyle(a)[i],u=n(s),c=n(l),d=Number.POSITIVE_INFINITY;return u||c?Math.min(u?e(s,t,r):d,c?e(l,a,r):d):"none"}var o=t.helpers={};o.each=function(t,e,n,i){var r,a;if(o.isArray(t))if(a=t.length,i)for(r=a-1;r>=0;r--)e.call(n,t[r],r);else for(r=0;r<a;r++)e.call(n,t[r],r);else if("object"==typeof t){var s=Object.keys(t);for(a=s.length,r=0;r<a;r++)e.call(n,t[s[r]],s[r])}},o.clone=function(t){var e={};return o.each(t,function(t,n){o.isArray(t)?e[n]=t.slice(0):"object"==typeof t&&null!==t?e[n]=o.clone(t):e[n]=t}),e},o.extend=function(t){for(var e=function(e,n){t[n]=e},n=1,i=arguments.length;n<i;n++)o.each(arguments[n],e);return t},o.configMerge=function(e){var n=o.clone(e);return o.each(Array.prototype.slice.call(arguments,1),function(e){o.each(e,function(e,i){var r=n.hasOwnProperty(i),a=r?n[i]:{};"scales"===i?n[i]=o.scaleMerge(a,e):"scale"===i?n[i]=o.configMerge(a,t.scaleService.getScaleDefaults(e.type),e):!r||"object"!=typeof a||o.isArray(a)||null===a||"object"!=typeof e||o.isArray(e)?n[i]=e:n[i]=o.configMerge(a,e)})}),n},o.scaleMerge=function(e,n){var i=o.clone(e);return o.each(n,function(e,n){"xAxes"===n||"yAxes"===n?i.hasOwnProperty(n)?o.each(e,function(e,r){var a=o.getValueOrDefault(e.type,"xAxes"===n?"category":"linear"),s=t.scaleService.getScaleDefaults(a);r>=i[n].length||!i[n][r].type?i[n].push(o.configMerge(s,e)):e.type&&e.type!==i[n][r].type?i[n][r]=o.configMerge(i[n][r],s,e):i[n][r]=o.configMerge(i[n][r],e)}):(i[n]=[],o.each(e,function(e){var r=o.getValueOrDefault(e.type,"xAxes"===n?"category":"linear");i[n].push(o.configMerge(t.scaleService.getScaleDefaults(r),e))})):i.hasOwnProperty(n)&&"object"==typeof i[n]&&null!==i[n]&&"object"==typeof e?i[n]=o.configMerge(i[n],e):i[n]=e}),i},o.getValueAtIndexOrDefault=function(t,e,n){return void 0===t||null===t?n:o.isArray(t)?e<t.length?t[e]:n:t},o.getValueOrDefault=function(t,e){return void 0===t?e:t},o.indexOf=Array.prototype.indexOf?function(t,e){return t.indexOf(e)}:function(t,e){for(var n=0,i=t.length;n<i;++n)if(t[n]===e)return n;return-1},o.where=function(t,e){if(o.isArray(t)&&Array.prototype.filter)return t.filter(e);var n=[];return o.each(t,function(t){e(t)&&n.push(t)}),n},o.findIndex=Array.prototype.findIndex?function(t,e,n){return t.findIndex(e,n)}:function(t,e,n){n=void 0===n?t:n;for(var i=0,r=t.length;i<r;++i)if(e.call(n,t[i],i,t))return i;return-1},o.findNextWhere=function(t,e,n){void 0!==n&&null!==n||(n=-1);for(var i=n+1;i<t.length;i++){var r=t[i];if(e(r))return r}},o.findPreviousWhere=function(t,e,n){void 0!==n&&null!==n||(n=t.length);for(var i=n-1;i>=0;i--){var r=t[i];if(e(r))return r}},o.inherits=function(t){var e=this,n=t&&t.hasOwnProperty("constructor")?t.constructor:function(){return e.apply(this,arguments)},i=function(){this.constructor=n};return i.prototype=e.prototype,n.prototype=new i,n.extend=o.inherits,t&&o.extend(n.prototype,t),n.__super__=e.prototype,n},o.noop=function(){},o.uid=function(){var t=0;return function(){return t++}}(),o.isNumber=function(t){return!isNaN(parseFloat(t))&&isFinite(t)},o.almostEquals=function(t,e,n){return Math.abs(t-e)<n},o.almostWhole=function(t,e){var n=Math.round(t);return n-e<t&&n+e>t},o.max=function(t){return t.reduce(function(t,e){return isNaN(e)?t:Math.max(t,e)},Number.NEGATIVE_INFINITY);
},o.min=function(t){return t.reduce(function(t,e){return isNaN(e)?t:Math.min(t,e)},Number.POSITIVE_INFINITY)},o.sign=Math.sign?function(t){return Math.sign(t)}:function(t){return t=+t,0===t||isNaN(t)?t:t>0?1:-1},o.log10=Math.log10?function(t){return Math.log10(t)}:function(t){return Math.log(t)/Math.LN10},o.toRadians=function(t){return t*(Math.PI/180)},o.toDegrees=function(t){return t*(180/Math.PI)},o.getAngleFromPoint=function(t,e){var n=e.x-t.x,i=e.y-t.y,r=Math.sqrt(n*n+i*i),o=Math.atan2(i,n);return o<-.5*Math.PI&&(o+=2*Math.PI),{angle:o,distance:r}},o.distanceBetweenPoints=function(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))},o.aliasPixel=function(t){return t%2===0?0:.5},o.splineCurve=function(t,e,n,i){var r=t.skip?e:t,o=e,a=n.skip?e:n,s=Math.sqrt(Math.pow(o.x-r.x,2)+Math.pow(o.y-r.y,2)),l=Math.sqrt(Math.pow(a.x-o.x,2)+Math.pow(a.y-o.y,2)),u=s/(s+l),c=l/(s+l);u=isNaN(u)?0:u,c=isNaN(c)?0:c;var d=i*u,h=i*c;return{previous:{x:o.x-d*(a.x-r.x),y:o.y-d*(a.y-r.y)},next:{x:o.x+h*(a.x-r.x),y:o.y+h*(a.y-r.y)}}},o.EPSILON=Number.EPSILON||1e-14,o.splineCurveMonotone=function(t){var e,n,i,r,a=(t||[]).map(function(t){return{model:t._model,deltaK:0,mK:0}}),s=a.length;for(e=0;e<s;++e)if(i=a[e],!i.model.skip){if(n=e>0?a[e-1]:null,r=e<s-1?a[e+1]:null,r&&!r.model.skip){var l=r.model.x-i.model.x;i.deltaK=0!==l?(r.model.y-i.model.y)/l:0}!n||n.model.skip?i.mK=i.deltaK:!r||r.model.skip?i.mK=n.deltaK:this.sign(n.deltaK)!==this.sign(i.deltaK)?i.mK=0:i.mK=(n.deltaK+i.deltaK)/2}var u,c,d,h;for(e=0;e<s-1;++e)i=a[e],r=a[e+1],i.model.skip||r.model.skip||(o.almostEquals(i.deltaK,0,this.EPSILON)?i.mK=r.mK=0:(u=i.mK/i.deltaK,c=r.mK/i.deltaK,h=Math.pow(u,2)+Math.pow(c,2),h<=9||(d=3/Math.sqrt(h),i.mK=u*d*i.deltaK,r.mK=c*d*i.deltaK)));var f;for(e=0;e<s;++e)i=a[e],i.model.skip||(n=e>0?a[e-1]:null,r=e<s-1?a[e+1]:null,n&&!n.model.skip&&(f=(i.model.x-n.model.x)/3,i.model.controlPointPreviousX=i.model.x-f,i.model.controlPointPreviousY=i.model.y-f*i.mK),r&&!r.model.skip&&(f=(r.model.x-i.model.x)/3,i.model.controlPointNextX=i.model.x+f,i.model.controlPointNextY=i.model.y+f*i.mK))},o.nextItem=function(t,e,n){return n?e>=t.length-1?t[0]:t[e+1]:e>=t.length-1?t[t.length-1]:t[e+1]},o.previousItem=function(t,e,n){return n?e<=0?t[t.length-1]:t[e-1]:e<=0?t[0]:t[e-1]},o.niceNum=function(t,e){var n,i=Math.floor(o.log10(t)),r=t/Math.pow(10,i);return n=e?r<1.5?1:r<3?2:r<7?5:10:r<=1?1:r<=2?2:r<=5?5:10,n*Math.pow(10,i)};var a=o.easingEffects={linear:function(t){return t},easeInQuad:function(t){return t*t},easeOutQuad:function(t){return-1*t*(t-2)},easeInOutQuad:function(t){return(t/=.5)<1?.5*t*t:-.5*(--t*(t-2)-1)},easeInCubic:function(t){return t*t*t},easeOutCubic:function(t){return 1*((t=t/1-1)*t*t+1)},easeInOutCubic:function(t){return(t/=.5)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},easeInQuart:function(t){return t*t*t*t},easeOutQuart:function(t){return-1*((t=t/1-1)*t*t*t-1)},easeInOutQuart:function(t){return(t/=.5)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)},easeInQuint:function(t){return 1*(t/=1)*t*t*t*t},easeOutQuint:function(t){return 1*((t=t/1-1)*t*t*t*t+1)},easeInOutQuint:function(t){return(t/=.5)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},easeInSine:function(t){return-1*Math.cos(t/1*(Math.PI/2))+1},easeOutSine:function(t){return 1*Math.sin(t/1*(Math.PI/2))},easeInOutSine:function(t){return-.5*(Math.cos(Math.PI*t/1)-1)},easeInExpo:function(t){return 0===t?1:1*Math.pow(2,10*(t/1-1))},easeOutExpo:function(t){return 1===t?1:1*(-Math.pow(2,-10*t/1)+1)},easeInOutExpo:function(t){return 0===t?0:1===t?1:(t/=.5)<1?.5*Math.pow(2,10*(t-1)):.5*(-Math.pow(2,-10*--t)+2)},easeInCirc:function(t){return t>=1?t:-1*(Math.sqrt(1-(t/=1)*t)-1)},easeOutCirc:function(t){return 1*Math.sqrt(1-(t=t/1-1)*t)},easeInOutCirc:function(t){return(t/=.5)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},easeInElastic:function(t){var e=1.70158,n=0,i=1;return 0===t?0:1===(t/=1)?1:(n||(n=.3),i<Math.abs(1)?(i=1,e=n/4):e=n/(2*Math.PI)*Math.asin(1/i),-(i*Math.pow(2,10*(t-=1))*Math.sin((1*t-e)*(2*Math.PI)/n)))},easeOutElastic:function(t){var e=1.70158,n=0,i=1;return 0===t?0:1===(t/=1)?1:(n||(n=.3),i<Math.abs(1)?(i=1,e=n/4):e=n/(2*Math.PI)*Math.asin(1/i),i*Math.pow(2,-10*t)*Math.sin((1*t-e)*(2*Math.PI)/n)+1)},easeInOutElastic:function(t){var e=1.70158,n=0,i=1;return 0===t?0:2===(t/=.5)?1:(n||(n=1*(.3*1.5)),i<Math.abs(1)?(i=1,e=n/4):e=n/(2*Math.PI)*Math.asin(1/i),t<1?-.5*(i*Math.pow(2,10*(t-=1))*Math.sin((1*t-e)*(2*Math.PI)/n)):i*Math.pow(2,-10*(t-=1))*Math.sin((1*t-e)*(2*Math.PI)/n)*.5+1)},easeInBack:function(t){var e=1.70158;return 1*(t/=1)*t*((e+1)*t-e)},easeOutBack:function(t){var e=1.70158;return 1*((t=t/1-1)*t*((e+1)*t+e)+1)},easeInOutBack:function(t){var e=1.70158;return(t/=.5)<1?.5*(t*t*(((e*=1.525)+1)*t-e)):.5*((t-=2)*t*(((e*=1.525)+1)*t+e)+2)},easeInBounce:function(t){return 1-a.easeOutBounce(1-t)},easeOutBounce:function(t){return(t/=1)<1/2.75?1*(7.5625*t*t):t<2/2.75?1*(7.5625*(t-=1.5/2.75)*t+.75):t<2.5/2.75?1*(7.5625*(t-=2.25/2.75)*t+.9375):1*(7.5625*(t-=2.625/2.75)*t+.984375)},easeInOutBounce:function(t){return t<.5?.5*a.easeInBounce(2*t):.5*a.easeOutBounce(2*t-1)+.5}};o.requestAnimFrame=function(){return"undefined"==typeof window?function(t){t()}:window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){return window.setTimeout(t,1e3/60)}}(),o.getRelativePosition=function(t,e){var n,i,r=t.originalEvent||t,a=t.currentTarget||t.srcElement,s=a.getBoundingClientRect(),l=r.touches;l&&l.length>0?(n=l[0].clientX,i=l[0].clientY):(n=r.clientX,i=r.clientY);var u=parseFloat(o.getStyle(a,"padding-left")),c=parseFloat(o.getStyle(a,"padding-top")),d=parseFloat(o.getStyle(a,"padding-right")),h=parseFloat(o.getStyle(a,"padding-bottom")),f=s.right-s.left-u-d,p=s.bottom-s.top-c-h;return n=Math.round((n-s.left-u)/f*a.width/e.currentDevicePixelRatio),i=Math.round((i-s.top-c)/p*a.height/e.currentDevicePixelRatio),{x:n,y:i}},o.addEvent=function(t,e,n){t.addEventListener?t.addEventListener(e,n):t.attachEvent?t.attachEvent("on"+e,n):t["on"+e]=n},o.removeEvent=function(t,e,n){t.removeEventListener?t.removeEventListener(e,n,!1):t.detachEvent?t.detachEvent("on"+e,n):t["on"+e]=o.noop},o.getConstraintWidth=function(t){return r(t,"max-width","clientWidth")},o.getConstraintHeight=function(t){return r(t,"max-height","clientHeight")},o.getMaximumWidth=function(t){var e=t.parentNode,n=parseInt(o.getStyle(e,"padding-left"),10),i=parseInt(o.getStyle(e,"padding-right"),10),r=e.clientWidth-n-i,a=o.getConstraintWidth(t);return isNaN(a)?r:Math.min(r,a)},o.getMaximumHeight=function(t){var e=t.parentNode,n=parseInt(o.getStyle(e,"padding-top"),10),i=parseInt(o.getStyle(e,"padding-bottom"),10),r=e.clientHeight-n-i,a=o.getConstraintHeight(t);return isNaN(a)?r:Math.min(r,a)},o.getStyle=function(t,e){return t.currentStyle?t.currentStyle[e]:document.defaultView.getComputedStyle(t,null).getPropertyValue(e)},o.retinaScale=function(t){var e=t.currentDevicePixelRatio=window.devicePixelRatio||1;if(1!==e){var n=t.canvas,i=t.height,r=t.width;n.height=i*e,n.width=r*e,t.ctx.scale(e,e),n.style.height=i+"px",n.style.width=r+"px"}},o.clear=function(t){t.ctx.clearRect(0,0,t.width,t.height)},o.fontString=function(t,e,n){return e+" "+t+"px "+n},o.longestText=function(t,e,n,i){i=i||{};var r=i.data=i.data||{},a=i.garbageCollect=i.garbageCollect||[];i.font!==e&&(r=i.data={},a=i.garbageCollect=[],i.font=e),t.font=e;var s=0;o.each(n,function(e){void 0!==e&&null!==e&&o.isArray(e)!==!0?s=o.measureText(t,r,a,s,e):o.isArray(e)&&o.each(e,function(e){void 0===e||null===e||o.isArray(e)||(s=o.measureText(t,r,a,s,e))})});var l=a.length/2;if(l>n.length){for(var u=0;u<l;u++)delete r[a[u]];a.splice(0,l)}return s},o.measureText=function(t,e,n,i,r){var o=e[r];return o||(o=e[r]=t.measureText(r).width,n.push(r)),o>i&&(i=o),i},o.numberOfLabelLines=function(t){var e=1;return o.each(t,function(t){o.isArray(t)&&t.length>e&&(e=t.length)}),e},o.drawRoundedRectangle=function(t,e,n,i,r,o){t.beginPath(),t.moveTo(e+o,n),t.lineTo(e+i-o,n),t.quadraticCurveTo(e+i,n,e+i,n+o),t.lineTo(e+i,n+r-o),t.quadraticCurveTo(e+i,n+r,e+i-o,n+r),t.lineTo(e+o,n+r),t.quadraticCurveTo(e,n+r,e,n+r-o),t.lineTo(e,n+o),t.quadraticCurveTo(e,n,e+o,n),t.closePath()},o.color=i?function(e){return e instanceof CanvasGradient&&(e=t.defaults.global.defaultColor),i(e)}:function(t){return console.error("Color.js not found!"),t},o.isArray=Array.isArray?function(t){return Array.isArray(t)}:function(t){return"[object Array]"===Object.prototype.toString.call(t)},o.arrayEquals=function(t,e){var n,i,r,a;if(!t||!e||t.length!==e.length)return!1;for(n=0,i=t.length;n<i;++n)if(r=t[n],a=e[n],r instanceof Array&&a instanceof Array){if(!o.arrayEquals(r,a))return!1}else if(r!==a)return!1;return!0},o.callback=function(t,e,n){t&&"function"==typeof t.call&&t.apply(n,e)},o.getHoverColor=function(t){return t instanceof CanvasPattern?t:o.color(t).saturate(.5).darken(.1).rgbString()},o.callCallback=o.callback}},{2:2}],27:[function(t,e,n){"use strict";e.exports=function(t){function e(t,e){return t["native"]?{x:t.x,y:t.y}:a.getRelativePosition(t,e)}function n(t,e){var n,i,r,o,a,s=t.data.datasets;for(i=0,o=s.length;i<o;++i)if(t.isDatasetVisible(i))for(n=t.getDatasetMeta(i),r=0,a=n.data.length;r<a;++r){var l=n.data[r];l._view.skip||e(l)}}function i(t,e){var i=[];return n(t,function(t){t.inRange(e.x,e.y)&&i.push(t)}),i}function r(t,e,i,r){var o=Number.POSITIVE_INFINITY,s=[];return r||(r=a.distanceBetweenPoints),n(t,function(t){if(!i||t.inRange(e.x,e.y)){var n=t.getCenterPoint(),a=r(e,n);a<o?(s=[t],o=a):a===o&&s.push(t)}}),s}function o(t,n,o){var a=e(n,t),s=function(t,e){return Math.abs(t.x-e.x)},l=o.intersect?i(t,a):r(t,a,!1,s),u=[];return l.length?(t.data.datasets.forEach(function(e,n){if(t.isDatasetVisible(n)){var i=t.getDatasetMeta(n),r=i.data[l[0]._index];r&&!r._view.skip&&u.push(r)}}),u):[]}var a=t.helpers;t.Interaction={modes:{single:function(t,i){var r=e(i,t),o=[];return n(t,function(t){if(t.inRange(r.x,r.y))return o.push(t),o}),o.slice(0,1)},label:o,index:o,dataset:function(t,n,o){var a=e(n,t),s=o.intersect?i(t,a):r(t,a,!1);return s.length>0&&(s=t.getDatasetMeta(s[0]._datasetIndex).data),s},"x-axis":function(t,e){return o(t,e,!0)},point:function(t,n){var r=e(n,t);return i(t,r)},nearest:function(t,n,i){var o=e(n,t),a=r(t,o,i.intersect);return a.length>1&&a.sort(function(t,e){var n=t.getArea(),i=e.getArea(),r=n-i;return 0===r&&(r=t._datasetIndex-e._datasetIndex),r}),a.slice(0,1)},x:function(t,i,r){var o=e(i,t),a=[],s=!1;return n(t,function(t){t.inXRange(o.x)&&a.push(t),t.inRange(o.x,o.y)&&(s=!0)}),r.intersect&&!s&&(a=[]),a},y:function(t,i,r){var o=e(i,t),a=[],s=!1;return n(t,function(t){t.inYRange(o.y)&&a.push(t),t.inRange(o.x,o.y)&&(s=!0)}),r.intersect&&!s&&(a=[]),a}}}}},{}],28:[function(t,e,n){"use strict";e.exports=function(){var t=function(t,e){return this.construct(t,e),this};return t.defaults={global:{responsive:!0,responsiveAnimationDuration:0,maintainAspectRatio:!0,events:["mousemove","mouseout","click","touchstart","touchmove"],hover:{onHover:null,mode:"nearest",intersect:!0,animationDuration:400},onClick:null,defaultColor:"rgba(0,0,0,0.1)",defaultFontColor:"#666",defaultFontFamily:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",defaultFontSize:12,defaultFontStyle:"normal",showLines:!0,elements:{},legendCallback:function(t){var e=[];e.push('<ul class="'+t.id+'-legend">');for(var n=0;n<t.data.datasets.length;n++)e.push('<li><span style="background-color:'+t.data.datasets[n].backgroundColor+'"></span>'),t.data.datasets[n].label&&e.push(t.data.datasets[n].label),e.push("</li>");return e.push("</ul>"),e.join("")}}},t.Chart=t,t}},{}],29:[function(t,e,n){"use strict";e.exports=function(t){function e(t,e){return i.where(t,function(t){return t.position===e})}function n(t,e){t.forEach(function(t,e){return t._tmpIndex_=e,t}),t.sort(function(t,n){var i=e?n:t,r=e?t:n;return i.weight===r.weight?i._tmpIndex_-r._tmpIndex_:i.weight-r.weight}),t.forEach(function(t){delete t._tmpIndex_})}var i=t.helpers;t.layoutService={defaults:{},addBox:function(t,e){t.boxes||(t.boxes=[]),e.fullWidth=e.fullWidth||!1,e.position=e.position||"top",e.weight=e.weight||0,t.boxes.push(e)},removeBox:function(t,e){var n=t.boxes?t.boxes.indexOf(e):-1;n!==-1&&t.boxes.splice(n,1)},configure:function(t,e,n){for(var i,r=["fullWidth","position","weight"],o=r.length,a=0;a<o;++a)i=r[a],n.hasOwnProperty(i)&&(e[i]=n[i])},update:function(t,r,o){function a(t){var e,n=t.isHorizontal();n?(e=t.update(t.fullWidth?_:D,M),T-=e.height):(e=t.update(C,S),D-=e.width),P.push({horizontal:n,minSize:e,box:t})}function s(t){var e=i.findNextWhere(P,function(e){return e.box===t});if(e)if(t.isHorizontal()){var n={left:Math.max(L,A),right:Math.max(E,I),top:0,bottom:0};t.update(t.fullWidth?_:D,w/2,n)}else t.update(e.minSize.width,T)}function l(t){var e=i.findNextWhere(P,function(e){return e.box===t}),n={left:0,right:0,top:R,bottom:N};e&&t.update(e.minSize.width,T,n)}function u(t){t.isHorizontal()?(t.left=t.fullWidth?h:L,t.right=t.fullWidth?r-f:L+D,t.top=j,t.bottom=j+t.height,j=t.bottom):(t.left=V,t.right=V+t.width,t.top=R,t.bottom=R+T,V=t.right)}if(t){var c=t.options.layout,d=c?c.padding:null,h=0,f=0,p=0,g=0;isNaN(d)?(h=d.left||0,f=d.right||0,p=d.top||0,g=d.bottom||0):(h=d,f=d,p=d,g=d);var m=e(t.boxes,"left"),v=e(t.boxes,"right"),y=e(t.boxes,"top"),b=e(t.boxes,"bottom"),x=e(t.boxes,"chartArea");n(m,!0),n(v,!1),n(y,!0),n(b,!1);var _=r-h-f,w=o-p-g,k=_/2,S=w/2,C=(r-k)/(m.length+v.length),M=(o-S)/(y.length+b.length),D=_,T=w,P=[];i.each(m.concat(v,y,b),a);var A=0,I=0,O=0,F=0;i.each(y.concat(b),function(t){if(t.getPadding){var e=t.getPadding();A=Math.max(A,e.left),I=Math.max(I,e.right)}}),i.each(m.concat(v),function(t){if(t.getPadding){var e=t.getPadding();O=Math.max(O,e.top),F=Math.max(F,e.bottom)}});var L=h,E=f,R=p,N=g;i.each(m.concat(v),s),i.each(m,function(t){L+=t.width}),i.each(v,function(t){E+=t.width}),i.each(y.concat(b),s),i.each(y,function(t){R+=t.height}),i.each(b,function(t){N+=t.height}),i.each(m.concat(v),l),L=h,E=f,R=p,N=g,i.each(m,function(t){L+=t.width}),i.each(v,function(t){E+=t.width}),i.each(y,function(t){R+=t.height}),i.each(b,function(t){N+=t.height});var W=Math.max(A-L,0);L+=W,E+=Math.max(I-E,0);var z=Math.max(O-R,0);R+=z,N+=Math.max(F-N,0);var H=o-R-N,B=r-L-E;B===D&&H===T||(i.each(m,function(t){t.height=H}),i.each(v,function(t){t.height=H}),i.each(y,function(t){t.fullWidth||(t.width=B)}),i.each(b,function(t){t.fullWidth||(t.width=B)}),T=H,D=B);var V=h+W,j=p+z;i.each(m.concat(y),u),V+=D,j+=T,i.each(v,u),i.each(b,u),t.chartArea={left:L,top:R,right:L+D,bottom:R+T},i.each(x,function(e){e.left=t.chartArea.left,e.top=t.chartArea.top,e.right=t.chartArea.right,e.bottom=t.chartArea.bottom,e.update(D,T)})}}}}},{}],30:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers;t.defaults.global.plugins={},t.plugins={_plugins:[],_cacheId:0,register:function(t){var e=this._plugins;[].concat(t).forEach(function(t){e.indexOf(t)===-1&&e.push(t)}),this._cacheId++},unregister:function(t){var e=this._plugins;[].concat(t).forEach(function(t){var n=e.indexOf(t);n!==-1&&e.splice(n,1)}),this._cacheId++},clear:function(){this._plugins=[],this._cacheId++},count:function(){return this._plugins.length},getAll:function(){return this._plugins},notify:function(t,e,n){var i,r,o,a,s,l=this.descriptors(t),u=l.length;for(i=0;i<u;++i)if(r=l[i],o=r.plugin,s=o[e],"function"==typeof s&&(a=[t].concat(n||[]),a.push(r.options),s.apply(o,a)===!1))return!1;return!0},descriptors:function(n){var i=n._plugins||(n._plugins={});if(i.id===this._cacheId)return i.descriptors;var r=[],o=[],a=n&&n.config||{},s=t.defaults.global.plugins,l=a.options&&a.options.plugins||{};return this._plugins.concat(a.plugins||[]).forEach(function(t){var n=r.indexOf(t);if(n===-1){var i=t.id,a=l[i];a!==!1&&(a===!0&&(a=e.clone(s[i])),r.push(t),o.push({plugin:t,options:a||{}}))}}),i.descriptors=o,i.id=this._cacheId,o}},t.pluginService=t.plugins,t.PluginBase=t.Element.extend({})}},{}],31:[function(t,e,n){"use strict";e.exports=function(t){function e(t,e,n){return i.isArray(e)?i.longestText(t,n,e):t.measureText(e).width}function n(e){var n=i.getValueOrDefault,r=t.defaults.global,o=n(e.fontSize,r.defaultFontSize),a=n(e.fontStyle,r.defaultFontStyle),s=n(e.fontFamily,r.defaultFontFamily);return{size:o,style:a,family:s,font:i.fontString(o,a,s)}}var i=t.helpers;t.defaults.scale={display:!0,position:"left",gridLines:{display:!0,color:"rgba(0, 0, 0, 0.1)",lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickMarkLength:10,zeroLineWidth:1,zeroLineColor:"rgba(0,0,0,0.25)",zeroLineBorderDash:[],zeroLineBorderDashOffset:0,offsetGridLines:!1,borderDash:[],borderDashOffset:0},scaleLabel:{labelString:"",display:!1},ticks:{beginAtZero:!1,minRotation:0,maxRotation:50,mirror:!1,padding:0,reverse:!1,display:!0,autoSkip:!0,autoSkipPadding:0,labelOffset:0,callback:t.Ticks.formatters.values}},t.Scale=t.Element.extend({getPadding:function(){var t=this;return{left:t.paddingLeft||0,top:t.paddingTop||0,right:t.paddingRight||0,bottom:t.paddingBottom||0}},beforeUpdate:function(){i.callback(this.options.beforeUpdate,[this])},update:function(t,e,n){var r=this;return r.beforeUpdate(),r.maxWidth=t,r.maxHeight=e,r.margins=i.extend({left:0,right:0,top:0,bottom:0},n),r.longestTextCache=r.longestTextCache||{},r.beforeSetDimensions(),r.setDimensions(),r.afterSetDimensions(),r.beforeDataLimits(),r.determineDataLimits(),r.afterDataLimits(),r.beforeBuildTicks(),r.buildTicks(),r.afterBuildTicks(),r.beforeTickToLabelConversion(),r.convertTicksToLabels(),r.afterTickToLabelConversion(),r.beforeCalculateTickRotation(),r.calculateTickRotation(),r.afterCalculateTickRotation(),r.beforeFit(),r.fit(),r.afterFit(),r.afterUpdate(),r.minSize},afterUpdate:function(){i.callback(this.options.afterUpdate,[this])},beforeSetDimensions:function(){i.callback(this.options.beforeSetDimensions,[this])},setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0},afterSetDimensions:function(){i.callback(this.options.afterSetDimensions,[this])},beforeDataLimits:function(){i.callback(this.options.beforeDataLimits,[this])},determineDataLimits:i.noop,afterDataLimits:function(){i.callback(this.options.afterDataLimits,[this])},beforeBuildTicks:function(){i.callback(this.options.beforeBuildTicks,[this])},buildTicks:i.noop,afterBuildTicks:function(){i.callback(this.options.afterBuildTicks,[this])},beforeTickToLabelConversion:function(){i.callback(this.options.beforeTickToLabelConversion,[this])},convertTicksToLabels:function(){var t=this,e=t.options.ticks;t.ticks=t.ticks.map(e.userCallback||e.callback)},afterTickToLabelConversion:function(){i.callback(this.options.afterTickToLabelConversion,[this])},beforeCalculateTickRotation:function(){i.callback(this.options.beforeCalculateTickRotation,[this])},calculateTickRotation:function(){var t=this,e=t.ctx,r=t.options.ticks,o=n(r);e.font=o.font;var a=r.minRotation||0;if(t.options.display&&t.isHorizontal())for(var s,l,u=i.longestText(e,o.font,t.ticks,t.longestTextCache),c=u,d=t.getPixelForTick(1)-t.getPixelForTick(0)-6;c>d&&a<r.maxRotation;){var h=i.toRadians(a);if(s=Math.cos(h),l=Math.sin(h),l*u>t.maxHeight){a--;break}a++,c=s*u}t.labelRotation=a},afterCalculateTickRotation:function(){i.callback(this.options.afterCalculateTickRotation,[this])},beforeFit:function(){i.callback(this.options.beforeFit,[this])},fit:function(){var t=this,r=t.minSize={width:0,height:0},o=t.options,a=o.ticks,s=o.scaleLabel,l=o.gridLines,u=o.display,c=t.isHorizontal(),d=n(a),h=1.5*n(s).size,f=o.gridLines.tickMarkLength;if(c?r.width=t.isFullWidth()?t.maxWidth-t.margins.left-t.margins.right:t.maxWidth:r.width=u&&l.drawTicks?f:0,c?r.height=u&&l.drawTicks?f:0:r.height=t.maxHeight,s.display&&u&&(c?r.height+=h:r.width+=h),a.display&&u){var p=i.longestText(t.ctx,d.font,t.ticks,t.longestTextCache),g=i.numberOfLabelLines(t.ticks),m=.5*d.size;if(c){t.longestLabelWidth=p;var v=i.toRadians(t.labelRotation),y=Math.cos(v),b=Math.sin(v),x=b*p+d.size*g+m*g;r.height=Math.min(t.maxHeight,r.height+x),t.ctx.font=d.font;var _=t.ticks[0],w=e(t.ctx,_,d.font),k=t.ticks[t.ticks.length-1],S=e(t.ctx,k,d.font);0!==t.labelRotation?(t.paddingLeft="bottom"===o.position?y*w+3:y*m+3,t.paddingRight="bottom"===o.position?y*m+3:y*S+3):(t.paddingLeft=w/2+3,t.paddingRight=S/2+3)}else a.mirror?p=0:p+=t.options.ticks.padding,r.width=Math.min(t.maxWidth,r.width+p),t.paddingTop=d.size/2,t.paddingBottom=d.size/2}t.handleMargins(),t.width=r.width,t.height=r.height},handleMargins:function(){var t=this;t.margins&&(t.paddingLeft=Math.max(t.paddingLeft-t.margins.left,0),t.paddingTop=Math.max(t.paddingTop-t.margins.top,0),t.paddingRight=Math.max(t.paddingRight-t.margins.right,0),t.paddingBottom=Math.max(t.paddingBottom-t.margins.bottom,0))},afterFit:function(){i.callback(this.options.afterFit,[this])},isHorizontal:function(){return"top"===this.options.position||"bottom"===this.options.position},isFullWidth:function(){return this.options.fullWidth},getRightValue:function(t){return null===t||"undefined"==typeof t?NaN:"number"!=typeof t||isFinite(t)?"object"==typeof t?t instanceof Date||t.isValid?t:this.getRightValue(this.isHorizontal()?t.x:t.y):t:NaN},getLabelForIndex:i.noop,getPixelForValue:i.noop,getValueForPixel:i.noop,getPixelForTick:function(t,e){var n=this;if(n.isHorizontal()){var i=n.width-(n.paddingLeft+n.paddingRight),r=i/Math.max(n.ticks.length-(n.options.gridLines.offsetGridLines?0:1),1),o=r*t+n.paddingLeft;e&&(o+=r/2);var a=n.left+Math.round(o);return a+=n.isFullWidth()?n.margins.left:0}var s=n.height-(n.paddingTop+n.paddingBottom);return n.top+t*(s/(n.ticks.length-1))},getPixelForDecimal:function(t){var e=this;if(e.isHorizontal()){var n=e.width-(e.paddingLeft+e.paddingRight),i=n*t+e.paddingLeft,r=e.left+Math.round(i);return r+=e.isFullWidth()?e.margins.left:0}return e.top+t*e.height},getBasePixel:function(){return this.getPixelForValue(this.getBaseValue())},getBaseValue:function(){var t=this,e=t.min,n=t.max;return t.beginAtZero?0:e<0&&n<0?n:e>0&&n>0?e:0},draw:function(e){var r=this,o=r.options;if(o.display){var a,s,l=r.ctx,u=t.defaults.global,c=o.ticks,d=o.gridLines,h=o.scaleLabel,f=0!==r.labelRotation,p=c.autoSkip,g=r.isHorizontal();c.maxTicksLimit&&(s=c.maxTicksLimit);var m=i.getValueOrDefault(c.fontColor,u.defaultFontColor),v=n(c),y=d.drawTicks?d.tickMarkLength:0,b=i.getValueOrDefault(h.fontColor,u.defaultFontColor),x=n(h),_=i.toRadians(r.labelRotation),w=Math.cos(_),k=r.longestLabelWidth*w;l.fillStyle=m;var S=[];if(g){if(a=!1,(k+c.autoSkipPadding)*r.ticks.length>r.width-(r.paddingLeft+r.paddingRight)&&(a=1+Math.floor((k+c.autoSkipPadding)*r.ticks.length/(r.width-(r.paddingLeft+r.paddingRight)))),s&&r.ticks.length>s)for(;!a||r.ticks.length/(a||1)>s;)a||(a=1),a+=1;p||(a=!1)}var C="right"===o.position?r.left:r.right-y,M="right"===o.position?r.left+y:r.right,D="bottom"===o.position?r.top:r.bottom-y,T="bottom"===o.position?r.top+y:r.bottom;if(i.each(r.ticks,function(t,n){if(void 0!==t&&null!==t){var s=r.ticks.length===n+1,l=a>1&&n%a>0||n%a===0&&n+a>=r.ticks.length;if((!l||s)&&void 0!==t&&null!==t){var h,p,m,v;n===("undefined"!=typeof r.zeroLineIndex?r.zeroLineIndex:0)?(h=d.zeroLineWidth,p=d.zeroLineColor,m=d.zeroLineBorderDash,v=d.zeroLineBorderDashOffset):(h=i.getValueAtIndexOrDefault(d.lineWidth,n),p=i.getValueAtIndexOrDefault(d.color,n),m=i.getValueOrDefault(d.borderDash,u.borderDash),v=i.getValueOrDefault(d.borderDashOffset,u.borderDashOffset));var b,x,w,k,P,A,I,O,F,L,E="middle",R="middle";if(g){"bottom"===o.position?(R=f?"middle":"top",E=f?"right":"center",L=r.top+y):(R=f?"middle":"bottom",E=f?"left":"center",L=r.bottom-y);var N=r.getPixelForTick(n)+i.aliasPixel(h);F=r.getPixelForTick(n,d.offsetGridLines)+c.labelOffset,b=w=P=I=N,x=D,k=T,A=e.top,O=e.bottom}else{var W,z="left"===o.position,H=c.padding;c.mirror?(E=z?"left":"right",W=H):(E=z?"right":"left",W=y+H),F=z?r.right-W:r.left+W;var B=r.getPixelForTick(n);B+=i.aliasPixel(h),L=r.getPixelForTick(n,d.offsetGridLines),b=C,w=M,P=e.left,I=e.right,x=k=A=O=B}S.push({tx1:b,ty1:x,tx2:w,ty2:k,x1:P,y1:A,x2:I,y2:O,labelX:F,labelY:L,glWidth:h,glColor:p,glBorderDash:m,glBorderDashOffset:v,rotation:-1*_,label:t,textBaseline:R,textAlign:E})}}}),i.each(S,function(t){if(d.display&&(l.save(),l.lineWidth=t.glWidth,l.strokeStyle=t.glColor,l.setLineDash&&(l.setLineDash(t.glBorderDash),l.lineDashOffset=t.glBorderDashOffset),l.beginPath(),d.drawTicks&&(l.moveTo(t.tx1,t.ty1),l.lineTo(t.tx2,t.ty2)),d.drawOnChartArea&&(l.moveTo(t.x1,t.y1),l.lineTo(t.x2,t.y2)),l.stroke(),l.restore()),c.display){l.save(),l.translate(t.labelX,t.labelY),l.rotate(t.rotation),l.font=v.font,l.textBaseline=t.textBaseline,l.textAlign=t.textAlign;var e=t.label;if(i.isArray(e))for(var n=0,r=0;n<e.length;++n)l.fillText(""+e[n],0,r),r+=1.5*v.size;else l.fillText(e,0,0);l.restore()}}),h.display){var P,A,I=0;if(g)P=r.left+(r.right-r.left)/2,A="bottom"===o.position?r.bottom-x.size/2:r.top+x.size/2;else{var O="left"===o.position;P=O?r.left+x.size/2:r.right-x.size/2,A=r.top+(r.bottom-r.top)/2,I=O?-.5*Math.PI:.5*Math.PI}l.save(),l.translate(P,A),l.rotate(I),l.textAlign="center",l.textBaseline="middle",l.fillStyle=b,l.font=x.font,l.fillText(h.labelString,0,0),l.restore()}if(d.drawBorder){l.lineWidth=i.getValueAtIndexOrDefault(d.lineWidth,0),l.strokeStyle=i.getValueAtIndexOrDefault(d.color,0);var F=r.left,L=r.right,E=r.top,R=r.bottom,N=i.aliasPixel(l.lineWidth);g?(E=R="top"===o.position?r.bottom:r.top,E+=N,R+=N):(F=L="left"===o.position?r.right:r.left,F+=N,L+=N),l.beginPath(),l.moveTo(F,E),l.lineTo(L,R),l.stroke()}}}})}},{}],32:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers;t.scaleService={constructors:{},defaults:{},registerScaleType:function(t,n,i){this.constructors[t]=n,this.defaults[t]=e.clone(i)},getScaleConstructor:function(t){return this.constructors.hasOwnProperty(t)?this.constructors[t]:void 0},getScaleDefaults:function(n){return this.defaults.hasOwnProperty(n)?e.scaleMerge(t.defaults.scale,this.defaults[n]):{}},updateScaleDefaults:function(t,n){var i=this.defaults;i.hasOwnProperty(t)&&(i[t]=e.extend(i[t],n))},addScalesToLayout:function(n){e.each(n.scales,function(e){e.fullWidth=e.options.fullWidth,e.position=e.options.position,e.weight=e.options.weight,t.layoutService.addBox(n,e)})}}}},{}],33:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers;t.Ticks={generators:{linear:function(t,n){var i,r=[];if(t.stepSize&&t.stepSize>0)i=t.stepSize;else{var o=e.niceNum(n.max-n.min,!1);i=e.niceNum(o/(t.maxTicks-1),!0)}var a=Math.floor(n.min/i)*i,s=Math.ceil(n.max/i)*i;t.min&&t.max&&t.stepSize&&e.almostWhole((t.max-t.min)/t.stepSize,i/1e3)&&(a=t.min,s=t.max);var l=(s-a)/i;l=e.almostEquals(l,Math.round(l),i/1e3)?Math.round(l):Math.ceil(l),r.push(void 0!==t.min?t.min:a);for(var u=1;u<l;++u)r.push(a+u*i);return r.push(void 0!==t.max?t.max:s),r},logarithmic:function(t,n){var i,r,o=[],a=e.getValueOrDefault,s=a(t.min,Math.pow(10,Math.floor(e.log10(n.min)))),l=Math.floor(e.log10(n.max)),u=Math.ceil(n.max/Math.pow(10,l));0===s?(i=Math.floor(e.log10(n.minNotZero)),r=Math.floor(n.minNotZero/Math.pow(10,i)),o.push(s),s=r*Math.pow(10,i)):(i=Math.floor(e.log10(s)),r=Math.floor(s/Math.pow(10,i)));do o.push(s),++r,10===r&&(r=1,++i),s=r*Math.pow(10,i);while(i<l||i===l&&r<u);var c=a(t.max,s);return o.push(c),o}},formatters:{values:function(t){return e.isArray(t)?t:""+t},linear:function(t,n,i){var r=i.length>3?i[2]-i[1]:i[1]-i[0];Math.abs(r)>1&&t!==Math.floor(t)&&(r=t-Math.floor(t));var o=e.log10(Math.abs(r)),a="";if(0!==t){var s=-1*Math.floor(o);s=Math.max(Math.min(s,20),0),a=t.toFixed(s)}else a="0";return a},logarithmic:function(t,n,i){var r=t/Math.pow(10,Math.floor(e.log10(t)));return 0===t?"0":1===r||2===r||5===r||0===n||n===i.length-1?t.toExponential():""}}}}},{}],34:[function(t,e,n){"use strict";e.exports=function(t){function e(t,e){var n=l.color(t);return n.alpha(e*n.alpha()).rgbaString()}function n(t,e){return e&&(l.isArray(e)?Array.prototype.push.apply(t,e):t.push(e)),t}function i(t){var e=t._xScale,n=t._yScale||t._scale,i=t._index,r=t._datasetIndex;return{xLabel:e?e.getLabelForIndex(i,r):"",yLabel:n?n.getLabelForIndex(i,r):"",index:i,datasetIndex:r,x:t._model.x,y:t._model.y}}function r(e){var n=t.defaults.global,i=l.getValueOrDefault;return{xPadding:e.xPadding,yPadding:e.yPadding,xAlign:e.xAlign,yAlign:e.yAlign,bodyFontColor:e.bodyFontColor,_bodyFontFamily:i(e.bodyFontFamily,n.defaultFontFamily),_bodyFontStyle:i(e.bodyFontStyle,n.defaultFontStyle),_bodyAlign:e.bodyAlign,bodyFontSize:i(e.bodyFontSize,n.defaultFontSize),bodySpacing:e.bodySpacing,titleFontColor:e.titleFontColor,_titleFontFamily:i(e.titleFontFamily,n.defaultFontFamily),_titleFontStyle:i(e.titleFontStyle,n.defaultFontStyle),titleFontSize:i(e.titleFontSize,n.defaultFontSize),_titleAlign:e.titleAlign,titleSpacing:e.titleSpacing,titleMarginBottom:e.titleMarginBottom,footerFontColor:e.footerFontColor,_footerFontFamily:i(e.footerFontFamily,n.defaultFontFamily),_footerFontStyle:i(e.footerFontStyle,n.defaultFontStyle),footerFontSize:i(e.footerFontSize,n.defaultFontSize),_footerAlign:e.footerAlign,footerSpacing:e.footerSpacing,footerMarginTop:e.footerMarginTop,caretSize:e.caretSize,cornerRadius:e.cornerRadius,backgroundColor:e.backgroundColor,opacity:0,legendColorBackground:e.multiKeyBackground,displayColors:e.displayColors,borderColor:e.borderColor,borderWidth:e.borderWidth}}function o(t,e){var n=t._chart.ctx,i=2*e.yPadding,r=0,o=e.body,a=o.reduce(function(t,e){return t+e.before.length+e.lines.length+e.after.length},0);a+=e.beforeBody.length+e.afterBody.length;var s=e.title.length,u=e.footer.length,c=e.titleFontSize,d=e.bodyFontSize,h=e.footerFontSize;i+=s*c,i+=s?(s-1)*e.titleSpacing:0,i+=s?e.titleMarginBottom:0,i+=a*d,i+=a?(a-1)*e.bodySpacing:0,i+=u?e.footerMarginTop:0,i+=u*h,i+=u?(u-1)*e.footerSpacing:0;var f=0,p=function(t){r=Math.max(r,n.measureText(t).width+f)};return n.font=l.fontString(c,e._titleFontStyle,e._titleFontFamily),l.each(e.title,p),n.font=l.fontString(d,e._bodyFontStyle,e._bodyFontFamily),l.each(e.beforeBody.concat(e.afterBody),p),f=e.displayColors?d+2:0,l.each(o,function(t){l.each(t.before,p),l.each(t.lines,p),l.each(t.after,p)}),f=0,n.font=l.fontString(h,e._footerFontStyle,e._footerFontFamily),l.each(e.footer,p),r+=2*e.xPadding,{width:r,height:i}}function a(t,e){var n=t._model,i=t._chart,r=t._chart.chartArea,o="center",a="center";n.y<e.height?a="top":n.y>i.height-e.height&&(a="bottom");var s,l,u,c,d,h=(r.left+r.right)/2,f=(r.top+r.bottom)/2;"center"===a?(s=function(t){return t<=h},l=function(t){return t>h}):(s=function(t){return t<=e.width/2},l=function(t){return t>=i.width-e.width/2}),u=function(t){return t+e.width>i.width},c=function(t){return t-e.width<0},d=function(t){return t<=f?"top":"bottom"},s(n.x)?(o="left",u(n.x)&&(o="center",a=d(n.y))):l(n.x)&&(o="right",c(n.x)&&(o="center",a=d(n.y)));var p=t._options;return{xAlign:p.xAlign?p.xAlign:o,yAlign:p.yAlign?p.yAlign:a}}function s(t,e,n){var i=t.x,r=t.y,o=t.caretSize,a=t.caretPadding,s=t.cornerRadius,l=n.xAlign,u=n.yAlign,c=o+a,d=s+a;return"right"===l?i-=e.width:"center"===l&&(i-=e.width/2),"top"===u?r+=c:r-="bottom"===u?e.height+c:e.height/2,"center"===u?"left"===l?i+=c:"right"===l&&(i-=c):"left"===l?i-=d:"right"===l&&(i+=d),{x:i,y:r}}var l=t.helpers;t.defaults.global.tooltips={enabled:!0,custom:null,mode:"nearest",position:"average",intersect:!0,backgroundColor:"rgba(0,0,0,0.8)",titleFontStyle:"bold",titleSpacing:2,titleMarginBottom:6,titleFontColor:"#fff",titleAlign:"left",bodySpacing:2,bodyFontColor:"#fff",bodyAlign:"left",footerFontStyle:"bold",footerSpacing:2,footerMarginTop:6,footerFontColor:"#fff",footerAlign:"left",yPadding:6,xPadding:6,caretPadding:2,caretSize:5,cornerRadius:6,multiKeyBackground:"#fff",displayColors:!0,borderColor:"rgba(0,0,0,0)",borderWidth:0,callbacks:{beforeTitle:l.noop,title:function(t,e){var n="",i=e.labels,r=i?i.length:0;if(t.length>0){var o=t[0];o.xLabel?n=o.xLabel:r>0&&o.index<r&&(n=i[o.index]);
}return n},afterTitle:l.noop,beforeBody:l.noop,beforeLabel:l.noop,label:function(t,e){var n=e.datasets[t.datasetIndex].label||"";return n&&(n+=": "),n+=t.yLabel},labelColor:function(t,e){var n=e.getDatasetMeta(t.datasetIndex),i=n.data[t.index],r=i._view;return{borderColor:r.borderColor,backgroundColor:r.backgroundColor}},afterLabel:l.noop,afterBody:l.noop,beforeFooter:l.noop,footer:l.noop,afterFooter:l.noop}},t.Tooltip=t.Element.extend({initialize:function(){this._model=r(this._options)},getTitle:function(){var t=this,e=t._options,i=e.callbacks,r=i.beforeTitle.apply(t,arguments),o=i.title.apply(t,arguments),a=i.afterTitle.apply(t,arguments),s=[];return s=n(s,r),s=n(s,o),s=n(s,a)},getBeforeBody:function(){var t=this._options.callbacks.beforeBody.apply(this,arguments);return l.isArray(t)?t:void 0!==t?[t]:[]},getBody:function(t,e){var i=this,r=i._options.callbacks,o=[];return l.each(t,function(t){var a={before:[],lines:[],after:[]};n(a.before,r.beforeLabel.call(i,t,e)),n(a.lines,r.label.call(i,t,e)),n(a.after,r.afterLabel.call(i,t,e)),o.push(a)}),o},getAfterBody:function(){var t=this._options.callbacks.afterBody.apply(this,arguments);return l.isArray(t)?t:void 0!==t?[t]:[]},getFooter:function(){var t=this,e=t._options.callbacks,i=e.beforeFooter.apply(t,arguments),r=e.footer.apply(t,arguments),o=e.afterFooter.apply(t,arguments),a=[];return a=n(a,i),a=n(a,r),a=n(a,o)},update:function(e){var n,u,c=this,d=c._options,h=c._model,f=c._model=r(d),p=c._active,g=c._data,m={xAlign:h.xAlign,yAlign:h.yAlign},v={x:h.x,y:h.y},y={width:h.width,height:h.height},b={x:h.caretX,y:h.caretY};if(p.length){f.opacity=1;var x=[];b=t.Tooltip.positioners[d.position](p,c._eventPosition);var _=[];for(n=0,u=p.length;n<u;++n)_.push(i(p[n]));d.filter&&(_=_.filter(function(t){return d.filter(t,g)})),d.itemSort&&(_=_.sort(function(t,e){return d.itemSort(t,e,g)})),l.each(_,function(t){x.push(d.callbacks.labelColor.call(c,t,c._chart))}),f.title=c.getTitle(_,g),f.beforeBody=c.getBeforeBody(_,g),f.body=c.getBody(_,g),f.afterBody=c.getAfterBody(_,g),f.footer=c.getFooter(_,g),f.x=Math.round(b.x),f.y=Math.round(b.y),f.caretPadding=d.caretPadding,f.labelColors=x,f.dataPoints=_,y=o(this,f),m=a(this,y),v=s(f,y,m)}else f.opacity=0;return f.xAlign=m.xAlign,f.yAlign=m.yAlign,f.x=v.x,f.y=v.y,f.width=y.width,f.height=y.height,f.caretX=b.x,f.caretY=b.y,c._model=f,e&&d.custom&&d.custom.call(c,f),c},drawCaret:function(t,e){var n=this._chart.ctx,i=this._view,r=this.getCaretPosition(t,e,i);n.lineTo(r.x1,r.y1),n.lineTo(r.x2,r.y2),n.lineTo(r.x3,r.y3)},getCaretPosition:function(t,e,n){var i,r,o,a,s,l,u=n.caretSize,c=n.cornerRadius,d=n.xAlign,h=n.yAlign,f=t.x,p=t.y,g=e.width,m=e.height;if("center"===h)s=p+m/2,"left"===d?(i=f,r=i-u,o=i,a=s+u,l=s-u):(i=f+g,r=i+u,o=i,a=s-u,l=s+u);else if("left"===d?(r=f+c+u,i=r-u,o=r+u):"right"===d?(r=f+g-c-u,i=r-u,o=r+u):(r=f+g/2,i=r-u,o=r+u),"top"===h)a=p,s=a-u,l=a;else{a=p+m,s=a+u,l=a;var v=o;o=i,i=v}return{x1:i,x2:r,x3:o,y1:a,y2:s,y3:l}},drawTitle:function(t,n,i,r){var o=n.title;if(o.length){i.textAlign=n._titleAlign,i.textBaseline="top";var a=n.titleFontSize,s=n.titleSpacing;i.fillStyle=e(n.titleFontColor,r),i.font=l.fontString(a,n._titleFontStyle,n._titleFontFamily);var u,c;for(u=0,c=o.length;u<c;++u)i.fillText(o[u],t.x,t.y),t.y+=a+s,u+1===o.length&&(t.y+=n.titleMarginBottom-s)}},drawBody:function(t,n,i,r){var o=n.bodyFontSize,a=n.bodySpacing,s=n.body;i.textAlign=n._bodyAlign,i.textBaseline="top";var u=e(n.bodyFontColor,r);i.fillStyle=u,i.font=l.fontString(o,n._bodyFontStyle,n._bodyFontFamily);var c=0,d=function(e){i.fillText(e,t.x+c,t.y),t.y+=o+a};l.each(n.beforeBody,d);var h=n.displayColors;c=h?o+2:0,l.each(s,function(a,s){l.each(a.before,d),l.each(a.lines,function(a){h&&(i.fillStyle=e(n.legendColorBackground,r),i.fillRect(t.x,t.y,o,o),i.strokeStyle=e(n.labelColors[s].borderColor,r),i.strokeRect(t.x,t.y,o,o),i.fillStyle=e(n.labelColors[s].backgroundColor,r),i.fillRect(t.x+1,t.y+1,o-2,o-2),i.fillStyle=u),d(a)}),l.each(a.after,d)}),c=0,l.each(n.afterBody,d),t.y-=a},drawFooter:function(t,n,i,r){var o=n.footer;o.length&&(t.y+=n.footerMarginTop,i.textAlign=n._footerAlign,i.textBaseline="top",i.fillStyle=e(n.footerFontColor,r),i.font=l.fontString(n.footerFontSize,n._footerFontStyle,n._footerFontFamily),l.each(o,function(e){i.fillText(e,t.x,t.y),t.y+=n.footerFontSize+n.footerSpacing}))},drawBackground:function(t,n,i,r,o){i.fillStyle=e(n.backgroundColor,o),i.strokeStyle=e(n.borderColor,o),i.lineWidth=n.borderWidth;var a=n.xAlign,s=n.yAlign,l=t.x,u=t.y,c=r.width,d=r.height,h=n.cornerRadius;i.beginPath(),i.moveTo(l+h,u),"top"===s&&this.drawCaret(t,r),i.lineTo(l+c-h,u),i.quadraticCurveTo(l+c,u,l+c,u+h),"center"===s&&"right"===a&&this.drawCaret(t,r),i.lineTo(l+c,u+d-h),i.quadraticCurveTo(l+c,u+d,l+c-h,u+d),"bottom"===s&&this.drawCaret(t,r),i.lineTo(l+h,u+d),i.quadraticCurveTo(l,u+d,l,u+d-h),"center"===s&&"left"===a&&this.drawCaret(t,r),i.lineTo(l,u+h),i.quadraticCurveTo(l,u,l+h,u),i.closePath(),i.fill(),n.borderWidth>0&&i.stroke()},draw:function(){var t=this._chart.ctx,e=this._view;if(0!==e.opacity){var n={width:e.width,height:e.height},i={x:e.x,y:e.y},r=Math.abs(e.opacity<.001)?0:e.opacity,o=e.title.length||e.beforeBody.length||e.body.length||e.afterBody.length||e.footer.length;this._options.enabled&&o&&(this.drawBackground(i,e,t,n,r),i.x+=e.xPadding,i.y+=e.yPadding,this.drawTitle(i,e,t,r),this.drawBody(i,e,t,r),this.drawFooter(i,e,t,r))}},handleEvent:function(t){var e=this,n=e._options,i=!1;if(e._lastActive=e._lastActive||[],"mouseout"===t.type?e._active=[]:e._active=e._chart.getElementsAtEventForMode(t,n.mode,n),i=!l.arrayEquals(e._active,e._lastActive),!i)return!1;if(e._lastActive=e._active,n.enabled||n.custom){e._eventPosition={x:t.x,y:t.y};var r=e._model;e.update(!0),e.pivot(),i|=r.x!==e._model.x||r.y!==e._model.y}return i}}),t.Tooltip.positioners={average:function(t){if(!t.length)return!1;var e,n,i=0,r=0,o=0;for(e=0,n=t.length;e<n;++e){var a=t[e];if(a&&a.hasValue()){var s=a.tooltipPosition();i+=s.x,r+=s.y,++o}}return{x:Math.round(i/o),y:Math.round(r/o)}},nearest:function(t,e){var n,i,r,o=e.x,a=e.y,s=Number.POSITIVE_INFINITY;for(i=0,r=t.length;i<r;++i){var u=t[i];if(u&&u.hasValue()){var c=u.getCenterPoint(),d=l.distanceBetweenPoints(e,c);d<s&&(s=d,n=u)}}if(n){var h=n.tooltipPosition();o=h.x,a=h.y}return{x:o,y:a}}}}},{}],35:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers,n=t.defaults.global;n.elements.arc={backgroundColor:n.defaultColor,borderColor:"#fff",borderWidth:2},t.elements.Arc=t.Element.extend({inLabelRange:function(t){var e=this._view;return!!e&&Math.pow(t-e.x,2)<Math.pow(e.radius+e.hoverRadius,2)},inRange:function(t,n){var i=this._view;if(i){for(var r=e.getAngleFromPoint(i,{x:t,y:n}),o=r.angle,a=r.distance,s=i.startAngle,l=i.endAngle;l<s;)l+=2*Math.PI;for(;o>l;)o-=2*Math.PI;for(;o<s;)o+=2*Math.PI;var u=o>=s&&o<=l,c=a>=i.innerRadius&&a<=i.outerRadius;return u&&c}return!1},getCenterPoint:function(){var t=this._view,e=(t.startAngle+t.endAngle)/2,n=(t.innerRadius+t.outerRadius)/2;return{x:t.x+Math.cos(e)*n,y:t.y+Math.sin(e)*n}},getArea:function(){var t=this._view;return Math.PI*((t.endAngle-t.startAngle)/(2*Math.PI))*(Math.pow(t.outerRadius,2)-Math.pow(t.innerRadius,2))},tooltipPosition:function(){var t=this._view,e=t.startAngle+(t.endAngle-t.startAngle)/2,n=(t.outerRadius-t.innerRadius)/2+t.innerRadius;return{x:t.x+Math.cos(e)*n,y:t.y+Math.sin(e)*n}},draw:function(){var t=this._chart.ctx,e=this._view,n=e.startAngle,i=e.endAngle;t.beginPath(),t.arc(e.x,e.y,e.outerRadius,n,i),t.arc(e.x,e.y,e.innerRadius,i,n,!0),t.closePath(),t.strokeStyle=e.borderColor,t.lineWidth=e.borderWidth,t.fillStyle=e.backgroundColor,t.fill(),t.lineJoin="bevel",e.borderWidth&&t.stroke()}})}},{}],36:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers,n=t.defaults.global;t.defaults.global.elements.line={tension:.4,backgroundColor:n.defaultColor,borderWidth:3,borderColor:n.defaultColor,borderCapStyle:"butt",borderDash:[],borderDashOffset:0,borderJoinStyle:"miter",capBezierPoints:!0,fill:!0},t.elements.Line=t.Element.extend({draw:function(){var t,i,r,o,a=this,s=a._view,l=a._chart.ctx,u=s.spanGaps,c=a._children.slice(),d=n.elements.line,h=-1;for(a._loop&&c.length&&c.push(c[0]),l.save(),l.lineCap=s.borderCapStyle||d.borderCapStyle,l.setLineDash&&l.setLineDash(s.borderDash||d.borderDash),l.lineDashOffset=s.borderDashOffset||d.borderDashOffset,l.lineJoin=s.borderJoinStyle||d.borderJoinStyle,l.lineWidth=s.borderWidth||d.borderWidth,l.strokeStyle=s.borderColor||n.defaultColor,l.beginPath(),h=-1,t=0;t<c.length;++t)i=c[t],r=e.previousItem(c,t),o=i._view,0===t?o.skip||(l.moveTo(o.x,o.y),h=t):(r=h===-1?r:c[h],o.skip||(h!==t-1&&!u||h===-1?l.moveTo(o.x,o.y):e.canvas.lineTo(l,r._view,i._view),h=t));l.stroke(),l.restore()}})}},{}],37:[function(t,e,n){"use strict";e.exports=function(t){function e(t){var e=this._view;return!!e&&Math.pow(t-e.x,2)<Math.pow(e.radius+e.hitRadius,2)}function n(t){var e=this._view;return!!e&&Math.pow(t-e.y,2)<Math.pow(e.radius+e.hitRadius,2)}var i=t.helpers,r=t.defaults.global,o=r.defaultColor;r.elements.point={radius:3,pointStyle:"circle",backgroundColor:o,borderWidth:1,borderColor:o,hitRadius:1,hoverRadius:4,hoverBorderWidth:1},t.elements.Point=t.Element.extend({inRange:function(t,e){var n=this._view;return!!n&&Math.pow(t-n.x,2)+Math.pow(e-n.y,2)<Math.pow(n.hitRadius+n.radius,2)},inLabelRange:e,inXRange:e,inYRange:n,getCenterPoint:function(){var t=this._view;return{x:t.x,y:t.y}},getArea:function(){return Math.PI*Math.pow(this._view.radius,2)},tooltipPosition:function(){var t=this._view;return{x:t.x,y:t.y,padding:t.radius+t.borderWidth}},draw:function(e){var n=this._view,a=this._model,s=this._chart.ctx,l=n.pointStyle,u=n.radius,c=n.x,d=n.y,h=t.helpers.color,f=1.01,p=0;n.skip||(s.strokeStyle=n.borderColor||o,s.lineWidth=i.getValueOrDefault(n.borderWidth,r.elements.point.borderWidth),s.fillStyle=n.backgroundColor||o,void 0!==e&&(a.x<e.left||e.right*f<a.x||a.y<e.top||e.bottom*f<a.y)&&(a.x<e.left?p=(c-a.x)/(e.left-a.x):e.right*f<a.x?p=(a.x-c)/(a.x-e.right):a.y<e.top?p=(d-a.y)/(e.top-a.y):e.bottom*f<a.y&&(p=(a.y-d)/(a.y-e.bottom)),p=Math.round(100*p)/100,s.strokeStyle=h(s.strokeStyle).alpha(p).rgbString(),s.fillStyle=h(s.fillStyle).alpha(p).rgbString()),t.canvasHelpers.drawPoint(s,l,u,c,d))}})}},{}],38:[function(t,e,n){"use strict";e.exports=function(t){function e(t){return void 0!==t._view.width}function n(t){var n,i,r,o,a=t._view;if(e(t)){var s=a.width/2;n=a.x-s,i=a.x+s,r=Math.min(a.y,a.base),o=Math.max(a.y,a.base)}else{var l=a.height/2;n=Math.min(a.x,a.base),i=Math.max(a.x,a.base),r=a.y-l,o=a.y+l}return{left:n,top:r,right:i,bottom:o}}var i=t.defaults.global;i.elements.rectangle={backgroundColor:i.defaultColor,borderWidth:0,borderColor:i.defaultColor,borderSkipped:"bottom"},t.elements.Rectangle=t.Element.extend({draw:function(){function t(t){return v[(b+t)%4]}var e,n,i,r,o,a,s,l=this._chart.ctx,u=this._view,c=u.borderWidth;if(u.horizontal?(e=u.base,n=u.x,i=u.y-u.height/2,r=u.y+u.height/2,o=n>e?1:-1,a=1,s=u.borderSkipped||"left"):(e=u.x-u.width/2,n=u.x+u.width/2,i=u.y,r=u.base,o=1,a=r>i?1:-1,s=u.borderSkipped||"bottom"),c){var d=Math.min(Math.abs(e-n),Math.abs(i-r));c=c>d?d:c;var h=c/2,f=e+("left"!==s?h*o:0),p=n+("right"!==s?-h*o:0),g=i+("top"!==s?h*a:0),m=r+("bottom"!==s?-h*a:0);f!==p&&(i=g,r=m),g!==m&&(e=f,n=p)}l.beginPath(),l.fillStyle=u.backgroundColor,l.strokeStyle=u.borderColor,l.lineWidth=c;var v=[[e,r],[e,i],[n,i],[n,r]],y=["bottom","left","top","right"],b=y.indexOf(s,0);b===-1&&(b=0);var x=t(0);l.moveTo(x[0],x[1]);for(var _=1;_<4;_++)x=t(_),l.lineTo(x[0],x[1]);l.fill(),c&&l.stroke()},height:function(){var t=this._view;return t.base-t.y},inRange:function(t,e){var i=!1;if(this._view){var r=n(this);i=t>=r.left&&t<=r.right&&e>=r.top&&e<=r.bottom}return i},inLabelRange:function(t,i){var r=this;if(!r._view)return!1;var o=!1,a=n(r);return o=e(r)?t>=a.left&&t<=a.right:i>=a.top&&i<=a.bottom},inXRange:function(t){var e=n(this);return t>=e.left&&t<=e.right},inYRange:function(t){var e=n(this);return t>=e.top&&t<=e.bottom},getCenterPoint:function(){var t,n,i=this._view;return e(this)?(t=i.x,n=(i.y+i.base)/2):(t=(i.x+i.base)/2,n=i.y),{x:t,y:n}},getArea:function(){var t=this._view;return t.width*Math.abs(t.y-t.base)},tooltipPosition:function(){var t=this._view;return{x:t.x,y:t.y}}})}},{}],39:[function(t,e,n){"use strict";e.exports=function(t){function e(t,e){var n=l.getStyle(t,e),i=n&&n.match(/^(\d+)(\.\d+)?px$/);return i?Number(i[1]):void 0}function n(t,n){var i=t.style,r=t.getAttribute("height"),o=t.getAttribute("width");if(t._chartjs={initial:{height:r,width:o,style:{display:i.display,height:i.height,width:i.width}}},i.display=i.display||"block",null===o||""===o){var a=e(t,"width");void 0!==a&&(t.width=a)}if(null===r||""===r)if(""===t.style.height)t.height=t.width/(n.options.aspectRatio||2);else{var s=e(t,"height");void 0!==a&&(t.height=s)}return t}function i(t,e,n,i,r){return{type:t,chart:e,"native":r||null,x:void 0!==n?n:null,y:void 0!==i?i:null}}function r(t,e){var n=u[t.type]||t.type,r=l.getRelativePosition(t,e);return i(n,e,r.x,r.y,t)}function o(t){var e=document.createElement("iframe");return e.className="chartjs-hidden-iframe",e.style.cssText="display:block;overflow:hidden;border:0;margin:0;top:0;left:0;bottom:0;right:0;height:100%;width:100%;position:absolute;pointer-events:none;z-index:-1;",e.tabIndex=-1,l.addEvent(e,"load",function(){l.addEvent(e.contentWindow||e,"resize",t),t()}),e}function a(t,e,n){var r=t._chartjs={ticking:!1},a=function(){r.ticking||(r.ticking=!0,l.requestAnimFrame.call(window,function(){if(r.resizer)return r.ticking=!1,e(i("resize",n))}))};r.resizer=o(a),t.insertBefore(r.resizer,t.firstChild)}function s(t){if(t&&t._chartjs){var e=t._chartjs.resizer;e&&(e.parentNode.removeChild(e),t._chartjs.resizer=null),delete t._chartjs}}var l=t.helpers,u={touchstart:"mousedown",touchmove:"mousemove",touchend:"mouseup",pointerenter:"mouseenter",pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointerleave:"mouseout",pointerout:"mouseout"};return{acquireContext:function(t,e){"string"==typeof t?t=document.getElementById(t):t.length&&(t=t[0]),t&&t.canvas&&(t=t.canvas);var i=t&&t.getContext&&t.getContext("2d");return i&&i.canvas===t?(n(t,e),i):null},releaseContext:function(t){var e=t.canvas;if(e._chartjs){var n=e._chartjs.initial;["height","width"].forEach(function(t){var i=n[t];void 0===i||null===i?e.removeAttribute(t):e.setAttribute(t,i)}),l.each(n.style||{},function(t,n){e.style[n]=t}),e.width=e.width,delete e._chartjs}},addEventListener:function(t,e,n){var i=t.canvas;if("resize"===e)return void a(i.parentNode,n,t);var o=n._chartjs||(n._chartjs={}),s=o.proxies||(o.proxies={}),u=s[t.id+"_"+e]=function(e){n(r(e,t))};l.addEvent(i,e,u)},removeEventListener:function(t,e,n){var i=t.canvas;if("resize"===e)return void s(i.parentNode,n);var r=n._chartjs||{},o=r.proxies||{},a=o[t.id+"_"+e];a&&l.removeEvent(i,e,a)}}}},{}],40:[function(t,e,n){"use strict";var i=t(39);e.exports=function(t){t.platform={acquireContext:function(){},releaseContext:function(){},addEventListener:function(){},removeEventListener:function(){}},t.helpers.extend(t.platform,i(t))}},{39:39}],41:[function(t,e,n){"use strict";e.exports=function(t){function e(t,e,n){var i,r=t._model||{},o=r.fill;if(void 0===o&&(o=!!r.backgroundColor),o===!1||null===o)return!1;if(o===!0)return"origin";if(i=parseFloat(o,10),isFinite(i)&&Math.floor(i)===i)return"-"!==o[0]&&"+"!==o[0]||(i=e+i),!(i===e||i<0||i>=n)&&i;switch(o){case"bottom":return"start";case"top":return"end";case"zero":return"origin";case"origin":case"start":case"end":return o;default:return!1}}function n(t){var e,n=t.el._model||{},i=t.el._scale||{},r=t.fill,o=null;if(isFinite(r))return null;if("start"===r?o=void 0===n.scaleBottom?i.bottom:n.scaleBottom:"end"===r?o=void 0===n.scaleTop?i.top:n.scaleTop:void 0!==n.scaleZero?o=n.scaleZero:i.getBasePosition?o=i.getBasePosition():i.getBasePixel&&(o=i.getBasePixel()),void 0!==o&&null!==o){if(void 0!==o.x&&void 0!==o.y)return o;if("number"==typeof o&&isFinite(o))return e=i.isHorizontal(),{x:e?o:null,y:e?null:o}}return null}function i(t,e,n){var i,r=t[e],o=r.fill,a=[e];if(!n)return o;for(;o!==!1&&a.indexOf(o)===-1;){if(!isFinite(o))return o;if(i=t[o],!i)return!1;if(i.visible)return o;a.push(o),o=i.fill}return!1}function r(t){var e=t.fill,n="dataset";return e===!1?null:(isFinite(e)||(n="boundary"),c[n](t))}function o(t){return t&&!t.skip}function a(t,e,n,i,r){var o;if(i&&r){for(t.moveTo(e[0].x,e[0].y),o=1;o<i;++o)u.canvas.lineTo(t,e[o-1],e[o]);for(t.lineTo(n[r-1].x,n[r-1].y),o=r-1;o>0;--o)u.canvas.lineTo(t,n[o],n[o-1],!0)}}function s(t,e,n,i,r,s){var l,u,c,d,h,f,p,g=e.length,m=i.spanGaps,v=[],y=[],b=0,x=0;for(t.beginPath(),l=0,u=g+!!s;l<u;++l)c=l%g,d=e[c]._view,h=n(d,c,i),f=o(d),p=o(h),f&&p?(b=v.push(d),x=y.push(h)):b&&x&&(m?(f&&v.push(d),p&&y.push(h)):(a(t,v,y,b,x),b=x=0,v=[],y=[]));a(t,v,y,b,x),t.closePath(),t.fillStyle=r,t.fill()}t.defaults.global.plugins.filler={propagate:!0};var l=t.defaults,u=t.helpers,c={dataset:function(t){var e=t.fill,n=t.chart,i=n.getDatasetMeta(e),r=i&&n.isDatasetVisible(e),o=r&&i.dataset._children||[];return o.length?function(t,e){return o[e]._view||null}:null},boundary:function(t){var e=t.boundary,n=e?e.x:null,i=e?e.y:null;return function(t){return{x:null===n?t.x:n,y:null===i?t.y:i}}}};return{id:"filler",afterDatasetsUpdate:function(o,a){var s,l,u,c,d=(o.data.datasets||[]).length,h=a.propagate,f=[];for(l=0;l<d;++l)s=o.getDatasetMeta(l),u=s.dataset,c=null,u&&u._model&&u instanceof t.elements.Line&&(c={visible:o.isDatasetVisible(l),fill:e(u,l,d),chart:o,el:u}),s.$filler=c,f.push(c);for(l=0;l<d;++l)c=f[l],c&&(c.fill=i(f,l,h),c.boundary=n(c),c.mapper=r(c))},beforeDatasetDraw:function(t,e){var n=e.meta.$filler;if(n){var i=n.el,r=i._view,o=i._children||[],a=n.mapper,u=r.backgroundColor||l.global.defaultColor;a&&u&&o.length&&s(t.ctx,o,a,r,u,i._loop)}}}}},{}],42:[function(t,e,n){"use strict";e.exports=function(t){function e(t,e){return t.usePointStyle?e*Math.SQRT2:t.boxWidth}function n(e,n){var i=new t.Legend({ctx:e.ctx,options:n,chart:e});r.configure(e,i,n),r.addBox(e,i),e.legend=i}var i=t.helpers,r=t.layoutService,o=i.noop;return t.defaults.global.legend={display:!0,position:"top",fullWidth:!0,reverse:!1,weight:1e3,onClick:function(t,e){var n=e.datasetIndex,i=this.chart,r=i.getDatasetMeta(n);r.hidden=null===r.hidden?!i.data.datasets[n].hidden:null,i.update()},onHover:null,labels:{boxWidth:40,padding:10,generateLabels:function(t){var e=t.data;return i.isArray(e.datasets)?e.datasets.map(function(e,n){return{text:e.label,fillStyle:i.isArray(e.backgroundColor)?e.backgroundColor[0]:e.backgroundColor,hidden:!t.isDatasetVisible(n),lineCap:e.borderCapStyle,lineDash:e.borderDash,lineDashOffset:e.borderDashOffset,lineJoin:e.borderJoinStyle,lineWidth:e.borderWidth,strokeStyle:e.borderColor,pointStyle:e.pointStyle,datasetIndex:n}},this):[]}}},t.Legend=t.Element.extend({initialize:function(t){i.extend(this,t),this.legendHitBoxes=[],this.doughnutMode=!1},beforeUpdate:o,update:function(t,e,n){var i=this;return i.beforeUpdate(),i.maxWidth=t,i.maxHeight=e,i.margins=n,i.beforeSetDimensions(),i.setDimensions(),i.afterSetDimensions(),i.beforeBuildLabels(),i.buildLabels(),i.afterBuildLabels(),i.beforeFit(),i.fit(),i.afterFit(),i.afterUpdate(),i.minSize},afterUpdate:o,beforeSetDimensions:o,setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0,t.minSize={width:0,height:0}},afterSetDimensions:o,beforeBuildLabels:o,buildLabels:function(){var t=this,e=t.options.labels,n=e.generateLabels.call(t,t.chart);e.filter&&(n=n.filter(function(n){return e.filter(n,t.chart.data)})),t.options.reverse&&n.reverse(),t.legendItems=n},afterBuildLabels:o,beforeFit:o,fit:function(){var n=this,r=n.options,o=r.labels,a=r.display,s=n.ctx,l=t.defaults.global,u=i.getValueOrDefault,c=u(o.fontSize,l.defaultFontSize),d=u(o.fontStyle,l.defaultFontStyle),h=u(o.fontFamily,l.defaultFontFamily),f=i.fontString(c,d,h),p=n.legendHitBoxes=[],g=n.minSize,m=n.isHorizontal();if(m?(g.width=n.maxWidth,g.height=a?10:0):(g.width=a?10:0,g.height=n.maxHeight),a)if(s.font=f,m){var v=n.lineWidths=[0],y=n.legendItems.length?c+o.padding:0;s.textAlign="left",s.textBaseline="top",i.each(n.legendItems,function(t,i){var r=e(o,c),a=r+c/2+s.measureText(t.text).width;v[v.length-1]+a+o.padding>=n.width&&(y+=c+o.padding,v[v.length]=n.left),p[i]={left:0,top:0,width:a,height:c},v[v.length-1]+=a+o.padding}),g.height+=y}else{var b=o.padding,x=n.columnWidths=[],_=o.padding,w=0,k=0,S=c+b;i.each(n.legendItems,function(t,n){var i=e(o,c),r=i+c/2+s.measureText(t.text).width;k+S>g.height&&(_+=w+o.padding,x.push(w),w=0,k=0),w=Math.max(w,r),k+=S,p[n]={left:0,top:0,width:r,height:c}}),_+=w,x.push(w),g.width+=_}n.width=g.width,n.height=g.height},afterFit:o,isHorizontal:function(){return"top"===this.options.position||"bottom"===this.options.position},draw:function(){var n=this,r=n.options,o=r.labels,a=t.defaults.global,s=a.elements.line,l=n.width,u=n.lineWidths;if(r.display){var c,d=n.ctx,h=i.getValueOrDefault,f=h(o.fontColor,a.defaultFontColor),p=h(o.fontSize,a.defaultFontSize),g=h(o.fontStyle,a.defaultFontStyle),m=h(o.fontFamily,a.defaultFontFamily),v=i.fontString(p,g,m);d.textAlign="left",d.textBaseline="top",d.lineWidth=.5,d.strokeStyle=f,d.fillStyle=f,d.font=v;var y=e(o,p),b=n.legendHitBoxes,x=function(e,n,i){if(!(isNaN(y)||y<=0)){d.save(),d.fillStyle=h(i.fillStyle,a.defaultColor),d.lineCap=h(i.lineCap,s.borderCapStyle),d.lineDashOffset=h(i.lineDashOffset,s.borderDashOffset),d.lineJoin=h(i.lineJoin,s.borderJoinStyle),d.lineWidth=h(i.lineWidth,s.borderWidth),d.strokeStyle=h(i.strokeStyle,a.defaultColor);var o=0===h(i.lineWidth,s.borderWidth);if(d.setLineDash&&d.setLineDash(h(i.lineDash,s.borderDash)),r.labels&&r.labels.usePointStyle){var l=p*Math.SQRT2/2,u=l/Math.SQRT2,c=e+u,f=n+u;t.canvasHelpers.drawPoint(d,i.pointStyle,l,c,f)}else o||d.strokeRect(e,n,y,p),d.fillRect(e,n,y,p);d.restore()}},_=function(t,e,n,i){d.fillText(n.text,y+p/2+t,e),n.hidden&&(d.beginPath(),d.lineWidth=2,d.moveTo(y+p/2+t,e+p/2),d.lineTo(y+p/2+t+i,e+p/2),d.stroke())},w=n.isHorizontal();c=w?{x:n.left+(l-u[0])/2,y:n.top+o.padding,line:0}:{x:n.left+o.padding,y:n.top+o.padding,line:0};var k=p+o.padding;i.each(n.legendItems,function(t,e){var i=d.measureText(t.text).width,r=y+p/2+i,a=c.x,s=c.y;w?a+r>=l&&(s=c.y+=k,c.line++,a=c.x=n.left+(l-u[c.line])/2):s+k>n.bottom&&(a=c.x=a+n.columnWidths[c.line]+o.padding,s=c.y=n.top+o.padding,c.line++),x(a,s,t),b[e].left=a,b[e].top=s,_(a,s,t,i),w?c.x+=r+o.padding:c.y+=k})}},handleEvent:function(t){var e=this,n=e.options,i="mouseup"===t.type?"click":t.type,r=!1;if("mousemove"===i){if(!n.onHover)return}else{if("click"!==i)return;if(!n.onClick)return}var o=t.x,a=t.y;if(o>=e.left&&o<=e.right&&a>=e.top&&a<=e.bottom)for(var s=e.legendHitBoxes,l=0;l<s.length;++l){var u=s[l];if(o>=u.left&&o<=u.left+u.width&&a>=u.top&&a<=u.top+u.height){if("click"===i){n.onClick.call(e,t["native"],e.legendItems[l]),r=!0;break}if("mousemove"===i){n.onHover.call(e,t["native"],e.legendItems[l]),r=!0;break}}}return r}}),{id:"legend",beforeInit:function(t){var e=t.options.legend;e&&n(t,e)},beforeUpdate:function(e){var o=e.options.legend,a=e.legend;o?(o=i.configMerge(t.defaults.global.legend,o),a?(r.configure(e,a,o),a.options=o):n(e,o)):a&&(r.removeBox(e,a),delete e.legend)},afterEvent:function(t,e){var n=t.legend;n&&n.handleEvent(e)}}}},{}],43:[function(t,e,n){"use strict";e.exports=function(t){function e(e,n){var r=new t.Title({ctx:e.ctx,options:n,chart:e});i.configure(e,r,n),i.addBox(e,r),e.titleBlock=r}var n=t.helpers,i=t.layoutService,r=n.noop;return t.defaults.global.title={display:!1,position:"top",fullWidth:!0,weight:2e3,fontStyle:"bold",padding:10,text:""},t.Title=t.Element.extend({initialize:function(t){var e=this;n.extend(e,t),e.legendHitBoxes=[]},beforeUpdate:r,update:function(t,e,n){var i=this;return i.beforeUpdate(),i.maxWidth=t,i.maxHeight=e,i.margins=n,i.beforeSetDimensions(),i.setDimensions(),i.afterSetDimensions(),i.beforeBuildLabels(),i.buildLabels(),i.afterBuildLabels(),i.beforeFit(),i.fit(),i.afterFit(),i.afterUpdate(),i.minSize},afterUpdate:r,beforeSetDimensions:r,setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0,t.minSize={width:0,height:0}},afterSetDimensions:r,beforeBuildLabels:r,buildLabels:r,afterBuildLabels:r,beforeFit:r,fit:function(){var e=this,i=n.getValueOrDefault,r=e.options,o=t.defaults.global,a=r.display,s=i(r.fontSize,o.defaultFontSize),l=e.minSize;e.isHorizontal()?(l.width=e.maxWidth,l.height=a?s+2*r.padding:0):(l.width=a?s+2*r.padding:0,l.height=e.maxHeight),e.width=l.width,e.height=l.height},afterFit:r,isHorizontal:function(){var t=this.options.position;return"top"===t||"bottom"===t},draw:function(){var e=this,i=e.ctx,r=n.getValueOrDefault,o=e.options,a=t.defaults.global;if(o.display){var s,l,u,c=r(o.fontSize,a.defaultFontSize),d=r(o.fontStyle,a.defaultFontStyle),h=r(o.fontFamily,a.defaultFontFamily),f=n.fontString(c,d,h),p=0,g=e.top,m=e.left,v=e.bottom,y=e.right;i.fillStyle=r(o.fontColor,a.defaultFontColor),i.font=f,e.isHorizontal()?(s=m+(y-m)/2,l=g+(v-g)/2,u=y-m):(s="left"===o.position?m+c/2:y-c/2,l=g+(v-g)/2,u=v-g,p=Math.PI*("left"===o.position?-.5:.5)),i.save(),i.translate(s,l),i.rotate(p),i.textAlign="center",i.textBaseline="middle",i.fillText(o.text,0,0,u),i.restore()}}}),{id:"title",beforeInit:function(t){var n=t.options.title;n&&e(t,n)},beforeUpdate:function(r){var o=r.options.title,a=r.titleBlock;o?(o=n.configMerge(t.defaults.global.title,o),a?(i.configure(r,a,o),a.options=o):e(r,o)):a&&(t.layoutService.removeBox(r,a),delete r.titleBlock)}}}},{}],44:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers,n={position:"bottom"},i=t.Scale.extend({getLabels:function(){var t=this.chart.data;return(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels},determineDataLimits:function(){var t=this,n=t.getLabels();t.minIndex=0,t.maxIndex=n.length-1;var i;void 0!==t.options.ticks.min&&(i=e.indexOf(n,t.options.ticks.min),t.minIndex=i!==-1?i:t.minIndex),void 0!==t.options.ticks.max&&(i=e.indexOf(n,t.options.ticks.max),t.maxIndex=i!==-1?i:t.maxIndex),t.min=n[t.minIndex],t.max=n[t.maxIndex]},buildTicks:function(){var t=this,e=t.getLabels();t.ticks=0===t.minIndex&&t.maxIndex===e.length-1?e:e.slice(t.minIndex,t.maxIndex+1)},getLabelForIndex:function(t,e){var n=this,i=n.chart.data,r=n.isHorizontal();return i.yLabels&&!r?n.getRightValue(i.datasets[e].data[t]):n.ticks[t-n.minIndex]},getPixelForValue:function(t,e,n,i){var r,o=this,a=Math.max(o.maxIndex+1-o.minIndex-(o.options.gridLines.offsetGridLines?0:1),1);if(void 0!==t&&null!==t&&(r=o.isHorizontal()?t.x:t.y),void 0!==r||void 0!==t&&isNaN(e)){var s=o.getLabels();t=r||t;var l=s.indexOf(t);e=l!==-1?l:e}if(o.isHorizontal()){var u=o.width/a,c=u*(e-o.minIndex);return(o.options.gridLines.offsetGridLines&&i||o.maxIndex===o.minIndex&&i)&&(c+=u/2),o.left+Math.round(c)}var d=o.height/a,h=d*(e-o.minIndex);return o.options.gridLines.offsetGridLines&&i&&(h+=d/2),o.top+Math.round(h)},getPixelForTick:function(t,e){return this.getPixelForValue(this.ticks[t],t+this.minIndex,null,e)},getValueForPixel:function(t){var e,n=this,i=Math.max(n.ticks.length-(n.options.gridLines.offsetGridLines?0:1),1),r=n.isHorizontal(),o=(r?n.width:n.height)/i;return t-=r?n.left:n.top,n.options.gridLines.offsetGridLines&&(t-=o/2),e=t<=0?0:Math.round(t/o)},getBasePixel:function(){return this.bottom}});t.scaleService.registerScaleType("category",i,n)}},{}],45:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers,n={position:"left",ticks:{callback:t.Ticks.formatters.linear}},i=t.LinearScaleBase.extend({determineDataLimits:function(){function t(t){return s?t.xAxisID===n.id:t.yAxisID===n.id}var n=this,i=n.options,r=n.chart,o=r.data,a=o.datasets,s=n.isHorizontal(),l=0,u=1;n.min=null,n.max=null;var c=i.stacked;if(void 0===c&&e.each(a,function(e,n){if(!c){var i=r.getDatasetMeta(n);r.isDatasetVisible(n)&&t(i)&&void 0!==i.stack&&(c=!0)}}),i.stacked||c){var d={};e.each(a,function(o,a){var s=r.getDatasetMeta(a),l=[s.type,void 0===i.stacked&&void 0===s.stack?a:"",s.stack].join(".");void 0===d[l]&&(d[l]={positiveValues:[],negativeValues:[]});var u=d[l].positiveValues,c=d[l].negativeValues;r.isDatasetVisible(a)&&t(s)&&e.each(o.data,function(t,e){var r=+n.getRightValue(t);isNaN(r)||s.data[e].hidden||(u[e]=u[e]||0,c[e]=c[e]||0,i.relativePoints?u[e]=100:r<0?c[e]+=r:u[e]+=r)})}),e.each(d,function(t){var i=t.positiveValues.concat(t.negativeValues),r=e.min(i),o=e.max(i);n.min=null===n.min?r:Math.min(n.min,r),n.max=null===n.max?o:Math.max(n.max,o)})}else e.each(a,function(i,o){var a=r.getDatasetMeta(o);r.isDatasetVisible(o)&&t(a)&&e.each(i.data,function(t,e){var i=+n.getRightValue(t);isNaN(i)||a.data[e].hidden||(null===n.min?n.min=i:i<n.min&&(n.min=i),null===n.max?n.max=i:i>n.max&&(n.max=i))})});n.min=isFinite(n.min)?n.min:l,n.max=isFinite(n.max)?n.max:u,this.handleTickRangeOptions()},getTickLimit:function(){var n,i=this,r=i.options.ticks;if(i.isHorizontal())n=Math.min(r.maxTicksLimit?r.maxTicksLimit:11,Math.ceil(i.width/50));else{var o=e.getValueOrDefault(r.fontSize,t.defaults.global.defaultFontSize);n=Math.min(r.maxTicksLimit?r.maxTicksLimit:11,Math.ceil(i.height/(2*o)))}return n},handleDirectionalChanges:function(){this.isHorizontal()||this.ticks.reverse()},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},getPixelForValue:function(t){var e,n=this,i=n.start,r=+n.getRightValue(t),o=n.end-i;return n.isHorizontal()?(e=n.left+n.width/o*(r-i),Math.round(e)):(e=n.bottom-n.height/o*(r-i),Math.round(e))},getValueForPixel:function(t){var e=this,n=e.isHorizontal(),i=n?e.width:e.height,r=(n?t-e.left:e.bottom-t)/i;return e.start+(e.end-e.start)*r},getPixelForTick:function(t){return this.getPixelForValue(this.ticksAsNumbers[t])}});t.scaleService.registerScaleType("linear",i,n)}},{}],46:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers,n=e.noop;t.LinearScaleBase=t.Scale.extend({handleTickRangeOptions:function(){var t=this,n=t.options,i=n.ticks;if(i.beginAtZero){var r=e.sign(t.min),o=e.sign(t.max);r<0&&o<0?t.max=0:r>0&&o>0&&(t.min=0)}void 0!==i.min?t.min=i.min:void 0!==i.suggestedMin&&(null===t.min?t.min=i.suggestedMin:t.min=Math.min(t.min,i.suggestedMin)),void 0!==i.max?t.max=i.max:void 0!==i.suggestedMax&&(null===t.max?t.max=i.suggestedMax:t.max=Math.max(t.max,i.suggestedMax)),t.min===t.max&&(t.max++,i.beginAtZero||t.min--)},getTickLimit:n,handleDirectionalChanges:n,buildTicks:function(){var n=this,i=n.options,r=i.ticks,o=n.getTickLimit();o=Math.max(2,o);var a={maxTicks:o,min:r.min,max:r.max,stepSize:e.getValueOrDefault(r.fixedStepSize,r.stepSize)},s=n.ticks=t.Ticks.generators.linear(a,n);n.handleDirectionalChanges(),n.max=e.max(s),n.min=e.min(s),r.reverse?(s.reverse(),n.start=n.max,n.end=n.min):(n.start=n.min,n.end=n.max)},convertTicksToLabels:function(){var e=this;e.ticksAsNumbers=e.ticks.slice(),e.zeroLineIndex=e.ticks.indexOf(0),t.Scale.prototype.convertTicksToLabels.call(e)}})}},{}],47:[function(t,e,n){"use strict";e.exports=function(t){var e=t.helpers,n={position:"left",ticks:{callback:t.Ticks.formatters.logarithmic}},i=t.Scale.extend({determineDataLimits:function(){function t(t){return u?t.xAxisID===n.id:t.yAxisID===n.id}var n=this,i=n.options,r=i.ticks,o=n.chart,a=o.data,s=a.datasets,l=e.getValueOrDefault,u=n.isHorizontal();n.min=null,n.max=null,n.minNotZero=null;var c=i.stacked;if(void 0===c&&e.each(s,function(e,n){if(!c){var i=o.getDatasetMeta(n);o.isDatasetVisible(n)&&t(i)&&void 0!==i.stack&&(c=!0)}}),i.stacked||c){var d={};e.each(s,function(r,a){var s=o.getDatasetMeta(a),l=[s.type,void 0===i.stacked&&void 0===s.stack?a:"",s.stack].join(".");o.isDatasetVisible(a)&&t(s)&&(void 0===d[l]&&(d[l]=[]),e.each(r.data,function(t,e){
var r=d[l],o=+n.getRightValue(t);isNaN(o)||s.data[e].hidden||(r[e]=r[e]||0,i.relativePoints?r[e]=100:r[e]+=o)}))}),e.each(d,function(t){var i=e.min(t),r=e.max(t);n.min=null===n.min?i:Math.min(n.min,i),n.max=null===n.max?r:Math.max(n.max,r)})}else e.each(s,function(i,r){var a=o.getDatasetMeta(r);o.isDatasetVisible(r)&&t(a)&&e.each(i.data,function(t,e){var i=+n.getRightValue(t);isNaN(i)||a.data[e].hidden||(null===n.min?n.min=i:i<n.min&&(n.min=i),null===n.max?n.max=i:i>n.max&&(n.max=i),0!==i&&(null===n.minNotZero||i<n.minNotZero)&&(n.minNotZero=i))})});n.min=l(r.min,n.min),n.max=l(r.max,n.max),n.min===n.max&&(0!==n.min&&null!==n.min?(n.min=Math.pow(10,Math.floor(e.log10(n.min))-1),n.max=Math.pow(10,Math.floor(e.log10(n.max))+1)):(n.min=1,n.max=10))},buildTicks:function(){var n=this,i=n.options,r=i.ticks,o={min:r.min,max:r.max},a=n.ticks=t.Ticks.generators.logarithmic(o,n);n.isHorizontal()||a.reverse(),n.max=e.max(a),n.min=e.min(a),r.reverse?(a.reverse(),n.start=n.max,n.end=n.min):(n.start=n.min,n.end=n.max)},convertTicksToLabels:function(){this.tickValues=this.ticks.slice(),t.Scale.prototype.convertTicksToLabels.call(this)},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},getPixelForTick:function(t){return this.getPixelForValue(this.tickValues[t])},getPixelForValue:function(t){var n,i,r,o=this,a=o.start,s=+o.getRightValue(t),l=o.options,u=l.ticks;return o.isHorizontal()?(r=e.log10(o.end)-e.log10(a),0===s?i=o.left:(n=o.width,i=o.left+n/r*(e.log10(s)-e.log10(a)))):(n=o.height,0!==a||u.reverse?0===o.end&&u.reverse?(r=e.log10(o.start)-e.log10(o.minNotZero),i=s===o.end?o.top:s===o.minNotZero?o.top+.02*n:o.top+.02*n+.98*n/r*(e.log10(s)-e.log10(o.minNotZero))):0===s?i=u.reverse?o.top:o.bottom:(r=e.log10(o.end)-e.log10(a),n=o.height,i=o.bottom-n/r*(e.log10(s)-e.log10(a))):(r=e.log10(o.end)-e.log10(o.minNotZero),i=s===a?o.bottom:s===o.minNotZero?o.bottom-.02*n:o.bottom-.02*n-.98*n/r*(e.log10(s)-e.log10(o.minNotZero)))),i},getValueForPixel:function(t){var n,i,r=this,o=e.log10(r.end)-e.log10(r.start);return r.isHorizontal()?(i=r.width,n=r.start*Math.pow(10,(t-r.left)*o/i)):(i=r.height,n=Math.pow(10,(r.bottom-t)*o/i)/r.start),n}});t.scaleService.registerScaleType("logarithmic",i,n)}},{}],48:[function(t,e,n){"use strict";e.exports=function(t){function e(t){var e=t.options;return e.angleLines.display||e.pointLabels.display?t.chart.data.labels.length:0}function n(t){var e=t.options.pointLabels,n=f.getValueOrDefault(e.fontSize,p.defaultFontSize),i=f.getValueOrDefault(e.fontStyle,p.defaultFontStyle),r=f.getValueOrDefault(e.fontFamily,p.defaultFontFamily),o=f.fontString(n,i,r);return{size:n,style:i,family:r,font:o}}function i(t,e,n){return f.isArray(n)?{w:f.longestText(t,t.font,n),h:n.length*e+1.5*(n.length-1)*e}:{w:t.measureText(n).width,h:e}}function r(t,e,n,i,r){return t===i||t===r?{start:e-n/2,end:e+n/2}:t<i||t>r?{start:e-n-5,end:e}:{start:e,end:e+n+5}}function o(t){var o,a,s,l=n(t),u=Math.min(t.height/2,t.width/2),c={r:t.width,l:0,t:t.height,b:0},d={};t.ctx.font=l.font,t._pointLabelSizes=[];var h=e(t);for(o=0;o<h;o++){s=t.getPointPosition(o,u),a=i(t.ctx,l.size,t.pointLabels[o]||""),t._pointLabelSizes[o]=a;var p=t.getIndexAngle(o),g=f.toDegrees(p)%360,m=r(g,s.x,a.w,0,180),v=r(g,s.y,a.h,90,270);m.start<c.l&&(c.l=m.start,d.l=p),m.end>c.r&&(c.r=m.end,d.r=p),v.start<c.t&&(c.t=v.start,d.t=p),v.end>c.b&&(c.b=v.end,d.b=p)}t.setReductions(u,c,d)}function a(t){var e=Math.min(t.height/2,t.width/2);t.drawingArea=Math.round(e),t.setCenterPoint(0,0,0,0)}function s(t){return 0===t||180===t?"center":t<180?"left":"right"}function l(t,e,n,i){if(f.isArray(e))for(var r=n.y,o=1.5*i,a=0;a<e.length;++a)t.fillText(e[a],n.x,r),r+=o;else t.fillText(e,n.x,n.y)}function u(t,e,n){90===t||270===t?n.y-=e.h/2:(t>270||t<90)&&(n.y-=e.h)}function c(t){var i=t.ctx,r=f.getValueOrDefault,o=t.options,a=o.angleLines,c=o.pointLabels;i.lineWidth=a.lineWidth,i.strokeStyle=a.color;var d=t.getDistanceFromCenterForValue(o.reverse?t.min:t.max),h=n(t);i.textBaseline="top";for(var g=e(t)-1;g>=0;g--){if(a.display){var m=t.getPointPosition(g,d);i.beginPath(),i.moveTo(t.xCenter,t.yCenter),i.lineTo(m.x,m.y),i.stroke(),i.closePath()}if(c.display){var v=t.getPointPosition(g,d+5),y=r(c.fontColor,p.defaultFontColor);i.font=h.font,i.fillStyle=y;var b=t.getIndexAngle(g),x=f.toDegrees(b);i.textAlign=s(x),u(x,t._pointLabelSizes[g],v),l(i,t.pointLabels[g]||"",v,h.size)}}}function d(t,n,i,r){var o=t.ctx;if(o.strokeStyle=f.getValueAtIndexOrDefault(n.color,r-1),o.lineWidth=f.getValueAtIndexOrDefault(n.lineWidth,r-1),t.options.gridLines.circular)o.beginPath(),o.arc(t.xCenter,t.yCenter,i,0,2*Math.PI),o.closePath(),o.stroke();else{var a=e(t);if(0===a)return;o.beginPath();var s=t.getPointPosition(0,i);o.moveTo(s.x,s.y);for(var l=1;l<a;l++)s=t.getPointPosition(l,i),o.lineTo(s.x,s.y);o.closePath(),o.stroke()}}function h(t){return f.isNumber(t)?t:0}var f=t.helpers,p=t.defaults.global,g={display:!0,animate:!0,position:"chartArea",angleLines:{display:!0,color:"rgba(0, 0, 0, 0.1)",lineWidth:1},gridLines:{circular:!1},ticks:{showLabelBackdrop:!0,backdropColor:"rgba(255,255,255,0.75)",backdropPaddingY:2,backdropPaddingX:2,callback:t.Ticks.formatters.linear},pointLabels:{display:!0,fontSize:10,callback:function(t){return t}}},m=t.LinearScaleBase.extend({setDimensions:function(){var t=this,e=t.options,n=e.ticks;t.width=t.maxWidth,t.height=t.maxHeight,t.xCenter=Math.round(t.width/2),t.yCenter=Math.round(t.height/2);var i=f.min([t.height,t.width]),r=f.getValueOrDefault(n.fontSize,p.defaultFontSize);t.drawingArea=e.display?i/2-(r/2+n.backdropPaddingY):i/2},determineDataLimits:function(){var t=this,e=t.chart,n=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;f.each(e.data.datasets,function(r,o){if(e.isDatasetVisible(o)){var a=e.getDatasetMeta(o);f.each(r.data,function(e,r){var o=+t.getRightValue(e);isNaN(o)||a.data[r].hidden||(n=Math.min(o,n),i=Math.max(o,i))})}}),t.min=n===Number.POSITIVE_INFINITY?0:n,t.max=i===Number.NEGATIVE_INFINITY?0:i,t.handleTickRangeOptions()},getTickLimit:function(){var t=this.options.ticks,e=f.getValueOrDefault(t.fontSize,p.defaultFontSize);return Math.min(t.maxTicksLimit?t.maxTicksLimit:11,Math.ceil(this.drawingArea/(1.5*e)))},convertTicksToLabels:function(){var e=this;t.LinearScaleBase.prototype.convertTicksToLabels.call(e),e.pointLabels=e.chart.data.labels.map(e.options.pointLabels.callback,e)},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},fit:function(){this.options.pointLabels.display?o(this):a(this)},setReductions:function(t,e,n){var i=this,r=e.l/Math.sin(n.l),o=Math.max(e.r-i.width,0)/Math.sin(n.r),a=-e.t/Math.cos(n.t),s=-Math.max(e.b-i.height,0)/Math.cos(n.b);r=h(r),o=h(o),a=h(a),s=h(s),i.drawingArea=Math.min(Math.round(t-(r+o)/2),Math.round(t-(a+s)/2)),i.setCenterPoint(r,o,a,s)},setCenterPoint:function(t,e,n,i){var r=this,o=r.width-e-r.drawingArea,a=t+r.drawingArea,s=n+r.drawingArea,l=r.height-i-r.drawingArea;r.xCenter=Math.round((a+o)/2+r.left),r.yCenter=Math.round((s+l)/2+r.top)},getIndexAngle:function(t){var n=2*Math.PI/e(this),i=this.chart.options&&this.chart.options.startAngle?this.chart.options.startAngle:0,r=i*Math.PI*2/360;return t*n+r},getDistanceFromCenterForValue:function(t){var e=this;if(null===t)return 0;var n=e.drawingArea/(e.max-e.min);return e.options.reverse?(e.max-t)*n:(t-e.min)*n},getPointPosition:function(t,e){var n=this,i=n.getIndexAngle(t)-Math.PI/2;return{x:Math.round(Math.cos(i)*e)+n.xCenter,y:Math.round(Math.sin(i)*e)+n.yCenter}},getPointPositionForValue:function(t,e){return this.getPointPosition(t,this.getDistanceFromCenterForValue(e))},getBasePosition:function(){var t=this,e=t.min,n=t.max;return t.getPointPositionForValue(0,t.beginAtZero?0:e<0&&n<0?n:e>0&&n>0?e:0)},draw:function(){var t=this,e=t.options,n=e.gridLines,i=e.ticks,r=f.getValueOrDefault;if(e.display){var o=t.ctx,a=r(i.fontSize,p.defaultFontSize),s=r(i.fontStyle,p.defaultFontStyle),l=r(i.fontFamily,p.defaultFontFamily),u=f.fontString(a,s,l);f.each(t.ticks,function(s,l){if(l>0||e.reverse){var c=t.getDistanceFromCenterForValue(t.ticksAsNumbers[l]),h=t.yCenter-c;if(n.display&&0!==l&&d(t,n,c,l),i.display){var f=r(i.fontColor,p.defaultFontColor);if(o.font=u,i.showLabelBackdrop){var g=o.measureText(s).width;o.fillStyle=i.backdropColor,o.fillRect(t.xCenter-g/2-i.backdropPaddingX,h-a/2-i.backdropPaddingY,g+2*i.backdropPaddingX,a+2*i.backdropPaddingY)}o.textAlign="center",o.textBaseline="middle",o.fillStyle=f,o.fillText(s,t.xCenter,h)}}}),(e.angleLines.display||e.pointLabels.display)&&c(t)}}});t.scaleService.registerScaleType("radialLinear",m,g)}},{}],49:[function(t,e,n){"use strict";var i=t(6);i="function"==typeof i?i:window.moment,e.exports=function(t){function e(t,e){var n=t.options.time;if("string"==typeof n.parser)return i(e,n.parser);if("function"==typeof n.parser)return n.parser(e);if("function"==typeof e.getMonth||"number"==typeof e)return i(e);if(e.isValid&&e.isValid())return e;var r=n.format;return"string"!=typeof r&&r.call?(console.warn("options.time.format is deprecated and replaced by options.time.parser."),r(e)):i(e,r)}function n(t,e,n,i){for(var r,o=Object.keys(s),a=o.length,l=o.indexOf(t);l<a;l++){r=o[l];var u=s[r],c=u.steps&&u.steps[u.steps.length-1]||u.maxStep;if(void 0===c||Math.ceil((n-e)/(c*u.size))<=i)break}return r}function r(t,e,n,i){var r=s[n],o=r.size,a=Math.ceil((e-t)/o),l=1,u=e-t;if(r.steps)for(var c=r.steps.length,d=0;d<c&&a>i;d++)l=r.steps[d],a=Math.ceil(u/(o*l));else for(;a>i&&i>0;)++l,a=Math.ceil(u/(o*l));return l}function o(t,e,n){var r=[];if(t.maxTicks){var o=t.stepSize;r.push(void 0!==t.min?t.min:n.min);for(var a=i(n.min);a.add(o,t.unit).valueOf()<n.max;)r.push(a.valueOf());var s=t.max||n.max;r[r.length-1]!==s&&r.push(s)}return r}var a=t.helpers,s={millisecond:{size:1,steps:[1,2,5,10,20,50,100,250,500]},second:{size:1e3,steps:[1,2,5,10,30]},minute:{size:6e4,steps:[1,2,5,10,30]},hour:{size:36e5,steps:[1,2,3,6,12]},day:{size:864e5,steps:[1,2,5]},week:{size:6048e5,maxStep:4},month:{size:2628e6,maxStep:3},quarter:{size:7884e6,maxStep:4},year:{size:3154e7,maxStep:!1}},l={position:"bottom",time:{parser:!1,format:!1,unit:!1,round:!1,displayFormat:!1,isoWeekday:!1,minUnit:"millisecond",displayFormats:{millisecond:"h:mm:ss.SSS a",second:"h:mm:ss a",minute:"h:mm:ss a",hour:"MMM D, hA",day:"ll",week:"ll",month:"MMM YYYY",quarter:"[Q]Q - YYYY",year:"YYYY"}},ticks:{autoSkip:!1}};t.Ticks.generators.time=function(t,e){var n,r,a=t.isoWeekday;return"week"===t.unit&&a!==!1?(n=i(e.min).startOf("isoWeek").isoWeekday(a).valueOf(),r=i(e.max).startOf("isoWeek").isoWeekday(a),e.max-r>0&&r.add(1,"week"),r=r.valueOf()):(n=i(e.min).startOf(t.unit).valueOf(),r=i(e.max).startOf(t.unit),e.max-r>0&&r.add(1,t.unit),r=r.valueOf()),o(t,e,{min:n,max:r})};var u=t.Scale.extend({initialize:function(){if(!i)throw new Error("Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com");t.Scale.prototype.initialize.call(this)},determineDataLimits:function(){var t,n=this,i=n.options.time,r=Number.MAX_SAFE_INTEGER,o=Number.MIN_SAFE_INTEGER,s=n.chart.data,l={labels:[],datasets:[]};a.each(s.labels,function(a,s){var u=e(n,a);u.isValid()&&(i.round&&u.startOf(i.round),t=u.valueOf(),r=Math.min(t,r),o=Math.max(t,o),l.labels[s]=t)}),a.each(s.datasets,function(s,u){var c=[];"object"==typeof s.data[0]&&null!==s.data[0]&&n.chart.isDatasetVisible(u)?a.each(s.data,function(a,s){var l=e(n,n.getRightValue(a));l.isValid()&&(i.round&&l.startOf(i.round),t=l.valueOf(),r=Math.min(t,r),o=Math.max(t,o),c[s]=t)}):c=l.labels.slice(),l.datasets[u]=c}),n.dataMin=r,n.dataMax=o,n._parsedData=l},buildTicks:function(){var i,o,s=this,l=s.options.time,u=s.dataMin,c=s.dataMax;if(l.min){var d=e(s,l.min);l.round&&d.round(l.round),i=d.valueOf()}l.max&&(o=e(s,l.max).valueOf());var h=s.getLabelCapacity(i||u),f=l.unit||n(l.minUnit,i||u,o||c,h);s.displayFormat=l.displayFormats[f];var p=l.stepSize||r(i||u,o||c,f,h);s.ticks=t.Ticks.generators.time({maxTicks:h,min:i,max:o,stepSize:p,unit:f,isoWeekday:l.isoWeekday},{min:u,max:c}),s.max=a.max(s.ticks),s.min=a.min(s.ticks)},getLabelForIndex:function(t,n){var i=this,r=i.chart.data.labels&&t<i.chart.data.labels.length?i.chart.data.labels[t]:"",o=i.chart.data.datasets[n].data[t];return null!==o&&"object"==typeof o&&(r=i.getRightValue(o)),i.options.time.tooltipFormat&&(r=e(i,r).format(i.options.time.tooltipFormat)),r},tickFormatFunction:function(t,e,n){var i=t.format(this.displayFormat),r=this.options.ticks,o=a.getValueOrDefault(r.callback,r.userCallback);return o?o(i,e,n):i},convertTicksToLabels:function(){var t=this;t.ticksAsTimestamps=t.ticks,t.ticks=t.ticks.map(function(t){return i(t)}).map(t.tickFormatFunction,t)},getPixelForOffset:function(t){var e=this,n=e.max-e.min,i=n?(t-e.min)/n:0;if(e.isHorizontal()){var r=e.width*i;return e.left+Math.round(r)}var o=e.height*i;return e.top+Math.round(o)},getPixelForValue:function(t,n,i){var r=this,o=null;if(void 0!==n&&void 0!==i&&(o=r._parsedData.datasets[i][n]),null===o&&(t&&t.isValid||(t=e(r,r.getRightValue(t))),t&&t.isValid&&t.isValid()&&(o=t.valueOf())),null!==o)return r.getPixelForOffset(o)},getPixelForTick:function(t){return this.getPixelForOffset(this.ticksAsTimestamps[t])},getValueForPixel:function(t){var e=this,n=e.isHorizontal()?e.width:e.height,r=(t-(e.isHorizontal()?e.left:e.top))/n;return i(e.min+r*(e.max-e.min))},getLabelWidth:function(e){var n=this,i=n.options.ticks,r=n.ctx.measureText(e).width,o=Math.cos(a.toRadians(i.maxRotation)),s=Math.sin(a.toRadians(i.maxRotation)),l=a.getValueOrDefault(i.fontSize,t.defaults.global.defaultFontSize);return r*o+l*s},getLabelCapacity:function(t){var e=this;e.displayFormat=e.options.time.displayFormats.millisecond;var n=e.tickFormatFunction(i(t),0,[]),r=e.getLabelWidth(n),o=e.isHorizontal()?e.width:e.height,a=o/r;return a}});t.scaleService.registerScaleType("time",u,l)}},{6:6}]},{},[7])(7)}),$(document).on("click",".switcher",function(){}),$(document).on("click",".switcher_service",function(){$(".switcher_service").removeClass("switcher_active"),$(this).toggleClass("switcher_active"),$(".switcher_service").parent().parent().parent().removeClass("services-item_active"),$(this).parent().parent().parent().toggleClass("services-item_active")}),$(document).on("click",".switcher_extra-service",function(){$(this).toggleClass("switcher_active"),$(this).parent().parent().parent().toggleClass("services-item_active")}),$(document).on("click",".content-hover",function(){popupclickclosefunction()}),$(document).on("click",".close-pop-up-b",function(){popupclickclosefunction()}),$(document).on("click","#info",function(){popupclickfunction(),$(".info").fadeIn()}),$(document).on("mouseover","a",function(){}),$(document).on("click",".index-heading__adventages-click",function(){return $(".index-heading__adventages-body_active").next().hasClass("index-heading__adventages-click")?($(".index-heading__adventages-body").removeClass("index-heading__adventages-body_active"),$(".index-heading__adventages-body").first().addClass("index-heading__adventages-body_active"),!1):void $(".index-heading__adventages-body_active").removeClass("index-heading__adventages-body_active").next().addClass("index-heading__adventages-body_active")}),function(t){for(var e=function(t,e,n){return t[0]*e+t[1]*n},n=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]],i=[],r=0;r<256;r++)i[r]=Math.floor(256*Math.random());for(var o=[],r=0;r<512;r++)o[r]=i[255&r];t.noise=function(t,i){var r,a,s,l,u,c=.5*(Math.sqrt(3)-1),d=(t+i)*c,h=Math.floor(t+d),f=Math.floor(i+d),p=(3-Math.sqrt(3))/6,g=(h+f)*p,m=h-g,v=f-g,y=t-m,b=i-v;y>b?(l=1,u=0):(l=0,u=1);var x=y-l+p,_=b-u+p,w=y-1+2*p,k=b-1+2*p,S=255&h,C=255&f,M=o[S+o[C]]%12,D=o[S+l+o[C+u]]%12,T=o[S+1+o[C+1]]%12,P=.5-y*y-b*b;P<0?r=0:(P*=P,r=P*P*e(n[M],y,b));var A=.5-x*x-_*_;A<0?a=0:(A*=A,a=A*A*e(n[D],x,_));var I=.5-w*w-k*k;return I<0?s=0:(I*=I,s=I*I*e(n[T],w,k)),70*(r+a+s)}}(this),$(document).ready(function(){});var pages={indexpage:["/index.html","/"],services:"/services.html",servicespages:["/services-landing-page.html","/services-e-shop.html","/services-visit-card-site.html","/services-corporative-site.html","/services-support.html"],contextadvpage:"/services-context.html",advpage:"/services-advertising.html"};$(document).ready(function(){function t(t){popupclickclosefunction();var e=t;$(".content-ajax-wrapper").load(e+" .content-ajax",function(t){fullpageload(),0!=$(document).find("#index").length&&$("#index").fadeIn(),window.scrollBy(0,-99999),document.title=t.split("<title>")[1].split("</title")[0]})}fullpageload(),0!=$(document).find("#index").length&&setTimeout(function(){$("#index").fadeIn()},"1000");var e="state"in window.history&&null!==window.history.state,n=location.href;$(".content-ajax-wrapper"),$(document).on("click","a",function(){var e=$(this).attr("href");return history.pushState({page:e},"Loading...",e),document.title="Loading...",t(e),!1}),$(window).bind("popstate",function(i){var r=!e&&location.href==n;e=!0,r||(console.log("Popstate"),t(location.pathname))})}),function(t){function e(t){var e="";"lowerLetter"==t?e="abcdefghijklmnopqrstuvwxyz0123456789":"upperLetter"==t?e="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789":"symbol"==t&&(e=",.?/\\(^)![]{}*&^%$#'\"");var n=e.split("");return n[Math.floor(Math.random()*n.length)]}t.fn.shuffleLetters=function(n){var i=t.extend({step:8,fps:25,text:"",callback:function(){}},n);return this.each(function(){var n=t(this),r="";if(n.data("animated"))return!0;n.data("animated",!0),r=i.text?i.text.split(""):n.text().split("");for(var o=[],a=[],s=0;s<r.length;s++){var l=r[s];" "!=l?(/[a-z]/.test(l)?o[s]="lowerLetter":/[A-Z]/.test(l)?o[s]="upperLetter":o[s]="symbol",a.push(s)):o[s]="space"}n.html(""),function u(t){var s,l=a.length,c=r.slice(0);if(t>l)return n.data("animated",!1),void i.callback(n);for(s=Math.max(t,0);s<l;s++)s<t+i.step?c[a[s]]=e(o[a[s]]):c[a[s]]="";n.text(c.join("")),setTimeout(function(){u(t+1)},1e3/i.fps)}(-i.step)})}}($),$(document).ready(function(){$("body").append('<div class="helper close">      <div class="helper__person">        <img class="helper__person-img" src="imgsvg/hipsta.svg" alt="Bob">      </div>      <div class="helper__dialog">          <div class="helper__said">          </div>          <div class="helper__answer">            <input class="helper__answer-item input helper__input" id="helper-input-name" class="input" type="text" placeholder="Enter your name">            <span class="helper__answer-item helper__button" id="helper-button"><img src="imgsvg/plane.svg" alt="Plane"></span>          </div>      </div>      <div class="helper__toggle">        <div class="helper__toggle-inner">        </div>      </div>    </div>     <img class="helper__open" src="imgsvg/hipsta-head.svg" alt="Bob">          <img class="helper__close close" src="imgsvg/close.svg" alt="Close">    ');var t=getCookie("wasvisit");""==t&&(document.cookie="wasvisit=Guest; expires=1/1/2019 00:00:00")});var name="",bobsayHi=function(){var t=getCookie("wasvisit");"Guest"==t?(sayBob("Hi, my name is Rendal. I have no brains, but only a few algorithms, but I'll be happy to help, what's your name?"),$(".helper__answer").empty().append('<input class="helper__answer-item input helper__input" id="helper-input-name" class="input" type="text" placeholder="Enter your name">    <span onclick="nextStepBob(1)" class="helper__answer-item helper__button" id="helper-button"><img src="imgsvg/plane.svg" alt="Plane"></span>    ')):(sayBob("Oh, "+t+". You need my help?"),$(".helper__answer").empty().append('    <div onclick="nextStepBob(6)" class="helper__answer-item input helper__button" id="helper-input-name" class="input" type="text" >There is mistake in my name</div>    <div onclick="nextStepBob(2)" class="helper__answer-item input helper__button" id="helper-input-name" class="input" type="text" >Place order</div>    '))},bobChangeName=function(){sayBob("I am so sorry, how can i call you?"),$(".helper__answer").empty().append('<input class="helper__answer-item input helper__input" id="helper-input-name" class="input" type="text" placeholder="Enter your name">    <span onclick="nextStepBob(1)" class="helper__answer-item helper__button" id="helper-button"><img src="imgsvg/plane.svg" alt="Plane"></span>    ')},bobCheckName=function(){var t=($(".helper__said").text(),$("#helper-input-name").val());return"Egor Karpachev"==t?(sayBob("Sorry, i do not work with Petuh"),!1):(document.cookie="wasvisit="+t+"; expires=1/1/2019 00:00:00",sayBob("Nice to meet you. "+t+". Place an order to contact my owner."),$(".helper__answer").empty().append('  <div onclick="nextStepBob(2)" class="helper__answer-item input helper__button" id="helper-input-name" class="input" type="text" >Place order</div>  '),void 0)},bobOpenform=function(){$(".helper__said").text(),$("#helper-input-name").val(),sayBob("Ok, now i need your contact details: Email or Phone number."),$(".helper__answer").empty().append('<input class="helper__answer-item-contacts helper__answer-item input helper__input" id="helper-input-name" class="input" type="text" placeholder="Email or phone number">  <span onclick="nextStepBob(5)" class="helper__answer-item helper__button" id="helper-button"><img src="imgsvg/plane.svg" alt="Plane"></span>  ')},bobSendEnquiry=function(){function t(t){var e=/^[\w-\.]+@[\w-]+\.[a-z]{2,4}$/i,n=t,i=e.test(n);return sayBob("Sorry, I need valid information to send."),i}function e(t){t=t.replace("+","").replace("(","").replace(")","");var e=/^\d[\d\(\)\ -]{4,14}\d$/,n=t,i=e.test(n);return sayBob("Sorry, I need valid information to send."),i}var n=$(".helper__answer-item-contacts").val();return(0!=t(n)||0!=e(n))&&(sayBob("Thanks, now you will get all details in 10 minutes."),void $(".helper__answer").empty().append('  <span onclick="closeBob()" class="helper__answer-item helper__button" id="helper-button">Thanks</span>  '))},bobTellMeMore=function(){$(".helper__said").text(),$("#helper-input-name").val(),sayBob("Выбирай что тебе интересно, но ты также можешь пользоваться обычной навигацией - сверху"),$(".helper__answer").empty().append('<span onclick="nextStepBob(4)" class="helper__answer-item helper__button" id="helper-button">Узнать о создании сайтов</span>    <span onclick="nextStepBob(5)" class="helper__answer-item helper__button" id="helper-button">Узнать о продвижении</span>    <span onclick="nextStepBob(6)" class="helper__answer-item helper__button" id="helper-button">Узнать о поддержке</span>  ')},bobPhoneOrEmail=function(){$(".helper__said").text(),$("#helper-input-name").val(),sayBob("Azazaza"),$(".helper__answer").empty().append('<span onclick="nextStepBob(4)" class="helper__answer-item helper__button" id="helper-button">Узнать о создании сайтов</span>    <span onclick="nextStepBob(5)" class="helper__answer-item helper__button" id="helper-button">Узнать о продвижении</span>    <span onclick="nextStepBob(6)" class="helper__answer-item helper__button" id="helper-button">Узнать о поддержке</span>  ')};bob=[[bobsayHi],[bobCheckName],[bobOpenform],[bobTellMeMore],[bobPhoneOrEmail],[bobSendEnquiry],[bobChangeName]],$(document).on("click",".helper__close",function(){closeBob()}),$(document).ready(function(){});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
