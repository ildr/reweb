function popupclickfunction(){return!$(".content").hasClass("content_fixed")&&($(".close-pop-up-b").slideDown(),topscrollpopup=$(document).scrollTop(),$(".content").addClass("content_fixed"),$(".content").css("top",-topscrollpopup),$("body").scrollTop(0),void $(".content-hover").fadeIn())}function popupclickclosefunction(){return!!$(".content").hasClass("content_fixed")&&($(".close-pop-up-b").slideUp(),$(".nav").removeClass("nav_open"),$(".content").removeClass("content_no"),$(".nav__item-link-text").fadeOut(),$(".popups").children().fadeOut(),void setTimeout(function(){$(".content").removeClass("content_fixed"),$(".content").css("top","0"),$(document).scrollTop(topscrollpopup),$(".content-hover").fadeOut()},500))}function showMenu(){$(".nav").addClass("nav_open"),$(".content").addClass("content_no"),$(".nav__item-link-text").fadeIn(),popupclickfunction()}function openQuestion(){popupclickfunction(),$("#questions").fadeIn()}function openOrder(){popupclickfunction(),$("#questions").fadeIn()}function checkajaxpage(){function t(t){if("string"==typeof t&&window.location.pathname==t&&(e=!0),"object"==typeof t||"array"==typeof t)for(n=0;n<t.length;n++)window.location.pathname==t[n]&&(e=!0)}if(!arguments)return!1;for(var e=!1,n=0;n<arguments.length;n++)if(t(arguments[n]),1==e)return!0;return!1}function fullpageload(){if(checkajaxpage(pages.indexpage)?$(".content-ajax-wrapper").css("height","100%"):$(".content-ajax-wrapper").css("height","auto"),checkajaxpage(pages.services)&&$(".row_services").owlCarousel({margin:0,responsiveClass:!0,responsive:{0:{items:1,nav:!0,loop:!0},768:{items:3,nav:!1,loop:!1}}}),checkajaxpage(pages.contextadvpage)){var t=document.getElementById("chart").getContext("2d");new Chart(t,{type:"doughnut",data:{labels:["Yandex","Google"],datasets:[{data:[60,40],borderColor:"#333",borderWidth:"6",backgroundColor:["#27AE60","#EB5757"]}]},options:{title:{display:!0}}})}if(checkajaxpage(pages.advpage)){var t=document.getElementById("chart").getContext("2d");new Chart(t,{type:"doughnut",data:{labels:["Contextual ads","Blogs and Vlogs ads","CPA Networks","Social networks"],datasets:[{data:[50,10,18,15],borderColor:"#333",borderWidth:"6",backgroundColor:["#27AE60","#EB5757","#F2C94C","#2D9CDB"]}]},options:{title:{display:!0,borderColor:["rgba(255,99,132,1)","rgba(54, 162, 235, 1)","rgba(255, 206, 86, 1)","rgba(75, 192, 192, 1)"]}}})}}function sayBob(t){$(".helper__said").remove(),$(".helper__dialog").append('<div class="helper__said"></div>'),$(".helper__said").empty().shuffleLetters({text:t})}function nextStepBob(t){var e=bob[t],n=e[0];n()}function closeBob(){return $(".helper").toggleClass("close"),$(".footer").toggleClass("close"),$(".helper__close").toggleClass("close"),!$(this).hasClass("clicked")&&($(this).addClass("clicked"),void nextStepBob(0))}function getCookie(t){for(var e=t+"=",n=document.cookie.split(";"),i=0;i<n.length;i++){for(var r=n[i];" "==r.charAt(0);)r=r.substring(1);if(0==r.indexOf(e))return r.substring(e.length,r.length)}return""}!function(t,e){"use strict";"object"==typeof module&&"object"==typeof module.exports?module.exports=t.document?e(t,!0):function(t){if(!t.document)throw new Error("jQuery requires a window with a document");return e(t)}:e(t)}("undefined"!=typeof window?window:this,function(t,e){"use strict";function n(t,e,n){e=e||at;var i,r=e.createElement("script");if(r.text=t,n)for(i in xt)n[i]&&(r[i]=n[i]);e.head.appendChild(r).parentNode.removeChild(r)}function i(t){return null==t?t+"":"object"==typeof t||"function"==typeof t?dt[ft.call(t)]||"object":typeof t}function r(t){var e=!!t&&"length"in t&&t.length,n=i(t);return!yt(t)&&!bt(t)&&("array"===n||0===e||"number"==typeof e&&e>0&&e-1 in t)}function o(t,e){return t.nodeName&&t.nodeName.toLowerCase()===e.toLowerCase()}function a(t,e,n){return yt(e)?wt.grep(t,function(t,i){return!!e.call(t,i,t)!==n}):e.nodeType?wt.grep(t,function(t){return t===e!==n}):"string"!=typeof e?wt.grep(t,function(t){return ht.call(e,t)>-1!==n}):wt.filter(e,t,n)}function s(t,e){for(;(t=t[e])&&1!==t.nodeType;);return t}function l(t){var e={};return wt.each(t.match(Et)||[],function(t,n){e[n]=!0}),e}function u(t){return t}function c(t){throw t}function h(t,e,n,i){var r;try{t&&yt(r=t.promise)?r.call(t).done(e).fail(n):t&&yt(r=t.then)?r.call(t,e,n):e.apply(void 0,[t].slice(i))}catch(t){n.apply(void 0,[t])}}function d(){at.removeEventListener("DOMContentLoaded",d),t.removeEventListener("load",d),wt.ready()}function f(t,e){return e.toUpperCase()}function p(t){return t.replace(zt,"ms-").replace(Wt,f)}function g(){this.expando=wt.expando+g.uid++}function m(t){return"true"===t||"false"!==t&&("null"===t?null:t===+t+""?+t:Bt.test(t)?JSON.parse(t):t)}function v(t,e,n){var i;if(void 0===n&&1===t.nodeType)if(i="data-"+e.replace($t,"-$&").toLowerCase(),n=t.getAttribute(i),"string"==typeof n){try{n=m(n)}catch(r){}Yt.set(t,e,n)}else n=void 0;return n}function y(t,e,n,i){var r,o,a=20,s=i?function(){return i.cur()}:function(){return wt.css(t,e,"")},l=s(),u=n&&n[3]||(wt.cssNumber[e]?"":"px"),c=(wt.cssNumber[e]||"px"!==u&&+l)&&qt.exec(wt.css(t,e));if(c&&c[3]!==u){for(l/=2,u=u||c[3],c=+l||1;a--;)wt.style(t,e,c+u),(1-o)*(1-(o=s()/l||.5))<=0&&(a=0),c/=o;c=2*c,wt.style(t,e,c+u),n=n||[]}return n&&(c=+c||+l||0,r=n[1]?c+(n[1]+1)*n[2]:+n[2],i&&(i.unit=u,i.start=c,i.end=r)),r}function b(t){var e,n=t.ownerDocument,i=t.nodeName,r=Xt[i];return r?r:(e=n.body.appendChild(n.createElement(i)),r=wt.css(e,"display"),e.parentNode.removeChild(e),"none"===r&&(r="block"),Xt[i]=r,r)}function x(t,e){for(var n,i,r=[],o=0,a=t.length;o<a;o++)i=t[o],i.style&&(n=i.style.display,e?("none"===n&&(r[o]=jt.get(i,"display")||null,r[o]||(i.style.display="")),""===i.style.display&&Gt(i)&&(r[o]=b(i))):"none"!==n&&(r[o]="none",jt.set(i,"display",n)));for(o=0;o<a;o++)null!=r[o]&&(t[o].style.display=r[o]);return t}function _(t,e){var n;return n="undefined"!=typeof t.getElementsByTagName?t.getElementsByTagName(e||"*"):"undefined"!=typeof t.querySelectorAll?t.querySelectorAll(e||"*"):[],void 0===e||e&&o(t,e)?wt.merge([t],n):n}function w(t,e){for(var n=0,i=t.length;n<i;n++)jt.set(t[n],"globalEval",!e||jt.get(e[n],"globalEval"))}function k(t,e,n,r,o){for(var a,s,l,u,c,h,d=e.createDocumentFragment(),f=[],p=0,g=t.length;p<g;p++)if(a=t[p],a||0===a)if("object"===i(a))wt.merge(f,a.nodeType?[a]:a);else if(ee.test(a)){for(s=s||d.appendChild(e.createElement("div")),l=(Jt.exec(a)||["",""])[1].toLowerCase(),u=te[l]||te._default,s.innerHTML=u[1]+wt.htmlPrefilter(a)+u[2],h=u[0];h--;)s=s.lastChild;wt.merge(f,s.childNodes),s=d.firstChild,s.textContent=""}else f.push(e.createTextNode(a));for(d.textContent="",p=0;a=f[p++];)if(r&&wt.inArray(a,r)>-1)o&&o.push(a);else if(c=wt.contains(a.ownerDocument,a),s=_(d.appendChild(a),"script"),c&&w(s),n)for(h=0;a=s[h++];)Kt.test(a.type||"")&&n.push(a);return d}function M(){return!0}function S(){return!1}function C(){try{return at.activeElement}catch(t){}}function D(t,e,n,i,r,o){var a,s;if("object"==typeof e){"string"!=typeof n&&(i=i||n,n=void 0);for(s in e)D(t,s,n,i,e[s],o);return t}if(null==i&&null==r?(r=n,i=n=void 0):null==r&&("string"==typeof n?(r=i,i=void 0):(r=i,i=n,n=void 0)),r===!1)r=S;else if(!r)return t;return 1===o&&(a=r,r=function(t){return wt().off(t),a.apply(this,arguments)},r.guid=a.guid||(a.guid=wt.guid++)),t.each(function(){wt.event.add(this,e,r,i,n)})}function T(t,e){return o(t,"table")&&o(11!==e.nodeType?e:e.firstChild,"tr")?wt(t).children("tbody")[0]||t:t}function P(t){return t.type=(null!==t.getAttribute("type"))+"/"+t.type,t}function A(t){return"true/"===(t.type||"").slice(0,5)?t.type=t.type.slice(5):t.removeAttribute("type"),t}function O(t,e){var n,i,r,o,a,s,l,u;if(1===e.nodeType){if(jt.hasData(t)&&(o=jt.access(t),a=jt.set(e,o),u=o.events)){delete a.handle,a.events={};for(r in u)for(n=0,i=u[r].length;n<i;n++)wt.event.add(e,r,u[r][n])}Yt.hasData(t)&&(s=Yt.access(t),l=wt.extend({},s),Yt.set(e,l))}}function I(t,e){var n=e.nodeName.toLowerCase();"input"===n&&Qt.test(t.type)?e.checked=t.checked:"input"!==n&&"textarea"!==n||(e.defaultValue=t.defaultValue)}function L(t,e,i,r){e=ut.apply([],e);var o,a,s,l,u,c,h=0,d=t.length,f=d-1,p=e[0],g=yt(p);if(g||d>1&&"string"==typeof p&&!vt.checkClone&&le.test(p))return t.each(function(n){var o=t.eq(n);g&&(e[0]=p.call(this,n,o.html())),L(o,e,i,r)});if(d&&(o=k(e,t[0].ownerDocument,!1,t,r),a=o.firstChild,1===o.childNodes.length&&(o=a),a||r)){for(s=wt.map(_(o,"script"),P),l=s.length;h<d;h++)u=o,h!==f&&(u=wt.clone(u,!0,!0),l&&wt.merge(s,_(u,"script"))),i.call(t[h],u,h);if(l)for(c=s[s.length-1].ownerDocument,wt.map(s,A),h=0;h<l;h++)u=s[h],Kt.test(u.type||"")&&!jt.access(u,"globalEval")&&wt.contains(c,u)&&(u.src&&"module"!==(u.type||"").toLowerCase()?wt._evalUrl&&wt._evalUrl(u.src):n(u.textContent.replace(ue,""),c,u))}return t}function E(t,e,n){for(var i,r=e?wt.filter(e,t):t,o=0;null!=(i=r[o]);o++)n||1!==i.nodeType||wt.cleanData(_(i)),i.parentNode&&(n&&wt.contains(i.ownerDocument,i)&&w(_(i,"script")),i.parentNode.removeChild(i));return t}function F(t,e,n){var i,r,o,a,s=t.style;return n=n||he(t),n&&(a=n.getPropertyValue(e)||n[e],""!==a||wt.contains(t.ownerDocument,t)||(a=wt.style(t,e)),!vt.pixelBoxStyles()&&ce.test(a)&&de.test(e)&&(i=s.width,r=s.minWidth,o=s.maxWidth,s.minWidth=s.maxWidth=s.width=a,a=n.width,s.width=i,s.minWidth=r,s.maxWidth=o)),void 0!==a?a+"":a}function N(t,e){return{get:function(){return t()?void delete this.get:(this.get=e).apply(this,arguments)}}}function R(t){if(t in ye)return t;for(var e=t[0].toUpperCase()+t.slice(1),n=ve.length;n--;)if(t=ve[n]+e,t in ye)return t}function z(t){var e=wt.cssProps[t];return e||(e=wt.cssProps[t]=R(t)||t),e}function W(t,e,n){var i=qt.exec(e);return i?Math.max(0,i[2]-(n||0))+(i[3]||"px"):e}function H(t,e,n,i,r,o){var a="width"===e?1:0,s=0,l=0;if(n===(i?"border":"content"))return 0;for(;a<4;a+=2)"margin"===n&&(l+=wt.css(t,n+Ut[a],!0,r)),i?("content"===n&&(l-=wt.css(t,"padding"+Ut[a],!0,r)),"margin"!==n&&(l-=wt.css(t,"border"+Ut[a]+"Width",!0,r))):(l+=wt.css(t,"padding"+Ut[a],!0,r),"padding"!==n?l+=wt.css(t,"border"+Ut[a]+"Width",!0,r):s+=wt.css(t,"border"+Ut[a]+"Width",!0,r));return!i&&o>=0&&(l+=Math.max(0,Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-o-l-s-.5))),l}function j(t,e,n){var i=he(t),r=F(t,e,i),o="border-box"===wt.css(t,"boxSizing",!1,i),a=o;if(ce.test(r)){if(!n)return r;r="auto"}return a=a&&(vt.boxSizingReliable()||r===t.style[e]),("auto"===r||!parseFloat(r)&&"inline"===wt.css(t,"display",!1,i))&&(r=t["offset"+e[0].toUpperCase()+e.slice(1)],a=!0),r=parseFloat(r)||0,r+H(t,e,n||(o?"border":"content"),a,i,r)+"px"}function Y(t,e,n,i,r){return new Y.prototype.init(t,e,n,i,r)}function B(){xe&&(at.hidden===!1&&t.requestAnimationFrame?t.requestAnimationFrame(B):t.setTimeout(B,wt.fx.interval),wt.fx.tick())}function $(){return t.setTimeout(function(){be=void 0}),be=Date.now()}function V(t,e){var n,i=0,r={height:t};for(e=e?1:0;i<4;i+=2-e)n=Ut[i],r["margin"+n]=r["padding"+n]=t;return e&&(r.opacity=r.width=t),r}function q(t,e,n){for(var i,r=(Z.tweeners[e]||[]).concat(Z.tweeners["*"]),o=0,a=r.length;o<a;o++)if(i=r[o].call(n,e,t))return i}function U(t,e,n){var i,r,o,a,s,l,u,c,h="width"in e||"height"in e,d=this,f={},p=t.style,g=t.nodeType&&Gt(t),m=jt.get(t,"fxshow");n.queue||(a=wt._queueHooks(t,"fx"),null==a.unqueued&&(a.unqueued=0,s=a.empty.fire,a.empty.fire=function(){a.unqueued||s()}),a.unqueued++,d.always(function(){d.always(function(){a.unqueued--,wt.queue(t,"fx").length||a.empty.fire()})}));for(i in e)if(r=e[i],_e.test(r)){if(delete e[i],o=o||"toggle"===r,r===(g?"hide":"show")){if("show"!==r||!m||void 0===m[i])continue;g=!0}f[i]=m&&m[i]||wt.style(t,i)}if(l=!wt.isEmptyObject(e),l||!wt.isEmptyObject(f)){h&&1===t.nodeType&&(n.overflow=[p.overflow,p.overflowX,p.overflowY],u=m&&m.display,null==u&&(u=jt.get(t,"display")),c=wt.css(t,"display"),"none"===c&&(u?c=u:(x([t],!0),u=t.style.display||u,c=wt.css(t,"display"),x([t]))),("inline"===c||"inline-block"===c&&null!=u)&&"none"===wt.css(t,"float")&&(l||(d.done(function(){p.display=u}),null==u&&(c=p.display,u="none"===c?"":c)),p.display="inline-block")),n.overflow&&(p.overflow="hidden",d.always(function(){p.overflow=n.overflow[0],p.overflowX=n.overflow[1],p.overflowY=n.overflow[2]})),l=!1;for(i in f)l||(m?"hidden"in m&&(g=m.hidden):m=jt.access(t,"fxshow",{display:u}),o&&(m.hidden=!g),g&&x([t],!0),d.done(function(){g||x([t]),jt.remove(t,"fxshow");for(i in f)wt.style(t,i,f[i])})),l=q(g?m[i]:0,i,d),i in m||(m[i]=l.start,g&&(l.end=l.start,l.start=0))}}function G(t,e){var n,i,r,o,a;for(n in t)if(i=p(n),r=e[i],o=t[n],Array.isArray(o)&&(r=o[1],o=t[n]=o[0]),n!==i&&(t[i]=o,delete t[n]),a=wt.cssHooks[i],a&&"expand"in a){o=a.expand(o),delete t[i];for(n in o)n in t||(t[n]=o[n],e[n]=r)}else e[i]=r}function Z(t,e,n){var i,r,o=0,a=Z.prefilters.length,s=wt.Deferred().always(function(){delete l.elem}),l=function(){if(r)return!1;for(var e=be||$(),n=Math.max(0,u.startTime+u.duration-e),i=n/u.duration||0,o=1-i,a=0,l=u.tweens.length;a<l;a++)u.tweens[a].run(o);return s.notifyWith(t,[u,o,n]),o<1&&l?n:(l||s.notifyWith(t,[u,1,0]),s.resolveWith(t,[u]),!1)},u=s.promise({elem:t,props:wt.extend({},e),opts:wt.extend(!0,{specialEasing:{},easing:wt.easing._default},n),originalProperties:e,originalOptions:n,startTime:be||$(),duration:n.duration,tweens:[],createTween:function(e,n){var i=wt.Tween(t,u.opts,e,n,u.opts.specialEasing[e]||u.opts.easing);return u.tweens.push(i),i},stop:function(e){var n=0,i=e?u.tweens.length:0;if(r)return this;for(r=!0;n<i;n++)u.tweens[n].run(1);return e?(s.notifyWith(t,[u,1,0]),s.resolveWith(t,[u,e])):s.rejectWith(t,[u,e]),this}}),c=u.props;for(G(c,u.opts.specialEasing);o<a;o++)if(i=Z.prefilters[o].call(u,t,c,u.opts))return yt(i.stop)&&(wt._queueHooks(u.elem,u.opts.queue).stop=i.stop.bind(i)),i;return wt.map(c,q,u),yt(u.opts.start)&&u.opts.start.call(t,u),u.progress(u.opts.progress).done(u.opts.done,u.opts.complete).fail(u.opts.fail).always(u.opts.always),wt.fx.timer(wt.extend(l,{elem:t,anim:u,queue:u.opts.queue})),u}function X(t){var e=t.match(Et)||[];return e.join(" ")}function Q(t){return t.getAttribute&&t.getAttribute("class")||""}function J(t){return Array.isArray(t)?t:"string"==typeof t?t.match(Et)||[]:[]}function K(t,e,n,r){var o;if(Array.isArray(e))wt.each(e,function(e,i){n||Le.test(t)?r(t,i):K(t+"["+("object"==typeof i&&null!=i?e:"")+"]",i,n,r)});else if(n||"object"!==i(e))r(t,e);else for(o in e)K(t+"["+o+"]",e[o],n,r)}function tt(t){return function(e,n){"string"!=typeof e&&(n=e,e="*");var i,r=0,o=e.toLowerCase().match(Et)||[];if(yt(n))for(;i=o[r++];)"+"===i[0]?(i=i.slice(1)||"*",(t[i]=t[i]||[]).unshift(n)):(t[i]=t[i]||[]).push(n)}}function et(t,e,n,i){function r(s){var l;return o[s]=!0,wt.each(t[s]||[],function(t,s){var u=s(e,n,i);return"string"!=typeof u||a||o[u]?a?!(l=u):void 0:(e.dataTypes.unshift(u),r(u),!1)}),l}var o={},a=t===Ve;return r(e.dataTypes[0])||!o["*"]&&r("*")}function nt(t,e){var n,i,r=wt.ajaxSettings.flatOptions||{};for(n in e)void 0!==e[n]&&((r[n]?t:i||(i={}))[n]=e[n]);return i&&wt.extend(!0,t,i),t}function it(t,e,n){for(var i,r,o,a,s=t.contents,l=t.dataTypes;"*"===l[0];)l.shift(),void 0===i&&(i=t.mimeType||e.getResponseHeader("Content-Type"));if(i)for(r in s)if(s[r]&&s[r].test(i)){l.unshift(r);break}if(l[0]in n)o=l[0];else{for(r in n){if(!l[0]||t.converters[r+" "+l[0]]){o=r;break}a||(a=r)}o=o||a}if(o)return o!==l[0]&&l.unshift(o),n[o]}function rt(t,e,n,i){var r,o,a,s,l,u={},c=t.dataTypes.slice();if(c[1])for(a in t.converters)u[a.toLowerCase()]=t.converters[a];for(o=c.shift();o;)if(t.responseFields[o]&&(n[t.responseFields[o]]=e),!l&&i&&t.dataFilter&&(e=t.dataFilter(e,t.dataType)),l=o,o=c.shift())if("*"===o)o=l;else if("*"!==l&&l!==o){if(a=u[l+" "+o]||u["* "+o],!a)for(r in u)if(s=r.split(" "),s[1]===o&&(a=u[l+" "+s[0]]||u["* "+s[0]])){a===!0?a=u[r]:u[r]!==!0&&(o=s[0],c.unshift(s[1]));break}if(a!==!0)if(a&&t["throws"])e=a(e);else try{e=a(e)}catch(h){return{state:"parsererror",error:a?h:"No conversion from "+l+" to "+o}}}return{state:"success",data:e}}var ot=[],at=t.document,st=Object.getPrototypeOf,lt=ot.slice,ut=ot.concat,ct=ot.push,ht=ot.indexOf,dt={},ft=dt.toString,pt=dt.hasOwnProperty,gt=pt.toString,mt=gt.call(Object),vt={},yt=function(t){return"function"==typeof t&&"number"!=typeof t.nodeType},bt=function(t){return null!=t&&t===t.window},xt={type:!0,src:!0,noModule:!0},_t="3.3.1",wt=function(t,e){return new wt.fn.init(t,e)},kt=/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;wt.fn=wt.prototype={jquery:_t,constructor:wt,length:0,toArray:function(){return lt.call(this)},get:function(t){return null==t?lt.call(this):t<0?this[t+this.length]:this[t]},pushStack:function(t){var e=wt.merge(this.constructor(),t);return e.prevObject=this,e},each:function(t){return wt.each(this,t)},map:function(t){return this.pushStack(wt.map(this,function(e,n){return t.call(e,n,e)}))},slice:function(){return this.pushStack(lt.apply(this,arguments))},first:function(){return this.eq(0)},last:function(){return this.eq(-1)},eq:function(t){var e=this.length,n=+t+(t<0?e:0);return this.pushStack(n>=0&&n<e?[this[n]]:[])},end:function(){return this.prevObject||this.constructor()},push:ct,sort:ot.sort,splice:ot.splice},wt.extend=wt.fn.extend=function(){var t,e,n,i,r,o,a=arguments[0]||{},s=1,l=arguments.length,u=!1;for("boolean"==typeof a&&(u=a,a=arguments[s]||{},s++),"object"==typeof a||yt(a)||(a={}),s===l&&(a=this,s--);s<l;s++)if(null!=(t=arguments[s]))for(e in t)n=a[e],i=t[e],a!==i&&(u&&i&&(wt.isPlainObject(i)||(r=Array.isArray(i)))?(r?(r=!1,o=n&&Array.isArray(n)?n:[]):o=n&&wt.isPlainObject(n)?n:{},a[e]=wt.extend(u,o,i)):void 0!==i&&(a[e]=i));return a},wt.extend({expando:"jQuery"+(_t+Math.random()).replace(/\D/g,""),isReady:!0,error:function(t){throw new Error(t)},noop:function(){},isPlainObject:function(t){var e,n;return!(!t||"[object Object]"!==ft.call(t)||(e=st(t))&&(n=pt.call(e,"constructor")&&e.constructor,"function"!=typeof n||gt.call(n)!==mt))},isEmptyObject:function(t){var e;for(e in t)return!1;return!0},globalEval:function(t){n(t)},each:function(t,e){var n,i=0;if(r(t))for(n=t.length;i<n&&e.call(t[i],i,t[i])!==!1;i++);else for(i in t)if(e.call(t[i],i,t[i])===!1)break;return t},trim:function(t){return null==t?"":(t+"").replace(kt,"")},makeArray:function(t,e){var n=e||[];return null!=t&&(r(Object(t))?wt.merge(n,"string"==typeof t?[t]:t):ct.call(n,t)),n},inArray:function(t,e,n){return null==e?-1:ht.call(e,t,n)},merge:function(t,e){for(var n=+e.length,i=0,r=t.length;i<n;i++)t[r++]=e[i];return t.length=r,t},grep:function(t,e,n){for(var i,r=[],o=0,a=t.length,s=!n;o<a;o++)i=!e(t[o],o),i!==s&&r.push(t[o]);return r},map:function(t,e,n){var i,o,a=0,s=[];if(r(t))for(i=t.length;a<i;a++)o=e(t[a],a,n),null!=o&&s.push(o);else for(a in t)o=e(t[a],a,n),null!=o&&s.push(o);return ut.apply([],s)},guid:1,support:vt}),"function"==typeof Symbol&&(wt.fn[Symbol.iterator]=ot[Symbol.iterator]),wt.each("Boolean Number String Function Array Date RegExp Object Error Symbol".split(" "),function(t,e){dt["[object "+e+"]"]=e.toLowerCase()});var Mt=function(t){function e(t,e,n,i){var r,o,a,s,l,u,c,d=e&&e.ownerDocument,p=e?e.nodeType:9;if(n=n||[],"string"!=typeof t||!t||1!==p&&9!==p&&11!==p)return n;if(!i&&((e?e.ownerDocument||e:j)!==L&&I(e),e=e||L,F)){if(11!==p&&(l=vt.exec(t)))if(r=l[1]){if(9===p){if(!(a=e.getElementById(r)))return n;if(a.id===r)return n.push(a),n}else if(d&&(a=d.getElementById(r))&&W(e,a)&&a.id===r)return n.push(a),n}else{if(l[2])return J.apply(n,e.getElementsByTagName(t)),n;if((r=l[3])&&w.getElementsByClassName&&e.getElementsByClassName)return J.apply(n,e.getElementsByClassName(r)),n}if(w.qsa&&!q[t+" "]&&(!N||!N.test(t))){if(1!==p)d=e,c=t;else if("object"!==e.nodeName.toLowerCase()){for((s=e.getAttribute("id"))?s=s.replace(_t,wt):e.setAttribute("id",s=H),u=C(t),o=u.length;o--;)u[o]="#"+s+" "+f(u[o]);c=u.join(","),d=yt.test(t)&&h(e.parentNode)||e}if(c)try{return J.apply(n,d.querySelectorAll(c)),n}catch(g){}finally{s===H&&e.removeAttribute("id")}}}return T(t.replace(st,"$1"),e,n,i)}function n(){function t(n,i){return e.push(n+" ")>k.cacheLength&&delete t[e.shift()],t[n+" "]=i}var e=[];return t}function i(t){return t[H]=!0,t}function r(t){var e=L.createElement("fieldset");try{return!!t(e)}catch(n){return!1}finally{e.parentNode&&e.parentNode.removeChild(e),e=null}}function o(t,e){for(var n=t.split("|"),i=n.length;i--;)k.attrHandle[n[i]]=e}function a(t,e){var n=e&&t,i=n&&1===t.nodeType&&1===e.nodeType&&t.sourceIndex-e.sourceIndex;if(i)return i;if(n)for(;n=n.nextSibling;)if(n===e)return-1;return t?1:-1}function s(t){return function(e){var n=e.nodeName.toLowerCase();return"input"===n&&e.type===t}}function l(t){return function(e){var n=e.nodeName.toLowerCase();return("input"===n||"button"===n)&&e.type===t}}function u(t){return function(e){return"form"in e?e.parentNode&&e.disabled===!1?"label"in e?"label"in e.parentNode?e.parentNode.disabled===t:e.disabled===t:e.isDisabled===t||e.isDisabled!==!t&&Mt(e)===t:e.disabled===t:"label"in e&&e.disabled===t}}function c(t){return i(function(e){return e=+e,i(function(n,i){for(var r,o=t([],n.length,e),a=o.length;a--;)n[r=o[a]]&&(n[r]=!(i[r]=n[r]))})})}function h(t){return t&&"undefined"!=typeof t.getElementsByTagName&&t}function d(){}function f(t){for(var e=0,n=t.length,i="";e<n;e++)i+=t[e].value;return i}function p(t,e,n){var i=e.dir,r=e.next,o=r||i,a=n&&"parentNode"===o,s=B++;return e.first?function(e,n,r){for(;e=e[i];)if(1===e.nodeType||a)return t(e,n,r);return!1}:function(e,n,l){var u,c,h,d=[Y,s];if(l){for(;e=e[i];)if((1===e.nodeType||a)&&t(e,n,l))return!0}else for(;e=e[i];)if(1===e.nodeType||a)if(h=e[H]||(e[H]={}),c=h[e.uniqueID]||(h[e.uniqueID]={}),r&&r===e.nodeName.toLowerCase())e=e[i]||e;else{if((u=c[o])&&u[0]===Y&&u[1]===s)return d[2]=u[2];if(c[o]=d,d[2]=t(e,n,l))return!0}return!1}}function g(t){return t.length>1?function(e,n,i){for(var r=t.length;r--;)if(!t[r](e,n,i))return!1;return!0}:t[0]}function m(t,n,i){for(var r=0,o=n.length;r<o;r++)e(t,n[r],i);return i}function v(t,e,n,i,r){for(var o,a=[],s=0,l=t.length,u=null!=e;s<l;s++)(o=t[s])&&(n&&!n(o,i,r)||(a.push(o),u&&e.push(s)));return a}function y(t,e,n,r,o,a){return r&&!r[H]&&(r=y(r)),o&&!o[H]&&(o=y(o,a)),i(function(i,a,s,l){var u,c,h,d=[],f=[],p=a.length,g=i||m(e||"*",s.nodeType?[s]:s,[]),y=!t||!i&&e?g:v(g,d,t,s,l),b=n?o||(i?t:p||r)?[]:a:y;if(n&&n(y,b,s,l),r)for(u=v(b,f),r(u,[],s,l),c=u.length;c--;)(h=u[c])&&(b[f[c]]=!(y[f[c]]=h));if(i){if(o||t){if(o){for(u=[],c=b.length;c--;)(h=b[c])&&u.push(y[c]=h);o(null,b=[],u,l)}for(c=b.length;c--;)(h=b[c])&&(u=o?tt(i,h):d[c])>-1&&(i[u]=!(a[u]=h))}}else b=v(b===a?b.splice(p,b.length):b),o?o(null,a,b,l):J.apply(a,b)})}function b(t){for(var e,n,i,r=t.length,o=k.relative[t[0].type],a=o||k.relative[" "],s=o?1:0,l=p(function(t){return t===e},a,!0),u=p(function(t){return tt(e,t)>-1},a,!0),c=[function(t,n,i){var r=!o&&(i||n!==P)||((e=n).nodeType?l(t,n,i):u(t,n,i));return e=null,r}];s<r;s++)if(n=k.relative[t[s].type])c=[p(g(c),n)];else{if(n=k.filter[t[s].type].apply(null,t[s].matches),n[H]){for(i=++s;i<r&&!k.relative[t[i].type];i++);return y(s>1&&g(c),s>1&&f(t.slice(0,s-1).concat({value:" "===t[s-2].type?"*":""})).replace(st,"$1"),n,s<i&&b(t.slice(s,i)),i<r&&b(t=t.slice(i)),i<r&&f(t))}c.push(n)}return g(c)}function x(t,n){var r=n.length>0,o=t.length>0,a=function(i,a,s,l,u){var c,h,d,f=0,p="0",g=i&&[],m=[],y=P,b=i||o&&k.find.TAG("*",u),x=Y+=null==y?1:Math.random()||.1,_=b.length;for(u&&(P=a===L||a||u);p!==_&&null!=(c=b[p]);p++){if(o&&c){for(h=0,a||c.ownerDocument===L||(I(c),s=!F);d=t[h++];)if(d(c,a||L,s)){l.push(c);break}u&&(Y=x)}r&&((c=!d&&c)&&f--,i&&g.push(c))}if(f+=p,r&&p!==f){for(h=0;d=n[h++];)d(g,m,a,s);if(i){if(f>0)for(;p--;)g[p]||m[p]||(m[p]=X.call(l));m=v(m)}J.apply(l,m),u&&!i&&m.length>0&&f+n.length>1&&e.uniqueSort(l)}return u&&(Y=x,P=y),g};return r?i(a):a}var _,w,k,M,S,C,D,T,P,A,O,I,L,E,F,N,R,z,W,H="sizzle"+1*new Date,j=t.document,Y=0,B=0,$=n(),V=n(),q=n(),U=function(t,e){return t===e&&(O=!0),0},G={}.hasOwnProperty,Z=[],X=Z.pop,Q=Z.push,J=Z.push,K=Z.slice,tt=function(t,e){for(var n=0,i=t.length;n<i;n++)if(t[n]===e)return n;return-1},et="checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",nt="[\\x20\\t\\r\\n\\f]",it="(?:\\\\.|[\\w-]|[^\0-\\xa0])+",rt="\\["+nt+"*("+it+")(?:"+nt+"*([*^$|!~]?=)"+nt+"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|("+it+"))|)"+nt+"*\\]",ot=":("+it+")(?:\\((('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|((?:\\\\.|[^\\\\()[\\]]|"+rt+")*)|.*)\\)|)",at=new RegExp(nt+"+","g"),st=new RegExp("^"+nt+"+|((?:^|[^\\\\])(?:\\\\.)*)"+nt+"+$","g"),lt=new RegExp("^"+nt+"*,"+nt+"*"),ut=new RegExp("^"+nt+"*([>+~]|"+nt+")"+nt+"*"),ct=new RegExp("="+nt+"*([^\\]'\"]*?)"+nt+"*\\]","g"),ht=new RegExp(ot),dt=new RegExp("^"+it+"$"),ft={ID:new RegExp("^#("+it+")"),CLASS:new RegExp("^\\.("+it+")"),TAG:new RegExp("^("+it+"|[*])"),ATTR:new RegExp("^"+rt),PSEUDO:new RegExp("^"+ot),CHILD:new RegExp("^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\("+nt+"*(even|odd|(([+-]|)(\\d*)n|)"+nt+"*(?:([+-]|)"+nt+"*(\\d+)|))"+nt+"*\\)|)","i"),bool:new RegExp("^(?:"+et+")$","i"),needsContext:new RegExp("^"+nt+"*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\("+nt+"*((?:-\\d)?\\d*)"+nt+"*\\)|)(?=[^-]|$)","i")},pt=/^(?:input|select|textarea|button)$/i,gt=/^h\d$/i,mt=/^[^{]+\{\s*\[native \w/,vt=/^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,yt=/[+~]/,bt=new RegExp("\\\\([\\da-f]{1,6}"+nt+"?|("+nt+")|.)","ig"),xt=function(t,e,n){var i="0x"+e-65536;return i!==i||n?e:i<0?String.fromCharCode(i+65536):String.fromCharCode(i>>10|55296,1023&i|56320)},_t=/([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,wt=function(t,e){return e?"\0"===t?"�":t.slice(0,-1)+"\\"+t.charCodeAt(t.length-1).toString(16)+" ":"\\"+t},kt=function(){I()},Mt=p(function(t){return t.disabled===!0&&("form"in t||"label"in t)},{dir:"parentNode",next:"legend"});try{J.apply(Z=K.call(j.childNodes),j.childNodes),Z[j.childNodes.length].nodeType}catch(St){J={apply:Z.length?function(t,e){Q.apply(t,K.call(e))}:function(t,e){for(var n=t.length,i=0;t[n++]=e[i++];);t.length=n-1}}}w=e.support={},S=e.isXML=function(t){var e=t&&(t.ownerDocument||t).documentElement;return!!e&&"HTML"!==e.nodeName},I=e.setDocument=function(t){var e,n,i=t?t.ownerDocument||t:j;return i!==L&&9===i.nodeType&&i.documentElement?(L=i,E=L.documentElement,F=!S(L),j!==L&&(n=L.defaultView)&&n.top!==n&&(n.addEventListener?n.addEventListener("unload",kt,!1):n.attachEvent&&n.attachEvent("onunload",kt)),w.attributes=r(function(t){return t.className="i",!t.getAttribute("className")}),w.getElementsByTagName=r(function(t){return t.appendChild(L.createComment("")),!t.getElementsByTagName("*").length}),w.getElementsByClassName=mt.test(L.getElementsByClassName),w.getById=r(function(t){return E.appendChild(t).id=H,!L.getElementsByName||!L.getElementsByName(H).length}),w.getById?(k.filter.ID=function(t){var e=t.replace(bt,xt);return function(t){return t.getAttribute("id")===e}},k.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&F){var n=e.getElementById(t);return n?[n]:[]}}):(k.filter.ID=function(t){var e=t.replace(bt,xt);return function(t){var n="undefined"!=typeof t.getAttributeNode&&t.getAttributeNode("id");return n&&n.value===e}},k.find.ID=function(t,e){if("undefined"!=typeof e.getElementById&&F){var n,i,r,o=e.getElementById(t);if(o){if(n=o.getAttributeNode("id"),n&&n.value===t)return[o];for(r=e.getElementsByName(t),i=0;o=r[i++];)if(n=o.getAttributeNode("id"),n&&n.value===t)return[o]}return[]}}),k.find.TAG=w.getElementsByTagName?function(t,e){return"undefined"!=typeof e.getElementsByTagName?e.getElementsByTagName(t):w.qsa?e.querySelectorAll(t):void 0}:function(t,e){var n,i=[],r=0,o=e.getElementsByTagName(t);if("*"===t){for(;n=o[r++];)1===n.nodeType&&i.push(n);return i}return o},k.find.CLASS=w.getElementsByClassName&&function(t,e){if("undefined"!=typeof e.getElementsByClassName&&F)return e.getElementsByClassName(t)},R=[],N=[],(w.qsa=mt.test(L.querySelectorAll))&&(r(function(t){E.appendChild(t).innerHTML="<a id='"+H+"'></a><select id='"+H+"-\r\\' msallowcapture=''><option selected=''></option></select>",t.querySelectorAll("[msallowcapture^='']").length&&N.push("[*^$]="+nt+"*(?:''|\"\")"),t.querySelectorAll("[selected]").length||N.push("\\["+nt+"*(?:value|"+et+")"),t.querySelectorAll("[id~="+H+"-]").length||N.push("~="),t.querySelectorAll(":checked").length||N.push(":checked"),t.querySelectorAll("a#"+H+"+*").length||N.push(".#.+[+~]")}),r(function(t){t.innerHTML="<a href='' disabled='disabled'></a><select disabled='disabled'><option/></select>";var e=L.createElement("input");e.setAttribute("type","hidden"),t.appendChild(e).setAttribute("name","D"),t.querySelectorAll("[name=d]").length&&N.push("name"+nt+"*[*^$|!~]?="),2!==t.querySelectorAll(":enabled").length&&N.push(":enabled",":disabled"),E.appendChild(t).disabled=!0,2!==t.querySelectorAll(":disabled").length&&N.push(":enabled",":disabled"),t.querySelectorAll("*,:x"),N.push(",.*:")})),(w.matchesSelector=mt.test(z=E.matches||E.webkitMatchesSelector||E.mozMatchesSelector||E.oMatchesSelector||E.msMatchesSelector))&&r(function(t){w.disconnectedMatch=z.call(t,"*"),z.call(t,"[s!='']:x"),R.push("!=",ot)}),N=N.length&&new RegExp(N.join("|")),R=R.length&&new RegExp(R.join("|")),e=mt.test(E.compareDocumentPosition),W=e||mt.test(E.contains)?function(t,e){var n=9===t.nodeType?t.documentElement:t,i=e&&e.parentNode;return t===i||!(!i||1!==i.nodeType||!(n.contains?n.contains(i):t.compareDocumentPosition&&16&t.compareDocumentPosition(i)))}:function(t,e){if(e)for(;e=e.parentNode;)if(e===t)return!0;return!1},U=e?function(t,e){if(t===e)return O=!0,0;var n=!t.compareDocumentPosition-!e.compareDocumentPosition;return n?n:(n=(t.ownerDocument||t)===(e.ownerDocument||e)?t.compareDocumentPosition(e):1,1&n||!w.sortDetached&&e.compareDocumentPosition(t)===n?t===L||t.ownerDocument===j&&W(j,t)?-1:e===L||e.ownerDocument===j&&W(j,e)?1:A?tt(A,t)-tt(A,e):0:4&n?-1:1)}:function(t,e){if(t===e)return O=!0,0;var n,i=0,r=t.parentNode,o=e.parentNode,s=[t],l=[e];if(!r||!o)return t===L?-1:e===L?1:r?-1:o?1:A?tt(A,t)-tt(A,e):0;if(r===o)return a(t,e);for(n=t;n=n.parentNode;)s.unshift(n);for(n=e;n=n.parentNode;)l.unshift(n);for(;s[i]===l[i];)i++;return i?a(s[i],l[i]):s[i]===j?-1:l[i]===j?1:0},L):L},e.matches=function(t,n){return e(t,null,null,n)},e.matchesSelector=function(t,n){if((t.ownerDocument||t)!==L&&I(t),n=n.replace(ct,"='$1']"),w.matchesSelector&&F&&!q[n+" "]&&(!R||!R.test(n))&&(!N||!N.test(n)))try{var i=z.call(t,n);if(i||w.disconnectedMatch||t.document&&11!==t.document.nodeType)return i}catch(r){}return e(n,L,null,[t]).length>0},e.contains=function(t,e){return(t.ownerDocument||t)!==L&&I(t),W(t,e)},e.attr=function(t,e){(t.ownerDocument||t)!==L&&I(t);var n=k.attrHandle[e.toLowerCase()],i=n&&G.call(k.attrHandle,e.toLowerCase())?n(t,e,!F):void 0;return void 0!==i?i:w.attributes||!F?t.getAttribute(e):(i=t.getAttributeNode(e))&&i.specified?i.value:null},e.escape=function(t){return(t+"").replace(_t,wt)},e.error=function(t){throw new Error("Syntax error, unrecognized expression: "+t)},e.uniqueSort=function(t){var e,n=[],i=0,r=0;if(O=!w.detectDuplicates,A=!w.sortStable&&t.slice(0),t.sort(U),O){for(;e=t[r++];)e===t[r]&&(i=n.push(r));for(;i--;)t.splice(n[i],1)}return A=null,t},M=e.getText=function(t){var e,n="",i=0,r=t.nodeType;if(r){if(1===r||9===r||11===r){if("string"==typeof t.textContent)return t.textContent;for(t=t.firstChild;t;t=t.nextSibling)n+=M(t)}else if(3===r||4===r)return t.nodeValue}else for(;e=t[i++];)n+=M(e);return n},k=e.selectors={cacheLength:50,createPseudo:i,match:ft,attrHandle:{},find:{},relative:{">":{dir:"parentNode",first:!0}," ":{dir:"parentNode"},"+":{dir:"previousSibling",first:!0},"~":{dir:"previousSibling"}},preFilter:{ATTR:function(t){return t[1]=t[1].replace(bt,xt),t[3]=(t[3]||t[4]||t[5]||"").replace(bt,xt),"~="===t[2]&&(t[3]=" "+t[3]+" "),t.slice(0,4)},CHILD:function(t){return t[1]=t[1].toLowerCase(),"nth"===t[1].slice(0,3)?(t[3]||e.error(t[0]),t[4]=+(t[4]?t[5]+(t[6]||1):2*("even"===t[3]||"odd"===t[3])),t[5]=+(t[7]+t[8]||"odd"===t[3])):t[3]&&e.error(t[0]),t},PSEUDO:function(t){var e,n=!t[6]&&t[2];return ft.CHILD.test(t[0])?null:(t[3]?t[2]=t[4]||t[5]||"":n&&ht.test(n)&&(e=C(n,!0))&&(e=n.indexOf(")",n.length-e)-n.length)&&(t[0]=t[0].slice(0,e),
t[2]=n.slice(0,e)),t.slice(0,3))}},filter:{TAG:function(t){var e=t.replace(bt,xt).toLowerCase();return"*"===t?function(){return!0}:function(t){return t.nodeName&&t.nodeName.toLowerCase()===e}},CLASS:function(t){var e=$[t+" "];return e||(e=new RegExp("(^|"+nt+")"+t+"("+nt+"|$)"))&&$(t,function(t){return e.test("string"==typeof t.className&&t.className||"undefined"!=typeof t.getAttribute&&t.getAttribute("class")||"")})},ATTR:function(t,n,i){return function(r){var o=e.attr(r,t);return null==o?"!="===n:!n||(o+="","="===n?o===i:"!="===n?o!==i:"^="===n?i&&0===o.indexOf(i):"*="===n?i&&o.indexOf(i)>-1:"$="===n?i&&o.slice(-i.length)===i:"~="===n?(" "+o.replace(at," ")+" ").indexOf(i)>-1:"|="===n&&(o===i||o.slice(0,i.length+1)===i+"-"))}},CHILD:function(t,e,n,i,r){var o="nth"!==t.slice(0,3),a="last"!==t.slice(-4),s="of-type"===e;return 1===i&&0===r?function(t){return!!t.parentNode}:function(e,n,l){var u,c,h,d,f,p,g=o!==a?"nextSibling":"previousSibling",m=e.parentNode,v=s&&e.nodeName.toLowerCase(),y=!l&&!s,b=!1;if(m){if(o){for(;g;){for(d=e;d=d[g];)if(s?d.nodeName.toLowerCase()===v:1===d.nodeType)return!1;p=g="only"===t&&!p&&"nextSibling"}return!0}if(p=[a?m.firstChild:m.lastChild],a&&y){for(d=m,h=d[H]||(d[H]={}),c=h[d.uniqueID]||(h[d.uniqueID]={}),u=c[t]||[],f=u[0]===Y&&u[1],b=f&&u[2],d=f&&m.childNodes[f];d=++f&&d&&d[g]||(b=f=0)||p.pop();)if(1===d.nodeType&&++b&&d===e){c[t]=[Y,f,b];break}}else if(y&&(d=e,h=d[H]||(d[H]={}),c=h[d.uniqueID]||(h[d.uniqueID]={}),u=c[t]||[],f=u[0]===Y&&u[1],b=f),b===!1)for(;(d=++f&&d&&d[g]||(b=f=0)||p.pop())&&((s?d.nodeName.toLowerCase()!==v:1!==d.nodeType)||!++b||(y&&(h=d[H]||(d[H]={}),c=h[d.uniqueID]||(h[d.uniqueID]={}),c[t]=[Y,b]),d!==e)););return b-=r,b===i||b%i===0&&b/i>=0}}},PSEUDO:function(t,n){var r,o=k.pseudos[t]||k.setFilters[t.toLowerCase()]||e.error("unsupported pseudo: "+t);return o[H]?o(n):o.length>1?(r=[t,t,"",n],k.setFilters.hasOwnProperty(t.toLowerCase())?i(function(t,e){for(var i,r=o(t,n),a=r.length;a--;)i=tt(t,r[a]),t[i]=!(e[i]=r[a])}):function(t){return o(t,0,r)}):o}},pseudos:{not:i(function(t){var e=[],n=[],r=D(t.replace(st,"$1"));return r[H]?i(function(t,e,n,i){for(var o,a=r(t,null,i,[]),s=t.length;s--;)(o=a[s])&&(t[s]=!(e[s]=o))}):function(t,i,o){return e[0]=t,r(e,null,o,n),e[0]=null,!n.pop()}}),has:i(function(t){return function(n){return e(t,n).length>0}}),contains:i(function(t){return t=t.replace(bt,xt),function(e){return(e.textContent||e.innerText||M(e)).indexOf(t)>-1}}),lang:i(function(t){return dt.test(t||"")||e.error("unsupported lang: "+t),t=t.replace(bt,xt).toLowerCase(),function(e){var n;do if(n=F?e.lang:e.getAttribute("xml:lang")||e.getAttribute("lang"))return n=n.toLowerCase(),n===t||0===n.indexOf(t+"-");while((e=e.parentNode)&&1===e.nodeType);return!1}}),target:function(e){var n=t.location&&t.location.hash;return n&&n.slice(1)===e.id},root:function(t){return t===E},focus:function(t){return t===L.activeElement&&(!L.hasFocus||L.hasFocus())&&!!(t.type||t.href||~t.tabIndex)},enabled:u(!1),disabled:u(!0),checked:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&!!t.checked||"option"===e&&!!t.selected},selected:function(t){return t.parentNode&&t.parentNode.selectedIndex,t.selected===!0},empty:function(t){for(t=t.firstChild;t;t=t.nextSibling)if(t.nodeType<6)return!1;return!0},parent:function(t){return!k.pseudos.empty(t)},header:function(t){return gt.test(t.nodeName)},input:function(t){return pt.test(t.nodeName)},button:function(t){var e=t.nodeName.toLowerCase();return"input"===e&&"button"===t.type||"button"===e},text:function(t){var e;return"input"===t.nodeName.toLowerCase()&&"text"===t.type&&(null==(e=t.getAttribute("type"))||"text"===e.toLowerCase())},first:c(function(){return[0]}),last:c(function(t,e){return[e-1]}),eq:c(function(t,e,n){return[n<0?n+e:n]}),even:c(function(t,e){for(var n=0;n<e;n+=2)t.push(n);return t}),odd:c(function(t,e){for(var n=1;n<e;n+=2)t.push(n);return t}),lt:c(function(t,e,n){for(var i=n<0?n+e:n;--i>=0;)t.push(i);return t}),gt:c(function(t,e,n){for(var i=n<0?n+e:n;++i<e;)t.push(i);return t})}},k.pseudos.nth=k.pseudos.eq;for(_ in{radio:!0,checkbox:!0,file:!0,password:!0,image:!0})k.pseudos[_]=s(_);for(_ in{submit:!0,reset:!0})k.pseudos[_]=l(_);return d.prototype=k.filters=k.pseudos,k.setFilters=new d,C=e.tokenize=function(t,n){var i,r,o,a,s,l,u,c=V[t+" "];if(c)return n?0:c.slice(0);for(s=t,l=[],u=k.preFilter;s;){i&&!(r=lt.exec(s))||(r&&(s=s.slice(r[0].length)||s),l.push(o=[])),i=!1,(r=ut.exec(s))&&(i=r.shift(),o.push({value:i,type:r[0].replace(st," ")}),s=s.slice(i.length));for(a in k.filter)!(r=ft[a].exec(s))||u[a]&&!(r=u[a](r))||(i=r.shift(),o.push({value:i,type:a,matches:r}),s=s.slice(i.length));if(!i)break}return n?s.length:s?e.error(t):V(t,l).slice(0)},D=e.compile=function(t,e){var n,i=[],r=[],o=q[t+" "];if(!o){for(e||(e=C(t)),n=e.length;n--;)o=b(e[n]),o[H]?i.push(o):r.push(o);o=q(t,x(r,i)),o.selector=t}return o},T=e.select=function(t,e,n,i){var r,o,a,s,l,u="function"==typeof t&&t,c=!i&&C(t=u.selector||t);if(n=n||[],1===c.length){if(o=c[0]=c[0].slice(0),o.length>2&&"ID"===(a=o[0]).type&&9===e.nodeType&&F&&k.relative[o[1].type]){if(e=(k.find.ID(a.matches[0].replace(bt,xt),e)||[])[0],!e)return n;u&&(e=e.parentNode),t=t.slice(o.shift().value.length)}for(r=ft.needsContext.test(t)?0:o.length;r--&&(a=o[r],!k.relative[s=a.type]);)if((l=k.find[s])&&(i=l(a.matches[0].replace(bt,xt),yt.test(o[0].type)&&h(e.parentNode)||e))){if(o.splice(r,1),t=i.length&&f(o),!t)return J.apply(n,i),n;break}}return(u||D(t,c))(i,e,!F,n,!e||yt.test(t)&&h(e.parentNode)||e),n},w.sortStable=H.split("").sort(U).join("")===H,w.detectDuplicates=!!O,I(),w.sortDetached=r(function(t){return 1&t.compareDocumentPosition(L.createElement("fieldset"))}),r(function(t){return t.innerHTML="<a href='#'></a>","#"===t.firstChild.getAttribute("href")})||o("type|href|height|width",function(t,e,n){if(!n)return t.getAttribute(e,"type"===e.toLowerCase()?1:2)}),w.attributes&&r(function(t){return t.innerHTML="<input/>",t.firstChild.setAttribute("value",""),""===t.firstChild.getAttribute("value")})||o("value",function(t,e,n){if(!n&&"input"===t.nodeName.toLowerCase())return t.defaultValue}),r(function(t){return null==t.getAttribute("disabled")})||o(et,function(t,e,n){var i;if(!n)return t[e]===!0?e.toLowerCase():(i=t.getAttributeNode(e))&&i.specified?i.value:null}),e}(t);wt.find=Mt,wt.expr=Mt.selectors,wt.expr[":"]=wt.expr.pseudos,wt.uniqueSort=wt.unique=Mt.uniqueSort,wt.text=Mt.getText,wt.isXMLDoc=Mt.isXML,wt.contains=Mt.contains,wt.escapeSelector=Mt.escape;var St=function(t,e,n){for(var i=[],r=void 0!==n;(t=t[e])&&9!==t.nodeType;)if(1===t.nodeType){if(r&&wt(t).is(n))break;i.push(t)}return i},Ct=function(t,e){for(var n=[];t;t=t.nextSibling)1===t.nodeType&&t!==e&&n.push(t);return n},Dt=wt.expr.match.needsContext,Tt=/^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i;wt.filter=function(t,e,n){var i=e[0];return n&&(t=":not("+t+")"),1===e.length&&1===i.nodeType?wt.find.matchesSelector(i,t)?[i]:[]:wt.find.matches(t,wt.grep(e,function(t){return 1===t.nodeType}))},wt.fn.extend({find:function(t){var e,n,i=this.length,r=this;if("string"!=typeof t)return this.pushStack(wt(t).filter(function(){for(e=0;e<i;e++)if(wt.contains(r[e],this))return!0}));for(n=this.pushStack([]),e=0;e<i;e++)wt.find(t,r[e],n);return i>1?wt.uniqueSort(n):n},filter:function(t){return this.pushStack(a(this,t||[],!1))},not:function(t){return this.pushStack(a(this,t||[],!0))},is:function(t){return!!a(this,"string"==typeof t&&Dt.test(t)?wt(t):t||[],!1).length}});var Pt,At=/^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,Ot=wt.fn.init=function(t,e,n){var i,r;if(!t)return this;if(n=n||Pt,"string"==typeof t){if(i="<"===t[0]&&">"===t[t.length-1]&&t.length>=3?[null,t,null]:At.exec(t),!i||!i[1]&&e)return!e||e.jquery?(e||n).find(t):this.constructor(e).find(t);if(i[1]){if(e=e instanceof wt?e[0]:e,wt.merge(this,wt.parseHTML(i[1],e&&e.nodeType?e.ownerDocument||e:at,!0)),Tt.test(i[1])&&wt.isPlainObject(e))for(i in e)yt(this[i])?this[i](e[i]):this.attr(i,e[i]);return this}return r=at.getElementById(i[2]),r&&(this[0]=r,this.length=1),this}return t.nodeType?(this[0]=t,this.length=1,this):yt(t)?void 0!==n.ready?n.ready(t):t(wt):wt.makeArray(t,this)};Ot.prototype=wt.fn,Pt=wt(at);var It=/^(?:parents|prev(?:Until|All))/,Lt={children:!0,contents:!0,next:!0,prev:!0};wt.fn.extend({has:function(t){var e=wt(t,this),n=e.length;return this.filter(function(){for(var t=0;t<n;t++)if(wt.contains(this,e[t]))return!0})},closest:function(t,e){var n,i=0,r=this.length,o=[],a="string"!=typeof t&&wt(t);if(!Dt.test(t))for(;i<r;i++)for(n=this[i];n&&n!==e;n=n.parentNode)if(n.nodeType<11&&(a?a.index(n)>-1:1===n.nodeType&&wt.find.matchesSelector(n,t))){o.push(n);break}return this.pushStack(o.length>1?wt.uniqueSort(o):o)},index:function(t){return t?"string"==typeof t?ht.call(wt(t),this[0]):ht.call(this,t.jquery?t[0]:t):this[0]&&this[0].parentNode?this.first().prevAll().length:-1},add:function(t,e){return this.pushStack(wt.uniqueSort(wt.merge(this.get(),wt(t,e))))},addBack:function(t){return this.add(null==t?this.prevObject:this.prevObject.filter(t))}}),wt.each({parent:function(t){var e=t.parentNode;return e&&11!==e.nodeType?e:null},parents:function(t){return St(t,"parentNode")},parentsUntil:function(t,e,n){return St(t,"parentNode",n)},next:function(t){return s(t,"nextSibling")},prev:function(t){return s(t,"previousSibling")},nextAll:function(t){return St(t,"nextSibling")},prevAll:function(t){return St(t,"previousSibling")},nextUntil:function(t,e,n){return St(t,"nextSibling",n)},prevUntil:function(t,e,n){return St(t,"previousSibling",n)},siblings:function(t){return Ct((t.parentNode||{}).firstChild,t)},children:function(t){return Ct(t.firstChild)},contents:function(t){return o(t,"iframe")?t.contentDocument:(o(t,"template")&&(t=t.content||t),wt.merge([],t.childNodes))}},function(t,e){wt.fn[t]=function(n,i){var r=wt.map(this,e,n);return"Until"!==t.slice(-5)&&(i=n),i&&"string"==typeof i&&(r=wt.filter(i,r)),this.length>1&&(Lt[t]||wt.uniqueSort(r),It.test(t)&&r.reverse()),this.pushStack(r)}});var Et=/[^\x20\t\r\n\f]+/g;wt.Callbacks=function(t){t="string"==typeof t?l(t):wt.extend({},t);var e,n,r,o,a=[],s=[],u=-1,c=function(){for(o=o||t.once,r=e=!0;s.length;u=-1)for(n=s.shift();++u<a.length;)a[u].apply(n[0],n[1])===!1&&t.stopOnFalse&&(u=a.length,n=!1);t.memory||(n=!1),e=!1,o&&(a=n?[]:"")},h={add:function(){return a&&(n&&!e&&(u=a.length-1,s.push(n)),function r(e){wt.each(e,function(e,n){yt(n)?t.unique&&h.has(n)||a.push(n):n&&n.length&&"string"!==i(n)&&r(n)})}(arguments),n&&!e&&c()),this},remove:function(){return wt.each(arguments,function(t,e){for(var n;(n=wt.inArray(e,a,n))>-1;)a.splice(n,1),n<=u&&u--}),this},has:function(t){return t?wt.inArray(t,a)>-1:a.length>0},empty:function(){return a&&(a=[]),this},disable:function(){return o=s=[],a=n="",this},disabled:function(){return!a},lock:function(){return o=s=[],n||e||(a=n=""),this},locked:function(){return!!o},fireWith:function(t,n){return o||(n=n||[],n=[t,n.slice?n.slice():n],s.push(n),e||c()),this},fire:function(){return h.fireWith(this,arguments),this},fired:function(){return!!r}};return h},wt.extend({Deferred:function(e){var n=[["notify","progress",wt.Callbacks("memory"),wt.Callbacks("memory"),2],["resolve","done",wt.Callbacks("once memory"),wt.Callbacks("once memory"),0,"resolved"],["reject","fail",wt.Callbacks("once memory"),wt.Callbacks("once memory"),1,"rejected"]],i="pending",r={state:function(){return i},always:function(){return o.done(arguments).fail(arguments),this},"catch":function(t){return r.then(null,t)},pipe:function(){var t=arguments;return wt.Deferred(function(e){wt.each(n,function(n,i){var r=yt(t[i[4]])&&t[i[4]];o[i[1]](function(){var t=r&&r.apply(this,arguments);t&&yt(t.promise)?t.promise().progress(e.notify).done(e.resolve).fail(e.reject):e[i[0]+"With"](this,r?[t]:arguments)})}),t=null}).promise()},then:function(e,i,r){function o(e,n,i,r){return function(){var s=this,l=arguments,h=function(){var t,h;if(!(e<a)){if(t=i.apply(s,l),t===n.promise())throw new TypeError("Thenable self-resolution");h=t&&("object"==typeof t||"function"==typeof t)&&t.then,yt(h)?r?h.call(t,o(a,n,u,r),o(a,n,c,r)):(a++,h.call(t,o(a,n,u,r),o(a,n,c,r),o(a,n,u,n.notifyWith))):(i!==u&&(s=void 0,l=[t]),(r||n.resolveWith)(s,l))}},d=r?h:function(){try{h()}catch(t){wt.Deferred.exceptionHook&&wt.Deferred.exceptionHook(t,d.stackTrace),e+1>=a&&(i!==c&&(s=void 0,l=[t]),n.rejectWith(s,l))}};e?d():(wt.Deferred.getStackHook&&(d.stackTrace=wt.Deferred.getStackHook()),t.setTimeout(d))}}var a=0;return wt.Deferred(function(t){n[0][3].add(o(0,t,yt(r)?r:u,t.notifyWith)),n[1][3].add(o(0,t,yt(e)?e:u)),n[2][3].add(o(0,t,yt(i)?i:c))}).promise()},promise:function(t){return null!=t?wt.extend(t,r):r}},o={};return wt.each(n,function(t,e){var a=e[2],s=e[5];r[e[1]]=a.add,s&&a.add(function(){i=s},n[3-t][2].disable,n[3-t][3].disable,n[0][2].lock,n[0][3].lock),a.add(e[3].fire),o[e[0]]=function(){return o[e[0]+"With"](this===o?void 0:this,arguments),this},o[e[0]+"With"]=a.fireWith}),r.promise(o),e&&e.call(o,o),o},when:function(t){var e=arguments.length,n=e,i=Array(n),r=lt.call(arguments),o=wt.Deferred(),a=function(t){return function(n){i[t]=this,r[t]=arguments.length>1?lt.call(arguments):n,--e||o.resolveWith(i,r)}};if(e<=1&&(h(t,o.done(a(n)).resolve,o.reject,!e),"pending"===o.state()||yt(r[n]&&r[n].then)))return o.then();for(;n--;)h(r[n],a(n),o.reject);return o.promise()}});var Ft=/^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;wt.Deferred.exceptionHook=function(e,n){t.console&&t.console.warn&&e&&Ft.test(e.name)&&t.console.warn("jQuery.Deferred exception: "+e.message,e.stack,n)},wt.readyException=function(e){t.setTimeout(function(){throw e})};var Nt=wt.Deferred();wt.fn.ready=function(t){return Nt.then(t)["catch"](function(t){wt.readyException(t)}),this},wt.extend({isReady:!1,readyWait:1,ready:function(t){(t===!0?--wt.readyWait:wt.isReady)||(wt.isReady=!0,t!==!0&&--wt.readyWait>0||Nt.resolveWith(at,[wt]))}}),wt.ready.then=Nt.then,"complete"===at.readyState||"loading"!==at.readyState&&!at.documentElement.doScroll?t.setTimeout(wt.ready):(at.addEventListener("DOMContentLoaded",d),t.addEventListener("load",d));var Rt=function(t,e,n,r,o,a,s){var l=0,u=t.length,c=null==n;if("object"===i(n)){o=!0;for(l in n)Rt(t,e,l,n[l],!0,a,s)}else if(void 0!==r&&(o=!0,yt(r)||(s=!0),c&&(s?(e.call(t,r),e=null):(c=e,e=function(t,e,n){return c.call(wt(t),n)})),e))for(;l<u;l++)e(t[l],n,s?r:r.call(t[l],l,e(t[l],n)));return o?t:c?e.call(t):u?e(t[0],n):a},zt=/^-ms-/,Wt=/-([a-z])/g,Ht=function(t){return 1===t.nodeType||9===t.nodeType||!+t.nodeType};g.uid=1,g.prototype={cache:function(t){var e=t[this.expando];return e||(e={},Ht(t)&&(t.nodeType?t[this.expando]=e:Object.defineProperty(t,this.expando,{value:e,configurable:!0}))),e},set:function(t,e,n){var i,r=this.cache(t);if("string"==typeof e)r[p(e)]=n;else for(i in e)r[p(i)]=e[i];return r},get:function(t,e){return void 0===e?this.cache(t):t[this.expando]&&t[this.expando][p(e)]},access:function(t,e,n){return void 0===e||e&&"string"==typeof e&&void 0===n?this.get(t,e):(this.set(t,e,n),void 0!==n?n:e)},remove:function(t,e){var n,i=t[this.expando];if(void 0!==i){if(void 0!==e){Array.isArray(e)?e=e.map(p):(e=p(e),e=e in i?[e]:e.match(Et)||[]),n=e.length;for(;n--;)delete i[e[n]]}(void 0===e||wt.isEmptyObject(i))&&(t.nodeType?t[this.expando]=void 0:delete t[this.expando])}},hasData:function(t){var e=t[this.expando];return void 0!==e&&!wt.isEmptyObject(e)}};var jt=new g,Yt=new g,Bt=/^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,$t=/[A-Z]/g;wt.extend({hasData:function(t){return Yt.hasData(t)||jt.hasData(t)},data:function(t,e,n){return Yt.access(t,e,n)},removeData:function(t,e){Yt.remove(t,e)},_data:function(t,e,n){return jt.access(t,e,n)},_removeData:function(t,e){jt.remove(t,e)}}),wt.fn.extend({data:function(t,e){var n,i,r,o=this[0],a=o&&o.attributes;if(void 0===t){if(this.length&&(r=Yt.get(o),1===o.nodeType&&!jt.get(o,"hasDataAttrs"))){for(n=a.length;n--;)a[n]&&(i=a[n].name,0===i.indexOf("data-")&&(i=p(i.slice(5)),v(o,i,r[i])));jt.set(o,"hasDataAttrs",!0)}return r}return"object"==typeof t?this.each(function(){Yt.set(this,t)}):Rt(this,function(e){var n;if(o&&void 0===e){if(n=Yt.get(o,t),void 0!==n)return n;if(n=v(o,t),void 0!==n)return n}else this.each(function(){Yt.set(this,t,e)})},null,e,arguments.length>1,null,!0)},removeData:function(t){return this.each(function(){Yt.remove(this,t)})}}),wt.extend({queue:function(t,e,n){var i;if(t)return e=(e||"fx")+"queue",i=jt.get(t,e),n&&(!i||Array.isArray(n)?i=jt.access(t,e,wt.makeArray(n)):i.push(n)),i||[]},dequeue:function(t,e){e=e||"fx";var n=wt.queue(t,e),i=n.length,r=n.shift(),o=wt._queueHooks(t,e),a=function(){wt.dequeue(t,e)};"inprogress"===r&&(r=n.shift(),i--),r&&("fx"===e&&n.unshift("inprogress"),delete o.stop,r.call(t,a,o)),!i&&o&&o.empty.fire()},_queueHooks:function(t,e){var n=e+"queueHooks";return jt.get(t,n)||jt.access(t,n,{empty:wt.Callbacks("once memory").add(function(){jt.remove(t,[e+"queue",n])})})}}),wt.fn.extend({queue:function(t,e){var n=2;return"string"!=typeof t&&(e=t,t="fx",n--),arguments.length<n?wt.queue(this[0],t):void 0===e?this:this.each(function(){var n=wt.queue(this,t,e);wt._queueHooks(this,t),"fx"===t&&"inprogress"!==n[0]&&wt.dequeue(this,t)})},dequeue:function(t){return this.each(function(){wt.dequeue(this,t)})},clearQueue:function(t){return this.queue(t||"fx",[])},promise:function(t,e){var n,i=1,r=wt.Deferred(),o=this,a=this.length,s=function(){--i||r.resolveWith(o,[o])};for("string"!=typeof t&&(e=t,t=void 0),t=t||"fx";a--;)n=jt.get(o[a],t+"queueHooks"),n&&n.empty&&(i++,n.empty.add(s));return s(),r.promise(e)}});var Vt=/[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/.source,qt=new RegExp("^(?:([+-])=|)("+Vt+")([a-z%]*)$","i"),Ut=["Top","Right","Bottom","Left"],Gt=function(t,e){return t=e||t,"none"===t.style.display||""===t.style.display&&wt.contains(t.ownerDocument,t)&&"none"===wt.css(t,"display")},Zt=function(t,e,n,i){var r,o,a={};for(o in e)a[o]=t.style[o],t.style[o]=e[o];r=n.apply(t,i||[]);for(o in e)t.style[o]=a[o];return r},Xt={};wt.fn.extend({show:function(){return x(this,!0)},hide:function(){return x(this)},toggle:function(t){return"boolean"==typeof t?t?this.show():this.hide():this.each(function(){Gt(this)?wt(this).show():wt(this).hide()})}});var Qt=/^(?:checkbox|radio)$/i,Jt=/<([a-z][^\/\0>\x20\t\r\n\f]+)/i,Kt=/^$|^module$|\/(?:java|ecma)script/i,te={option:[1,"<select multiple='multiple'>","</select>"],thead:[1,"<table>","</table>"],col:[2,"<table><colgroup>","</colgroup></table>"],tr:[2,"<table><tbody>","</tbody></table>"],td:[3,"<table><tbody><tr>","</tr></tbody></table>"],_default:[0,"",""]};te.optgroup=te.option,te.tbody=te.tfoot=te.colgroup=te.caption=te.thead,te.th=te.td;var ee=/<|&#?\w+;/;!function(){var t=at.createDocumentFragment(),e=t.appendChild(at.createElement("div")),n=at.createElement("input");n.setAttribute("type","radio"),n.setAttribute("checked","checked"),n.setAttribute("name","t"),e.appendChild(n),vt.checkClone=e.cloneNode(!0).cloneNode(!0).lastChild.checked,e.innerHTML="<textarea>x</textarea>",vt.noCloneChecked=!!e.cloneNode(!0).lastChild.defaultValue}();var ne=at.documentElement,ie=/^key/,re=/^(?:mouse|pointer|contextmenu|drag|drop)|click/,oe=/^([^.]*)(?:\.(.+)|)/;wt.event={global:{},add:function(t,e,n,i,r){var o,a,s,l,u,c,h,d,f,p,g,m=jt.get(t);if(m)for(n.handler&&(o=n,n=o.handler,r=o.selector),r&&wt.find.matchesSelector(ne,r),n.guid||(n.guid=wt.guid++),(l=m.events)||(l=m.events={}),(a=m.handle)||(a=m.handle=function(e){return"undefined"!=typeof wt&&wt.event.triggered!==e.type?wt.event.dispatch.apply(t,arguments):void 0}),e=(e||"").match(Et)||[""],u=e.length;u--;)s=oe.exec(e[u])||[],f=g=s[1],p=(s[2]||"").split(".").sort(),f&&(h=wt.event.special[f]||{},f=(r?h.delegateType:h.bindType)||f,h=wt.event.special[f]||{},c=wt.extend({type:f,origType:g,data:i,handler:n,guid:n.guid,selector:r,needsContext:r&&wt.expr.match.needsContext.test(r),namespace:p.join(".")},o),(d=l[f])||(d=l[f]=[],d.delegateCount=0,h.setup&&h.setup.call(t,i,p,a)!==!1||t.addEventListener&&t.addEventListener(f,a)),h.add&&(h.add.call(t,c),c.handler.guid||(c.handler.guid=n.guid)),r?d.splice(d.delegateCount++,0,c):d.push(c),wt.event.global[f]=!0)},remove:function(t,e,n,i,r){var o,a,s,l,u,c,h,d,f,p,g,m=jt.hasData(t)&&jt.get(t);if(m&&(l=m.events)){for(e=(e||"").match(Et)||[""],u=e.length;u--;)if(s=oe.exec(e[u])||[],f=g=s[1],p=(s[2]||"").split(".").sort(),f){for(h=wt.event.special[f]||{},f=(i?h.delegateType:h.bindType)||f,d=l[f]||[],s=s[2]&&new RegExp("(^|\\.)"+p.join("\\.(?:.*\\.|)")+"(\\.|$)"),a=o=d.length;o--;)c=d[o],!r&&g!==c.origType||n&&n.guid!==c.guid||s&&!s.test(c.namespace)||i&&i!==c.selector&&("**"!==i||!c.selector)||(d.splice(o,1),c.selector&&d.delegateCount--,h.remove&&h.remove.call(t,c));a&&!d.length&&(h.teardown&&h.teardown.call(t,p,m.handle)!==!1||wt.removeEvent(t,f,m.handle),delete l[f])}else for(f in l)wt.event.remove(t,f+e[u],n,i,!0);wt.isEmptyObject(l)&&jt.remove(t,"handle events")}},dispatch:function(t){var e,n,i,r,o,a,s=wt.event.fix(t),l=new Array(arguments.length),u=(jt.get(this,"events")||{})[s.type]||[],c=wt.event.special[s.type]||{};for(l[0]=s,e=1;e<arguments.length;e++)l[e]=arguments[e];if(s.delegateTarget=this,!c.preDispatch||c.preDispatch.call(this,s)!==!1){for(a=wt.event.handlers.call(this,s,u),e=0;(r=a[e++])&&!s.isPropagationStopped();)for(s.currentTarget=r.elem,n=0;(o=r.handlers[n++])&&!s.isImmediatePropagationStopped();)s.rnamespace&&!s.rnamespace.test(o.namespace)||(s.handleObj=o,s.data=o.data,i=((wt.event.special[o.origType]||{}).handle||o.handler).apply(r.elem,l),void 0!==i&&(s.result=i)===!1&&(s.preventDefault(),s.stopPropagation()));return c.postDispatch&&c.postDispatch.call(this,s),s.result}},handlers:function(t,e){var n,i,r,o,a,s=[],l=e.delegateCount,u=t.target;if(l&&u.nodeType&&!("click"===t.type&&t.button>=1))for(;u!==this;u=u.parentNode||this)if(1===u.nodeType&&("click"!==t.type||u.disabled!==!0)){for(o=[],a={},n=0;n<l;n++)i=e[n],r=i.selector+" ",void 0===a[r]&&(a[r]=i.needsContext?wt(r,this).index(u)>-1:wt.find(r,this,null,[u]).length),a[r]&&o.push(i);o.length&&s.push({elem:u,handlers:o})}return u=this,l<e.length&&s.push({elem:u,handlers:e.slice(l)}),s},addProp:function(t,e){Object.defineProperty(wt.Event.prototype,t,{enumerable:!0,configurable:!0,get:yt(e)?function(){if(this.originalEvent)return e(this.originalEvent)}:function(){if(this.originalEvent)return this.originalEvent[t]},set:function(e){Object.defineProperty(this,t,{enumerable:!0,configurable:!0,writable:!0,value:e})}})},fix:function(t){return t[wt.expando]?t:new wt.Event(t)},special:{load:{noBubble:!0},focus:{trigger:function(){if(this!==C()&&this.focus)return this.focus(),!1},delegateType:"focusin"},blur:{trigger:function(){if(this===C()&&this.blur)return this.blur(),!1},delegateType:"focusout"},click:{trigger:function(){if("checkbox"===this.type&&this.click&&o(this,"input"))return this.click(),!1},_default:function(t){return o(t.target,"a")}},beforeunload:{postDispatch:function(t){void 0!==t.result&&t.originalEvent&&(t.originalEvent.returnValue=t.result)}}}},wt.removeEvent=function(t,e,n){t.removeEventListener&&t.removeEventListener(e,n)},wt.Event=function(t,e){return this instanceof wt.Event?(t&&t.type?(this.originalEvent=t,this.type=t.type,this.isDefaultPrevented=t.defaultPrevented||void 0===t.defaultPrevented&&t.returnValue===!1?M:S,this.target=t.target&&3===t.target.nodeType?t.target.parentNode:t.target,this.currentTarget=t.currentTarget,this.relatedTarget=t.relatedTarget):this.type=t,e&&wt.extend(this,e),this.timeStamp=t&&t.timeStamp||Date.now(),void(this[wt.expando]=!0)):new wt.Event(t,e)},wt.Event.prototype={constructor:wt.Event,isDefaultPrevented:S,isPropagationStopped:S,isImmediatePropagationStopped:S,isSimulated:!1,preventDefault:function(){var t=this.originalEvent;this.isDefaultPrevented=M,t&&!this.isSimulated&&t.preventDefault()},stopPropagation:function(){var t=this.originalEvent;this.isPropagationStopped=M,t&&!this.isSimulated&&t.stopPropagation()},stopImmediatePropagation:function(){var t=this.originalEvent;this.isImmediatePropagationStopped=M,t&&!this.isSimulated&&t.stopImmediatePropagation(),this.stopPropagation()}},wt.each({altKey:!0,bubbles:!0,cancelable:!0,changedTouches:!0,ctrlKey:!0,detail:!0,eventPhase:!0,metaKey:!0,pageX:!0,pageY:!0,shiftKey:!0,view:!0,"char":!0,charCode:!0,key:!0,keyCode:!0,button:!0,buttons:!0,clientX:!0,clientY:!0,offsetX:!0,offsetY:!0,pointerId:!0,pointerType:!0,screenX:!0,screenY:!0,targetTouches:!0,toElement:!0,touches:!0,which:function(t){var e=t.button;return null==t.which&&ie.test(t.type)?null!=t.charCode?t.charCode:t.keyCode:!t.which&&void 0!==e&&re.test(t.type)?1&e?1:2&e?3:4&e?2:0:t.which}},wt.event.addProp),wt.each({mouseenter:"mouseover",mouseleave:"mouseout",pointerenter:"pointerover",pointerleave:"pointerout"},function(t,e){wt.event.special[t]={delegateType:e,bindType:e,handle:function(t){var n,i=this,r=t.relatedTarget,o=t.handleObj;return r&&(r===i||wt.contains(i,r))||(t.type=o.origType,n=o.handler.apply(this,arguments),t.type=e),n}}}),wt.fn.extend({on:function(t,e,n,i){return D(this,t,e,n,i)},one:function(t,e,n,i){return D(this,t,e,n,i,1)},off:function(t,e,n){var i,r;if(t&&t.preventDefault&&t.handleObj)return i=t.handleObj,wt(t.delegateTarget).off(i.namespace?i.origType+"."+i.namespace:i.origType,i.selector,i.handler),this;if("object"==typeof t){for(r in t)this.off(r,e,t[r]);return this}return e!==!1&&"function"!=typeof e||(n=e,e=void 0),n===!1&&(n=S),this.each(function(){wt.event.remove(this,t,n,e)})}});var ae=/<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,se=/<script|<style|<link/i,le=/checked\s*(?:[^=]|=\s*.checked.)/i,ue=/^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;wt.extend({htmlPrefilter:function(t){return t.replace(ae,"<$1></$2>")},clone:function(t,e,n){var i,r,o,a,s=t.cloneNode(!0),l=wt.contains(t.ownerDocument,t);if(!(vt.noCloneChecked||1!==t.nodeType&&11!==t.nodeType||wt.isXMLDoc(t)))for(a=_(s),o=_(t),i=0,r=o.length;i<r;i++)I(o[i],a[i]);if(e)if(n)for(o=o||_(t),a=a||_(s),i=0,r=o.length;i<r;i++)O(o[i],a[i]);else O(t,s);return a=_(s,"script"),a.length>0&&w(a,!l&&_(t,"script")),s},cleanData:function(t){for(var e,n,i,r=wt.event.special,o=0;void 0!==(n=t[o]);o++)if(Ht(n)){if(e=n[jt.expando]){if(e.events)for(i in e.events)r[i]?wt.event.remove(n,i):wt.removeEvent(n,i,e.handle);n[jt.expando]=void 0}n[Yt.expando]&&(n[Yt.expando]=void 0)}}}),wt.fn.extend({detach:function(t){return E(this,t,!0)},remove:function(t){return E(this,t)},text:function(t){return Rt(this,function(t){return void 0===t?wt.text(this):this.empty().each(function(){1!==this.nodeType&&11!==this.nodeType&&9!==this.nodeType||(this.textContent=t)})},null,t,arguments.length)},append:function(){return L(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=T(this,t);e.appendChild(t)}})},prepend:function(){return L(this,arguments,function(t){if(1===this.nodeType||11===this.nodeType||9===this.nodeType){var e=T(this,t);e.insertBefore(t,e.firstChild)}})},before:function(){return L(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this)})},after:function(){return L(this,arguments,function(t){this.parentNode&&this.parentNode.insertBefore(t,this.nextSibling)})},empty:function(){for(var t,e=0;null!=(t=this[e]);e++)1===t.nodeType&&(wt.cleanData(_(t,!1)),t.textContent="");return this},clone:function(t,e){return t=null!=t&&t,e=null==e?t:e,this.map(function(){return wt.clone(this,t,e)})},html:function(t){return Rt(this,function(t){var e=this[0]||{},n=0,i=this.length;if(void 0===t&&1===e.nodeType)return e.innerHTML;if("string"==typeof t&&!se.test(t)&&!te[(Jt.exec(t)||["",""])[1].toLowerCase()]){t=wt.htmlPrefilter(t);try{for(;n<i;n++)e=this[n]||{},1===e.nodeType&&(wt.cleanData(_(e,!1)),e.innerHTML=t);e=0}catch(r){}}e&&this.empty().append(t)},null,t,arguments.length)},replaceWith:function(){var t=[];return L(this,arguments,function(e){var n=this.parentNode;wt.inArray(this,t)<0&&(wt.cleanData(_(this)),n&&n.replaceChild(e,this))},t)}}),wt.each({appendTo:"append",prependTo:"prepend",insertBefore:"before",insertAfter:"after",replaceAll:"replaceWith"},function(t,e){wt.fn[t]=function(t){for(var n,i=[],r=wt(t),o=r.length-1,a=0;a<=o;a++)n=a===o?this:this.clone(!0),wt(r[a])[e](n),ct.apply(i,n.get());return this.pushStack(i)}});var ce=new RegExp("^("+Vt+")(?!px)[a-z%]+$","i"),he=function(e){var n=e.ownerDocument.defaultView;return n&&n.opener||(n=t),n.getComputedStyle(e)},de=new RegExp(Ut.join("|"),"i");!function(){function e(){if(u){l.style.cssText="position:absolute;left:-11111px;width:60px;margin-top:1px;padding:0;border:0",u.style.cssText="position:relative;display:block;box-sizing:border-box;overflow:scroll;margin:auto;border:1px;padding:1px;width:60%;top:1%",ne.appendChild(l).appendChild(u);var e=t.getComputedStyle(u);i="1%"!==e.top,s=12===n(e.marginLeft),u.style.right="60%",a=36===n(e.right),r=36===n(e.width),u.style.position="absolute",o=36===u.offsetWidth||"absolute",ne.removeChild(l),u=null}}function n(t){return Math.round(parseFloat(t))}var i,r,o,a,s,l=at.createElement("div"),u=at.createElement("div");u.style&&(u.style.backgroundClip="content-box",u.cloneNode(!0).style.backgroundClip="",vt.clearCloneStyle="content-box"===u.style.backgroundClip,wt.extend(vt,{boxSizingReliable:function(){return e(),r},pixelBoxStyles:function(){return e(),a},pixelPosition:function(){return e(),i},reliableMarginLeft:function(){return e(),s},scrollboxSize:function(){return e(),o}}))}();var fe=/^(none|table(?!-c[ea]).+)/,pe=/^--/,ge={position:"absolute",visibility:"hidden",display:"block"},me={letterSpacing:"0",fontWeight:"400"},ve=["Webkit","Moz","ms"],ye=at.createElement("div").style;wt.extend({cssHooks:{opacity:{get:function(t,e){if(e){var n=F(t,"opacity");return""===n?"1":n}}}},cssNumber:{animationIterationCount:!0,columnCount:!0,fillOpacity:!0,flexGrow:!0,flexShrink:!0,fontWeight:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,widows:!0,zIndex:!0,zoom:!0},cssProps:{},style:function(t,e,n,i){if(t&&3!==t.nodeType&&8!==t.nodeType&&t.style){var r,o,a,s=p(e),l=pe.test(e),u=t.style;return l||(e=z(s)),a=wt.cssHooks[e]||wt.cssHooks[s],void 0===n?a&&"get"in a&&void 0!==(r=a.get(t,!1,i))?r:u[e]:(o=typeof n,"string"===o&&(r=qt.exec(n))&&r[1]&&(n=y(t,e,r),o="number"),void(null!=n&&n===n&&("number"===o&&(n+=r&&r[3]||(wt.cssNumber[s]?"":"px")),vt.clearCloneStyle||""!==n||0!==e.indexOf("background")||(u[e]="inherit"),a&&"set"in a&&void 0===(n=a.set(t,n,i))||(l?u.setProperty(e,n):u[e]=n))))}},css:function(t,e,n,i){var r,o,a,s=p(e),l=pe.test(e);return l||(e=z(s)),a=wt.cssHooks[e]||wt.cssHooks[s],a&&"get"in a&&(r=a.get(t,!0,n)),void 0===r&&(r=F(t,e,i)),"normal"===r&&e in me&&(r=me[e]),""===n||n?(o=parseFloat(r),n===!0||isFinite(o)?o||0:r):r}}),wt.each(["height","width"],function(t,e){wt.cssHooks[e]={get:function(t,n,i){if(n)return!fe.test(wt.css(t,"display"))||t.getClientRects().length&&t.getBoundingClientRect().width?j(t,e,i):Zt(t,ge,function(){return j(t,e,i)})},set:function(t,n,i){var r,o=he(t),a="border-box"===wt.css(t,"boxSizing",!1,o),s=i&&H(t,e,i,a,o);return a&&vt.scrollboxSize()===o.position&&(s-=Math.ceil(t["offset"+e[0].toUpperCase()+e.slice(1)]-parseFloat(o[e])-H(t,e,"border",!1,o)-.5)),s&&(r=qt.exec(n))&&"px"!==(r[3]||"px")&&(t.style[e]=n,n=wt.css(t,e)),W(t,n,s)}}}),wt.cssHooks.marginLeft=N(vt.reliableMarginLeft,function(t,e){if(e)return(parseFloat(F(t,"marginLeft"))||t.getBoundingClientRect().left-Zt(t,{marginLeft:0},function(){return t.getBoundingClientRect().left}))+"px"}),wt.each({margin:"",padding:"",border:"Width"},function(t,e){wt.cssHooks[t+e]={expand:function(n){for(var i=0,r={},o="string"==typeof n?n.split(" "):[n];i<4;i++)r[t+Ut[i]+e]=o[i]||o[i-2]||o[0];return r}},"margin"!==t&&(wt.cssHooks[t+e].set=W)}),wt.fn.extend({css:function(t,e){return Rt(this,function(t,e,n){var i,r,o={},a=0;if(Array.isArray(e)){for(i=he(t),r=e.length;a<r;a++)o[e[a]]=wt.css(t,e[a],!1,i);return o}return void 0!==n?wt.style(t,e,n):wt.css(t,e)},t,e,arguments.length>1)}}),wt.Tween=Y,Y.prototype={constructor:Y,init:function(t,e,n,i,r,o){
this.elem=t,this.prop=n,this.easing=r||wt.easing._default,this.options=e,this.start=this.now=this.cur(),this.end=i,this.unit=o||(wt.cssNumber[n]?"":"px")},cur:function(){var t=Y.propHooks[this.prop];return t&&t.get?t.get(this):Y.propHooks._default.get(this)},run:function(t){var e,n=Y.propHooks[this.prop];return this.options.duration?this.pos=e=wt.easing[this.easing](t,this.options.duration*t,0,1,this.options.duration):this.pos=e=t,this.now=(this.end-this.start)*e+this.start,this.options.step&&this.options.step.call(this.elem,this.now,this),n&&n.set?n.set(this):Y.propHooks._default.set(this),this}},Y.prototype.init.prototype=Y.prototype,Y.propHooks={_default:{get:function(t){var e;return 1!==t.elem.nodeType||null!=t.elem[t.prop]&&null==t.elem.style[t.prop]?t.elem[t.prop]:(e=wt.css(t.elem,t.prop,""),e&&"auto"!==e?e:0)},set:function(t){wt.fx.step[t.prop]?wt.fx.step[t.prop](t):1!==t.elem.nodeType||null==t.elem.style[wt.cssProps[t.prop]]&&!wt.cssHooks[t.prop]?t.elem[t.prop]=t.now:wt.style(t.elem,t.prop,t.now+t.unit)}}},Y.propHooks.scrollTop=Y.propHooks.scrollLeft={set:function(t){t.elem.nodeType&&t.elem.parentNode&&(t.elem[t.prop]=t.now)}},wt.easing={linear:function(t){return t},swing:function(t){return.5-Math.cos(t*Math.PI)/2},_default:"swing"},wt.fx=Y.prototype.init,wt.fx.step={};var be,xe,_e=/^(?:toggle|show|hide)$/,we=/queueHooks$/;wt.Animation=wt.extend(Z,{tweeners:{"*":[function(t,e){var n=this.createTween(t,e);return y(n.elem,t,qt.exec(e),n),n}]},tweener:function(t,e){yt(t)?(e=t,t=["*"]):t=t.match(Et);for(var n,i=0,r=t.length;i<r;i++)n=t[i],Z.tweeners[n]=Z.tweeners[n]||[],Z.tweeners[n].unshift(e)},prefilters:[U],prefilter:function(t,e){e?Z.prefilters.unshift(t):Z.prefilters.push(t)}}),wt.speed=function(t,e,n){var i=t&&"object"==typeof t?wt.extend({},t):{complete:n||!n&&e||yt(t)&&t,duration:t,easing:n&&e||e&&!yt(e)&&e};return wt.fx.off?i.duration=0:"number"!=typeof i.duration&&(i.duration in wt.fx.speeds?i.duration=wt.fx.speeds[i.duration]:i.duration=wt.fx.speeds._default),null!=i.queue&&i.queue!==!0||(i.queue="fx"),i.old=i.complete,i.complete=function(){yt(i.old)&&i.old.call(this),i.queue&&wt.dequeue(this,i.queue)},i},wt.fn.extend({fadeTo:function(t,e,n,i){return this.filter(Gt).css("opacity",0).show().end().animate({opacity:e},t,n,i)},animate:function(t,e,n,i){var r=wt.isEmptyObject(t),o=wt.speed(e,n,i),a=function(){var e=Z(this,wt.extend({},t),o);(r||jt.get(this,"finish"))&&e.stop(!0)};return a.finish=a,r||o.queue===!1?this.each(a):this.queue(o.queue,a)},stop:function(t,e,n){var i=function(t){var e=t.stop;delete t.stop,e(n)};return"string"!=typeof t&&(n=e,e=t,t=void 0),e&&t!==!1&&this.queue(t||"fx",[]),this.each(function(){var e=!0,r=null!=t&&t+"queueHooks",o=wt.timers,a=jt.get(this);if(r)a[r]&&a[r].stop&&i(a[r]);else for(r in a)a[r]&&a[r].stop&&we.test(r)&&i(a[r]);for(r=o.length;r--;)o[r].elem!==this||null!=t&&o[r].queue!==t||(o[r].anim.stop(n),e=!1,o.splice(r,1));!e&&n||wt.dequeue(this,t)})},finish:function(t){return t!==!1&&(t=t||"fx"),this.each(function(){var e,n=jt.get(this),i=n[t+"queue"],r=n[t+"queueHooks"],o=wt.timers,a=i?i.length:0;for(n.finish=!0,wt.queue(this,t,[]),r&&r.stop&&r.stop.call(this,!0),e=o.length;e--;)o[e].elem===this&&o[e].queue===t&&(o[e].anim.stop(!0),o.splice(e,1));for(e=0;e<a;e++)i[e]&&i[e].finish&&i[e].finish.call(this);delete n.finish})}}),wt.each(["toggle","show","hide"],function(t,e){var n=wt.fn[e];wt.fn[e]=function(t,i,r){return null==t||"boolean"==typeof t?n.apply(this,arguments):this.animate(V(e,!0),t,i,r)}}),wt.each({slideDown:V("show"),slideUp:V("hide"),slideToggle:V("toggle"),fadeIn:{opacity:"show"},fadeOut:{opacity:"hide"},fadeToggle:{opacity:"toggle"}},function(t,e){wt.fn[t]=function(t,n,i){return this.animate(e,t,n,i)}}),wt.timers=[],wt.fx.tick=function(){var t,e=0,n=wt.timers;for(be=Date.now();e<n.length;e++)t=n[e],t()||n[e]!==t||n.splice(e--,1);n.length||wt.fx.stop(),be=void 0},wt.fx.timer=function(t){wt.timers.push(t),wt.fx.start()},wt.fx.interval=13,wt.fx.start=function(){xe||(xe=!0,B())},wt.fx.stop=function(){xe=null},wt.fx.speeds={slow:600,fast:200,_default:400},wt.fn.delay=function(e,n){return e=wt.fx?wt.fx.speeds[e]||e:e,n=n||"fx",this.queue(n,function(n,i){var r=t.setTimeout(n,e);i.stop=function(){t.clearTimeout(r)}})},function(){var t=at.createElement("input"),e=at.createElement("select"),n=e.appendChild(at.createElement("option"));t.type="checkbox",vt.checkOn=""!==t.value,vt.optSelected=n.selected,t=at.createElement("input"),t.value="t",t.type="radio",vt.radioValue="t"===t.value}();var ke,Me=wt.expr.attrHandle;wt.fn.extend({attr:function(t,e){return Rt(this,wt.attr,t,e,arguments.length>1)},removeAttr:function(t){return this.each(function(){wt.removeAttr(this,t)})}}),wt.extend({attr:function(t,e,n){var i,r,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return"undefined"==typeof t.getAttribute?wt.prop(t,e,n):(1===o&&wt.isXMLDoc(t)||(r=wt.attrHooks[e.toLowerCase()]||(wt.expr.match.bool.test(e)?ke:void 0)),void 0!==n?null===n?void wt.removeAttr(t,e):r&&"set"in r&&void 0!==(i=r.set(t,n,e))?i:(t.setAttribute(e,n+""),n):r&&"get"in r&&null!==(i=r.get(t,e))?i:(i=wt.find.attr(t,e),null==i?void 0:i))},attrHooks:{type:{set:function(t,e){if(!vt.radioValue&&"radio"===e&&o(t,"input")){var n=t.value;return t.setAttribute("type",e),n&&(t.value=n),e}}}},removeAttr:function(t,e){var n,i=0,r=e&&e.match(Et);if(r&&1===t.nodeType)for(;n=r[i++];)t.removeAttribute(n)}}),ke={set:function(t,e,n){return e===!1?wt.removeAttr(t,n):t.setAttribute(n,n),n}},wt.each(wt.expr.match.bool.source.match(/\w+/g),function(t,e){var n=Me[e]||wt.find.attr;Me[e]=function(t,e,i){var r,o,a=e.toLowerCase();return i||(o=Me[a],Me[a]=r,r=null!=n(t,e,i)?a:null,Me[a]=o),r}});var Se=/^(?:input|select|textarea|button)$/i,Ce=/^(?:a|area)$/i;wt.fn.extend({prop:function(t,e){return Rt(this,wt.prop,t,e,arguments.length>1)},removeProp:function(t){return this.each(function(){delete this[wt.propFix[t]||t]})}}),wt.extend({prop:function(t,e,n){var i,r,o=t.nodeType;if(3!==o&&8!==o&&2!==o)return 1===o&&wt.isXMLDoc(t)||(e=wt.propFix[e]||e,r=wt.propHooks[e]),void 0!==n?r&&"set"in r&&void 0!==(i=r.set(t,n,e))?i:t[e]=n:r&&"get"in r&&null!==(i=r.get(t,e))?i:t[e]},propHooks:{tabIndex:{get:function(t){var e=wt.find.attr(t,"tabindex");return e?parseInt(e,10):Se.test(t.nodeName)||Ce.test(t.nodeName)&&t.href?0:-1}}},propFix:{"for":"htmlFor","class":"className"}}),vt.optSelected||(wt.propHooks.selected={get:function(t){var e=t.parentNode;return e&&e.parentNode&&e.parentNode.selectedIndex,null},set:function(t){var e=t.parentNode;e&&(e.selectedIndex,e.parentNode&&e.parentNode.selectedIndex)}}),wt.each(["tabIndex","readOnly","maxLength","cellSpacing","cellPadding","rowSpan","colSpan","useMap","frameBorder","contentEditable"],function(){wt.propFix[this.toLowerCase()]=this}),wt.fn.extend({addClass:function(t){var e,n,i,r,o,a,s,l=0;if(yt(t))return this.each(function(e){wt(this).addClass(t.call(this,e,Q(this)))});if(e=J(t),e.length)for(;n=this[l++];)if(r=Q(n),i=1===n.nodeType&&" "+X(r)+" "){for(a=0;o=e[a++];)i.indexOf(" "+o+" ")<0&&(i+=o+" ");s=X(i),r!==s&&n.setAttribute("class",s)}return this},removeClass:function(t){var e,n,i,r,o,a,s,l=0;if(yt(t))return this.each(function(e){wt(this).removeClass(t.call(this,e,Q(this)))});if(!arguments.length)return this.attr("class","");if(e=J(t),e.length)for(;n=this[l++];)if(r=Q(n),i=1===n.nodeType&&" "+X(r)+" "){for(a=0;o=e[a++];)for(;i.indexOf(" "+o+" ")>-1;)i=i.replace(" "+o+" "," ");s=X(i),r!==s&&n.setAttribute("class",s)}return this},toggleClass:function(t,e){var n=typeof t,i="string"===n||Array.isArray(t);return"boolean"==typeof e&&i?e?this.addClass(t):this.removeClass(t):yt(t)?this.each(function(n){wt(this).toggleClass(t.call(this,n,Q(this),e),e)}):this.each(function(){var e,r,o,a;if(i)for(r=0,o=wt(this),a=J(t);e=a[r++];)o.hasClass(e)?o.removeClass(e):o.addClass(e);else void 0!==t&&"boolean"!==n||(e=Q(this),e&&jt.set(this,"__className__",e),this.setAttribute&&this.setAttribute("class",e||t===!1?"":jt.get(this,"__className__")||""))})},hasClass:function(t){var e,n,i=0;for(e=" "+t+" ";n=this[i++];)if(1===n.nodeType&&(" "+X(Q(n))+" ").indexOf(e)>-1)return!0;return!1}});var De=/\r/g;wt.fn.extend({val:function(t){var e,n,i,r=this[0];return arguments.length?(i=yt(t),this.each(function(n){var r;1===this.nodeType&&(r=i?t.call(this,n,wt(this).val()):t,null==r?r="":"number"==typeof r?r+="":Array.isArray(r)&&(r=wt.map(r,function(t){return null==t?"":t+""})),e=wt.valHooks[this.type]||wt.valHooks[this.nodeName.toLowerCase()],e&&"set"in e&&void 0!==e.set(this,r,"value")||(this.value=r))})):r?(e=wt.valHooks[r.type]||wt.valHooks[r.nodeName.toLowerCase()],e&&"get"in e&&void 0!==(n=e.get(r,"value"))?n:(n=r.value,"string"==typeof n?n.replace(De,""):null==n?"":n)):void 0}}),wt.extend({valHooks:{option:{get:function(t){var e=wt.find.attr(t,"value");return null!=e?e:X(wt.text(t))}},select:{get:function(t){var e,n,i,r=t.options,a=t.selectedIndex,s="select-one"===t.type,l=s?null:[],u=s?a+1:r.length;for(i=a<0?u:s?a:0;i<u;i++)if(n=r[i],(n.selected||i===a)&&!n.disabled&&(!n.parentNode.disabled||!o(n.parentNode,"optgroup"))){if(e=wt(n).val(),s)return e;l.push(e)}return l},set:function(t,e){for(var n,i,r=t.options,o=wt.makeArray(e),a=r.length;a--;)i=r[a],(i.selected=wt.inArray(wt.valHooks.option.get(i),o)>-1)&&(n=!0);return n||(t.selectedIndex=-1),o}}}}),wt.each(["radio","checkbox"],function(){wt.valHooks[this]={set:function(t,e){if(Array.isArray(e))return t.checked=wt.inArray(wt(t).val(),e)>-1}},vt.checkOn||(wt.valHooks[this].get=function(t){return null===t.getAttribute("value")?"on":t.value})}),vt.focusin="onfocusin"in t;var Te=/^(?:focusinfocus|focusoutblur)$/,Pe=function(t){t.stopPropagation()};wt.extend(wt.event,{trigger:function(e,n,i,r){var o,a,s,l,u,c,h,d,f=[i||at],p=pt.call(e,"type")?e.type:e,g=pt.call(e,"namespace")?e.namespace.split("."):[];if(a=d=s=i=i||at,3!==i.nodeType&&8!==i.nodeType&&!Te.test(p+wt.event.triggered)&&(p.indexOf(".")>-1&&(g=p.split("."),p=g.shift(),g.sort()),u=p.indexOf(":")<0&&"on"+p,e=e[wt.expando]?e:new wt.Event(p,"object"==typeof e&&e),e.isTrigger=r?2:3,e.namespace=g.join("."),e.rnamespace=e.namespace?new RegExp("(^|\\.)"+g.join("\\.(?:.*\\.|)")+"(\\.|$)"):null,e.result=void 0,e.target||(e.target=i),n=null==n?[e]:wt.makeArray(n,[e]),h=wt.event.special[p]||{},r||!h.trigger||h.trigger.apply(i,n)!==!1)){if(!r&&!h.noBubble&&!bt(i)){for(l=h.delegateType||p,Te.test(l+p)||(a=a.parentNode);a;a=a.parentNode)f.push(a),s=a;s===(i.ownerDocument||at)&&f.push(s.defaultView||s.parentWindow||t)}for(o=0;(a=f[o++])&&!e.isPropagationStopped();)d=a,e.type=o>1?l:h.bindType||p,c=(jt.get(a,"events")||{})[e.type]&&jt.get(a,"handle"),c&&c.apply(a,n),c=u&&a[u],c&&c.apply&&Ht(a)&&(e.result=c.apply(a,n),e.result===!1&&e.preventDefault());return e.type=p,r||e.isDefaultPrevented()||h._default&&h._default.apply(f.pop(),n)!==!1||!Ht(i)||u&&yt(i[p])&&!bt(i)&&(s=i[u],s&&(i[u]=null),wt.event.triggered=p,e.isPropagationStopped()&&d.addEventListener(p,Pe),i[p](),e.isPropagationStopped()&&d.removeEventListener(p,Pe),wt.event.triggered=void 0,s&&(i[u]=s)),e.result}},simulate:function(t,e,n){var i=wt.extend(new wt.Event,n,{type:t,isSimulated:!0});wt.event.trigger(i,null,e)}}),wt.fn.extend({trigger:function(t,e){return this.each(function(){wt.event.trigger(t,e,this)})},triggerHandler:function(t,e){var n=this[0];if(n)return wt.event.trigger(t,e,n,!0)}}),vt.focusin||wt.each({focus:"focusin",blur:"focusout"},function(t,e){var n=function(t){wt.event.simulate(e,t.target,wt.event.fix(t))};wt.event.special[e]={setup:function(){var i=this.ownerDocument||this,r=jt.access(i,e);r||i.addEventListener(t,n,!0),jt.access(i,e,(r||0)+1)},teardown:function(){var i=this.ownerDocument||this,r=jt.access(i,e)-1;r?jt.access(i,e,r):(i.removeEventListener(t,n,!0),jt.remove(i,e))}}});var Ae=t.location,Oe=Date.now(),Ie=/\?/;wt.parseXML=function(e){var n;if(!e||"string"!=typeof e)return null;try{n=(new t.DOMParser).parseFromString(e,"text/xml")}catch(i){n=void 0}return n&&!n.getElementsByTagName("parsererror").length||wt.error("Invalid XML: "+e),n};var Le=/\[\]$/,Ee=/\r?\n/g,Fe=/^(?:submit|button|image|reset|file)$/i,Ne=/^(?:input|select|textarea|keygen)/i;wt.param=function(t,e){var n,i=[],r=function(t,e){var n=yt(e)?e():e;i[i.length]=encodeURIComponent(t)+"="+encodeURIComponent(null==n?"":n)};if(Array.isArray(t)||t.jquery&&!wt.isPlainObject(t))wt.each(t,function(){r(this.name,this.value)});else for(n in t)K(n,t[n],e,r);return i.join("&")},wt.fn.extend({serialize:function(){return wt.param(this.serializeArray())},serializeArray:function(){return this.map(function(){var t=wt.prop(this,"elements");return t?wt.makeArray(t):this}).filter(function(){var t=this.type;return this.name&&!wt(this).is(":disabled")&&Ne.test(this.nodeName)&&!Fe.test(t)&&(this.checked||!Qt.test(t))}).map(function(t,e){var n=wt(this).val();return null==n?null:Array.isArray(n)?wt.map(n,function(t){return{name:e.name,value:t.replace(Ee,"\r\n")}}):{name:e.name,value:n.replace(Ee,"\r\n")}}).get()}});var Re=/%20/g,ze=/#.*$/,We=/([?&])_=[^&]*/,He=/^(.*?):[ \t]*([^\r\n]*)$/gm,je=/^(?:about|app|app-storage|.+-extension|file|res|widget):$/,Ye=/^(?:GET|HEAD)$/,Be=/^\/\//,$e={},Ve={},qe="*/".concat("*"),Ue=at.createElement("a");Ue.href=Ae.href,wt.extend({active:0,lastModified:{},etag:{},ajaxSettings:{url:Ae.href,type:"GET",isLocal:je.test(Ae.protocol),global:!0,processData:!0,async:!0,contentType:"application/x-www-form-urlencoded; charset=UTF-8",accepts:{"*":qe,text:"text/plain",html:"text/html",xml:"application/xml, text/xml",json:"application/json, text/javascript"},contents:{xml:/\bxml\b/,html:/\bhtml/,json:/\bjson\b/},responseFields:{xml:"responseXML",text:"responseText",json:"responseJSON"},converters:{"* text":String,"text html":!0,"text json":JSON.parse,"text xml":wt.parseXML},flatOptions:{url:!0,context:!0}},ajaxSetup:function(t,e){return e?nt(nt(t,wt.ajaxSettings),e):nt(wt.ajaxSettings,t)},ajaxPrefilter:tt($e),ajaxTransport:tt(Ve),ajax:function(e,n){function i(e,n,i,s){var u,d,f,x,_,w=n;c||(c=!0,l&&t.clearTimeout(l),r=void 0,a=s||"",k.readyState=e>0?4:0,u=e>=200&&e<300||304===e,i&&(x=it(p,k,i)),x=rt(p,x,k,u),u?(p.ifModified&&(_=k.getResponseHeader("Last-Modified"),_&&(wt.lastModified[o]=_),_=k.getResponseHeader("etag"),_&&(wt.etag[o]=_)),204===e||"HEAD"===p.type?w="nocontent":304===e?w="notmodified":(w=x.state,d=x.data,f=x.error,u=!f)):(f=w,!e&&w||(w="error",e<0&&(e=0))),k.status=e,k.statusText=(n||w)+"",u?v.resolveWith(g,[d,w,k]):v.rejectWith(g,[k,w,f]),k.statusCode(b),b=void 0,h&&m.trigger(u?"ajaxSuccess":"ajaxError",[k,p,u?d:f]),y.fireWith(g,[k,w]),h&&(m.trigger("ajaxComplete",[k,p]),--wt.active||wt.event.trigger("ajaxStop")))}"object"==typeof e&&(n=e,e=void 0),n=n||{};var r,o,a,s,l,u,c,h,d,f,p=wt.ajaxSetup({},n),g=p.context||p,m=p.context&&(g.nodeType||g.jquery)?wt(g):wt.event,v=wt.Deferred(),y=wt.Callbacks("once memory"),b=p.statusCode||{},x={},_={},w="canceled",k={readyState:0,getResponseHeader:function(t){var e;if(c){if(!s)for(s={};e=He.exec(a);)s[e[1].toLowerCase()]=e[2];e=s[t.toLowerCase()]}return null==e?null:e},getAllResponseHeaders:function(){return c?a:null},setRequestHeader:function(t,e){return null==c&&(t=_[t.toLowerCase()]=_[t.toLowerCase()]||t,x[t]=e),this},overrideMimeType:function(t){return null==c&&(p.mimeType=t),this},statusCode:function(t){var e;if(t)if(c)k.always(t[k.status]);else for(e in t)b[e]=[b[e],t[e]];return this},abort:function(t){var e=t||w;return r&&r.abort(e),i(0,e),this}};if(v.promise(k),p.url=((e||p.url||Ae.href)+"").replace(Be,Ae.protocol+"//"),p.type=n.method||n.type||p.method||p.type,p.dataTypes=(p.dataType||"*").toLowerCase().match(Et)||[""],null==p.crossDomain){u=at.createElement("a");try{u.href=p.url,u.href=u.href,p.crossDomain=Ue.protocol+"//"+Ue.host!=u.protocol+"//"+u.host}catch(M){p.crossDomain=!0}}if(p.data&&p.processData&&"string"!=typeof p.data&&(p.data=wt.param(p.data,p.traditional)),et($e,p,n,k),c)return k;h=wt.event&&p.global,h&&0===wt.active++&&wt.event.trigger("ajaxStart"),p.type=p.type.toUpperCase(),p.hasContent=!Ye.test(p.type),o=p.url.replace(ze,""),p.hasContent?p.data&&p.processData&&0===(p.contentType||"").indexOf("application/x-www-form-urlencoded")&&(p.data=p.data.replace(Re,"+")):(f=p.url.slice(o.length),p.data&&(p.processData||"string"==typeof p.data)&&(o+=(Ie.test(o)?"&":"?")+p.data,delete p.data),p.cache===!1&&(o=o.replace(We,"$1"),f=(Ie.test(o)?"&":"?")+"_="+Oe++ +f),p.url=o+f),p.ifModified&&(wt.lastModified[o]&&k.setRequestHeader("If-Modified-Since",wt.lastModified[o]),wt.etag[o]&&k.setRequestHeader("If-None-Match",wt.etag[o])),(p.data&&p.hasContent&&p.contentType!==!1||n.contentType)&&k.setRequestHeader("Content-Type",p.contentType),k.setRequestHeader("Accept",p.dataTypes[0]&&p.accepts[p.dataTypes[0]]?p.accepts[p.dataTypes[0]]+("*"!==p.dataTypes[0]?", "+qe+"; q=0.01":""):p.accepts["*"]);for(d in p.headers)k.setRequestHeader(d,p.headers[d]);if(p.beforeSend&&(p.beforeSend.call(g,k,p)===!1||c))return k.abort();if(w="abort",y.add(p.complete),k.done(p.success),k.fail(p.error),r=et(Ve,p,n,k)){if(k.readyState=1,h&&m.trigger("ajaxSend",[k,p]),c)return k;p.async&&p.timeout>0&&(l=t.setTimeout(function(){k.abort("timeout")},p.timeout));try{c=!1,r.send(x,i)}catch(M){if(c)throw M;i(-1,M)}}else i(-1,"No Transport");return k},getJSON:function(t,e,n){return wt.get(t,e,n,"json")},getScript:function(t,e){return wt.get(t,void 0,e,"script")}}),wt.each(["get","post"],function(t,e){wt[e]=function(t,n,i,r){return yt(n)&&(r=r||i,i=n,n=void 0),wt.ajax(wt.extend({url:t,type:e,dataType:r,data:n,success:i},wt.isPlainObject(t)&&t))}}),wt._evalUrl=function(t){return wt.ajax({url:t,type:"GET",dataType:"script",cache:!0,async:!1,global:!1,"throws":!0})},wt.fn.extend({wrapAll:function(t){var e;return this[0]&&(yt(t)&&(t=t.call(this[0])),e=wt(t,this[0].ownerDocument).eq(0).clone(!0),this[0].parentNode&&e.insertBefore(this[0]),e.map(function(){for(var t=this;t.firstElementChild;)t=t.firstElementChild;return t}).append(this)),this},wrapInner:function(t){return yt(t)?this.each(function(e){wt(this).wrapInner(t.call(this,e))}):this.each(function(){var e=wt(this),n=e.contents();n.length?n.wrapAll(t):e.append(t)})},wrap:function(t){var e=yt(t);return this.each(function(n){wt(this).wrapAll(e?t.call(this,n):t)})},unwrap:function(t){return this.parent(t).not("body").each(function(){wt(this).replaceWith(this.childNodes)}),this}}),wt.expr.pseudos.hidden=function(t){return!wt.expr.pseudos.visible(t)},wt.expr.pseudos.visible=function(t){return!!(t.offsetWidth||t.offsetHeight||t.getClientRects().length)},wt.ajaxSettings.xhr=function(){try{return new t.XMLHttpRequest}catch(e){}};var Ge={0:200,1223:204},Ze=wt.ajaxSettings.xhr();vt.cors=!!Ze&&"withCredentials"in Ze,vt.ajax=Ze=!!Ze,wt.ajaxTransport(function(e){var n,i;if(vt.cors||Ze&&!e.crossDomain)return{send:function(r,o){var a,s=e.xhr();if(s.open(e.type,e.url,e.async,e.username,e.password),e.xhrFields)for(a in e.xhrFields)s[a]=e.xhrFields[a];e.mimeType&&s.overrideMimeType&&s.overrideMimeType(e.mimeType),e.crossDomain||r["X-Requested-With"]||(r["X-Requested-With"]="XMLHttpRequest");for(a in r)s.setRequestHeader(a,r[a]);n=function(t){return function(){n&&(n=i=s.onload=s.onerror=s.onabort=s.ontimeout=s.onreadystatechange=null,"abort"===t?s.abort():"error"===t?"number"!=typeof s.status?o(0,"error"):o(s.status,s.statusText):o(Ge[s.status]||s.status,s.statusText,"text"!==(s.responseType||"text")||"string"!=typeof s.responseText?{binary:s.response}:{text:s.responseText},s.getAllResponseHeaders()))}},s.onload=n(),i=s.onerror=s.ontimeout=n("error"),void 0!==s.onabort?s.onabort=i:s.onreadystatechange=function(){4===s.readyState&&t.setTimeout(function(){n&&i()})},n=n("abort");try{s.send(e.hasContent&&e.data||null)}catch(l){if(n)throw l}},abort:function(){n&&n()}}}),wt.ajaxPrefilter(function(t){t.crossDomain&&(t.contents.script=!1)}),wt.ajaxSetup({accepts:{script:"text/javascript, application/javascript, application/ecmascript, application/x-ecmascript"},contents:{script:/\b(?:java|ecma)script\b/},converters:{"text script":function(t){return wt.globalEval(t),t}}}),wt.ajaxPrefilter("script",function(t){void 0===t.cache&&(t.cache=!1),t.crossDomain&&(t.type="GET")}),wt.ajaxTransport("script",function(t){if(t.crossDomain){var e,n;return{send:function(i,r){e=wt("<script>").prop({charset:t.scriptCharset,src:t.url}).on("load error",n=function(t){e.remove(),n=null,t&&r("error"===t.type?404:200,t.type)}),at.head.appendChild(e[0])},abort:function(){n&&n()}}}});var Xe=[],Qe=/(=)\?(?=&|$)|\?\?/;wt.ajaxSetup({jsonp:"callback",jsonpCallback:function(){var t=Xe.pop()||wt.expando+"_"+Oe++;return this[t]=!0,t}}),wt.ajaxPrefilter("json jsonp",function(e,n,i){var r,o,a,s=e.jsonp!==!1&&(Qe.test(e.url)?"url":"string"==typeof e.data&&0===(e.contentType||"").indexOf("application/x-www-form-urlencoded")&&Qe.test(e.data)&&"data");if(s||"jsonp"===e.dataTypes[0])return r=e.jsonpCallback=yt(e.jsonpCallback)?e.jsonpCallback():e.jsonpCallback,s?e[s]=e[s].replace(Qe,"$1"+r):e.jsonp!==!1&&(e.url+=(Ie.test(e.url)?"&":"?")+e.jsonp+"="+r),e.converters["script json"]=function(){return a||wt.error(r+" was not called"),a[0]},e.dataTypes[0]="json",o=t[r],t[r]=function(){a=arguments},i.always(function(){void 0===o?wt(t).removeProp(r):t[r]=o,e[r]&&(e.jsonpCallback=n.jsonpCallback,Xe.push(r)),a&&yt(o)&&o(a[0]),a=o=void 0}),"script"}),vt.createHTMLDocument=function(){var t=at.implementation.createHTMLDocument("").body;return t.innerHTML="<form></form><form></form>",2===t.childNodes.length}(),wt.parseHTML=function(t,e,n){if("string"!=typeof t)return[];"boolean"==typeof e&&(n=e,e=!1);var i,r,o;return e||(vt.createHTMLDocument?(e=at.implementation.createHTMLDocument(""),i=e.createElement("base"),i.href=at.location.href,e.head.appendChild(i)):e=at),r=Tt.exec(t),o=!n&&[],r?[e.createElement(r[1])]:(r=k([t],e,o),o&&o.length&&wt(o).remove(),wt.merge([],r.childNodes))},wt.fn.load=function(t,e,n){var i,r,o,a=this,s=t.indexOf(" ");return s>-1&&(i=X(t.slice(s)),t=t.slice(0,s)),yt(e)?(n=e,e=void 0):e&&"object"==typeof e&&(r="POST"),a.length>0&&wt.ajax({url:t,type:r||"GET",dataType:"html",data:e}).done(function(t){o=arguments,a.html(i?wt("<div>").append(wt.parseHTML(t)).find(i):t)}).always(n&&function(t,e){a.each(function(){n.apply(this,o||[t.responseText,e,t])})}),this},wt.each(["ajaxStart","ajaxStop","ajaxComplete","ajaxError","ajaxSuccess","ajaxSend"],function(t,e){wt.fn[e]=function(t){return this.on(e,t)}}),wt.expr.pseudos.animated=function(t){return wt.grep(wt.timers,function(e){return t===e.elem}).length},wt.offset={setOffset:function(t,e,n){var i,r,o,a,s,l,u,c=wt.css(t,"position"),h=wt(t),d={};"static"===c&&(t.style.position="relative"),s=h.offset(),o=wt.css(t,"top"),l=wt.css(t,"left"),u=("absolute"===c||"fixed"===c)&&(o+l).indexOf("auto")>-1,u?(i=h.position(),a=i.top,r=i.left):(a=parseFloat(o)||0,r=parseFloat(l)||0),yt(e)&&(e=e.call(t,n,wt.extend({},s))),null!=e.top&&(d.top=e.top-s.top+a),null!=e.left&&(d.left=e.left-s.left+r),"using"in e?e.using.call(t,d):h.css(d)}},wt.fn.extend({offset:function(t){if(arguments.length)return void 0===t?this:this.each(function(e){wt.offset.setOffset(this,t,e)});var e,n,i=this[0];return i?i.getClientRects().length?(e=i.getBoundingClientRect(),n=i.ownerDocument.defaultView,{top:e.top+n.pageYOffset,left:e.left+n.pageXOffset}):{top:0,left:0}:void 0},position:function(){if(this[0]){var t,e,n,i=this[0],r={top:0,left:0};if("fixed"===wt.css(i,"position"))e=i.getBoundingClientRect();else{for(e=this.offset(),n=i.ownerDocument,t=i.offsetParent||n.documentElement;t&&(t===n.body||t===n.documentElement)&&"static"===wt.css(t,"position");)t=t.parentNode;t&&t!==i&&1===t.nodeType&&(r=wt(t).offset(),r.top+=wt.css(t,"borderTopWidth",!0),r.left+=wt.css(t,"borderLeftWidth",!0))}return{top:e.top-r.top-wt.css(i,"marginTop",!0),left:e.left-r.left-wt.css(i,"marginLeft",!0)}}},offsetParent:function(){return this.map(function(){for(var t=this.offsetParent;t&&"static"===wt.css(t,"position");)t=t.offsetParent;return t||ne})}}),wt.each({scrollLeft:"pageXOffset",scrollTop:"pageYOffset"},function(t,e){var n="pageYOffset"===e;wt.fn[t]=function(i){return Rt(this,function(t,i,r){var o;return bt(t)?o=t:9===t.nodeType&&(o=t.defaultView),void 0===r?o?o[e]:t[i]:void(o?o.scrollTo(n?o.pageXOffset:r,n?r:o.pageYOffset):t[i]=r)},t,i,arguments.length)}}),wt.each(["top","left"],function(t,e){wt.cssHooks[e]=N(vt.pixelPosition,function(t,n){if(n)return n=F(t,e),ce.test(n)?wt(t).position()[e]+"px":n})}),wt.each({Height:"height",Width:"width"},function(t,e){wt.each({padding:"inner"+t,content:e,"":"outer"+t},function(n,i){wt.fn[i]=function(r,o){var a=arguments.length&&(n||"boolean"!=typeof r),s=n||(r===!0||o===!0?"margin":"border");return Rt(this,function(e,n,r){var o;return bt(e)?0===i.indexOf("outer")?e["inner"+t]:e.document.documentElement["client"+t]:9===e.nodeType?(o=e.documentElement,Math.max(e.body["scroll"+t],o["scroll"+t],e.body["offset"+t],o["offset"+t],o["client"+t])):void 0===r?wt.css(e,n,s):wt.style(e,n,r,s)},e,a?r:void 0,a)}})}),wt.each("blur focus focusin focusout resize scroll click dblclick mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave change select submit keydown keypress keyup contextmenu".split(" "),function(t,e){wt.fn[e]=function(t,n){return arguments.length>0?this.on(e,null,t,n):this.trigger(e)}}),wt.fn.extend({hover:function(t,e){return this.mouseenter(t).mouseleave(e||t)}}),wt.fn.extend({bind:function(t,e,n){return this.on(t,null,e,n)},unbind:function(t,e){return this.off(t,null,e)},delegate:function(t,e,n,i){return this.on(e,t,n,i)},undelegate:function(t,e,n){return 1===arguments.length?this.off(t,"**"):this.off(e,t||"**",n)}}),wt.proxy=function(t,e){var n,i,r;if("string"==typeof e&&(n=t[e],e=t,t=n),yt(t))return i=lt.call(arguments,2),r=function(){return t.apply(e||this,i.concat(lt.call(arguments)))},r.guid=t.guid=t.guid||wt.guid++,r},wt.holdReady=function(t){t?wt.readyWait++:wt.ready(!0)},wt.isArray=Array.isArray,wt.parseJSON=JSON.parse,wt.nodeName=o,wt.isFunction=yt,wt.isWindow=bt,wt.camelCase=p,wt.type=i,wt.now=Date.now,wt.isNumeric=function(t){var e=wt.type(t);return("number"===e||"string"===e)&&!isNaN(t-parseFloat(t))},"function"==typeof define&&define.amd&&define("jquery",[],function(){return wt});var Je=t.jQuery,Ke=t.$;return wt.noConflict=function(e){return t.$===wt&&(t.$=Ke),e&&t.jQuery===wt&&(t.jQuery=Je),wt},e||(t.jQuery=t.$=wt),wt}),!function(t,e,n,i){function r(e,n){this.settings=null,this.options=t.extend({},r.Defaults,n),this.$element=t(e),this._handlers={},this._plugins={},this._supress={},this._current=null,this._speed=null,this._coordinates=[],this._breakpoint=null,this._width=null,this._items=[],this._clones=[],this._mergers=[],this._widths=[],this._invalidated={},this._pipe=[],this._drag={time:null,target:null,pointer:null,stage:{start:null,current:null},direction:null},this._states={current:{},tags:{initializing:["busy"],animating:["busy"],dragging:["interacting"]}},t.each(["onResize","onThrottledResize"],t.proxy(function(e,n){this._handlers[n]=t.proxy(this[n],this)},this)),t.each(r.Plugins,t.proxy(function(t,e){this._plugins[t.charAt(0).toLowerCase()+t.slice(1)]=new e(this)},this)),t.each(r.Workers,t.proxy(function(e,n){this._pipe.push({filter:n.filter,run:t.proxy(n.run,this)})},this)),this.setup(),this.initialize()}r.Defaults={items:3,loop:!1,center:!1,rewind:!1,checkVisibility:!0,mouseDrag:!0,touchDrag:!0,pullDrag:!0,freeDrag:!1,margin:0,stagePadding:0,merge:!1,mergeFit:!0,autoWidth:!1,startPosition:0,rtl:!1,smartSpeed:250,fluidSpeed:!1,dragEndSpeed:!1,responsive:{},responsiveRefreshRate:200,responsiveBaseElement:e,fallbackEasing:"swing",slideTransition:"",info:!1,nestedItemSelector:!1,itemElement:"div",stageElement:"div",refreshClass:"owl-refresh",loadedClass:"owl-loaded",loadingClass:"owl-loading",rtlClass:"owl-rtl",responsiveClass:"owl-responsive",dragClass:"owl-drag",itemClass:"owl-item",stageClass:"owl-stage",stageOuterClass:"owl-stage-outer",grabClass:"owl-grab"},r.Width={Default:"default",Inner:"inner",Outer:"outer"},r.Type={Event:"event",State:"state"},r.Plugins={},r.Workers=[{filter:["width","settings"],run:function(){this._width=this.$element.width()}},{filter:["width","items","settings"],run:function(t){t.current=this._items&&this._items[this.relative(this._current)]}},{filter:["items","settings"],run:function(){this.$stage.children(".cloned").remove()}},{filter:["width","items","settings"],run:function(t){var e=this.settings.margin||"",n=!this.settings.autoWidth,i=this.settings.rtl,r={width:"auto","margin-left":i?e:"","margin-right":i?"":e};!n&&this.$stage.children().css(r),t.css=r}},{filter:["width","items","settings"],run:function(t){var e=(this.width()/this.settings.items).toFixed(3)-this.settings.margin,n=null,i=this._items.length,r=!this.settings.autoWidth,o=[];for(t.items={merge:!1,width:e};i--;)n=this._mergers[i],n=this.settings.mergeFit&&Math.min(n,this.settings.items)||n,t.items.merge=n>1||t.items.merge,o[i]=r?e*n:this._items[i].width();this._widths=o}},{filter:["items","settings"],run:function(){var e=[],n=this._items,i=this.settings,r=Math.max(2*i.items,4),o=2*Math.ceil(n.length/2),a=i.loop&&n.length?i.rewind?r:Math.max(r,o):0,s="",l="";for(a/=2;a>0;)e.push(this.normalize(e.length/2,!0)),s+=n[e[e.length-1]][0].outerHTML,e.push(this.normalize(n.length-1-(e.length-1)/2,!0)),l=n[e[e.length-1]][0].outerHTML+l,a-=1;this._clones=e,t(s).addClass("cloned").appendTo(this.$stage),t(l).addClass("cloned").prependTo(this.$stage)}},{filter:["width","items","settings"],run:function(){for(var t=this.settings.rtl?1:-1,e=this._clones.length+this._items.length,n=-1,i=0,r=0,o=[];++n<e;)i=o[n-1]||0,r=this._widths[this.relative(n)]+this.settings.margin,o.push(i+r*t);this._coordinates=o}},{filter:["width","items","settings"],run:function(){var t=this.settings.stagePadding,e=this._coordinates,n={width:Math.ceil(Math.abs(e[e.length-1]))+2*t,"padding-left":t||"","padding-right":t||""};this.$stage.css(n)}},{filter:["width","items","settings"],run:function(t){var e=this._coordinates.length,n=!this.settings.autoWidth,i=this.$stage.children();if(n&&t.items.merge)for(;e--;)t.css.width=this._widths[this.relative(e)],i.eq(e).css(t.css);else n&&(t.css.width=t.items.width,i.css(t.css))}},{filter:["items"],run:function(){this._coordinates.length<1&&this.$stage.removeAttr("style")}},{filter:["width","items","settings"],run:function(t){t.current=t.current?this.$stage.children().index(t.current):0,t.current=Math.max(this.minimum(),Math.min(this.maximum(),t.current)),this.reset(t.current)}},{filter:["position"],run:function(){this.animate(this.coordinates(this._current))}},{filter:["width","position","items","settings"],run:function(){var t,e,n,i,r=this.settings.rtl?1:-1,o=2*this.settings.stagePadding,a=this.coordinates(this.current())+o,s=a+this.width()*r,l=[];for(n=0,i=this._coordinates.length;n<i;n++)t=this._coordinates[n-1]||0,e=Math.abs(this._coordinates[n])+o*r,(this.op(t,"<=",a)&&this.op(t,">",s)||this.op(e,"<",a)&&this.op(e,">",s))&&l.push(n);this.$stage.children(".active").removeClass("active"),this.$stage.children(":eq("+l.join("), :eq(")+")").addClass("active"),this.$stage.children(".center").removeClass("center"),this.settings.center&&this.$stage.children().eq(this.current()).addClass("center")}}],r.prototype.initializeStage=function(){this.$stage=this.$element.find("."+this.settings.stageClass),this.$stage.length||(this.$element.addClass(this.options.loadingClass),this.$stage=t("<"+this.settings.stageElement+">",{"class":this.settings.stageClass}).wrap(t("<div/>",{"class":this.settings.stageOuterClass})),this.$element.append(this.$stage.parent()))},r.prototype.initializeItems=function(){var e=this.$element.find(".owl-item");return e.length?(this._items=e.get().map(function(e){return t(e)}),this._mergers=this._items.map(function(){return 1}),void this.refresh()):(this.replace(this.$element.children().not(this.$stage.parent())),this.isVisible()?this.refresh():this.invalidate("width"),void this.$element.removeClass(this.options.loadingClass).addClass(this.options.loadedClass))},r.prototype.initialize=function(){if(this.enter("initializing"),
this.trigger("initialize"),this.$element.toggleClass(this.settings.rtlClass,this.settings.rtl),this.settings.autoWidth&&!this.is("pre-loading")){var t,e,n;t=this.$element.find("img"),e=this.settings.nestedItemSelector?"."+this.settings.nestedItemSelector:i,n=this.$element.children(e).width(),t.length&&n<=0&&this.preloadAutoWidthImages(t)}this.initializeStage(),this.initializeItems(),this.registerEventHandlers(),this.leave("initializing"),this.trigger("initialized")},r.prototype.isVisible=function(){return!this.settings.checkVisibility||this.$element.is(":visible")},r.prototype.setup=function(){var e=this.viewport(),n=this.options.responsive,i=-1,r=null;n?(t.each(n,function(t){t<=e&&t>i&&(i=Number(t))}),r=t.extend({},this.options,n[i]),"function"==typeof r.stagePadding&&(r.stagePadding=r.stagePadding()),delete r.responsive,r.responsiveClass&&this.$element.attr("class",this.$element.attr("class").replace(new RegExp("("+this.options.responsiveClass+"-)\\S+\\s","g"),"$1"+i))):r=t.extend({},this.options),this.trigger("change",{property:{name:"settings",value:r}}),this._breakpoint=i,this.settings=r,this.invalidate("settings"),this.trigger("changed",{property:{name:"settings",value:this.settings}})},r.prototype.optionsLogic=function(){this.settings.autoWidth&&(this.settings.stagePadding=!1,this.settings.merge=!1)},r.prototype.prepare=function(e){var n=this.trigger("prepare",{content:e});return n.data||(n.data=t("<"+this.settings.itemElement+"/>").addClass(this.options.itemClass).append(e)),this.trigger("prepared",{content:n.data}),n.data},r.prototype.update=function(){for(var e=0,n=this._pipe.length,i=t.proxy(function(t){return this[t]},this._invalidated),r={};e<n;)(this._invalidated.all||t.grep(this._pipe[e].filter,i).length>0)&&this._pipe[e].run(r),e++;this._invalidated={},!this.is("valid")&&this.enter("valid")},r.prototype.width=function(t){switch(t=t||r.Width.Default){case r.Width.Inner:case r.Width.Outer:return this._width;default:return this._width-2*this.settings.stagePadding+this.settings.margin}},r.prototype.refresh=function(){this.enter("refreshing"),this.trigger("refresh"),this.setup(),this.optionsLogic(),this.$element.addClass(this.options.refreshClass),this.update(),this.$element.removeClass(this.options.refreshClass),this.leave("refreshing"),this.trigger("refreshed")},r.prototype.onThrottledResize=function(){e.clearTimeout(this.resizeTimer),this.resizeTimer=e.setTimeout(this._handlers.onResize,this.settings.responsiveRefreshRate)},r.prototype.onResize=function(){return!!this._items.length&&this._width!==this.$element.width()&&!!this.isVisible()&&(this.enter("resizing"),this.trigger("resize").isDefaultPrevented()?(this.leave("resizing"),!1):(this.invalidate("width"),this.refresh(),this.leave("resizing"),void this.trigger("resized")))},r.prototype.registerEventHandlers=function(){t.support.transition&&this.$stage.on(t.support.transition.end+".owl.core",t.proxy(this.onTransitionEnd,this)),!1!==this.settings.responsive&&this.on(e,"resize",this._handlers.onThrottledResize),this.settings.mouseDrag&&(this.$element.addClass(this.options.dragClass),this.$stage.on("mousedown.owl.core",t.proxy(this.onDragStart,this)),this.$stage.on("dragstart.owl.core selectstart.owl.core",function(){return!1})),this.settings.touchDrag&&(this.$stage.on("touchstart.owl.core",t.proxy(this.onDragStart,this)),this.$stage.on("touchcancel.owl.core",t.proxy(this.onDragEnd,this)))},r.prototype.onDragStart=function(e){var i=null;3!==e.which&&(t.support.transform?(i=this.$stage.css("transform").replace(/.*\(|\)| /g,"").split(","),i={x:i[16===i.length?12:4],y:i[16===i.length?13:5]}):(i=this.$stage.position(),i={x:this.settings.rtl?i.left+this.$stage.width()-this.width()+this.settings.margin:i.left,y:i.top}),this.is("animating")&&(t.support.transform?this.animate(i.x):this.$stage.stop(),this.invalidate("position")),this.$element.toggleClass(this.options.grabClass,"mousedown"===e.type),this.speed(0),this._drag.time=(new Date).getTime(),this._drag.target=t(e.target),this._drag.stage.start=i,this._drag.stage.current=i,this._drag.pointer=this.pointer(e),t(n).on("mouseup.owl.core touchend.owl.core",t.proxy(this.onDragEnd,this)),t(n).one("mousemove.owl.core touchmove.owl.core",t.proxy(function(e){var i=this.difference(this._drag.pointer,this.pointer(e));t(n).on("mousemove.owl.core touchmove.owl.core",t.proxy(this.onDragMove,this)),Math.abs(i.x)<Math.abs(i.y)&&this.is("valid")||(e.preventDefault(),this.enter("dragging"),this.trigger("drag"))},this)))},r.prototype.onDragMove=function(t){var e=null,n=null,i=null,r=this.difference(this._drag.pointer,this.pointer(t)),o=this.difference(this._drag.stage.start,r);this.is("dragging")&&(t.preventDefault(),this.settings.loop?(e=this.coordinates(this.minimum()),n=this.coordinates(this.maximum()+1)-e,o.x=((o.x-e)%n+n)%n+e):(e=this.settings.rtl?this.coordinates(this.maximum()):this.coordinates(this.minimum()),n=this.settings.rtl?this.coordinates(this.minimum()):this.coordinates(this.maximum()),i=this.settings.pullDrag?-1*r.x/5:0,o.x=Math.max(Math.min(o.x,e+i),n+i)),this._drag.stage.current=o,this.animate(o.x))},r.prototype.onDragEnd=function(e){var i=this.difference(this._drag.pointer,this.pointer(e)),r=this._drag.stage.current,o=i.x>0^this.settings.rtl?"left":"right";t(n).off(".owl.core"),this.$element.removeClass(this.options.grabClass),(0!==i.x&&this.is("dragging")||!this.is("valid"))&&(this.speed(this.settings.dragEndSpeed||this.settings.smartSpeed),this.current(this.closest(r.x,0!==i.x?o:this._drag.direction)),this.invalidate("position"),this.update(),this._drag.direction=o,(Math.abs(i.x)>3||(new Date).getTime()-this._drag.time>300)&&this._drag.target.one("click.owl.core",function(){return!1})),this.is("dragging")&&(this.leave("dragging"),this.trigger("dragged"))},r.prototype.closest=function(e,n){var r=-1,o=30,a=this.width(),s=this.coordinates();return this.settings.freeDrag||t.each(s,t.proxy(function(t,l){return"left"===n&&e>l-o&&e<l+o?r=t:"right"===n&&e>l-a-o&&e<l-a+o?r=t+1:this.op(e,"<",l)&&this.op(e,">",s[t+1]!==i?s[t+1]:l-a)&&(r="left"===n?t+1:t),-1===r},this)),this.settings.loop||(this.op(e,">",s[this.minimum()])?r=e=this.minimum():this.op(e,"<",s[this.maximum()])&&(r=e=this.maximum())),r},r.prototype.animate=function(e){var n=this.speed()>0;this.is("animating")&&this.onTransitionEnd(),n&&(this.enter("animating"),this.trigger("translate")),t.support.transform3d&&t.support.transition?this.$stage.css({transform:"translate3d("+e+"px,0px,0px)",transition:this.speed()/1e3+"s"+(this.settings.slideTransition?" "+this.settings.slideTransition:"")}):n?this.$stage.animate({left:e+"px"},this.speed(),this.settings.fallbackEasing,t.proxy(this.onTransitionEnd,this)):this.$stage.css({left:e+"px"})},r.prototype.is=function(t){return this._states.current[t]&&this._states.current[t]>0},r.prototype.current=function(t){if(t===i)return this._current;if(0===this._items.length)return i;if(t=this.normalize(t),this._current!==t){var e=this.trigger("change",{property:{name:"position",value:t}});e.data!==i&&(t=this.normalize(e.data)),this._current=t,this.invalidate("position"),this.trigger("changed",{property:{name:"position",value:this._current}})}return this._current},r.prototype.invalidate=function(e){return"string"===t.type(e)&&(this._invalidated[e]=!0,this.is("valid")&&this.leave("valid")),t.map(this._invalidated,function(t,e){return e})},r.prototype.reset=function(t){(t=this.normalize(t))!==i&&(this._speed=0,this._current=t,this.suppress(["translate","translated"]),this.animate(this.coordinates(t)),this.release(["translate","translated"]))},r.prototype.normalize=function(t,e){var n=this._items.length,r=e?0:this._clones.length;return!this.isNumeric(t)||n<1?t=i:(t<0||t>=n+r)&&(t=((t-r/2)%n+n)%n+r/2),t},r.prototype.relative=function(t){return t-=this._clones.length/2,this.normalize(t,!0)},r.prototype.maximum=function(t){var e,n,i,r=this.settings,o=this._coordinates.length;if(r.loop)o=this._clones.length/2+this._items.length-1;else if(r.autoWidth||r.merge){if(e=this._items.length)for(n=this._items[--e].width(),i=this.$element.width();e--&&!((n+=this._items[e].width()+this.settings.margin)>i););o=e+1}else o=r.center?this._items.length-1:this._items.length-r.items;return t&&(o-=this._clones.length/2),Math.max(o,0)},r.prototype.minimum=function(t){return t?0:this._clones.length/2},r.prototype.items=function(t){return t===i?this._items.slice():(t=this.normalize(t,!0),this._items[t])},r.prototype.mergers=function(t){return t===i?this._mergers.slice():(t=this.normalize(t,!0),this._mergers[t])},r.prototype.clones=function(e){var n=this._clones.length/2,r=n+this._items.length,o=function(t){return t%2==0?r+t/2:n-(t+1)/2};return e===i?t.map(this._clones,function(t,e){return o(e)}):t.map(this._clones,function(t,n){return t===e?o(n):null})},r.prototype.speed=function(t){return t!==i&&(this._speed=t),this._speed},r.prototype.coordinates=function(e){var n,r=1,o=e-1;return e===i?t.map(this._coordinates,t.proxy(function(t,e){return this.coordinates(e)},this)):(this.settings.center?(this.settings.rtl&&(r=-1,o=e+1),n=this._coordinates[e],n+=(this.width()-n+(this._coordinates[o]||0))/2*r):n=this._coordinates[o]||0,n=Math.ceil(n))},r.prototype.duration=function(t,e,n){return 0===n?0:Math.min(Math.max(Math.abs(e-t),1),6)*Math.abs(n||this.settings.smartSpeed)},r.prototype.to=function(t,e){var n=this.current(),i=null,r=t-this.relative(n),o=(r>0)-(r<0),a=this._items.length,s=this.minimum(),l=this.maximum();this.settings.loop?(!this.settings.rewind&&Math.abs(r)>a/2&&(r+=-1*o*a),t=n+r,(i=((t-s)%a+a)%a+s)!==t&&i-r<=l&&i-r>0&&(n=i-r,t=i,this.reset(n))):this.settings.rewind?(l+=1,t=(t%l+l)%l):t=Math.max(s,Math.min(l,t)),this.speed(this.duration(n,t,e)),this.current(t),this.isVisible()&&this.update()},r.prototype.next=function(t){t=t||!1,this.to(this.relative(this.current())+1,t)},r.prototype.prev=function(t){t=t||!1,this.to(this.relative(this.current())-1,t)},r.prototype.onTransitionEnd=function(t){return(t===i||(t.stopPropagation(),(t.target||t.srcElement||t.originalTarget)===this.$stage.get(0)))&&(this.leave("animating"),void this.trigger("translated"))},r.prototype.viewport=function(){var i;return this.options.responsiveBaseElement!==e?i=t(this.options.responsiveBaseElement).width():e.innerWidth?i=e.innerWidth:n.documentElement&&n.documentElement.clientWidth?i=n.documentElement.clientWidth:console.warn("Can not detect viewport width."),i},r.prototype.replace=function(e){this.$stage.empty(),this._items=[],e&&(e=e instanceof jQuery?e:t(e)),this.settings.nestedItemSelector&&(e=e.find("."+this.settings.nestedItemSelector)),e.filter(function(){return 1===this.nodeType}).each(t.proxy(function(t,e){e=this.prepare(e),this.$stage.append(e),this._items.push(e),this._mergers.push(1*e.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)},this)),this.reset(this.isNumeric(this.settings.startPosition)?this.settings.startPosition:0),this.invalidate("items")},r.prototype.add=function(e,n){var r=this.relative(this._current);n=n===i?this._items.length:this.normalize(n,!0),e=e instanceof jQuery?e:t(e),this.trigger("add",{content:e,position:n}),e=this.prepare(e),0===this._items.length||n===this._items.length?(0===this._items.length&&this.$stage.append(e),0!==this._items.length&&this._items[n-1].after(e),this._items.push(e),this._mergers.push(1*e.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)):(this._items[n].before(e),this._items.splice(n,0,e),this._mergers.splice(n,0,1*e.find("[data-merge]").addBack("[data-merge]").attr("data-merge")||1)),this._items[r]&&this.reset(this._items[r].index()),this.invalidate("items"),this.trigger("added",{content:e,position:n})},r.prototype.remove=function(t){(t=this.normalize(t,!0))!==i&&(this.trigger("remove",{content:this._items[t],position:t}),this._items[t].remove(),this._items.splice(t,1),this._mergers.splice(t,1),this.invalidate("items"),this.trigger("removed",{content:null,position:t}))},r.prototype.preloadAutoWidthImages=function(e){e.each(t.proxy(function(e,n){this.enter("pre-loading"),n=t(n),t(new Image).one("load",t.proxy(function(t){n.attr("src",t.target.src),n.css("opacity",1),this.leave("pre-loading"),!this.is("pre-loading")&&!this.is("initializing")&&this.refresh()},this)).attr("src",n.attr("src")||n.attr("data-src")||n.attr("data-src-retina"))},this))},r.prototype.destroy=function(){this.$element.off(".owl.core"),this.$stage.off(".owl.core"),t(n).off(".owl.core"),!1!==this.settings.responsive&&(e.clearTimeout(this.resizeTimer),this.off(e,"resize",this._handlers.onThrottledResize));for(var i in this._plugins)this._plugins[i].destroy();this.$stage.children(".cloned").remove(),this.$stage.unwrap(),this.$stage.children().contents().unwrap(),this.$stage.children().unwrap(),this.$stage.remove(),this.$element.removeClass(this.options.refreshClass).removeClass(this.options.loadingClass).removeClass(this.options.loadedClass).removeClass(this.options.rtlClass).removeClass(this.options.dragClass).removeClass(this.options.grabClass).attr("class",this.$element.attr("class").replace(new RegExp(this.options.responsiveClass+"-\\S+\\s","g"),"")).removeData("owl.carousel")},r.prototype.op=function(t,e,n){var i=this.settings.rtl;switch(e){case"<":return i?t>n:t<n;case">":return i?t<n:t>n;case">=":return i?t<=n:t>=n;case"<=":return i?t>=n:t<=n}},r.prototype.on=function(t,e,n,i){t.addEventListener?t.addEventListener(e,n,i):t.attachEvent&&t.attachEvent("on"+e,n)},r.prototype.off=function(t,e,n,i){t.removeEventListener?t.removeEventListener(e,n,i):t.detachEvent&&t.detachEvent("on"+e,n)},r.prototype.trigger=function(e,n,i,o,a){var s={item:{count:this._items.length,index:this.current()}},l=t.camelCase(t.grep(["on",e,i],function(t){return t}).join("-").toLowerCase()),u=t.Event([e,"owl",i||"carousel"].join(".").toLowerCase(),t.extend({relatedTarget:this},s,n));return this._supress[e]||(t.each(this._plugins,function(t,e){e.onTrigger&&e.onTrigger(u)}),this.register({type:r.Type.Event,name:e}),this.$element.trigger(u),this.settings&&"function"==typeof this.settings[l]&&this.settings[l].call(this,u)),u},r.prototype.enter=function(e){t.each([e].concat(this._states.tags[e]||[]),t.proxy(function(t,e){this._states.current[e]===i&&(this._states.current[e]=0),this._states.current[e]++},this))},r.prototype.leave=function(e){t.each([e].concat(this._states.tags[e]||[]),t.proxy(function(t,e){this._states.current[e]--},this))},r.prototype.register=function(e){if(e.type===r.Type.Event){if(t.event.special[e.name]||(t.event.special[e.name]={}),!t.event.special[e.name].owl){var n=t.event.special[e.name]._default;t.event.special[e.name]._default=function(t){return!n||!n.apply||t.namespace&&-1!==t.namespace.indexOf("owl")?t.namespace&&t.namespace.indexOf("owl")>-1:n.apply(this,arguments)},t.event.special[e.name].owl=!0}}else e.type===r.Type.State&&(this._states.tags[e.name]?this._states.tags[e.name]=this._states.tags[e.name].concat(e.tags):this._states.tags[e.name]=e.tags,this._states.tags[e.name]=t.grep(this._states.tags[e.name],t.proxy(function(n,i){return t.inArray(n,this._states.tags[e.name])===i},this)))},r.prototype.suppress=function(e){t.each(e,t.proxy(function(t,e){this._supress[e]=!0},this))},r.prototype.release=function(e){t.each(e,t.proxy(function(t,e){delete this._supress[e]},this))},r.prototype.pointer=function(t){var n={x:null,y:null};return t=t.originalEvent||t||e.event,t=t.touches&&t.touches.length?t.touches[0]:t.changedTouches&&t.changedTouches.length?t.changedTouches[0]:t,t.pageX?(n.x=t.pageX,n.y=t.pageY):(n.x=t.clientX,n.y=t.clientY),n},r.prototype.isNumeric=function(t){return!isNaN(parseFloat(t))},r.prototype.difference=function(t,e){return{x:t.x-e.x,y:t.y-e.y}},t.fn.owlCarousel=function(e){var n=Array.prototype.slice.call(arguments,1);return this.each(function(){var i=t(this),o=i.data("owl.carousel");o||(o=new r(this,"object"==typeof e&&e),i.data("owl.carousel",o),t.each(["next","prev","to","destroy","refresh","replace","add","remove"],function(e,n){o.register({type:r.Type.Event,name:n}),o.$element.on(n+".owl.carousel.core",t.proxy(function(t){t.namespace&&t.relatedTarget!==this&&(this.suppress([n]),o[n].apply(this,[].slice.call(arguments,1)),this.release([n]))},o))})),"string"==typeof e&&"_"!==e.charAt(0)&&o[e].apply(o,n)})},t.fn.owlCarousel.Constructor=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this._core=e,this._interval=null,this._visible=null,this._handlers={"initialized.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.autoRefresh&&this.watch()},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this._core.$element.on(this._handlers)};r.Defaults={autoRefresh:!0,autoRefreshInterval:500},r.prototype.watch=function(){this._interval||(this._visible=this._core.isVisible(),this._interval=e.setInterval(t.proxy(this.refresh,this),this._core.settings.autoRefreshInterval))},r.prototype.refresh=function(){this._core.isVisible()!==this._visible&&(this._visible=!this._visible,this._core.$element.toggleClass("owl-hidden",!this._visible),this._visible&&this._core.invalidate("width")&&this._core.refresh())},r.prototype.destroy=function(){var t,n;e.clearInterval(this._interval);for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(n in Object.getOwnPropertyNames(this))"function"!=typeof this[n]&&(this[n]=null)},t.fn.owlCarousel.Constructor.Plugins.AutoRefresh=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this._core=e,this._loaded=[],this._handlers={"initialized.owl.carousel change.owl.carousel resized.owl.carousel":t.proxy(function(e){if(e.namespace&&this._core.settings&&this._core.settings.lazyLoad&&(e.property&&"position"==e.property.name||"initialized"==e.type)){var n=this._core.settings,r=n.center&&Math.ceil(n.items/2)||n.items,o=n.center&&-1*r||0,a=(e.property&&e.property.value!==i?e.property.value:this._core.current())+o,s=this._core.clones().length,l=t.proxy(function(t,e){this.load(e)},this);for(n.lazyLoadEager>0&&(r+=n.lazyLoadEager,n.loop&&(a-=n.lazyLoadEager,r++));o++<r;)this.load(s/2+this._core.relative(a)),s&&t.each(this._core.clones(this._core.relative(a)),l),a++}},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this._core.$element.on(this._handlers)};r.Defaults={lazyLoad:!1,lazyLoadEager:0},r.prototype.load=function(n){var i=this._core.$stage.children().eq(n),r=i&&i.find(".owl-lazy");!r||t.inArray(i.get(0),this._loaded)>-1||(r.each(t.proxy(function(n,i){var r,o=t(i),a=e.devicePixelRatio>1&&o.attr("data-src-retina")||o.attr("data-src")||o.attr("data-srcset");this._core.trigger("load",{element:o,url:a},"lazy"),o.is("img")?o.one("load.owl.lazy",t.proxy(function(){o.css("opacity",1),this._core.trigger("loaded",{element:o,url:a},"lazy")},this)).attr("src",a):o.is("source")?o.one("load.owl.lazy",t.proxy(function(){this._core.trigger("loaded",{element:o,url:a},"lazy")},this)).attr("srcset",a):(r=new Image,r.onload=t.proxy(function(){o.css({"background-image":'url("'+a+'")',opacity:"1"}),this._core.trigger("loaded",{element:o,url:a},"lazy")},this),r.src=a)},this)),this._loaded.push(i.get(0)))},r.prototype.destroy=function(){var t,e;for(t in this.handlers)this._core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.Lazy=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(n){this._core=n,this._previousHeight=null,this._handlers={"initialized.owl.carousel refreshed.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&this.update()},this),"changed.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&"position"===t.property.name&&this.update()},this),"loaded.owl.lazy":t.proxy(function(t){t.namespace&&this._core.settings.autoHeight&&t.element.closest("."+this._core.settings.itemClass).index()===this._core.current()&&this.update()},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this._core.$element.on(this._handlers),this._intervalId=null;var i=this;t(e).on("load",function(){i._core.settings.autoHeight&&i.update()}),t(e).resize(function(){i._core.settings.autoHeight&&(null!=i._intervalId&&clearTimeout(i._intervalId),i._intervalId=setTimeout(function(){i.update()},250))})};r.Defaults={autoHeight:!1,autoHeightClass:"owl-height"},r.prototype.update=function(){var e=this._core._current,n=e+this._core.settings.items,i=this._core.settings.lazyLoad,r=this._core.$stage.children().toArray().slice(e,n),o=[],a=0;t.each(r,function(e,n){o.push(t(n).height())}),a=Math.max.apply(null,o),a<=1&&i&&this._previousHeight&&(a=this._previousHeight),this._previousHeight=a,this._core.$stage.parent().height(a).addClass(this._core.settings.autoHeightClass)},r.prototype.destroy=function(){var t,e;for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.AutoHeight=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this._core=e,this._videos={},this._playing=null,this._handlers={"initialized.owl.carousel":t.proxy(function(t){t.namespace&&this._core.register({type:"state",name:"playing",tags:["interacting"]})},this),"resize.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.video&&this.isInFullScreen()&&t.preventDefault()},this),"refreshed.owl.carousel":t.proxy(function(t){t.namespace&&this._core.is("resizing")&&this._core.$stage.find(".cloned .owl-video-frame").remove()},this),"changed.owl.carousel":t.proxy(function(t){t.namespace&&"position"===t.property.name&&this._playing&&this.stop()},this),"prepared.owl.carousel":t.proxy(function(e){if(e.namespace){var n=t(e.content).find(".owl-video");n.length&&(n.css("display","none"),this.fetch(n,t(e.content)))}},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this._core.$element.on(this._handlers),this._core.$element.on("click.owl.video",".owl-video-play-icon",t.proxy(function(t){this.play(t)},this))};r.Defaults={video:!1,videoHeight:!1,videoWidth:!1},r.prototype.fetch=function(t,e){var n=function(){return t.attr("data-vimeo-id")?"vimeo":t.attr("data-vzaar-id")?"vzaar":"youtube"}(),i=t.attr("data-vimeo-id")||t.attr("data-youtube-id")||t.attr("data-vzaar-id"),r=t.attr("data-width")||this._core.settings.videoWidth,o=t.attr("data-height")||this._core.settings.videoHeight,a=t.attr("href");if(!a)throw new Error("Missing video URL.");if(i=a.match(/(http:|https:|)\/\/(player.|www.|app.)?(vimeo\.com|youtu(be\.com|\.be|be\.googleapis\.com|be\-nocookie\.com)|vzaar\.com)\/(video\/|videos\/|embed\/|channels\/.+\/|groups\/.+\/|watch\?v=|v\/)?([A-Za-z0-9._%-]*)(\&\S+)?/),i[3].indexOf("youtu")>-1)n="youtube";else if(i[3].indexOf("vimeo")>-1)n="vimeo";else{if(!(i[3].indexOf("vzaar")>-1))throw new Error("Video URL not supported.");n="vzaar"}i=i[6],this._videos[a]={type:n,id:i,width:r,height:o},e.attr("data-video",a),this.thumbnail(t,this._videos[a])},r.prototype.thumbnail=function(e,n){var i,r,o,a=n.width&&n.height?"width:"+n.width+"px;height:"+n.height+"px;":"",s=e.find("img"),l="src",u="",c=this._core.settings,h=function(n){r='<div class="owl-video-play-icon"></div>',i=c.lazyLoad?t("<div/>",{"class":"owl-video-tn "+u,srcType:n}):t("<div/>",{"class":"owl-video-tn",style:"opacity:1;background-image:url("+n+")"}),e.after(i),e.after(r)};return e.wrap(t("<div/>",{"class":"owl-video-wrapper",style:a})),this._core.settings.lazyLoad&&(l="data-src",u="owl-lazy"),s.length?(h(s.attr(l)),s.remove(),!1):void("youtube"===n.type?(o="//img.youtube.com/vi/"+n.id+"/hqdefault.jpg",h(o)):"vimeo"===n.type?t.ajax({type:"GET",url:"//vimeo.com/api/v2/video/"+n.id+".json",jsonp:"callback",dataType:"jsonp",success:function(t){o=t[0].thumbnail_large,h(o)}}):"vzaar"===n.type&&t.ajax({type:"GET",url:"//vzaar.com/api/videos/"+n.id+".json",jsonp:"callback",dataType:"jsonp",success:function(t){o=t.framegrab_url,h(o)}}))},r.prototype.stop=function(){this._core.trigger("stop",null,"video"),this._playing.find(".owl-video-frame").remove(),this._playing.removeClass("owl-video-playing"),this._playing=null,this._core.leave("playing"),this._core.trigger("stopped",null,"video")},r.prototype.play=function(e){var n,i=t(e.target),r=i.closest("."+this._core.settings.itemClass),o=this._videos[r.attr("data-video")],a=o.width||"100%",s=o.height||this._core.$stage.height();this._playing||(this._core.enter("playing"),this._core.trigger("play",null,"video"),r=this._core.items(this._core.relative(r.index())),this._core.reset(r.index()),n=t('<iframe frameborder="0" allowfullscreen mozallowfullscreen webkitAllowFullScreen ></iframe>'),n.attr("height",s),n.attr("width",a),"youtube"===o.type?n.attr("src","//www.youtube.com/embed/"+o.id+"?autoplay=1&rel=0&v="+o.id):"vimeo"===o.type?n.attr("src","//player.vimeo.com/video/"+o.id+"?autoplay=1"):"vzaar"===o.type&&n.attr("src","//view.vzaar.com/"+o.id+"/player?autoplay=true"),t(n).wrap('<div class="owl-video-frame" />').insertAfter(r.find(".owl-video")),this._playing=r.addClass("owl-video-playing"))},r.prototype.isInFullScreen=function(){var e=n.fullscreenElement||n.mozFullScreenElement||n.webkitFullscreenElement;return e&&t(e).parent().hasClass("owl-video-frame")},r.prototype.destroy=function(){var t,e;this._core.$element.off("click.owl.video");for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.Video=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this.core=e,this.core.options=t.extend({},r.Defaults,this.core.options),this.swapping=!0,this.previous=i,this.next=i,this.handlers={"change.owl.carousel":t.proxy(function(t){t.namespace&&"position"==t.property.name&&(this.previous=this.core.current(),this.next=t.property.value)},this),"drag.owl.carousel dragged.owl.carousel translated.owl.carousel":t.proxy(function(t){t.namespace&&(this.swapping="translated"==t.type)},this),"translate.owl.carousel":t.proxy(function(t){t.namespace&&this.swapping&&(this.core.options.animateOut||this.core.options.animateIn)&&this.swap()},this)},this.core.$element.on(this.handlers)};r.Defaults={animateOut:!1,animateIn:!1},r.prototype.swap=function(){if(1===this.core.settings.items&&t.support.animation&&t.support.transition){this.core.speed(0);var e,n=t.proxy(this.clear,this),i=this.core.$stage.children().eq(this.previous),r=this.core.$stage.children().eq(this.next),o=this.core.settings.animateIn,a=this.core.settings.animateOut;this.core.current()!==this.previous&&(a&&(e=this.core.coordinates(this.previous)-this.core.coordinates(this.next),i.one(t.support.animation.end,n).css({left:e+"px"}).addClass("animated owl-animated-out").addClass(a)),o&&r.one(t.support.animation.end,n).addClass("animated owl-animated-in").addClass(o))}},r.prototype.clear=function(e){t(e.target).css({left:""}).removeClass("animated owl-animated-out owl-animated-in").removeClass(this.core.settings.animateIn).removeClass(this.core.settings.animateOut),this.core.onTransitionEnd()},r.prototype.destroy=function(){var t,e;for(t in this.handlers)this.core.$element.off(t,this.handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.Animate=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){var r=function(e){this._core=e,this._call=null,this._time=0,this._timeout=0,this._paused=!0,this._handlers={"changed.owl.carousel":t.proxy(function(t){t.namespace&&"settings"===t.property.name?this._core.settings.autoplay?this.play():this.stop():t.namespace&&"position"===t.property.name&&this._paused&&(this._time=0)},this),"initialized.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.autoplay&&this.play()},this),"play.owl.autoplay":t.proxy(function(t,e,n){t.namespace&&this.play(e,n)},this),"stop.owl.autoplay":t.proxy(function(t){t.namespace&&this.stop()},this),"mouseover.owl.autoplay":t.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"mouseleave.owl.autoplay":t.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.play()},this),"touchstart.owl.core":t.proxy(function(){this._core.settings.autoplayHoverPause&&this._core.is("rotating")&&this.pause()},this),"touchend.owl.core":t.proxy(function(){this._core.settings.autoplayHoverPause&&this.play()},this)},this._core.$element.on(this._handlers),this._core.options=t.extend({},r.Defaults,this._core.options)};r.Defaults={autoplay:!1,autoplayTimeout:5e3,autoplayHoverPause:!1,autoplaySpeed:!1},r.prototype._next=function(i){this._call=e.setTimeout(t.proxy(this._next,this,i),this._timeout*(Math.round(this.read()/this._timeout)+1)-this.read()),this._core.is("interacting")||n.hidden||this._core.next(i||this._core.settings.autoplaySpeed)},r.prototype.read=function(){return(new Date).getTime()-this._time},r.prototype.play=function(n,i){var r;this._core.is("rotating")||this._core.enter("rotating"),n=n||this._core.settings.autoplayTimeout,r=Math.min(this._time%(this._timeout||n),n),this._paused?(this._time=this.read(),this._paused=!1):e.clearTimeout(this._call),this._time+=this.read()%n-r,this._timeout=n,this._call=e.setTimeout(t.proxy(this._next,this,i),n-r)},r.prototype.stop=function(){this._core.is("rotating")&&(this._time=0,this._paused=!0,e.clearTimeout(this._call),this._core.leave("rotating"))},r.prototype.pause=function(){this._core.is("rotating")&&!this._paused&&(this._time=this.read(),this._paused=!0,e.clearTimeout(this._call))},r.prototype.destroy=function(){var t,e;this.stop();for(t in this._handlers)this._core.$element.off(t,this._handlers[t]);for(e in Object.getOwnPropertyNames(this))"function"!=typeof this[e]&&(this[e]=null)},t.fn.owlCarousel.Constructor.Plugins.autoplay=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){"use strict";var r=function(e){this._core=e,this._initialized=!1,this._pages=[],this._controls={},this._templates=[],this.$element=this._core.$element,this._overrides={next:this._core.next,prev:this._core.prev,to:this._core.to},this._handlers={"prepared.owl.carousel":t.proxy(function(e){e.namespace&&this._core.settings.dotsData&&this._templates.push('<div class="'+this._core.settings.dotClass+'">'+t(e.content).find("[data-dot]").addBack("[data-dot]").attr("data-dot")+"</div>")},this),"added.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.dotsData&&this._templates.splice(t.position,0,this._templates.pop())},this),"remove.owl.carousel":t.proxy(function(t){t.namespace&&this._core.settings.dotsData&&this._templates.splice(t.position,1)},this),"changed.owl.carousel":t.proxy(function(t){t.namespace&&"position"==t.property.name&&this.draw()},this),"initialized.owl.carousel":t.proxy(function(t){t.namespace&&!this._initialized&&(this._core.trigger("initialize",null,"navigation"),this.initialize(),this.update(),this.draw(),this._initialized=!0,this._core.trigger("initialized",null,"navigation"))},this),"refreshed.owl.carousel":t.proxy(function(t){t.namespace&&this._initialized&&(this._core.trigger("refresh",null,"navigation"),this.update(),this.draw(),this._core.trigger("refreshed",null,"navigation"))},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this.$element.on(this._handlers)};r.Defaults={nav:!1,navText:['<span aria-label="Previous">&#x2039;</span>','<span aria-label="Next">&#x203a;</span>'],navSpeed:!1,navElement:'button type="button" role="presentation"',navContainer:!1,navContainerClass:"owl-nav",navClass:["owl-prev","owl-next"],slideBy:1,dotClass:"owl-dot",dotsClass:"owl-dots",dots:!0,dotsEach:!1,dotsData:!1,dotsSpeed:!1,dotsContainer:!1},r.prototype.initialize=function(){var e,n=this._core.settings;this._controls.$relative=(n.navContainer?t(n.navContainer):t("<div>").addClass(n.navContainerClass).appendTo(this.$element)).addClass("disabled"),
this._controls.$previous=t("<"+n.navElement+">").addClass(n.navClass[0]).html(n.navText[0]).prependTo(this._controls.$relative).on("click",t.proxy(function(t){this.prev(n.navSpeed)},this)),this._controls.$next=t("<"+n.navElement+">").addClass(n.navClass[1]).html(n.navText[1]).appendTo(this._controls.$relative).on("click",t.proxy(function(t){this.next(n.navSpeed)},this)),n.dotsData||(this._templates=[t('<button role="button">').addClass(n.dotClass).append(t("<span>")).prop("outerHTML")]),this._controls.$absolute=(n.dotsContainer?t(n.dotsContainer):t("<div>").addClass(n.dotsClass).appendTo(this.$element)).addClass("disabled"),this._controls.$absolute.on("click","button",t.proxy(function(e){var i=t(e.target).parent().is(this._controls.$absolute)?t(e.target).index():t(e.target).parent().index();e.preventDefault(),this.to(i,n.dotsSpeed)},this));for(e in this._overrides)this._core[e]=t.proxy(this[e],this)},r.prototype.destroy=function(){var t,e,n,i,r;r=this._core.settings;for(t in this._handlers)this.$element.off(t,this._handlers[t]);for(e in this._controls)"$relative"===e&&r.navContainer?this._controls[e].html(""):this._controls[e].remove();for(i in this.overides)this._core[i]=this._overrides[i];for(n in Object.getOwnPropertyNames(this))"function"!=typeof this[n]&&(this[n]=null)},r.prototype.update=function(){var t,e,n,i=this._core.clones().length/2,r=i+this._core.items().length,o=this._core.maximum(!0),a=this._core.settings,s=a.center||a.autoWidth||a.dotsData?1:a.dotsEach||a.items;if("page"!==a.slideBy&&(a.slideBy=Math.min(a.slideBy,a.items)),a.dots||"page"==a.slideBy)for(this._pages=[],t=i,e=0,n=0;t<r;t++){if(e>=s||0===e){if(this._pages.push({start:Math.min(o,t-i),end:t-i+s-1}),Math.min(o,t-i)===o)break;e=0,++n}e+=this._core.mergers(this._core.relative(t))}},r.prototype.draw=function(){var e,n=this._core.settings,i=this._core.items().length<=n.items,r=this._core.relative(this._core.current()),o=n.loop||n.rewind;this._controls.$relative.toggleClass("disabled",!n.nav||i),n.nav&&(this._controls.$previous.toggleClass("disabled",!o&&r<=this._core.minimum(!0)),this._controls.$next.toggleClass("disabled",!o&&r>=this._core.maximum(!0))),this._controls.$absolute.toggleClass("disabled",!n.dots||i),n.dots&&(e=this._pages.length-this._controls.$absolute.children().length,n.dotsData&&0!==e?this._controls.$absolute.html(this._templates.join("")):e>0?this._controls.$absolute.append(new Array(e+1).join(this._templates[0])):e<0&&this._controls.$absolute.children().slice(e).remove(),this._controls.$absolute.find(".active").removeClass("active"),this._controls.$absolute.children().eq(t.inArray(this.current(),this._pages)).addClass("active"))},r.prototype.onTrigger=function(e){var n=this._core.settings;e.page={index:t.inArray(this.current(),this._pages),count:this._pages.length,size:n&&(n.center||n.autoWidth||n.dotsData?1:n.dotsEach||n.items)}},r.prototype.current=function(){var e=this._core.relative(this._core.current());return t.grep(this._pages,t.proxy(function(t,n){return t.start<=e&&t.end>=e},this)).pop()},r.prototype.getPosition=function(e){var n,i,r=this._core.settings;return"page"==r.slideBy?(n=t.inArray(this.current(),this._pages),i=this._pages.length,e?++n:--n,n=this._pages[(n%i+i)%i].start):(n=this._core.relative(this._core.current()),i=this._core.items().length,e?n+=r.slideBy:n-=r.slideBy),n},r.prototype.next=function(e){t.proxy(this._overrides.to,this._core)(this.getPosition(!0),e)},r.prototype.prev=function(e){t.proxy(this._overrides.to,this._core)(this.getPosition(!1),e)},r.prototype.to=function(e,n,i){var r;!i&&this._pages.length?(r=this._pages.length,t.proxy(this._overrides.to,this._core)(this._pages[(e%r+r)%r].start,n)):t.proxy(this._overrides.to,this._core)(e,n)},t.fn.owlCarousel.Constructor.Plugins.Navigation=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){"use strict";var r=function(n){this._core=n,this._hashes={},this.$element=this._core.$element,this._handlers={"initialized.owl.carousel":t.proxy(function(n){n.namespace&&"URLHash"===this._core.settings.startPosition&&t(e).trigger("hashchange.owl.navigation")},this),"prepared.owl.carousel":t.proxy(function(e){if(e.namespace){var n=t(e.content).find("[data-hash]").addBack("[data-hash]").attr("data-hash");if(!n)return;this._hashes[n]=e.content}},this),"changed.owl.carousel":t.proxy(function(n){if(n.namespace&&"position"===n.property.name){var i=this._core.items(this._core.relative(this._core.current())),r=t.map(this._hashes,function(t,e){return t===i?e:null}).join();if(!r||e.location.hash.slice(1)===r)return;e.location.hash=r}},this)},this._core.options=t.extend({},r.Defaults,this._core.options),this.$element.on(this._handlers),t(e).on("hashchange.owl.navigation",t.proxy(function(t){var n=e.location.hash.substring(1),r=this._core.$stage.children(),o=this._hashes[n]&&r.index(this._hashes[n]);o!==i&&o!==this._core.current()&&this._core.to(this._core.relative(o),!1,!0)},this))};r.Defaults={URLhashListener:!1},r.prototype.destroy=function(){var n,i;t(e).off("hashchange.owl.navigation");for(n in this._handlers)this._core.$element.off(n,this._handlers[n]);for(i in Object.getOwnPropertyNames(this))"function"!=typeof this[i]&&(this[i]=null)},t.fn.owlCarousel.Constructor.Plugins.Hash=r}(window.Zepto||window.jQuery,window,document),function(t,e,n,i){function r(e,n){var r=!1,o=e.charAt(0).toUpperCase()+e.slice(1);return t.each((e+" "+s.join(o+" ")+o).split(" "),function(t,e){if(a[e]!==i)return r=!n||e,!1}),r}function o(t){return r(t,!0)}var a=t("<support>").get(0).style,s="Webkit Moz O ms".split(" "),l={transition:{end:{WebkitTransition:"webkitTransitionEnd",MozTransition:"transitionend",OTransition:"oTransitionEnd",transition:"transitionend"}},animation:{end:{WebkitAnimation:"webkitAnimationEnd",MozAnimation:"animationend",OAnimation:"oAnimationEnd",animation:"animationend"}}},u={csstransforms:function(){return!!r("transform")},csstransforms3d:function(){return!!r("perspective")},csstransitions:function(){return!!r("transition")},cssanimations:function(){return!!r("animation")}};u.csstransitions()&&(t.support.transition=new String(o("transition")),t.support.transition.end=l.transition.end[t.support.transition]),u.cssanimations()&&(t.support.animation=new String(o("animation")),t.support.animation.end=l.animation.end[t.support.animation]),u.csstransforms()&&(t.support.transform=new String(o("transform")),t.support.transform3d=u.csstransforms3d())}(window.Zepto||window.jQuery,window,document),!function(t){"object"==typeof exports&&"undefined"!=typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):("undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this).Chart=t()}(function(){return function t(e,n,i){function r(a,s){if(!n[a]){if(!e[a]){var l="function"==typeof require&&require;if(!s&&l)return l(a,!0);if(o)return o(a,!0);var u=new Error("Cannot find module '"+a+"'");throw u.code="MODULE_NOT_FOUND",u}var c=n[a]={exports:{}};e[a][0].call(c.exports,function(t){return r(e[a][1][t]||t)},c,c.exports,t,e,n,i)}return n[a].exports}for(var o="function"==typeof require&&require,a=0;a<i.length;a++)r(i[a]);return r}({1:[function(t,e,n){function i(t){if(t){var e=[0,0,0],n=1,i=t.match(/^#([a-fA-F0-9]{3})$/i);if(i){i=i[1];for(var r=0;r<e.length;r++)e[r]=parseInt(i[r]+i[r],16)}else if(i=t.match(/^#([a-fA-F0-9]{6})$/i))for(i=i[1],r=0;r<e.length;r++)e[r]=parseInt(i.slice(2*r,2*r+2),16);else if(i=t.match(/^rgba?\(\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*,\s*([+-]?\d+)\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i)){for(r=0;r<e.length;r++)e[r]=parseInt(i[r+1]);n=parseFloat(i[4])}else if(i=t.match(/^rgba?\(\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*,\s*([+-]?[\d\.]+)\%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)$/i)){for(r=0;r<e.length;r++)e[r]=Math.round(2.55*parseFloat(i[r+1]));n=parseFloat(i[4])}else if(i=t.match(/(\w+)/)){if("transparent"==i[1])return[0,0,0,0];if(!(e=h[i[1]]))return}for(r=0;r<e.length;r++)e[r]=u(e[r],0,255);return n=n||0==n?u(n,0,1):1,e[3]=n,e}}function r(t){if(t){var e=t.match(/^hsla?\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/);if(e){var n=parseFloat(e[4]);return[u(parseInt(e[1]),0,360),u(parseFloat(e[2]),0,100),u(parseFloat(e[3]),0,100),u(isNaN(n)?1:n,0,1)]}}}function o(t){if(t){var e=t.match(/^hwb\(\s*([+-]?\d+)(?:deg)?\s*,\s*([+-]?[\d\.]+)%\s*,\s*([+-]?[\d\.]+)%\s*(?:,\s*([+-]?[\d\.]+)\s*)?\)/);if(e){var n=parseFloat(e[4]);return[u(parseInt(e[1]),0,360),u(parseFloat(e[2]),0,100),u(parseFloat(e[3]),0,100),u(isNaN(n)?1:n,0,1)]}}}function a(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),"rgba("+t[0]+", "+t[1]+", "+t[2]+", "+e+")"}function s(t,e){return"rgba("+Math.round(t[0]/255*100)+"%, "+Math.round(t[1]/255*100)+"%, "+Math.round(t[2]/255*100)+"%, "+(e||t[3]||1)+")"}function l(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),"hsla("+t[0]+", "+t[1]+"%, "+t[2]+"%, "+e+")"}function u(t,e,n){return Math.min(Math.max(e,t),n)}function c(t){var e=t.toString(16).toUpperCase();return e.length<2?"0"+e:e}var h=t(5);e.exports={getRgba:i,getHsla:r,getRgb:function(t){var e=i(t);return e&&e.slice(0,3)},getHsl:function(t){var e=r(t);return e&&e.slice(0,3)},getHwb:o,getAlpha:function(t){var e=i(t);return e?e[3]:(e=r(t))?e[3]:(e=o(t))?e[3]:void 0},hexString:function(t){return"#"+c(t[0])+c(t[1])+c(t[2])},rgbString:function(t,e){return e<1||t[3]&&t[3]<1?a(t,e):"rgb("+t[0]+", "+t[1]+", "+t[2]+")"},rgbaString:a,percentString:function(t,e){if(e<1||t[3]&&t[3]<1)return s(t,e);var n=Math.round(t[0]/255*100),i=Math.round(t[1]/255*100),r=Math.round(t[2]/255*100);return"rgb("+n+"%, "+i+"%, "+r+"%)"},percentaString:s,hslString:function(t,e){return e<1||t[3]&&t[3]<1?l(t,e):"hsl("+t[0]+", "+t[1]+"%, "+t[2]+"%)"},hslaString:l,hwbString:function(t,e){return void 0===e&&(e=void 0!==t[3]?t[3]:1),"hwb("+t[0]+", "+t[1]+"%, "+t[2]+"%"+(void 0!==e&&1!==e?", "+e:"")+")"},keyword:function(t){return d[t.slice(0,3)]}};var d={};for(var f in h)d[h[f]]=f},{5:5}],2:[function(t,e,n){var i=t(4),r=t(1),o=function(t){return t instanceof o?t:this instanceof o?(this.valid=!1,this.values={rgb:[0,0,0],hsl:[0,0,0],hsv:[0,0,0],hwb:[0,0,0],cmyk:[0,0,0,0],alpha:1},void("string"==typeof t?(e=r.getRgba(t))?this.setValues("rgb",e):(e=r.getHsla(t))?this.setValues("hsl",e):(e=r.getHwb(t))&&this.setValues("hwb",e):"object"==typeof t&&(void 0!==(e=t).r||void 0!==e.red?this.setValues("rgb",e):void 0!==e.l||void 0!==e.lightness?this.setValues("hsl",e):void 0!==e.v||void 0!==e.value?this.setValues("hsv",e):void 0!==e.w||void 0!==e.whiteness?this.setValues("hwb",e):void 0===e.c&&void 0===e.cyan||this.setValues("cmyk",e)))):new o(t);var e};o.prototype={isValid:function(){return this.valid},rgb:function(){return this.setSpace("rgb",arguments)},hsl:function(){return this.setSpace("hsl",arguments)},hsv:function(){return this.setSpace("hsv",arguments)},hwb:function(){return this.setSpace("hwb",arguments)},cmyk:function(){return this.setSpace("cmyk",arguments)},rgbArray:function(){return this.values.rgb},hslArray:function(){return this.values.hsl},hsvArray:function(){return this.values.hsv},hwbArray:function(){var t=this.values;return 1!==t.alpha?t.hwb.concat([t.alpha]):t.hwb},cmykArray:function(){return this.values.cmyk},rgbaArray:function(){var t=this.values;return t.rgb.concat([t.alpha])},hslaArray:function(){var t=this.values;return t.hsl.concat([t.alpha])},alpha:function(t){return void 0===t?this.values.alpha:(this.setValues("alpha",t),this)},red:function(t){return this.setChannel("rgb",0,t)},green:function(t){return this.setChannel("rgb",1,t)},blue:function(t){return this.setChannel("rgb",2,t)},hue:function(t){return t&&(t=(t%=360)<0?360+t:t),this.setChannel("hsl",0,t)},saturation:function(t){return this.setChannel("hsl",1,t)},lightness:function(t){return this.setChannel("hsl",2,t)},saturationv:function(t){return this.setChannel("hsv",1,t)},whiteness:function(t){return this.setChannel("hwb",1,t)},blackness:function(t){return this.setChannel("hwb",2,t)},value:function(t){return this.setChannel("hsv",2,t)},cyan:function(t){return this.setChannel("cmyk",0,t)},magenta:function(t){return this.setChannel("cmyk",1,t)},yellow:function(t){return this.setChannel("cmyk",2,t)},black:function(t){return this.setChannel("cmyk",3,t)},hexString:function(){return r.hexString(this.values.rgb)},rgbString:function(){return r.rgbString(this.values.rgb,this.values.alpha)},rgbaString:function(){return r.rgbaString(this.values.rgb,this.values.alpha)},percentString:function(){return r.percentString(this.values.rgb,this.values.alpha)},hslString:function(){return r.hslString(this.values.hsl,this.values.alpha)},hslaString:function(){return r.hslaString(this.values.hsl,this.values.alpha)},hwbString:function(){return r.hwbString(this.values.hwb,this.values.alpha)},keyword:function(){return r.keyword(this.values.rgb,this.values.alpha)},rgbNumber:function(){var t=this.values.rgb;return t[0]<<16|t[1]<<8|t[2]},luminosity:function(){for(var t=this.values.rgb,e=[],n=0;n<t.length;n++){var i=t[n]/255;e[n]=i<=.03928?i/12.92:Math.pow((i+.055)/1.055,2.4)}return.2126*e[0]+.7152*e[1]+.0722*e[2]},contrast:function(t){var e=this.luminosity(),n=t.luminosity();return n<e?(e+.05)/(n+.05):(n+.05)/(e+.05)},level:function(t){var e=this.contrast(t);return 7.1<=e?"AAA":4.5<=e?"AA":""},dark:function(){var t=this.values.rgb;return(299*t[0]+587*t[1]+114*t[2])/1e3<128},light:function(){return!this.dark()},negate:function(){for(var t=[],e=0;e<3;e++)t[e]=255-this.values.rgb[e];return this.setValues("rgb",t),this},lighten:function(t){var e=this.values.hsl;return e[2]+=e[2]*t,this.setValues("hsl",e),this},darken:function(t){var e=this.values.hsl;return e[2]-=e[2]*t,this.setValues("hsl",e),this},saturate:function(t){var e=this.values.hsl;return e[1]+=e[1]*t,this.setValues("hsl",e),this},desaturate:function(t){var e=this.values.hsl;return e[1]-=e[1]*t,this.setValues("hsl",e),this},whiten:function(t){var e=this.values.hwb;return e[1]+=e[1]*t,this.setValues("hwb",e),this},blacken:function(t){var e=this.values.hwb;return e[2]+=e[2]*t,this.setValues("hwb",e),this},greyscale:function(){var t=this.values.rgb,e=.3*t[0]+.59*t[1]+.11*t[2];return this.setValues("rgb",[e,e,e]),this},clearer:function(t){var e=this.values.alpha;return this.setValues("alpha",e-e*t),this},opaquer:function(t){var e=this.values.alpha;return this.setValues("alpha",e+e*t),this},rotate:function(t){var e=this.values.hsl,n=(e[0]+t)%360;return e[0]=n<0?360+n:n,this.setValues("hsl",e),this},mix:function(t,e){var n=this,i=t,r=void 0===e?.5:e,o=2*r-1,a=n.alpha()-i.alpha(),s=((o*a==-1?o:(o+a)/(1+o*a))+1)/2,l=1-s;return this.rgb(s*n.red()+l*i.red(),s*n.green()+l*i.green(),s*n.blue()+l*i.blue()).alpha(n.alpha()*r+i.alpha()*(1-r))},toJSON:function(){return this.rgb()},clone:function(){var t,e,n=new o,i=this.values,r=n.values;for(var a in i)i.hasOwnProperty(a)&&(t=i[a],"[object Array]"===(e={}.toString.call(t))?r[a]=t.slice(0):"[object Number]"===e?r[a]=t:console.error("unexpected color value:",t));return n}},o.prototype.spaces={rgb:["red","green","blue"],hsl:["hue","saturation","lightness"],hsv:["hue","saturation","value"],hwb:["hue","whiteness","blackness"],cmyk:["cyan","magenta","yellow","black"]},o.prototype.maxes={rgb:[255,255,255],hsl:[360,100,100],hsv:[360,100,100],hwb:[360,100,100],cmyk:[100,100,100,100]},o.prototype.getValues=function(t){for(var e=this.values,n={},i=0;i<t.length;i++)n[t.charAt(i)]=e[t][i];return 1!==e.alpha&&(n.a=e.alpha),n},o.prototype.setValues=function(t,e){var n,r,o=this.values,a=this.spaces,s=this.maxes,l=1;if(this.valid=!0,"alpha"===t)l=e;else if(e.length)o[t]=e.slice(0,t.length),l=e[t.length];else if(void 0!==e[t.charAt(0)]){for(n=0;n<t.length;n++)o[t][n]=e[t.charAt(n)];l=e.a}else if(void 0!==e[a[t][0]]){var u=a[t];for(n=0;n<t.length;n++)o[t][n]=e[u[n]];l=e.alpha}if(o.alpha=Math.max(0,Math.min(1,void 0===l?o.alpha:l)),"alpha"===t)return!1;for(n=0;n<t.length;n++)r=Math.max(0,Math.min(s[t][n],o[t][n])),o[t][n]=Math.round(r);for(var c in a)c!==t&&(o[c]=i[t][c](o[t]));return!0},o.prototype.setSpace=function(t,e){var n=e[0];return void 0===n?this.getValues(t):("number"==typeof n&&(n=Array.prototype.slice.call(e)),this.setValues(t,n),this)},o.prototype.setChannel=function(t,e,n){var i=this.values[t];return void 0===n?i[e]:(n===i[e]||(i[e]=n,this.setValues(t,i)),this)},"undefined"!=typeof window&&(window.Color=o),e.exports=o},{1:1,4:4}],3:[function(t,e,n){function i(t){var e,n,i=t[0]/255,r=t[1]/255,o=t[2]/255,a=Math.min(i,r,o),s=Math.max(i,r,o),l=s-a;return s==a?e=0:i==s?e=(r-o)/l:r==s?e=2+(o-i)/l:o==s&&(e=4+(i-r)/l),(e=Math.min(60*e,360))<0&&(e+=360),n=(a+s)/2,[e,100*(s==a?0:n<=.5?l/(s+a):l/(2-s-a)),100*n]}function o(t){var e,n,i=t[0],r=t[1],o=t[2],a=Math.min(i,r,o),s=Math.max(i,r,o),l=s-a;return n=0==s?0:l/s*1e3/10,s==a?e=0:i==s?e=(r-o)/l:r==s?e=2+(o-i)/l:o==s&&(e=4+(i-r)/l),(e=Math.min(60*e,360))<0&&(e+=360),[e,n,s/255*1e3/10]}function a(t){var e=t[0],n=t[1],r=t[2];return[i(t)[0],100*(1/255*Math.min(e,Math.min(n,r))),100*(r=1-1/255*Math.max(e,Math.max(n,r)))]}function s(t){var e,n=t[0]/255,i=t[1]/255,r=t[2]/255;return[100*((1-n-(e=Math.min(1-n,1-i,1-r)))/(1-e)||0),100*((1-i-e)/(1-e)||0),100*((1-r-e)/(1-e)||0),100*e]}function l(t){return S[JSON.stringify(t)]}function u(t){var e=t[0]/255,n=t[1]/255,i=t[2]/255;return[100*(.4124*(e=.04045<e?Math.pow((e+.055)/1.055,2.4):e/12.92)+.3576*(n=.04045<n?Math.pow((n+.055)/1.055,2.4):n/12.92)+.1805*(i=.04045<i?Math.pow((i+.055)/1.055,2.4):i/12.92)),100*(.2126*e+.7152*n+.0722*i),100*(.0193*e+.1192*n+.9505*i)]}function c(t){var e=u(t),n=e[0],i=e[1],r=e[2];return i/=100,r/=108.883,n=.008856<(n/=95.047)?Math.pow(n,1/3):7.787*n+16/116,[116*(i=.008856<i?Math.pow(i,1/3):7.787*i+16/116)-16,500*(n-i),200*(i-(r=.008856<r?Math.pow(r,1/3):7.787*r+16/116))]}function h(t){var e,n,i,r,o,a=t[0]/360,s=t[1]/100,l=t[2]/100;if(0==s)return[o=255*l,o,o];e=2*l-(n=l<.5?l*(1+s):l+s-l*s),r=[0,0,0];for(var u=0;u<3;u++)(i=a+1/3*-(u-1))<0&&i++,1<i&&i--,o=6*i<1?e+6*(n-e)*i:2*i<1?n:3*i<2?e+(n-e)*(2/3-i)*6:e,r[u]=255*o;return r}function d(t){var e=t[0]/60,n=t[1]/100,i=t[2]/100,r=Math.floor(e)%6,o=e-Math.floor(e),a=255*i*(1-n),s=255*i*(1-n*o),l=255*i*(1-n*(1-o));switch(i*=255,r){case 0:return[i,l,a];case 1:return[s,i,a];case 2:return[a,i,l];case 3:return[a,s,i];case 4:return[l,a,i];case 5:return[i,a,s]}}function f(t){var e,n,i,o,a=t[0]/360,s=t[1]/100,l=t[2]/100,u=s+l;switch(1<u&&(s/=u,l/=u),i=6*a-(e=Math.floor(6*a)),0!=(1&e)&&(i=1-i),o=s+i*((n=1-l)-s),e){default:case 6:case 0:r=n,g=o,b=s;break;case 1:r=o,g=n,b=s;break;case 2:r=s,g=n,b=o;break;case 3:r=s,g=o,b=n;break;case 4:r=o,g=s,b=n;break;case 5:r=n,g=s,b=o}return[255*r,255*g,255*b]}function p(t){var e=t[0]/100,n=t[1]/100,i=t[2]/100,r=t[3]/100;return[255*(1-Math.min(1,e*(1-r)+r)),255*(1-Math.min(1,n*(1-r)+r)),255*(1-Math.min(1,i*(1-r)+r))]}function m(t){var e,n,i,r=t[0]/100,o=t[1]/100,a=t[2]/100;return n=-.9689*r+1.8758*o+.0415*a,i=.0557*r+-.204*o+1.057*a,e=.0031308<(e=3.2406*r+-1.5372*o+-.4986*a)?1.055*Math.pow(e,1/2.4)-.055:e*=12.92,n=.0031308<n?1.055*Math.pow(n,1/2.4)-.055:n*=12.92,i=.0031308<i?1.055*Math.pow(i,1/2.4)-.055:i*=12.92,[255*(e=Math.min(Math.max(0,e),1)),255*(n=Math.min(Math.max(0,n),1)),255*(i=Math.min(Math.max(0,i),1))]}function v(t){var e=t[0],n=t[1],i=t[2];return n/=100,i/=108.883,e=.008856<(e/=95.047)?Math.pow(e,1/3):7.787*e+16/116,[116*(n=.008856<n?Math.pow(n,1/3):7.787*n+16/116)-16,500*(e-n),200*(n-(i=.008856<i?Math.pow(i,1/3):7.787*i+16/116))]}function y(t){var e,n,i,r,o=t[0],a=t[1],s=t[2];return r=o<=8?(n=100*o/903.3)/100*7.787+16/116:(n=100*Math.pow((o+16)/116,3),Math.pow(n/100,1/3)),[e=e/95.047<=.008856?e=95.047*(a/500+r-16/116)/7.787:95.047*Math.pow(a/500+r,3),n,i=i/108.883<=.008859?i=108.883*(r-s/200-16/116)/7.787:108.883*Math.pow(r-s/200,3)]}function x(t){var e,n=t[0],i=t[1],r=t[2];return(e=360*Math.atan2(r,i)/2/Math.PI)<0&&(e+=360),[n,Math.sqrt(i*i+r*r),e]}function _(t){return m(y(t))}function w(t){var e,n=t[0],i=t[1];return e=t[2]/360*2*Math.PI,[n,i*Math.cos(e),i*Math.sin(e)]}function k(t){return M[t]}e.exports={rgb2hsl:i,rgb2hsv:o,rgb2hwb:a,rgb2cmyk:s,rgb2keyword:l,rgb2xyz:u,rgb2lab:c,rgb2lch:function(t){return x(c(t))},hsl2rgb:h,hsl2hsv:function(t){var e=t[0],n=t[1]/100,i=t[2]/100;return 0!==i?[e,100*(2*(n*=(i*=2)<=1?i:2-i)/(i+n)),100*((i+n)/2)]:[0,0,0]},hsl2hwb:function(t){return a(h(t))},hsl2cmyk:function(t){return s(h(t))},hsl2keyword:function(t){return l(h(t))},hsv2rgb:d,hsv2hsl:function(t){var e,n,i=t[0],r=t[1]/100,o=t[2]/100;return e=r*o,[i,100*(e=(e/=(n=(2-r)*o)<=1?n:2-n)||0),100*(n/=2)]},hsv2hwb:function(t){return a(d(t))},hsv2cmyk:function(t){return s(d(t))},hsv2keyword:function(t){return l(d(t))},hwb2rgb:f,hwb2hsl:function(t){return i(f(t))},hwb2hsv:function(t){return o(f(t))},hwb2cmyk:function(t){return s(f(t))},hwb2keyword:function(t){return l(f(t))},cmyk2rgb:p,cmyk2hsl:function(t){return i(p(t))},cmyk2hsv:function(t){return o(p(t))},cmyk2hwb:function(t){return a(p(t))},cmyk2keyword:function(t){return l(p(t))},keyword2rgb:k,keyword2hsl:function(t){return i(k(t))},keyword2hsv:function(t){return o(k(t))},keyword2hwb:function(t){return a(k(t))},keyword2cmyk:function(t){return s(k(t))},keyword2lab:function(t){return c(k(t))},keyword2xyz:function(t){return u(k(t))},xyz2rgb:m,xyz2lab:v,xyz2lch:function(t){return x(v(t))},lab2xyz:y,lab2rgb:_,lab2lch:x,lch2lab:w,lch2xyz:function(t){return y(w(t))},lch2rgb:function(t){return _(w(t))}};var M={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]},S={};for(var C in M)S[JSON.stringify(M[C])]=C},{}],4:[function(t,e,n){var i=t(3),r=function(){return new u};for(var o in i){r[o+"Raw"]=function(t){return function(e){return"number"==typeof e&&(e=Array.prototype.slice.call(arguments)),i[t](e)}}(o);var a=/(\w+)2(\w+)/.exec(o),s=a[1],l=a[2];(r[s]=r[s]||{})[l]=r[o]=function(t){return function(e){"number"==typeof e&&(e=Array.prototype.slice.call(arguments));var n=i[t](e);if("string"==typeof n||void 0===n)return n;for(var r=0;r<n.length;r++)n[r]=Math.round(n[r]);return n}}(o)}var u=function(){this.convs={}};u.prototype.routeSpace=function(t,e){var n=e[0];return void 0===n?this.getValues(t):("number"==typeof n&&(n=Array.prototype.slice.call(e)),this.setValues(t,n))},u.prototype.setValues=function(t,e){return this.space=t,this.convs={},this.convs[t]=e,this},u.prototype.getValues=function(t){var e=this.convs[t];if(!e){var n=this.space,i=this.convs[n];e=r[n][t](i),this.convs[t]=e}return e},["rgb","hsl","hsv","cmyk","keyword"].forEach(function(t){u.prototype[t]=function(e){return this.routeSpace(t,arguments)}}),e.exports=r},{3:3}],5:[function(t,e,n){"use strict";e.exports={aliceblue:[240,248,255],antiquewhite:[250,235,215],aqua:[0,255,255],aquamarine:[127,255,212],azure:[240,255,255],beige:[245,245,220],bisque:[255,228,196],black:[0,0,0],blanchedalmond:[255,235,205],blue:[0,0,255],blueviolet:[138,43,226],brown:[165,42,42],burlywood:[222,184,135],cadetblue:[95,158,160],chartreuse:[127,255,0],chocolate:[210,105,30],coral:[255,127,80],cornflowerblue:[100,149,237],cornsilk:[255,248,220],crimson:[220,20,60],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgoldenrod:[184,134,11],darkgray:[169,169,169],darkgreen:[0,100,0],darkgrey:[169,169,169],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkseagreen:[143,188,143],darkslateblue:[72,61,139],darkslategray:[47,79,79],darkslategrey:[47,79,79],darkturquoise:[0,206,209],darkviolet:[148,0,211],deeppink:[255,20,147],deepskyblue:[0,191,255],dimgray:[105,105,105],dimgrey:[105,105,105],dodgerblue:[30,144,255],firebrick:[178,34,34],floralwhite:[255,250,240],forestgreen:[34,139,34],fuchsia:[255,0,255],gainsboro:[220,220,220],ghostwhite:[248,248,255],gold:[255,215,0],goldenrod:[218,165,32],gray:[128,128,128],green:[0,128,0],greenyellow:[173,255,47],grey:[128,128,128],honeydew:[240,255,240],hotpink:[255,105,180],indianred:[205,92,92],indigo:[75,0,130],ivory:[255,255,240],khaki:[240,230,140],lavender:[230,230,250],lavenderblush:[255,240,245],lawngreen:[124,252,0],lemonchiffon:[255,250,205],lightblue:[173,216,230],lightcoral:[240,128,128],lightcyan:[224,255,255],lightgoldenrodyellow:[250,250,210],lightgray:[211,211,211],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightsalmon:[255,160,122],lightseagreen:[32,178,170],lightskyblue:[135,206,250],lightslategray:[119,136,153],lightslategrey:[119,136,153],lightsteelblue:[176,196,222],lightyellow:[255,255,224],lime:[0,255,0],limegreen:[50,205,50],linen:[250,240,230],magenta:[255,0,255],maroon:[128,0,0],mediumaquamarine:[102,205,170],mediumblue:[0,0,205],mediumorchid:[186,85,211],mediumpurple:[147,112,219],mediumseagreen:[60,179,113],mediumslateblue:[123,104,238],mediumspringgreen:[0,250,154],mediumturquoise:[72,209,204],mediumvioletred:[199,21,133],midnightblue:[25,25,112],mintcream:[245,255,250],mistyrose:[255,228,225],moccasin:[255,228,181],navajowhite:[255,222,173],navy:[0,0,128],oldlace:[253,245,230],olive:[128,128,0],olivedrab:[107,142,35],orange:[255,165,0],orangered:[255,69,0],orchid:[218,112,214],palegoldenrod:[238,232,170],palegreen:[152,251,152],paleturquoise:[175,238,238],palevioletred:[219,112,147],papayawhip:[255,239,213],peachpuff:[255,218,185],peru:[205,133,63],pink:[255,192,203],plum:[221,160,221],powderblue:[176,224,230],purple:[128,0,128],rebeccapurple:[102,51,153],red:[255,0,0],rosybrown:[188,143,143],royalblue:[65,105,225],saddlebrown:[139,69,19],salmon:[250,128,114],sandybrown:[244,164,96],seagreen:[46,139,87],seashell:[255,245,238],sienna:[160,82,45],silver:[192,192,192],skyblue:[135,206,235],slateblue:[106,90,205],slategray:[112,128,144],slategrey:[112,128,144],snow:[255,250,250],springgreen:[0,255,127],steelblue:[70,130,180],tan:[210,180,140],teal:[0,128,128],thistle:[216,191,216],tomato:[255,99,71],turquoise:[64,224,208],violet:[238,130,238],wheat:[245,222,179],white:[255,255,255],whitesmoke:[245,245,245],yellow:[255,255,0],yellowgreen:[154,205,50]}},{}],6:[function(t,e,n){var i,r;i=this,r=function(){"use strict";function n(){return Qt.apply(null,arguments)}function i(t){return t instanceof Array||"[object Array]"===Object.prototype.toString.call(t)}function r(t){return null!=t&&"[object Object]"===Object.prototype.toString.call(t)}function o(t){return void 0===t}function a(t){return"number"==typeof t||"[object Number]"===Object.prototype.toString.call(t)}function s(t){return t instanceof Date||"[object Date]"===Object.prototype.toString.call(t)}function l(t,e){var n,i=[];for(n=0;n<t.length;++n)i.push(e(t[n],n));return i}function u(t,e){return Object.prototype.hasOwnProperty.call(t,e)}function c(t,e){for(var n in e)u(e,n)&&(t[n]=e[n]);return u(e,"toString")&&(t.toString=e.toString),u(e,"valueOf")&&(t.valueOf=e.valueOf),t}function h(t,e,n,i){return vt(t,e,n,i,!0).utc()}function d(t){return null==t._pf&&(t._pf={empty:!1,unusedTokens:[],unusedInput:[],overflow:-2,charsLeftOver:0,nullInput:!1,invalidMonth:null,invalidFormat:!1,userInvalidated:!1,iso:!1,parsedDateParts:[],meridiem:null,rfc2822:!1,weekdayMismatch:!1}),t._pf}function f(t){if(null==t._isValid){var e=d(t),n=Jt.call(e.parsedDateParts,function(t){return null!=t}),i=!isNaN(t._d.getTime())&&e.overflow<0&&!e.empty&&!e.invalidMonth&&!e.invalidWeekday&&!e.weekdayMismatch&&!e.nullInput&&!e.invalidFormat&&!e.userInvalidated&&(!e.meridiem||e.meridiem&&n);if(t._strict&&(i=i&&0===e.charsLeftOver&&0===e.unusedTokens.length&&void 0===e.bigHour),null!=Object.isFrozen&&Object.isFrozen(t))return i;t._isValid=i}return t._isValid}function p(t){var e=h(NaN);return null!=t?c(d(e),t):d(e).userInvalidated=!0,e}function g(t,e){var n,i,r;if(o(e._isAMomentObject)||(t._isAMomentObject=e._isAMomentObject),o(e._i)||(t._i=e._i),o(e._f)||(t._f=e._f),o(e._l)||(t._l=e._l),o(e._strict)||(t._strict=e._strict),o(e._tzm)||(t._tzm=e._tzm),o(e._isUTC)||(t._isUTC=e._isUTC),o(e._offset)||(t._offset=e._offset),o(e._pf)||(t._pf=d(e)),o(e._locale)||(t._locale=e._locale),0<te.length)for(n=0;n<te.length;n++)o(r=e[i=te[n]])||(t[i]=r);return t}function m(t){g(this,t),this._d=new Date(null!=t._d?t._d.getTime():NaN),this.isValid()||(this._d=new Date(NaN)),!1===ee&&(ee=!0,n.updateOffset(this),ee=!1)}function v(t){return t instanceof m||null!=t&&null!=t._isAMomentObject}function y(t){return t<0?Math.ceil(t)||0:Math.floor(t)}function b(t){var e=+t,n=0;return 0!==e&&isFinite(e)&&(n=y(e)),n}function x(t,e,n){var i,r=Math.min(t.length,e.length),o=Math.abs(t.length-e.length),a=0;for(i=0;i<r;i++)(n&&t[i]!==e[i]||!n&&b(t[i])!==b(e[i]))&&a++;return a+o}function _(t){!1===n.suppressDeprecationWarnings&&"undefined"!=typeof console&&console.warn&&console.warn("Deprecation warning: "+t)}function w(t,e){var i=!0;return c(function(){if(null!=n.deprecationHandler&&n.deprecationHandler(null,t),
i){for(var r,o=[],a=0;a<arguments.length;a++){if(r="","object"==typeof arguments[a]){for(var s in r+="\n["+a+"] ",arguments[0])r+=s+": "+arguments[0][s]+", ";r=r.slice(0,-2)}else r=arguments[a];o.push(r)}_(t+"\nArguments: "+Array.prototype.slice.call(o).join("")+"\n"+(new Error).stack),i=!1}return e.apply(this,arguments)},e)}function k(t,e){null!=n.deprecationHandler&&n.deprecationHandler(t,e),ne[t]||(_(e),ne[t]=!0)}function M(t){return t instanceof Function||"[object Function]"===Object.prototype.toString.call(t)}function S(t,e){var n,i=c({},t);for(n in e)u(e,n)&&(r(t[n])&&r(e[n])?(i[n]={},c(i[n],t[n]),c(i[n],e[n])):null!=e[n]?i[n]=e[n]:delete i[n]);for(n in t)u(t,n)&&!u(e,n)&&r(t[n])&&(i[n]=c({},i[n]));return i}function C(t){null!=t&&this.set(t)}function D(t,e){var n=t.toLowerCase();ie[n]=ie[n+"s"]=ie[e]=t}function T(t){return"string"==typeof t?ie[t]||ie[t.toLowerCase()]:void 0}function P(t){var e,n,i={};for(n in t)u(t,n)&&(e=T(n))&&(i[e]=t[n]);return i}function A(t,e){re[t]=e}function O(t,e,n){var i=""+Math.abs(t),r=e-i.length;return(0<=t?n?"+":"":"-")+Math.pow(10,Math.max(0,r)).toString().substr(1)+i}function I(t,e,n,i){var r=i;"string"==typeof i&&(r=function(){return this[i]()}),t&&(le[t]=r),e&&(le[e[0]]=function(){return O(r.apply(this,arguments),e[1],e[2])}),n&&(le[n]=function(){return this.localeData().ordinal(r.apply(this,arguments),t)})}function L(t,e){return t.isValid()?(e=E(e,t.localeData()),se[e]=se[e]||function(t){var e,n,i,r=t.match(oe);for(e=0,n=r.length;e<n;e++)le[r[e]]?r[e]=le[r[e]]:r[e]=(i=r[e]).match(/\[[\s\S]/)?i.replace(/^\[|\]$/g,""):i.replace(/\\/g,"");return function(e){var i,o="";for(i=0;i<n;i++)o+=M(r[i])?r[i].call(e,t):r[i];return o}}(e),se[e](t)):t.localeData().invalidDate()}function E(t,e){function n(t){return e.longDateFormat(t)||t}var i=5;for(ae.lastIndex=0;0<=i&&ae.test(t);)t=t.replace(ae,n),ae.lastIndex=0,i-=1;return t}function F(t,e,n){Se[t]=M(e)?e:function(t,i){return t&&n?n:e}}function N(t,e){return u(Se,t)?Se[t](e._strict,e._locale):new RegExp(R(t.replace("\\","").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g,function(t,e,n,i,r){return e||n||i||r})))}function R(t){return t.replace(/[-\/\\^$*+?.()|[\]{}]/g,"\\$&")}function z(t,e){var n,i=e;for("string"==typeof t&&(t=[t]),a(e)&&(i=function(t,n){n[e]=b(t)}),n=0;n<t.length;n++)Ce[t[n]]=i}function W(t,e){z(t,function(t,n,i,r){i._w=i._w||{},e(t,i._w,i,r)})}function H(t){return j(t)?366:365}function j(t){return t%4==0&&t%100!=0||t%400==0}function Y(t,e){return function(i){return null!=i?($(this,t,i),n.updateOffset(this,e),this):B(this,t)}}function B(t,e){return t.isValid()?t._d["get"+(t._isUTC?"UTC":"")+e]():NaN}function $(t,e,n){t.isValid()&&!isNaN(n)&&("FullYear"===e&&j(t.year())&&1===t.month()&&29===t.date()?t._d["set"+(t._isUTC?"UTC":"")+e](n,t.month(),V(n,t.month())):t._d["set"+(t._isUTC?"UTC":"")+e](n))}function V(t,e){if(isNaN(t)||isNaN(e))return NaN;var n,i=(e%(n=12)+n)%n;return t+=(e-i)/12,1===i?j(t)?29:28:31-i%7%2}function q(t,e){var n;if(!t.isValid())return t;if("string"==typeof e)if(/^\d+$/.test(e))e=b(e);else if(!a(e=t.localeData().monthsParse(e)))return t;return n=Math.min(t.date(),V(t.year(),e)),t._d["set"+(t._isUTC?"UTC":"")+"Month"](e,n),t}function U(t){return null!=t?(q(this,t),n.updateOffset(this,!0),this):B(this,"Month")}function G(){function t(t,e){return e.length-t.length}var e,n,i=[],r=[],o=[];for(e=0;e<12;e++)n=h([2e3,e]),i.push(this.monthsShort(n,"")),r.push(this.months(n,"")),o.push(this.months(n,"")),o.push(this.monthsShort(n,""));for(i.sort(t),r.sort(t),o.sort(t),e=0;e<12;e++)i[e]=R(i[e]),r[e]=R(r[e]);for(e=0;e<24;e++)o[e]=R(o[e]);this._monthsRegex=new RegExp("^("+o.join("|")+")","i"),this._monthsShortRegex=this._monthsRegex,this._monthsStrictRegex=new RegExp("^("+r.join("|")+")","i"),this._monthsShortStrictRegex=new RegExp("^("+i.join("|")+")","i")}function Z(t){var e=new Date(Date.UTC.apply(null,arguments));return t<100&&0<=t&&isFinite(e.getUTCFullYear())&&e.setUTCFullYear(t),e}function X(t,e,n){var i=7+e-n;return-((7+Z(t,0,i).getUTCDay()-e)%7)+i-1}function Q(t,e,n,i,r){var o,a,s=1+7*(e-1)+(7+n-i)%7+X(t,i,r);return a=s<=0?H(o=t-1)+s:s>H(t)?(o=t+1,s-H(t)):(o=t,s),{year:o,dayOfYear:a}}function J(t,e,n){var i,r,o=X(t.year(),e,n),a=Math.floor((t.dayOfYear()-o-1)/7)+1;return a<1?i=a+K(r=t.year()-1,e,n):a>K(t.year(),e,n)?(i=a-K(t.year(),e,n),r=t.year()+1):(r=t.year(),i=a),{week:i,year:r}}function K(t,e,n){var i=X(t,e,n),r=X(t+1,e,n);return(H(t)-i+r)/7}function tt(){function t(t,e){return e.length-t.length}var e,n,i,r,o,a=[],s=[],l=[],u=[];for(e=0;e<7;e++)n=h([2e3,1]).day(e),i=this.weekdaysMin(n,""),r=this.weekdaysShort(n,""),o=this.weekdays(n,""),a.push(i),s.push(r),l.push(o),u.push(i),u.push(r),u.push(o);for(a.sort(t),s.sort(t),l.sort(t),u.sort(t),e=0;e<7;e++)s[e]=R(s[e]),l[e]=R(l[e]),u[e]=R(u[e]);this._weekdaysRegex=new RegExp("^("+u.join("|")+")","i"),this._weekdaysShortRegex=this._weekdaysRegex,this._weekdaysMinRegex=this._weekdaysRegex,this._weekdaysStrictRegex=new RegExp("^("+l.join("|")+")","i"),this._weekdaysShortStrictRegex=new RegExp("^("+s.join("|")+")","i"),this._weekdaysMinStrictRegex=new RegExp("^("+a.join("|")+")","i")}function et(){return this.hours()%12||12}function nt(t,e){I(t,0,0,function(){return this.localeData().meridiem(this.hours(),this.minutes(),e)})}function it(t,e){return e._meridiemParse}function rt(t){return t?t.toLowerCase().replace("_","-"):t}function ot(n){var i=null;if(!Je[n]&&void 0!==e&&e&&e.exports)try{i=Ze._abbr,t("./locale/"+n),at(i)}catch(n){}return Je[n]}function at(t,e){var n;return t&&((n=o(e)?lt(t):st(t,e))?Ze=n:"undefined"!=typeof console&&console.warn&&console.warn("Locale "+t+" not found. Did you forget to load it?")),Ze._abbr}function st(t,e){if(null===e)return delete Je[t],null;var n,i=Qe;if(e.abbr=t,null!=Je[t])k("defineLocaleOverride","use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."),i=Je[t]._config;else if(null!=e.parentLocale)if(null!=Je[e.parentLocale])i=Je[e.parentLocale]._config;else{if(null==(n=ot(e.parentLocale)))return Ke[e.parentLocale]||(Ke[e.parentLocale]=[]),Ke[e.parentLocale].push({name:t,config:e}),null;i=n._config}return Je[t]=new C(S(i,e)),Ke[t]&&Ke[t].forEach(function(t){st(t.name,t.config)}),at(t),Je[t]}function lt(t){var e;if(t&&t._locale&&t._locale._abbr&&(t=t._locale._abbr),!t)return Ze;if(!i(t)){if(e=ot(t))return e;t=[t]}return function(t){for(var e,n,i,r,o=0;o<t.length;){for(e=(r=rt(t[o]).split("-")).length,n=(n=rt(t[o+1]))?n.split("-"):null;0<e;){if(i=ot(r.slice(0,e).join("-")))return i;if(n&&n.length>=e&&x(r,n,!0)>=e-1)break;e--}o++}return Ze}(t)}function ut(t){var e,n=t._a;return n&&-2===d(t).overflow&&(e=n[Te]<0||11<n[Te]?Te:n[Pe]<1||n[Pe]>V(n[De],n[Te])?Pe:n[Ae]<0||24<n[Ae]||24===n[Ae]&&(0!==n[Oe]||0!==n[Ie]||0!==n[Le])?Ae:n[Oe]<0||59<n[Oe]?Oe:n[Ie]<0||59<n[Ie]?Ie:n[Le]<0||999<n[Le]?Le:-1,d(t)._overflowDayOfYear&&(e<De||Pe<e)&&(e=Pe),d(t)._overflowWeeks&&-1===e&&(e=Ee),d(t)._overflowWeekday&&-1===e&&(e=Fe),d(t).overflow=e),t}function ct(t,e,n){return null!=t?t:null!=e?e:n}function ht(t){var e,i,r,o,a,s=[];if(!t._d){var l,u;for(l=t,u=new Date(n.now()),r=l._useUTC?[u.getUTCFullYear(),u.getUTCMonth(),u.getUTCDate()]:[u.getFullYear(),u.getMonth(),u.getDate()],t._w&&null==t._a[Pe]&&null==t._a[Te]&&function(t){var e,n,i,r,o,a,s,l;if(null!=(e=t._w).GG||null!=e.W||null!=e.E)o=1,a=4,n=ct(e.GG,t._a[De],J(yt(),1,4).year),i=ct(e.W,1),((r=ct(e.E,1))<1||7<r)&&(l=!0);else{o=t._locale._week.dow,a=t._locale._week.doy;var u=J(yt(),o,a);n=ct(e.gg,t._a[De],u.year),i=ct(e.w,u.week),null!=e.d?((r=e.d)<0||6<r)&&(l=!0):null!=e.e?(r=e.e+o,(e.e<0||6<e.e)&&(l=!0)):r=o}i<1||i>K(n,o,a)?d(t)._overflowWeeks=!0:null!=l?d(t)._overflowWeekday=!0:(s=Q(n,i,r,o,a),t._a[De]=s.year,t._dayOfYear=s.dayOfYear)}(t),null!=t._dayOfYear&&(a=ct(t._a[De],r[De]),(t._dayOfYear>H(a)||0===t._dayOfYear)&&(d(t)._overflowDayOfYear=!0),i=Z(a,0,t._dayOfYear),t._a[Te]=i.getUTCMonth(),t._a[Pe]=i.getUTCDate()),e=0;e<3&&null==t._a[e];++e)t._a[e]=s[e]=r[e];for(;e<7;e++)t._a[e]=s[e]=null==t._a[e]?2===e?1:0:t._a[e];24===t._a[Ae]&&0===t._a[Oe]&&0===t._a[Ie]&&0===t._a[Le]&&(t._nextDay=!0,t._a[Ae]=0),t._d=(t._useUTC?Z:function(t,e,n,i,r,o,a){var s=new Date(t,e,n,i,r,o,a);return t<100&&0<=t&&isFinite(s.getFullYear())&&s.setFullYear(t),s}).apply(null,s),o=t._useUTC?t._d.getUTCDay():t._d.getDay(),null!=t._tzm&&t._d.setUTCMinutes(t._d.getUTCMinutes()-t._tzm),t._nextDay&&(t._a[Ae]=24),t._w&&void 0!==t._w.d&&t._w.d!==o&&(d(t).weekdayMismatch=!0)}}function dt(t){var e,n,i,r,o,a,s=t._i,l=tn.exec(s)||en.exec(s);if(l){for(d(t).iso=!0,e=0,n=rn.length;e<n;e++)if(rn[e][1].exec(l[1])){r=rn[e][0],i=!1!==rn[e][2];break}if(null==r)return void(t._isValid=!1);if(l[3]){for(e=0,n=on.length;e<n;e++)if(on[e][1].exec(l[3])){o=(l[2]||" ")+on[e][0];break}if(null==o)return void(t._isValid=!1)}if(!i&&null!=o)return void(t._isValid=!1);if(l[4]){if(!nn.exec(l[4]))return void(t._isValid=!1);a="Z"}t._f=r+(o||"")+(a||""),gt(t)}else t._isValid=!1}function ft(t,e,n,i,r,o){var a=[function(t){var e=parseInt(t,10);return e<=49?2e3+e:e<=999?1900+e:e}(t),He.indexOf(e),parseInt(n,10),parseInt(i,10),parseInt(r,10)];return o&&a.push(parseInt(o,10)),a}function pt(t){var e,n,i,r=sn.exec(t._i.replace(/\([^)]*\)|[\n\t]/g," ").replace(/(\s\s+)/g," ").replace(/^\s\s*/,"").replace(/\s\s*$/,""));if(r){var o=ft(r[4],r[3],r[2],r[5],r[6],r[7]);if(e=r[1],n=o,i=t,e&&$e.indexOf(e)!==new Date(n[0],n[1],n[2]).getDay()&&(d(i).weekdayMismatch=!0,!(i._isValid=!1)))return;t._a=o,t._tzm=function(t,e,n){if(t)return ln[t];if(e)return 0;var i=parseInt(n,10),r=i%100;return(i-r)/100*60+r}(r[8],r[9],r[10]),t._d=Z.apply(null,t._a),t._d.setUTCMinutes(t._d.getUTCMinutes()-t._tzm),d(t).rfc2822=!0}else t._isValid=!1}function gt(t){if(t._f!==n.ISO_8601)if(t._f!==n.RFC_2822){t._a=[],d(t).empty=!0;var e,i,r,o,a,s,l,c,h=""+t._i,f=h.length,p=0;for(r=E(t._f,t._locale).match(oe)||[],e=0;e<r.length;e++)o=r[e],(i=(h.match(N(o,t))||[])[0])&&(0<(a=h.substr(0,h.indexOf(i))).length&&d(t).unusedInput.push(a),h=h.slice(h.indexOf(i)+i.length),p+=i.length),le[o]?(i?d(t).empty=!1:d(t).unusedTokens.push(o),s=o,c=t,null!=(l=i)&&u(Ce,s)&&Ce[s](l,c._a,c,s)):t._strict&&!i&&d(t).unusedTokens.push(o);d(t).charsLeftOver=f-p,0<h.length&&d(t).unusedInput.push(h),t._a[Ae]<=12&&!0===d(t).bigHour&&0<t._a[Ae]&&(d(t).bigHour=void 0),d(t).parsedDateParts=t._a.slice(0),d(t).meridiem=t._meridiem,t._a[Ae]=function(t,e,n){var i;return null==n?e:null!=t.meridiemHour?t.meridiemHour(e,n):(null!=t.isPM&&((i=t.isPM(n))&&e<12&&(e+=12),i||12!==e||(e=0)),e)}(t._locale,t._a[Ae],t._meridiem),ht(t),ut(t)}else pt(t);else dt(t)}function mt(t){var e,u,h,y,b=t._i,x=t._f;return t._locale=t._locale||lt(t._l),null===b||void 0===x&&""===b?p({nullInput:!0}):("string"==typeof b&&(t._i=b=t._locale.preparse(b)),v(b)?new m(ut(b)):(s(b)?t._d=b:i(x)?function(t){var e,n,i,r,o;if(0===t._f.length)return d(t).invalidFormat=!0,t._d=new Date(NaN);for(r=0;r<t._f.length;r++)o=0,e=g({},t),null!=t._useUTC&&(e._useUTC=t._useUTC),e._f=t._f[r],gt(e),f(e)&&(o+=d(e).charsLeftOver,o+=10*d(e).unusedTokens.length,d(e).score=o,(null==i||o<i)&&(i=o,n=e));c(t,n||e)}(t):x?gt(t):o(u=(e=t)._i)?e._d=new Date(n.now()):s(u)?e._d=new Date(u.valueOf()):"string"==typeof u?(h=e,null===(y=an.exec(h._i))?(dt(h),!1===h._isValid&&(delete h._isValid,pt(h),!1===h._isValid&&(delete h._isValid,n.createFromInputFallback(h)))):h._d=new Date((+y[1]))):i(u)?(e._a=l(u.slice(0),function(t){return parseInt(t,10)}),ht(e)):r(u)?function(t){if(!t._d){var e=P(t._i);t._a=l([e.year,e.month,e.day||e.date,e.hour,e.minute,e.second,e.millisecond],function(t){return t&&parseInt(t,10)}),ht(t)}}(e):a(u)?e._d=new Date(u):n.createFromInputFallback(e),f(t)||(t._d=null),t))}function vt(t,e,n,o,a){var s,l={};return!0!==n&&!1!==n||(o=n,n=void 0),(r(t)&&function(t){if(Object.getOwnPropertyNames)return 0===Object.getOwnPropertyNames(t).length;var e;for(e in t)if(t.hasOwnProperty(e))return!1;return!0}(t)||i(t)&&0===t.length)&&(t=void 0),l._isAMomentObject=!0,l._useUTC=l._isUTC=a,l._l=n,l._i=t,l._f=e,l._strict=o,(s=new m(ut(mt(l))))._nextDay&&(s.add(1,"d"),s._nextDay=void 0),s}function yt(t,e,n,i){return vt(t,e,n,i,!1)}function bt(t,e){var n,r;if(1===e.length&&i(e[0])&&(e=e[0]),!e.length)return yt();for(n=e[0],r=1;r<e.length;++r)e[r].isValid()&&!e[r][t](n)||(n=e[r]);return n}function xt(t){var e=P(t),n=e.year||0,i=e.quarter||0,r=e.month||0,o=e.week||0,a=e.day||0,s=e.hour||0,l=e.minute||0,u=e.second||0,c=e.millisecond||0;this._isValid=function(t){for(var e in t)if(-1===Ne.call(hn,e)||null!=t[e]&&isNaN(t[e]))return!1;for(var n=!1,i=0;i<hn.length;++i)if(t[hn[i]]){if(n)return!1;parseFloat(t[hn[i]])!==b(t[hn[i]])&&(n=!0)}return!0}(e),this._milliseconds=+c+1e3*u+6e4*l+1e3*s*60*60,this._days=+a+7*o,this._months=+r+3*i+12*n,this._data={},this._locale=lt(),this._bubble()}function _t(t){return t instanceof xt}function wt(t){return t<0?-1*Math.round(-1*t):Math.round(t)}function kt(t,e){I(t,0,0,function(){var t=this.utcOffset(),n="+";return t<0&&(t=-t,n="-"),n+O(~~(t/60),2)+e+O(~~t%60,2)})}function Mt(t,e){var n=(e||"").match(t);if(null===n)return null;var i=((n[n.length-1]||[])+"").match(dn)||["-",0,0],r=60*i[1]+b(i[2]);return 0===r?0:"+"===i[0]?r:-r}function St(t,e){var i,r;return e._isUTC?(i=e.clone(),r=(v(t)||s(t)?t.valueOf():yt(t).valueOf())-i.valueOf(),i._d.setTime(i._d.valueOf()+r),n.updateOffset(i,!1),i):yt(t).local()}function Ct(t){return 15*-Math.round(t._d.getTimezoneOffset()/15)}function Dt(){return!!this.isValid()&&this._isUTC&&0===this._offset}function Tt(t,e){var n,i,r,o=t,s=null;return _t(t)?o={ms:t._milliseconds,d:t._days,M:t._months}:a(t)?(o={},e?o[e]=t:o.milliseconds=t):(s=fn.exec(t))?(n="-"===s[1]?-1:1,o={y:0,d:b(s[Pe])*n,h:b(s[Ae])*n,m:b(s[Oe])*n,s:b(s[Ie])*n,ms:b(wt(1e3*s[Le]))*n}):(s=pn.exec(t))?(n="-"===s[1]?-1:(s[1],1),o={y:Pt(s[2],n),M:Pt(s[3],n),w:Pt(s[4],n),d:Pt(s[5],n),h:Pt(s[6],n),m:Pt(s[7],n),s:Pt(s[8],n)}):null==o?o={}:"object"==typeof o&&("from"in o||"to"in o)&&(r=function(t,e){var n;return t.isValid()&&e.isValid()?(e=St(e,t),t.isBefore(e)?n=At(t,e):((n=At(e,t)).milliseconds=-n.milliseconds,n.months=-n.months),n):{milliseconds:0,months:0}}(yt(o.from),yt(o.to)),(o={}).ms=r.milliseconds,o.M=r.months),i=new xt(o),_t(t)&&u(t,"_locale")&&(i._locale=t._locale),i}function Pt(t,e){var n=t&&parseFloat(t.replace(",","."));return(isNaN(n)?0:n)*e}function At(t,e){var n={milliseconds:0,months:0};return n.months=e.month()-t.month()+12*(e.year()-t.year()),t.clone().add(n.months,"M").isAfter(e)&&--n.months,n.milliseconds=+e-+t.clone().add(n.months,"M"),n}function Ot(t,e){return function(n,i){var r;return null===i||isNaN(+i)||(k(e,"moment()."+e+"(period, number) is deprecated. Please use moment()."+e+"(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."),r=n,n=i,i=r),It(this,Tt(n="string"==typeof n?+n:n,i),t),this}}function It(t,e,i,r){var o=e._milliseconds,a=wt(e._days),s=wt(e._months);t.isValid()&&(r=null==r||r,s&&q(t,B(t,"Month")+s*i),a&&$(t,"Date",B(t,"Date")+a*i),o&&t._d.setTime(t._d.valueOf()+o*i),r&&n.updateOffset(t,a||s))}function Lt(t,e){var n=12*(e.year()-t.year())+(e.month()-t.month()),i=t.clone().add(n,"months");return-(n+(e-i<0?(e-i)/(i-t.clone().add(n-1,"months")):(e-i)/(t.clone().add(n+1,"months")-i)))||0}function Et(t){var e;return void 0===t?this._locale._abbr:(null!=(e=lt(t))&&(this._locale=e),this)}function Ft(){return this._locale}function Nt(t,e){I(0,[t,t.length],0,e)}function Rt(t,e,n,i,r){var o;return null==t?J(this,i,r).year:((o=K(t,i,r))<e&&(e=o),function(t,e,n,i,r){var o=Q(t,e,n,i,r),a=Z(o.year,0,o.dayOfYear);return this.year(a.getUTCFullYear()),this.month(a.getUTCMonth()),this.date(a.getUTCDate()),this}.call(this,t,e,n,i,r))}function zt(t,e){e[Le]=b(1e3*("0."+t))}function Wt(t){return t}function Ht(t,e,n,i){var r=lt(),o=h().set(i,e);return r[n](o,t)}function jt(t,e,n){if(a(t)&&(e=t,t=void 0),t=t||"",null!=e)return Ht(t,e,n,"month");var i,r=[];for(i=0;i<12;i++)r[i]=Ht(t,i,n,"month");return r}function Yt(t,e,n,i){"boolean"==typeof t?a(e)&&(n=e,e=void 0):(e=t,t=!1,a(n=e)&&(n=e,e=void 0)),e=e||"";var r,o=lt(),s=t?o._week.dow:0;if(null!=n)return Ht(e,(n+s)%7,i,"day");var l=[];for(r=0;r<7;r++)l[r]=Ht(e,(r+s)%7,i,"day");return l}function Bt(t,e,n,i){var r=Tt(e,n);return t._milliseconds+=i*r._milliseconds,t._days+=i*r._days,t._months+=i*r._months,t._bubble()}function $t(t){return t<0?Math.floor(t):Math.ceil(t)}function Vt(t){return 4800*t/146097}function qt(t){return 146097*t/4800}function Ut(t){return function(){return this.as(t)}}function Gt(t){return function(){return this.isValid()?this._data[t]:NaN}}function Zt(t){return(0<t)-(t<0)||+t}function Xt(){if(!this.isValid())return this.localeData().invalidDate();var t,e,n=Bn(this._milliseconds)/1e3,i=Bn(this._days),r=Bn(this._months);e=y((t=y(n/60))/60),n%=60,t%=60;var o=y(r/12),a=r%=12,s=i,l=e,u=t,c=n?n.toFixed(3).replace(/\.?0+$/,""):"",h=this.asSeconds();if(!h)return"P0D";var d=h<0?"-":"",f=Zt(this._months)!==Zt(h)?"-":"",p=Zt(this._days)!==Zt(h)?"-":"",g=Zt(this._milliseconds)!==Zt(h)?"-":"";return d+"P"+(o?f+o+"Y":"")+(a?f+a+"M":"")+(s?p+s+"D":"")+(l||u||c?"T":"")+(l?g+l+"H":"")+(u?g+u+"M":"")+(c?g+c+"S":"")}var Qt,Jt;Jt=Array.prototype.some?Array.prototype.some:function(t){for(var e=Object(this),n=e.length>>>0,i=0;i<n;i++)if(i in e&&t.call(this,e[i],i,e))return!0;return!1};var Kt,te=n.momentProperties=[],ee=!1,ne={};n.suppressDeprecationWarnings=!1,n.deprecationHandler=null,Kt=Object.keys?Object.keys:function(t){var e,n=[];for(e in t)u(t,e)&&n.push(e);return n};var ie={},re={},oe=/(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,ae=/(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g,se={},le={},ue=/\d/,ce=/\d\d/,he=/\d{3}/,de=/\d{4}/,fe=/[+-]?\d{6}/,pe=/\d\d?/,ge=/\d\d\d\d?/,me=/\d\d\d\d\d\d?/,ve=/\d{1,3}/,ye=/\d{1,4}/,be=/[+-]?\d{1,6}/,xe=/\d+/,_e=/[+-]?\d+/,we=/Z|[+-]\d\d:?\d\d/gi,ke=/Z|[+-]\d\d(?::?\d\d)?/gi,Me=/[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i,Se={},Ce={},De=0,Te=1,Pe=2,Ae=3,Oe=4,Ie=5,Le=6,Ee=7,Fe=8;I("Y",0,0,function(){var t=this.year();return t<=9999?""+t:"+"+t}),I(0,["YY",2],0,function(){return this.year()%100}),I(0,["YYYY",4],0,"year"),I(0,["YYYYY",5],0,"year"),I(0,["YYYYYY",6,!0],0,"year"),D("year","y"),A("year",1),F("Y",_e),F("YY",pe,ce),F("YYYY",ye,de),F("YYYYY",be,fe),F("YYYYYY",be,fe),z(["YYYYY","YYYYYY"],De),z("YYYY",function(t,e){e[De]=2===t.length?n.parseTwoDigitYear(t):b(t)}),z("YY",function(t,e){e[De]=n.parseTwoDigitYear(t)}),z("Y",function(t,e){e[De]=parseInt(t,10)}),n.parseTwoDigitYear=function(t){return b(t)+(68<b(t)?1900:2e3)};var Ne,Re=Y("FullYear",!0);Ne=Array.prototype.indexOf?Array.prototype.indexOf:function(t){var e;for(e=0;e<this.length;++e)if(this[e]===t)return e;return-1},I("M",["MM",2],"Mo",function(){return this.month()+1}),I("MMM",0,0,function(t){return this.localeData().monthsShort(this,t)}),I("MMMM",0,0,function(t){return this.localeData().months(this,t)}),D("month","M"),A("month",8),F("M",pe),F("MM",pe,ce),F("MMM",function(t,e){return e.monthsShortRegex(t)}),F("MMMM",function(t,e){return e.monthsRegex(t)}),z(["M","MM"],function(t,e){e[Te]=b(t)-1}),z(["MMM","MMMM"],function(t,e,n,i){var r=n._locale.monthsParse(t,i,n._strict);null!=r?e[Te]=r:d(n).invalidMonth=t});var ze=/D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/,We="January_February_March_April_May_June_July_August_September_October_November_December".split("_"),He="Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),je=Me,Ye=Me;I("w",["ww",2],"wo","week"),I("W",["WW",2],"Wo","isoWeek"),D("week","w"),D("isoWeek","W"),A("week",5),A("isoWeek",5),F("w",pe),F("ww",pe,ce),F("W",pe),F("WW",pe,ce),W(["w","ww","W","WW"],function(t,e,n,i){e[i.substr(0,1)]=b(t)}),I("d",0,"do","day"),I("dd",0,0,function(t){return this.localeData().weekdaysMin(this,t)}),I("ddd",0,0,function(t){return this.localeData().weekdaysShort(this,t)}),I("dddd",0,0,function(t){return this.localeData().weekdays(this,t)}),I("e",0,0,"weekday"),I("E",0,0,"isoWeekday"),D("day","d"),D("weekday","e"),D("isoWeekday","E"),A("day",11),A("weekday",11),A("isoWeekday",11),F("d",pe),F("e",pe),F("E",pe),F("dd",function(t,e){return e.weekdaysMinRegex(t)}),F("ddd",function(t,e){return e.weekdaysShortRegex(t)}),F("dddd",function(t,e){return e.weekdaysRegex(t)}),W(["dd","ddd","dddd"],function(t,e,n,i){var r=n._locale.weekdaysParse(t,i,n._strict);null!=r?e.d=r:d(n).invalidWeekday=t}),W(["d","e","E"],function(t,e,n,i){e[i]=b(t)});var Be="Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),$e="Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),Ve="Su_Mo_Tu_We_Th_Fr_Sa".split("_"),qe=Me,Ue=Me,Ge=Me;I("H",["HH",2],0,"hour"),I("h",["hh",2],0,et),I("k",["kk",2],0,function(){return this.hours()||24}),I("hmm",0,0,function(){return""+et.apply(this)+O(this.minutes(),2)}),I("hmmss",0,0,function(){return""+et.apply(this)+O(this.minutes(),2)+O(this.seconds(),2)}),I("Hmm",0,0,function(){return""+this.hours()+O(this.minutes(),2)}),I("Hmmss",0,0,function(){return""+this.hours()+O(this.minutes(),2)+O(this.seconds(),2)}),nt("a",!0),nt("A",!1),D("hour","h"),A("hour",13),F("a",it),F("A",it),F("H",pe),F("h",pe),F("k",pe),F("HH",pe,ce),F("hh",pe,ce),F("kk",pe,ce),F("hmm",ge),F("hmmss",me),F("Hmm",ge),F("Hmmss",me),z(["H","HH"],Ae),z(["k","kk"],function(t,e,n){var i=b(t);e[Ae]=24===i?0:i}),z(["a","A"],function(t,e,n){n._isPm=n._locale.isPM(t),n._meridiem=t}),z(["h","hh"],function(t,e,n){e[Ae]=b(t),d(n).bigHour=!0}),z("hmm",function(t,e,n){var i=t.length-2;e[Ae]=b(t.substr(0,i)),e[Oe]=b(t.substr(i)),d(n).bigHour=!0}),z("hmmss",function(t,e,n){var i=t.length-4,r=t.length-2;e[Ae]=b(t.substr(0,i)),e[Oe]=b(t.substr(i,2)),e[Ie]=b(t.substr(r)),d(n).bigHour=!0}),z("Hmm",function(t,e,n){var i=t.length-2;e[Ae]=b(t.substr(0,i)),e[Oe]=b(t.substr(i))}),z("Hmmss",function(t,e,n){var i=t.length-4,r=t.length-2;e[Ae]=b(t.substr(0,i)),e[Oe]=b(t.substr(i,2)),e[Ie]=b(t.substr(r))});var Ze,Xe=Y("Hours",!0),Qe={calendar:{sameDay:"[Today at] LT",nextDay:"[Tomorrow at] LT",nextWeek:"dddd [at] LT",lastDay:"[Yesterday at] LT",lastWeek:"[Last] dddd [at] LT",sameElse:"L"},longDateFormat:{LTS:"h:mm:ss A",LT:"h:mm A",L:"MM/DD/YYYY",LL:"MMMM D, YYYY",LLL:"MMMM D, YYYY h:mm A",LLLL:"dddd, MMMM D, YYYY h:mm A"},invalidDate:"Invalid date",ordinal:"%d",dayOfMonthOrdinalParse:/\d{1,2}/,relativeTime:{future:"in %s",past:"%s ago",s:"a few seconds",ss:"%d seconds",m:"a minute",mm:"%d minutes",h:"an hour",hh:"%d hours",d:"a day",dd:"%d days",M:"a month",MM:"%d months",y:"a year",yy:"%d years"},months:We,monthsShort:He,week:{dow:0,doy:6},weekdays:Be,weekdaysMin:Ve,weekdaysShort:$e,meridiemParse:/[ap]\.?m?\.?/i},Je={},Ke={},tn=/^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,en=/^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/,nn=/Z|[+-]\d\d(?::?\d\d)?/,rn=[["YYYYYY-MM-DD",/[+-]\d{6}-\d\d-\d\d/],["YYYY-MM-DD",/\d{4}-\d\d-\d\d/],["GGGG-[W]WW-E",/\d{4}-W\d\d-\d/],["GGGG-[W]WW",/\d{4}-W\d\d/,!1],["YYYY-DDD",/\d{4}-\d{3}/],["YYYY-MM",/\d{4}-\d\d/,!1],["YYYYYYMMDD",/[+-]\d{10}/],["YYYYMMDD",/\d{8}/],["GGGG[W]WWE",/\d{4}W\d{3}/],["GGGG[W]WW",/\d{4}W\d{2}/,!1],["YYYYDDD",/\d{7}/]],on=[["HH:mm:ss.SSSS",/\d\d:\d\d:\d\d\.\d+/],["HH:mm:ss,SSSS",/\d\d:\d\d:\d\d,\d+/],["HH:mm:ss",/\d\d:\d\d:\d\d/],["HH:mm",/\d\d:\d\d/],["HHmmss.SSSS",/\d\d\d\d\d\d\.\d+/],["HHmmss,SSSS",/\d\d\d\d\d\d,\d+/],["HHmmss",/\d\d\d\d\d\d/],["HHmm",/\d\d\d\d/],["HH",/\d\d/]],an=/^\/?Date\((\-?\d+)/i,sn=/^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/,ln={UT:0,GMT:0,EDT:-240,EST:-300,CDT:-300,CST:-360,MDT:-360,MST:-420,PDT:-420,PST:-480};n.createFromInputFallback=w("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.",function(t){t._d=new Date(t._i+(t._useUTC?" UTC":""))}),n.ISO_8601=function(){},n.RFC_2822=function(){};var un=w("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var t=yt.apply(null,arguments);return this.isValid()&&t.isValid()?t<this?this:t:p()}),cn=w("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/",function(){var t=yt.apply(null,arguments);return this.isValid()&&t.isValid()?this<t?this:t:p()}),hn=["year","quarter","month","week","day","hour","minute","second","millisecond"];kt("Z",":"),kt("ZZ",""),F("Z",ke),F("ZZ",ke),z(["Z","ZZ"],function(t,e,n){n._useUTC=!0,n._tzm=Mt(ke,t)});var dn=/([\+\-]|\d\d)/gi;n.updateOffset=function(){};var fn=/^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/,pn=/^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;Tt.fn=xt.prototype,Tt.invalid=function(){return Tt(NaN)};var gn=Ot(1,"add"),mn=Ot(-1,"subtract");n.defaultFormat="YYYY-MM-DDTHH:mm:ssZ",n.defaultFormatUtc="YYYY-MM-DDTHH:mm:ss[Z]";var vn=w("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.",function(t){return void 0===t?this.localeData():this.locale(t)});I(0,["gg",2],0,function(){return this.weekYear()%100}),I(0,["GG",2],0,function(){return this.isoWeekYear()%100}),Nt("gggg","weekYear"),Nt("ggggg","weekYear"),Nt("GGGG","isoWeekYear"),Nt("GGGGG","isoWeekYear"),D("weekYear","gg"),D("isoWeekYear","GG"),A("weekYear",1),A("isoWeekYear",1),F("G",_e),F("g",_e),F("GG",pe,ce),F("gg",pe,ce),F("GGGG",ye,de),F("gggg",ye,de),F("GGGGG",be,fe),F("ggggg",be,fe),W(["gggg","ggggg","GGGG","GGGGG"],function(t,e,n,i){e[i.substr(0,2)]=b(t)}),W(["gg","GG"],function(t,e,i,r){e[r]=n.parseTwoDigitYear(t)}),I("Q",0,"Qo","quarter"),D("quarter","Q"),A("quarter",7),F("Q",ue),z("Q",function(t,e){e[Te]=3*(b(t)-1)}),I("D",["DD",2],"Do","date"),D("date","D"),A("date",9),F("D",pe),F("DD",pe,ce),F("Do",function(t,e){return t?e._dayOfMonthOrdinalParse||e._ordinalParse:e._dayOfMonthOrdinalParseLenient}),z(["D","DD"],Pe),z("Do",function(t,e){e[Pe]=b(t.match(pe)[0])});var yn=Y("Date",!0);I("DDD",["DDDD",3],"DDDo","dayOfYear"),D("dayOfYear","DDD"),A("dayOfYear",4),F("DDD",ve),F("DDDD",he),z(["DDD","DDDD"],function(t,e,n){n._dayOfYear=b(t)}),I("m",["mm",2],0,"minute"),D("minute","m"),A("minute",14),F("m",pe),F("mm",pe,ce),z(["m","mm"],Oe);var bn=Y("Minutes",!1);I("s",["ss",2],0,"second"),D("second","s"),A("second",15),F("s",pe),F("ss",pe,ce),z(["s","ss"],Ie);var xn,_n=Y("Seconds",!1);for(I("S",0,0,function(){return~~(this.millisecond()/100)}),I(0,["SS",2],0,function(){return~~(this.millisecond()/10)}),I(0,["SSS",3],0,"millisecond"),I(0,["SSSS",4],0,function(){return 10*this.millisecond()}),I(0,["SSSSS",5],0,function(){return 100*this.millisecond()}),I(0,["SSSSSS",6],0,function(){return 1e3*this.millisecond()}),I(0,["SSSSSSS",7],0,function(){return 1e4*this.millisecond()}),I(0,["SSSSSSSS",8],0,function(){return 1e5*this.millisecond()}),I(0,["SSSSSSSSS",9],0,function(){return 1e6*this.millisecond()}),D("millisecond","ms"),A("millisecond",16),F("S",ve,ue),F("SS",ve,ce),F("SSS",ve,he),xn="SSSS";xn.length<=9;xn+="S")F(xn,xe);for(xn="S";xn.length<=9;xn+="S")z(xn,zt);var wn=Y("Milliseconds",!1);I("z",0,0,"zoneAbbr"),I("zz",0,0,"zoneName");var kn=m.prototype;kn.add=gn,kn.calendar=function(t,e){var i=t||yt(),r=St(i,this).startOf("day"),o=n.calendarFormat(this,r)||"sameElse",a=e&&(M(e[o])?e[o].call(this,i):e[o]);return this.format(a||this.localeData().calendar(o,this,yt(i)))},kn.clone=function(){return new m(this)},kn.diff=function(t,e,n){var i,r,o;if(!this.isValid())return NaN;if(!(i=St(t,this)).isValid())return NaN;switch(r=6e4*(i.utcOffset()-this.utcOffset()),e=T(e)){case"year":o=Lt(this,i)/12;break;case"month":o=Lt(this,i);break;case"quarter":o=Lt(this,i)/3;break;case"second":o=(this-i)/1e3;break;case"minute":o=(this-i)/6e4;break;case"hour":o=(this-i)/36e5;break;case"day":o=(this-i-r)/864e5;break;case"week":o=(this-i-r)/6048e5;break;default:o=this-i}return n?o:y(o)},kn.endOf=function(t){return void 0===(t=T(t))||"millisecond"===t?this:("date"===t&&(t="day"),this.startOf(t).add(1,"isoWeek"===t?"week":t).subtract(1,"ms"))},kn.format=function(t){t||(t=this.isUtc()?n.defaultFormatUtc:n.defaultFormat);var e=L(this,t);return this.localeData().postformat(e)},kn.from=function(t,e){return this.isValid()&&(v(t)&&t.isValid()||yt(t).isValid())?Tt({to:this,from:t}).locale(this.locale()).humanize(!e):this.localeData().invalidDate()},kn.fromNow=function(t){return this.from(yt(),t)},kn.to=function(t,e){return this.isValid()&&(v(t)&&t.isValid()||yt(t).isValid())?Tt({from:this,to:t}).locale(this.locale()).humanize(!e):this.localeData().invalidDate()},kn.toNow=function(t){return this.to(yt(),t)},kn.get=function(t){return M(this[t=T(t)])?this[t]():this},kn.invalidAt=function(){return d(this).overflow},kn.isAfter=function(t,e){var n=v(t)?t:yt(t);return!(!this.isValid()||!n.isValid())&&("millisecond"===(e=T(o(e)?"millisecond":e))?this.valueOf()>n.valueOf():n.valueOf()<this.clone().startOf(e).valueOf())},kn.isBefore=function(t,e){var n=v(t)?t:yt(t);return!(!this.isValid()||!n.isValid())&&("millisecond"===(e=T(o(e)?"millisecond":e))?this.valueOf()<n.valueOf():this.clone().endOf(e).valueOf()<n.valueOf())},kn.isBetween=function(t,e,n,i){return("("===(i=i||"()")[0]?this.isAfter(t,n):!this.isBefore(t,n))&&(")"===i[1]?this.isBefore(e,n):!this.isAfter(e,n))},kn.isSame=function(t,e){var n,i=v(t)?t:yt(t);return!(!this.isValid()||!i.isValid())&&("millisecond"===(e=T(e||"millisecond"))?this.valueOf()===i.valueOf():(n=i.valueOf(),this.clone().startOf(e).valueOf()<=n&&n<=this.clone().endOf(e).valueOf()))},kn.isSameOrAfter=function(t,e){return this.isSame(t,e)||this.isAfter(t,e)},kn.isSameOrBefore=function(t,e){return this.isSame(t,e)||this.isBefore(t,e)},kn.isValid=function(){return f(this)},kn.lang=vn,kn.locale=Et,kn.localeData=Ft,kn.max=cn,kn.min=un,kn.parsingFlags=function(){return c({},d(this))},kn.set=function(t,e){if("object"==typeof t)for(var n=function(t){var e=[];for(var n in t)e.push({unit:n,priority:re[n]});return e.sort(function(t,e){return t.priority-e.priority}),e}(t=P(t)),i=0;i<n.length;i++)this[n[i].unit](t[n[i].unit]);else if(M(this[t=T(t)]))return this[t](e);return this},kn.startOf=function(t){switch(t=T(t)){case"year":this.month(0);case"quarter":case"month":this.date(1);case"week":case"isoWeek":case"day":case"date":this.hours(0);case"hour":this.minutes(0);case"minute":this.seconds(0);case"second":this.milliseconds(0)}return"week"===t&&this.weekday(0),"isoWeek"===t&&this.isoWeekday(1),"quarter"===t&&this.month(3*Math.floor(this.month()/3)),this},kn.subtract=mn,kn.toArray=function(){var t=this;return[t.year(),t.month(),t.date(),t.hour(),t.minute(),t.second(),t.millisecond()]},kn.toObject=function(){var t=this;return{years:t.year(),months:t.month(),date:t.date(),hours:t.hours(),minutes:t.minutes(),seconds:t.seconds(),milliseconds:t.milliseconds()}},kn.toDate=function(){return new Date(this.valueOf())},kn.toISOString=function(t){if(!this.isValid())return null;var e=!0!==t,n=e?this.clone().utc():this;return n.year()<0||9999<n.year()?L(n,e?"YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYYYY-MM-DD[T]HH:mm:ss.SSSZ"):M(Date.prototype.toISOString)?e?this.toDate().toISOString():new Date(this.valueOf()+60*this.utcOffset()*1e3).toISOString().replace("Z",L(n,"Z")):L(n,e?"YYYY-MM-DD[T]HH:mm:ss.SSS[Z]":"YYYY-MM-DD[T]HH:mm:ss.SSSZ");
},kn.inspect=function(){if(!this.isValid())return"moment.invalid(/* "+this._i+" */)";var t="moment",e="";this.isLocal()||(t=0===this.utcOffset()?"moment.utc":"moment.parseZone",e="Z");var n="["+t+'("]',i=0<=this.year()&&this.year()<=9999?"YYYY":"YYYYYY",r=e+'[")]';return this.format(n+i+"-MM-DD[T]HH:mm:ss.SSS"+r)},kn.toJSON=function(){return this.isValid()?this.toISOString():null},kn.toString=function(){return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ")},kn.unix=function(){return Math.floor(this.valueOf()/1e3)},kn.valueOf=function(){return this._d.valueOf()-6e4*(this._offset||0)},kn.creationData=function(){return{input:this._i,format:this._f,locale:this._locale,isUTC:this._isUTC,strict:this._strict}},kn.year=Re,kn.isLeapYear=function(){return j(this.year())},kn.weekYear=function(t){return Rt.call(this,t,this.week(),this.weekday(),this.localeData()._week.dow,this.localeData()._week.doy)},kn.isoWeekYear=function(t){return Rt.call(this,t,this.isoWeek(),this.isoWeekday(),1,4)},kn.quarter=kn.quarters=function(t){return null==t?Math.ceil((this.month()+1)/3):this.month(3*(t-1)+this.month()%3)},kn.month=U,kn.daysInMonth=function(){return V(this.year(),this.month())},kn.week=kn.weeks=function(t){var e=this.localeData().week(this);return null==t?e:this.add(7*(t-e),"d")},kn.isoWeek=kn.isoWeeks=function(t){var e=J(this,1,4).week;return null==t?e:this.add(7*(t-e),"d")},kn.weeksInYear=function(){var t=this.localeData()._week;return K(this.year(),t.dow,t.doy)},kn.isoWeeksInYear=function(){return K(this.year(),1,4)},kn.date=yn,kn.day=kn.days=function(t){if(!this.isValid())return null!=t?this:NaN;var e,n,i=this._isUTC?this._d.getUTCDay():this._d.getDay();return null!=t?(e=t,n=this.localeData(),t="string"!=typeof e?e:isNaN(e)?"number"==typeof(e=n.weekdaysParse(e))?e:null:parseInt(e,10),this.add(t-i,"d")):i},kn.weekday=function(t){if(!this.isValid())return null!=t?this:NaN;var e=(this.day()+7-this.localeData()._week.dow)%7;return null==t?e:this.add(t-e,"d")},kn.isoWeekday=function(t){if(!this.isValid())return null!=t?this:NaN;if(null==t)return this.day()||7;var e,n,i=(e=t,n=this.localeData(),"string"==typeof e?n.weekdaysParse(e)%7||7:isNaN(e)?null:e);return this.day(this.day()%7?i:i-7)},kn.dayOfYear=function(t){var e=Math.round((this.clone().startOf("day")-this.clone().startOf("year"))/864e5)+1;return null==t?e:this.add(t-e,"d")},kn.hour=kn.hours=Xe,kn.minute=kn.minutes=bn,kn.second=kn.seconds=_n,kn.millisecond=kn.milliseconds=wn,kn.utcOffset=function(t,e,i){var r,o=this._offset||0;if(!this.isValid())return null!=t?this:NaN;if(null==t)return this._isUTC?o:Ct(this);if("string"==typeof t){if(null===(t=Mt(ke,t)))return this}else Math.abs(t)<16&&!i&&(t*=60);return!this._isUTC&&e&&(r=Ct(this)),this._offset=t,this._isUTC=!0,null!=r&&this.add(r,"m"),o!==t&&(!e||this._changeInProgress?It(this,Tt(t-o,"m"),1,!1):this._changeInProgress||(this._changeInProgress=!0,n.updateOffset(this,!0),this._changeInProgress=null)),this},kn.utc=function(t){return this.utcOffset(0,t)},kn.local=function(t){return this._isUTC&&(this.utcOffset(0,t),this._isUTC=!1,t&&this.subtract(Ct(this),"m")),this},kn.parseZone=function(){if(null!=this._tzm)this.utcOffset(this._tzm,!1,!0);else if("string"==typeof this._i){var t=Mt(we,this._i);null!=t?this.utcOffset(t):this.utcOffset(0,!0)}return this},kn.hasAlignedHourOffset=function(t){return!!this.isValid()&&(t=t?yt(t).utcOffset():0,(this.utcOffset()-t)%60==0)},kn.isDST=function(){return this.utcOffset()>this.clone().month(0).utcOffset()||this.utcOffset()>this.clone().month(5).utcOffset()},kn.isLocal=function(){return!!this.isValid()&&!this._isUTC},kn.isUtcOffset=function(){return!!this.isValid()&&this._isUTC},kn.isUtc=Dt,kn.isUTC=Dt,kn.zoneAbbr=function(){return this._isUTC?"UTC":""},kn.zoneName=function(){return this._isUTC?"Coordinated Universal Time":""},kn.dates=w("dates accessor is deprecated. Use date instead.",yn),kn.months=w("months accessor is deprecated. Use month instead",U),kn.years=w("years accessor is deprecated. Use year instead",Re),kn.zone=w("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/",function(t,e){return null!=t?("string"!=typeof t&&(t=-t),this.utcOffset(t,e),this):-this.utcOffset()}),kn.isDSTShifted=w("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information",function(){if(!o(this._isDSTShifted))return this._isDSTShifted;var t={};if(g(t,this),(t=mt(t))._a){var e=t._isUTC?h(t._a):yt(t._a);this._isDSTShifted=this.isValid()&&0<x(t._a,e.toArray())}else this._isDSTShifted=!1;return this._isDSTShifted});var Mn=C.prototype;Mn.calendar=function(t,e,n){var i=this._calendar[t]||this._calendar.sameElse;return M(i)?i.call(e,n):i},Mn.longDateFormat=function(t){var e=this._longDateFormat[t],n=this._longDateFormat[t.toUpperCase()];return e||!n?e:(this._longDateFormat[t]=n.replace(/MMMM|MM|DD|dddd/g,function(t){return t.slice(1)}),this._longDateFormat[t])},Mn.invalidDate=function(){return this._invalidDate},Mn.ordinal=function(t){return this._ordinal.replace("%d",t)},Mn.preparse=Wt,Mn.postformat=Wt,Mn.relativeTime=function(t,e,n,i){var r=this._relativeTime[n];return M(r)?r(t,e,n,i):r.replace(/%d/i,t)},Mn.pastFuture=function(t,e){var n=this._relativeTime[0<t?"future":"past"];return M(n)?n(e):n.replace(/%s/i,e)},Mn.set=function(t){var e,n;for(n in t)M(e=t[n])?this[n]=e:this["_"+n]=e;this._config=t,this._dayOfMonthOrdinalParseLenient=new RegExp((this._dayOfMonthOrdinalParse.source||this._ordinalParse.source)+"|"+/\d{1,2}/.source)},Mn.months=function(t,e){return t?i(this._months)?this._months[t.month()]:this._months[(this._months.isFormat||ze).test(e)?"format":"standalone"][t.month()]:i(this._months)?this._months:this._months.standalone},Mn.monthsShort=function(t,e){return t?i(this._monthsShort)?this._monthsShort[t.month()]:this._monthsShort[ze.test(e)?"format":"standalone"][t.month()]:i(this._monthsShort)?this._monthsShort:this._monthsShort.standalone},Mn.monthsParse=function(t,e,n){var i,r,o;if(this._monthsParseExact)return function(t,e,n){var i,r,o,a=t.toLocaleLowerCase();if(!this._monthsParse)for(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[],i=0;i<12;++i)o=h([2e3,i]),this._shortMonthsParse[i]=this.monthsShort(o,"").toLocaleLowerCase(),this._longMonthsParse[i]=this.months(o,"").toLocaleLowerCase();return n?"MMM"===e?-1!==(r=Ne.call(this._shortMonthsParse,a))?r:null:-1!==(r=Ne.call(this._longMonthsParse,a))?r:null:"MMM"===e?-1!==(r=Ne.call(this._shortMonthsParse,a))?r:-1!==(r=Ne.call(this._longMonthsParse,a))?r:null:-1!==(r=Ne.call(this._longMonthsParse,a))?r:-1!==(r=Ne.call(this._shortMonthsParse,a))?r:null}.call(this,t,e,n);for(this._monthsParse||(this._monthsParse=[],this._longMonthsParse=[],this._shortMonthsParse=[]),i=0;i<12;i++){if(r=h([2e3,i]),n&&!this._longMonthsParse[i]&&(this._longMonthsParse[i]=new RegExp("^"+this.months(r,"").replace(".","")+"$","i"),this._shortMonthsParse[i]=new RegExp("^"+this.monthsShort(r,"").replace(".","")+"$","i")),n||this._monthsParse[i]||(o="^"+this.months(r,"")+"|^"+this.monthsShort(r,""),this._monthsParse[i]=new RegExp(o.replace(".",""),"i")),n&&"MMMM"===e&&this._longMonthsParse[i].test(t))return i;if(n&&"MMM"===e&&this._shortMonthsParse[i].test(t))return i;if(!n&&this._monthsParse[i].test(t))return i}},Mn.monthsRegex=function(t){return this._monthsParseExact?(u(this,"_monthsRegex")||G.call(this),t?this._monthsStrictRegex:this._monthsRegex):(u(this,"_monthsRegex")||(this._monthsRegex=Ye),this._monthsStrictRegex&&t?this._monthsStrictRegex:this._monthsRegex)},Mn.monthsShortRegex=function(t){return this._monthsParseExact?(u(this,"_monthsRegex")||G.call(this),t?this._monthsShortStrictRegex:this._monthsShortRegex):(u(this,"_monthsShortRegex")||(this._monthsShortRegex=je),this._monthsShortStrictRegex&&t?this._monthsShortStrictRegex:this._monthsShortRegex)},Mn.week=function(t){return J(t,this._week.dow,this._week.doy).week},Mn.firstDayOfYear=function(){return this._week.doy},Mn.firstDayOfWeek=function(){return this._week.dow},Mn.weekdays=function(t,e){return t?i(this._weekdays)?this._weekdays[t.day()]:this._weekdays[this._weekdays.isFormat.test(e)?"format":"standalone"][t.day()]:i(this._weekdays)?this._weekdays:this._weekdays.standalone},Mn.weekdaysMin=function(t){return t?this._weekdaysMin[t.day()]:this._weekdaysMin},Mn.weekdaysShort=function(t){return t?this._weekdaysShort[t.day()]:this._weekdaysShort},Mn.weekdaysParse=function(t,e,n){var i,r,o;if(this._weekdaysParseExact)return function(t,e,n){var i,r,o,a=t.toLocaleLowerCase();if(!this._weekdaysParse)for(this._weekdaysParse=[],this._shortWeekdaysParse=[],this._minWeekdaysParse=[],i=0;i<7;++i)o=h([2e3,1]).day(i),this._minWeekdaysParse[i]=this.weekdaysMin(o,"").toLocaleLowerCase(),this._shortWeekdaysParse[i]=this.weekdaysShort(o,"").toLocaleLowerCase(),this._weekdaysParse[i]=this.weekdays(o,"").toLocaleLowerCase();return n?"dddd"===e?-1!==(r=Ne.call(this._weekdaysParse,a))?r:null:"ddd"===e?-1!==(r=Ne.call(this._shortWeekdaysParse,a))?r:null:-1!==(r=Ne.call(this._minWeekdaysParse,a))?r:null:"dddd"===e?-1!==(r=Ne.call(this._weekdaysParse,a))?r:-1!==(r=Ne.call(this._shortWeekdaysParse,a))?r:-1!==(r=Ne.call(this._minWeekdaysParse,a))?r:null:"ddd"===e?-1!==(r=Ne.call(this._shortWeekdaysParse,a))?r:-1!==(r=Ne.call(this._weekdaysParse,a))?r:-1!==(r=Ne.call(this._minWeekdaysParse,a))?r:null:-1!==(r=Ne.call(this._minWeekdaysParse,a))?r:-1!==(r=Ne.call(this._weekdaysParse,a))?r:-1!==(r=Ne.call(this._shortWeekdaysParse,a))?r:null}.call(this,t,e,n);for(this._weekdaysParse||(this._weekdaysParse=[],this._minWeekdaysParse=[],this._shortWeekdaysParse=[],this._fullWeekdaysParse=[]),i=0;i<7;i++){if(r=h([2e3,1]).day(i),n&&!this._fullWeekdaysParse[i]&&(this._fullWeekdaysParse[i]=new RegExp("^"+this.weekdays(r,"").replace(".","\\.?")+"$","i"),this._shortWeekdaysParse[i]=new RegExp("^"+this.weekdaysShort(r,"").replace(".","\\.?")+"$","i"),this._minWeekdaysParse[i]=new RegExp("^"+this.weekdaysMin(r,"").replace(".","\\.?")+"$","i")),this._weekdaysParse[i]||(o="^"+this.weekdays(r,"")+"|^"+this.weekdaysShort(r,"")+"|^"+this.weekdaysMin(r,""),this._weekdaysParse[i]=new RegExp(o.replace(".",""),"i")),n&&"dddd"===e&&this._fullWeekdaysParse[i].test(t))return i;if(n&&"ddd"===e&&this._shortWeekdaysParse[i].test(t))return i;if(n&&"dd"===e&&this._minWeekdaysParse[i].test(t))return i;if(!n&&this._weekdaysParse[i].test(t))return i}},Mn.weekdaysRegex=function(t){return this._weekdaysParseExact?(u(this,"_weekdaysRegex")||tt.call(this),t?this._weekdaysStrictRegex:this._weekdaysRegex):(u(this,"_weekdaysRegex")||(this._weekdaysRegex=qe),this._weekdaysStrictRegex&&t?this._weekdaysStrictRegex:this._weekdaysRegex)},Mn.weekdaysShortRegex=function(t){return this._weekdaysParseExact?(u(this,"_weekdaysRegex")||tt.call(this),t?this._weekdaysShortStrictRegex:this._weekdaysShortRegex):(u(this,"_weekdaysShortRegex")||(this._weekdaysShortRegex=Ue),this._weekdaysShortStrictRegex&&t?this._weekdaysShortStrictRegex:this._weekdaysShortRegex)},Mn.weekdaysMinRegex=function(t){return this._weekdaysParseExact?(u(this,"_weekdaysRegex")||tt.call(this),t?this._weekdaysMinStrictRegex:this._weekdaysMinRegex):(u(this,"_weekdaysMinRegex")||(this._weekdaysMinRegex=Ge),this._weekdaysMinStrictRegex&&t?this._weekdaysMinStrictRegex:this._weekdaysMinRegex)},Mn.isPM=function(t){return"p"===(t+"").toLowerCase().charAt(0)},Mn.meridiem=function(t,e,n){return 11<t?n?"pm":"PM":n?"am":"AM"},at("en",{dayOfMonthOrdinalParse:/\d{1,2}(th|st|nd|rd)/,ordinal:function(t){var e=t%10;return t+(1===b(t%100/10)?"th":1===e?"st":2===e?"nd":3===e?"rd":"th")}}),n.lang=w("moment.lang is deprecated. Use moment.locale instead.",at),n.langData=w("moment.langData is deprecated. Use moment.localeData instead.",lt);var Sn=Math.abs,Cn=Ut("ms"),Dn=Ut("s"),Tn=Ut("m"),Pn=Ut("h"),An=Ut("d"),On=Ut("w"),In=Ut("M"),Ln=Ut("y"),En=Gt("milliseconds"),Fn=Gt("seconds"),Nn=Gt("minutes"),Rn=Gt("hours"),zn=Gt("days"),Wn=Gt("months"),Hn=Gt("years"),jn=Math.round,Yn={ss:44,s:45,m:45,h:22,d:26,M:11},Bn=Math.abs,$n=xt.prototype;return $n.isValid=function(){return this._isValid},$n.abs=function(){var t=this._data;return this._milliseconds=Sn(this._milliseconds),this._days=Sn(this._days),this._months=Sn(this._months),t.milliseconds=Sn(t.milliseconds),t.seconds=Sn(t.seconds),t.minutes=Sn(t.minutes),t.hours=Sn(t.hours),t.months=Sn(t.months),t.years=Sn(t.years),this},$n.add=function(t,e){return Bt(this,t,e,1)},$n.subtract=function(t,e){return Bt(this,t,e,-1)},$n.as=function(t){if(!this.isValid())return NaN;var e,n,i=this._milliseconds;if("month"===(t=T(t))||"year"===t)return e=this._days+i/864e5,n=this._months+Vt(e),"month"===t?n:n/12;switch(e=this._days+Math.round(qt(this._months)),t){case"week":return e/7+i/6048e5;case"day":return e+i/864e5;case"hour":return 24*e+i/36e5;case"minute":return 1440*e+i/6e4;case"second":return 86400*e+i/1e3;case"millisecond":return Math.floor(864e5*e)+i;default:throw new Error("Unknown unit "+t)}},$n.asMilliseconds=Cn,$n.asSeconds=Dn,$n.asMinutes=Tn,$n.asHours=Pn,$n.asDays=An,$n.asWeeks=On,$n.asMonths=In,$n.asYears=Ln,$n.valueOf=function(){return this.isValid()?this._milliseconds+864e5*this._days+this._months%12*2592e6+31536e6*b(this._months/12):NaN},$n._bubble=function(){var t,e,n,i,r,o=this._milliseconds,a=this._days,s=this._months,l=this._data;return 0<=o&&0<=a&&0<=s||o<=0&&a<=0&&s<=0||(o+=864e5*$t(qt(s)+a),s=a=0),l.milliseconds=o%1e3,t=y(o/1e3),l.seconds=t%60,e=y(t/60),l.minutes=e%60,n=y(e/60),l.hours=n%24,s+=r=y(Vt(a+=y(n/24))),a-=$t(qt(r)),i=y(s/12),s%=12,l.days=a,l.months=s,l.years=i,this},$n.clone=function(){return Tt(this)},$n.get=function(t){return t=T(t),this.isValid()?this[t+"s"]():NaN},$n.milliseconds=En,$n.seconds=Fn,$n.minutes=Nn,$n.hours=Rn,$n.days=zn,$n.weeks=function(){return y(this.days()/7)},$n.months=Wn,$n.years=Hn,$n.humanize=function(t){if(!this.isValid())return this.localeData().invalidDate();var e,n,i,r,o,a,s,l,u,c,h,d=this.localeData(),f=(n=!t,i=d,r=Tt(e=this).abs(),o=jn(r.as("s")),a=jn(r.as("m")),s=jn(r.as("h")),l=jn(r.as("d")),u=jn(r.as("M")),c=jn(r.as("y")),(h=o<=Yn.ss&&["s",o]||o<Yn.s&&["ss",o]||a<=1&&["m"]||a<Yn.m&&["mm",a]||s<=1&&["h"]||s<Yn.h&&["hh",s]||l<=1&&["d"]||l<Yn.d&&["dd",l]||u<=1&&["M"]||u<Yn.M&&["MM",u]||c<=1&&["y"]||["yy",c])[2]=n,h[3]=0<+e,h[4]=i,function(t,e,n,i,r){return r.relativeTime(e||1,!!n,t,i)}.apply(null,h));return t&&(f=d.pastFuture(+this,f)),d.postformat(f)},$n.toISOString=Xt,$n.toString=Xt,$n.toJSON=Xt,$n.locale=Et,$n.localeData=Ft,$n.toIsoString=w("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)",Xt),$n.lang=vn,I("X",0,0,"unix"),I("x",0,0,"valueOf"),F("x",_e),F("X",/[+-]?\d+(\.\d{1,3})?/),z("X",function(t,e,n){n._d=new Date(1e3*parseFloat(t,10))}),z("x",function(t,e,n){n._d=new Date(b(t))}),n.version="2.22.2",Qt=yt,n.fn=kn,n.min=function(){return bt("isBefore",[].slice.call(arguments,0))},n.max=function(){return bt("isAfter",[].slice.call(arguments,0))},n.now=function(){return Date.now?Date.now():+new Date},n.utc=h,n.unix=function(t){return yt(1e3*t)},n.months=function(t,e){return jt(t,e,"months")},n.isDate=s,n.locale=at,n.invalid=p,n.duration=Tt,n.isMoment=v,n.weekdays=function(t,e,n){return Yt(t,e,n,"weekdays")},n.parseZone=function(){return yt.apply(null,arguments).parseZone()},n.localeData=lt,n.isDuration=_t,n.monthsShort=function(t,e){return jt(t,e,"monthsShort")},n.weekdaysMin=function(t,e,n){return Yt(t,e,n,"weekdaysMin")},n.defineLocale=st,n.updateLocale=function(t,e){if(null!=e){var n,i,r=Qe;null!=(i=ot(t))&&(r=i._config),(n=new C(e=S(r,e))).parentLocale=Je[t],Je[t]=n,at(t)}else null!=Je[t]&&(null!=Je[t].parentLocale?Je[t]=Je[t].parentLocale:null!=Je[t]&&delete Je[t]);return Je[t]},n.locales=function(){return Kt(Je)},n.weekdaysShort=function(t,e,n){return Yt(t,e,n,"weekdaysShort")},n.normalizeUnits=T,n.relativeTimeRounding=function(t){return void 0===t?jn:"function"==typeof t&&(jn=t,!0)},n.relativeTimeThreshold=function(t,e){return void 0!==Yn[t]&&(void 0===e?Yn[t]:(Yn[t]=e,"s"===t&&(Yn.ss=e-1),!0))},n.calendarFormat=function(t,e){var n=t.diff(e,"days",!0);return n<-6?"sameElse":n<-1?"lastWeek":n<0?"lastDay":n<1?"sameDay":n<2?"nextDay":n<7?"nextWeek":"sameElse"},n.prototype=kn,n.HTML5_FMT={DATETIME_LOCAL:"YYYY-MM-DDTHH:mm",DATETIME_LOCAL_SECONDS:"YYYY-MM-DDTHH:mm:ss",DATETIME_LOCAL_MS:"YYYY-MM-DDTHH:mm:ss.SSS",DATE:"YYYY-MM-DD",TIME:"HH:mm",TIME_SECONDS:"HH:mm:ss",TIME_MS:"HH:mm:ss.SSS",WEEK:"YYYY-[W]WW",MONTH:"YYYY-MM"},n},"object"==typeof n&&void 0!==e?e.exports=r():i.moment=r()},{}],7:[function(t,e,n){var i=t(30)();i.helpers=t(46),t(28)(i),i.Animation=t(22),i.animationService=t(23),i.defaults=t(26),i.Element=t(27),i.elements=t(41),i.Interaction=t(29),i.layouts=t(31),i.platform=t(49),i.plugins=t(32),i.Scale=t(33),i.scaleService=t(34),i.Ticks=t(35),i.Tooltip=t(36),t(24)(i),t(25)(i),t(56)(i),t(54)(i),t(55)(i),t(57)(i),t(58)(i),t(59)(i),t(15)(i),t(16)(i),t(17)(i),t(18)(i),t(19)(i),t(20)(i),t(21)(i),t(8)(i),t(9)(i),t(10)(i),t(11)(i),t(12)(i),t(13)(i),t(14)(i);var r=t(50);for(var o in r)r.hasOwnProperty(o)&&i.plugins.register(r[o]);i.platform.initialize(),e.exports=i,"undefined"!=typeof window&&(window.Chart=i),i.Legend=r.legend._element,i.Title=r.title._element,i.pluginService=i.plugins,i.PluginBase=i.Element.extend({}),i.canvasHelpers=i.helpers.canvas,i.layoutService=i.layouts},{10:10,11:11,12:12,13:13,14:14,15:15,16:16,17:17,18:18,19:19,20:20,21:21,22:22,23:23,24:24,25:25,26:26,27:27,28:28,29:29,30:30,31:31,32:32,33:33,34:34,35:35,36:36,41:41,46:46,49:49,50:50,54:54,55:55,56:56,57:57,58:58,59:59,8:8,9:9}],8:[function(t,e,n){"use strict";e.exports=function(t){t.Bar=function(e,n){return n.type="bar",new t(e,n)}}},{}],9:[function(t,e,n){"use strict";e.exports=function(t){t.Bubble=function(e,n){return n.type="bubble",new t(e,n)}}},{}],10:[function(t,e,n){"use strict";e.exports=function(t){t.Doughnut=function(e,n){return n.type="doughnut",new t(e,n)}}},{}],11:[function(t,e,n){"use strict";e.exports=function(t){t.Line=function(e,n){return n.type="line",new t(e,n)}}},{}],12:[function(t,e,n){"use strict";e.exports=function(t){t.PolarArea=function(e,n){return n.type="polarArea",new t(e,n)}}},{}],13:[function(t,e,n){"use strict";e.exports=function(t){t.Radar=function(e,n){return n.type="radar",new t(e,n)}}},{}],14:[function(t,e,n){"use strict";e.exports=function(t){t.Scatter=function(e,n){return n.type="scatter",new t(e,n)}}},{}],15:[function(t,e,n){"use strict";var i=t(26),r=t(41),o=t(46);i._set("bar",{hover:{mode:"label"},scales:{xAxes:[{type:"category",categoryPercentage:.8,barPercentage:.9,offset:!0,gridLines:{offsetGridLines:!0}}],yAxes:[{type:"linear"}]}}),i._set("horizontalBar",{hover:{mode:"index",axis:"y"},scales:{xAxes:[{type:"linear",position:"bottom"}],yAxes:[{position:"left",type:"category",categoryPercentage:.8,barPercentage:.9,offset:!0,gridLines:{offsetGridLines:!0}}]},elements:{rectangle:{borderSkipped:"left"}},tooltips:{callbacks:{title:function(t,e){var n="";return 0<t.length&&(t[0].yLabel?n=t[0].yLabel:0<e.labels.length&&t[0].index<e.labels.length&&(n=e.labels[t[0].index])),n},label:function(t,e){return(e.datasets[t.datasetIndex].label||"")+": "+t.xLabel}},mode:"index",axis:"y"}}),e.exports=function(t){t.controllers.bar=t.DatasetController.extend({dataElementType:r.Rectangle,initialize:function(){var e;t.DatasetController.prototype.initialize.apply(this,arguments),(e=this.getMeta()).stack=this.getDataset().stack,e.bar=!0},update:function(t){var e,n,i=this.getMeta().data;for(this._ruler=this.getRuler(),e=0,n=i.length;e<n;++e)this.updateElement(i[e],e,t)},updateElement:function(t,e,n){var i=this,r=i.chart,a=i.getMeta(),s=i.getDataset(),l=t.custom||{},u=r.options.elements.rectangle;t._xScale=i.getScaleForId(a.xAxisID),t._yScale=i.getScaleForId(a.yAxisID),t._datasetIndex=i.index,t._index=e,t._model={datasetLabel:s.label,label:r.data.labels[e],borderSkipped:l.borderSkipped?l.borderSkipped:u.borderSkipped,backgroundColor:l.backgroundColor?l.backgroundColor:o.valueAtIndexOrDefault(s.backgroundColor,e,u.backgroundColor),borderColor:l.borderColor?l.borderColor:o.valueAtIndexOrDefault(s.borderColor,e,u.borderColor),borderWidth:l.borderWidth?l.borderWidth:o.valueAtIndexOrDefault(s.borderWidth,e,u.borderWidth)},i.updateElementGeometry(t,e,n),t.pivot()},updateElementGeometry:function(t,e,n){var i=this,r=t._model,o=i.getValueScale(),a=o.getBasePixel(),s=o.isHorizontal(),l=i._ruler||i.getRuler(),u=i.calculateBarValuePixels(i.index,e),c=i.calculateBarIndexPixels(i.index,e,l);r.horizontal=s,r.base=n?a:u.base,r.x=s?n?a:u.head:c.center,r.y=s?c.center:n?a:u.head,r.height=s?c.size:void 0,r.width=s?void 0:c.size},getValueScaleId:function(){return this.getMeta().yAxisID},getIndexScaleId:function(){return this.getMeta().xAxisID},getValueScale:function(){return this.getScaleForId(this.getValueScaleId())},getIndexScale:function(){return this.getScaleForId(this.getIndexScaleId())},_getStacks:function(t){var e,n,i=this.chart,r=this.getIndexScale().options.stacked,o=void 0===t?i.data.datasets.length:t+1,a=[];for(e=0;e<o;++e)(n=i.getDatasetMeta(e)).bar&&i.isDatasetVisible(e)&&(!1===r||!0===r&&-1===a.indexOf(n.stack)||void 0===r&&(void 0===n.stack||-1===a.indexOf(n.stack)))&&a.push(n.stack);return a},getStackCount:function(){return this._getStacks().length},getStackIndex:function(t,e){var n=this._getStacks(t),i=void 0!==e?n.indexOf(e):-1;return-1===i?n.length-1:i},getRuler:function(){var t,e,n=this.getIndexScale(),i=this.getStackCount(),r=this.index,a=n.isHorizontal(),s=a?n.left:n.top,l=s+(a?n.width:n.height),u=[];for(t=0,e=this.getMeta().data.length;t<e;++t)u.push(n.getPixelForValue(null,t,r));return{min:o.isNullOrUndef(n.options.barThickness)?function(t,e){var n,i,r,o,a=t.isHorizontal()?t.width:t.height,s=t.getTicks();for(r=1,o=e.length;r<o;++r)a=Math.min(a,e[r]-e[r-1]);for(r=0,o=s.length;r<o;++r)i=t.getPixelForTick(r),a=0<r?Math.min(a,i-n):a,n=i;return a}(n,u):-1,pixels:u,start:s,end:l,stackCount:i,scale:n}},calculateBarValuePixels:function(t,e){var n,i,r,o,a,s,l=this.chart,u=this.getMeta(),c=this.getValueScale(),h=l.data.datasets,d=c.getRightValue(h[t].data[e]),f=c.options.stacked,p=u.stack,g=0;if(f||void 0===f&&void 0!==p)for(n=0;n<t;++n)(i=l.getDatasetMeta(n)).bar&&i.stack===p&&i.controller.getValueScaleId()===c.id&&l.isDatasetVisible(n)&&(r=c.getRightValue(h[n].data[e]),(d<0&&r<0||0<=d&&0<r)&&(g+=r));return o=c.getPixelForValue(g),{size:s=((a=c.getPixelForValue(g+d))-o)/2,base:o,head:a,center:a+s/2}},calculateBarIndexPixels:function(t,e,n){var i,r,a,s,l,u,c,h,d,f,p,g,m,v,y,b,x,_=n.scale.options,w="flex"===_.barThickness?(d=e,p=_,m=(f=n).pixels,v=m[d],y=0<d?m[d-1]:null,b=d<m.length-1?m[d+1]:null,x=p.categoryPercentage,null===y&&(y=v-(null===b?f.end-v:b-v)),null===b&&(b=v+v-y),g=v-(v-y)/2*x,{chunk:(b-y)/2*x/f.stackCount,ratio:p.barPercentage,start:g}):(i=e,r=n,u=(a=_).barThickness,c=r.stackCount,h=r.pixels[i],l=o.isNullOrUndef(u)?(s=r.min*a.categoryPercentage,a.barPercentage):(s=u*c,1),{chunk:s/c,ratio:l,start:h-s/2}),k=this.getStackIndex(t,this.getMeta().stack),M=w.start+w.chunk*k+w.chunk/2,S=Math.min(o.valueOrDefault(_.maxBarThickness,1/0),w.chunk*w.ratio);return{base:M-S/2,head:M+S/2,center:M,size:S}},draw:function(){var t=this.chart,e=this.getValueScale(),n=this.getMeta().data,i=this.getDataset(),r=n.length,a=0;for(o.canvas.clipArea(t.ctx,t.chartArea);a<r;++a)isNaN(e.getRightValue(i.data[a]))||n[a].draw();o.canvas.unclipArea(t.ctx)}}),t.controllers.horizontalBar=t.controllers.bar.extend({getValueScaleId:function(){return this.getMeta().xAxisID},getIndexScaleId:function(){return this.getMeta().yAxisID}})}},{26:26,41:41,46:46}],16:[function(t,e,n){"use strict";var i=t(26),r=t(41),o=t(46);i._set("bubble",{hover:{mode:"single"},scales:{xAxes:[{type:"linear",position:"bottom",id:"x-axis-0"}],yAxes:[{type:"linear",position:"left",id:"y-axis-0"}]},tooltips:{callbacks:{title:function(){return""},label:function(t,e){var n=e.datasets[t.datasetIndex].label||"",i=e.datasets[t.datasetIndex].data[t.index];return n+": ("+t.xLabel+", "+t.yLabel+", "+i.r+")"}}}}),e.exports=function(t){t.controllers.bubble=t.DatasetController.extend({dataElementType:r.Point,update:function(t){var e=this,n=e.getMeta().data;o.each(n,function(n,i){e.updateElement(n,i,t)})},updateElement:function(t,e,n){var i=this,r=i.getMeta(),o=t.custom||{},a=i.getScaleForId(r.xAxisID),s=i.getScaleForId(r.yAxisID),l=i._resolveElementOptions(t,e),u=i.getDataset().data[e],c=i.index,h=n?a.getPixelForDecimal(.5):a.getPixelForValue("object"==typeof u?u:NaN,e,c),d=n?s.getBasePixel():s.getPixelForValue(u,e,c);t._xScale=a,t._yScale=s,t._options=l,t._datasetIndex=c,t._index=e,t._model={backgroundColor:l.backgroundColor,borderColor:l.borderColor,borderWidth:l.borderWidth,hitRadius:l.hitRadius,pointStyle:l.pointStyle,rotation:l.rotation,radius:n?0:l.radius,skip:o.skip||isNaN(h)||isNaN(d),x:h,y:d},t.pivot()},setHoverStyle:function(t){var e=t._model,n=t._options;t.$previousStyle={backgroundColor:e.backgroundColor,borderColor:e.borderColor,borderWidth:e.borderWidth,radius:e.radius},e.backgroundColor=o.valueOrDefault(n.hoverBackgroundColor,o.getHoverColor(n.backgroundColor)),e.borderColor=o.valueOrDefault(n.hoverBorderColor,o.getHoverColor(n.borderColor)),e.borderWidth=o.valueOrDefault(n.hoverBorderWidth,n.borderWidth),e.radius=n.radius+n.hoverRadius},_resolveElementOptions:function(t,e){var n,i,r,a=this.chart,s=a.data.datasets[this.index],l=t.custom||{},u=a.options.elements.point,c=o.options.resolve,h=s.data[e],d={},f={chart:a,dataIndex:e,dataset:s,datasetIndex:this.index},p=["backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","hoverRadius","hitRadius","pointStyle","rotation"];for(n=0,i=p.length;n<i;++n)d[r=p[n]]=c([l[r],s[r],u[r]],f,e);return d.radius=c([l.radius,h?h.r:void 0,s.radius,u.radius],f,e),d}})}},{26:26,41:41,46:46}],17:[function(t,e,n){"use strict";var i=t(26),r=t(41),o=t(46);i._set("doughnut",{animation:{animateRotate:!0,animateScale:!1},hover:{mode:"single"},legendCallback:function(t){var e=[];e.push('<ul class="'+t.id+'-legend">');var n=t.data,i=n.datasets,r=n.labels;if(i.length)for(var o=0;o<i[0].data.length;++o)e.push('<li><span style="background-color:'+i[0].backgroundColor[o]+'"></span>'),r[o]&&e.push(r[o]),e.push("</li>");return e.push("</ul>"),e.join("")},legend:{labels:{generateLabels:function(t){var e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(function(n,i){var r=t.getDatasetMeta(0),a=e.datasets[0],s=r.data[i],l=s&&s.custom||{},u=o.valueAtIndexOrDefault,c=t.options.elements.arc;return{text:n,fillStyle:l.backgroundColor?l.backgroundColor:u(a.backgroundColor,i,c.backgroundColor),strokeStyle:l.borderColor?l.borderColor:u(a.borderColor,i,c.borderColor),lineWidth:l.borderWidth?l.borderWidth:u(a.borderWidth,i,c.borderWidth),hidden:isNaN(a.data[i])||r.data[i].hidden,index:i}}):[]}},onClick:function(t,e){var n,i,r,o=e.index,a=this.chart;for(n=0,i=(a.data.datasets||[]).length;n<i;++n)(r=a.getDatasetMeta(n)).data[o]&&(r.data[o].hidden=!r.data[o].hidden);a.update()}},cutoutPercentage:50,rotation:-.5*Math.PI,circumference:2*Math.PI,tooltips:{callbacks:{title:function(){return""},label:function(t,e){var n=e.labels[t.index],i=": "+e.datasets[t.datasetIndex].data[t.index];return o.isArray(n)?(n=n.slice())[0]+=i:n+=i,n}}}}),i._set("pie",o.clone(i.doughnut)),i._set("pie",{cutoutPercentage:0}),e.exports=function(t){t.controllers.doughnut=t.controllers.pie=t.DatasetController.extend({dataElementType:r.Arc,linkScales:o.noop,getRingIndex:function(t){for(var e=0,n=0;n<t;++n)this.chart.isDatasetVisible(n)&&++e;return e},update:function(t){var e=this,n=e.chart,i=n.chartArea,r=n.options,a=r.elements.arc,s=i.right-i.left-a.borderWidth,l=i.bottom-i.top-a.borderWidth,u=Math.min(s,l),c={x:0,y:0},h=e.getMeta(),d=r.cutoutPercentage,f=r.circumference;if(f<2*Math.PI){var p=r.rotation%(2*Math.PI),g=(p+=2*Math.PI*(p>=Math.PI?-1:p<-Math.PI?1:0))+f,m=Math.cos(p),v=Math.sin(p),y=Math.cos(g),b=Math.sin(g),x=p<=0&&0<=g||p<=2*Math.PI&&2*Math.PI<=g,_=p<=.5*Math.PI&&.5*Math.PI<=g||p<=2.5*Math.PI&&2.5*Math.PI<=g,w=p<=-Math.PI&&-Math.PI<=g||p<=Math.PI&&Math.PI<=g,k=p<=.5*-Math.PI&&.5*-Math.PI<=g||p<=1.5*Math.PI&&1.5*Math.PI<=g,M=d/100,S=w?-1:Math.min(m*(m<0?1:M),y*(y<0?1:M)),C=k?-1:Math.min(v*(v<0?1:M),b*(b<0?1:M)),D=x?1:Math.max(m*(0<m?1:M),y*(0<y?1:M)),T=_?1:Math.max(v*(0<v?1:M),b*(0<b?1:M)),P=.5*(D-S),A=.5*(T-C);u=Math.min(s/P,l/A),c={x:-.5*(D+S),y:-.5*(T+C)}}n.borderWidth=e.getMaxBorderWidth(h.data),n.outerRadius=Math.max((u-n.borderWidth)/2,0),n.innerRadius=Math.max(d?n.outerRadius/100*d:0,0),n.radiusLength=(n.outerRadius-n.innerRadius)/n.getVisibleDatasetCount(),n.offsetX=c.x*n.outerRadius,n.offsetY=c.y*n.outerRadius,h.total=e.calculateTotal(),e.outerRadius=n.outerRadius-n.radiusLength*e.getRingIndex(e.index),e.innerRadius=Math.max(e.outerRadius-n.radiusLength,0),o.each(h.data,function(n,i){e.updateElement(n,i,t)})},updateElement:function(t,e,n){var i=this,r=i.chart,a=r.chartArea,s=r.options,l=s.animation,u=(a.left+a.right)/2,c=(a.top+a.bottom)/2,h=s.rotation,d=s.rotation,f=i.getDataset(),p=n&&l.animateRotate?0:t.hidden?0:i.calculateCircumference(f.data[e])*(s.circumference/(2*Math.PI)),g=n&&l.animateScale?0:i.innerRadius,m=n&&l.animateScale?0:i.outerRadius,v=o.valueAtIndexOrDefault;o.extend(t,{_datasetIndex:i.index,_index:e,_model:{x:u+r.offsetX,y:c+r.offsetY,startAngle:h,endAngle:d,circumference:p,outerRadius:m,innerRadius:g,label:v(f.label,e,r.data.labels[e])}});var y=t._model,b=t.custom||{},x=o.valueAtIndexOrDefault,_=this.chart.options.elements.arc;y.backgroundColor=b.backgroundColor?b.backgroundColor:x(f.backgroundColor,e,_.backgroundColor),y.borderColor=b.borderColor?b.borderColor:x(f.borderColor,e,_.borderColor),y.borderWidth=b.borderWidth?b.borderWidth:x(f.borderWidth,e,_.borderWidth),n&&l.animateRotate||(y.startAngle=0===e?s.rotation:i.getMeta().data[e-1]._model.endAngle,y.endAngle=y.startAngle+y.circumference),t.pivot()},calculateTotal:function(){var t,e=this.getDataset(),n=this.getMeta(),i=0;return o.each(n.data,function(n,r){t=e.data[r],isNaN(t)||n.hidden||(i+=Math.abs(t))}),i},calculateCircumference:function(t){var e=this.getMeta().total;return 0<e&&!isNaN(t)?2*Math.PI*(Math.abs(t)/e):0},getMaxBorderWidth:function(t){for(var e,n,i=0,r=this.index,o=t.length,a=0;a<o;a++)i=(i=i<(e=t[a]._model?t[a]._model.borderWidth:0)?e:i)<(n=t[a]._chart?t[a]._chart.config.data.datasets[r].hoverBorderWidth:0)?n:i;return i}})}},{26:26,41:41,46:46}],18:[function(t,e,n){"use strict";var i=t(26),r=t(41),o=t(46);i._set("line",{showLines:!0,spanGaps:!1,hover:{mode:"label"},scales:{xAxes:[{type:"category",id:"x-axis-0"}],yAxes:[{type:"linear",id:"y-axis-0"}]}}),e.exports=function(t){function e(t,e){return o.valueOrDefault(t.showLine,e.showLines)}t.controllers.line=t.DatasetController.extend({datasetElementType:r.Line,dataElementType:r.Point,update:function(t){var n,i,r,a=this,s=a.getMeta(),l=s.dataset,u=s.data||[],c=a.chart.options,h=c.elements.line,d=a.getScaleForId(s.yAxisID),f=a.getDataset(),p=e(f,c);for(p&&(r=l.custom||{},void 0!==f.tension&&void 0===f.lineTension&&(f.lineTension=f.tension),l._scale=d,l._datasetIndex=a.index,l._children=u,l._model={spanGaps:f.spanGaps?f.spanGaps:c.spanGaps,tension:r.tension?r.tension:o.valueOrDefault(f.lineTension,h.tension),backgroundColor:r.backgroundColor?r.backgroundColor:f.backgroundColor||h.backgroundColor,borderWidth:r.borderWidth?r.borderWidth:f.borderWidth||h.borderWidth,borderColor:r.borderColor?r.borderColor:f.borderColor||h.borderColor,borderCapStyle:r.borderCapStyle?r.borderCapStyle:f.borderCapStyle||h.borderCapStyle,borderDash:r.borderDash?r.borderDash:f.borderDash||h.borderDash,borderDashOffset:r.borderDashOffset?r.borderDashOffset:f.borderDashOffset||h.borderDashOffset,borderJoinStyle:r.borderJoinStyle?r.borderJoinStyle:f.borderJoinStyle||h.borderJoinStyle,fill:r.fill?r.fill:void 0!==f.fill?f.fill:h.fill,steppedLine:r.steppedLine?r.steppedLine:o.valueOrDefault(f.steppedLine,h.stepped),cubicInterpolationMode:r.cubicInterpolationMode?r.cubicInterpolationMode:o.valueOrDefault(f.cubicInterpolationMode,h.cubicInterpolationMode)
},l.pivot()),n=0,i=u.length;n<i;++n)a.updateElement(u[n],n,t);for(p&&0!==l._model.tension&&a.updateBezierControlPoints(),n=0,i=u.length;n<i;++n)u[n].pivot()},getPointBackgroundColor:function(t,e){var n=this.chart.options.elements.point.backgroundColor,i=this.getDataset(),r=t.custom||{};return r.backgroundColor?n=r.backgroundColor:i.pointBackgroundColor?n=o.valueAtIndexOrDefault(i.pointBackgroundColor,e,n):i.backgroundColor&&(n=i.backgroundColor),n},getPointBorderColor:function(t,e){var n=this.chart.options.elements.point.borderColor,i=this.getDataset(),r=t.custom||{};return r.borderColor?n=r.borderColor:i.pointBorderColor?n=o.valueAtIndexOrDefault(i.pointBorderColor,e,n):i.borderColor&&(n=i.borderColor),n},getPointBorderWidth:function(t,e){var n=this.chart.options.elements.point.borderWidth,i=this.getDataset(),r=t.custom||{};return isNaN(r.borderWidth)?!isNaN(i.pointBorderWidth)||o.isArray(i.pointBorderWidth)?n=o.valueAtIndexOrDefault(i.pointBorderWidth,e,n):isNaN(i.borderWidth)||(n=i.borderWidth):n=r.borderWidth,n},getPointRotation:function(t,e){var n=this.chart.options.elements.point.rotation,i=this.getDataset(),r=t.custom||{};return isNaN(r.rotation)?isNaN(i.pointRotation)&&!o.isArray(i.pointRotation)||(n=o.valueAtIndexOrDefault(i.pointRotation,e,n)):n=r.rotation,n},updateElement:function(t,e,n){var i,r,a=this,s=a.getMeta(),l=t.custom||{},u=a.getDataset(),c=a.index,h=u.data[e],d=a.getScaleForId(s.yAxisID),f=a.getScaleForId(s.xAxisID),p=a.chart.options.elements.point;void 0!==u.radius&&void 0===u.pointRadius&&(u.pointRadius=u.radius),void 0!==u.hitRadius&&void 0===u.pointHitRadius&&(u.pointHitRadius=u.hitRadius),i=f.getPixelForValue("object"==typeof h?h:NaN,e,c),r=n?d.getBasePixel():a.calculatePointY(h,e,c),t._xScale=f,t._yScale=d,t._datasetIndex=c,t._index=e,t._model={x:i,y:r,skip:l.skip||isNaN(i)||isNaN(r),radius:l.radius||o.valueAtIndexOrDefault(u.pointRadius,e,p.radius),pointStyle:l.pointStyle||o.valueAtIndexOrDefault(u.pointStyle,e,p.pointStyle),rotation:a.getPointRotation(t,e),backgroundColor:a.getPointBackgroundColor(t,e),borderColor:a.getPointBorderColor(t,e),borderWidth:a.getPointBorderWidth(t,e),tension:s.dataset._model?s.dataset._model.tension:0,steppedLine:!!s.dataset._model&&s.dataset._model.steppedLine,hitRadius:l.hitRadius||o.valueAtIndexOrDefault(u.pointHitRadius,e,p.hitRadius)}},calculatePointY:function(t,e,n){var i,r,o,a=this.chart,s=this.getMeta(),l=this.getScaleForId(s.yAxisID),u=0,c=0;if(l.options.stacked){for(i=0;i<n;i++)if(r=a.data.datasets[i],"line"===(o=a.getDatasetMeta(i)).type&&o.yAxisID===l.id&&a.isDatasetVisible(i)){var h=Number(l.getRightValue(r.data[e]));h<0?c+=h||0:u+=h||0}var d=Number(l.getRightValue(t));return d<0?l.getPixelForValue(c+d):l.getPixelForValue(u+d)}return l.getPixelForValue(t)},updateBezierControlPoints:function(){function t(t,e,n){return Math.max(Math.min(t,n),e)}var e,n,i,r,a=this.getMeta(),s=this.chart.chartArea,l=a.data||[];if(a.dataset._model.spanGaps&&(l=l.filter(function(t){return!t._model.skip})),"monotone"===a.dataset._model.cubicInterpolationMode)o.splineCurveMonotone(l);else for(e=0,n=l.length;e<n;++e)i=l[e]._model,r=o.splineCurve(o.previousItem(l,e)._model,i,o.nextItem(l,e)._model,a.dataset._model.tension),i.controlPointPreviousX=r.previous.x,i.controlPointPreviousY=r.previous.y,i.controlPointNextX=r.next.x,i.controlPointNextY=r.next.y;if(this.chart.options.elements.line.capBezierPoints)for(e=0,n=l.length;e<n;++e)(i=l[e]._model).controlPointPreviousX=t(i.controlPointPreviousX,s.left,s.right),i.controlPointPreviousY=t(i.controlPointPreviousY,s.top,s.bottom),i.controlPointNextX=t(i.controlPointNextX,s.left,s.right),i.controlPointNextY=t(i.controlPointNextY,s.top,s.bottom)},draw:function(){var t,n=this.chart,i=this.getMeta(),r=i.data||[],a=n.chartArea,s=r.length,l=0;for(e(this.getDataset(),n.options)&&(t=(i.dataset._model.borderWidth||0)/2,o.canvas.clipArea(n.ctx,{left:a.left,right:a.right,top:a.top-t,bottom:a.bottom+t}),i.dataset.draw(),o.canvas.unclipArea(n.ctx));l<s;++l)r[l].draw(a)},setHoverStyle:function(t){var e=this.chart.data.datasets[t._datasetIndex],n=t._index,i=t.custom||{},r=t._model;t.$previousStyle={backgroundColor:r.backgroundColor,borderColor:r.borderColor,borderWidth:r.borderWidth,radius:r.radius},r.backgroundColor=i.hoverBackgroundColor||o.valueAtIndexOrDefault(e.pointHoverBackgroundColor,n,o.getHoverColor(r.backgroundColor)),r.borderColor=i.hoverBorderColor||o.valueAtIndexOrDefault(e.pointHoverBorderColor,n,o.getHoverColor(r.borderColor)),r.borderWidth=i.hoverBorderWidth||o.valueAtIndexOrDefault(e.pointHoverBorderWidth,n,r.borderWidth),r.radius=i.hoverRadius||o.valueAtIndexOrDefault(e.pointHoverRadius,n,this.chart.options.elements.point.hoverRadius)}})}},{26:26,41:41,46:46}],19:[function(t,e,n){"use strict";var i=t(26),r=t(41),o=t(46);i._set("polarArea",{scale:{type:"radialLinear",angleLines:{display:!1},gridLines:{circular:!0},pointLabels:{display:!1},ticks:{beginAtZero:!0}},animation:{animateRotate:!0,animateScale:!0},startAngle:-.5*Math.PI,legendCallback:function(t){var e=[];e.push('<ul class="'+t.id+'-legend">');var n=t.data,i=n.datasets,r=n.labels;if(i.length)for(var o=0;o<i[0].data.length;++o)e.push('<li><span style="background-color:'+i[0].backgroundColor[o]+'"></span>'),r[o]&&e.push(r[o]),e.push("</li>");return e.push("</ul>"),e.join("")},legend:{labels:{generateLabels:function(t){var e=t.data;return e.labels.length&&e.datasets.length?e.labels.map(function(n,i){var r=t.getDatasetMeta(0),a=e.datasets[0],s=r.data[i].custom||{},l=o.valueAtIndexOrDefault,u=t.options.elements.arc;return{text:n,fillStyle:s.backgroundColor?s.backgroundColor:l(a.backgroundColor,i,u.backgroundColor),strokeStyle:s.borderColor?s.borderColor:l(a.borderColor,i,u.borderColor),lineWidth:s.borderWidth?s.borderWidth:l(a.borderWidth,i,u.borderWidth),hidden:isNaN(a.data[i])||r.data[i].hidden,index:i}}):[]}},onClick:function(t,e){var n,i,r,o=e.index,a=this.chart;for(n=0,i=(a.data.datasets||[]).length;n<i;++n)(r=a.getDatasetMeta(n)).data[o].hidden=!r.data[o].hidden;a.update()}},tooltips:{callbacks:{title:function(){return""},label:function(t,e){return e.labels[t.index]+": "+t.yLabel}}}}),e.exports=function(t){t.controllers.polarArea=t.DatasetController.extend({dataElementType:r.Arc,linkScales:o.noop,update:function(t){var e,n,i,r=this,a=r.getDataset(),s=r.getMeta(),l=r.chart.options.startAngle||0,u=r._starts=[],c=r._angles=[];for(r._updateRadius(),s.count=r.countVisibleElements(),e=0,n=a.data.length;e<n;e++)u[e]=l,i=r._computeAngle(e),l+=c[e]=i;o.each(s.data,function(e,n){r.updateElement(e,n,t)})},_updateRadius:function(){var t=this,e=t.chart,n=e.chartArea,i=e.options,r=i.elements.arc,o=Math.min(n.right-n.left,n.bottom-n.top);e.outerRadius=Math.max((o-r.borderWidth/2)/2,0),e.innerRadius=Math.max(i.cutoutPercentage?e.outerRadius/100*i.cutoutPercentage:1,0),e.radiusLength=(e.outerRadius-e.innerRadius)/e.getVisibleDatasetCount(),t.outerRadius=e.outerRadius-e.radiusLength*t.index,t.innerRadius=t.outerRadius-e.radiusLength},updateElement:function(t,e,n){var i=this,r=i.chart,a=i.getDataset(),s=r.options,l=s.animation,u=r.scale,c=r.data.labels,h=u.xCenter,d=u.yCenter,f=s.startAngle,p=t.hidden?0:u.getDistanceFromCenterForValue(a.data[e]),g=i._starts[e],m=g+(t.hidden?0:i._angles[e]),v=l.animateScale?0:u.getDistanceFromCenterForValue(a.data[e]);o.extend(t,{_datasetIndex:i.index,_index:e,_scale:u,_model:{x:h,y:d,innerRadius:0,outerRadius:n?v:p,startAngle:n&&l.animateRotate?f:g,endAngle:n&&l.animateRotate?f:m,label:o.valueAtIndexOrDefault(c,e,c[e])}});var y=this.chart.options.elements.arc,b=t.custom||{},x=o.valueAtIndexOrDefault,_=t._model;_.backgroundColor=b.backgroundColor?b.backgroundColor:x(a.backgroundColor,e,y.backgroundColor),_.borderColor=b.borderColor?b.borderColor:x(a.borderColor,e,y.borderColor),_.borderWidth=b.borderWidth?b.borderWidth:x(a.borderWidth,e,y.borderWidth),t.pivot()},countVisibleElements:function(){var t=this.getDataset(),e=this.getMeta(),n=0;return o.each(e.data,function(e,i){isNaN(t.data[i])||e.hidden||n++}),n},_computeAngle:function(t){var e=this,n=this.getMeta().count,i=e.getDataset(),r=e.getMeta();if(isNaN(i.data[t])||r.data[t].hidden)return 0;var a={chart:e.chart,dataIndex:t,dataset:i,datasetIndex:e.index};return o.options.resolve([e.chart.options.elements.arc.angle,2*Math.PI/n],a,t)}})}},{26:26,41:41,46:46}],20:[function(t,e,n){"use strict";var i=t(26),r=t(41),o=t(46);i._set("radar",{scale:{type:"radialLinear"},elements:{line:{tension:0}}}),e.exports=function(t){t.controllers.radar=t.DatasetController.extend({datasetElementType:r.Line,dataElementType:r.Point,linkScales:o.noop,update:function(t){var e=this,n=e.getMeta(),i=n.dataset,r=n.data,a=i.custom||{},s=e.getDataset(),l=e.chart.options.elements.line,u=e.chart.scale;void 0!==s.tension&&void 0===s.lineTension&&(s.lineTension=s.tension),o.extend(n.dataset,{_datasetIndex:e.index,_scale:u,_children:r,_loop:!0,_model:{tension:a.tension?a.tension:o.valueOrDefault(s.lineTension,l.tension),backgroundColor:a.backgroundColor?a.backgroundColor:s.backgroundColor||l.backgroundColor,borderWidth:a.borderWidth?a.borderWidth:s.borderWidth||l.borderWidth,borderColor:a.borderColor?a.borderColor:s.borderColor||l.borderColor,fill:a.fill?a.fill:void 0!==s.fill?s.fill:l.fill,borderCapStyle:a.borderCapStyle?a.borderCapStyle:s.borderCapStyle||l.borderCapStyle,borderDash:a.borderDash?a.borderDash:s.borderDash||l.borderDash,borderDashOffset:a.borderDashOffset?a.borderDashOffset:s.borderDashOffset||l.borderDashOffset,borderJoinStyle:a.borderJoinStyle?a.borderJoinStyle:s.borderJoinStyle||l.borderJoinStyle}}),n.dataset.pivot(),o.each(r,function(n,i){e.updateElement(n,i,t)},e),e.updateBezierControlPoints()},updateElement:function(t,e,n){var i=this,r=t.custom||{},a=i.getDataset(),s=i.chart.scale,l=i.chart.options.elements.point,u=s.getPointPositionForValue(e,a.data[e]);void 0!==a.radius&&void 0===a.pointRadius&&(a.pointRadius=a.radius),void 0!==a.hitRadius&&void 0===a.pointHitRadius&&(a.pointHitRadius=a.hitRadius),o.extend(t,{_datasetIndex:i.index,_index:e,_scale:s,_model:{x:n?s.xCenter:u.x,y:n?s.yCenter:u.y,tension:r.tension?r.tension:o.valueOrDefault(a.lineTension,i.chart.options.elements.line.tension),radius:r.radius?r.radius:o.valueAtIndexOrDefault(a.pointRadius,e,l.radius),backgroundColor:r.backgroundColor?r.backgroundColor:o.valueAtIndexOrDefault(a.pointBackgroundColor,e,l.backgroundColor),borderColor:r.borderColor?r.borderColor:o.valueAtIndexOrDefault(a.pointBorderColor,e,l.borderColor),borderWidth:r.borderWidth?r.borderWidth:o.valueAtIndexOrDefault(a.pointBorderWidth,e,l.borderWidth),pointStyle:r.pointStyle?r.pointStyle:o.valueAtIndexOrDefault(a.pointStyle,e,l.pointStyle),rotation:r.rotation?r.rotation:o.valueAtIndexOrDefault(a.pointRotation,e,l.rotation),hitRadius:r.hitRadius?r.hitRadius:o.valueAtIndexOrDefault(a.pointHitRadius,e,l.hitRadius)}}),t._model.skip=r.skip?r.skip:isNaN(t._model.x)||isNaN(t._model.y)},updateBezierControlPoints:function(){var t=this.chart.chartArea,e=this.getMeta();o.each(e.data,function(n,i){var r=n._model,a=o.splineCurve(o.previousItem(e.data,i,!0)._model,r,o.nextItem(e.data,i,!0)._model,r.tension);r.controlPointPreviousX=Math.max(Math.min(a.previous.x,t.right),t.left),r.controlPointPreviousY=Math.max(Math.min(a.previous.y,t.bottom),t.top),r.controlPointNextX=Math.max(Math.min(a.next.x,t.right),t.left),r.controlPointNextY=Math.max(Math.min(a.next.y,t.bottom),t.top),n.pivot()})},setHoverStyle:function(t){var e=this.chart.data.datasets[t._datasetIndex],n=t.custom||{},i=t._index,r=t._model;t.$previousStyle={backgroundColor:r.backgroundColor,borderColor:r.borderColor,borderWidth:r.borderWidth,radius:r.radius},r.radius=n.hoverRadius?n.hoverRadius:o.valueAtIndexOrDefault(e.pointHoverRadius,i,this.chart.options.elements.point.hoverRadius),r.backgroundColor=n.hoverBackgroundColor?n.hoverBackgroundColor:o.valueAtIndexOrDefault(e.pointHoverBackgroundColor,i,o.getHoverColor(r.backgroundColor)),r.borderColor=n.hoverBorderColor?n.hoverBorderColor:o.valueAtIndexOrDefault(e.pointHoverBorderColor,i,o.getHoverColor(r.borderColor)),r.borderWidth=n.hoverBorderWidth?n.hoverBorderWidth:o.valueAtIndexOrDefault(e.pointHoverBorderWidth,i,r.borderWidth)}})}},{26:26,41:41,46:46}],21:[function(t,e,n){"use strict";t(26)._set("scatter",{hover:{mode:"single"},scales:{xAxes:[{id:"x-axis-1",type:"linear",position:"bottom"}],yAxes:[{id:"y-axis-1",type:"linear",position:"left"}]},showLines:!1,tooltips:{callbacks:{title:function(){return""},label:function(t){return"("+t.xLabel+", "+t.yLabel+")"}}}}),e.exports=function(t){t.controllers.scatter=t.controllers.line}},{26:26}],22:[function(t,e,n){"use strict";var i=t(27);n=e.exports=i.extend({chart:null,currentStep:0,numSteps:60,easing:"",render:null,onAnimationProgress:null,onAnimationComplete:null}),Object.defineProperty(n.prototype,"animationObject",{get:function(){return this}}),Object.defineProperty(n.prototype,"chartInstance",{get:function(){return this.chart},set:function(t){this.chart=t}})},{27:27}],23:[function(t,e,n){"use strict";var i=t(26),r=t(46);i._set("global",{animation:{duration:1e3,easing:"easeOutQuart",onProgress:r.noop,onComplete:r.noop}}),e.exports={frameDuration:17,animations:[],dropFrames:0,request:null,addAnimation:function(t,e,n,i){var r,o,a=this.animations;for(e.chart=t,i||(t.animating=!0),r=0,o=a.length;r<o;++r)if(a[r].chart===t)return void(a[r]=e);a.push(e),1===a.length&&this.requestAnimationFrame()},cancelAnimation:function(t){var e=r.findIndex(this.animations,function(e){return e.chart===t});-1!==e&&(this.animations.splice(e,1),t.animating=!1)},requestAnimationFrame:function(){var t=this;null===t.request&&(t.request=r.requestAnimFrame.call(window,function(){t.request=null,t.startDigest()}))},startDigest:function(){var t=this,e=Date.now(),n=0;1<t.dropFrames&&(n=Math.floor(t.dropFrames),t.dropFrames=t.dropFrames%1),t.advance(1+n);var i=Date.now();t.dropFrames+=(i-e)/t.frameDuration,0<t.animations.length&&t.requestAnimationFrame()},advance:function(t){for(var e,n,i=this.animations,o=0;o<i.length;)n=(e=i[o]).chart,e.currentStep=(e.currentStep||0)+t,e.currentStep=Math.min(e.currentStep,e.numSteps),r.callback(e.render,[n,e],n),r.callback(e.onAnimationProgress,[e],n),e.currentStep>=e.numSteps?(r.callback(e.onAnimationComplete,[e],n),n.animating=!1,i.splice(o,1)):++o}}},{26:26,46:46}],24:[function(t,e,n){"use strict";var i=t(22),r=t(23),o=t(26),a=t(46),s=t(29),l=t(31),u=t(49),c=t(32),h=t(34),d=t(36);e.exports=function(t){function e(t){return"top"===t||"bottom"===t}t.types={},t.instances={},t.controllers={},a.extend(t.prototype,{construct:function(e,n){var i,r,s=this;(r=(i=(i=n)||{}).data=i.data||{}).datasets=r.datasets||[],r.labels=r.labels||[],i.options=a.configMerge(o.global,o[i.type],i.options||{}),n=i;var l=u.acquireContext(e,n),c=l&&l.canvas,h=c&&c.height,d=c&&c.width;s.id=a.uid(),s.ctx=l,s.canvas=c,s.config=n,s.width=d,s.height=h,s.aspectRatio=h?d/h:null,s.options=n.options,s._bufferedRender=!1,(s.chart=s).controller=s,t.instances[s.id]=s,Object.defineProperty(s,"data",{get:function(){return s.config.data},set:function(t){s.config.data=t}}),l&&c?(s.initialize(),s.update()):console.error("Failed to create chart: can't acquire context from the given item")},initialize:function(){var t=this;return c.notify(t,"beforeInit"),a.retinaScale(t,t.options.devicePixelRatio),t.bindEvents(),t.options.responsive&&t.resize(!0),t.ensureScalesHaveIDs(),t.buildOrUpdateScales(),t.initToolTip(),c.notify(t,"afterInit"),t},clear:function(){return a.canvas.clear(this),this},stop:function(){return r.cancelAnimation(this),this},resize:function(t){var e=this,n=e.options,i=e.canvas,r=n.maintainAspectRatio&&e.aspectRatio||null,o=Math.max(0,Math.floor(a.getMaximumWidth(i))),s=Math.max(0,Math.floor(r?o/r:a.getMaximumHeight(i)));if((e.width!==o||e.height!==s)&&(i.width=e.width=o,i.height=e.height=s,i.style.width=o+"px",i.style.height=s+"px",a.retinaScale(e,n.devicePixelRatio),!t)){var l={width:o,height:s};c.notify(e,"resize",[l]),e.options.onResize&&e.options.onResize(e,l),e.stop(),e.update({duration:e.options.responsiveAnimationDuration})}},ensureScalesHaveIDs:function(){var t=this.options,e=t.scales||{},n=t.scale;a.each(e.xAxes,function(t,e){t.id=t.id||"x-axis-"+e}),a.each(e.yAxes,function(t,e){t.id=t.id||"y-axis-"+e}),n&&(n.id=n.id||"scale")},buildOrUpdateScales:function(){var t=this,n=t.options,i=t.scales||{},r=[],o=Object.keys(i).reduce(function(t,e){return t[e]=!1,t},{});n.scales&&(r=r.concat((n.scales.xAxes||[]).map(function(t){return{options:t,dtype:"category",dposition:"bottom"}}),(n.scales.yAxes||[]).map(function(t){return{options:t,dtype:"linear",dposition:"left"}}))),n.scale&&r.push({options:n.scale,dtype:"radialLinear",isDefault:!0,dposition:"chartArea"}),a.each(r,function(n){var r=n.options,s=r.id,l=a.valueOrDefault(r.type,n.dtype);e(r.position)!==e(n.dposition)&&(r.position=n.dposition),o[s]=!0;var u=null;if(s in i&&i[s].type===l)(u=i[s]).options=r,u.ctx=t.ctx,u.chart=t;else{var c=h.getScaleConstructor(l);if(!c)return;u=new c({id:s,type:l,options:r,ctx:t.ctx,chart:t}),i[u.id]=u}u.mergeTicksOptions(),n.isDefault&&(t.scale=u)}),a.each(o,function(t,e){t||delete i[e]}),t.scales=i,h.addScalesToLayout(this)},buildOrUpdateControllers:function(){var e=this,n=[],i=[];return a.each(e.data.datasets,function(r,o){var a=e.getDatasetMeta(o),s=r.type||e.config.type;if(a.type&&a.type!==s&&(e.destroyDatasetMeta(o),a=e.getDatasetMeta(o)),a.type=s,n.push(a.type),a.controller)a.controller.updateIndex(o),a.controller.linkScales();else{var l=t.controllers[a.type];if(void 0===l)throw new Error('"'+a.type+'" is not a chart type.');a.controller=new l(e,o),i.push(a.controller)}},e),i},resetElements:function(){var t=this;a.each(t.data.datasets,function(e,n){t.getDatasetMeta(n).controller.reset()},t)},reset:function(){this.resetElements(),this.tooltip.initialize()},update:function(e){var n,i,r=this;if(e&&"object"==typeof e||(e={duration:e,lazy:arguments[1]}),i=(n=r).options,a.each(n.scales,function(t){l.removeBox(n,t)}),i=a.configMerge(t.defaults.global,t.defaults[n.config.type],i),n.options=n.config.options=i,n.ensureScalesHaveIDs(),n.buildOrUpdateScales(),n.tooltip._options=i.tooltips,n.tooltip.initialize(),c._invalidate(r),!1!==c.notify(r,"beforeUpdate")){r.tooltip._data=r.data;var o=r.buildOrUpdateControllers();a.each(r.data.datasets,function(t,e){r.getDatasetMeta(e).controller.buildOrUpdateElements()},r),r.updateLayout(),r.options.animation&&r.options.animation.duration&&a.each(o,function(t){t.reset()}),r.updateDatasets(),r.tooltip.initialize(),r.lastActive=[],c.notify(r,"afterUpdate"),r._bufferedRender?r._bufferedRequest={duration:e.duration,easing:e.easing,lazy:e.lazy}:r.render(e)}},updateLayout:function(){!1!==c.notify(this,"beforeLayout")&&(l.update(this,this.width,this.height),c.notify(this,"afterScaleUpdate"),c.notify(this,"afterLayout"))},updateDatasets:function(){if(!1!==c.notify(this,"beforeDatasetsUpdate")){for(var t=0,e=this.data.datasets.length;t<e;++t)this.updateDataset(t);c.notify(this,"afterDatasetsUpdate")}},updateDataset:function(t){var e=this.getDatasetMeta(t),n={meta:e,index:t};!1!==c.notify(this,"beforeDatasetUpdate",[n])&&(e.controller.update(),c.notify(this,"afterDatasetUpdate",[n]))},render:function(t){var e=this;t&&"object"==typeof t||(t={duration:t,lazy:arguments[1]});var n=t.duration,o=t.lazy;if(!1!==c.notify(e,"beforeRender")){var s=e.options.animation,l=function(t){c.notify(e,"afterRender"),a.callback(s&&s.onComplete,[t],e)};if(s&&(void 0!==n&&0!==n||void 0===n&&0!==s.duration)){var u=new i({numSteps:(n||s.duration)/16.66,easing:t.easing||s.easing,render:function(t,e){var n=a.easing.effects[e.easing],i=e.currentStep,r=i/e.numSteps;t.draw(n(r),r,i)},onAnimationProgress:s.onProgress,onAnimationComplete:l});r.addAnimation(e,u,n,o)}else e.draw(),l(new i({numSteps:0,chart:e}));return e}},draw:function(t){var e=this;e.clear(),a.isNullOrUndef(t)&&(t=1),e.transition(t),e.width<=0||e.height<=0||!1!==c.notify(e,"beforeDraw",[t])&&(a.each(e.boxes,function(t){t.draw(e.chartArea)},e),e.scale&&e.scale.draw(),e.drawDatasets(t),e._drawTooltip(t),c.notify(e,"afterDraw",[t]))},transition:function(t){for(var e=0,n=(this.data.datasets||[]).length;e<n;++e)this.isDatasetVisible(e)&&this.getDatasetMeta(e).controller.transition(t);this.tooltip.transition(t)},drawDatasets:function(t){var e=this;if(!1!==c.notify(e,"beforeDatasetsDraw",[t])){for(var n=(e.data.datasets||[]).length-1;0<=n;--n)e.isDatasetVisible(n)&&e.drawDataset(n,t);c.notify(e,"afterDatasetsDraw",[t])}},drawDataset:function(t,e){var n=this.getDatasetMeta(t),i={meta:n,index:t,easingValue:e};!1!==c.notify(this,"beforeDatasetDraw",[i])&&(n.controller.draw(e),c.notify(this,"afterDatasetDraw",[i]))},_drawTooltip:function(t){var e=this.tooltip,n={tooltip:e,easingValue:t};!1!==c.notify(this,"beforeTooltipDraw",[n])&&(e.draw(),c.notify(this,"afterTooltipDraw",[n]))},getElementAtEvent:function(t){return s.modes.single(this,t)},getElementsAtEvent:function(t){return s.modes.label(this,t,{intersect:!0})},getElementsAtXAxis:function(t){return s.modes["x-axis"](this,t,{intersect:!0})},getElementsAtEventForMode:function(t,e,n){var i=s.modes[e];return"function"==typeof i?i(this,t,n):[]},getDatasetAtEvent:function(t){return s.modes.dataset(this,t,{intersect:!0})},getDatasetMeta:function(t){var e=this.data.datasets[t];e._meta||(e._meta={});var n=e._meta[this.id];return n||(n=e._meta[this.id]={type:null,data:[],dataset:null,controller:null,hidden:null,xAxisID:null,yAxisID:null}),n},getVisibleDatasetCount:function(){for(var t=0,e=0,n=this.data.datasets.length;e<n;++e)this.isDatasetVisible(e)&&t++;return t},isDatasetVisible:function(t){var e=this.getDatasetMeta(t);return"boolean"==typeof e.hidden?!e.hidden:!this.data.datasets[t].hidden},generateLegend:function(){return this.options.legendCallback(this)},destroyDatasetMeta:function(t){var e=this.id,n=this.data.datasets[t],i=n._meta&&n._meta[e];i&&(i.controller.destroy(),delete n._meta[e])},destroy:function(){var e,n,i=this,r=i.canvas;for(i.stop(),e=0,n=i.data.datasets.length;e<n;++e)i.destroyDatasetMeta(e);r&&(i.unbindEvents(),a.canvas.clear(i),u.releaseContext(i.ctx),i.canvas=null,i.ctx=null),c.notify(i,"destroy"),delete t.instances[i.id]},toBase64Image:function(){return this.canvas.toDataURL.apply(this.canvas,arguments)},initToolTip:function(){var t=this;t.tooltip=new d({_chart:t,_chartInstance:t,_data:t.data,_options:t.options.tooltips},t)},bindEvents:function(){var t=this,e=t._listeners={},n=function(){t.eventHandler.apply(t,arguments)};a.each(t.options.events,function(i){u.addEventListener(t,i,n),e[i]=n}),t.options.responsive&&(n=function(){t.resize()},u.addEventListener(t,"resize",n),e.resize=n)},unbindEvents:function(){var t=this,e=t._listeners;e&&(delete t._listeners,a.each(e,function(e,n){u.removeEventListener(t,n,e)}))},updateHoverStyle:function(t,e,n){var i,r,o,a=n?"setHoverStyle":"removeHoverStyle";for(r=0,o=t.length;r<o;++r)(i=t[r])&&this.getDatasetMeta(i._datasetIndex).controller[a](i)},eventHandler:function(t){var e=this,n=e.tooltip;if(!1!==c.notify(e,"beforeEvent",[t])){e._bufferedRender=!0,e._bufferedRequest=null;var i=e.handleEvent(t);n&&(i=n._start?n.handleEvent(t):i|n.handleEvent(t)),c.notify(e,"afterEvent",[t]);var r=e._bufferedRequest;return r?e.render(r):i&&!e.animating&&(e.stop(),e.render({duration:e.options.hover.animationDuration,lazy:!0})),e._bufferedRender=!1,e._bufferedRequest=null,e}},handleEvent:function(t){var e,n=this,i=n.options||{},r=i.hover;return n.lastActive=n.lastActive||[],"mouseout"===t.type?n.active=[]:n.active=n.getElementsAtEventForMode(t,r.mode,r),a.callback(i.onHover||i.hover.onHover,[t["native"],n.active],n),"mouseup"!==t.type&&"click"!==t.type||i.onClick&&i.onClick.call(n,t["native"],n.active),n.lastActive.length&&n.updateHoverStyle(n.lastActive,r.mode,!1),n.active.length&&r.mode&&n.updateHoverStyle(n.active,r.mode,!0),e=!a.arrayEquals(n.active,n.lastActive),n.lastActive=n.active,e}}),t.Controller=t}},{22:22,23:23,26:26,29:29,31:31,32:32,34:34,36:36,46:46,49:49}],25:[function(t,e,n){"use strict";var i=t(46);e.exports=function(t){function e(t,e){var i=t._chartjs;if(i){var r=i.listeners,o=r.indexOf(e);-1!==o&&r.splice(o,1),0<r.length||(n.forEach(function(e){delete t[e]}),delete t._chartjs)}}var n=["push","pop","shift","splice","unshift"];t.DatasetController=function(t,e){this.initialize(t,e)},i.extend(t.DatasetController.prototype,{datasetElementType:null,dataElementType:null,initialize:function(t,e){this.chart=t,this.index=e,this.linkScales(),this.addElements()},updateIndex:function(t){this.index=t},linkScales:function(){var t=this,e=t.getMeta(),n=t.getDataset();null!==e.xAxisID&&e.xAxisID in t.chart.scales||(e.xAxisID=n.xAxisID||t.chart.options.scales.xAxes[0].id),null!==e.yAxisID&&e.yAxisID in t.chart.scales||(e.yAxisID=n.yAxisID||t.chart.options.scales.yAxes[0].id)},getDataset:function(){return this.chart.data.datasets[this.index]},getMeta:function(){return this.chart.getDatasetMeta(this.index)},getScaleForId:function(t){return this.chart.scales[t]},reset:function(){this.update(!0)},destroy:function(){this._data&&e(this._data,this)},createMetaDataset:function(){var t=this.datasetElementType;return t&&new t({_chart:this.chart,_datasetIndex:this.index})},createMetaData:function(t){var e=this.dataElementType;return e&&new e({_chart:this.chart,_datasetIndex:this.index,_index:t})},addElements:function(){var t,e,n=this.getMeta(),i=this.getDataset().data||[],r=n.data;for(t=0,e=i.length;t<e;++t)r[t]=r[t]||this.createMetaData(t);n.dataset=n.dataset||this.createMetaDataset()},addElementAndReset:function(t){var e=this.createMetaData(t);this.getMeta().data.splice(t,0,e),this.updateElement(e,t,!0)},buildOrUpdateElements:function(){var t,r,o=this,a=o.getDataset(),s=a.data||(a.data=[]);o._data!==s&&(o._data&&e(o._data,o),r=o,(t=s)._chartjs?t._chartjs.listeners.push(r):(Object.defineProperty(t,"_chartjs",{configurable:!0,enumerable:!1,value:{listeners:[r]}}),n.forEach(function(e){var n="onData"+e.charAt(0).toUpperCase()+e.slice(1),r=t[e];Object.defineProperty(t,e,{configurable:!0,enumerable:!1,value:function(){var e=Array.prototype.slice.call(arguments),o=r.apply(this,e);return i.each(t._chartjs.listeners,function(t){"function"==typeof t[n]&&t[n].apply(t,e)}),o}})})),o._data=s),o.resyncElements()},update:i.noop,transition:function(t){for(var e=this.getMeta(),n=e.data||[],i=n.length,r=0;r<i;++r)n[r].transition(t);e.dataset&&e.dataset.transition(t)},draw:function(){var t=this.getMeta(),e=t.data||[],n=e.length,i=0;for(t.dataset&&t.dataset.draw();i<n;++i)e[i].draw()},removeHoverStyle:function(t){i.merge(t._model,t.$previousStyle||{}),delete t.$previousStyle},setHoverStyle:function(t){var e=this.chart.data.datasets[t._datasetIndex],n=t._index,r=t.custom||{},o=i.valueAtIndexOrDefault,a=i.getHoverColor,s=t._model;t.$previousStyle={backgroundColor:s.backgroundColor,borderColor:s.borderColor,borderWidth:s.borderWidth},s.backgroundColor=r.hoverBackgroundColor?r.hoverBackgroundColor:o(e.hoverBackgroundColor,n,a(s.backgroundColor)),s.borderColor=r.hoverBorderColor?r.hoverBorderColor:o(e.hoverBorderColor,n,a(s.borderColor)),s.borderWidth=r.hoverBorderWidth?r.hoverBorderWidth:o(e.hoverBorderWidth,n,s.borderWidth)},resyncElements:function(){var t=this.getMeta(),e=this.getDataset().data,n=t.data.length,i=e.length;i<n?t.data.splice(i,n-i):n<i&&this.insertElements(n,i-n)},insertElements:function(t,e){for(var n=0;n<e;++n)this.addElementAndReset(t+n)},onDataPush:function(){this.insertElements(this.getDataset().data.length-1,arguments.length)},onDataPop:function(){this.getMeta().data.pop()},onDataShift:function(){this.getMeta().data.shift()},onDataSplice:function(t,e){this.getMeta().data.splice(t,e),this.insertElements(t,arguments.length-2)},onDataUnshift:function(){this.insertElements(0,arguments.length)}}),t.DatasetController.extend=i.inherits}},{46:46}],26:[function(t,e,n){"use strict";var i=t(46);e.exports={_set:function(t,e){return i.merge(this[t]||(this[t]={}),e)}}},{46:46}],27:[function(t,e,n){"use strict";var i=t(2),r=t(46),o=function(t){r.extend(this,t),this.initialize.apply(this,arguments)};r.extend(o.prototype,{initialize:function(){this.hidden=!1},pivot:function(){var t=this;return t._view||(t._view=r.clone(t._model)),t._start={},t},transition:function(t){var e=this,n=e._model,r=e._start,o=e._view;return n&&1!==t?(o||(o=e._view={}),r||(r=e._start={}),function(t,e,n,r){var o,a,s,l,u,c,h,d,f,p=Object.keys(n);for(o=0,a=p.length;o<a;++o)if(c=n[s=p[o]],e.hasOwnProperty(s)||(e[s]=c),(l=e[s])!==c&&"_"!==s[0]){if(t.hasOwnProperty(s)||(t[s]=l),(h=typeof c)==typeof(u=t[s]))if("string"===h){if((d=i(u)).valid&&(f=i(c)).valid){e[s]=f.mix(d,r).rgbString();continue}}else if("number"===h&&isFinite(u)&&isFinite(c)){e[s]=u+(c-u)*r;continue}e[s]=c}}(r,o,n,t)):(e._view=n,e._start=null),e},tooltipPosition:function(){return{x:this._model.x,y:this._model.y}},hasValue:function(){return r.isNumber(this._model.x)&&r.isNumber(this._model.y)}}),o.extend=r.inherits,e.exports=o},{2:2,46:46}],28:[function(t,e,n){"use strict";var i=t(2),r=t(26),o=t(46),a=t(34);e.exports=function(){function t(t,e,n){var i;return"string"==typeof t?(i=parseInt(t,10),-1!==t.indexOf("%")&&(i=i/100*e.parentNode[n])):i=t,i}function e(t){return null!=t&&"none"!==t}function n(n,i,r){var a=document.defaultView,s=o._getParentNode(n),l=a.getComputedStyle(n)[i],u=a.getComputedStyle(s)[i],c=e(l),h=e(u),d=Number.POSITIVE_INFINITY;return c||h?Math.min(c?t(l,n,r):d,h?t(u,s,r):d):"none"}o.configMerge=function(){return o.merge(o.clone(arguments[0]),[].slice.call(arguments,1),{merger:function(t,e,n,i){var r=e[t]||{},s=n[t];"scales"===t?e[t]=o.scaleMerge(r,s):"scale"===t?e[t]=o.merge(r,[a.getScaleDefaults(s.type),s]):o._merger(t,e,n,i)}})},o.scaleMerge=function(){return o.merge(o.clone(arguments[0]),[].slice.call(arguments,1),{merger:function(t,e,n,i){if("xAxes"===t||"yAxes"===t){var r,s,l,u=n[t].length;for(e[t]||(e[t]=[]),r=0;r<u;++r)l=n[t][r],s=o.valueOrDefault(l.type,"xAxes"===t?"category":"linear"),r>=e[t].length&&e[t].push({}),!e[t][r].type||l.type&&l.type!==e[t][r].type?o.merge(e[t][r],[a.getScaleDefaults(s),l]):o.merge(e[t][r],l)}else o._merger(t,e,n,i)}})},o.where=function(t,e){if(o.isArray(t)&&Array.prototype.filter)return t.filter(e);var n=[];return o.each(t,function(t){e(t)&&n.push(t)}),n},o.findIndex=Array.prototype.findIndex?function(t,e,n){return t.findIndex(e,n)}:function(t,e,n){n=void 0===n?t:n;for(var i=0,r=t.length;i<r;++i)if(e.call(n,t[i],i,t))return i;return-1},o.findNextWhere=function(t,e,n){o.isNullOrUndef(n)&&(n=-1);for(var i=n+1;i<t.length;i++){var r=t[i];if(e(r))return r}},o.findPreviousWhere=function(t,e,n){o.isNullOrUndef(n)&&(n=t.length);for(var i=n-1;0<=i;i--){var r=t[i];if(e(r))return r}},o.isNumber=function(t){return!isNaN(parseFloat(t))&&isFinite(t)},o.almostEquals=function(t,e,n){return Math.abs(t-e)<n},o.almostWhole=function(t,e){var n=Math.round(t);return n-e<t&&t<n+e},o.max=function(t){return t.reduce(function(t,e){return isNaN(e)?t:Math.max(t,e)},Number.NEGATIVE_INFINITY)},o.min=function(t){return t.reduce(function(t,e){return isNaN(e)?t:Math.min(t,e)},Number.POSITIVE_INFINITY)},o.sign=Math.sign?function(t){return Math.sign(t)}:function(t){return 0===(t=+t)||isNaN(t)?t:0<t?1:-1},o.log10=Math.log10?function(t){return Math.log10(t)}:function(t){var e=Math.log(t)*Math.LOG10E,n=Math.round(e);return t===Math.pow(10,n)?n:e},o.toRadians=function(t){return t*(Math.PI/180)},o.toDegrees=function(t){return t*(180/Math.PI)},o.getAngleFromPoint=function(t,e){var n=e.x-t.x,i=e.y-t.y,r=Math.sqrt(n*n+i*i),o=Math.atan2(i,n);return o<-.5*Math.PI&&(o+=2*Math.PI),{angle:o,distance:r}},o.distanceBetweenPoints=function(t,e){return Math.sqrt(Math.pow(e.x-t.x,2)+Math.pow(e.y-t.y,2))},o.aliasPixel=function(t){return t%2==0?0:.5},o.splineCurve=function(t,e,n,i){var r=t.skip?e:t,o=e,a=n.skip?e:n,s=Math.sqrt(Math.pow(o.x-r.x,2)+Math.pow(o.y-r.y,2)),l=Math.sqrt(Math.pow(a.x-o.x,2)+Math.pow(a.y-o.y,2)),u=s/(s+l),c=l/(s+l),h=i*(u=isNaN(u)?0:u),d=i*(c=isNaN(c)?0:c);return{previous:{x:o.x-h*(a.x-r.x),y:o.y-h*(a.y-r.y)
},next:{x:o.x+d*(a.x-r.x),y:o.y+d*(a.y-r.y)}}},o.EPSILON=Number.EPSILON||1e-14,o.splineCurveMonotone=function(t){var e,n,i,r,a,s,l,u,c,h=(t||[]).map(function(t){return{model:t._model,deltaK:0,mK:0}}),d=h.length;for(e=0;e<d;++e)if(!(i=h[e]).model.skip){if(n=0<e?h[e-1]:null,(r=e<d-1?h[e+1]:null)&&!r.model.skip){var f=r.model.x-i.model.x;i.deltaK=0!==f?(r.model.y-i.model.y)/f:0}!n||n.model.skip?i.mK=i.deltaK:!r||r.model.skip?i.mK=n.deltaK:this.sign(n.deltaK)!==this.sign(i.deltaK)?i.mK=0:i.mK=(n.deltaK+i.deltaK)/2}for(e=0;e<d-1;++e)i=h[e],r=h[e+1],i.model.skip||r.model.skip||(o.almostEquals(i.deltaK,0,this.EPSILON)?i.mK=r.mK=0:(a=i.mK/i.deltaK,s=r.mK/i.deltaK,(u=Math.pow(a,2)+Math.pow(s,2))<=9||(l=3/Math.sqrt(u),i.mK=a*l*i.deltaK,r.mK=s*l*i.deltaK)));for(e=0;e<d;++e)(i=h[e]).model.skip||(n=0<e?h[e-1]:null,r=e<d-1?h[e+1]:null,n&&!n.model.skip&&(c=(i.model.x-n.model.x)/3,i.model.controlPointPreviousX=i.model.x-c,i.model.controlPointPreviousY=i.model.y-c*i.mK),r&&!r.model.skip&&(c=(r.model.x-i.model.x)/3,i.model.controlPointNextX=i.model.x+c,i.model.controlPointNextY=i.model.y+c*i.mK))},o.nextItem=function(t,e,n){return n?e>=t.length-1?t[0]:t[e+1]:e>=t.length-1?t[t.length-1]:t[e+1]},o.previousItem=function(t,e,n){return n?e<=0?t[t.length-1]:t[e-1]:e<=0?t[0]:t[e-1]},o.niceNum=function(t,e){var n=Math.floor(o.log10(t)),i=t/Math.pow(10,n);return(e?i<1.5?1:i<3?2:i<7?5:10:i<=1?1:i<=2?2:i<=5?5:10)*Math.pow(10,n)},o.requestAnimFrame="undefined"==typeof window?function(t){t()}:window.requestAnimationFrame||window.webkitRequestAnimationFrame||window.mozRequestAnimationFrame||window.oRequestAnimationFrame||window.msRequestAnimationFrame||function(t){return window.setTimeout(t,1e3/60)},o.getRelativePosition=function(t,e){var n,i,r=t.originalEvent||t,a=t.target||t.srcElement,s=a.getBoundingClientRect(),l=r.touches;i=l&&0<l.length?(n=l[0].clientX,l[0].clientY):(n=r.clientX,r.clientY);var u=parseFloat(o.getStyle(a,"padding-left")),c=parseFloat(o.getStyle(a,"padding-top")),h=parseFloat(o.getStyle(a,"padding-right")),d=parseFloat(o.getStyle(a,"padding-bottom")),f=s.right-s.left-u-h,p=s.bottom-s.top-c-d;return{x:n=Math.round((n-s.left-u)/f*a.width/e.currentDevicePixelRatio),y:i=Math.round((i-s.top-c)/p*a.height/e.currentDevicePixelRatio)}},o.getConstraintWidth=function(t){return n(t,"max-width","clientWidth")},o.getConstraintHeight=function(t){return n(t,"max-height","clientHeight")},o._calculatePadding=function(t,e,n){return-1<(e=o.getStyle(t,e)).indexOf("%")?n/parseInt(e,10):parseInt(e,10)},o._getParentNode=function(t){var e=t.parentNode;return e&&e.host&&(e=e.host),e},o.getMaximumWidth=function(t){var e=o._getParentNode(t);if(!e)return t.clientWidth;var n=e.clientWidth,i=n-o._calculatePadding(e,"padding-left",n)-o._calculatePadding(e,"padding-right",n),r=o.getConstraintWidth(t);return isNaN(r)?i:Math.min(i,r)},o.getMaximumHeight=function(t){var e=o._getParentNode(t);if(!e)return t.clientHeight;var n=e.clientHeight,i=n-o._calculatePadding(e,"padding-top",n)-o._calculatePadding(e,"padding-bottom",n),r=o.getConstraintHeight(t);return isNaN(r)?i:Math.min(i,r)},o.getStyle=function(t,e){return t.currentStyle?t.currentStyle[e]:document.defaultView.getComputedStyle(t,null).getPropertyValue(e)},o.retinaScale=function(t,e){var n=t.currentDevicePixelRatio=e||"undefined"!=typeof window&&window.devicePixelRatio||1;if(1!==n){var i=t.canvas,r=t.height,o=t.width;i.height=r*n,i.width=o*n,t.ctx.scale(n,n),i.style.height||i.style.width||(i.style.height=r+"px",i.style.width=o+"px")}},o.fontString=function(t,e,n){return e+" "+t+"px "+n},o.longestText=function(t,e,n,i){var r=(i=i||{}).data=i.data||{},a=i.garbageCollect=i.garbageCollect||[];i.font!==e&&(r=i.data={},a=i.garbageCollect=[],i.font=e),t.font=e;var s=0;o.each(n,function(e){null!=e&&!0!==o.isArray(e)?s=o.measureText(t,r,a,s,e):o.isArray(e)&&o.each(e,function(e){null==e||o.isArray(e)||(s=o.measureText(t,r,a,s,e))})});var l=a.length/2;if(l>n.length){for(var u=0;u<l;u++)delete r[a[u]];a.splice(0,l)}return s},o.measureText=function(t,e,n,i,r){var o=e[r];return o||(o=e[r]=t.measureText(r).width,n.push(r)),i<o&&(i=o),i},o.numberOfLabelLines=function(t){var e=1;return o.each(t,function(t){o.isArray(t)&&t.length>e&&(e=t.length)}),e},o.color=i?function(t){return t instanceof CanvasGradient&&(t=r.global.defaultColor),i(t)}:function(t){return console.error("Color.js not found!"),t},o.getHoverColor=function(t){return t instanceof CanvasPattern?t:o.color(t).saturate(.5).darken(.1).rgbString()}}},{2:2,26:26,34:34,46:46}],29:[function(t,e,n){"use strict";function i(t,e){return t["native"]?{x:t.x,y:t.y}:u.getRelativePosition(t,e)}function r(t,e){var n,i,r,o,a;for(i=0,o=t.data.datasets.length;i<o;++i)if(t.isDatasetVisible(i))for(r=0,a=(n=t.getDatasetMeta(i)).data.length;r<a;++r){var s=n.data[r];s._view.skip||e(s)}}function o(t,e){var n=[];return r(t,function(t){t.inRange(e.x,e.y)&&n.push(t)}),n}function a(t,e,n,i){var o=Number.POSITIVE_INFINITY,a=[];return r(t,function(t){if(!n||t.inRange(e.x,e.y)){var r=t.getCenterPoint(),s=i(e,r);s<o?(a=[t],o=s):s===o&&a.push(t)}}),a}function s(t){var e=-1!==t.indexOf("x"),n=-1!==t.indexOf("y");return function(t,i){var r=e?Math.abs(t.x-i.x):0,o=n?Math.abs(t.y-i.y):0;return Math.sqrt(Math.pow(r,2)+Math.pow(o,2))}}function l(t,e,n){var r=i(e,t);n.axis=n.axis||"x";var l=s(n.axis),u=n.intersect?o(t,r):a(t,r,!1,l),c=[];return u.length?(t.data.datasets.forEach(function(e,n){if(t.isDatasetVisible(n)){var i=t.getDatasetMeta(n).data[u[0]._index];i&&!i._view.skip&&c.push(i)}}),c):[]}var u=t(46);e.exports={modes:{single:function(t,e){var n=i(e,t),o=[];return r(t,function(t){if(t.inRange(n.x,n.y))return o.push(t),o}),o.slice(0,1)},label:l,index:l,dataset:function(t,e,n){var r=i(e,t);n.axis=n.axis||"xy";var l=s(n.axis),u=n.intersect?o(t,r):a(t,r,!1,l);return 0<u.length&&(u=t.getDatasetMeta(u[0]._datasetIndex).data),u},"x-axis":function(t,e){return l(t,e,{intersect:!1})},point:function(t,e){return o(t,i(e,t))},nearest:function(t,e,n){var r=i(e,t);n.axis=n.axis||"xy";var o=s(n.axis),l=a(t,r,n.intersect,o);return 1<l.length&&l.sort(function(t,e){var n=t.getArea()-e.getArea();return 0===n&&(n=t._datasetIndex-e._datasetIndex),n}),l.slice(0,1)},x:function(t,e,n){var o=i(e,t),a=[],s=!1;return r(t,function(t){t.inXRange(o.x)&&a.push(t),t.inRange(o.x,o.y)&&(s=!0)}),n.intersect&&!s&&(a=[]),a},y:function(t,e,n){var o=i(e,t),a=[],s=!1;return r(t,function(t){t.inYRange(o.y)&&a.push(t),t.inRange(o.x,o.y)&&(s=!0)}),n.intersect&&!s&&(a=[]),a}}}},{46:46}],30:[function(t,e,n){"use strict";t(26)._set("global",{responsive:!0,responsiveAnimationDuration:0,maintainAspectRatio:!0,events:["mousemove","mouseout","click","touchstart","touchmove"],hover:{onHover:null,mode:"nearest",intersect:!0,animationDuration:400},onClick:null,defaultColor:"rgba(0,0,0,0.1)",defaultFontColor:"#666",defaultFontFamily:"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif",defaultFontSize:12,defaultFontStyle:"normal",showLines:!0,elements:{},layout:{padding:{top:0,right:0,bottom:0,left:0}}}),e.exports=function(){var t=function(t,e){return this.construct(t,e),this};return t.Chart=t}},{26:26}],31:[function(t,e,n){"use strict";function i(t,e){return o.where(t,function(t){return t.position===e})}function r(t,e){t.forEach(function(t,e){return t._tmpIndex_=e,t}),t.sort(function(t,n){var i=e?n:t,r=e?t:n;return i.weight===r.weight?i._tmpIndex_-r._tmpIndex_:i.weight-r.weight}),t.forEach(function(t){delete t._tmpIndex_})}var o=t(46);e.exports={defaults:{},addBox:function(t,e){t.boxes||(t.boxes=[]),e.fullWidth=e.fullWidth||!1,e.position=e.position||"top",e.weight=e.weight||0,t.boxes.push(e)},removeBox:function(t,e){var n=t.boxes?t.boxes.indexOf(e):-1;-1!==n&&t.boxes.splice(n,1)},configure:function(t,e,n){for(var i,r=["fullWidth","position","weight"],o=r.length,a=0;a<o;++a)i=r[a],n.hasOwnProperty(i)&&(e[i]=n[i])},update:function(t,e,n){function a(t){var e=o.findNextWhere(C,function(e){return e.box===t});if(e)if(t.isHorizontal()){var n={left:Math.max(O,D),right:Math.max(I,T),top:0,bottom:0};t.update(t.fullWidth?b:M,x/2,n)}else t.update(e.minSize.width,S)}function s(t){t.isHorizontal()?(t.left=t.fullWidth?c:O,t.right=t.fullWidth?e-h:O+M,t.top=H,t.bottom=H+t.height,H=t.bottom):(t.left=W,t.right=W+t.width,t.top=L,t.bottom=L+S,W=t.right)}if(t){var l=t.options.layout||{},u=o.options.toPadding(l.padding),c=u.left,h=u.right,d=u.top,f=u.bottom,p=i(t.boxes,"left"),g=i(t.boxes,"right"),m=i(t.boxes,"top"),v=i(t.boxes,"bottom"),y=i(t.boxes,"chartArea");r(p,!0),r(g,!1),r(m,!0),r(v,!1);var b=e-c-h,x=n-d-f,_=x/2,w=(e-b/2)/(p.length+g.length),k=(n-_)/(m.length+v.length),M=b,S=x,C=[];o.each(p.concat(g,m,v),function(t){var e,n=t.isHorizontal();n?(e=t.update(t.fullWidth?b:M,k),S-=e.height):(e=t.update(w,S),M-=e.width),C.push({horizontal:n,minSize:e,box:t})});var D=0,T=0,P=0,A=0;o.each(m.concat(v),function(t){if(t.getPadding){var e=t.getPadding();D=Math.max(D,e.left),T=Math.max(T,e.right)}}),o.each(p.concat(g),function(t){if(t.getPadding){var e=t.getPadding();P=Math.max(P,e.top),A=Math.max(A,e.bottom)}});var O=c,I=h,L=d,E=f;o.each(p.concat(g),a),o.each(p,function(t){O+=t.width}),o.each(g,function(t){I+=t.width}),o.each(m.concat(v),a),o.each(m,function(t){L+=t.height}),o.each(v,function(t){E+=t.height}),o.each(p.concat(g),function(t){var e=o.findNextWhere(C,function(e){return e.box===t}),n={left:0,right:0,top:L,bottom:E};e&&t.update(e.minSize.width,S,n)}),O=c,I=h,L=d,E=f,o.each(p,function(t){O+=t.width}),o.each(g,function(t){I+=t.width}),o.each(m,function(t){L+=t.height}),o.each(v,function(t){E+=t.height});var F=Math.max(D-O,0);O+=F,I+=Math.max(T-I,0);var N=Math.max(P-L,0);L+=N,E+=Math.max(A-E,0);var R=n-L-E,z=e-O-I;z===M&&R===S||(o.each(p,function(t){t.height=R}),o.each(g,function(t){t.height=R}),o.each(m,function(t){t.fullWidth||(t.width=z)}),o.each(v,function(t){t.fullWidth||(t.width=z)}),S=R,M=z);var W=c+F,H=d+N;o.each(p.concat(m),s),W+=M,H+=S,o.each(g,s),o.each(v,s),t.chartArea={left:O,top:L,right:O+M,bottom:L+S},o.each(y,function(e){e.left=t.chartArea.left,e.top=t.chartArea.top,e.right=t.chartArea.right,e.bottom=t.chartArea.bottom,e.update(M,S)})}}}},{46:46}],32:[function(t,e,n){"use strict";var i=t(26),r=t(46);i._set("global",{plugins:{}}),e.exports={_plugins:[],_cacheId:0,register:function(t){var e=this._plugins;[].concat(t).forEach(function(t){-1===e.indexOf(t)&&e.push(t)}),this._cacheId++},unregister:function(t){var e=this._plugins;[].concat(t).forEach(function(t){var n=e.indexOf(t);-1!==n&&e.splice(n,1)}),this._cacheId++},clear:function(){this._plugins=[],this._cacheId++},count:function(){return this._plugins.length},getAll:function(){return this._plugins},notify:function(t,e,n){var i,r,o,a,s,l=this.descriptors(t),u=l.length;for(i=0;i<u;++i)if("function"==typeof(s=(o=(r=l[i]).plugin)[e])&&((a=[t].concat(n||[])).push(r.options),!1===s.apply(o,a)))return!1;return!0},descriptors:function(t){var e=t.$plugins||(t.$plugins={});if(e.id===this._cacheId)return e.descriptors;var n=[],o=[],a=t&&t.config||{},s=a.options&&a.options.plugins||{};return this._plugins.concat(a.plugins||[]).forEach(function(t){if(-1===n.indexOf(t)){var e=t.id,a=s[e];!1!==a&&(!0===a&&(a=r.clone(i.global.plugins[e])),n.push(t),o.push({plugin:t,options:a||{}}))}}),e.descriptors=o,e.id=this._cacheId,o},_invalidate:function(t){delete t.$plugins}}},{26:26,46:46}],33:[function(t,e,n){"use strict";function i(t){var e,n,i=[];for(e=0,n=t.length;e<n;++e)i.push(t[e].label);return i}function r(t,e,n){var i=t.getPixelForTick(e);return n&&(i-=0===e?(t.getPixelForTick(1)-i)/2:(i-t.getPixelForTick(e-1))/2),i}function o(t,e,n){return c.isArray(e)?c.longestText(t,n,e):t.measureText(e).width}function a(t){var e=c.valueOrDefault,n=l.global,i=e(t.fontSize,n.defaultFontSize),r=e(t.fontStyle,n.defaultFontStyle),o=e(t.fontFamily,n.defaultFontFamily);return{size:i,style:r,family:o,font:c.fontString(i,r,o)}}function s(t){return c.options.toLineHeight(c.valueOrDefault(t.lineHeight,1.2),c.valueOrDefault(t.fontSize,l.global.defaultFontSize))}var l=t(26),u=t(27),c=t(46),h=t(35);l._set("scale",{display:!0,position:"left",offset:!1,gridLines:{display:!0,color:"rgba(0, 0, 0, 0.1)",lineWidth:1,drawBorder:!0,drawOnChartArea:!0,drawTicks:!0,tickMarkLength:10,zeroLineWidth:1,zeroLineColor:"rgba(0,0,0,0.25)",zeroLineBorderDash:[],zeroLineBorderDashOffset:0,offsetGridLines:!1,borderDash:[],borderDashOffset:0},scaleLabel:{display:!1,labelString:"",lineHeight:1.2,padding:{top:4,bottom:4}},ticks:{beginAtZero:!1,minRotation:0,maxRotation:50,mirror:!1,padding:0,reverse:!1,display:!0,autoSkip:!0,autoSkipPadding:0,labelOffset:0,callback:h.formatters.values,minor:{},major:{}}}),e.exports=u.extend({getPadding:function(){return{left:this.paddingLeft||0,top:this.paddingTop||0,right:this.paddingRight||0,bottom:this.paddingBottom||0}},getTicks:function(){return this._ticks},mergeTicksOptions:function(){var t=this.options.ticks;for(var e in!1===t.minor&&(t.minor={display:!1}),!1===t.major&&(t.major={display:!1}),t)"major"!==e&&"minor"!==e&&(void 0===t.minor[e]&&(t.minor[e]=t[e]),void 0===t.major[e]&&(t.major[e]=t[e]))},beforeUpdate:function(){c.callback(this.options.beforeUpdate,[this])},update:function(t,e,n){var i,r,o,a,s,l,u=this;for(u.beforeUpdate(),u.maxWidth=t,u.maxHeight=e,u.margins=c.extend({left:0,right:0,top:0,bottom:0},n),u.longestTextCache=u.longestTextCache||{},u.beforeSetDimensions(),u.setDimensions(),u.afterSetDimensions(),u.beforeDataLimits(),u.determineDataLimits(),u.afterDataLimits(),u.beforeBuildTicks(),s=u.buildTicks()||[],u.afterBuildTicks(),u.beforeTickToLabelConversion(),o=u.convertTicksToLabels(s)||u.ticks,u.afterTickToLabelConversion(),i=0,r=(u.ticks=o).length;i<r;++i)a=o[i],(l=s[i])?l.label=a:s.push(l={label:a,major:!1});return u._ticks=s,u.beforeCalculateTickRotation(),u.calculateTickRotation(),u.afterCalculateTickRotation(),u.beforeFit(),u.fit(),u.afterFit(),u.afterUpdate(),u.minSize},afterUpdate:function(){c.callback(this.options.afterUpdate,[this])},beforeSetDimensions:function(){c.callback(this.options.beforeSetDimensions,[this])},setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0},afterSetDimensions:function(){c.callback(this.options.afterSetDimensions,[this])},beforeDataLimits:function(){c.callback(this.options.beforeDataLimits,[this])},determineDataLimits:c.noop,afterDataLimits:function(){c.callback(this.options.afterDataLimits,[this])},beforeBuildTicks:function(){c.callback(this.options.beforeBuildTicks,[this])},buildTicks:c.noop,afterBuildTicks:function(){c.callback(this.options.afterBuildTicks,[this])},beforeTickToLabelConversion:function(){c.callback(this.options.beforeTickToLabelConversion,[this])},convertTicksToLabels:function(){var t=this.options.ticks;this.ticks=this.ticks.map(t.userCallback||t.callback,this)},afterTickToLabelConversion:function(){c.callback(this.options.afterTickToLabelConversion,[this])},beforeCalculateTickRotation:function(){c.callback(this.options.beforeCalculateTickRotation,[this])},calculateTickRotation:function(){var t=this,e=t.ctx,n=t.options.ticks,r=i(t._ticks),o=a(n);e.font=o.font;var s=n.minRotation||0;if(r.length&&t.options.display&&t.isHorizontal())for(var l,u=c.longestText(e,o.font,r,t.longestTextCache),h=u,d=t.getPixelForTick(1)-t.getPixelForTick(0)-6;d<h&&s<n.maxRotation;){var f=c.toRadians(s);if(l=Math.cos(f),Math.sin(f)*u>t.maxHeight){s--;break}s++,h=l*u}t.labelRotation=s},afterCalculateTickRotation:function(){c.callback(this.options.afterCalculateTickRotation,[this])},beforeFit:function(){c.callback(this.options.beforeFit,[this])},fit:function(){var t=this,e=t.minSize={width:0,height:0},n=i(t._ticks),r=t.options,l=r.ticks,u=r.scaleLabel,h=r.gridLines,d=r.display,f=t.isHorizontal(),p=a(l),g=r.gridLines.tickMarkLength;if(e.width=f?t.isFullWidth()?t.maxWidth-t.margins.left-t.margins.right:t.maxWidth:d&&h.drawTicks?g:0,e.height=f?d&&h.drawTicks?g:0:t.maxHeight,u.display&&d){var m=s(u)+c.options.toPadding(u.padding).height;f?e.height+=m:e.width+=m}if(l.display&&d){var v=c.longestText(t.ctx,p.font,n,t.longestTextCache),y=c.numberOfLabelLines(n),b=.5*p.size,x=t.options.ticks.padding;if(f){t.longestLabelWidth=v;var _=c.toRadians(t.labelRotation),w=Math.cos(_),k=Math.sin(_)*v+p.size*y+b*(y-1)+b;e.height=Math.min(t.maxHeight,e.height+k+x),t.ctx.font=p.font;var M=o(t.ctx,n[0],p.font),S=o(t.ctx,n[n.length-1],p.font);0!==t.labelRotation?(t.paddingLeft="bottom"===r.position?w*M+3:w*b+3,t.paddingRight="bottom"===r.position?w*b+3:w*S+3):(t.paddingLeft=M/2+3,t.paddingRight=S/2+3)}else l.mirror?v=0:v+=x+b,e.width=Math.min(t.maxWidth,e.width+v),t.paddingTop=p.size/2,t.paddingBottom=p.size/2}t.handleMargins(),t.width=e.width,t.height=e.height},handleMargins:function(){var t=this;t.margins&&(t.paddingLeft=Math.max(t.paddingLeft-t.margins.left,0),t.paddingTop=Math.max(t.paddingTop-t.margins.top,0),t.paddingRight=Math.max(t.paddingRight-t.margins.right,0),t.paddingBottom=Math.max(t.paddingBottom-t.margins.bottom,0))},afterFit:function(){c.callback(this.options.afterFit,[this])},isHorizontal:function(){return"top"===this.options.position||"bottom"===this.options.position},isFullWidth:function(){return this.options.fullWidth},getRightValue:function(t){if(c.isNullOrUndef(t))return NaN;if("number"==typeof t&&!isFinite(t))return NaN;if(t)if(this.isHorizontal()){if(void 0!==t.x)return this.getRightValue(t.x)}else if(void 0!==t.y)return this.getRightValue(t.y);return t},getLabelForIndex:c.noop,getPixelForValue:c.noop,getValueForPixel:c.noop,getPixelForTick:function(t){var e=this,n=e.options.offset;if(e.isHorizontal()){var i=(e.width-(e.paddingLeft+e.paddingRight))/Math.max(e._ticks.length-(n?0:1),1),r=i*t+e.paddingLeft;n&&(r+=i/2);var o=e.left+Math.round(r);return o+=e.isFullWidth()?e.margins.left:0}var a=e.height-(e.paddingTop+e.paddingBottom);return e.top+t*(a/(e._ticks.length-1))},getPixelForDecimal:function(t){var e=this;if(e.isHorizontal()){var n=(e.width-(e.paddingLeft+e.paddingRight))*t+e.paddingLeft,i=e.left+Math.round(n);return i+=e.isFullWidth()?e.margins.left:0}return e.top+t*e.height},getBasePixel:function(){return this.getPixelForValue(this.getBaseValue())},getBaseValue:function(){var t=this.min,e=this.max;return this.beginAtZero?0:t<0&&e<0?e:0<t&&0<e?t:0},_autoSkip:function(t){var e,n,i,r,o=this,a=o.isHorizontal(),s=o.options.ticks.minor,l=t.length,u=c.toRadians(o.labelRotation),h=Math.cos(u),d=o.longestLabelWidth*h,f=[];for(s.maxTicksLimit&&(r=s.maxTicksLimit),a&&(e=!1,(d+s.autoSkipPadding)*l>o.width-(o.paddingLeft+o.paddingRight)&&(e=1+Math.floor((d+s.autoSkipPadding)*l/(o.width-(o.paddingLeft+o.paddingRight)))),r&&r<l&&(e=Math.max(e,Math.floor(l/r)))),n=0;n<l;n++)i=t[n],(1<e&&0<n%e||n%e==0&&l<=n+e)&&n!==l-1&&delete i.label,f.push(i);return f},draw:function(t){var e=this,n=e.options;if(n.display){var i=e.ctx,o=l.global,u=n.ticks.minor,h=n.ticks.major||u,d=n.gridLines,f=n.scaleLabel,p=0!==e.labelRotation,g=e.isHorizontal(),m=u.autoSkip?e._autoSkip(e.getTicks()):e.getTicks(),v=c.valueOrDefault(u.fontColor,o.defaultFontColor),y=a(u),b=c.valueOrDefault(h.fontColor,o.defaultFontColor),x=a(h),_=d.drawTicks?d.tickMarkLength:0,w=c.valueOrDefault(f.fontColor,o.defaultFontColor),k=a(f),M=c.options.toPadding(f.padding),S=c.toRadians(e.labelRotation),C=[],D=e.options.gridLines.lineWidth,T="right"===n.position?e.left:e.right-D-_,P="right"===n.position?e.left+_:e.right,A="bottom"===n.position?e.top+D:e.bottom-_-D,O="bottom"===n.position?e.top+D+_:e.bottom+D;if(c.each(m,function(i,a){if(!c.isNullOrUndef(i.label)){var s,l,h,f,v,y,b,x,w,k,M,I,L,E,F=i.label;f=a===e.zeroLineIndex&&n.offset===d.offsetGridLines?(s=d.zeroLineWidth,l=d.zeroLineColor,h=d.zeroLineBorderDash,d.zeroLineBorderDashOffset):(s=c.valueAtIndexOrDefault(d.lineWidth,a),l=c.valueAtIndexOrDefault(d.color,a),h=c.valueOrDefault(d.borderDash,o.borderDash),c.valueOrDefault(d.borderDashOffset,o.borderDashOffset));var N="middle",R="middle",z=u.padding;if(g){var W=_+z;E="bottom"===n.position?(R=p?"middle":"top",N=p?"right":"center",e.top+W):(R=p?"middle":"bottom",N=p?"left":"center",e.bottom-W);var H=r(e,a,d.offsetGridLines&&1<m.length);H<e.left&&(l="rgba(0,0,0,0)"),H+=c.aliasPixel(s),L=e.getPixelForTick(a)+u.labelOffset,v=b=w=M=H,y=A,x=O,k=t.top,I=t.bottom+D}else{var j,Y="left"===n.position;j=u.mirror?(N=Y?"left":"right",z):(N=Y?"right":"left",_+z),L=Y?e.right-j:e.left+j;var B=r(e,a,d.offsetGridLines&&1<m.length);B<e.top&&(l="rgba(0,0,0,0)"),B+=c.aliasPixel(s),E=e.getPixelForTick(a)+u.labelOffset,v=T,b=P,w=t.left,M=t.right+D,y=x=k=I=B}C.push({tx1:v,ty1:y,tx2:b,ty2:x,x1:w,y1:k,x2:M,y2:I,labelX:L,labelY:E,glWidth:s,glColor:l,glBorderDash:h,glBorderDashOffset:f,rotation:-1*S,label:F,major:i.major,textBaseline:R,textAlign:N})}}),c.each(C,function(t){if(d.display&&(i.save(),i.lineWidth=t.glWidth,i.strokeStyle=t.glColor,i.setLineDash&&(i.setLineDash(t.glBorderDash),i.lineDashOffset=t.glBorderDashOffset),i.beginPath(),d.drawTicks&&(i.moveTo(t.tx1,t.ty1),i.lineTo(t.tx2,t.ty2)),d.drawOnChartArea&&(i.moveTo(t.x1,t.y1),i.lineTo(t.x2,t.y2)),i.stroke(),i.restore()),u.display){i.save(),i.translate(t.labelX,t.labelY),i.rotate(t.rotation),i.font=t.major?x.font:y.font,i.fillStyle=t.major?b:v,i.textBaseline=t.textBaseline,i.textAlign=t.textAlign;var n=t.label;if(c.isArray(n))for(var r=n.length,o=1.5*y.size,a=e.isHorizontal()?0:-o*(r-1)/2,s=0;s<r;++s)i.fillText(""+n[s],0,a),a+=o;else i.fillText(n,0,0);i.restore()}}),f.display){var I,L,E=0,F=s(f)/2;if(g)I=e.left+(e.right-e.left)/2,L="bottom"===n.position?e.bottom-F-M.bottom:e.top+F+M.top;else{var N="left"===n.position;I=N?e.left+F+M.top:e.right-F-M.top,L=e.top+(e.bottom-e.top)/2,E=N?-.5*Math.PI:.5*Math.PI}i.save(),i.translate(I,L),i.rotate(E),i.textAlign="center",i.textBaseline="middle",i.fillStyle=w,i.font=k.font,i.fillText(f.labelString,0,0),i.restore()}if(d.drawBorder){i.lineWidth=c.valueAtIndexOrDefault(d.lineWidth,0),i.strokeStyle=c.valueAtIndexOrDefault(d.color,0);var R=e.left,z=e.right+D,W=e.top,H=e.bottom+D,j=c.aliasPixel(i.lineWidth);g?(W=H="top"===n.position?e.bottom:e.top,W+=j,H+=j):(R=z="left"===n.position?e.right:e.left,R+=j,z+=j),i.beginPath(),i.moveTo(R,W),i.lineTo(z,H),i.stroke()}}}})},{26:26,27:27,35:35,46:46}],34:[function(t,e,n){"use strict";var i=t(26),r=t(46),o=t(31);e.exports={constructors:{},defaults:{},registerScaleType:function(t,e,n){this.constructors[t]=e,this.defaults[t]=r.clone(n)},getScaleConstructor:function(t){return this.constructors.hasOwnProperty(t)?this.constructors[t]:void 0},getScaleDefaults:function(t){return this.defaults.hasOwnProperty(t)?r.merge({},[i.scale,this.defaults[t]]):{}},updateScaleDefaults:function(t,e){this.defaults.hasOwnProperty(t)&&(this.defaults[t]=r.extend(this.defaults[t],e))},addScalesToLayout:function(t){r.each(t.scales,function(e){e.fullWidth=e.options.fullWidth,e.position=e.options.position,e.weight=e.options.weight,o.addBox(t,e)})}}},{26:26,31:31,46:46}],35:[function(t,e,n){"use strict";var i=t(46);e.exports={formatters:{values:function(t){return i.isArray(t)?t:""+t},linear:function(t,e,n){var r=3<n.length?n[2]-n[1]:n[1]-n[0];1<Math.abs(r)&&t!==Math.floor(t)&&(r=t-Math.floor(t));var o=i.log10(Math.abs(r)),a="";if(0!==t)if(Math.max(Math.abs(n[0]),Math.abs(n[n.length-1]))<1e-4){var s=i.log10(Math.abs(t));a=t.toExponential(Math.floor(s)-Math.floor(o))}else{var l=-1*Math.floor(o);l=Math.max(Math.min(l,20),0),a=t.toFixed(l)}else a="0";return a},logarithmic:function(t,e,n){var r=t/Math.pow(10,Math.floor(i.log10(t)));return 0===t?"0":1===r||2===r||5===r||0===e||e===n.length-1?t.toExponential():""}}}},{46:46}],36:[function(t,e,n){"use strict";function i(t,e){var n=c.color(t);return n.alpha(e*n.alpha()).rgbaString()}function r(t,e){return e&&(c.isArray(e)?Array.prototype.push.apply(t,e):t.push(e)),t}function o(t){return("string"==typeof t||t instanceof String)&&-1<t.indexOf("\n")?t.split("\n"):t}function a(t){var e=l.global,n=c.valueOrDefault;return{xPadding:t.xPadding,yPadding:t.yPadding,xAlign:t.xAlign,yAlign:t.yAlign,bodyFontColor:t.bodyFontColor,_bodyFontFamily:n(t.bodyFontFamily,e.defaultFontFamily),_bodyFontStyle:n(t.bodyFontStyle,e.defaultFontStyle),_bodyAlign:t.bodyAlign,bodyFontSize:n(t.bodyFontSize,e.defaultFontSize),bodySpacing:t.bodySpacing,titleFontColor:t.titleFontColor,_titleFontFamily:n(t.titleFontFamily,e.defaultFontFamily),_titleFontStyle:n(t.titleFontStyle,e.defaultFontStyle),titleFontSize:n(t.titleFontSize,e.defaultFontSize),_titleAlign:t.titleAlign,titleSpacing:t.titleSpacing,titleMarginBottom:t.titleMarginBottom,footerFontColor:t.footerFontColor,_footerFontFamily:n(t.footerFontFamily,e.defaultFontFamily),_footerFontStyle:n(t.footerFontStyle,e.defaultFontStyle),footerFontSize:n(t.footerFontSize,e.defaultFontSize),_footerAlign:t.footerAlign,footerSpacing:t.footerSpacing,footerMarginTop:t.footerMarginTop,caretSize:t.caretSize,cornerRadius:t.cornerRadius,backgroundColor:t.backgroundColor,opacity:0,legendColorBackground:t.multiKeyBackground,displayColors:t.displayColors,borderColor:t.borderColor,borderWidth:t.borderWidth}}function s(t){return r([],o(t))}var l=t(26),u=t(27),c=t(46);l._set("global",{tooltips:{enabled:!0,custom:null,mode:"nearest",position:"average",intersect:!0,backgroundColor:"rgba(0,0,0,0.8)",titleFontStyle:"bold",titleSpacing:2,titleMarginBottom:6,titleFontColor:"#fff",titleAlign:"left",bodySpacing:2,bodyFontColor:"#fff",bodyAlign:"left",footerFontStyle:"bold",footerSpacing:2,footerMarginTop:6,footerFontColor:"#fff",footerAlign:"left",yPadding:6,xPadding:6,caretPadding:2,caretSize:5,cornerRadius:6,multiKeyBackground:"#fff",displayColors:!0,borderColor:"rgba(0,0,0,0)",borderWidth:0,callbacks:{beforeTitle:c.noop,title:function(t,e){var n="",i=e.labels,r=i?i.length:0;if(0<t.length){var o=t[0];o.xLabel?n=o.xLabel:0<r&&o.index<r&&(n=i[o.index])}return n},afterTitle:c.noop,beforeBody:c.noop,beforeLabel:c.noop,label:function(t,e){var n=e.datasets[t.datasetIndex].label||"";return n&&(n+=": "),n+=t.yLabel},labelColor:function(t,e){var n=e.getDatasetMeta(t.datasetIndex).data[t.index]._view;return{borderColor:n.borderColor,backgroundColor:n.backgroundColor}},labelTextColor:function(){return this._options.bodyFontColor},afterLabel:c.noop,afterBody:c.noop,beforeFooter:c.noop,footer:c.noop,afterFooter:c.noop}}});var h={average:function(t){if(!t.length)return!1;var e,n,i=0,r=0,o=0;for(e=0,n=t.length;e<n;++e){var a=t[e];if(a&&a.hasValue()){var s=a.tooltipPosition();i+=s.x,r+=s.y,++o}}return{x:Math.round(i/o),y:Math.round(r/o)}},nearest:function(t,e){var n,i,r,o=e.x,a=e.y,s=Number.POSITIVE_INFINITY;for(n=0,i=t.length;n<i;++n){var l=t[n];if(l&&l.hasValue()){var u=l.getCenterPoint(),h=c.distanceBetweenPoints(e,u);h<s&&(s=h,r=l)}}if(r){var d=r.tooltipPosition();o=d.x,a=d.y}return{x:o,y:a}}};(e.exports=u.extend({initialize:function(){this._model=a(this._options),this._lastActive=[]},getTitle:function(){var t=this._options.callbacks,e=t.beforeTitle.apply(this,arguments),n=t.title.apply(this,arguments),i=t.afterTitle.apply(this,arguments),a=[];return a=r(a=r(a=r(a,o(e)),o(n)),o(i))},getBeforeBody:function(){return s(this._options.callbacks.beforeBody.apply(this,arguments))},getBody:function(t,e){var n=this,i=n._options.callbacks,a=[];return c.each(t,function(t){var s={before:[],lines:[],after:[]};r(s.before,o(i.beforeLabel.call(n,t,e))),r(s.lines,i.label.call(n,t,e)),r(s.after,o(i.afterLabel.call(n,t,e))),a.push(s)}),a},getAfterBody:function(){return s(this._options.callbacks.afterBody.apply(this,arguments))},getFooter:function(){var t=this._options.callbacks,e=t.beforeFooter.apply(this,arguments),n=t.footer.apply(this,arguments),i=t.afterFooter.apply(this,arguments),a=[];return a=r(a=r(a=r(a,o(e)),o(n)),o(i))},update:function(t){var e,n,i,r,o,s,l,u,d,f,p,g,m,v,y,b,x,_,w,k,M=this,S=M._options,C=M._model,D=M._model=a(S),T=M._active,P=M._data,A={xAlign:C.xAlign,yAlign:C.yAlign},O={x:C.x,y:C.y},I={width:C.width,height:C.height},L={x:C.caretX,y:C.caretY};if(T.length){D.opacity=1;var E=[],F=[];L=h[S.position].call(M,T,M._eventPosition);var N=[];for(e=0,n=T.length;e<n;++e)N.push((b=T[e],_=x=void 0,x=b._xScale,_=b._yScale||b._scale,w=b._index,k=b._datasetIndex,{xLabel:x?x.getLabelForIndex(w,k):"",yLabel:_?_.getLabelForIndex(w,k):"",index:w,datasetIndex:k,x:b._model.x,y:b._model.y}));S.filter&&(N=N.filter(function(t){return S.filter(t,P)})),S.itemSort&&(N=N.sort(function(t,e){return S.itemSort(t,e,P)})),c.each(N,function(t){E.push(S.callbacks.labelColor.call(M,t,M._chart)),F.push(S.callbacks.labelTextColor.call(M,t,M._chart))}),D.title=M.getTitle(N,P),D.beforeBody=M.getBeforeBody(N,P),D.body=M.getBody(N,P),D.afterBody=M.getAfterBody(N,P),D.footer=M.getFooter(N,P),D.x=Math.round(L.x),D.y=Math.round(L.y),D.caretPadding=S.caretPadding,D.labelColors=E,D.labelTextColors=F,D.dataPoints=N,A=function(t,e){var n,i,r,o,a,s=t._model,l=t._chart,u=t._chart.chartArea,c="center",h="center";s.y<e.height?h="top":s.y>l.height-e.height&&(h="bottom");var d=(u.left+u.right)/2,f=(u.top+u.bottom)/2;i="center"===h?(n=function(t){return t<=d},function(t){return d<t}):(n=function(t){return t<=e.width/2},function(t){return t>=l.width-e.width/2}),r=function(t){return t+e.width+s.caretSize+s.caretPadding>l.width},o=function(t){return t-e.width-s.caretSize-s.caretPadding<0},a=function(t){return t<=f?"top":"bottom"},n(s.x)?(c="left",r(s.x)&&(c="center",h=a(s.y))):i(s.x)&&(c="right",o(s.x)&&(c="center",h=a(s.y)));var p=t._options;return{xAlign:p.xAlign?p.xAlign:c,yAlign:p.yAlign?p.yAlign:h}}(this,I=function(t,e){var n=t._chart.ctx,i=2*e.yPadding,r=0,o=e.body,a=o.reduce(function(t,e){return t+e.before.length+e.lines.length+e.after.length},0);a+=e.beforeBody.length+e.afterBody.length;var s=e.title.length,l=e.footer.length,u=e.titleFontSize,h=e.bodyFontSize,d=e.footerFontSize;i+=s*u,i+=s?(s-1)*e.titleSpacing:0,i+=s?e.titleMarginBottom:0,i+=a*h,i+=a?(a-1)*e.bodySpacing:0,i+=l?e.footerMarginTop:0,i+=l*d,i+=l?(l-1)*e.footerSpacing:0;var f=0,p=function(t){r=Math.max(r,n.measureText(t).width+f)};return n.font=c.fontString(u,e._titleFontStyle,e._titleFontFamily),c.each(e.title,p),n.font=c.fontString(h,e._bodyFontStyle,e._bodyFontFamily),c.each(e.beforeBody.concat(e.afterBody),p),f=e.displayColors?h+2:0,c.each(o,function(t){c.each(t.before,p),c.each(t.lines,p),c.each(t.after,p)}),f=0,n.font=c.fontString(d,e._footerFontStyle,e._footerFontFamily),c.each(e.footer,p),{width:r+=2*e.xPadding,height:i}}(this,D)),i=D,r=I,o=A,s=M._chart,l=i.x,u=i.y,d=i.caretSize,f=i.caretPadding,p=i.cornerRadius,g=o.xAlign,m=o.yAlign,v=d+f,y=p+f,"right"===g?l-=r.width:"center"===g&&((l-=r.width/2)+r.width>s.width&&(l=s.width-r.width),l<0&&(l=0)),"top"===m?u+=v:u-="bottom"===m?r.height+v:r.height/2,"center"===m?"left"===g?l+=v:"right"===g&&(l-=v):"left"===g?l-=y:"right"===g&&(l+=y),O={x:l,y:u}}else D.opacity=0;return D.xAlign=A.xAlign,D.yAlign=A.yAlign,D.x=O.x,D.y=O.y,D.width=I.width,D.height=I.height,D.caretX=L.x,D.caretY=L.y,M._model=D,t&&S.custom&&S.custom.call(M,D),M},drawCaret:function(t,e){var n=this._chart.ctx,i=this._view,r=this.getCaretPosition(t,e,i);n.lineTo(r.x1,r.y1),n.lineTo(r.x2,r.y2),n.lineTo(r.x3,r.y3)},getCaretPosition:function(t,e,n){var i,r,o,a,s,l,u=n.caretSize,c=n.cornerRadius,h=n.xAlign,d=n.yAlign,f=t.x,p=t.y,g=e.width,m=e.height;if("center"===d)s=p+m/2,l="left"===h?(r=(i=f)-u,o=i,a=s+u,s-u):(r=(i=f+g)+u,o=i,a=s-u,s+u);else if(i="left"===h?(r=f+c+u)-u:"right"===h?(r=f+g-c-u)-u:(r=n.caretX)-u,o=r+u,"top"===d)s=(a=p)-u,l=a;else{s=(a=p+m)+u,l=a;var v=o;o=i,i=v}return{x1:i,x2:r,x3:o,y1:a,y2:s,y3:l}},drawTitle:function(t,e,n,r){var o=e.title;if(o.length){n.textAlign=e._titleAlign,n.textBaseline="top";var a,s,l=e.titleFontSize,u=e.titleSpacing;for(n.fillStyle=i(e.titleFontColor,r),n.font=c.fontString(l,e._titleFontStyle,e._titleFontFamily),a=0,s=o.length;a<s;++a)n.fillText(o[a],t.x,t.y),t.y+=l+u,a+1===o.length&&(t.y+=e.titleMarginBottom-u)}},drawBody:function(t,e,n,r){var o=e.bodyFontSize,a=e.bodySpacing,s=e.body;n.textAlign=e._bodyAlign,n.textBaseline="top",n.font=c.fontString(o,e._bodyFontStyle,e._bodyFontFamily);
var l=0,u=function(e){n.fillText(e,t.x+l,t.y),t.y+=o+a};n.fillStyle=i(e.bodyFontColor,r),c.each(e.beforeBody,u);var h=e.displayColors;l=h?o+2:0,c.each(s,function(a,s){var l=i(e.labelTextColors[s],r);n.fillStyle=l,c.each(a.before,u),c.each(a.lines,function(a){h&&(n.fillStyle=i(e.legendColorBackground,r),n.fillRect(t.x,t.y,o,o),n.lineWidth=1,n.strokeStyle=i(e.labelColors[s].borderColor,r),n.strokeRect(t.x,t.y,o,o),n.fillStyle=i(e.labelColors[s].backgroundColor,r),n.fillRect(t.x+1,t.y+1,o-2,o-2),n.fillStyle=l),u(a)}),c.each(a.after,u)}),l=0,c.each(e.afterBody,u),t.y-=a},drawFooter:function(t,e,n,r){var o=e.footer;o.length&&(t.y+=e.footerMarginTop,n.textAlign=e._footerAlign,n.textBaseline="top",n.fillStyle=i(e.footerFontColor,r),n.font=c.fontString(e.footerFontSize,e._footerFontStyle,e._footerFontFamily),c.each(o,function(i){n.fillText(i,t.x,t.y),t.y+=e.footerFontSize+e.footerSpacing}))},drawBackground:function(t,e,n,r,o){n.fillStyle=i(e.backgroundColor,o),n.strokeStyle=i(e.borderColor,o),n.lineWidth=e.borderWidth;var a=e.xAlign,s=e.yAlign,l=t.x,u=t.y,c=r.width,h=r.height,d=e.cornerRadius;n.beginPath(),n.moveTo(l+d,u),"top"===s&&this.drawCaret(t,r),n.lineTo(l+c-d,u),n.quadraticCurveTo(l+c,u,l+c,u+d),"center"===s&&"right"===a&&this.drawCaret(t,r),n.lineTo(l+c,u+h-d),n.quadraticCurveTo(l+c,u+h,l+c-d,u+h),"bottom"===s&&this.drawCaret(t,r),n.lineTo(l+d,u+h),n.quadraticCurveTo(l,u+h,l,u+h-d),"center"===s&&"left"===a&&this.drawCaret(t,r),n.lineTo(l,u+d),n.quadraticCurveTo(l,u,l+d,u),n.closePath(),n.fill(),0<e.borderWidth&&n.stroke()},draw:function(){var t=this._chart.ctx,e=this._view;if(0!==e.opacity){var n={width:e.width,height:e.height},i={x:e.x,y:e.y},r=Math.abs(e.opacity<.001)?0:e.opacity,o=e.title.length||e.beforeBody.length||e.body.length||e.afterBody.length||e.footer.length;this._options.enabled&&o&&(this.drawBackground(i,e,t,n,r),i.x+=e.xPadding,i.y+=e.yPadding,this.drawTitle(i,e,t,r),this.drawBody(i,e,t,r),this.drawFooter(i,e,t,r))}},handleEvent:function(t){var e,n=this,i=n._options;return n._lastActive=n._lastActive||[],"mouseout"===t.type?n._active=[]:n._active=n._chart.getElementsAtEventForMode(t,i.mode,i),(e=!c.arrayEquals(n._active,n._lastActive))&&(n._lastActive=n._active,(i.enabled||i.custom)&&(n._eventPosition={x:t.x,y:t.y},n.update(!0),n.pivot())),e}})).positioners=h},{26:26,27:27,46:46}],37:[function(t,e,n){"use strict";var i=t(26),r=t(27),o=t(46);i._set("global",{elements:{arc:{backgroundColor:i.global.defaultColor,borderColor:"#fff",borderWidth:2}}}),e.exports=r.extend({inLabelRange:function(t){var e=this._view;return!!e&&Math.pow(t-e.x,2)<Math.pow(e.radius+e.hoverRadius,2)},inRange:function(t,e){var n=this._view;if(n){for(var i=o.getAngleFromPoint(n,{x:t,y:e}),r=i.angle,a=i.distance,s=n.startAngle,l=n.endAngle;l<s;)l+=2*Math.PI;for(;l<r;)r-=2*Math.PI;for(;r<s;)r+=2*Math.PI;var u=s<=r&&r<=l,c=a>=n.innerRadius&&a<=n.outerRadius;return u&&c}return!1},getCenterPoint:function(){var t=this._view,e=(t.startAngle+t.endAngle)/2,n=(t.innerRadius+t.outerRadius)/2;return{x:t.x+Math.cos(e)*n,y:t.y+Math.sin(e)*n}},getArea:function(){var t=this._view;return Math.PI*((t.endAngle-t.startAngle)/(2*Math.PI))*(Math.pow(t.outerRadius,2)-Math.pow(t.innerRadius,2))},tooltipPosition:function(){var t=this._view,e=t.startAngle+(t.endAngle-t.startAngle)/2,n=(t.outerRadius-t.innerRadius)/2+t.innerRadius;return{x:t.x+Math.cos(e)*n,y:t.y+Math.sin(e)*n}},draw:function(){var t=this._chart.ctx,e=this._view,n=e.startAngle,i=e.endAngle;t.beginPath(),t.arc(e.x,e.y,e.outerRadius,n,i),t.arc(e.x,e.y,e.innerRadius,i,n,!0),t.closePath(),t.strokeStyle=e.borderColor,t.lineWidth=e.borderWidth,t.fillStyle=e.backgroundColor,t.fill(),t.lineJoin="bevel",e.borderWidth&&t.stroke()}})},{26:26,27:27,46:46}],38:[function(t,e,n){"use strict";var i=t(26),r=t(27),o=t(46),a=i.global;i._set("global",{elements:{line:{tension:.4,backgroundColor:a.defaultColor,borderWidth:3,borderColor:a.defaultColor,borderCapStyle:"butt",borderDash:[],borderDashOffset:0,borderJoinStyle:"miter",capBezierPoints:!0,fill:!0}}}),e.exports=r.extend({draw:function(){var t,e,n,i,r=this._view,s=this._chart.ctx,l=r.spanGaps,u=this._children.slice(),c=a.elements.line,h=-1;for(this._loop&&u.length&&u.push(u[0]),s.save(),s.lineCap=r.borderCapStyle||c.borderCapStyle,s.setLineDash&&s.setLineDash(r.borderDash||c.borderDash),s.lineDashOffset=r.borderDashOffset||c.borderDashOffset,s.lineJoin=r.borderJoinStyle||c.borderJoinStyle,s.lineWidth=r.borderWidth||c.borderWidth,s.strokeStyle=r.borderColor||a.defaultColor,s.beginPath(),h=-1,t=0;t<u.length;++t)e=u[t],n=o.previousItem(u,t),i=e._view,0===t?i.skip||(s.moveTo(i.x,i.y),h=t):(n=-1===h?n:u[h],i.skip||(h!==t-1&&!l||-1===h?s.moveTo(i.x,i.y):o.canvas.lineTo(s,n._view,e._view),h=t));s.stroke(),s.restore()}})},{26:26,27:27,46:46}],39:[function(t,e,n){"use strict";function i(t){var e=this._view;return!!e&&Math.abs(t-e.x)<e.radius+e.hitRadius}var r=t(26),o=t(27),a=t(46),s=r.global.defaultColor;r._set("global",{elements:{point:{radius:3,pointStyle:"circle",backgroundColor:s,borderColor:s,borderWidth:1,hitRadius:1,hoverRadius:4,hoverBorderWidth:1}}}),e.exports=o.extend({inRange:function(t,e){var n=this._view;return!!n&&Math.pow(t-n.x,2)+Math.pow(e-n.y,2)<Math.pow(n.hitRadius+n.radius,2)},inLabelRange:i,inXRange:i,inYRange:function(t){var e=this._view;return!!e&&Math.abs(t-e.y)<e.radius+e.hitRadius},getCenterPoint:function(){var t=this._view;return{x:t.x,y:t.y}},getArea:function(){return Math.PI*Math.pow(this._view.radius,2)},tooltipPosition:function(){var t=this._view;return{x:t.x,y:t.y,padding:t.radius+t.borderWidth}},draw:function(t){var e=this._view,n=this._model,i=this._chart.ctx,o=e.pointStyle,l=e.rotation,u=e.radius,c=e.x,h=e.y;e.skip||(void 0===t||n.x>=t.left&&1.01*t.right>=n.x&&n.y>=t.top&&1.01*t.bottom>=n.y)&&(i.strokeStyle=e.borderColor||s,i.lineWidth=a.valueOrDefault(e.borderWidth,r.global.elements.point.borderWidth),i.fillStyle=e.backgroundColor||s,a.canvas.drawPoint(i,o,u,c,h,l))}})},{26:26,27:27,46:46}],40:[function(t,e,n){"use strict";function i(t){return void 0!==t._view.width}function r(t){var e,n,r,o,a=t._view;if(i(t)){var s=a.width/2;e=a.x-s,n=a.x+s,r=Math.min(a.y,a.base),o=Math.max(a.y,a.base)}else{var l=a.height/2;e=Math.min(a.x,a.base),n=Math.max(a.x,a.base),r=a.y-l,o=a.y+l}return{left:e,top:r,right:n,bottom:o}}var o=t(26),a=t(27);o._set("global",{elements:{rectangle:{backgroundColor:o.global.defaultColor,borderColor:o.global.defaultColor,borderSkipped:"bottom",borderWidth:0}}}),e.exports=a.extend({draw:function(){function t(t){return v[(y+t)%4]}var e,n,i,r,o,a,s,l=this._chart.ctx,u=this._view,c=u.borderWidth;if(s=u.horizontal?(e=u.base,n=u.x,i=u.y-u.height/2,r=u.y+u.height/2,o=e<n?1:-1,a=1,u.borderSkipped||"left"):(e=u.x-u.width/2,n=u.x+u.width/2,o=1,a=(i=u.y)<(r=u.base)?1:-1,u.borderSkipped||"bottom"),c){var h=Math.min(Math.abs(e-n),Math.abs(i-r)),d=(c=h<c?h:c)/2,f=e+("left"!==s?d*o:0),p=n+("right"!==s?-d*o:0),g=i+("top"!==s?d*a:0),m=r+("bottom"!==s?-d*a:0);f!==p&&(i=g,r=m),g!==m&&(e=f,n=p)}l.beginPath(),l.fillStyle=u.backgroundColor,l.strokeStyle=u.borderColor,l.lineWidth=c;var v=[[e,r],[e,i],[n,i],[n,r]],y=["bottom","left","top","right"].indexOf(s,0);-1===y&&(y=0);var b=t(0);l.moveTo(b[0],b[1]);for(var x=1;x<4;x++)b=t(x),l.lineTo(b[0],b[1]);l.fill(),c&&l.stroke()},height:function(){var t=this._view;return t.base-t.y},inRange:function(t,e){var n=!1;if(this._view){var i=r(this);n=t>=i.left&&t<=i.right&&e>=i.top&&e<=i.bottom}return n},inLabelRange:function(t,e){if(!this._view)return!1;var n=r(this);return i(this)?t>=n.left&&t<=n.right:e>=n.top&&e<=n.bottom},inXRange:function(t){var e=r(this);return t>=e.left&&t<=e.right},inYRange:function(t){var e=r(this);return t>=e.top&&t<=e.bottom},getCenterPoint:function(){var t,e,n=this._view;return e=i(this)?(t=n.x,(n.y+n.base)/2):(t=(n.x+n.base)/2,n.y),{x:t,y:e}},getArea:function(){var t=this._view;return t.width*Math.abs(t.y-t.base)},tooltipPosition:function(){var t=this._view;return{x:t.x,y:t.y}}})},{26:26,27:27}],41:[function(t,e,n){"use strict";e.exports={},e.exports.Arc=t(37),e.exports.Line=t(38),e.exports.Point=t(39),e.exports.Rectangle=t(40)},{37:37,38:38,39:39,40:40}],42:[function(t,e,n){"use strict";var i=t(43);n=e.exports={clear:function(t){t.ctx.clearRect(0,0,t.width,t.height)},roundedRect:function(t,e,n,i,r,o){if(o){var a=Math.min(o,r/2-1e-7,i/2-1e-7);t.moveTo(e+a,n),t.lineTo(e+i-a,n),t.arcTo(e+i,n,e+i,n+a,a),t.lineTo(e+i,n+r-a),t.arcTo(e+i,n+r,e+i-a,n+r,a),t.lineTo(e+a,n+r),t.arcTo(e,n+r,e,n+r-a,a),t.lineTo(e,n+a),t.arcTo(e,n,e+a,n,a),t.closePath(),t.moveTo(e,n)}else t.rect(e,n,i,r)},drawPoint:function(t,e,n,i,r,o){var a,s,l,u,c,h;if(o=o||0,!e||"object"!=typeof e||"[object HTMLImageElement]"!==(a=e.toString())&&"[object HTMLCanvasElement]"!==a){if(!(isNaN(n)||n<=0)){switch(t.save(),t.translate(i,r),t.rotate(o*Math.PI/180),t.beginPath(),e){default:t.arc(0,0,n,0,2*Math.PI),t.closePath();break;case"triangle":c=(s=3*n/Math.sqrt(3))*Math.sqrt(3)/2,t.moveTo(-s/2,c/3),t.lineTo(s/2,c/3),t.lineTo(0,-2*c/3),t.closePath();break;case"rect":h=1/Math.SQRT2*n,t.rect(-h,-h,2*h,2*h);break;case"rectRounded":var d=n/Math.SQRT2,f=-d,p=-d,g=Math.SQRT2*n;this.roundedRect(t,f,p,g,g,.425*n);break;case"rectRot":h=1/Math.SQRT2*n,t.moveTo(-h,0),t.lineTo(0,h),t.lineTo(h,0),t.lineTo(0,-h),t.closePath();break;case"cross":t.moveTo(0,n),t.lineTo(0,-n),t.moveTo(-n,0),t.lineTo(n,0);break;case"crossRot":l=Math.cos(Math.PI/4)*n,u=Math.sin(Math.PI/4)*n,t.moveTo(-l,-u),t.lineTo(l,u),t.moveTo(-l,u),t.lineTo(l,-u);break;case"star":t.moveTo(0,n),t.lineTo(0,-n),t.moveTo(-n,0),t.lineTo(n,0),l=Math.cos(Math.PI/4)*n,u=Math.sin(Math.PI/4)*n,t.moveTo(-l,-u),t.lineTo(l,u),t.moveTo(-l,u),t.lineTo(l,-u);break;case"line":t.moveTo(-n,0),t.lineTo(n,0);break;case"dash":t.moveTo(0,0),t.lineTo(n,0)}t.fill(),t.stroke(),t.restore()}}else t.drawImage(e,i-e.width/2,r-e.height/2,e.width,e.height)},clipArea:function(t,e){t.save(),t.beginPath(),t.rect(e.left,e.top,e.right-e.left,e.bottom-e.top),t.clip()},unclipArea:function(t){t.restore()},lineTo:function(t,e,n,i){return n.steppedLine?("after"===n.steppedLine&&!i||"after"!==n.steppedLine&&i?t.lineTo(e.x,n.y):t.lineTo(n.x,e.y),void t.lineTo(n.x,n.y)):void(n.tension?t.bezierCurveTo(i?e.controlPointPreviousX:e.controlPointNextX,i?e.controlPointPreviousY:e.controlPointNextY,i?n.controlPointNextX:n.controlPointPreviousX,i?n.controlPointNextY:n.controlPointPreviousY,n.x,n.y):t.lineTo(n.x,n.y))}},i.clear=n.clear,i.drawRoundedRectangle=function(t){t.beginPath(),n.roundedRect.apply(n,arguments)}},{43:43}],43:[function(t,e,n){"use strict";var i,r={noop:function(){},uid:(i=0,function(){return i++}),isNullOrUndef:function(t){return null==t},isArray:Array.isArray?Array.isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)},isObject:function(t){return null!==t&&"[object Object]"===Object.prototype.toString.call(t)},valueOrDefault:function(t,e){return void 0===t?e:t},valueAtIndexOrDefault:function(t,e,n){return r.valueOrDefault(r.isArray(t)?t[e]:t,n)},callback:function(t,e,n){if(t&&"function"==typeof t.call)return t.apply(n,e)},each:function(t,e,n,i){var o,a,s;if(r.isArray(t))if(a=t.length,i)for(o=a-1;0<=o;o--)e.call(n,t[o],o);else for(o=0;o<a;o++)e.call(n,t[o],o);else if(r.isObject(t))for(a=(s=Object.keys(t)).length,o=0;o<a;o++)e.call(n,t[s[o]],s[o])},arrayEquals:function(t,e){var n,i,o,a;if(!t||!e||t.length!==e.length)return!1;for(n=0,i=t.length;n<i;++n)if(o=t[n],a=e[n],o instanceof Array&&a instanceof Array){if(!r.arrayEquals(o,a))return!1}else if(o!==a)return!1;return!0},clone:function(t){if(r.isArray(t))return t.map(r.clone);if(r.isObject(t)){for(var e={},n=Object.keys(t),i=n.length,o=0;o<i;++o)e[n[o]]=r.clone(t[n[o]]);return e}return t},_merger:function(t,e,n,i){var o=e[t],a=n[t];r.isObject(o)&&r.isObject(a)?r.merge(o,a,i):e[t]=r.clone(a)},_mergerIf:function(t,e,n){var i=e[t],o=n[t];r.isObject(i)&&r.isObject(o)?r.mergeIf(i,o):e.hasOwnProperty(t)||(e[t]=r.clone(o))},merge:function(t,e,n){var i,o,a,s,l,u=r.isArray(e)?e:[e],c=u.length;if(!r.isObject(t))return t;for(i=(n=n||{}).merger||r._merger,o=0;o<c;++o)if(e=u[o],r.isObject(e))for(l=0,s=(a=Object.keys(e)).length;l<s;++l)i(a[l],t,e,n);return t},mergeIf:function(t,e){return r.merge(t,e,{merger:r._mergerIf})},extend:function(t){for(var e=function(e,n){t[n]=e},n=1,i=arguments.length;n<i;++n)r.each(arguments[n],e);return t},inherits:function(t){var e=this,n=t&&t.hasOwnProperty("constructor")?t.constructor:function(){return e.apply(this,arguments)},i=function(){this.constructor=n};return i.prototype=e.prototype,n.prototype=new i,n.extend=r.inherits,t&&r.extend(n.prototype,t),n.__super__=e.prototype,n}};(e.exports=r).callCallback=r.callback,r.indexOf=function(t,e,n){return Array.prototype.indexOf.call(t,e,n)},r.getValueOrDefault=r.valueOrDefault,r.getValueAtIndexOrDefault=r.valueAtIndexOrDefault},{}],44:[function(t,e,n){"use strict";var i=t(43),r={linear:function(t){return t},easeInQuad:function(t){return t*t},easeOutQuad:function(t){return-t*(t-2)},easeInOutQuad:function(t){return(t/=.5)<1?.5*t*t:-.5*(--t*(t-2)-1)},easeInCubic:function(t){return t*t*t},easeOutCubic:function(t){return(t-=1)*t*t+1},easeInOutCubic:function(t){return(t/=.5)<1?.5*t*t*t:.5*((t-=2)*t*t+2)},easeInQuart:function(t){return t*t*t*t},easeOutQuart:function(t){return-((t-=1)*t*t*t-1)},easeInOutQuart:function(t){return(t/=.5)<1?.5*t*t*t*t:-.5*((t-=2)*t*t*t-2)},easeInQuint:function(t){return t*t*t*t*t},easeOutQuint:function(t){return(t-=1)*t*t*t*t+1},easeInOutQuint:function(t){return(t/=.5)<1?.5*t*t*t*t*t:.5*((t-=2)*t*t*t*t+2)},easeInSine:function(t){return 1-Math.cos(t*(Math.PI/2))},easeOutSine:function(t){return Math.sin(t*(Math.PI/2))},easeInOutSine:function(t){return-.5*(Math.cos(Math.PI*t)-1)},easeInExpo:function(t){return 0===t?0:Math.pow(2,10*(t-1))},easeOutExpo:function(t){return 1===t?1:1-Math.pow(2,-10*t)},easeInOutExpo:function(t){return 0===t?0:1===t?1:(t/=.5)<1?.5*Math.pow(2,10*(t-1)):.5*(2-Math.pow(2,-10*--t))},easeInCirc:function(t){return 1<=t?t:-(Math.sqrt(1-t*t)-1)},easeOutCirc:function(t){return Math.sqrt(1-(t-=1)*t)},easeInOutCirc:function(t){return(t/=.5)<1?-.5*(Math.sqrt(1-t*t)-1):.5*(Math.sqrt(1-(t-=2)*t)+1)},easeInElastic:function(t){var e=1.70158,n=0,i=1;return 0===t?0:1===t?1:(n||(n=.3),e=i<1?(i=1,n/4):n/(2*Math.PI)*Math.asin(1/i),-i*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/n))},easeOutElastic:function(t){var e=1.70158,n=0,i=1;return 0===t?0:1===t?1:(n||(n=.3),e=i<1?(i=1,n/4):n/(2*Math.PI)*Math.asin(1/i),i*Math.pow(2,-10*t)*Math.sin((t-e)*(2*Math.PI)/n)+1)},easeInOutElastic:function(t){var e=1.70158,n=0,i=1;return 0===t?0:2==(t/=.5)?1:(n||(n=.45),e=i<1?(i=1,n/4):n/(2*Math.PI)*Math.asin(1/i),t<1?i*Math.pow(2,10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/n)*-.5:i*Math.pow(2,-10*(t-=1))*Math.sin((t-e)*(2*Math.PI)/n)*.5+1)},easeInBack:function(t){return t*t*(2.70158*t-1.70158)},easeOutBack:function(t){return(t-=1)*t*(2.70158*t+1.70158)+1},easeInOutBack:function(t){var e=1.70158;return(t/=.5)<1?t*t*((1+(e*=1.525))*t-e)*.5:.5*((t-=2)*t*((1+(e*=1.525))*t+e)+2)},easeInBounce:function(t){return 1-r.easeOutBounce(1-t)},easeOutBounce:function(t){return t<1/2.75?7.5625*t*t:t<2/2.75?7.5625*(t-=1.5/2.75)*t+.75:t<2.5/2.75?7.5625*(t-=2.25/2.75)*t+.9375:7.5625*(t-=2.625/2.75)*t+.984375},easeInOutBounce:function(t){return t<.5?.5*r.easeInBounce(2*t):.5*r.easeOutBounce(2*t-1)+.5}};e.exports={effects:r},i.easingEffects=r},{43:43}],45:[function(t,e,n){"use strict";var i=t(43);e.exports={toLineHeight:function(t,e){var n=(""+t).match(/^(normal|(\d+(?:\.\d+)?)(px|em|%)?)$/);if(!n||"normal"===n[1])return 1.2*e;switch(t=+n[2],n[3]){case"px":return t;case"%":t/=100}return e*t},toPadding:function(t){var e,n,r,o;return i.isObject(t)?(e=+t.top||0,n=+t.right||0,r=+t.bottom||0,o=+t.left||0):e=n=r=o=+t||0,{top:e,right:n,bottom:r,left:o,height:e+r,width:o+n}},resolve:function(t,e,n){var r,o,a;for(r=0,o=t.length;r<o;++r)if(void 0!==(a=t[r])&&(void 0!==e&&"function"==typeof a&&(a=a(e)),void 0!==n&&i.isArray(a)&&(a=a[n]),void 0!==a))return a}}},{43:43}],46:[function(t,e,n){"use strict";e.exports=t(43),e.exports.easing=t(44),e.exports.canvas=t(42),e.exports.options=t(45)},{42:42,43:43,44:44,45:45}],47:[function(t,e,n){e.exports={acquireContext:function(t){return t&&t.canvas&&(t=t.canvas),t&&t.getContext("2d")||null}}},{}],48:[function(t,e,n){"use strict";function i(t,e){var n=u.getStyle(t,e),i=n&&n.match(/^(\d+)(\.\d+)?px$/);return i?Number(i[1]):void 0}function r(t,e,n){t.addEventListener(e,n,m)}function o(t,e,n){t.removeEventListener(e,n,m)}function a(t,e,n,i,r){return{type:t,chart:e,"native":r||null,x:void 0!==n?n:null,y:void 0!==i?i:null}}function s(t,e,n){var i,o,s,l,g,m,v,y,b=t[c]||(t[c]={}),x=b.resizer=function(t){var e=document.createElement("div"),n=h+"size-monitor",i="position:absolute;left:0;top:0;right:0;bottom:0;overflow:hidden;pointer-events:none;visibility:hidden;z-index:-1;";e.style.cssText=i,e.className=n,e.innerHTML='<div class="'+n+'-expand" style="'+i+'"><div style="position:absolute;width:1000000px;height:1000000px;left:0;top:0"></div></div><div class="'+n+'-shrink" style="'+i+'"><div style="position:absolute;width:200%;height:200%;left:0; top:0"></div></div>';var o=e.childNodes[0],a=e.childNodes[1];e._reset=function(){o.scrollLeft=1e6,o.scrollTop=1e6,a.scrollLeft=1e6,a.scrollTop=1e6};var s=function(){e._reset(),t()};return r(o,"scroll",s.bind(o,"expand")),r(a,"scroll",s.bind(a,"shrink")),e}((s=!(i=function(){if(b.resizer)return e(a("resize",n))}),l=[],function(){l=Array.prototype.slice.call(arguments),o=o||this,s||(s=!0,u.requestAnimFrame.call(window,function(){s=!1,i.apply(o,l)}))}));m=function(){if(b.resizer){var e=t.parentNode;e&&e!==x.parentNode&&e.insertBefore(x,e.firstChild),x._reset()}},v=(g=t)[c]||(g[c]={}),y=v.renderProxy=function(t){t.animationName===f&&m()},u.each(p,function(t){r(g,t,y)}),v.reflow=!!g.offsetParent,g.classList.add(d)}function l(t){var e,n,i,r=t[c]||{},a=r.resizer;delete r.resizer,n=(e=t)[c]||{},(i=n.renderProxy)&&(u.each(p,function(t){o(e,t,i)}),delete n.renderProxy),e.classList.remove(d),a&&a.parentNode&&a.parentNode.removeChild(a)}var u=t(46),c="$chartjs",h="chartjs-",d=h+"render-monitor",f=h+"render-animation",p=["animationstart","webkitAnimationStart"],g={touchstart:"mousedown",touchmove:"mousemove",touchend:"mouseup",pointerenter:"mouseenter",pointerdown:"mousedown",pointermove:"mousemove",pointerup:"mouseup",pointerleave:"mouseout",pointerout:"mouseout"},m=!!function(){var t=!1;try{var e=Object.defineProperty({},"passive",{get:function(){t=!0}});window.addEventListener("e",null,e)}catch(t){}return t}()&&{passive:!0};e.exports={_enabled:"undefined"!=typeof window&&"undefined"!=typeof document,initialize:function(){var t,e,n,i="from{opacity:0.99}to{opacity:1}";e="@-webkit-keyframes "+f+"{"+i+"}@keyframes "+f+"{"+i+"}."+d+"{-webkit-animation:"+f+" 0.001s;animation:"+f+" 0.001s;}",n=(t=this)._style||document.createElement("style"),t._style||(e="/* Chart.js */\n"+e,(t._style=n).setAttribute("type","text/css"),document.getElementsByTagName("head")[0].appendChild(n)),n.appendChild(document.createTextNode(e))},acquireContext:function(t,e){"string"==typeof t?t=document.getElementById(t):t.length&&(t=t[0]),t&&t.canvas&&(t=t.canvas);var n=t&&t.getContext&&t.getContext("2d");return n&&n.canvas===t?(function(t,e){var n=t.style,r=t.getAttribute("height"),o=t.getAttribute("width");if(t[c]={initial:{height:r,width:o,style:{display:n.display,height:n.height,width:n.width}}},n.display=n.display||"block",null===o||""===o){var a=i(t,"width");void 0!==a&&(t.width=a)}if(null===r||""===r)if(""===t.style.height)t.height=t.width/(e.options.aspectRatio||2);else{var s=i(t,"height");void 0!==a&&(t.height=s)}}(t,e),n):null},releaseContext:function(t){var e=t.canvas;if(e[c]){var n=e[c].initial;["height","width"].forEach(function(t){var i=n[t];u.isNullOrUndef(i)?e.removeAttribute(t):e.setAttribute(t,i)}),u.each(n.style||{},function(t,n){e.style[n]=t}),e.width=e.width,delete e[c]}},addEventListener:function(t,e,n){var i=t.canvas;if("resize"!==e){var o=n[c]||(n[c]={});r(i,e,(o.proxies||(o.proxies={}))[t.id+"_"+e]=function(e){var i,r,o,s;n((r=t,o=g[(i=e).type]||i.type,s=u.getRelativePosition(i,r),a(o,r,s.x,s.y,i)))})}else s(i,n,t)},removeEventListener:function(t,e,n){var i=t.canvas;if("resize"!==e){var r=((n[c]||{}).proxies||{})[t.id+"_"+e];r&&o(i,e,r)}else l(i)}},u.addEvent=r,u.removeEvent=o},{46:46}],49:[function(t,e,n){"use strict";var i=t(46),r=t(47),o=t(48),a=o._enabled?o:r;e.exports=i.extend({initialize:function(){},acquireContext:function(){},releaseContext:function(){},addEventListener:function(){},removeEventListener:function(){}},a)},{46:46,47:47,48:48}],50:[function(t,e,n){"use strict";e.exports={},e.exports.filler=t(51),e.exports.legend=t(52),e.exports.title=t(53)},{51:51,52:52,53:53}],51:[function(t,e,n){"use strict";function i(t,e,n){var i,r=t._model||{},o=r.fill;if(void 0===o&&(o=!!r.backgroundColor),!1===o||null===o)return!1;if(!0===o)return"origin";if(i=parseFloat(o,10),isFinite(i)&&Math.floor(i)===i)return"-"!==o[0]&&"+"!==o[0]||(i=e+i),!(i===e||i<0||n<=i)&&i;switch(o){case"bottom":return"start";case"top":return"end";case"zero":return"origin";case"origin":case"start":case"end":return o;default:return!1}}function r(t){var e,n=t.el._model||{},i=t.el._scale||{},r=t.fill,o=null;if(isFinite(r))return null;if("start"===r?o=void 0===n.scaleBottom?i.bottom:n.scaleBottom:"end"===r?o=void 0===n.scaleTop?i.top:n.scaleTop:void 0!==n.scaleZero?o=n.scaleZero:i.getBasePosition?o=i.getBasePosition():i.getBasePixel&&(o=i.getBasePixel()),null!=o){if(void 0!==o.x&&void 0!==o.y)return o;if("number"==typeof o&&isFinite(o))return{x:(e=i.isHorizontal())?o:null,y:e?null:o}}return null}function o(t,e,n){var i,r=t[e].fill,o=[e];if(!n)return r;for(;!1!==r&&-1===o.indexOf(r);){if(!isFinite(r))return r;if(!(i=t[r]))return!1;if(i.visible)return r;o.push(r),r=i.fill}return!1}function a(t){return t&&!t.skip}function s(t,e,n,i,r){var o;if(i&&r){for(t.moveTo(e[0].x,e[0].y),o=1;o<i;++o)c.canvas.lineTo(t,e[o-1],e[o]);for(t.lineTo(n[r-1].x,n[r-1].y),o=r-1;0<o;--o)c.canvas.lineTo(t,n[o],n[o-1],!0)}}var l=t(26),u=t(41),c=t(46);l._set("global",{plugins:{filler:{propagate:!0}}});var h={dataset:function(t){var e=t.fill,n=t.chart,i=n.getDatasetMeta(e),r=i&&n.isDatasetVisible(e)&&i.dataset._children||[],o=r.length||0;return o?function(t,e){return e<o&&r[e]._view||null}:null},boundary:function(t){var e=t.boundary,n=e?e.x:null,i=e?e.y:null;return function(t){return{x:null===n?t.x:n,y:null===i?t.y:i}}}};e.exports={id:"filler",afterDatasetsUpdate:function(t,e){var n,a,s,l,c,d,f,p=(t.data.datasets||[]).length,g=e.propagate,m=[];for(a=0;a<p;++a)l=null,(s=(n=t.getDatasetMeta(a)).dataset)&&s._model&&s instanceof u.Line&&(l={visible:t.isDatasetVisible(a),fill:i(s,a,p),chart:t,el:s}),n.$filler=l,m.push(l);for(a=0;a<p;++a)(l=m[a])&&(l.fill=o(m,a,g),l.boundary=r(l),l.mapper=(f=void 0,d=(c=l).fill,!(f="dataset")===d?null:(isFinite(d)||(f="boundary"),h[f](c))))},beforeDatasetDraw:function(t,e){var n=e.meta.$filler;if(n){var i=t.ctx,r=n.el,o=r._view,u=r._children||[],h=n.mapper,d=o.backgroundColor||l.global.defaultColor;h&&d&&u.length&&(c.canvas.clipArea(i,t.chartArea),function(t,e,n,i,r,o){var l,u,c,h,d,f,p,g=e.length,m=i.spanGaps,v=[],y=[],b=0,x=0;for(t.beginPath(),l=0,u=g+!!o;l<u;++l)d=n(h=e[c=l%g]._view,c,i),f=a(h),p=a(d),f&&p?(b=v.push(h),x=y.push(d)):b&&x&&(m?(f&&v.push(h),p&&y.push(d)):(s(t,v,y,b,x),b=x=0,v=[],y=[]));s(t,v,y,b,x),t.closePath(),t.fillStyle=r,t.fill()}(i,u,h,o,d,r._loop),c.canvas.unclipArea(i))}}}},{26:26,41:41,46:46}],52:[function(t,e,n){"use strict";function i(t,e){return t.usePointStyle?e*Math.SQRT2:t.boxWidth}function r(t,e){var n=new c({ctx:t.ctx,options:e,chart:t});l.configure(t,n,e),l.addBox(t,n),t.legend=n}var o=t(26),a=t(27),s=t(46),l=t(31),u=s.noop;o._set("global",{legend:{display:!0,position:"top",fullWidth:!0,reverse:!1,weight:1e3,onClick:function(t,e){var n=e.datasetIndex,i=this.chart,r=i.getDatasetMeta(n);r.hidden=null===r.hidden?!i.data.datasets[n].hidden:null,i.update()},onHover:null,labels:{boxWidth:40,padding:10,generateLabels:function(t){var e=t.data;return s.isArray(e.datasets)?e.datasets.map(function(e,n){return{text:e.label,fillStyle:s.isArray(e.backgroundColor)?e.backgroundColor[0]:e.backgroundColor,hidden:!t.isDatasetVisible(n),lineCap:e.borderCapStyle,lineDash:e.borderDash,lineDashOffset:e.borderDashOffset,lineJoin:e.borderJoinStyle,lineWidth:e.borderWidth,strokeStyle:e.borderColor,pointStyle:e.pointStyle,datasetIndex:n}},this):[]}}},legendCallback:function(t){var e=[];e.push('<ul class="'+t.id+'-legend">');for(var n=0;n<t.data.datasets.length;n++)e.push('<li><span style="background-color:'+t.data.datasets[n].backgroundColor+'"></span>'),t.data.datasets[n].label&&e.push(t.data.datasets[n].label),e.push("</li>");return e.push("</ul>"),e.join("")}});var c=a.extend({initialize:function(t){s.extend(this,t),this.legendHitBoxes=[],this.doughnutMode=!1},beforeUpdate:u,update:function(t,e,n){var i=this;return i.beforeUpdate(),i.maxWidth=t,i.maxHeight=e,i.margins=n,i.beforeSetDimensions(),i.setDimensions(),i.afterSetDimensions(),i.beforeBuildLabels(),i.buildLabels(),i.afterBuildLabels(),i.beforeFit(),i.fit(),i.afterFit(),i.afterUpdate(),i.minSize},afterUpdate:u,beforeSetDimensions:u,setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0,t.minSize={width:0,height:0}},afterSetDimensions:u,beforeBuildLabels:u,buildLabels:function(){var t=this,e=t.options.labels||{},n=s.callback(e.generateLabels,[t.chart],t)||[];e.filter&&(n=n.filter(function(n){return e.filter(n,t.chart.data)})),t.options.reverse&&n.reverse(),t.legendItems=n},afterBuildLabels:u,beforeFit:u,fit:function(){var t=this,e=t.options,n=e.labels,r=e.display,a=t.ctx,l=o.global,u=s.valueOrDefault,c=u(n.fontSize,l.defaultFontSize),h=u(n.fontStyle,l.defaultFontStyle),d=u(n.fontFamily,l.defaultFontFamily),f=s.fontString(c,h,d),p=t.legendHitBoxes=[],g=t.minSize,m=t.isHorizontal();if(g.height=m?(g.width=t.maxWidth,r?10:0):(g.width=r?10:0,t.maxHeight),r)if(a.font=f,m){var v=t.lineWidths=[0],y=t.legendItems.length?c+n.padding:0;a.textAlign="left",a.textBaseline="top",s.each(t.legendItems,function(e,r){var o=i(n,c)+c/2+a.measureText(e.text).width;v[v.length-1]+o+n.padding>=t.width&&(y+=c+n.padding,v[v.length]=t.left),p[r]={left:0,top:0,width:o,height:c},v[v.length-1]+=o+n.padding}),g.height+=y}else{var b=n.padding,x=t.columnWidths=[],_=n.padding,w=0,k=0,M=c+b;s.each(t.legendItems,function(t,e){var r=i(n,c)+c/2+a.measureText(t.text).width;k+M>g.height&&(_+=w+n.padding,x.push(w),k=w=0),w=Math.max(w,r),k+=M,p[e]={left:0,top:0,width:r,height:c}}),_+=w,x.push(w),g.width+=_}t.width=g.width,t.height=g.height},afterFit:u,isHorizontal:function(){return"top"===this.options.position||"bottom"===this.options.position},draw:function(){var t=this,e=t.options,n=e.labels,r=o.global,a=r.elements.line,l=t.width,u=t.lineWidths;if(e.display){var c,h=t.ctx,d=s.valueOrDefault,f=d(n.fontColor,r.defaultFontColor),p=d(n.fontSize,r.defaultFontSize),g=d(n.fontStyle,r.defaultFontStyle),m=d(n.fontFamily,r.defaultFontFamily),v=s.fontString(p,g,m);h.textAlign="left",h.textBaseline="middle",h.lineWidth=.5,h.strokeStyle=f,h.fillStyle=f,h.font=v;var y=i(n,p),b=t.legendHitBoxes,x=t.isHorizontal();c=x?{x:t.left+(l-u[0])/2,y:t.top+n.padding,line:0}:{x:t.left+n.padding,y:t.top+n.padding,line:0};var _=p+n.padding;s.each(t.legendItems,function(i,o){var f,g,m,v,w,k=h.measureText(i.text).width,M=y+p/2+k,S=c.x,C=c.y;x?l<=S+M&&(C=c.y+=_,c.line++,S=c.x=t.left+(l-u[c.line])/2):C+_>t.bottom&&(S=c.x=S+t.columnWidths[c.line]+n.padding,C=c.y=t.top+n.padding,c.line++),function(t,n,i){if(!(isNaN(y)||y<=0)){h.save(),h.fillStyle=d(i.fillStyle,r.defaultColor),h.lineCap=d(i.lineCap,a.borderCapStyle),h.lineDashOffset=d(i.lineDashOffset,a.borderDashOffset),h.lineJoin=d(i.lineJoin,a.borderJoinStyle),h.lineWidth=d(i.lineWidth,a.borderWidth),h.strokeStyle=d(i.strokeStyle,r.defaultColor);var o=0===d(i.lineWidth,a.borderWidth);if(h.setLineDash&&h.setLineDash(d(i.lineDash,a.borderDash)),e.labels&&e.labels.usePointStyle){var l=p*Math.SQRT2/2,u=l/Math.SQRT2,c=t+u,f=n+u;s.canvas.drawPoint(h,i.pointStyle,l,c,f)}else o||h.strokeRect(t,n,y,p),h.fillRect(t,n,y,p);h.restore()}}(S,C,i),b[o].left=S,b[o].top=C,f=i,g=k,v=y+(m=p/2)+S,w=C+m,h.fillText(f.text,v,w),f.hidden&&(h.beginPath(),h.lineWidth=2,h.moveTo(v,w),h.lineTo(v+g,w),h.stroke()),x?c.x+=M+n.padding:c.y+=_})}},handleEvent:function(t){var e=this,n=e.options,i="mouseup"===t.type?"click":t.type,r=!1;if("mousemove"===i){if(!n.onHover)return}else{if("click"!==i)return;if(!n.onClick)return}var o=t.x,a=t.y;if(o>=e.left&&o<=e.right&&a>=e.top&&a<=e.bottom)for(var s=e.legendHitBoxes,l=0;l<s.length;++l){var u=s[l];if(o>=u.left&&o<=u.left+u.width&&a>=u.top&&a<=u.top+u.height){if("click"===i){n.onClick.call(e,t["native"],e.legendItems[l]),r=!0;break}if("mousemove"===i){n.onHover.call(e,t["native"],e.legendItems[l]),r=!0;break}}}return r}});e.exports={id:"legend",_element:c,beforeInit:function(t){var e=t.options.legend;e&&r(t,e)},beforeUpdate:function(t){var e=t.options.legend,n=t.legend;e?(s.mergeIf(e,o.global.legend),n?(l.configure(t,n,e),n.options=e):r(t,e)):n&&(l.removeBox(t,n),delete t.legend)},afterEvent:function(t,e){var n=t.legend;n&&n.handleEvent(e)}}},{26:26,27:27,31:31,46:46}],53:[function(t,e,n){"use strict";function i(t,e){var n=new u({ctx:t.ctx,options:e,chart:t});s.configure(t,n,e),s.addBox(t,n),t.titleBlock=n}var r=t(26),o=t(27),a=t(46),s=t(31),l=a.noop;r._set("global",{title:{display:!1,fontStyle:"bold",fullWidth:!0,lineHeight:1.2,padding:10,position:"top",text:"",weight:2e3}});var u=o.extend({initialize:function(t){a.extend(this,t),this.legendHitBoxes=[]},beforeUpdate:l,update:function(t,e,n){var i=this;return i.beforeUpdate(),i.maxWidth=t,i.maxHeight=e,i.margins=n,i.beforeSetDimensions(),i.setDimensions(),i.afterSetDimensions(),i.beforeBuildLabels(),i.buildLabels(),i.afterBuildLabels(),i.beforeFit(),i.fit(),i.afterFit(),i.afterUpdate(),i.minSize},afterUpdate:l,beforeSetDimensions:l,setDimensions:function(){var t=this;t.isHorizontal()?(t.width=t.maxWidth,t.left=0,t.right=t.width):(t.height=t.maxHeight,t.top=0,t.bottom=t.height),t.paddingLeft=0,t.paddingTop=0,t.paddingRight=0,t.paddingBottom=0,t.minSize={width:0,height:0}},afterSetDimensions:l,beforeBuildLabels:l,buildLabels:l,afterBuildLabels:l,beforeFit:l,fit:function(){var t=a.valueOrDefault,e=this.options,n=e.display,i=t(e.fontSize,r.global.defaultFontSize),o=this.minSize,s=a.isArray(e.text)?e.text.length:1,l=a.options.toLineHeight(e.lineHeight,i),u=n?s*l+2*e.padding:0;this.isHorizontal()?(o.width=this.maxWidth,o.height=u):(o.width=u,o.height=this.maxHeight),this.width=o.width,this.height=o.height},afterFit:l,isHorizontal:function(){var t=this.options.position;return"top"===t||"bottom"===t},draw:function(){var t=this.ctx,e=a.valueOrDefault,n=this.options,i=r.global;if(n.display){var o,s,l,u=e(n.fontSize,i.defaultFontSize),c=e(n.fontStyle,i.defaultFontStyle),h=e(n.fontFamily,i.defaultFontFamily),d=a.fontString(u,c,h),f=a.options.toLineHeight(n.lineHeight,u),p=f/2+n.padding,g=0,m=this.top,v=this.left,y=this.bottom,b=this.right;t.fillStyle=e(n.fontColor,i.defaultFontColor),t.font=d,this.isHorizontal()?(s=v+(b-v)/2,l=m+p,o=b-v):(s="left"===n.position?v+p:b-p,l=m+(y-m)/2,o=y-m,g=Math.PI*("left"===n.position?-.5:.5)),t.save(),t.translate(s,l),t.rotate(g),t.textAlign="center",t.textBaseline="middle";var x=n.text;if(a.isArray(x))for(var _=0,w=0;w<x.length;++w)t.fillText(x[w],0,_,o),_+=f;else t.fillText(x,0,0,o);t.restore()}}});e.exports={id:"title",_element:u,beforeInit:function(t){var e=t.options.title;e&&i(t,e)},beforeUpdate:function(t){var e=t.options.title,n=t.titleBlock;e?(a.mergeIf(e,r.global.title),n?(s.configure(t,n,e),n.options=e):i(t,e)):n&&(s.removeBox(t,n),delete t.titleBlock)}}},{26:26,27:27,31:31,46:46}],54:[function(t,e,n){"use strict";var i=t(33),r=t(34);e.exports=function(){
var t=i.extend({getLabels:function(){var t=this.chart.data;return this.options.labels||(this.isHorizontal()?t.xLabels:t.yLabels)||t.labels},determineDataLimits:function(){var t,e=this,n=e.getLabels();e.minIndex=0,e.maxIndex=n.length-1,void 0!==e.options.ticks.min&&(t=n.indexOf(e.options.ticks.min),e.minIndex=-1!==t?t:e.minIndex),void 0!==e.options.ticks.max&&(t=n.indexOf(e.options.ticks.max),e.maxIndex=-1!==t?t:e.maxIndex),e.min=n[e.minIndex],e.max=n[e.maxIndex]},buildTicks:function(){var t=this.getLabels();this.ticks=0===this.minIndex&&this.maxIndex===t.length-1?t:t.slice(this.minIndex,this.maxIndex+1)},getLabelForIndex:function(t,e){var n=this.chart.data,i=this.isHorizontal();return n.yLabels&&!i?this.getRightValue(n.datasets[e].data[t]):this.ticks[t-this.minIndex]},getPixelForValue:function(t,e){var n,i=this,r=i.options.offset,o=Math.max(i.maxIndex+1-i.minIndex-(r?0:1),1);if(null!=t&&(n=i.isHorizontal()?t.x:t.y),void 0!==n||void 0!==t&&isNaN(e)){t=n||t;var a=i.getLabels().indexOf(t);e=-1!==a?a:e}if(i.isHorizontal()){var s=i.width/o,l=s*(e-i.minIndex);return r&&(l+=s/2),i.left+Math.round(l)}var u=i.height/o,c=u*(e-i.minIndex);return r&&(c+=u/2),i.top+Math.round(c)},getPixelForTick:function(t){return this.getPixelForValue(this.ticks[t],t+this.minIndex,null)},getValueForPixel:function(t){var e=this.options.offset,n=Math.max(this._ticks.length-(e?0:1),1),i=this.isHorizontal(),r=(i?this.width:this.height)/n;return t-=i?this.left:this.top,e&&(t-=r/2),(t<=0?0:Math.round(t/r))+this.minIndex},getBasePixel:function(){return this.bottom}});r.registerScaleType("category",t,{position:"bottom"})}},{33:33,34:34}],55:[function(t,e,n){"use strict";var i=t(26),r=t(46),o=t(34),a=t(35);e.exports=function(t){var e={position:"left",ticks:{callback:a.formatters.linear}},n=t.LinearScaleBase.extend({determineDataLimits:function(){function t(t){return a?t.xAxisID===e.id:t.yAxisID===e.id}var e=this,n=e.options,i=e.chart,o=i.data.datasets,a=e.isHorizontal();e.min=null,e.max=null;var s=n.stacked;if(void 0===s&&r.each(o,function(e,n){if(!s){var r=i.getDatasetMeta(n);i.isDatasetVisible(n)&&t(r)&&void 0!==r.stack&&(s=!0)}}),n.stacked||s){var l={};r.each(o,function(o,a){var s=i.getDatasetMeta(a),u=[s.type,void 0===n.stacked&&void 0===s.stack?a:"",s.stack].join(".");void 0===l[u]&&(l[u]={positiveValues:[],negativeValues:[]});var c=l[u].positiveValues,h=l[u].negativeValues;i.isDatasetVisible(a)&&t(s)&&r.each(o.data,function(t,i){var r=+e.getRightValue(t);isNaN(r)||s.data[i].hidden||(c[i]=c[i]||0,h[i]=h[i]||0,n.relativePoints?c[i]=100:r<0?h[i]+=r:c[i]+=r)})}),r.each(l,function(t){var n=t.positiveValues.concat(t.negativeValues),i=r.min(n),o=r.max(n);e.min=null===e.min?i:Math.min(e.min,i),e.max=null===e.max?o:Math.max(e.max,o)})}else r.each(o,function(n,o){var a=i.getDatasetMeta(o);i.isDatasetVisible(o)&&t(a)&&r.each(n.data,function(t,n){var i=+e.getRightValue(t);isNaN(i)||a.data[n].hidden||(null===e.min?e.min=i:i<e.min&&(e.min=i),null===e.max?e.max=i:i>e.max&&(e.max=i))})});e.min=isFinite(e.min)&&!isNaN(e.min)?e.min:0,e.max=isFinite(e.max)&&!isNaN(e.max)?e.max:1,this.handleTickRangeOptions()},getTickLimit:function(){var t,e=this.options.ticks;if(this.isHorizontal())t=Math.min(e.maxTicksLimit?e.maxTicksLimit:11,Math.ceil(this.width/50));else{var n=r.valueOrDefault(e.fontSize,i.global.defaultFontSize);t=Math.min(e.maxTicksLimit?e.maxTicksLimit:11,Math.ceil(this.height/(2*n)))}return t},handleDirectionalChanges:function(){this.isHorizontal()||this.ticks.reverse()},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},getPixelForValue:function(t){var e=this.start,n=+this.getRightValue(t),i=this.end-e;return this.isHorizontal()?this.left+this.width/i*(n-e):this.bottom-this.height/i*(n-e)},getValueForPixel:function(t){var e=this.isHorizontal(),n=e?this.width:this.height,i=(e?t-this.left:this.bottom-t)/n;return this.start+(this.end-this.start)*i},getPixelForTick:function(t){return this.getPixelForValue(this.ticksAsNumbers[t])}});o.registerScaleType("linear",n,e)}},{26:26,34:34,35:35,46:46}],56:[function(t,e,n){"use strict";var i=t(46),r=t(33);e.exports=function(t){var e=i.noop;t.LinearScaleBase=r.extend({getRightValue:function(t){return"string"==typeof t?+t:r.prototype.getRightValue.call(this,t)},handleTickRangeOptions:function(){var t=this,e=t.options.ticks;if(e.beginAtZero){var n=i.sign(t.min),r=i.sign(t.max);n<0&&r<0?t.max=0:0<n&&0<r&&(t.min=0)}var o=void 0!==e.min||void 0!==e.suggestedMin,a=void 0!==e.max||void 0!==e.suggestedMax;void 0!==e.min?t.min=e.min:void 0!==e.suggestedMin&&(null===t.min?t.min=e.suggestedMin:t.min=Math.min(t.min,e.suggestedMin)),void 0!==e.max?t.max=e.max:void 0!==e.suggestedMax&&(null===t.max?t.max=e.suggestedMax:t.max=Math.max(t.max,e.suggestedMax)),o!==a&&t.min>=t.max&&(o?t.max=t.min+1:t.min=t.max-1),t.min===t.max&&(t.max++,e.beginAtZero||t.min--)},getTickLimit:e,handleDirectionalChanges:e,buildTicks:function(){var t=this,e=t.options.ticks,n=t.getTickLimit(),r={maxTicks:n=Math.max(2,n),min:e.min,max:e.max,precision:e.precision,stepSize:i.valueOrDefault(e.fixedStepSize,e.stepSize)},o=t.ticks=function(t,e){var n,r,o,a=[];if(t.stepSize&&0<t.stepSize)o=t.stepSize;else{var s=i.niceNum(e.max-e.min,!1);o=i.niceNum(s/(t.maxTicks-1),!0),void 0!==(r=t.precision)&&(n=Math.pow(10,r),o=Math.ceil(o*n)/n)}var l=Math.floor(e.min/o)*o,u=Math.ceil(e.max/o)*o;i.isNullOrUndef(t.min)||i.isNullOrUndef(t.max)||!t.stepSize||i.almostWhole((t.max-t.min)/t.stepSize,o/1e3)&&(l=t.min,u=t.max);var c=(u-l)/o;c=i.almostEquals(c,Math.round(c),o/1e3)?Math.round(c):Math.ceil(c),o<(r=1)&&(r=Math.pow(10,1-Math.floor(i.log10(o))),l=Math.round(l*r)/r,u=Math.round(u*r)/r),a.push(void 0!==t.min?t.min:l);for(var h=1;h<c;++h)a.push(Math.round((l+h*o)*r)/r);return a.push(void 0!==t.max?t.max:u),a}(r,t);t.handleDirectionalChanges(),t.max=i.max(o),t.min=i.min(o),e.reverse?(o.reverse(),t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max)},convertTicksToLabels:function(){this.ticksAsNumbers=this.ticks.slice(),this.zeroLineIndex=this.ticks.indexOf(0),r.prototype.convertTicksToLabels.call(this)}})}},{33:33,46:46}],57:[function(t,e,n){"use strict";var i=t(46),r=t(33),o=t(34),a=t(35);e.exports=function(t){var e={position:"left",ticks:{callback:a.formatters.logarithmic}},n=r.extend({determineDataLimits:function(){function t(t){return a?t.xAxisID===e.id:t.yAxisID===e.id}var e=this,n=e.options,r=e.chart,o=r.data.datasets,a=e.isHorizontal();e.min=null,e.max=null,e.minNotZero=null;var s=n.stacked;if(void 0===s&&i.each(o,function(e,n){if(!s){var i=r.getDatasetMeta(n);r.isDatasetVisible(n)&&t(i)&&void 0!==i.stack&&(s=!0)}}),n.stacked||s){var l={};i.each(o,function(o,a){var s=r.getDatasetMeta(a),u=[s.type,void 0===n.stacked&&void 0===s.stack?a:"",s.stack].join(".");r.isDatasetVisible(a)&&t(s)&&(void 0===l[u]&&(l[u]=[]),i.each(o.data,function(t,n){var i=l[u],r=+e.getRightValue(t);isNaN(r)||s.data[n].hidden||r<0||(i[n]=i[n]||0,i[n]+=r)}))}),i.each(l,function(t){if(0<t.length){var n=i.min(t),r=i.max(t);e.min=null===e.min?n:Math.min(e.min,n),e.max=null===e.max?r:Math.max(e.max,r)}})}else i.each(o,function(n,o){var a=r.getDatasetMeta(o);r.isDatasetVisible(o)&&t(a)&&i.each(n.data,function(t,n){var i=+e.getRightValue(t);isNaN(i)||a.data[n].hidden||i<0||(null===e.min?e.min=i:i<e.min&&(e.min=i),null===e.max?e.max=i:i>e.max&&(e.max=i),0!==i&&(null===e.minNotZero||i<e.minNotZero)&&(e.minNotZero=i))})});this.handleTickRangeOptions()},handleTickRangeOptions:function(){var t=this,e=t.options.ticks,n=i.valueOrDefault;t.min=n(e.min,t.min),t.max=n(e.max,t.max),t.min===t.max&&(0!==t.min&&null!==t.min?(t.min=Math.pow(10,Math.floor(i.log10(t.min))-1),t.max=Math.pow(10,Math.floor(i.log10(t.max))+1)):(t.min=1,t.max=10)),null===t.min&&(t.min=Math.pow(10,Math.floor(i.log10(t.max))-1)),null===t.max&&(t.max=0!==t.min?Math.pow(10,Math.floor(i.log10(t.min))+1):10),null===t.minNotZero&&(0<t.min?t.minNotZero=t.min:t.max<1?t.minNotZero=Math.pow(10,Math.floor(i.log10(t.max))):t.minNotZero=1)},buildTicks:function(){var t=this,e=t.options.ticks,n=!t.isHorizontal(),r={min:e.min,max:e.max},o=t.ticks=function(t,e){var n,r,o=[],a=i.valueOrDefault,s=a(t.min,Math.pow(10,Math.floor(i.log10(e.min)))),l=Math.floor(i.log10(e.max)),u=Math.ceil(e.max/Math.pow(10,l));0===s?(n=Math.floor(i.log10(e.minNotZero)),r=Math.floor(e.minNotZero/Math.pow(10,n)),o.push(s),s=r*Math.pow(10,n)):(n=Math.floor(i.log10(s)),r=Math.floor(s/Math.pow(10,n)));for(var c=n<0?Math.pow(10,Math.abs(n)):1;o.push(s),10==++r&&(r=1,c=0<=++n?1:c),s=Math.round(r*Math.pow(10,n)*c)/c,n<l||n===l&&r<u;);var h=a(t.max,s);return o.push(h),o}(r,t);t.max=i.max(o),t.min=i.min(o),e.reverse?(n=!n,t.start=t.max,t.end=t.min):(t.start=t.min,t.end=t.max),n&&o.reverse()},convertTicksToLabels:function(){this.tickValues=this.ticks.slice(),r.prototype.convertTicksToLabels.call(this)},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},getPixelForTick:function(t){return this.getPixelForValue(this.tickValues[t])},_getFirstTickValue:function(t){var e=Math.floor(i.log10(t));return Math.floor(t/Math.pow(10,e))*Math.pow(10,e)},getPixelForValue:function(e){var n,r,o,a,s,l=this,u=l.options.ticks.reverse,c=i.log10,h=l._getFirstTickValue(l.minNotZero),d=0;return e=+l.getRightValue(e),s=u?(o=l.end,a=l.start,-1):(o=l.start,a=l.end,1),r=l.isHorizontal()?(n=l.width,u?l.right:l.left):(n=l.height,s*=-1,u?l.top:l.bottom),e!==o&&(0===o&&(n-=d=i.getValueOrDefault(l.options.ticks.fontSize,t.defaults.global.defaultFontSize),o=h),0!==e&&(d+=n/(c(a)-c(o))*(c(e)-c(o))),r+=s*d),r},getValueForPixel:function(e){var n,r,o,a,s=this,l=s.options.ticks.reverse,u=i.log10,c=s._getFirstTickValue(s.minNotZero);if(o=l?(r=s.end,s.start):(r=s.start,s.end),(a=s.isHorizontal()?(n=s.width,l?s.right-e:e-s.left):(n=s.height,l?e-s.top:s.bottom-e))!==r){if(0===r){var h=i.getValueOrDefault(s.options.ticks.fontSize,t.defaults.global.defaultFontSize);a-=h,n-=h,r=c}a*=u(o)-u(r),a/=n,a=Math.pow(10,u(r)+a)}return a}});o.registerScaleType("logarithmic",n,e)}},{33:33,34:34,35:35,46:46}],58:[function(t,e,n){"use strict";var i=t(26),r=t(46),o=t(34),a=t(35);e.exports=function(t){function e(t){var e=t.options;return e.angleLines.display||e.pointLabels.display?t.chart.data.labels.length:0}function n(t){var e=t.options.pointLabels,n=r.valueOrDefault(e.fontSize,c.defaultFontSize),i=r.valueOrDefault(e.fontStyle,c.defaultFontStyle),o=r.valueOrDefault(e.fontFamily,c.defaultFontFamily);return{size:n,style:i,family:o,font:r.fontString(n,i,o)}}function s(t,e,n,i,r){return t===i||t===r?{start:e-n/2,end:e+n/2}:t<i||r<t?{start:e-n-5,end:e}:{start:e,end:e+n+5}}function l(t,e,n,i){if(r.isArray(e))for(var o=n.y,a=1.5*i,s=0;s<e.length;++s)t.fillText(e[s],n.x,o),o+=a;else t.fillText(e,n.x,n.y)}function u(t){return r.isNumber(t)?t:0}var c=i.global,h={display:!0,animate:!0,position:"chartArea",angleLines:{display:!0,color:"rgba(0, 0, 0, 0.1)",lineWidth:1},gridLines:{circular:!1},ticks:{showLabelBackdrop:!0,backdropColor:"rgba(255,255,255,0.75)",backdropPaddingY:2,backdropPaddingX:2,callback:a.formatters.linear},pointLabels:{display:!0,fontSize:10,callback:function(t){return t}}},d=t.LinearScaleBase.extend({setDimensions:function(){var t=this,e=t.options,n=e.ticks;t.width=t.maxWidth,t.height=t.maxHeight,t.xCenter=Math.round(t.width/2),t.yCenter=Math.round(t.height/2);var i=r.min([t.height,t.width]),o=r.valueOrDefault(n.fontSize,c.defaultFontSize);t.drawingArea=e.display?i/2-(o/2+n.backdropPaddingY):i/2},determineDataLimits:function(){var t=this,e=t.chart,n=Number.POSITIVE_INFINITY,i=Number.NEGATIVE_INFINITY;r.each(e.data.datasets,function(o,a){if(e.isDatasetVisible(a)){var s=e.getDatasetMeta(a);r.each(o.data,function(e,r){var o=+t.getRightValue(e);isNaN(o)||s.data[r].hidden||(n=Math.min(o,n),i=Math.max(o,i))})}}),t.min=n===Number.POSITIVE_INFINITY?0:n,t.max=i===Number.NEGATIVE_INFINITY?0:i,t.handleTickRangeOptions()},getTickLimit:function(){var t=this.options.ticks,e=r.valueOrDefault(t.fontSize,c.defaultFontSize);return Math.min(t.maxTicksLimit?t.maxTicksLimit:11,Math.ceil(this.drawingArea/(1.5*e)))},convertTicksToLabels:function(){t.LinearScaleBase.prototype.convertTicksToLabels.call(this),this.pointLabels=this.chart.data.labels.map(this.options.pointLabels.callback,this)},getLabelForIndex:function(t,e){return+this.getRightValue(this.chart.data.datasets[e].data[t])},fit:function(){var t,i;this.options.pointLabels.display?function(t){var i,o,a,l=n(t),u=Math.min(t.height/2,t.width/2),c={r:t.width,l:0,t:t.height,b:0},h={};t.ctx.font=l.font,t._pointLabelSizes=[];var d,f,p,g=e(t);for(i=0;i<g;i++){a=t.getPointPosition(i,u),d=t.ctx,f=l.size,p=t.pointLabels[i]||"",o=r.isArray(p)?{w:r.longestText(d,d.font,p),h:p.length*f+1.5*(p.length-1)*f}:{w:d.measureText(p).width,h:f},t._pointLabelSizes[i]=o;var m=t.getIndexAngle(i),v=r.toDegrees(m)%360,y=s(v,a.x,o.w,0,180),b=s(v,a.y,o.h,90,270);y.start<c.l&&(c.l=y.start,h.l=m),y.end>c.r&&(c.r=y.end,h.r=m),b.start<c.t&&(c.t=b.start,h.t=m),b.end>c.b&&(c.b=b.end,h.b=m)}t.setReductions(u,c,h)}(this):(t=this,i=Math.min(t.height/2,t.width/2),t.drawingArea=Math.round(i),t.setCenterPoint(0,0,0,0))},setReductions:function(t,e,n){var i=e.l/Math.sin(n.l),r=Math.max(e.r-this.width,0)/Math.sin(n.r),o=-e.t/Math.cos(n.t),a=-Math.max(e.b-this.height,0)/Math.cos(n.b);i=u(i),r=u(r),o=u(o),a=u(a),this.drawingArea=Math.min(Math.round(t-(i+r)/2),Math.round(t-(o+a)/2)),this.setCenterPoint(i,r,o,a)},setCenterPoint:function(t,e,n,i){var r=this,o=r.width-e-r.drawingArea,a=t+r.drawingArea,s=n+r.drawingArea,l=r.height-i-r.drawingArea;r.xCenter=Math.round((a+o)/2+r.left),r.yCenter=Math.round((s+l)/2+r.top)},getIndexAngle:function(t){return t*(2*Math.PI/e(this))+(this.chart.options&&this.chart.options.startAngle?this.chart.options.startAngle:0)*Math.PI*2/360},getDistanceFromCenterForValue:function(t){if(null===t)return 0;var e=this.drawingArea/(this.max-this.min);return this.options.ticks.reverse?(this.max-t)*e:(t-this.min)*e},getPointPosition:function(t,e){var n=this.getIndexAngle(t)-Math.PI/2;return{x:Math.round(Math.cos(n)*e)+this.xCenter,y:Math.round(Math.sin(n)*e)+this.yCenter}},getPointPositionForValue:function(t,e){return this.getPointPosition(t,this.getDistanceFromCenterForValue(e))},getBasePosition:function(){var t=this.min,e=this.max;return this.getPointPositionForValue(0,this.beginAtZero?0:t<0&&e<0?e:0<t&&0<e?t:0)},draw:function(){var t=this,i=t.options,o=i.gridLines,a=i.ticks,s=r.valueOrDefault;if(i.display){var u=t.ctx,h=this.getIndexAngle(0),d=s(a.fontSize,c.defaultFontSize),f=s(a.fontStyle,c.defaultFontStyle),p=s(a.fontFamily,c.defaultFontFamily),g=r.fontString(d,f,p);r.each(t.ticks,function(n,i){if(0<i||a.reverse){var l=t.getDistanceFromCenterForValue(t.ticksAsNumbers[i]);if(o.display&&0!==i&&function(t,n,i,o){var a=t.ctx;if(a.strokeStyle=r.valueAtIndexOrDefault(n.color,o-1),a.lineWidth=r.valueAtIndexOrDefault(n.lineWidth,o-1),t.options.gridLines.circular)a.beginPath(),a.arc(t.xCenter,t.yCenter,i,0,2*Math.PI),a.closePath(),a.stroke();else{var s=e(t);if(0===s)return;a.beginPath();var l=t.getPointPosition(0,i);a.moveTo(l.x,l.y);for(var u=1;u<s;u++)l=t.getPointPosition(u,i),a.lineTo(l.x,l.y);a.closePath(),a.stroke()}}(t,o,l,i),a.display){var f=s(a.fontColor,c.defaultFontColor);if(u.font=g,u.save(),u.translate(t.xCenter,t.yCenter),u.rotate(h),a.showLabelBackdrop){var p=u.measureText(n).width;u.fillStyle=a.backdropColor,u.fillRect(-p/2-a.backdropPaddingX,-l-d/2-a.backdropPaddingY,p+2*a.backdropPaddingX,d+2*a.backdropPaddingY)}u.textAlign="center",u.textBaseline="middle",u.fillStyle=f,u.fillText(n,0,-l),u.restore()}}}),(i.angleLines.display||i.pointLabels.display)&&function(t){var i=t.ctx,o=t.options,a=o.angleLines,s=o.pointLabels;i.lineWidth=a.lineWidth,i.strokeStyle=a.color;var u,h,d,f,p=t.getDistanceFromCenterForValue(o.ticks.reverse?t.min:t.max),g=n(t);i.textBaseline="top";for(var m=e(t)-1;0<=m;m--){if(a.display){var v=t.getPointPosition(m,p);i.beginPath(),i.moveTo(t.xCenter,t.yCenter),i.lineTo(v.x,v.y),i.stroke(),i.closePath()}if(s.display){var y=t.getPointPosition(m,p+5),b=r.valueAtIndexOrDefault(s.fontColor,m,c.defaultFontColor);i.font=g.font,i.fillStyle=b;var x=t.getIndexAngle(m),_=r.toDegrees(x);i.textAlign=0===(f=_)||180===f?"center":f<180?"left":"right",u=_,h=t._pointLabelSizes[m],d=y,90===u||270===u?d.y-=h.h/2:(270<u||u<90)&&(d.y-=h.h),l(i,t.pointLabels[m]||"",y,g.size)}}}(t)}}});o.registerScaleType("radialLinear",d,h)}},{26:26,34:34,35:35,46:46}],59:[function(t,e,n){"use strict";function i(t,e){return t-e}function r(t){var e,n,i,r={},o=[];for(e=0,n=t.length;e<n;++e)r[i=t[e]]||(r[i]=!0,o.push(i));return o}function o(t,e,n,i){var r=function(t,e,n){for(var i,r,o,a=0,s=t.length-1;0<=a&&a<=s;){if(r=t[(i=a+s>>1)-1]||null,o=t[i],!r)return{lo:null,hi:o};if(o[e]<n)a=i+1;else{if(!(r[e]>n))return{lo:r,hi:o};s=i-1}}return{lo:o,hi:null}}(t,e,n),o=r.lo?r.hi?r.lo:t[t.length-2]:t[0],a=r.lo?r.hi?r.hi:t[t.length-1]:t[1],s=a[e]-o[e],l=s?(n-o[e])/s:0,u=(a[i]-o[i])*l;return o[i]+u}function a(t,e){var n=e.parser,i=e.parser||e.format;return"function"==typeof n?n(t):"string"==typeof t&&"string"==typeof i?c(t,i):(t instanceof c||(t=c(t)),t.isValid()?t:"function"==typeof i?i(t):t)}function s(t,e){if(d.isNullOrUndef(t))return null;var n=e.options.time,i=a(e.getRightValue(t),n);return i.isValid()?(n.round&&i.startOf(n.round),i.valueOf()):null}function l(t){for(var e=y.indexOf(t)+1,n=y.length;e<n;++e)if(v[y[e]].common)return y[e]}function u(t,e,n,i){var r,o=i.time,a=o.unit||function(t,e,n,i){var r,o,a,s=y.length;for(r=y.indexOf(t);r<s-1;++r)if(a=(o=v[y[r]]).steps?o.steps[o.steps.length-1]:m,o.common&&Math.ceil((n-e)/(a*o.size))<=i)return y[r];return y[s-1]}(o.minUnit,t,e,n),s=l(a),u=d.valueOrDefault(o.stepSize,o.unitStepSize),h="week"===a&&o.isoWeekday,f=i.ticks.major.enabled,p=v[a],g=c(t),b=c(e),x=[];for(u||(u=function(t,e,n,i){var r,o,a,s=e-t,l=v[n],u=l.size,c=l.steps;if(!c)return Math.ceil(s/(i*u));for(r=0,o=c.length;r<o&&(a=c[r],!(Math.ceil(s/(u*a))<=i));++r);return a}(t,e,a,n)),h&&(g=g.isoWeekday(h),b=b.isoWeekday(h)),g=g.startOf(h?"day":a),(b=b.startOf(h?"day":a))<e&&b.add(1,a),r=c(g),f&&s&&!h&&!o.round&&(r.startOf(s),r.add(~~((g-r)/(p.size*u))*u,a));r<b;r.add(u,a))x.push(+r);return x.push(+r),x}var c=t(6);c="function"==typeof c?c:window.moment;var h=t(26),d=t(46),f=t(33),p=t(34),g=Number.MIN_SAFE_INTEGER||-9007199254740991,m=Number.MAX_SAFE_INTEGER||9007199254740991,v={millisecond:{common:!0,size:1,steps:[1,2,5,10,20,50,100,250,500]},second:{common:!0,size:1e3,steps:[1,2,5,10,15,30]},minute:{common:!0,size:6e4,steps:[1,2,5,10,15,30]},hour:{common:!0,size:36e5,steps:[1,2,3,6,12]},day:{common:!0,size:864e5,steps:[1,2,5]},week:{common:!1,size:6048e5,steps:[1,2,3,4]},month:{common:!0,size:2628e6,steps:[1,2,3]},quarter:{common:!1,size:7884e6,steps:[1,2,3,4]},year:{common:!0,size:3154e7}},y=Object.keys(v);e.exports=function(){var t=f.extend({initialize:function(){if(!c)throw new Error("Chart.js - Moment.js could not be found! You must include it before Chart.js to use the time scale. Download at https://momentjs.com");this.mergeTicksOptions(),f.prototype.initialize.call(this)},update:function(){var t=this.options;return t.time&&t.time.format&&console.warn("options.time.format is deprecated and replaced by options.time.parser."),f.prototype.update.apply(this,arguments)},getRightValue:function(t){return t&&void 0!==t.t&&(t=t.t),f.prototype.getRightValue.call(this,t)},determineDataLimits:function(){var t,e,n,o,a,l,u=this,h=u.chart,f=u.options.time,p=f.unit||"day",v=m,y=g,b=[],x=[],_=[];for(t=0,n=h.data.labels.length;t<n;++t)_.push(s(h.data.labels[t],u));for(t=0,n=(h.data.datasets||[]).length;t<n;++t)if(h.isDatasetVisible(t))if(a=h.data.datasets[t].data,d.isObject(a[0]))for(x[t]=[],e=0,o=a.length;e<o;++e)l=s(a[e],u),b.push(l),x[t][e]=l;else b.push.apply(b,_),x[t]=_.slice(0);else x[t]=[];_.length&&(_=r(_).sort(i),v=Math.min(v,_[0]),y=Math.max(y,_[_.length-1])),b.length&&(b=r(b).sort(i),v=Math.min(v,b[0]),y=Math.max(y,b[b.length-1])),v=s(f.min,u)||v,y=s(f.max,u)||y,v=v===m?+c().startOf(p):v,y=y===g?+c().endOf(p)+1:y,u.min=Math.min(v,y),u.max=Math.max(v+1,y),u._horizontal=u.isHorizontal(),u._table=[],u._timestamps={data:b,datasets:x,labels:_}},buildTicks:function(){var t,e,n,i,r,h,d,f,p,g,m,b,x=this,_=x.min,w=x.max,k=x.options,M=k.time,S=[],C=[];switch(k.ticks.source){case"data":S=x._timestamps.data;break;case"labels":S=x._timestamps.labels;break;case"auto":default:S=u(_,w,x.getLabelCapacity(_),k)}for("ticks"===k.bounds&&S.length&&(_=S[0],w=S[S.length-1]),_=s(M.min,x)||_,w=s(M.max,x)||w,t=0,e=S.length;t<e;++t)_<=(n=S[t])&&n<=w&&C.push(n);return x.min=_,x.max=w,x._unit=M.unit||function(t,e,n,i){var r,o,a=c.duration(c(i).diff(c(n)));for(r=y.length-1;r>=y.indexOf(e);r--)if(o=y[r],v[o].common&&a.as(o)>=t.length)return o;return y[e?y.indexOf(e):0]}(C,M.minUnit,x.min,x.max),x._majorUnit=l(x._unit),x._table=function(t,e,n,i){if("linear"===i||!t.length)return[{time:e,pos:0},{time:n,pos:1}];var r,o,a,s,l,u=[],c=[e];for(r=0,o=t.length;r<o;++r)e<(s=t[r])&&s<n&&c.push(s);for(c.push(n),r=0,o=c.length;r<o;++r)l=c[r+1],a=c[r-1],s=c[r],void 0!==a&&void 0!==l&&Math.round((l+a)/2)===s||u.push({time:s,pos:r/(o-1)});return u}(x._timestamps.data,_,w,k.distribution),x._offsets=(i=x._table,r=C,h=_,d=w,b=m=0,(f=k).offset&&r.length&&(f.time.min||(p=1<r.length?r[1]:d,g=r[0],m=(o(i,"time",p,"pos")-o(i,"time",g,"pos"))/2),f.time.max||(p=r[r.length-1],g=1<r.length?r[r.length-2]:h,b=(o(i,"time",p,"pos")-o(i,"time",g,"pos"))/2)),{left:m,right:b}),x._labelFormat=function(t,e){var n,i,r,o=t.length;for(n=0;n<o;n++){if(0!==(i=a(t[n],e)).millisecond())return"MMM D, YYYY h:mm:ss.SSS a";0===i.second()&&0===i.minute()&&0===i.hour()||(r=!0)}return r?"MMM D, YYYY h:mm:ss a":"MMM D, YYYY"}(x._timestamps.data,M),function(t,e){var n,i,r,o,a=[];for(n=0,i=t.length;n<i;++n)r=t[n],o=!!e&&r===+c(r).startOf(e),a.push({value:r,major:o});return a}(C,x._majorUnit)},getLabelForIndex:function(t,e){var n=this.chart.data,i=this.options.time,r=n.labels&&t<n.labels.length?n.labels[t]:"",o=n.datasets[e].data[t];return d.isObject(o)&&(r=this.getRightValue(o)),i.tooltipFormat?a(r,i).format(i.tooltipFormat):"string"==typeof r?r:a(r,i).format(this._labelFormat)},tickFormatFunction:function(t,e,n,i){var r=this.options,o=t.valueOf(),a=r.time.displayFormats,s=a[this._unit],l=this._majorUnit,u=a[l],c=t.clone().startOf(l).valueOf(),h=r.ticks.major,f=h.enabled&&l&&u&&o===c,p=t.format(i||(f?u:s)),g=f?h:r.ticks.minor,m=d.valueOrDefault(g.callback,g.userCallback);return m?m(p,e,n):p},convertTicksToLabels:function(t){var e,n,i=[];for(e=0,n=t.length;e<n;++e)i.push(this.tickFormatFunction(c(t[e].value),e,t));return i},getPixelForOffset:function(t){var e=this,n=e._horizontal?e.width:e.height,i=e._horizontal?e.left:e.top,r=o(e._table,"time",t,"pos");return i+n*(e._offsets.left+r)/(e._offsets.left+1+e._offsets.right)},getPixelForValue:function(t,e,n){var i=null;if(void 0!==e&&void 0!==n&&(i=this._timestamps.datasets[n][e]),null===i&&(i=s(t,this)),null!==i)return this.getPixelForOffset(i)},getPixelForTick:function(t){var e=this.getTicks();return 0<=t&&t<e.length?this.getPixelForOffset(e[t].value):null},getValueForPixel:function(t){var e=this,n=e._horizontal?e.width:e.height,i=e._horizontal?e.left:e.top,r=(n?(t-i)/n:0)*(e._offsets.left+1+e._offsets.left)-e._offsets.right,a=o(e._table,"pos",r,"time");return c(a)},getLabelWidth:function(t){var e=this.options.ticks,n=this.ctx.measureText(t).width,i=d.toRadians(e.maxRotation),r=Math.cos(i),o=Math.sin(i);return n*r+d.valueOrDefault(e.fontSize,h.global.defaultFontSize)*o},getLabelCapacity:function(t){var e=this.options.time.displayFormats.millisecond,n=this.tickFormatFunction(c(t),0,[],e),i=this.getLabelWidth(n),r=this.isHorizontal()?this.width:this.height,o=Math.floor(r/i);return 0<o?o:1}});p.registerScaleType("time",t,{position:"bottom",distribution:"linear",bounds:"data",time:{parser:!1,format:!1,unit:!1,round:!1,displayFormat:!1,isoWeekday:!1,minUnit:"millisecond",displayFormats:{millisecond:"h:mm:ss.SSS a",second:"h:mm:ss a",minute:"h:mm a",hour:"hA",day:"MMM D",week:"ll",month:"MMM YYYY",quarter:"[Q]Q - YYYY",year:"YYYY"}},ticks:{autoSkip:!1,source:"auto",major:{enabled:!1}}})}},{26:26,33:33,34:34,46:46,6:6}]},{},[7])(7)}),$(document).on("click",".switcher",function(){}),$(document).on("click",".switcher_service",function(){$(".switcher_service").removeClass("switcher_active"),$(this).toggleClass("switcher_active"),$(".switcher_service").parent().parent().parent().removeClass("services-item_active"),$(this).parent().parent().parent().toggleClass("services-item_active")}),$(document).on("click",".switcher_extra-service",function(){$(this).toggleClass("switcher_active"),$(this).parent().parent().parent().toggleClass("services-item_active")}),$(document).on("click",".content-hover",function(){popupclickclosefunction()}),$(document).on("click",".close-pop-up-b",function(){popupclickclosefunction()}),$(document).on("click","#info",function(){popupclickfunction(),$(".info").fadeIn()}),$(document).on("mouseover","a",function(){}),$(document).on("click",".index-heading__adventages-click",function(){return $(".index-heading__adventages-body_active").next().hasClass("index-heading__adventages-click")?($(".index-heading__adventages-body").removeClass("index-heading__adventages-body_active"),$(".index-heading__adventages-body").first().addClass("index-heading__adventages-body_active"),!1):void $(".index-heading__adventages-body_active").removeClass("index-heading__adventages-body_active").next().addClass("index-heading__adventages-body_active")}),function(t){for(var e=function(t,e,n){return t[0]*e+t[1]*n},n=[[1,1,0],[-1,1,0],[1,-1,0],[-1,-1,0],[1,0,1],[-1,0,1],[1,0,-1],[-1,0,-1],[0,1,1],[0,-1,1],[0,1,-1],[0,-1,-1]],i=[],r=0;r<256;r++)i[r]=Math.floor(256*Math.random());for(var o=[],r=0;r<512;r++)o[r]=i[255&r];t.noise=function(t,i){var r,a,s,l,u,c=.5*(Math.sqrt(3)-1),h=(t+i)*c,d=Math.floor(t+h),f=Math.floor(i+h),p=(3-Math.sqrt(3))/6,g=(d+f)*p,m=d-g,v=f-g,y=t-m,b=i-v;y>b?(l=1,u=0):(l=0,u=1);var x=y-l+p,_=b-u+p,w=y-1+2*p,k=b-1+2*p,M=255&d,S=255&f,C=o[M+o[S]]%12,D=o[M+l+o[S+u]]%12,T=o[M+1+o[S+1]]%12,P=.5-y*y-b*b;P<0?r=0:(P*=P,r=P*P*e(n[C],y,b));var A=.5-x*x-_*_;A<0?a=0:(A*=A,a=A*A*e(n[D],x,_));var O=.5-w*w-k*k;return O<0?s=0:(O*=O,s=O*O*e(n[T],w,k)),70*(r+a+s)}}(this),$(document).ready(function(){});var pages={indexpage:["/index.html","/"],services:"/services.html",servicespages:["/services-landing-page.html","/services-e-shop.html","/services-visit-card-site.html","/services-corporative-site.html","/services-support.html"],contextadvpage:"/services-context.html",advpage:"/services-advertising.html"};$(document).ready(function(){function t(t){popupclickclosefunction();var e=t;$(".content-ajax-wrapper").load(e+" .content-ajax",function(t){fullpageload(),0!=$(document).find("#index").length&&$("#index").fadeIn(),window.scrollBy(0,-99999),document.title=t.split("<title>")[1].split("</title")[0]})}fullpageload(),0!=$(document).find("#index").length&&setTimeout(function(){$("#index").fadeIn()},"1000");var e="state"in window.history&&null!==window.history.state,n=location.href;$(".content-ajax-wrapper"),$(document).on("click","a",function(){var e=$(this).attr("href");return history.pushState({page:e},"Loading...",e),document.title="Loading...",t(e),!1}),$(window).bind("popstate",function(i){var r=!e&&location.href==n;e=!0,r||(console.log("Popstate"),t(location.pathname))})}),function(t){function e(t){var e="";"lowerLetter"==t?e="abcdefghijklmnopqrstuvwxyz0123456789":"upperLetter"==t?e="ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789":"symbol"==t&&(e=",.?/\\(^)![]{}*&^%$#'\"");var n=e.split("");return n[Math.floor(Math.random()*n.length)]}t.fn.shuffleLetters=function(n){var i=t.extend({step:8,fps:25,text:"",callback:function(){}},n);return this.each(function(){var n=t(this),r="";if(n.data("animated"))return!0;n.data("animated",!0),r=i.text?i.text.split(""):n.text().split("");for(var o=[],a=[],s=0;s<r.length;s++){var l=r[s];" "!=l?(/[a-z]/.test(l)?o[s]="lowerLetter":/[A-Z]/.test(l)?o[s]="upperLetter":o[s]="symbol",a.push(s)):o[s]="space"}n.html(""),function u(t){var s,l=a.length,c=r.slice(0);if(t>l)return n.data("animated",!1),void i.callback(n);for(s=Math.max(t,0);s<l;s++)s<t+i.step?c[a[s]]=e(o[a[s]]):c[a[s]]="";n.text(c.join("")),setTimeout(function(){u(t+1)},1e3/i.fps)}(-i.step)})}}($),$(document).ready(function(){$("body").append('<div class="helper close">      <div class="helper__person">        <img class="helper__person-img" src="imgsvg/hipsta.svg" alt="Bob">      </div>      <div class="helper__dialog">          <div class="helper__said">          </div>          <div class="helper__answer">            <input class="helper__answer-item input helper__input" id="helper-input-name" class="input" type="text" placeholder="Enter your name">            <span class="helper__answer-item helper__button" id="helper-button"><img src="imgsvg/plane.svg" alt="Plane"></span>          </div>      </div>      <div class="helper__toggle">        <div class="helper__toggle-inner">        </div>      </div>    </div>     <img class="helper__open" src="imgsvg/hipsta-head.svg" alt="Bob">          <img class="helper__close close" src="imgsvg/close.svg" alt="Close">    ');var t=getCookie("wasvisit");""==t&&(document.cookie="wasvisit=Guest; expires=1/1/2019 00:00:00")});var name="",bobsayHi=function(){var t=getCookie("wasvisit");"Guest"==t?(sayBob("Hi, my name is Rendal. I have no brains, but only a few algorithms, but I'll be happy to help, what's your name?"),$(".helper__answer").empty().append('<input class="helper__answer-item input helper__input" id="helper-input-name" class="input" type="text" placeholder="Enter your name">    <span onclick="nextStepBob(1)" class="helper__answer-item helper__button" id="helper-button"><img src="imgsvg/plane.svg" alt="Plane"></span>    ')):(sayBob("Oh, "+t+". You need my help?"),$(".helper__answer").empty().append('    <div onclick="nextStepBob(6)" class="helper__answer-item input helper__button" id="helper-input-name" class="input" type="text" >There is mistake in my name</div>    <div onclick="nextStepBob(2)" class="helper__answer-item input helper__button" id="helper-input-name" class="input" type="text" >Place order</div>    '))},bobChangeName=function(){sayBob("I am so sorry, how can i call you?"),$(".helper__answer").empty().append('<input class="helper__answer-item input helper__input" id="helper-input-name" class="input" type="text" placeholder="Enter your name">    <span onclick="nextStepBob(1)" class="helper__answer-item helper__button" id="helper-button"><img src="imgsvg/plane.svg" alt="Plane"></span>    ')},bobCheckName=function(){var t=($(".helper__said").text(),$("#helper-input-name").val());return"Egor Karpachev"==t?(sayBob("Sorry, i do not work with Petuh"),!1):(document.cookie="wasvisit="+t+"; expires=1/1/2019 00:00:00",sayBob("Nice to meet you. "+t+". Place an order to contact my owner."),$(".helper__answer").empty().append('  <div onclick="nextStepBob(2)" class="helper__answer-item input helper__button" id="helper-input-name" class="input" type="text" >Place order</div>  '),void 0)},bobOpenform=function(){$(".helper__said").text(),$("#helper-input-name").val(),sayBob("Ok, now i need your contact details: Email or Phone number."),$(".helper__answer").empty().append('<input class="helper__answer-item-contacts helper__answer-item input helper__input" id="helper-input-name" class="input" type="text" placeholder="Email or phone number">  <span onclick="nextStepBob(5)" class="helper__answer-item helper__button" id="helper-button"><img src="imgsvg/plane.svg" alt="Plane"></span>  ')},bobSendEnquiry=function(){function t(t){var e=/^[\w-\.]+@[\w-]+\.[a-z]{2,4}$/i,n=t,i=e.test(n);return sayBob("Sorry, I need valid information to send."),i}function e(t){t=t.replace("+","").replace("(","").replace(")","");var e=/^\d[\d\(\)\ -]{4,14}\d$/,n=t,i=e.test(n);return sayBob("Sorry, I need valid information to send."),i}var n=$(".helper__answer-item-contacts").val();return(0!=t(n)||0!=e(n))&&(sayBob("Thanks, now you will get all details in 10 minutes."),
void $(".helper__answer").empty().append('  <span onclick="closeBob()" class="helper__answer-item helper__button" id="helper-button">Thanks</span>  '))},bobTellMeMore=function(){$(".helper__said").text(),$("#helper-input-name").val(),sayBob("Выбирай что тебе интересно, но ты также можешь пользоваться обычной навигацией - сверху"),$(".helper__answer").empty().append('<span onclick="nextStepBob(4)" class="helper__answer-item helper__button" id="helper-button">Узнать о создании сайтов</span>    <span onclick="nextStepBob(5)" class="helper__answer-item helper__button" id="helper-button">Узнать о продвижении</span>    <span onclick="nextStepBob(6)" class="helper__answer-item helper__button" id="helper-button">Узнать о поддержке</span>  ')},bobPhoneOrEmail=function(){$(".helper__said").text(),$("#helper-input-name").val(),sayBob("Azazaza"),$(".helper__answer").empty().append('<span onclick="nextStepBob(4)" class="helper__answer-item helper__button" id="helper-button">Узнать о создании сайтов</span>    <span onclick="nextStepBob(5)" class="helper__answer-item helper__button" id="helper-button">Узнать о продвижении</span>    <span onclick="nextStepBob(6)" class="helper__answer-item helper__button" id="helper-button">Узнать о поддержке</span>  ')};bob=[[bobsayHi],[bobCheckName],[bobOpenform],[bobTellMeMore],[bobPhoneOrEmail],[bobSendEnquiry],[bobChangeName]],$(document).on("click",".helper__close",function(){closeBob()}),$(document).ready(function(){});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1haW4uanMiXSwibmFtZXMiOlsicG9wdXBjbGlja2Z1bmN0aW9uIiwiJCIsImhhc0NsYXNzIiwic2xpZGVEb3duIiwidG9wc2Nyb2xscG9wdXAiLCJkb2N1bWVudCIsInNjcm9sbFRvcCIsImFkZENsYXNzIiwiY3NzIiwiZmFkZUluIiwicG9wdXBjbGlja2Nsb3NlZnVuY3Rpb24iLCJzbGlkZVVwIiwicmVtb3ZlQ2xhc3MiLCJmYWRlT3V0IiwiY2hpbGRyZW4iLCJzZXRUaW1lb3V0Iiwic2hvd01lbnUiLCJvcGVuUXVlc3Rpb24iLCJvcGVuT3JkZXIiLCJjaGVja2FqYXhwYWdlIiwiY2hlY2tJdCIsInBhZ2VuYW1laXRlbXNrZXkiLCJ0Iiwid2luZG93IiwibG9jYXRpb24iLCJwYXRobmFtZSIsImNoZWNrIiwiaSIsImxlbmd0aCIsImFyZ3VtZW50cyIsImZ1bGxwYWdlbG9hZCIsInBhZ2VzIiwiaW5kZXhwYWdlIiwic2VydmljZXMiLCJvd2xDYXJvdXNlbCIsIm1hcmdpbiIsInJlc3BvbnNpdmVDbGFzcyIsInJlc3BvbnNpdmUiLCIwIiwiaXRlbXMiLCJuYXYiLCJsb29wIiwiNzY4IiwiY29udGV4dGFkdnBhZ2UiLCJjdHgiLCJnZXRFbGVtZW50QnlJZCIsImdldENvbnRleHQiLCJDaGFydCIsInR5cGUiLCJkYXRhIiwibGFiZWxzIiwiZGF0YXNldHMiLCJib3JkZXJDb2xvciIsImJvcmRlcldpZHRoIiwiYmFja2dyb3VuZENvbG9yIiwib3B0aW9ucyIsInRpdGxlIiwiZGlzcGxheSIsImFkdnBhZ2UiLCJzYXlCb2IiLCJhIiwicmVtb3ZlIiwiYXBwZW5kIiwiZW1wdHkiLCJzaHVmZmxlTGV0dGVycyIsInRleHQiLCJuZXh0U3RlcEJvYiIsImlkYm9ic3RlcCIsInNlbGVjdGVkQm9iIiwiYm9iIiwiYm9iQWN0aW9uIiwiY2xvc2VCb2IiLCJ0b2dnbGVDbGFzcyIsInRoaXMiLCJnZXRDb29raWUiLCJjbmFtZSIsIm5hbWUiLCJjYSIsImNvb2tpZSIsInNwbGl0IiwiYyIsImNoYXJBdCIsInN1YnN0cmluZyIsImluZGV4T2YiLCJnbG9iYWwiLCJmYWN0b3J5IiwibW9kdWxlIiwiZXhwb3J0cyIsInciLCJFcnJvciIsIm5vR2xvYmFsIiwiRE9NRXZhbCIsImNvZGUiLCJkb2MiLCJub2RlIiwic2NyaXB0IiwiY3JlYXRlRWxlbWVudCIsInByZXNlcnZlZFNjcmlwdEF0dHJpYnV0ZXMiLCJoZWFkIiwiYXBwZW5kQ2hpbGQiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJ0b1R5cGUiLCJvYmoiLCJjbGFzczJ0eXBlIiwidG9TdHJpbmciLCJjYWxsIiwiaXNBcnJheUxpa2UiLCJpc0Z1bmN0aW9uIiwiaXNXaW5kb3ciLCJub2RlTmFtZSIsImVsZW0iLCJ0b0xvd2VyQ2FzZSIsIndpbm5vdyIsImVsZW1lbnRzIiwicXVhbGlmaWVyIiwibm90IiwialF1ZXJ5IiwiZ3JlcCIsIm5vZGVUeXBlIiwiZmlsdGVyIiwic2libGluZyIsImN1ciIsImRpciIsImNyZWF0ZU9wdGlvbnMiLCJvYmplY3QiLCJlYWNoIiwibWF0Y2giLCJybm90aHRtbHdoaXRlIiwiXyIsImZsYWciLCJJZGVudGl0eSIsInYiLCJUaHJvd2VyIiwiZXgiLCJhZG9wdFZhbHVlIiwidmFsdWUiLCJyZXNvbHZlIiwicmVqZWN0Iiwibm9WYWx1ZSIsIm1ldGhvZCIsInByb21pc2UiLCJkb25lIiwiZmFpbCIsInRoZW4iLCJhcHBseSIsInVuZGVmaW5lZCIsInNsaWNlIiwiY29tcGxldGVkIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInJlYWR5IiwiZmNhbWVsQ2FzZSIsImFsbCIsImxldHRlciIsInRvVXBwZXJDYXNlIiwiY2FtZWxDYXNlIiwic3RyaW5nIiwicmVwbGFjZSIsInJtc1ByZWZpeCIsInJkYXNoQWxwaGEiLCJEYXRhIiwiZXhwYW5kbyIsInVpZCIsImdldERhdGEiLCJyYnJhY2UiLCJ0ZXN0IiwiSlNPTiIsInBhcnNlIiwiZGF0YUF0dHIiLCJrZXkiLCJybXVsdGlEYXNoIiwiZ2V0QXR0cmlidXRlIiwiZSIsImRhdGFVc2VyIiwic2V0IiwiYWRqdXN0Q1NTIiwicHJvcCIsInZhbHVlUGFydHMiLCJ0d2VlbiIsImFkanVzdGVkIiwic2NhbGUiLCJtYXhJdGVyYXRpb25zIiwiY3VycmVudFZhbHVlIiwiaW5pdGlhbCIsInVuaXQiLCJjc3NOdW1iZXIiLCJpbml0aWFsSW5Vbml0IiwicmNzc051bSIsImV4ZWMiLCJzdHlsZSIsInN0YXJ0IiwiZW5kIiwiZ2V0RGVmYXVsdERpc3BsYXkiLCJ0ZW1wIiwib3duZXJEb2N1bWVudCIsImRlZmF1bHREaXNwbGF5TWFwIiwiYm9keSIsInNob3dIaWRlIiwic2hvdyIsInZhbHVlcyIsImluZGV4IiwiZGF0YVByaXYiLCJnZXQiLCJpc0hpZGRlbldpdGhpblRyZWUiLCJnZXRBbGwiLCJjb250ZXh0IiwidGFnIiwicmV0IiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJxdWVyeVNlbGVjdG9yQWxsIiwibWVyZ2UiLCJzZXRHbG9iYWxFdmFsIiwiZWxlbXMiLCJyZWZFbGVtZW50cyIsImwiLCJidWlsZEZyYWdtZW50Iiwic2NyaXB0cyIsInNlbGVjdGlvbiIsImlnbm9yZWQiLCJ0bXAiLCJ3cmFwIiwiY29udGFpbnMiLCJqIiwiZnJhZ21lbnQiLCJjcmVhdGVEb2N1bWVudEZyYWdtZW50Iiwibm9kZXMiLCJyaHRtbCIsInJ0YWdOYW1lIiwid3JhcE1hcCIsIl9kZWZhdWx0IiwiaW5uZXJIVE1MIiwiaHRtbFByZWZpbHRlciIsImxhc3RDaGlsZCIsImNoaWxkTm9kZXMiLCJmaXJzdENoaWxkIiwidGV4dENvbnRlbnQiLCJwdXNoIiwiY3JlYXRlVGV4dE5vZGUiLCJpbkFycmF5IiwicnNjcmlwdFR5cGUiLCJyZXR1cm5UcnVlIiwicmV0dXJuRmFsc2UiLCJzYWZlQWN0aXZlRWxlbWVudCIsImFjdGl2ZUVsZW1lbnQiLCJlcnIiLCJvbiIsInR5cGVzIiwic2VsZWN0b3IiLCJmbiIsIm9uZSIsIm9yaWdGbiIsImV2ZW50Iiwib2ZmIiwiZ3VpZCIsImFkZCIsIm1hbmlwdWxhdGlvblRhcmdldCIsImNvbnRlbnQiLCJkaXNhYmxlU2NyaXB0IiwicmVzdG9yZVNjcmlwdCIsInJlbW92ZUF0dHJpYnV0ZSIsImNsb25lQ29weUV2ZW50Iiwic3JjIiwiZGVzdCIsInBkYXRhT2xkIiwicGRhdGFDdXIiLCJ1ZGF0YU9sZCIsInVkYXRhQ3VyIiwiZXZlbnRzIiwiaGFzRGF0YSIsImFjY2VzcyIsImhhbmRsZSIsImV4dGVuZCIsImZpeElucHV0IiwicmNoZWNrYWJsZVR5cGUiLCJjaGVja2VkIiwiZGVmYXVsdFZhbHVlIiwiZG9tTWFuaXAiLCJjb2xsZWN0aW9uIiwiYXJncyIsImNhbGxiYWNrIiwiY29uY2F0IiwiZmlyc3QiLCJoYXNTY3JpcHRzIiwiaU5vQ2xvbmUiLCJ2YWx1ZUlzRnVuY3Rpb24iLCJzdXBwb3J0IiwiY2hlY2tDbG9uZSIsInJjaGVja2VkIiwic2VsZiIsImVxIiwiaHRtbCIsIm1hcCIsImNsb25lIiwiX2V2YWxVcmwiLCJyY2xlYW5TY3JpcHQiLCJrZWVwRGF0YSIsImNsZWFuRGF0YSIsImN1ckNTUyIsImNvbXB1dGVkIiwid2lkdGgiLCJtaW5XaWR0aCIsIm1heFdpZHRoIiwiZ2V0U3R5bGVzIiwiZ2V0UHJvcGVydHlWYWx1ZSIsInBpeGVsQm94U3R5bGVzIiwicm51bW5vbnB4IiwicmJveFN0eWxlIiwiYWRkR2V0SG9va0lmIiwiY29uZGl0aW9uRm4iLCJob29rRm4iLCJ2ZW5kb3JQcm9wTmFtZSIsImVtcHR5U3R5bGUiLCJjYXBOYW1lIiwiY3NzUHJlZml4ZXMiLCJmaW5hbFByb3BOYW1lIiwiY3NzUHJvcHMiLCJzZXRQb3NpdGl2ZU51bWJlciIsInN1YnRyYWN0IiwibWF0Y2hlcyIsIk1hdGgiLCJtYXgiLCJib3hNb2RlbEFkanVzdG1lbnQiLCJkaW1lbnNpb24iLCJib3giLCJpc0JvcmRlckJveCIsInN0eWxlcyIsImNvbXB1dGVkVmFsIiwiZXh0cmEiLCJkZWx0YSIsImNzc0V4cGFuZCIsImNlaWwiLCJnZXRXaWR0aE9ySGVpZ2h0IiwidmFsIiwidmFsdWVJc0JvcmRlckJveCIsImJveFNpemluZ1JlbGlhYmxlIiwicGFyc2VGbG9hdCIsIlR3ZWVuIiwiZWFzaW5nIiwicHJvdG90eXBlIiwiaW5pdCIsInNjaGVkdWxlIiwiaW5Qcm9ncmVzcyIsImhpZGRlbiIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImZ4IiwiaW50ZXJ2YWwiLCJ0aWNrIiwiY3JlYXRlRnhOb3ciLCJmeE5vdyIsIkRhdGUiLCJub3ciLCJnZW5GeCIsImluY2x1ZGVXaWR0aCIsIndoaWNoIiwiYXR0cnMiLCJoZWlnaHQiLCJvcGFjaXR5IiwiY3JlYXRlVHdlZW4iLCJhbmltYXRpb24iLCJBbmltYXRpb24iLCJ0d2VlbmVycyIsImRlZmF1bHRQcmVmaWx0ZXIiLCJwcm9wcyIsIm9wdHMiLCJ0b2dnbGUiLCJob29rcyIsIm9sZGZpcmUiLCJwcm9wVHdlZW4iLCJyZXN0b3JlRGlzcGxheSIsImlzQm94IiwiYW5pbSIsIm9yaWciLCJkYXRhU2hvdyIsInF1ZXVlIiwiX3F1ZXVlSG9va3MiLCJ1bnF1ZXVlZCIsImZpcmUiLCJhbHdheXMiLCJyZnh0eXBlcyIsImlzRW1wdHlPYmplY3QiLCJvdmVyZmxvdyIsIm92ZXJmbG93WCIsIm92ZXJmbG93WSIsInByb3BGaWx0ZXIiLCJzcGVjaWFsRWFzaW5nIiwiQXJyYXkiLCJpc0FycmF5IiwiY3NzSG9va3MiLCJleHBhbmQiLCJwcm9wZXJ0aWVzIiwicmVzdWx0Iiwic3RvcHBlZCIsInByZWZpbHRlcnMiLCJkZWZlcnJlZCIsIkRlZmVycmVkIiwiY3VycmVudFRpbWUiLCJyZW1haW5pbmciLCJzdGFydFRpbWUiLCJkdXJhdGlvbiIsInBlcmNlbnQiLCJ0d2VlbnMiLCJydW4iLCJub3RpZnlXaXRoIiwicmVzb2x2ZVdpdGgiLCJvcmlnaW5hbFByb3BlcnRpZXMiLCJvcmlnaW5hbE9wdGlvbnMiLCJzdG9wIiwiZ290b0VuZCIsInJlamVjdFdpdGgiLCJiaW5kIiwicHJvZ3Jlc3MiLCJjb21wbGV0ZSIsInRpbWVyIiwic3RyaXBBbmRDb2xsYXBzZSIsInRva2VucyIsImpvaW4iLCJnZXRDbGFzcyIsImNsYXNzZXNUb0FycmF5IiwiYnVpbGRQYXJhbXMiLCJwcmVmaXgiLCJ0cmFkaXRpb25hbCIsInJicmFja2V0IiwiYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzIiwic3RydWN0dXJlIiwiZGF0YVR5cGVFeHByZXNzaW9uIiwiZnVuYyIsImRhdGFUeXBlIiwiZGF0YVR5cGVzIiwidW5zaGlmdCIsImluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzIiwianFYSFIiLCJpbnNwZWN0Iiwic2VsZWN0ZWQiLCJpbnNwZWN0ZWQiLCJwcmVmaWx0ZXJPckZhY3RvcnkiLCJkYXRhVHlwZU9yVHJhbnNwb3J0Iiwic2Vla2luZ1RyYW5zcG9ydCIsInRyYW5zcG9ydHMiLCJhamF4RXh0ZW5kIiwidGFyZ2V0IiwiZGVlcCIsImZsYXRPcHRpb25zIiwiYWpheFNldHRpbmdzIiwiYWpheEhhbmRsZVJlc3BvbnNlcyIsInMiLCJyZXNwb25zZXMiLCJjdCIsImZpbmFsRGF0YVR5cGUiLCJmaXJzdERhdGFUeXBlIiwiY29udGVudHMiLCJzaGlmdCIsIm1pbWVUeXBlIiwiZ2V0UmVzcG9uc2VIZWFkZXIiLCJjb252ZXJ0ZXJzIiwiYWpheENvbnZlcnQiLCJyZXNwb25zZSIsImlzU3VjY2VzcyIsImNvbnYyIiwiY3VycmVudCIsImNvbnYiLCJwcmV2IiwicmVzcG9uc2VGaWVsZHMiLCJkYXRhRmlsdGVyIiwic3RhdGUiLCJlcnJvciIsImFyciIsImdldFByb3RvIiwiT2JqZWN0IiwiZ2V0UHJvdG90eXBlT2YiLCJoYXNPd24iLCJoYXNPd25Qcm9wZXJ0eSIsImZuVG9TdHJpbmciLCJPYmplY3RGdW5jdGlvblN0cmluZyIsIm5vTW9kdWxlIiwidmVyc2lvbiIsInJ0cmltIiwianF1ZXJ5IiwiY29uc3RydWN0b3IiLCJ0b0FycmF5IiwibnVtIiwicHVzaFN0YWNrIiwicHJldk9iamVjdCIsImxhc3QiLCJsZW4iLCJzb3J0Iiwic3BsaWNlIiwiY29weSIsImNvcHlJc0FycmF5IiwiaXNQbGFpbk9iamVjdCIsInJhbmRvbSIsImlzUmVhZHkiLCJtc2ciLCJub29wIiwicHJvdG8iLCJDdG9yIiwiZ2xvYmFsRXZhbCIsInRyaW0iLCJtYWtlQXJyYXkiLCJyZXN1bHRzIiwic2Vjb25kIiwiaW52ZXJ0IiwiY2FsbGJhY2tJbnZlcnNlIiwiY2FsbGJhY2tFeHBlY3QiLCJhcmciLCJTeW1ib2wiLCJpdGVyYXRvciIsIlNpenpsZSIsInNlZWQiLCJtIiwibmlkIiwiZ3JvdXBzIiwibmV3U2VsZWN0b3IiLCJuZXdDb250ZXh0IiwicHJlZmVycmVkRG9jIiwic2V0RG9jdW1lbnQiLCJkb2N1bWVudElzSFRNTCIsInJxdWlja0V4cHIiLCJpZCIsImdldEVsZW1lbnRzQnlDbGFzc05hbWUiLCJxc2EiLCJjb21waWxlckNhY2hlIiwicmJ1Z2d5UVNBIiwicmNzc2VzY2FwZSIsImZjc3Nlc2NhcGUiLCJzZXRBdHRyaWJ1dGUiLCJ0b2tlbml6ZSIsInRvU2VsZWN0b3IiLCJyc2libGluZyIsInRlc3RDb250ZXh0IiwicXNhRXJyb3IiLCJzZWxlY3QiLCJjcmVhdGVDYWNoZSIsImNhY2hlIiwia2V5cyIsIkV4cHIiLCJjYWNoZUxlbmd0aCIsIm1hcmtGdW5jdGlvbiIsImFzc2VydCIsImVsIiwiYWRkSGFuZGxlIiwiaGFuZGxlciIsImF0dHJIYW5kbGUiLCJzaWJsaW5nQ2hlY2siLCJiIiwiZGlmZiIsInNvdXJjZUluZGV4IiwibmV4dFNpYmxpbmciLCJjcmVhdGVJbnB1dFBzZXVkbyIsImNyZWF0ZUJ1dHRvblBzZXVkbyIsImNyZWF0ZURpc2FibGVkUHNldWRvIiwiZGlzYWJsZWQiLCJpc0Rpc2FibGVkIiwiZGlzYWJsZWRBbmNlc3RvciIsImNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8iLCJhcmd1bWVudCIsIm1hdGNoSW5kZXhlcyIsInNldEZpbHRlcnMiLCJhZGRDb21iaW5hdG9yIiwibWF0Y2hlciIsImNvbWJpbmF0b3IiLCJiYXNlIiwic2tpcCIsIm5leHQiLCJjaGVja05vbkVsZW1lbnRzIiwiZG9uZU5hbWUiLCJ4bWwiLCJvbGRDYWNoZSIsInVuaXF1ZUNhY2hlIiwib3V0ZXJDYWNoZSIsIm5ld0NhY2hlIiwiZGlycnVucyIsInVuaXF1ZUlEIiwiZWxlbWVudE1hdGNoZXIiLCJtYXRjaGVycyIsIm11bHRpcGxlQ29udGV4dHMiLCJjb250ZXh0cyIsImNvbmRlbnNlIiwidW5tYXRjaGVkIiwibmV3VW5tYXRjaGVkIiwibWFwcGVkIiwic2V0TWF0Y2hlciIsInByZUZpbHRlciIsInBvc3RGaWx0ZXIiLCJwb3N0RmluZGVyIiwicG9zdFNlbGVjdG9yIiwicHJlTWFwIiwicG9zdE1hcCIsInByZWV4aXN0aW5nIiwibWF0Y2hlckluIiwibWF0Y2hlck91dCIsIm1hdGNoZXJGcm9tVG9rZW5zIiwiY2hlY2tDb250ZXh0IiwibGVhZGluZ1JlbGF0aXZlIiwicmVsYXRpdmUiLCJpbXBsaWNpdFJlbGF0aXZlIiwibWF0Y2hDb250ZXh0IiwibWF0Y2hBbnlDb250ZXh0Iiwib3V0ZXJtb3N0Q29udGV4dCIsIm1hdGNoZXJGcm9tR3JvdXBNYXRjaGVycyIsImVsZW1lbnRNYXRjaGVycyIsInNldE1hdGNoZXJzIiwiYnlTZXQiLCJieUVsZW1lbnQiLCJzdXBlck1hdGNoZXIiLCJvdXRlcm1vc3QiLCJtYXRjaGVkQ291bnQiLCJzZXRNYXRjaGVkIiwiY29udGV4dEJhY2t1cCIsImZpbmQiLCJUQUciLCJkaXJydW5zVW5pcXVlIiwicG9wIiwidW5pcXVlU29ydCIsImdldFRleHQiLCJpc1hNTCIsImNvbXBpbGUiLCJzb3J0SW5wdXQiLCJoYXNEdXBsaWNhdGUiLCJkb2NFbGVtIiwicmJ1Z2d5TWF0Y2hlcyIsImNsYXNzQ2FjaGUiLCJ0b2tlbkNhY2hlIiwic29ydE9yZGVyIiwicHVzaF9uYXRpdmUiLCJsaXN0IiwiYm9vbGVhbnMiLCJ3aGl0ZXNwYWNlIiwiaWRlbnRpZmllciIsImF0dHJpYnV0ZXMiLCJwc2V1ZG9zIiwicndoaXRlc3BhY2UiLCJSZWdFeHAiLCJyY29tbWEiLCJyY29tYmluYXRvcnMiLCJyYXR0cmlidXRlUXVvdGVzIiwicnBzZXVkbyIsInJpZGVudGlmaWVyIiwibWF0Y2hFeHByIiwiSUQiLCJDTEFTUyIsIkFUVFIiLCJQU0VVRE8iLCJDSElMRCIsImJvb2wiLCJuZWVkc0NvbnRleHQiLCJyaW5wdXRzIiwicmhlYWRlciIsInJuYXRpdmUiLCJydW5lc2NhcGUiLCJmdW5lc2NhcGUiLCJlc2NhcGVkIiwiZXNjYXBlZFdoaXRlc3BhY2UiLCJoaWdoIiwiU3RyaW5nIiwiZnJvbUNoYXJDb2RlIiwiY2giLCJhc0NvZGVQb2ludCIsImNoYXJDb2RlQXQiLCJ1bmxvYWRIYW5kbGVyIiwiZWxzIiwiZG9jdW1lbnRFbGVtZW50IiwiaGFzQ29tcGFyZSIsInN1YldpbmRvdyIsImRlZmF1bHRWaWV3IiwidG9wIiwiYWRkRXZlbnRMaXN0ZW5lciIsImF0dGFjaEV2ZW50IiwiY2xhc3NOYW1lIiwiY3JlYXRlQ29tbWVudCIsImdldEJ5SWQiLCJnZXRFbGVtZW50c0J5TmFtZSIsImF0dHJJZCIsImdldEF0dHJpYnV0ZU5vZGUiLCJpbnB1dCIsIm1hdGNoZXNTZWxlY3RvciIsIndlYmtpdE1hdGNoZXNTZWxlY3RvciIsIm1vek1hdGNoZXNTZWxlY3RvciIsIm9NYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsImRpc2Nvbm5lY3RlZE1hdGNoIiwiY29tcGFyZURvY3VtZW50UG9zaXRpb24iLCJhZG93biIsImJ1cCIsImNvbXBhcmUiLCJzb3J0RGV0YWNoZWQiLCJhdXAiLCJhcCIsImJwIiwiZXhwciIsImF0dHIiLCJzcGVjaWZpZWQiLCJlc2NhcGUiLCJzZWwiLCJkdXBsaWNhdGVzIiwiZGV0ZWN0RHVwbGljYXRlcyIsInNvcnRTdGFibGUiLCJub2RlVmFsdWUiLCJzZWxlY3RvcnMiLCJjcmVhdGVQc2V1ZG8iLCI+IiwiICIsIisiLCJ+IiwiZXhjZXNzIiwidW5xdW90ZWQiLCJub2RlTmFtZVNlbGVjdG9yIiwicGF0dGVybiIsIm9wZXJhdG9yIiwid2hhdCIsInNpbXBsZSIsImZvcndhcmQiLCJvZlR5cGUiLCJub2RlSW5kZXgiLCJwYXJlbnQiLCJ1c2VDYWNoZSIsInBzZXVkbyIsImlkeCIsIm1hdGNoZWQiLCJoYXMiLCJpbm5lclRleHQiLCJsYW5nIiwiZWxlbUxhbmciLCJoYXNoIiwicm9vdCIsImZvY3VzIiwiaGFzRm9jdXMiLCJocmVmIiwidGFiSW5kZXgiLCJlbmFibGVkIiwic2VsZWN0ZWRJbmRleCIsImhlYWRlciIsImJ1dHRvbiIsImV2ZW4iLCJvZGQiLCJsdCIsImd0IiwibnRoIiwicmFkaW8iLCJjaGVja2JveCIsImZpbGUiLCJwYXNzd29yZCIsImltYWdlIiwic3VibWl0IiwicmVzZXQiLCJmaWx0ZXJzIiwicGFyc2VPbmx5Iiwic29GYXIiLCJwcmVGaWx0ZXJzIiwiY2FjaGVkIiwidG9rZW4iLCJjb21waWxlZCIsInVuaXF1ZSIsImlzWE1MRG9jIiwiZXNjYXBlU2VsZWN0b3IiLCJ1bnRpbCIsInRydW5jYXRlIiwiaXMiLCJzaWJsaW5ncyIsIm4iLCJybmVlZHNDb250ZXh0IiwicnNpbmdsZVRhZyIsInJvb3RqUXVlcnkiLCJwYXJzZUhUTUwiLCJycGFyZW50c3ByZXYiLCJndWFyYW50ZWVkVW5pcXVlIiwidGFyZ2V0cyIsImNsb3Nlc3QiLCJwcmV2QWxsIiwiYWRkQmFjayIsInBhcmVudHMiLCJwYXJlbnRzVW50aWwiLCJuZXh0QWxsIiwibmV4dFVudGlsIiwicHJldlVudGlsIiwiY29udGVudERvY3VtZW50IiwicmV2ZXJzZSIsIkNhbGxiYWNrcyIsImZpcmluZyIsIm1lbW9yeSIsImZpcmVkIiwibG9ja2VkIiwiZmlyaW5nSW5kZXgiLCJvbmNlIiwic3RvcE9uRmFsc2UiLCJkaXNhYmxlIiwibG9jayIsImZpcmVXaXRoIiwidHVwbGVzIiwiY2F0Y2giLCJwaXBlIiwiZm5zIiwibmV3RGVmZXIiLCJ0dXBsZSIsInJldHVybmVkIiwibm90aWZ5Iiwib25GdWxmaWxsZWQiLCJvblJlamVjdGVkIiwib25Qcm9ncmVzcyIsImRlcHRoIiwic3BlY2lhbCIsInRoYXQiLCJtaWdodFRocm93IiwibWF4RGVwdGgiLCJUeXBlRXJyb3IiLCJwcm9jZXNzIiwiZXhjZXB0aW9uSG9vayIsInN0YWNrVHJhY2UiLCJnZXRTdGFja0hvb2siLCJzdGF0ZVN0cmluZyIsIndoZW4iLCJzaW5nbGVWYWx1ZSIsInJlc29sdmVDb250ZXh0cyIsInJlc29sdmVWYWx1ZXMiLCJtYXN0ZXIiLCJ1cGRhdGVGdW5jIiwicmVycm9yTmFtZXMiLCJzdGFjayIsImNvbnNvbGUiLCJ3YXJuIiwibWVzc2FnZSIsInJlYWR5RXhjZXB0aW9uIiwicmVhZHlMaXN0IiwicmVhZHlXYWl0Iiwid2FpdCIsInJlYWR5U3RhdGUiLCJkb1Njcm9sbCIsImNoYWluYWJsZSIsImVtcHR5R2V0IiwicmF3IiwiYnVsayIsImFjY2VwdERhdGEiLCJvd25lciIsImRlZmluZVByb3BlcnR5IiwiY29uZmlndXJhYmxlIiwicmVtb3ZlRGF0YSIsIl9kYXRhIiwiX3JlbW92ZURhdGEiLCJkZXF1ZXVlIiwic3RhcnRMZW5ndGgiLCJzZXR0ZXIiLCJjbGVhclF1ZXVlIiwiY291bnQiLCJkZWZlciIsInBudW0iLCJzb3VyY2UiLCJzd2FwIiwib2xkIiwiaGlkZSIsIm9wdGlvbiIsInRoZWFkIiwiY29sIiwidHIiLCJ0ZCIsIm9wdGdyb3VwIiwidGJvZHkiLCJ0Zm9vdCIsImNvbGdyb3VwIiwiY2FwdGlvbiIsInRoIiwiZGl2IiwiY2xvbmVOb2RlIiwibm9DbG9uZUNoZWNrZWQiLCJya2V5RXZlbnQiLCJybW91c2VFdmVudCIsInJ0eXBlbmFtZXNwYWNlIiwiaGFuZGxlT2JqSW4iLCJldmVudEhhbmRsZSIsImhhbmRsZU9iaiIsImhhbmRsZXJzIiwibmFtZXNwYWNlcyIsIm9yaWdUeXBlIiwiZWxlbURhdGEiLCJ0cmlnZ2VyZWQiLCJkaXNwYXRjaCIsImRlbGVnYXRlVHlwZSIsImJpbmRUeXBlIiwibmFtZXNwYWNlIiwiZGVsZWdhdGVDb3VudCIsInNldHVwIiwibWFwcGVkVHlwZXMiLCJvcmlnQ291bnQiLCJ0ZWFyZG93biIsInJlbW92ZUV2ZW50IiwibmF0aXZlRXZlbnQiLCJoYW5kbGVyUXVldWUiLCJmaXgiLCJkZWxlZ2F0ZVRhcmdldCIsInByZURpc3BhdGNoIiwiaXNQcm9wYWdhdGlvblN0b3BwZWQiLCJjdXJyZW50VGFyZ2V0IiwiaXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQiLCJybmFtZXNwYWNlIiwicHJldmVudERlZmF1bHQiLCJzdG9wUHJvcGFnYXRpb24iLCJwb3N0RGlzcGF0Y2giLCJtYXRjaGVkSGFuZGxlcnMiLCJtYXRjaGVkU2VsZWN0b3JzIiwiYWRkUHJvcCIsImhvb2siLCJFdmVudCIsImVudW1lcmFibGUiLCJvcmlnaW5hbEV2ZW50Iiwid3JpdGFibGUiLCJsb2FkIiwibm9CdWJibGUiLCJ0cmlnZ2VyIiwiYmx1ciIsImNsaWNrIiwiYmVmb3JldW5sb2FkIiwicmV0dXJuVmFsdWUiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJkZWZhdWx0UHJldmVudGVkIiwicmVsYXRlZFRhcmdldCIsInRpbWVTdGFtcCIsImlzU2ltdWxhdGVkIiwic3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uIiwiYWx0S2V5IiwiYnViYmxlcyIsImNhbmNlbGFibGUiLCJjaGFuZ2VkVG91Y2hlcyIsImN0cmxLZXkiLCJkZXRhaWwiLCJldmVudFBoYXNlIiwibWV0YUtleSIsInBhZ2VYIiwicGFnZVkiLCJzaGlmdEtleSIsInZpZXciLCJjaGFyIiwiY2hhckNvZGUiLCJrZXlDb2RlIiwiYnV0dG9ucyIsImNsaWVudFgiLCJjbGllbnRZIiwib2Zmc2V0WCIsIm9mZnNldFkiLCJwb2ludGVySWQiLCJwb2ludGVyVHlwZSIsInNjcmVlblgiLCJzY3JlZW5ZIiwidGFyZ2V0VG91Y2hlcyIsInRvRWxlbWVudCIsInRvdWNoZXMiLCJtb3VzZWVudGVyIiwibW91c2VsZWF2ZSIsInBvaW50ZXJlbnRlciIsInBvaW50ZXJsZWF2ZSIsInJlbGF0ZWQiLCJyeGh0bWxUYWciLCJybm9Jbm5lcmh0bWwiLCJkYXRhQW5kRXZlbnRzIiwiZGVlcERhdGFBbmRFdmVudHMiLCJzcmNFbGVtZW50cyIsImRlc3RFbGVtZW50cyIsImluUGFnZSIsImRldGFjaCIsInByZXBlbmQiLCJpbnNlcnRCZWZvcmUiLCJiZWZvcmUiLCJhZnRlciIsInJlcGxhY2VXaXRoIiwicmVwbGFjZUNoaWxkIiwiYXBwZW5kVG8iLCJwcmVwZW5kVG8iLCJpbnNlcnRBZnRlciIsInJlcGxhY2VBbGwiLCJvcmlnaW5hbCIsImluc2VydCIsIm9wZW5lciIsImdldENvbXB1dGVkU3R5bGUiLCJjb21wdXRlU3R5bGVUZXN0cyIsImNvbnRhaW5lciIsImNzc1RleHQiLCJkaXZTdHlsZSIsInBpeGVsUG9zaXRpb25WYWwiLCJyZWxpYWJsZU1hcmdpbkxlZnRWYWwiLCJyb3VuZFBpeGVsTWVhc3VyZXMiLCJtYXJnaW5MZWZ0IiwicmlnaHQiLCJwaXhlbEJveFN0eWxlc1ZhbCIsImJveFNpemluZ1JlbGlhYmxlVmFsIiwicG9zaXRpb24iLCJzY3JvbGxib3hTaXplVmFsIiwib2Zmc2V0V2lkdGgiLCJtZWFzdXJlIiwicm91bmQiLCJiYWNrZ3JvdW5kQ2xpcCIsImNsZWFyQ2xvbmVTdHlsZSIsInBpeGVsUG9zaXRpb24iLCJyZWxpYWJsZU1hcmdpbkxlZnQiLCJzY3JvbGxib3hTaXplIiwicmRpc3BsYXlzd2FwIiwicmN1c3RvbVByb3AiLCJjc3NTaG93IiwidmlzaWJpbGl0eSIsImNzc05vcm1hbFRyYW5zZm9ybSIsImxldHRlclNwYWNpbmciLCJmb250V2VpZ2h0IiwiYW5pbWF0aW9uSXRlcmF0aW9uQ291bnQiLCJjb2x1bW5Db3VudCIsImZpbGxPcGFjaXR5IiwiZmxleEdyb3ciLCJmbGV4U2hyaW5rIiwibGluZUhlaWdodCIsIm9yZGVyIiwib3JwaGFucyIsIndpZG93cyIsInpJbmRleCIsInpvb20iLCJvcmlnTmFtZSIsImlzQ3VzdG9tUHJvcCIsInNldFByb3BlcnR5IiwiaXNGaW5pdGUiLCJnZXRDbGllbnRSZWN0cyIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsImxlZnQiLCJwYWRkaW5nIiwiYm9yZGVyIiwic3VmZml4IiwiZXhwYW5kZWQiLCJwYXJ0cyIsInByb3BIb29rcyIsImVhc2VkIiwicG9zIiwic3RlcCIsInNjcm9sbExlZnQiLCJsaW5lYXIiLCJwIiwic3dpbmciLCJjb3MiLCJQSSIsInJydW4iLCIqIiwidHdlZW5lciIsInByZWZpbHRlciIsInNwZWVkIiwib3B0Iiwic3BlZWRzIiwiZmFkZVRvIiwidG8iLCJhbmltYXRlIiwib3B0YWxsIiwiZG9BbmltYXRpb24iLCJmaW5pc2giLCJzdG9wUXVldWUiLCJ0aW1lcnMiLCJjc3NGbiIsInNsaWRlVG9nZ2xlIiwiZmFkZVRvZ2dsZSIsInNsb3ciLCJmYXN0IiwiZGVsYXkiLCJ0aW1lIiwidGltZW91dCIsImNsZWFyVGltZW91dCIsImNoZWNrT24iLCJvcHRTZWxlY3RlZCIsInJhZGlvVmFsdWUiLCJib29sSG9vayIsInJlbW92ZUF0dHIiLCJuVHlwZSIsImF0dHJIb29rcyIsImF0dHJOYW1lcyIsImdldHRlciIsImxvd2VyY2FzZU5hbWUiLCJyZm9jdXNhYmxlIiwicmNsaWNrYWJsZSIsInJlbW92ZVByb3AiLCJwcm9wRml4IiwidGFiaW5kZXgiLCJwYXJzZUludCIsImZvciIsImNsYXNzIiwiY2xhc3NlcyIsImN1clZhbHVlIiwiY2xhenoiLCJmaW5hbFZhbHVlIiwic3RhdGVWYWwiLCJpc1ZhbGlkVmFsdWUiLCJjbGFzc05hbWVzIiwicnJldHVybiIsInZhbEhvb2tzIiwib3B0aW9uU2V0IiwiZm9jdXNpbiIsInJmb2N1c01vcnBoIiwic3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2siLCJvbmx5SGFuZGxlcnMiLCJidWJibGVUeXBlIiwib250eXBlIiwibGFzdEVsZW1lbnQiLCJldmVudFBhdGgiLCJpc1RyaWdnZXIiLCJwYXJlbnRXaW5kb3ciLCJzaW11bGF0ZSIsInRyaWdnZXJIYW5kbGVyIiwiYXR0YWNoZXMiLCJub25jZSIsInJxdWVyeSIsInBhcnNlWE1MIiwiRE9NUGFyc2VyIiwicGFyc2VGcm9tU3RyaW5nIiwickNSTEYiLCJyc3VibWl0dGVyVHlwZXMiLCJyc3VibWl0dGFibGUiLCJwYXJhbSIsInZhbHVlT3JGdW5jdGlvbiIsImVuY29kZVVSSUNvbXBvbmVudCIsInNlcmlhbGl6ZSIsInNlcmlhbGl6ZUFycmF5IiwicjIwIiwicmhhc2giLCJyYW50aUNhY2hlIiwicmhlYWRlcnMiLCJybG9jYWxQcm90b2NvbCIsInJub0NvbnRlbnQiLCJycHJvdG9jb2wiLCJhbGxUeXBlcyIsIm9yaWdpbkFuY2hvciIsImFjdGl2ZSIsImxhc3RNb2RpZmllZCIsImV0YWciLCJ1cmwiLCJpc0xvY2FsIiwicHJvdG9jb2wiLCJwcm9jZXNzRGF0YSIsImFzeW5jIiwiY29udGVudFR5cGUiLCJhY2NlcHRzIiwianNvbiIsIiogdGV4dCIsInRleHQgaHRtbCIsInRleHQganNvbiIsInRleHQgeG1sIiwiYWpheFNldHVwIiwic2V0dGluZ3MiLCJhamF4UHJlZmlsdGVyIiwiYWpheFRyYW5zcG9ydCIsImFqYXgiLCJzdGF0dXMiLCJuYXRpdmVTdGF0dXNUZXh0IiwiaGVhZGVycyIsInN1Y2Nlc3MiLCJtb2RpZmllZCIsInN0YXR1c1RleHQiLCJ0aW1lb3V0VGltZXIiLCJ0cmFuc3BvcnQiLCJyZXNwb25zZUhlYWRlcnNTdHJpbmciLCJpZk1vZGlmaWVkIiwiY2FjaGVVUkwiLCJjYWxsYmFja0NvbnRleHQiLCJzdGF0dXNDb2RlIiwiZmlyZUdsb2JhbHMiLCJnbG9iYWxFdmVudENvbnRleHQiLCJjb21wbGV0ZURlZmVycmVkIiwicmVzcG9uc2VIZWFkZXJzIiwidXJsQW5jaG9yIiwidW5jYWNoZWQiLCJyZXF1ZXN0SGVhZGVycyIsInJlcXVlc3RIZWFkZXJzTmFtZXMiLCJzdHJBYm9ydCIsImdldEFsbFJlc3BvbnNlSGVhZGVycyIsInNldFJlcXVlc3RIZWFkZXIiLCJvdmVycmlkZU1pbWVUeXBlIiwiYWJvcnQiLCJmaW5hbFRleHQiLCJjcm9zc0RvbWFpbiIsImhvc3QiLCJoYXNDb250ZW50IiwiYmVmb3JlU2VuZCIsInNlbmQiLCJnZXRKU09OIiwiZ2V0U2NyaXB0IiwidGhyb3dzIiwid3JhcEFsbCIsImZpcnN0RWxlbWVudENoaWxkIiwid3JhcElubmVyIiwiaHRtbElzRnVuY3Rpb24iLCJ1bndyYXAiLCJ2aXNpYmxlIiwib2Zmc2V0SGVpZ2h0IiwieGhyIiwiWE1MSHR0cFJlcXVlc3QiLCJ4aHJTdWNjZXNzU3RhdHVzIiwiMTIyMyIsInhoclN1cHBvcnRlZCIsImNvcnMiLCJlcnJvckNhbGxiYWNrIiwib3BlbiIsInVzZXJuYW1lIiwieGhyRmllbGRzIiwib25sb2FkIiwib25lcnJvciIsIm9uYWJvcnQiLCJvbnRpbWVvdXQiLCJvbnJlYWR5c3RhdGVjaGFuZ2UiLCJyZXNwb25zZVR5cGUiLCJyZXNwb25zZVRleHQiLCJiaW5hcnkiLCJ0ZXh0IHNjcmlwdCIsImNoYXJzZXQiLCJzY3JpcHRDaGFyc2V0IiwiZXZ0Iiwib2xkQ2FsbGJhY2tzIiwicmpzb25wIiwianNvbnAiLCJqc29ucENhbGxiYWNrIiwib3JpZ2luYWxTZXR0aW5ncyIsImNhbGxiYWNrTmFtZSIsIm92ZXJ3cml0dGVuIiwicmVzcG9uc2VDb250YWluZXIiLCJqc29uUHJvcCIsImNyZWF0ZUhUTUxEb2N1bWVudCIsImltcGxlbWVudGF0aW9uIiwia2VlcFNjcmlwdHMiLCJwYXJzZWQiLCJwYXJhbXMiLCJhbmltYXRlZCIsIm9mZnNldCIsInNldE9mZnNldCIsImN1clBvc2l0aW9uIiwiY3VyTGVmdCIsImN1ckNTU1RvcCIsImN1clRvcCIsImN1ck9mZnNldCIsImN1ckNTU0xlZnQiLCJjYWxjdWxhdGVQb3NpdGlvbiIsImN1ckVsZW0iLCJ1c2luZyIsInJlY3QiLCJ3aW4iLCJwYWdlWU9mZnNldCIsInBhZ2VYT2Zmc2V0Iiwib2Zmc2V0UGFyZW50IiwicGFyZW50T2Zmc2V0Iiwic2Nyb2xsVG8iLCJIZWlnaHQiLCJXaWR0aCIsIiIsImRlZmF1bHRFeHRyYSIsImZ1bmNOYW1lIiwiaG92ZXIiLCJmbk92ZXIiLCJmbk91dCIsInVuYmluZCIsImRlbGVnYXRlIiwidW5kZWxlZ2F0ZSIsInByb3h5IiwiaG9sZFJlYWR5IiwiaG9sZCIsInBhcnNlSlNPTiIsImlzTnVtZXJpYyIsImlzTmFOIiwiZGVmaW5lIiwiYW1kIiwiX2pRdWVyeSIsIl8kIiwibm9Db25mbGljdCIsImQiLCJEZWZhdWx0cyIsIiRlbGVtZW50IiwiX2hhbmRsZXJzIiwiX3BsdWdpbnMiLCJfc3VwcmVzcyIsIl9jdXJyZW50IiwiX3NwZWVkIiwiX2Nvb3JkaW5hdGVzIiwiX2JyZWFrcG9pbnQiLCJfd2lkdGgiLCJfaXRlbXMiLCJfY2xvbmVzIiwiX21lcmdlcnMiLCJfd2lkdGhzIiwiX2ludmFsaWRhdGVkIiwiX3BpcGUiLCJfZHJhZyIsInBvaW50ZXIiLCJzdGFnZSIsImRpcmVjdGlvbiIsIl9zdGF0ZXMiLCJ0YWdzIiwiaW5pdGlhbGl6aW5nIiwiYW5pbWF0aW5nIiwiZHJhZ2dpbmciLCJQbHVnaW5zIiwiV29ya2VycyIsImluaXRpYWxpemUiLCJjZW50ZXIiLCJyZXdpbmQiLCJjaGVja1Zpc2liaWxpdHkiLCJtb3VzZURyYWciLCJ0b3VjaERyYWciLCJwdWxsRHJhZyIsImZyZWVEcmFnIiwic3RhZ2VQYWRkaW5nIiwibWVyZ2VGaXQiLCJhdXRvV2lkdGgiLCJzdGFydFBvc2l0aW9uIiwicnRsIiwic21hcnRTcGVlZCIsImZsdWlkU3BlZWQiLCJkcmFnRW5kU3BlZWQiLCJyZXNwb25zaXZlUmVmcmVzaFJhdGUiLCJyZXNwb25zaXZlQmFzZUVsZW1lbnQiLCJmYWxsYmFja0Vhc2luZyIsInNsaWRlVHJhbnNpdGlvbiIsImluZm8iLCJuZXN0ZWRJdGVtU2VsZWN0b3IiLCJpdGVtRWxlbWVudCIsInN0YWdlRWxlbWVudCIsInJlZnJlc2hDbGFzcyIsImxvYWRlZENsYXNzIiwibG9hZGluZ0NsYXNzIiwicnRsQ2xhc3MiLCJkcmFnQ2xhc3MiLCJpdGVtQ2xhc3MiLCJzdGFnZUNsYXNzIiwic3RhZ2VPdXRlckNsYXNzIiwiZ3JhYkNsYXNzIiwiRGVmYXVsdCIsIklubmVyIiwiT3V0ZXIiLCJUeXBlIiwiU3RhdGUiLCIkc3RhZ2UiLCJtYXJnaW4tbGVmdCIsIm1hcmdpbi1yaWdodCIsInRvRml4ZWQiLCJmIiwibWluIiwiZyIsImgiLCJub3JtYWxpemUiLCJvdXRlckhUTUwiLCJhYnMiLCJwYWRkaW5nLWxlZnQiLCJwYWRkaW5nLXJpZ2h0IiwibWluaW11bSIsIm1heGltdW0iLCJjb29yZGluYXRlcyIsIm9wIiwiaW5pdGlhbGl6ZVN0YWdlIiwiaW5pdGlhbGl6ZUl0ZW1zIiwicmVmcmVzaCIsImlzVmlzaWJsZSIsImludmFsaWRhdGUiLCJlbnRlciIsInByZWxvYWRBdXRvV2lkdGhJbWFnZXMiLCJyZWdpc3RlckV2ZW50SGFuZGxlcnMiLCJsZWF2ZSIsInZpZXdwb3J0IiwiTnVtYmVyIiwicHJvcGVydHkiLCJvcHRpb25zTG9naWMiLCJwcmVwYXJlIiwidXBkYXRlIiwib25UaHJvdHRsZWRSZXNpemUiLCJyZXNpemVUaW1lciIsIm9uUmVzaXplIiwidHJhbnNpdGlvbiIsIm9uVHJhbnNpdGlvbkVuZCIsIm9uRHJhZ1N0YXJ0Iiwib25EcmFnRW5kIiwidHJhbnNmb3JtIiwieCIsInkiLCJnZXRUaW1lIiwiZGlmZmVyZW5jZSIsIm9uRHJhZ01vdmUiLCJ0cmFuc2Zvcm0zZCIsInN1cHByZXNzIiwicmVsZWFzZSIsIm1lcmdlcnMiLCJjbG9uZXMiLCJzcmNFbGVtZW50Iiwib3JpZ2luYWxUYXJnZXQiLCJpbm5lcldpZHRoIiwiY2xpZW50V2lkdGgiLCJJbWFnZSIsImRlc3Ryb3kiLCJkZXRhY2hFdmVudCIsIml0ZW0iLCJvblRyaWdnZXIiLCJyZWdpc3RlciIsIm93bCIsIkNvbnN0cnVjdG9yIiwiWmVwdG8iLCJfY29yZSIsIl9pbnRlcnZhbCIsIl92aXNpYmxlIiwiaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsIiwiYXV0b1JlZnJlc2giLCJ3YXRjaCIsImF1dG9SZWZyZXNoSW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJnZXRPd25Qcm9wZXJ0eU5hbWVzIiwiQXV0b1JlZnJlc2giLCJfbG9hZGVkIiwiaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsIGNoYW5nZS5vd2wuY2Fyb3VzZWwgcmVzaXplZC5vd2wuY2Fyb3VzZWwiLCJsYXp5TG9hZCIsImxhenlMb2FkRWFnZXIiLCJkZXZpY2VQaXhlbFJhdGlvIiwiZWxlbWVudCIsImJhY2tncm91bmQtaW1hZ2UiLCJMYXp5IiwiX3ByZXZpb3VzSGVpZ2h0IiwiaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsIHJlZnJlc2hlZC5vd2wuY2Fyb3VzZWwiLCJhdXRvSGVpZ2h0IiwiY2hhbmdlZC5vd2wuY2Fyb3VzZWwiLCJsb2FkZWQub3dsLmxhenkiLCJfaW50ZXJ2YWxJZCIsInJlc2l6ZSIsImF1dG9IZWlnaHRDbGFzcyIsIkF1dG9IZWlnaHQiLCJfdmlkZW9zIiwiX3BsYXlpbmciLCJyZXNpemUub3dsLmNhcm91c2VsIiwidmlkZW8iLCJpc0luRnVsbFNjcmVlbiIsInJlZnJlc2hlZC5vd2wuY2Fyb3VzZWwiLCJwcmVwYXJlZC5vd2wuY2Fyb3VzZWwiLCJmZXRjaCIsInBsYXkiLCJ2aWRlb0hlaWdodCIsInZpZGVvV2lkdGgiLCJ0aHVtYm5haWwiLCJrIiwic3JjVHlwZSIsInRodW1ibmFpbF9sYXJnZSIsImZyYW1lZ3JhYl91cmwiLCJmdWxsc2NyZWVuRWxlbWVudCIsIm1vekZ1bGxTY3JlZW5FbGVtZW50Iiwid2Via2l0RnVsbHNjcmVlbkVsZW1lbnQiLCJWaWRlbyIsImNvcmUiLCJzd2FwcGluZyIsInByZXZpb3VzIiwiY2hhbmdlLm93bC5jYXJvdXNlbCIsImRyYWcub3dsLmNhcm91c2VsIGRyYWdnZWQub3dsLmNhcm91c2VsIHRyYW5zbGF0ZWQub3dsLmNhcm91c2VsIiwidHJhbnNsYXRlLm93bC5jYXJvdXNlbCIsImFuaW1hdGVPdXQiLCJhbmltYXRlSW4iLCJjbGVhciIsIkFuaW1hdGUiLCJfY2FsbCIsIl90aW1lIiwiX3RpbWVvdXQiLCJfcGF1c2VkIiwiYXV0b3BsYXkiLCJwbGF5Lm93bC5hdXRvcGxheSIsInN0b3Aub3dsLmF1dG9wbGF5IiwibW91c2VvdmVyLm93bC5hdXRvcGxheSIsImF1dG9wbGF5SG92ZXJQYXVzZSIsInBhdXNlIiwibW91c2VsZWF2ZS5vd2wuYXV0b3BsYXkiLCJ0b3VjaHN0YXJ0Lm93bC5jb3JlIiwidG91Y2hlbmQub3dsLmNvcmUiLCJhdXRvcGxheVRpbWVvdXQiLCJhdXRvcGxheVNwZWVkIiwiX25leHQiLCJyZWFkIiwiX2luaXRpYWxpemVkIiwiX3BhZ2VzIiwiX2NvbnRyb2xzIiwiX3RlbXBsYXRlcyIsIl9vdmVycmlkZXMiLCJkb3RzRGF0YSIsImRvdENsYXNzIiwiYWRkZWQub3dsLmNhcm91c2VsIiwicmVtb3ZlLm93bC5jYXJvdXNlbCIsImRyYXciLCJuYXZUZXh0IiwibmF2U3BlZWQiLCJuYXZFbGVtZW50IiwibmF2Q29udGFpbmVyIiwibmF2Q29udGFpbmVyQ2xhc3MiLCJuYXZDbGFzcyIsInNsaWRlQnkiLCJkb3RzQ2xhc3MiLCJkb3RzIiwiZG90c0VhY2giLCJkb3RzU3BlZWQiLCJkb3RzQ29udGFpbmVyIiwiJHJlbGF0aXZlIiwiJHByZXZpb3VzIiwiJG5leHQiLCIkYWJzb2x1dGUiLCJvdmVyaWRlcyIsInBhZ2UiLCJzaXplIiwiZ2V0UG9zaXRpb24iLCJOYXZpZ2F0aW9uIiwiX2hhc2hlcyIsIlVSTGhhc2hMaXN0ZW5lciIsIkhhc2giLCJXZWJraXRUcmFuc2l0aW9uIiwiTW96VHJhbnNpdGlvbiIsIk9UcmFuc2l0aW9uIiwiV2Via2l0QW5pbWF0aW9uIiwiTW96QW5pbWF0aW9uIiwiT0FuaW1hdGlvbiIsImNzc3RyYW5zZm9ybXMiLCJjc3N0cmFuc2Zvcm1zM2QiLCJjc3N0cmFuc2l0aW9ucyIsImNzc2FuaW1hdGlvbnMiLCJyIiwibyIsInUiLCJyZXF1aXJlIiwiMSIsImdldFJnYmEiLCJnZXRIc2xhIiwiZ2V0UmdiIiwiZ2V0SHNsIiwiZ2V0SHdiIiwiZ2V0QWxwaGEiLCJoZXhTdHJpbmciLCJyZ2JTdHJpbmciLCJyZ2JhU3RyaW5nIiwicGVyY2VudFN0cmluZyIsInBlcmNlbnRhU3RyaW5nIiwiaHNsU3RyaW5nIiwiaHNsYVN0cmluZyIsImh3YlN0cmluZyIsImtleXdvcmQiLCI1IiwiMiIsInZhbGlkIiwicmdiIiwiaHNsIiwiaHN2IiwiaHdiIiwiY215ayIsImFscGhhIiwic2V0VmFsdWVzIiwicmVkIiwibGlnaHRuZXNzIiwid2hpdGVuZXNzIiwiY3lhbiIsImlzVmFsaWQiLCJzZXRTcGFjZSIsInJnYkFycmF5IiwiaHNsQXJyYXkiLCJoc3ZBcnJheSIsImh3YkFycmF5IiwiY215a0FycmF5IiwicmdiYUFycmF5IiwiaHNsYUFycmF5Iiwic2V0Q2hhbm5lbCIsImdyZWVuIiwiYmx1ZSIsImh1ZSIsInNhdHVyYXRpb24iLCJzYXR1cmF0aW9udiIsImJsYWNrbmVzcyIsIm1hZ2VudGEiLCJ5ZWxsb3ciLCJibGFjayIsInJnYk51bWJlciIsImx1bWlub3NpdHkiLCJwb3ciLCJjb250cmFzdCIsImxldmVsIiwiZGFyayIsImxpZ2h0IiwibmVnYXRlIiwibGlnaHRlbiIsImRhcmtlbiIsInNhdHVyYXRlIiwiZGVzYXR1cmF0ZSIsIndoaXRlbiIsImJsYWNrZW4iLCJncmV5c2NhbGUiLCJjbGVhcmVyIiwib3BhcXVlciIsInJvdGF0ZSIsIm1peCIsInRvSlNPTiIsInNwYWNlcyIsIm1heGVzIiwiZ2V0VmFsdWVzIiwiQ29sb3IiLCI0IiwiMyIsIlMiLCJzdHJpbmdpZnkiLCJmbG9vciIsImF0YW4yIiwic3FydCIsInNpbiIsIk0iLCJyZ2IyaHNsIiwicmdiMmhzdiIsInJnYjJod2IiLCJyZ2IyY215ayIsInJnYjJrZXl3b3JkIiwicmdiMnh5eiIsInJnYjJsYWIiLCJyZ2IybGNoIiwiaHNsMnJnYiIsImhzbDJoc3YiLCJoc2wyaHdiIiwiaHNsMmNteWsiLCJoc2wya2V5d29yZCIsImhzdjJyZ2IiLCJoc3YyaHNsIiwiaHN2Mmh3YiIsImhzdjJjbXlrIiwiaHN2MmtleXdvcmQiLCJod2IycmdiIiwiaHdiMmhzbCIsImh3YjJoc3YiLCJod2IyY215ayIsImh3YjJrZXl3b3JkIiwiY215azJyZ2IiLCJjbXlrMmhzbCIsImNteWsyaHN2IiwiY215azJod2IiLCJjbXlrMmtleXdvcmQiLCJrZXl3b3JkMnJnYiIsImtleXdvcmQyaHNsIiwia2V5d29yZDJoc3YiLCJrZXl3b3JkMmh3YiIsImtleXdvcmQyY215ayIsImtleXdvcmQybGFiIiwia2V5d29yZDJ4eXoiLCJ4eXoycmdiIiwieHl6MmxhYiIsInh5ejJsY2giLCJsYWIyeHl6IiwibGFiMnJnYiIsImxhYjJsY2giLCJsY2gybGFiIiwibGNoMnh5eiIsImxjaDJyZ2IiLCJhbGljZWJsdWUiLCJhbnRpcXVld2hpdGUiLCJhcXVhIiwiYXF1YW1hcmluZSIsImF6dXJlIiwiYmVpZ2UiLCJiaXNxdWUiLCJibGFuY2hlZGFsbW9uZCIsImJsdWV2aW9sZXQiLCJicm93biIsImJ1cmx5d29vZCIsImNhZGV0Ymx1ZSIsImNoYXJ0cmV1c2UiLCJjaG9jb2xhdGUiLCJjb3JhbCIsImNvcm5mbG93ZXJibHVlIiwiY29ybnNpbGsiLCJjcmltc29uIiwiZGFya2JsdWUiLCJkYXJrY3lhbiIsImRhcmtnb2xkZW5yb2QiLCJkYXJrZ3JheSIsImRhcmtncmVlbiIsImRhcmtncmV5IiwiZGFya2toYWtpIiwiZGFya21hZ2VudGEiLCJkYXJrb2xpdmVncmVlbiIsImRhcmtvcmFuZ2UiLCJkYXJrb3JjaGlkIiwiZGFya3JlZCIsImRhcmtzYWxtb24iLCJkYXJrc2VhZ3JlZW4iLCJkYXJrc2xhdGVibHVlIiwiZGFya3NsYXRlZ3JheSIsImRhcmtzbGF0ZWdyZXkiLCJkYXJrdHVycXVvaXNlIiwiZGFya3Zpb2xldCIsImRlZXBwaW5rIiwiZGVlcHNreWJsdWUiLCJkaW1ncmF5IiwiZGltZ3JleSIsImRvZGdlcmJsdWUiLCJmaXJlYnJpY2siLCJmbG9yYWx3aGl0ZSIsImZvcmVzdGdyZWVuIiwiZnVjaHNpYSIsImdhaW5zYm9ybyIsImdob3N0d2hpdGUiLCJnb2xkIiwiZ29sZGVucm9kIiwiZ3JheSIsImdyZWVueWVsbG93IiwiZ3JleSIsImhvbmV5ZGV3IiwiaG90cGluayIsImluZGlhbnJlZCIsImluZGlnbyIsIml2b3J5Iiwia2hha2kiLCJsYXZlbmRlciIsImxhdmVuZGVyYmx1c2giLCJsYXduZ3JlZW4iLCJsZW1vbmNoaWZmb24iLCJsaWdodGJsdWUiLCJsaWdodGNvcmFsIiwibGlnaHRjeWFuIiwibGlnaHRnb2xkZW5yb2R5ZWxsb3ciLCJsaWdodGdyYXkiLCJsaWdodGdyZWVuIiwibGlnaHRncmV5IiwibGlnaHRwaW5rIiwibGlnaHRzYWxtb24iLCJsaWdodHNlYWdyZWVuIiwibGlnaHRza3libHVlIiwibGlnaHRzbGF0ZWdyYXkiLCJsaWdodHNsYXRlZ3JleSIsImxpZ2h0c3RlZWxibHVlIiwibGlnaHR5ZWxsb3ciLCJsaW1lIiwibGltZWdyZWVuIiwibGluZW4iLCJtYXJvb24iLCJtZWRpdW1hcXVhbWFyaW5lIiwibWVkaXVtYmx1ZSIsIm1lZGl1bW9yY2hpZCIsIm1lZGl1bXB1cnBsZSIsIm1lZGl1bXNlYWdyZWVuIiwibWVkaXVtc2xhdGVibHVlIiwibWVkaXVtc3ByaW5nZ3JlZW4iLCJtZWRpdW10dXJxdW9pc2UiLCJtZWRpdW12aW9sZXRyZWQiLCJtaWRuaWdodGJsdWUiLCJtaW50Y3JlYW0iLCJtaXN0eXJvc2UiLCJtb2NjYXNpbiIsIm5hdmFqb3doaXRlIiwibmF2eSIsIm9sZGxhY2UiLCJvbGl2ZSIsIm9saXZlZHJhYiIsIm9yYW5nZSIsIm9yYW5nZXJlZCIsIm9yY2hpZCIsInBhbGVnb2xkZW5yb2QiLCJwYWxlZ3JlZW4iLCJwYWxldHVycXVvaXNlIiwicGFsZXZpb2xldHJlZCIsInBhcGF5YXdoaXAiLCJwZWFjaHB1ZmYiLCJwZXJ1IiwicGluayIsInBsdW0iLCJwb3dkZXJibHVlIiwicHVycGxlIiwicmViZWNjYXB1cnBsZSIsInJvc3licm93biIsInJveWFsYmx1ZSIsInNhZGRsZWJyb3duIiwic2FsbW9uIiwic2FuZHlicm93biIsInNlYWdyZWVuIiwic2Vhc2hlbGwiLCJzaWVubmEiLCJzaWx2ZXIiLCJza3libHVlIiwic2xhdGVibHVlIiwic2xhdGVncmF5Iiwic2xhdGVncmV5Iiwic25vdyIsInNwcmluZ2dyZWVuIiwic3RlZWxibHVlIiwidGFuIiwidGVhbCIsInRoaXN0bGUiLCJ0b21hdG8iLCJ0dXJxdW9pc2UiLCJ2aW9sZXQiLCJ3aGVhdCIsIndoaXRlIiwid2hpdGVzbW9rZSIsInllbGxvd2dyZWVuIiwiRCIsImNvbnZzIiwicm91dGVTcGFjZSIsInNwYWNlIiwiZm9yRWFjaCIsIjYiLCJFbiIsImpuIiwidmFsdWVPZiIsIkRlIiwidXRjIiwiX3BmIiwidW51c2VkVG9rZW5zIiwidW51c2VkSW5wdXQiLCJjaGFyc0xlZnRPdmVyIiwibnVsbElucHV0IiwiaW52YWxpZE1vbnRoIiwiaW52YWxpZEZvcm1hdCIsInVzZXJJbnZhbGlkYXRlZCIsImlzbyIsInBhcnNlZERhdGVQYXJ0cyIsIm1lcmlkaWVtIiwicmZjMjgyMiIsIndlZWtkYXlNaXNtYXRjaCIsIl9pc1ZhbGlkIiwiX2QiLCJpbnZhbGlkV2Vla2RheSIsIl9zdHJpY3QiLCJiaWdIb3VyIiwiaXNGcm96ZW4iLCJOYU4iLCJfaXNBTW9tZW50T2JqZWN0IiwiX2kiLCJfZiIsIl9sIiwiX3R6bSIsIl9pc1VUQyIsIl9vZmZzZXQiLCJfbG9jYWxlIiwidXBkYXRlT2Zmc2V0Iiwic3VwcHJlc3NEZXByZWNhdGlvbldhcm5pbmdzIiwiZGVwcmVjYXRpb25IYW5kbGVyIiwiQyIsIlAiLCJGdW5jdGlvbiIsIlQiLCJPIiwiQSIsIkkiLCJGIiwiUiIsIlkiLCJMIiwiVyIsInN1YnN0ciIsIkIiLCJIIiwibG9jYWxlRGF0YSIsIm9yZGluYWwiLCJFIiwiViIsIk4iLCJpbnZhbGlkRGF0ZSIsImxvbmdEYXRlRm9ybWF0IiwieiIsImxhc3RJbmRleCIsInN0IiwidXQiLCJkdCIsImh0IiwiZnQiLCJfdyIsInd0IiwiTXQiLCJDdCIsIlR0IiwiUHQiLCJ5ZWFyIiwibW9udGgiLCJkYXRlIiwiT3QiLCJSdCIsIm1vbnRoc1BhcnNlIiwiTHQiLCJOdCIsIm1vbnRoc1Nob3J0IiwibW9udGhzIiwiX21vbnRoc1JlZ2V4IiwiX21vbnRoc1Nob3J0UmVnZXgiLCJfbW9udGhzU3RyaWN0UmVnZXgiLCJfbW9udGhzU2hvcnRTdHJpY3RSZWdleCIsInp0IiwiVVRDIiwiZ2V0VVRDRnVsbFllYXIiLCJzZXRVVENGdWxsWWVhciIsIlZ0IiwiZ2V0VVRDRGF5IiwiSHQiLCJkYXlPZlllYXIiLCJCdCIsIkV0Iiwid2VlayIsIkp0IiwiZGF5Iiwid2Vla2RheXNNaW4iLCJ3ZWVrZGF5c1Nob3J0Iiwid2Vla2RheXMiLCJfd2Vla2RheXNSZWdleCIsIl93ZWVrZGF5c1Nob3J0UmVnZXgiLCJfd2Vla2RheXNNaW5SZWdleCIsIl93ZWVrZGF5c1N0cmljdFJlZ2V4IiwiX3dlZWtkYXlzU2hvcnRTdHJpY3RSZWdleCIsIl93ZWVrZGF5c01pblN0cmljdFJlZ2V4IiwiJHQiLCJob3VycyIsIkt0IiwibWludXRlcyIsIlF0IiwiX21lcmlkaWVtUGFyc2UiLCJyZSIsIm9lIiwiaWUiLCJ0ZSIsIl9hYmJyIiwic2UiLCJ1ZSIsImxlIiwibmUiLCJhYmJyIiwiX2NvbmZpZyIsInBhcmVudExvY2FsZSIsImFlIiwiY29uZmlnIiwiZGUiLCJfYSIsIm10IiwicHQiLCJ2dCIsImJ0IiwieXQiLCJ4dCIsIl9vdmVyZmxvd0RheU9mWWVhciIsIl9vdmVyZmxvd1dlZWtzIiwiX3QiLCJfb3ZlcmZsb3dXZWVrZGF5Iiwia3QiLCJoZSIsImNlIiwiX3VzZVVUQyIsImdldFVUQ01vbnRoIiwiZ2V0VVRDRGF0ZSIsImdldEZ1bGxZZWFyIiwiZ2V0TW9udGgiLCJnZXREYXRlIiwiR0ciLCJDZSIsIl93ZWVrIiwiZG93IiwiZG95IiwiZ2ciLCJfZGF5T2ZZZWFyIiwiX25leHREYXkiLCJzZXRGdWxsWWVhciIsImdldERheSIsInNldFVUQ01pbnV0ZXMiLCJnZXRVVENNaW51dGVzIiwieWUiLCJmZSIsImdlIiwicGUiLCJ2ZSIsIm1lIiwiTWUiLCJfZSIsIkZ0Iiwid2UiLCJ4ZSIsIlV0Iiwia2UiLCJJU09fODYwMSIsIlJGQ18yODIyIiwiX21lcmlkaWVtIiwibWVyaWRpZW1Ib3VyIiwiaXNQTSIsIlNlIiwicHJlcGFyc2UiLCJzY29yZSIsImJlIiwiY3JlYXRlRnJvbUlucHV0RmFsbGJhY2siLCJob3VyIiwibWludXRlIiwibWlsbGlzZWNvbmQiLCJPZSIsIkFlIiwicXVhcnRlciIsIlN0IiwiSWUiLCJfbWlsbGlzZWNvbmRzIiwiX2RheXMiLCJfbW9udGhzIiwiX2J1YmJsZSIsIkZlIiwiUmUiLCJMZSIsInV0Y09mZnNldCIsIldlIiwiWWUiLCJOZSIsInNldFRpbWUiLCJsb2NhbCIsInplIiwiZ2V0VGltZXpvbmVPZmZzZXQiLCJWZSIsIkVlIiwibXMiLCJtaWxsaXNlY29uZHMiLCJIZSIsIkJlIiwiamUiLCJpc0JlZm9yZSIsIlVlIiwiZnJvbSIsImlzQWZ0ZXIiLCJHZSIsInFlIiwiSmUiLCIkZSIsIlFlIiwidG4iLCJlbiIsInNuIiwiZG4iLCJjbiIsImduIiwicG4iLCJ2biIsImJuIiwieW4iLCJ4biIsImFzIiwiVG4iLCJWbiIsIkhuIiwiem4iLCJhc1NlY29uZHMiLCJzb21lIiwibW9tZW50UHJvcGVydGllcyIsIlUiLCJHIiwicSIsIloiLCJYIiwiSiIsIksiLCJRIiwidHQiLCJldCIsIm50IiwiaXQiLCJhdCIsInJ0Iiwib3QiLCJwYXJzZVR3b0RpZ2l0WWVhciIsIkR0IiwibW9udGhzU2hvcnRSZWdleCIsIm1vbnRoc1JlZ2V4IiwiSXQiLCJBdCIsIll0IiwiV3QiLCJ3ZWVrZGF5c01pblJlZ2V4Iiwid2Vla2RheXNTaG9ydFJlZ2V4Iiwid2Vla2RheXNSZWdleCIsIndlZWtkYXlzUGFyc2UiLCJqdCIsIkd0IiwicXQiLCJadCIsIlh0Iiwic2Vjb25kcyIsIl9pc1BtIiwiZWUiLCJjYWxlbmRhciIsInNhbWVEYXkiLCJuZXh0RGF5IiwibmV4dFdlZWsiLCJsYXN0RGF5IiwibGFzdFdlZWsiLCJzYW1lRWxzZSIsIkxUUyIsIkxUIiwiTEwiLCJMTEwiLCJMTExMIiwiZGF5T2ZNb250aE9yZGluYWxQYXJzZSIsInJlbGF0aXZlVGltZSIsImZ1dHVyZSIsInBhc3QiLCJzcyIsIm1tIiwiaGgiLCJkZCIsIk1NIiwieXkiLCJtZXJpZGllbVBhcnNlIiwiVVQiLCJHTVQiLCJFRFQiLCJFU1QiLCJDRFQiLCJDU1QiLCJNRFQiLCJNU1QiLCJQRFQiLCJQU1QiLCJQZSIsIlRlIiwiaW52YWxpZCIsIlplIiwiWGUiLCJkZWZhdWx0Rm9ybWF0IiwiZGVmYXVsdEZvcm1hdFV0YyIsIktlIiwibG9jYWxlIiwid2Vla1llYXIiLCJpc29XZWVrWWVhciIsIl9kYXlPZk1vbnRoT3JkaW5hbFBhcnNlIiwiX29yZGluYWxQYXJzZSIsIl9kYXlPZk1vbnRoT3JkaW5hbFBhcnNlTGVuaWVudCIsIm5uIiwiYW4iLCJybiIsImxuIiwidW4iLCJzdGFydE9mIiwiY2FsZW5kYXJGb3JtYXQiLCJmb3JtYXQiLCJlbmRPZiIsImlzVXRjIiwicG9zdGZvcm1hdCIsImh1bWFuaXplIiwiZnJvbU5vdyIsInRvTm93IiwiaW52YWxpZEF0IiwiaXNCZXR3ZWVuIiwiaXNTYW1lIiwiaXNTYW1lT3JBZnRlciIsImlzU2FtZU9yQmVmb3JlIiwicGFyc2luZ0ZsYWdzIiwicHJpb3JpdHkiLCJ3ZWVrZGF5IiwiaXNvV2Vla2RheSIsInRvT2JqZWN0IiwieWVhcnMiLCJ0b0RhdGUiLCJ0b0lTT1N0cmluZyIsInVuaXgiLCJjcmVhdGlvbkRhdGEiLCJpc1VUQyIsInN0cmljdCIsImlzTGVhcFllYXIiLCJpc29XZWVrIiwicXVhcnRlcnMiLCJkYXlzSW5Nb250aCIsIndlZWtzIiwiaXNvV2Vla3MiLCJ3ZWVrc0luWWVhciIsImlzb1dlZWtzSW5ZZWFyIiwiZGF5cyIsIl9jaGFuZ2VJblByb2dyZXNzIiwicGFyc2Vab25lIiwiaGFzQWxpZ25lZEhvdXJPZmZzZXQiLCJpc0RTVCIsImlzVXRjT2Zmc2V0Iiwiem9uZUFiYnIiLCJ6b25lTmFtZSIsImRhdGVzIiwiem9uZSIsImlzRFNUU2hpZnRlZCIsIl9pc0RTVFNoaWZ0ZWQiLCJobiIsIl9jYWxlbmRhciIsIl9sb25nRGF0ZUZvcm1hdCIsIl9pbnZhbGlkRGF0ZSIsIl9vcmRpbmFsIiwiX3JlbGF0aXZlVGltZSIsInBhc3RGdXR1cmUiLCJpc0Zvcm1hdCIsInN0YW5kYWxvbmUiLCJfbW9udGhzU2hvcnQiLCJfbW9udGhzUGFyc2VFeGFjdCIsInRvTG9jYWxlTG93ZXJDYXNlIiwiX21vbnRoc1BhcnNlIiwiX2xvbmdNb250aHNQYXJzZSIsIl9zaG9ydE1vbnRoc1BhcnNlIiwiZmlyc3REYXlPZlllYXIiLCJmaXJzdERheU9mV2VlayIsIl93ZWVrZGF5cyIsIl93ZWVrZGF5c01pbiIsIl93ZWVrZGF5c1Nob3J0IiwiX3dlZWtkYXlzUGFyc2VFeGFjdCIsIl93ZWVrZGF5c1BhcnNlIiwiX3Nob3J0V2Vla2RheXNQYXJzZSIsIl9taW5XZWVrZGF5c1BhcnNlIiwiX2Z1bGxXZWVrZGF5c1BhcnNlIiwibGFuZ0RhdGEiLCJtbiIsIl9uIiwia24iLCJ3biIsIk1uIiwiU24iLCJEbiIsIkNuIiwiUG4iLCJPbiIsIkluIiwiQW4iLCJGbiIsIlJuIiwiTG4iLCJZbiIsIlduIiwiTm4iLCJCbiIsImFzTWlsbGlzZWNvbmRzIiwiYXNNaW51dGVzIiwiYXNIb3VycyIsImFzRGF5cyIsImFzV2Vla3MiLCJhc01vbnRocyIsImFzWWVhcnMiLCJ0b0lzb1N0cmluZyIsImlzRGF0ZSIsImlzTW9tZW50IiwiaXNEdXJhdGlvbiIsImRlZmluZUxvY2FsZSIsInVwZGF0ZUxvY2FsZSIsImxvY2FsZXMiLCJub3JtYWxpemVVbml0cyIsInJlbGF0aXZlVGltZVJvdW5kaW5nIiwicmVsYXRpdmVUaW1lVGhyZXNob2xkIiwiSFRNTDVfRk1UIiwiREFURVRJTUVfTE9DQUwiLCJEQVRFVElNRV9MT0NBTF9TRUNPTkRTIiwiREFURVRJTUVfTE9DQUxfTVMiLCJEQVRFIiwiVElNRSIsIlRJTUVfU0VDT05EUyIsIlRJTUVfTVMiLCJXRUVLIiwiTU9OVEgiLCJtb21lbnQiLCI3IiwiaGVscGVycyIsImFuaW1hdGlvblNlcnZpY2UiLCJkZWZhdWx0cyIsIkVsZW1lbnQiLCJJbnRlcmFjdGlvbiIsImxheW91dHMiLCJwbGF0Zm9ybSIsInBsdWdpbnMiLCJTY2FsZSIsInNjYWxlU2VydmljZSIsIlRpY2tzIiwiVG9vbHRpcCIsIkxlZ2VuZCIsImxlZ2VuZCIsIl9lbGVtZW50IiwiVGl0bGUiLCJwbHVnaW5TZXJ2aWNlIiwiUGx1Z2luQmFzZSIsImNhbnZhc0hlbHBlcnMiLCJjYW52YXMiLCJsYXlvdXRTZXJ2aWNlIiwiMTAiLCIxMSIsIjEyIiwiMTMiLCIxNCIsIjE1IiwiMTYiLCIxNyIsIjE4IiwiMTkiLCIyMCIsIjIxIiwiMjIiLCIyMyIsIjI0IiwiMjUiLCIyNiIsIjI3IiwiMjgiLCIyOSIsIjMwIiwiMzEiLCIzMiIsIjMzIiwiMzQiLCIzNSIsIjM2IiwiNDEiLCI0NiIsIjQ5IiwiNTAiLCI1NCIsIjU1IiwiNTYiLCI1NyIsIjU4IiwiNTkiLCI4IiwiOSIsIkJhciIsIkJ1YmJsZSIsIkRvdWdobnV0IiwiTGluZSIsIlBvbGFyQXJlYSIsIlJhZGFyIiwiU2NhdHRlciIsIl9zZXQiLCJtb2RlIiwic2NhbGVzIiwieEF4ZXMiLCJjYXRlZ29yeVBlcmNlbnRhZ2UiLCJiYXJQZXJjZW50YWdlIiwiZ3JpZExpbmVzIiwib2Zmc2V0R3JpZExpbmVzIiwieUF4ZXMiLCJheGlzIiwicmVjdGFuZ2xlIiwiYm9yZGVyU2tpcHBlZCIsInRvb2x0aXBzIiwiY2FsbGJhY2tzIiwieUxhYmVsIiwibGFiZWwiLCJkYXRhc2V0SW5kZXgiLCJ4TGFiZWwiLCJjb250cm9sbGVycyIsImJhciIsIkRhdGFzZXRDb250cm9sbGVyIiwiZGF0YUVsZW1lbnRUeXBlIiwiUmVjdGFuZ2xlIiwiZ2V0TWV0YSIsImdldERhdGFzZXQiLCJfcnVsZXIiLCJnZXRSdWxlciIsInVwZGF0ZUVsZW1lbnQiLCJjaGFydCIsImN1c3RvbSIsIl94U2NhbGUiLCJnZXRTY2FsZUZvcklkIiwieEF4aXNJRCIsIl95U2NhbGUiLCJ5QXhpc0lEIiwiX2RhdGFzZXRJbmRleCIsIl9pbmRleCIsIl9tb2RlbCIsImRhdGFzZXRMYWJlbCIsInZhbHVlQXRJbmRleE9yRGVmYXVsdCIsInVwZGF0ZUVsZW1lbnRHZW9tZXRyeSIsInBpdm90IiwiZ2V0VmFsdWVTY2FsZSIsImdldEJhc2VQaXhlbCIsImlzSG9yaXpvbnRhbCIsImNhbGN1bGF0ZUJhclZhbHVlUGl4ZWxzIiwiY2FsY3VsYXRlQmFySW5kZXhQaXhlbHMiLCJob3Jpem9udGFsIiwiZ2V0VmFsdWVTY2FsZUlkIiwiZ2V0SW5kZXhTY2FsZUlkIiwiZ2V0SW5kZXhTY2FsZSIsIl9nZXRTdGFja3MiLCJzdGFja2VkIiwiZ2V0RGF0YXNldE1ldGEiLCJpc0RhdGFzZXRWaXNpYmxlIiwiZ2V0U3RhY2tDb3VudCIsImdldFN0YWNrSW5kZXgiLCJnZXRQaXhlbEZvclZhbHVlIiwiaXNOdWxsT3JVbmRlZiIsImJhclRoaWNrbmVzcyIsImdldFRpY2tzIiwiZ2V0UGl4ZWxGb3JUaWNrIiwicGl4ZWxzIiwic3RhY2tDb3VudCIsImdldFJpZ2h0VmFsdWUiLCJjb250cm9sbGVyIiwiY2h1bmsiLCJyYXRpbyIsInZhbHVlT3JEZWZhdWx0IiwibWF4QmFyVGhpY2tuZXNzIiwiY2xpcEFyZWEiLCJjaGFydEFyZWEiLCJ1bmNsaXBBcmVhIiwiaG9yaXpvbnRhbEJhciIsImJ1YmJsZSIsIlBvaW50IiwiX3Jlc29sdmVFbGVtZW50T3B0aW9ucyIsImdldFBpeGVsRm9yRGVjaW1hbCIsIl9vcHRpb25zIiwiaGl0UmFkaXVzIiwicG9pbnRTdHlsZSIsInJvdGF0aW9uIiwicmFkaXVzIiwic2V0SG92ZXJTdHlsZSIsIiRwcmV2aW91c1N0eWxlIiwiaG92ZXJCYWNrZ3JvdW5kQ29sb3IiLCJnZXRIb3ZlckNvbG9yIiwiaG92ZXJCb3JkZXJDb2xvciIsImhvdmVyQm9yZGVyV2lkdGgiLCJob3ZlclJhZGl1cyIsInBvaW50IiwiZGF0YUluZGV4IiwiZGF0YXNldCIsImFuaW1hdGVSb3RhdGUiLCJhbmltYXRlU2NhbGUiLCJsZWdlbmRDYWxsYmFjayIsImdlbmVyYXRlTGFiZWxzIiwiYXJjIiwiZmlsbFN0eWxlIiwic3Ryb2tlU3R5bGUiLCJsaW5lV2lkdGgiLCJvbkNsaWNrIiwiY3V0b3V0UGVyY2VudGFnZSIsImNpcmN1bWZlcmVuY2UiLCJkb3VnaG51dCIsInBpZSIsIkFyYyIsImxpbmtTY2FsZXMiLCJnZXRSaW5nSW5kZXgiLCJib3R0b20iLCJnZXRNYXhCb3JkZXJXaWR0aCIsIm91dGVyUmFkaXVzIiwiaW5uZXJSYWRpdXMiLCJyYWRpdXNMZW5ndGgiLCJnZXRWaXNpYmxlRGF0YXNldENvdW50IiwidG90YWwiLCJjYWxjdWxhdGVUb3RhbCIsImNhbGN1bGF0ZUNpcmN1bWZlcmVuY2UiLCJzdGFydEFuZ2xlIiwiZW5kQW5nbGUiLCJfY2hhcnQiLCJzaG93TGluZXMiLCJzcGFuR2FwcyIsInNob3dMaW5lIiwibGluZSIsImRhdGFzZXRFbGVtZW50VHlwZSIsInRlbnNpb24iLCJsaW5lVGVuc2lvbiIsIl9zY2FsZSIsIl9jaGlsZHJlbiIsImJvcmRlckNhcFN0eWxlIiwiYm9yZGVyRGFzaCIsImJvcmRlckRhc2hPZmZzZXQiLCJib3JkZXJKb2luU3R5bGUiLCJmaWxsIiwic3RlcHBlZExpbmUiLCJzdGVwcGVkIiwiY3ViaWNJbnRlcnBvbGF0aW9uTW9kZSIsInVwZGF0ZUJlemllckNvbnRyb2xQb2ludHMiLCJnZXRQb2ludEJhY2tncm91bmRDb2xvciIsInBvaW50QmFja2dyb3VuZENvbG9yIiwiZ2V0UG9pbnRCb3JkZXJDb2xvciIsInBvaW50Qm9yZGVyQ29sb3IiLCJnZXRQb2ludEJvcmRlcldpZHRoIiwicG9pbnRCb3JkZXJXaWR0aCIsImdldFBvaW50Um90YXRpb24iLCJwb2ludFJvdGF0aW9uIiwicG9pbnRSYWRpdXMiLCJwb2ludEhpdFJhZGl1cyIsImNhbGN1bGF0ZVBvaW50WSIsInNwbGluZUN1cnZlTW9ub3RvbmUiLCJzcGxpbmVDdXJ2ZSIsInByZXZpb3VzSXRlbSIsIm5leHRJdGVtIiwiY29udHJvbFBvaW50UHJldmlvdXNYIiwiY29udHJvbFBvaW50UHJldmlvdXNZIiwiY29udHJvbFBvaW50TmV4dFgiLCJjb250cm9sUG9pbnROZXh0WSIsImNhcEJlemllclBvaW50cyIsInBvaW50SG92ZXJCYWNrZ3JvdW5kQ29sb3IiLCJwb2ludEhvdmVyQm9yZGVyQ29sb3IiLCJwb2ludEhvdmVyQm9yZGVyV2lkdGgiLCJwb2ludEhvdmVyUmFkaXVzIiwiYW5nbGVMaW5lcyIsImNpcmN1bGFyIiwicG9pbnRMYWJlbHMiLCJ0aWNrcyIsImJlZ2luQXRaZXJvIiwicG9sYXJBcmVhIiwiX3N0YXJ0cyIsIl9hbmdsZXMiLCJfdXBkYXRlUmFkaXVzIiwiY291bnRWaXNpYmxlRWxlbWVudHMiLCJfY29tcHV0ZUFuZ2xlIiwieENlbnRlciIsInlDZW50ZXIiLCJnZXREaXN0YW5jZUZyb21DZW50ZXJGb3JWYWx1ZSIsImFuZ2xlIiwicmFkYXIiLCJfbG9vcCIsImdldFBvaW50UG9zaXRpb25Gb3JWYWx1ZSIsInNjYXR0ZXIiLCJjdXJyZW50U3RlcCIsIm51bVN0ZXBzIiwicmVuZGVyIiwib25BbmltYXRpb25Qcm9ncmVzcyIsIm9uQW5pbWF0aW9uQ29tcGxldGUiLCJvbkNvbXBsZXRlIiwiZnJhbWVEdXJhdGlvbiIsImFuaW1hdGlvbnMiLCJkcm9wRnJhbWVzIiwicmVxdWVzdCIsImFkZEFuaW1hdGlvbiIsImNhbmNlbEFuaW1hdGlvbiIsImZpbmRJbmRleCIsInJlcXVlc3RBbmltRnJhbWUiLCJzdGFydERpZ2VzdCIsImFkdmFuY2UiLCJpbnN0YW5jZXMiLCJjb25zdHJ1Y3QiLCJjb25maWdNZXJnZSIsImFjcXVpcmVDb250ZXh0IiwiYXNwZWN0UmF0aW8iLCJfYnVmZmVyZWRSZW5kZXIiLCJyZXRpbmFTY2FsZSIsImJpbmRFdmVudHMiLCJlbnN1cmVTY2FsZXNIYXZlSURzIiwiYnVpbGRPclVwZGF0ZVNjYWxlcyIsImluaXRUb29sVGlwIiwibWFpbnRhaW5Bc3BlY3RSYXRpbyIsImdldE1heGltdW1XaWR0aCIsImdldE1heGltdW1IZWlnaHQiLCJyZXNwb25zaXZlQW5pbWF0aW9uRHVyYXRpb24iLCJyZWR1Y2UiLCJkdHlwZSIsImRwb3NpdGlvbiIsImlzRGVmYXVsdCIsImdldFNjYWxlQ29uc3RydWN0b3IiLCJtZXJnZVRpY2tzT3B0aW9ucyIsImFkZFNjYWxlc1RvTGF5b3V0IiwiYnVpbGRPclVwZGF0ZUNvbnRyb2xsZXJzIiwiZGVzdHJveURhdGFzZXRNZXRhIiwidXBkYXRlSW5kZXgiLCJyZXNldEVsZW1lbnRzIiwidG9vbHRpcCIsImxhenkiLCJyZW1vdmVCb3giLCJfaW52YWxpZGF0ZSIsImJ1aWxkT3JVcGRhdGVFbGVtZW50cyIsInVwZGF0ZUxheW91dCIsInVwZGF0ZURhdGFzZXRzIiwibGFzdEFjdGl2ZSIsIl9idWZmZXJlZFJlcXVlc3QiLCJ1cGRhdGVEYXRhc2V0IiwibWV0YSIsImVmZmVjdHMiLCJib3hlcyIsImRyYXdEYXRhc2V0cyIsIl9kcmF3VG9vbHRpcCIsImRyYXdEYXRhc2V0IiwiZWFzaW5nVmFsdWUiLCJnZXRFbGVtZW50QXRFdmVudCIsIm1vZGVzIiwic2luZ2xlIiwiZ2V0RWxlbWVudHNBdEV2ZW50IiwiaW50ZXJzZWN0IiwiZ2V0RWxlbWVudHNBdFhBeGlzIiwiZ2V0RWxlbWVudHNBdEV2ZW50Rm9yTW9kZSIsImdldERhdGFzZXRBdEV2ZW50IiwiX21ldGEiLCJnZW5lcmF0ZUxlZ2VuZCIsInVuYmluZEV2ZW50cyIsInJlbGVhc2VDb250ZXh0IiwidG9CYXNlNjRJbWFnZSIsInRvRGF0YVVSTCIsIl9jaGFydEluc3RhbmNlIiwiX2xpc3RlbmVycyIsImV2ZW50SGFuZGxlciIsInVwZGF0ZUhvdmVyU3R5bGUiLCJoYW5kbGVFdmVudCIsIl9zdGFydCIsImFuaW1hdGlvbkR1cmF0aW9uIiwib25Ib3ZlciIsImFycmF5RXF1YWxzIiwiQ29udHJvbGxlciIsIl9jaGFydGpzIiwibGlzdGVuZXJzIiwiYWRkRWxlbWVudHMiLCJjcmVhdGVNZXRhRGF0YXNldCIsImNyZWF0ZU1ldGFEYXRhIiwiYWRkRWxlbWVudEFuZFJlc2V0IiwicmVzeW5jRWxlbWVudHMiLCJyZW1vdmVIb3ZlclN0eWxlIiwiaW5zZXJ0RWxlbWVudHMiLCJvbkRhdGFQdXNoIiwib25EYXRhUG9wIiwib25EYXRhU2hpZnQiLCJvbkRhdGFTcGxpY2UiLCJvbkRhdGFVbnNoaWZ0IiwiaW5oZXJpdHMiLCJfdmlldyIsInRvb2x0aXBQb3NpdGlvbiIsImhhc1ZhbHVlIiwiaXNOdW1iZXIiLCJfZ2V0UGFyZW50Tm9kZSIsIlBPU0lUSVZFX0lORklOSVRZIiwibWVyZ2VyIiwic2NhbGVNZXJnZSIsImdldFNjYWxlRGVmYXVsdHMiLCJfbWVyZ2VyIiwid2hlcmUiLCJmaW5kTmV4dFdoZXJlIiwiZmluZFByZXZpb3VzV2hlcmUiLCJhbG1vc3RFcXVhbHMiLCJhbG1vc3RXaG9sZSIsIk5FR0FUSVZFX0lORklOSVRZIiwic2lnbiIsImxvZzEwIiwibG9nIiwiTE9HMTBFIiwidG9SYWRpYW5zIiwidG9EZWdyZWVzIiwiZ2V0QW5nbGVGcm9tUG9pbnQiLCJkaXN0YW5jZSIsImRpc3RhbmNlQmV0d2VlblBvaW50cyIsImFsaWFzUGl4ZWwiLCJFUFNJTE9OIiwibW9kZWwiLCJkZWx0YUsiLCJtSyIsIm5pY2VOdW0iLCJ3ZWJraXRSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJtb3pSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJvUmVxdWVzdEFuaW1hdGlvbkZyYW1lIiwibXNSZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJnZXRSZWxhdGl2ZVBvc2l0aW9uIiwiZ2V0U3R5bGUiLCJjdXJyZW50RGV2aWNlUGl4ZWxSYXRpbyIsImdldENvbnN0cmFpbnRXaWR0aCIsImdldENvbnN0cmFpbnRIZWlnaHQiLCJfY2FsY3VsYXRlUGFkZGluZyIsImNsaWVudEhlaWdodCIsImN1cnJlbnRTdHlsZSIsImZvbnRTdHJpbmciLCJsb25nZXN0VGV4dCIsImdhcmJhZ2VDb2xsZWN0IiwiZm9udCIsIm1lYXN1cmVUZXh0IiwibnVtYmVyT2ZMYWJlbExpbmVzIiwiY29sb3IiLCJDYW52YXNHcmFkaWVudCIsImRlZmF1bHRDb2xvciIsIkNhbnZhc1BhdHRlcm4iLCJpblJhbmdlIiwiZ2V0Q2VudGVyUG9pbnQiLCJ4LWF4aXMiLCJuZWFyZXN0IiwiZ2V0QXJlYSIsImluWFJhbmdlIiwiaW5ZUmFuZ2UiLCJkZWZhdWx0Rm9udENvbG9yIiwiZGVmYXVsdEZvbnRGYW1pbHkiLCJkZWZhdWx0Rm9udFNpemUiLCJkZWZhdWx0Rm9udFN0eWxlIiwibGF5b3V0IiwiX3RtcEluZGV4XyIsIndlaWdodCIsImFkZEJveCIsImZ1bGxXaWR0aCIsImNvbmZpZ3VyZSIsIm1pblNpemUiLCJ0b1BhZGRpbmciLCJnZXRQYWRkaW5nIiwiX2NhY2hlSWQiLCJ1bnJlZ2lzdGVyIiwiZGVzY3JpcHRvcnMiLCJwbHVnaW4iLCIkcGx1Z2lucyIsImZvbnRTaXplIiwiZm9udFN0eWxlIiwiZm9udEZhbWlseSIsImZhbWlseSIsInRvTGluZUhlaWdodCIsImRyYXdCb3JkZXIiLCJkcmF3T25DaGFydEFyZWEiLCJkcmF3VGlja3MiLCJ0aWNrTWFya0xlbmd0aCIsInplcm9MaW5lV2lkdGgiLCJ6ZXJvTGluZUNvbG9yIiwiemVyb0xpbmVCb3JkZXJEYXNoIiwiemVyb0xpbmVCb3JkZXJEYXNoT2Zmc2V0Iiwic2NhbGVMYWJlbCIsImxhYmVsU3RyaW5nIiwibWluUm90YXRpb24iLCJtYXhSb3RhdGlvbiIsIm1pcnJvciIsImF1dG9Ta2lwIiwiYXV0b1NraXBQYWRkaW5nIiwibGFiZWxPZmZzZXQiLCJmb3JtYXR0ZXJzIiwibWlub3IiLCJtYWpvciIsInBhZGRpbmdMZWZ0IiwicGFkZGluZ1RvcCIsInBhZGRpbmdSaWdodCIsInBhZGRpbmdCb3R0b20iLCJfdGlja3MiLCJiZWZvcmVVcGRhdGUiLCJtYXhIZWlnaHQiLCJtYXJnaW5zIiwibG9uZ2VzdFRleHRDYWNoZSIsImJlZm9yZVNldERpbWVuc2lvbnMiLCJzZXREaW1lbnNpb25zIiwiYWZ0ZXJTZXREaW1lbnNpb25zIiwiYmVmb3JlRGF0YUxpbWl0cyIsImRldGVybWluZURhdGFMaW1pdHMiLCJhZnRlckRhdGFMaW1pdHMiLCJiZWZvcmVCdWlsZFRpY2tzIiwiYnVpbGRUaWNrcyIsImFmdGVyQnVpbGRUaWNrcyIsImJlZm9yZVRpY2tUb0xhYmVsQ29udmVyc2lvbiIsImNvbnZlcnRUaWNrc1RvTGFiZWxzIiwiYWZ0ZXJUaWNrVG9MYWJlbENvbnZlcnNpb24iLCJiZWZvcmVDYWxjdWxhdGVUaWNrUm90YXRpb24iLCJjYWxjdWxhdGVUaWNrUm90YXRpb24iLCJhZnRlckNhbGN1bGF0ZVRpY2tSb3RhdGlvbiIsImJlZm9yZUZpdCIsImZpdCIsImFmdGVyRml0IiwiYWZ0ZXJVcGRhdGUiLCJ1c2VyQ2FsbGJhY2siLCJsYWJlbFJvdGF0aW9uIiwiaXNGdWxsV2lkdGgiLCJsb25nZXN0TGFiZWxXaWR0aCIsImhhbmRsZU1hcmdpbnMiLCJnZXRMYWJlbEZvckluZGV4IiwiZ2V0VmFsdWVGb3JQaXhlbCIsImdldEJhc2VWYWx1ZSIsIl9hdXRvU2tpcCIsIm1heFRpY2tzTGltaXQiLCJmb250Q29sb3IiLCJ6ZXJvTGluZUluZGV4IiwidHgxIiwidHkxIiwidHgyIiwidHkyIiwieDEiLCJ5MSIsIngyIiwieTIiLCJsYWJlbFgiLCJsYWJlbFkiLCJnbFdpZHRoIiwiZ2xDb2xvciIsImdsQm9yZGVyRGFzaCIsImdsQm9yZGVyRGFzaE9mZnNldCIsInRleHRCYXNlbGluZSIsInRleHRBbGlnbiIsInNhdmUiLCJzZXRMaW5lRGFzaCIsImxpbmVEYXNoT2Zmc2V0IiwiYmVnaW5QYXRoIiwibW92ZVRvIiwibGluZVRvIiwic3Ryb2tlIiwicmVzdG9yZSIsInRyYW5zbGF0ZSIsImZpbGxUZXh0IiwiY29uc3RydWN0b3JzIiwicmVnaXN0ZXJTY2FsZVR5cGUiLCJ1cGRhdGVTY2FsZURlZmF1bHRzIiwidG9FeHBvbmVudGlhbCIsImxvZ2FyaXRobWljIiwieFBhZGRpbmciLCJ5UGFkZGluZyIsInhBbGlnbiIsInlBbGlnbiIsImJvZHlGb250Q29sb3IiLCJfYm9keUZvbnRGYW1pbHkiLCJib2R5Rm9udEZhbWlseSIsIl9ib2R5Rm9udFN0eWxlIiwiYm9keUZvbnRTdHlsZSIsIl9ib2R5QWxpZ24iLCJib2R5QWxpZ24iLCJib2R5Rm9udFNpemUiLCJib2R5U3BhY2luZyIsInRpdGxlRm9udENvbG9yIiwiX3RpdGxlRm9udEZhbWlseSIsInRpdGxlRm9udEZhbWlseSIsIl90aXRsZUZvbnRTdHlsZSIsInRpdGxlRm9udFN0eWxlIiwidGl0bGVGb250U2l6ZSIsIl90aXRsZUFsaWduIiwidGl0bGVBbGlnbiIsInRpdGxlU3BhY2luZyIsInRpdGxlTWFyZ2luQm90dG9tIiwiZm9vdGVyRm9udENvbG9yIiwiX2Zvb3RlckZvbnRGYW1pbHkiLCJmb290ZXJGb250RmFtaWx5IiwiX2Zvb3RlckZvbnRTdHlsZSIsImZvb3RlckZvbnRTdHlsZSIsImZvb3RlckZvbnRTaXplIiwiX2Zvb3RlckFsaWduIiwiZm9vdGVyQWxpZ24iLCJmb290ZXJTcGFjaW5nIiwiZm9vdGVyTWFyZ2luVG9wIiwiY2FyZXRTaXplIiwiY29ybmVyUmFkaXVzIiwibGVnZW5kQ29sb3JCYWNrZ3JvdW5kIiwibXVsdGlLZXlCYWNrZ3JvdW5kIiwiZGlzcGxheUNvbG9ycyIsImNhcmV0UGFkZGluZyIsImJlZm9yZVRpdGxlIiwiYWZ0ZXJUaXRsZSIsImJlZm9yZUJvZHkiLCJiZWZvcmVMYWJlbCIsImxhYmVsQ29sb3IiLCJsYWJlbFRleHRDb2xvciIsImFmdGVyTGFiZWwiLCJhZnRlckJvZHkiLCJiZWZvcmVGb290ZXIiLCJmb290ZXIiLCJhZnRlckZvb3RlciIsImF2ZXJhZ2UiLCJfbGFzdEFjdGl2ZSIsImdldFRpdGxlIiwiZ2V0QmVmb3JlQm9keSIsImdldEJvZHkiLCJsaW5lcyIsImdldEFmdGVyQm9keSIsImdldEZvb3RlciIsIl9hY3RpdmUiLCJjYXJldFgiLCJjYXJldFkiLCJfZXZlbnRQb3NpdGlvbiIsIml0ZW1Tb3J0IiwibGFiZWxDb2xvcnMiLCJsYWJlbFRleHRDb2xvcnMiLCJkYXRhUG9pbnRzIiwiZHJhd0NhcmV0IiwiZ2V0Q2FyZXRQb3NpdGlvbiIsIngzIiwieTMiLCJkcmF3VGl0bGUiLCJkcmF3Qm9keSIsImZpbGxSZWN0Iiwic3Ryb2tlUmVjdCIsImRyYXdGb290ZXIiLCJkcmF3QmFja2dyb3VuZCIsInF1YWRyYXRpY0N1cnZlVG8iLCJjbG9zZVBhdGgiLCJwb3NpdGlvbmVycyIsIjM3IiwiaW5MYWJlbFJhbmdlIiwibGluZUpvaW4iLCIzOCIsImxpbmVDYXAiLCIzOSIsImRyYXdQb2ludCIsIjQwIiwiNDIiLCJjbGVhclJlY3QiLCJyb3VuZGVkUmVjdCIsImFyY1RvIiwiU1FSVDIiLCJkcmF3SW1hZ2UiLCJjbGlwIiwiYmV6aWVyQ3VydmVUbyIsImRyYXdSb3VuZGVkUmVjdGFuZ2xlIiwiNDMiLCJpc09iamVjdCIsIl9tZXJnZXJJZiIsIm1lcmdlSWYiLCJfX3N1cGVyX18iLCJjYWxsQ2FsbGJhY2siLCJnZXRWYWx1ZU9yRGVmYXVsdCIsImdldFZhbHVlQXRJbmRleE9yRGVmYXVsdCIsIjQ0IiwiZWFzZUluUXVhZCIsImVhc2VPdXRRdWFkIiwiZWFzZUluT3V0UXVhZCIsImVhc2VJbkN1YmljIiwiZWFzZU91dEN1YmljIiwiZWFzZUluT3V0Q3ViaWMiLCJlYXNlSW5RdWFydCIsImVhc2VPdXRRdWFydCIsImVhc2VJbk91dFF1YXJ0IiwiZWFzZUluUXVpbnQiLCJlYXNlT3V0UXVpbnQiLCJlYXNlSW5PdXRRdWludCIsImVhc2VJblNpbmUiLCJlYXNlT3V0U2luZSIsImVhc2VJbk91dFNpbmUiLCJlYXNlSW5FeHBvIiwiZWFzZU91dEV4cG8iLCJlYXNlSW5PdXRFeHBvIiwiZWFzZUluQ2lyYyIsImVhc2VPdXRDaXJjIiwiZWFzZUluT3V0Q2lyYyIsImVhc2VJbkVsYXN0aWMiLCJhc2luIiwiZWFzZU91dEVsYXN0aWMiLCJlYXNlSW5PdXRFbGFzdGljIiwiZWFzZUluQmFjayIsImVhc2VPdXRCYWNrIiwiZWFzZUluT3V0QmFjayIsImVhc2VJbkJvdW5jZSIsImVhc2VPdXRCb3VuY2UiLCJlYXNlSW5PdXRCb3VuY2UiLCJlYXNpbmdFZmZlY3RzIiwiNDUiLCI0NyIsIjQ4IiwibmF0aXZlIiwicmVzaXplciIsIl9yZXNldCIsInJlbmRlclByb3h5IiwiYW5pbWF0aW9uTmFtZSIsInJlZmxvdyIsImNsYXNzTGlzdCIsInRvdWNoc3RhcnQiLCJ0b3VjaG1vdmUiLCJ0b3VjaGVuZCIsInBvaW50ZXJkb3duIiwicG9pbnRlcm1vdmUiLCJwb2ludGVydXAiLCJwb2ludGVyb3V0IiwicGFzc2l2ZSIsIl9lbmFibGVkIiwiX3N0eWxlIiwicHJveGllcyIsImFkZEV2ZW50IiwiZmlsbGVyIiwiNTEiLCI1MiIsIjUzIiwic2NhbGVCb3R0b20iLCJzY2FsZVRvcCIsInNjYWxlWmVybyIsImdldEJhc2VQb3NpdGlvbiIsInByb3BhZ2F0ZSIsImJvdW5kYXJ5IiwiYWZ0ZXJEYXRhc2V0c1VwZGF0ZSIsIiRmaWxsZXIiLCJtYXBwZXIiLCJiZWZvcmVEYXRhc2V0RHJhdyIsInVzZVBvaW50U3R5bGUiLCJib3hXaWR0aCIsImxpbmVEYXNoIiwibGVnZW5kSGl0Qm94ZXMiLCJkb3VnaG51dE1vZGUiLCJiZWZvcmVCdWlsZExhYmVscyIsImJ1aWxkTGFiZWxzIiwiYWZ0ZXJCdWlsZExhYmVscyIsImxlZ2VuZEl0ZW1zIiwibGluZVdpZHRocyIsImNvbHVtbldpZHRocyIsImJlZm9yZUluaXQiLCJhZnRlckV2ZW50IiwidGl0bGVCbG9jayIsImdldExhYmVscyIsInhMYWJlbHMiLCJ5TGFiZWxzIiwibWluSW5kZXgiLCJtYXhJbmRleCIsIkxpbmVhclNjYWxlQmFzZSIsInBvc2l0aXZlVmFsdWVzIiwibmVnYXRpdmVWYWx1ZXMiLCJyZWxhdGl2ZVBvaW50cyIsImhhbmRsZVRpY2tSYW5nZU9wdGlvbnMiLCJnZXRUaWNrTGltaXQiLCJoYW5kbGVEaXJlY3Rpb25hbENoYW5nZXMiLCJ0aWNrc0FzTnVtYmVycyIsInN1Z2dlc3RlZE1pbiIsInN1Z2dlc3RlZE1heCIsIm1heFRpY2tzIiwicHJlY2lzaW9uIiwic3RlcFNpemUiLCJmaXhlZFN0ZXBTaXplIiwibWluTm90WmVybyIsInRpY2tWYWx1ZXMiLCJfZ2V0Rmlyc3RUaWNrVmFsdWUiLCJzaG93TGFiZWxCYWNrZHJvcCIsImJhY2tkcm9wQ29sb3IiLCJiYWNrZHJvcFBhZGRpbmdZIiwiYmFja2Ryb3BQYWRkaW5nWCIsImRyYXdpbmdBcmVhIiwiX3BvaW50TGFiZWxTaXplcyIsImdldFBvaW50UG9zaXRpb24iLCJnZXRJbmRleEFuZ2xlIiwic2V0UmVkdWN0aW9ucyIsInNldENlbnRlclBvaW50IiwibG8iLCJoaSIsInBhcnNlciIsImNvbW1vbiIsInN0ZXBzIiwibWluVW5pdCIsInVuaXRTdGVwU2l6ZSIsIk1JTl9TQUZFX0lOVEVHRVIiLCJNQVhfU0FGRV9JTlRFR0VSIiwiX2hvcml6b250YWwiLCJfdGFibGUiLCJfdGltZXN0YW1wcyIsImdldExhYmVsQ2FwYWNpdHkiLCJib3VuZHMiLCJfdW5pdCIsIl9tYWpvclVuaXQiLCJkaXN0cmlidXRpb24iLCJfb2Zmc2V0cyIsIl9sYWJlbEZvcm1hdCIsInRvb2x0aXBGb3JtYXQiLCJ0aWNrRm9ybWF0RnVuY3Rpb24iLCJkaXNwbGF5Rm9ybWF0cyIsImdldFBpeGVsRm9yT2Zmc2V0IiwiZ2V0TGFiZWxXaWR0aCIsImRpc3BsYXlGb3JtYXQiLCJkb3QiLCJncmFkMyIsInBlcm0iLCJub2lzZSIsInhpbiIsInlpbiIsIm4wIiwibjEiLCJuMiIsImkxIiwiajEiLCJGMiIsIkcyIiwiWDAiLCJZMCIsIngwIiwieTAiLCJpaSIsImpqIiwiZ2kwIiwiZ2kxIiwiZ2kyIiwidDAiLCJ0MSIsInQyIiwic2VydmljZXNwYWdlcyIsIm9wZW5VUkwiLCJsaW5rIiwic2Nyb2xsQnkiLCJwb3BwZWQiLCJoaXN0b3J5IiwiaW5pdGlhbFVSTCIsInB1c2hTdGF0ZSIsImluaXRpYWxQb3AiLCJyYW5kb21DaGFyIiwicG9vbCIsImZwcyIsInN0ciIsImxldHRlcnMiLCJzaHVmZmxlIiwic3RyQ29weSIsIndhc3Zpc2l0IiwiYm9ic2F5SGkiLCJuYW1lQ29va2llIiwiYm9iQ2hhbmdlTmFtZSIsImJvYkNoZWNrTmFtZSIsImJvYk9wZW5mb3JtIiwiYm9iU2VuZEVucXVpcnkiLCJWYWxpZE1haWwiLCJteU1haWwiLCJWYWxpZFBob25lIiwibXlQaG9uZSIsImNvbnRhY3RzIiwiYm9iVGVsbE1lTW9yZSIsImJvYlBob25lT3JFbWFpbCJdLCJtYXBwaW5ncyI6IkFBOHJVQSxRQUFTQSxzQkFDRCxPQUFHQyxFQUFFLFlBQVlDLFNBQVMsbUJBSTFCRCxFQUFFLG1CQUFtQkUsWUFHckJDLGVBQWlCSCxFQUFFSSxVQUFVQyxZQUU3QkwsRUFBRSxZQUFZTSxTQUFTLGlCQUN2Qk4sRUFBRSxZQUFZTyxJQUFJLE9BQVFKLGdCQUUxQkgsRUFBRSxRQUFRSyxVQUFVLE9BRXBCTCxHQUFFLGtCQUFrQlEsVUFLNUIsUUFBU0MsMkJBQ1AsUUFBR1QsRUFBRSxZQUFZQyxTQUFTLG1CQUsxQkQsRUFBRSxtQkFBbUJVLFVBRXJCVixFQUFFLFFBQVFXLFlBQVksWUFDdEJYLEVBQUcsWUFBYVcsWUFBYSxjQUM3QlgsRUFBRSx3QkFBd0JZLFVBRXhCWixFQUFFLFdBQVdhLFdBQVdELGNBRXhCRSxZQUFXLFdBQ1BkLEVBQUUsWUFBWVcsWUFBWSxpQkFDMUJYLEVBQUUsWUFBWU8sSUFBSSxNQUFPLEtBQ3pCUCxFQUFFSSxVQUFVQyxVQUFVRixnQkFDdEJILEVBQUUsa0JBQWtCWSxXQUVyQixNQU1QLFFBQVNHLFlBRVBmLEVBQUUsUUFBUU0sU0FBUyxZQUNuQk4sRUFBRyxZQUFhTSxTQUFVLGNBQzFCTixFQUFFLHdCQUF3QlEsU0FFMUJULHFCQWlDRixRQUFTaUIsZ0JBQ1BqQixxQkFDQUMsRUFBRSxjQUFjUSxTQUdsQixRQUFTUyxhQUNQbEIscUJBQ0FDLEVBQUUsY0FBY1EsU0FnSWxCLFFBQVNVLGlCQVFQLFFBQVNDLEdBQVFDLEdBVWYsR0FONkIsZ0JBQXBCQyxJQUNKQyxPQUFPQyxTQUFTQyxVQUFVSixJQUM3QkssR0FBQUEsR0FJMkIsZ0JBQXBCSixJQUF3RCxlQUFwQkEsR0FDM0MsSUFBSUssRUFBSSxFQUFFQSxFQUFFTixFQUFpQk8sT0FBT0QsSUFDL0JKLE9BQU9DLFNBQVNDLFVBQVVKLEVBQWlCTSxL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QUFnQixHQUFHLElBQUksSUFBSUMsWUFBWSxJQUFJLElBQUksR0FBR0MsWUFBWSxJQUFJLEdBQUcsS0FBS0MsU0FBUyxJQUFJLEVBQUUsR0FBR0MsWUFBWSxJQUFJLElBQUksS0FBS0MsY0FBYyxJQUFJLElBQUksS0FBS0MsZUFBZSxHQUFHLEdBQUcsS0FBS0MsZUFBZSxHQUFHLEdBQUcsSUFBSUMsZUFBZSxHQUFHLEdBQUcsSUFBSUMsZUFBZSxFQUFFLElBQUksS0FBS0MsWUFBWSxJQUFJLEVBQUUsS0FBS0MsVUFBVSxJQUFJLEdBQUcsS0FBS0MsYUFBYSxFQUFFLElBQUksS0FBS0MsU0FBUyxJQUFJLElBQUksS0FBS0MsU0FBUyxJQUFJLElBQUksS0FBS0MsWUFBWSxHQUFHLElBQUksS0FBS0MsV0FBVyxJQUFJLEdBQUcsSUFBSUMsYUFBYSxJQUFJLElBQUksS0FBS0MsYUFBYSxHQUFHLElBQUksSUFBSUMsU0FBUyxJQUFJLEVBQUUsS0FBS0MsV0FBVyxJQUFJLElBQUksS0FBS0MsWUFBWSxJQUFJLElBQUksS0FBS0MsTUFBTSxJQUFJLElBQUksR0FBR0MsV0FBVyxJQUFJLElBQUksSUFBSUMsTUFBTSxJQUFJLElBQUksS0FBS3hJLE9BQU8sRUFBRSxJQUFJLEdBQUd5SSxhQUFhLElBQUksSUFBSSxJQUFJQyxNQUFNLElBQUksSUFBSSxLQUFLQyxVQUFVLElBQUksSUFBSSxLQUFLQyxTQUFTLElBQUksSUFBSSxLQUFLQyxXQUFXLElBQUksR0FBRyxJQUFJQyxRQUFRLEdBQUcsRUFBRSxLQUFLQyxPQUFPLElBQUksSUFBSSxLQUFLQyxPQUFPLElBQUksSUFBSSxLQUFLQyxVQUFVLElBQUksSUFBSSxLQUFLQyxlQUFlLElBQUksSUFBSSxLQUFLQyxXQUFXLElBQUksSUFBSSxHQUFHQyxjQUFjLElBQUksSUFBSSxLQUFLQyxXQUFXLElBQUksSUFBSSxLQUFLQyxZQUFZLElBQUksSUFBSSxLQUFLQyxXQUFXLElBQUksSUFBSSxLQUFLQyxzQkFBc0IsSUFBSSxJQUFJLEtBQUtDLFdBQVcsSUFBSSxJQUFJ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VSxFQUFFLEVBQUUsS0FBS0MsVUFBVSxFQUFFLElBQUksS0FBS0MsZUFBZSxJQUFJLElBQUksSUFBSUMsVUFBVSxJQUFJLElBQUksS0FBS0MsV0FBVyxFQUFFLElBQUksR0FBR0MsVUFBVSxJQUFJLElBQUksS0FBS0MsV0FBVyxJQUFJLElBQUksS0FBS0MsYUFBYSxJQUFJLEVBQUUsS0FBS0MsZ0JBQWdCLEdBQUcsSUFBSSxJQUFJQyxZQUFZLElBQUksSUFBSSxHQUFHQyxZQUFZLElBQUksR0FBRyxLQUFLQyxTQUFTLElBQUksRUFBRSxHQUFHQyxZQUFZLElBQUksSUFBSSxLQUFLQyxjQUFjLElBQUksSUFBSSxLQUFLQyxlQUFlLEdBQUcsR0FBRyxLQUFLQyxlQUFlLEdBQUcsR0FBRyxJQUFJQyxlQUFlLEdBQUcsR0FBRyxJQUFJQyxlQUFlLEVBQUUsSUFBSSxLQUFLQyxZQUFZLElBQUksRUFBRSxLQUFLQyxVQUFVLElBQUksR0FBRyxLQUFLQyxhQUFhLEVBQUUsSUFBSSxLQUFLQyxTQUFTLElBQUksSUFBSSxLQUFLQyxTQUFTLElBQUksSUFBSSxLQUFLQyxZQUFZLEdBQUcsSUFBSSxLQUFLQyxXQUFXLElBQUksR0FBRyxJQUFJQyxhQUFhLElBQUksSUFBSSxLQUFLQyxhQUFhLEdBQUcsSUFBSSxJQUFJQyxTQUFTLElBQUksRUFBRSxLQUFLQyxXQUFXLElBQUksSUFBSSxLQUFLQyxZQUFZLElBQUksSUFBSSxLQUFLQyxNQUFNLElBQUksSUFBSSxHQUFHQyxXQUFXLElBQUksSUFBSSxJQUFJQyxNQUFNLElBQUksSUFBSSxLQUFLeEksT0FBTyxFQUFFLElBQUksR0FBR3lJLGFBQWEsSUFBSSxJQUFJLElBQUlDLE1BQU0sSUFBSSxJQUFJLEtBQUtDLFVBQVUsSUFBSSxJQUFJLEtBQUtDLFNBQVMsSUFBSSxJQUFJLEtBQUtDLFdBQVcsSUFBSSxHQUFHLElBQUlDLFFBQVEsR0FBRyxFQUFFLEtBQUtDLE9BQU8sSUFBSSxJQUFJLEtBQUtDLE9BQU8sSUFBSSxJQUFJLEtBQUtDLFVBQVUsSUFBSSxJQUFJLEtBQUtDLGVBQWUsSUFBSSxJQUFJLEtBQUtDLFdBQVcsSUFBSSxJQUFJLEdBQUdDLGNBQWMsSUFBSSxJQUFJLEtBQUtDLFdBQVcsSUFBSSxJQUFJLEtBQUtDLFlBQVksSUFBSSxJQUFJLEtBQUtDLFdBQVcsSUFBSSxJQUFJLEtBQUtDLHNCQUFzQixJQUFJLElBQUksS0FBS0MsV0FBVyxJQUFJLElBQUksS0FBS0MsWUFBWSxJQUFJLElBQUksS0FBS0MsV0FBVyxJQUFJLElBQUksS0FBS0MsV0FBVyxJQUFJLElBQUksS0FBS0MsYUFBYSxJQUFJLElBQUksS0FBS0MsZUFBZSxHQUFHLElBQUksS0FBS0MsY0FBYyxJQUFJLElBQUksS0FBS0MsZ0JBQWdCLElBQUksSUFBSSxLQUFLQyxnQkFBZ0IsSUFBSSxJQUFJLEtBQUtDLGdCQUFnQixJQUFJLElBQUksS0FBS0MsYUFBYSxJQUFJLElBQUksS0FBS0MsTUFBTSxFQUFFLElBQUksR0FBR0MsV0FBVyxHQUFHLElBQUksSUFBSUMsT0FBTyxJQUFJLElBQUksS0FBS2hLLFNBQVMsSUFBSSxFQUFFLEtBQUtpSyxRQUFRLElBQUksRUFBRSxHQUFHQyxrQkFBa0IsSUFBSSxJQUFJLEtBQUtDLFlBQVksRUFBRSxFQUFFLEtBQUtDLGNBQWMsSUFBSSxHQUFHLEtBQUtDLGNBQWMsSUFBSSxJQUFJLEtBQUtDLGdCQUFnQixHQUFHLElBQUksS0FBS0MsaUJBQWlCLElBQUksSUFBSSxLQUFLQyxtQkFBbUIsRUFBRSxJQUFJLEtBQUtDLGlCQUFpQixHQUFHLElBQUksS0FBS0MsaUJBQWlCLElBQUksR0FBRyxLQUFLQyxjQUFjLEdBQUcsR0FBRyxLQUFLQyxXQUFXLElBQUksSUFBSSxLQUFLQyxXQUFXLElBQUksSUFBSSxLQUFLQyxVQUFVLElBQUksSUFBSSxLQUFLQyxhQUFhLElBQUksSUFBSSxLQUFLQyxNQUFNLEVBQUUsRUFBRSxLQUFLQyxTQUFTLElBQUksSUFBSSxLQUFLQyxPQUFPLElBQUksSUFBSSxHQUFHQyxXQUFXLElBQUksSUFBSSxJQUFJQyxRQUFRLElBQUksSUFBSSxHQUFHQyxXQUFXLElBQUksR0FBRyxHQUFHQyxRQUFRLElBQUksSUFBSSxLQUFLQyxlQUFlLElBQUksSUFBSSxLQUFLQyxXQUFXLElBQUksSUFBSSxLQUFLQyxlQUFlLElBQUksSUFBSSxLQUFLQyxlQUFlLElBQUksSUFBSSxLQUFLQyxZQUFZLElBQUksSUFBSSxLQUFLQyxXQUFXLElBQUksSUFBSSxLQUFLQyxNQUFNLElBQUksSUFBSSxJQUFJQyxNQUFNLElBQUksSUFBSSxLQUFLQyxNQUFNLElBQUksSUFBSSxLQUFLQyxZQUFZLElBQUksSUFBSSxLQUFLQyxRQUFRLElBQUksRUFBRSxLQUFLQyxlQUFlLElBQUksR0FBRyxLQUFLdE4sS0FBSyxJQUFJLEVBQUUsR0FBR3VOLFdBQVcsSUFBSSxJQUFJLEtBQUtDLFdBQVcsR0FBRyxJQUFJLEtBQUtDLGFBQWEsSUFBSSxHQUFHLElBQUlDLFFBQVEsSUFBSSxJQUFJLEtBQUtDLFlBQVksSUFBSSxJQUFJLElBQUlDLFVBQVUsR0FBRyxJQUFJLElBQUlDLFVBQVUsSUFBSSxJQUFJLEtBQUtDLFFBQVEsSUFBSSxHQUFHLElBQUlDLFFBQVEsSUFBSSxJQUFJLEtBQUtDLFNBQVMsSUFBSSxJQUFJLEtBQUtDLFdBQVcsSUFBSSxHQUFHLEtBQUtDLFdBQVcsSUFBSSxJQUFJLEtBQUtDLFdBQVcsSUFBSSxJQUFJLEtBQUtDLE1BQU0sSUFBSSxJQUFJLEtBQUtDLGFBQWEsRUFBRSxJQUFJLEtBQUtDLFdBQVcsR0FBRyxJQUFJLEtBQUtDLEtBQUssSUFBSSxJQUFJLEtBQUtDLE1BQU0sRUFBRSxJQUFJLEtBQUtDLFNBQVMsSUFBSSxJQUFJLEtBQUtDLFFBQVEsSUFBSSxHQUFHLElBQUlDLFdBQVcsR0FBRyxJQUFJLEtBQUtDLFFBQVEsSUFBSSxJQUFJLEtBQUtDLE9BQU8sSUFBSSxJQUFJLEtBQUtDLE9BQU8sSUFBSSxJQUFJLEtBQUtDLFlBQVksSUFBSSxJQUFJLEtBQUsxTixRQUFRLElBQUksSUFBSSxHQUFHMk4sYUFBYSxJQUFJLElBQUksVUFBVU0sR0FBRyxT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TUFFbkNqUixPQUFPLFdBRVAxRCxFQUFFLG1CQUFtQjhELFFBQVFELE9BQU8sd1hBT3RDTyxPQUNHdTVGLFdBQ0FHLGVBQ0FDLGNBQ0FPLGdCQUNBQyxrQkFDQVAsaUJBQ0FILGdCQWtDSDc5RixFQUFFSSxVQUFVZ1AsR0FBRyxRQUFRLGlCQUFpQixXQUN0QzlLLGFBMkJGdEUsRUFBRUksVUFBVWlKLE1BQU0iLCJmaWxlIjoibWFpbi1taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxuICogVGhpcmQgcGFydHlcbiAqL1xuLyohXG4gKiBqUXVlcnkgSmF2YVNjcmlwdCBMaWJyYXJ5IHYzLjMuMVxuICogaHR0cHM6Ly9qcXVlcnkuY29tL1xuICpcbiAqIEluY2x1ZGVzIFNpenpsZS5qc1xuICogaHR0cHM6Ly9zaXp6bGVqcy5jb20vXG4gKlxuICogQ29weXJpZ2h0IEpTIEZvdW5kYXRpb24gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKiBodHRwczovL2pxdWVyeS5vcmcvbGljZW5zZVxuICpcbiAqIERhdGU6IDIwMTgtMDEtMjBUMTc6MjRaXG4gKi9cbiggZnVuY3Rpb24oIGdsb2JhbCwgZmFjdG9yeSApIHtcblxuXHRcInVzZSBzdHJpY3RcIjtcblxuXHRpZiAoIHR5cGVvZiBtb2R1bGUgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIG1vZHVsZS5leHBvcnRzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gRm9yIENvbW1vbkpTIGFuZCBDb21tb25KUy1saWtlIGVudmlyb25tZW50cyB3aGVyZSBhIHByb3BlciBgd2luZG93YFxuXHRcdC8vIGlzIHByZXNlbnQsIGV4ZWN1dGUgdGhlIGZhY3RvcnkgYW5kIGdldCBqUXVlcnkuXG5cdFx0Ly8gRm9yIGVudmlyb25tZW50cyB0aGF0IGRvIG5vdCBoYXZlIGEgYHdpbmRvd2Agd2l0aCBhIGBkb2N1bWVudGBcblx0XHQvLyAoc3VjaCBhcyBOb2RlLmpzKSwgZXhwb3NlIGEgZmFjdG9yeSBhcyBtb2R1bGUuZXhwb3J0cy5cblx0XHQvLyBUaGlzIGFjY2VudHVhdGVzIHRoZSBuZWVkIGZvciB0aGUgY3JlYXRpb24gb2YgYSByZWFsIGB3aW5kb3dgLlxuXHRcdC8vIGUuZy4gdmFyIGpRdWVyeSA9IHJlcXVpcmUoXCJqcXVlcnlcIikod2luZG93KTtcblx0XHQvLyBTZWUgdGlja2V0ICMxNDU0OSBmb3IgbW9yZSBpbmZvLlxuXHRcdG1vZHVsZS5leHBvcnRzID0gZ2xvYmFsLmRvY3VtZW50ID9cblx0XHRcdGZhY3RvcnkoIGdsb2JhbCwgdHJ1ZSApIDpcblx0XHRcdGZ1bmN0aW9uKCB3ICkge1xuXHRcdFx0XHRpZiAoICF3LmRvY3VtZW50ICkge1xuXHRcdFx0XHRcdHRocm93IG5ldyBFcnJvciggXCJqUXVlcnkgcmVxdWlyZXMgYSB3aW5kb3cgd2l0aCBhIGRvY3VtZW50XCIgKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gZmFjdG9yeSggdyApO1xuXHRcdFx0fTtcblx0fSBlbHNlIHtcblx0XHRmYWN0b3J5KCBnbG9iYWwgKTtcblx0fVxuXG4vLyBQYXNzIHRoaXMgaWYgd2luZG93IGlzIG5vdCBkZWZpbmVkIHlldFxufSApKCB0eXBlb2Ygd2luZG93ICE9PSBcInVuZGVmaW5lZFwiID8gd2luZG93IDogdGhpcywgZnVuY3Rpb24oIHdpbmRvdywgbm9HbG9iYWwgKSB7XG5cbi8vIEVkZ2UgPD0gMTIgLSAxMyssIEZpcmVmb3ggPD0xOCAtIDQ1KywgSUUgMTAgLSAxMSwgU2FmYXJpIDUuMSAtIDkrLCBpT1MgNiAtIDkuMVxuLy8gdGhyb3cgZXhjZXB0aW9ucyB3aGVuIG5vbi1zdHJpY3QgY29kZSAoZS5nLiwgQVNQLk5FVCA0LjUpIGFjY2Vzc2VzIHN0cmljdCBtb2RlXG4vLyBhcmd1bWVudHMuY2FsbGVlLmNhbGxlciAodHJhYy0xMzMzNSkuIEJ1dCBhcyBvZiBqUXVlcnkgMy4wICgyMDE2KSwgc3RyaWN0IG1vZGUgc2hvdWxkIGJlIGNvbW1vblxuLy8gZW5vdWdoIHRoYXQgYWxsIHN1Y2ggYXR0ZW1wdHMgYXJlIGd1YXJkZWQgaW4gYSB0cnkgYmxvY2suXG5cInVzZSBzdHJpY3RcIjtcblxudmFyIGFyciA9IFtdO1xuXG52YXIgZG9jdW1lbnQgPSB3aW5kb3cuZG9jdW1lbnQ7XG5cbnZhciBnZXRQcm90byA9IE9iamVjdC5nZXRQcm90b3R5cGVPZjtcblxudmFyIHNsaWNlID0gYXJyLnNsaWNlO1xuXG52YXIgY29uY2F0ID0gYXJyLmNvbmNhdDtcblxudmFyIHB1c2ggPSBhcnIucHVzaDtcblxudmFyIGluZGV4T2YgPSBhcnIuaW5kZXhPZjtcblxudmFyIGNsYXNzMnR5cGUgPSB7fTtcblxudmFyIHRvU3RyaW5nID0gY2xhc3MydHlwZS50b1N0cmluZztcblxudmFyIGhhc093biA9IGNsYXNzMnR5cGUuaGFzT3duUHJvcGVydHk7XG5cbnZhciBmblRvU3RyaW5nID0gaGFzT3duLnRvU3RyaW5nO1xuXG52YXIgT2JqZWN0RnVuY3Rpb25TdHJpbmcgPSBmblRvU3RyaW5nLmNhbGwoIE9iamVjdCApO1xuXG52YXIgc3VwcG9ydCA9IHt9O1xuXG52YXIgaXNGdW5jdGlvbiA9IGZ1bmN0aW9uIGlzRnVuY3Rpb24oIG9iaiApIHtcblxuICAgICAgLy8gU3VwcG9ydDogQ2hyb21lIDw9NTcsIEZpcmVmb3ggPD01MlxuICAgICAgLy8gSW4gc29tZSBicm93c2VycywgdHlwZW9mIHJldHVybnMgXCJmdW5jdGlvblwiIGZvciBIVE1MIDxvYmplY3Q+IGVsZW1lbnRzXG4gICAgICAvLyAoaS5lLiwgYHR5cGVvZiBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcIm9iamVjdFwiICkgPT09IFwiZnVuY3Rpb25cImApLlxuICAgICAgLy8gV2UgZG9uJ3Qgd2FudCB0byBjbGFzc2lmeSAqYW55KiBET00gbm9kZSBhcyBhIGZ1bmN0aW9uLlxuICAgICAgcmV0dXJuIHR5cGVvZiBvYmogPT09IFwiZnVuY3Rpb25cIiAmJiB0eXBlb2Ygb2JqLm5vZGVUeXBlICE9PSBcIm51bWJlclwiO1xuICB9O1xuXG5cbnZhciBpc1dpbmRvdyA9IGZ1bmN0aW9uIGlzV2luZG93KCBvYmogKSB7XG5cdFx0cmV0dXJuIG9iaiAhPSBudWxsICYmIG9iaiA9PT0gb2JqLndpbmRvdztcblx0fTtcblxuXG5cblxuXHR2YXIgcHJlc2VydmVkU2NyaXB0QXR0cmlidXRlcyA9IHtcblx0XHR0eXBlOiB0cnVlLFxuXHRcdHNyYzogdHJ1ZSxcblx0XHRub01vZHVsZTogdHJ1ZVxuXHR9O1xuXG5cdGZ1bmN0aW9uIERPTUV2YWwoIGNvZGUsIGRvYywgbm9kZSApIHtcblx0XHRkb2MgPSBkb2MgfHwgZG9jdW1lbnQ7XG5cblx0XHR2YXIgaSxcblx0XHRcdHNjcmlwdCA9IGRvYy5jcmVhdGVFbGVtZW50KCBcInNjcmlwdFwiICk7XG5cblx0XHRzY3JpcHQudGV4dCA9IGNvZGU7XG5cdFx0aWYgKCBub2RlICkge1xuXHRcdFx0Zm9yICggaSBpbiBwcmVzZXJ2ZWRTY3JpcHRBdHRyaWJ1dGVzICkge1xuXHRcdFx0XHRpZiAoIG5vZGVbIGkgXSApIHtcblx0XHRcdFx0XHRzY3JpcHRbIGkgXSA9IG5vZGVbIGkgXTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0XHRkb2MuaGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0ICkucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggc2NyaXB0ICk7XG5cdH1cblxuXG5mdW5jdGlvbiB0b1R5cGUoIG9iaiApIHtcblx0aWYgKCBvYmogPT0gbnVsbCApIHtcblx0XHRyZXR1cm4gb2JqICsgXCJcIjtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seSAoZnVuY3Rpb25pc2ggUmVnRXhwKVxuXHRyZXR1cm4gdHlwZW9mIG9iaiA9PT0gXCJvYmplY3RcIiB8fCB0eXBlb2Ygb2JqID09PSBcImZ1bmN0aW9uXCIgP1xuXHRcdGNsYXNzMnR5cGVbIHRvU3RyaW5nLmNhbGwoIG9iaiApIF0gfHwgXCJvYmplY3RcIiA6XG5cdFx0dHlwZW9mIG9iajtcbn1cbi8qIGdsb2JhbCBTeW1ib2wgKi9cbi8vIERlZmluaW5nIHRoaXMgZ2xvYmFsIGluIC5lc2xpbnRyYy5qc29uIHdvdWxkIGNyZWF0ZSBhIGRhbmdlciBvZiB1c2luZyB0aGUgZ2xvYmFsXG4vLyB1bmd1YXJkZWQgaW4gYW5vdGhlciBwbGFjZSwgaXQgc2VlbXMgc2FmZXIgdG8gZGVmaW5lIGdsb2JhbCBvbmx5IGZvciB0aGlzIG1vZHVsZVxuXG5cblxudmFyXG5cdHZlcnNpb24gPSBcIjMuMy4xXCIsXG5cblx0Ly8gRGVmaW5lIGEgbG9jYWwgY29weSBvZiBqUXVlcnlcblx0alF1ZXJ5ID0gZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xuXG5cdFx0Ly8gVGhlIGpRdWVyeSBvYmplY3QgaXMgYWN0dWFsbHkganVzdCB0aGUgaW5pdCBjb25zdHJ1Y3RvciAnZW5oYW5jZWQnXG5cdFx0Ly8gTmVlZCBpbml0IGlmIGpRdWVyeSBpcyBjYWxsZWQgKGp1c3QgYWxsb3cgZXJyb3IgdG8gYmUgdGhyb3duIGlmIG5vdCBpbmNsdWRlZClcblx0XHRyZXR1cm4gbmV3IGpRdWVyeS5mbi5pbml0KCBzZWxlY3RvciwgY29udGV4dCApO1xuXHR9LFxuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seVxuXHQvLyBNYWtlIHN1cmUgd2UgdHJpbSBCT00gYW5kIE5CU1Bcblx0cnRyaW0gPSAvXltcXHNcXHVGRUZGXFx4QTBdK3xbXFxzXFx1RkVGRlxceEEwXSskL2c7XG5cbmpRdWVyeS5mbiA9IGpRdWVyeS5wcm90b3R5cGUgPSB7XG5cblx0Ly8gVGhlIGN1cnJlbnQgdmVyc2lvbiBvZiBqUXVlcnkgYmVpbmcgdXNlZFxuXHRqcXVlcnk6IHZlcnNpb24sXG5cblx0Y29uc3RydWN0b3I6IGpRdWVyeSxcblxuXHQvLyBUaGUgZGVmYXVsdCBsZW5ndGggb2YgYSBqUXVlcnkgb2JqZWN0IGlzIDBcblx0bGVuZ3RoOiAwLFxuXG5cdHRvQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzbGljZS5jYWxsKCB0aGlzICk7XG5cdH0sXG5cblx0Ly8gR2V0IHRoZSBOdGggZWxlbWVudCBpbiB0aGUgbWF0Y2hlZCBlbGVtZW50IHNldCBPUlxuXHQvLyBHZXQgdGhlIHdob2xlIG1hdGNoZWQgZWxlbWVudCBzZXQgYXMgYSBjbGVhbiBhcnJheVxuXHRnZXQ6IGZ1bmN0aW9uKCBudW0gKSB7XG5cblx0XHQvLyBSZXR1cm4gYWxsIHRoZSBlbGVtZW50cyBpbiBhIGNsZWFuIGFycmF5XG5cdFx0aWYgKCBudW0gPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiBzbGljZS5jYWxsKCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0Ly8gUmV0dXJuIGp1c3QgdGhlIG9uZSBlbGVtZW50IGZyb20gdGhlIHNldFxuXHRcdHJldHVybiBudW0gPCAwID8gdGhpc1sgbnVtICsgdGhpcy5sZW5ndGggXSA6IHRoaXNbIG51bSBdO1xuXHR9LFxuXG5cdC8vIFRha2UgYW4gYXJyYXkgb2YgZWxlbWVudHMgYW5kIHB1c2ggaXQgb250byB0aGUgc3RhY2tcblx0Ly8gKHJldHVybmluZyB0aGUgbmV3IG1hdGNoZWQgZWxlbWVudCBzZXQpXG5cdHB1c2hTdGFjazogZnVuY3Rpb24oIGVsZW1zICkge1xuXG5cdFx0Ly8gQnVpbGQgYSBuZXcgalF1ZXJ5IG1hdGNoZWQgZWxlbWVudCBzZXRcblx0XHR2YXIgcmV0ID0galF1ZXJ5Lm1lcmdlKCB0aGlzLmNvbnN0cnVjdG9yKCksIGVsZW1zICk7XG5cblx0XHQvLyBBZGQgdGhlIG9sZCBvYmplY3Qgb250byB0aGUgc3RhY2sgKGFzIGEgcmVmZXJlbmNlKVxuXHRcdHJldC5wcmV2T2JqZWN0ID0gdGhpcztcblxuXHRcdC8vIFJldHVybiB0aGUgbmV3bHktZm9ybWVkIGVsZW1lbnQgc2V0XG5cdFx0cmV0dXJuIHJldDtcblx0fSxcblxuXHQvLyBFeGVjdXRlIGEgY2FsbGJhY2sgZm9yIGV2ZXJ5IGVsZW1lbnQgaW4gdGhlIG1hdGNoZWQgc2V0LlxuXHRlYWNoOiBmdW5jdGlvbiggY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5lYWNoKCB0aGlzLCBjYWxsYmFjayApO1xuXHR9LFxuXG5cdG1hcDogZnVuY3Rpb24oIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggalF1ZXJ5Lm1hcCggdGhpcywgZnVuY3Rpb24oIGVsZW0sIGkgKSB7XG5cdFx0XHRyZXR1cm4gY2FsbGJhY2suY2FsbCggZWxlbSwgaSwgZWxlbSApO1xuXHRcdH0gKSApO1xuXHR9LFxuXG5cdHNsaWNlOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHNsaWNlLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKSApO1xuXHR9LFxuXG5cdGZpcnN0OiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gdGhpcy5lcSggMCApO1xuXHR9LFxuXG5cdGxhc3Q6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLmVxKCAtMSApO1xuXHR9LFxuXG5cdGVxOiBmdW5jdGlvbiggaSApIHtcblx0XHR2YXIgbGVuID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRqID0gK2kgKyAoIGkgPCAwID8gbGVuIDogMCApO1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggaiA+PSAwICYmIGogPCBsZW4gPyBbIHRoaXNbIGogXSBdIDogW10gKTtcblx0fSxcblxuXHRlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLnByZXZPYmplY3QgfHwgdGhpcy5jb25zdHJ1Y3RvcigpO1xuXHR9LFxuXG5cdC8vIEZvciBpbnRlcm5hbCB1c2Ugb25seS5cblx0Ly8gQmVoYXZlcyBsaWtlIGFuIEFycmF5J3MgbWV0aG9kLCBub3QgbGlrZSBhIGpRdWVyeSBtZXRob2QuXG5cdHB1c2g6IHB1c2gsXG5cdHNvcnQ6IGFyci5zb3J0LFxuXHRzcGxpY2U6IGFyci5zcGxpY2Vcbn07XG5cbmpRdWVyeS5leHRlbmQgPSBqUXVlcnkuZm4uZXh0ZW5kID0gZnVuY3Rpb24oKSB7XG5cdHZhciBvcHRpb25zLCBuYW1lLCBzcmMsIGNvcHksIGNvcHlJc0FycmF5LCBjbG9uZSxcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIDAgXSB8fCB7fSxcblx0XHRpID0gMSxcblx0XHRsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoLFxuXHRcdGRlZXAgPSBmYWxzZTtcblxuXHQvLyBIYW5kbGUgYSBkZWVwIGNvcHkgc2l0dWF0aW9uXG5cdGlmICggdHlwZW9mIHRhcmdldCA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0ZGVlcCA9IHRhcmdldDtcblxuXHRcdC8vIFNraXAgdGhlIGJvb2xlYW4gYW5kIHRoZSB0YXJnZXRcblx0XHR0YXJnZXQgPSBhcmd1bWVudHNbIGkgXSB8fCB7fTtcblx0XHRpKys7XG5cdH1cblxuXHQvLyBIYW5kbGUgY2FzZSB3aGVuIHRhcmdldCBpcyBhIHN0cmluZyBvciBzb21ldGhpbmcgKHBvc3NpYmxlIGluIGRlZXAgY29weSlcblx0aWYgKCB0eXBlb2YgdGFyZ2V0ICE9PSBcIm9iamVjdFwiICYmICFpc0Z1bmN0aW9uKCB0YXJnZXQgKSApIHtcblx0XHR0YXJnZXQgPSB7fTtcblx0fVxuXG5cdC8vIEV4dGVuZCBqUXVlcnkgaXRzZWxmIGlmIG9ubHkgb25lIGFyZ3VtZW50IGlzIHBhc3NlZFxuXHRpZiAoIGkgPT09IGxlbmd0aCApIHtcblx0XHR0YXJnZXQgPSB0aGlzO1xuXHRcdGktLTtcblx0fVxuXG5cdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXG5cdFx0Ly8gT25seSBkZWFsIHdpdGggbm9uLW51bGwvdW5kZWZpbmVkIHZhbHVlc1xuXHRcdGlmICggKCBvcHRpb25zID0gYXJndW1lbnRzWyBpIF0gKSAhPSBudWxsICkge1xuXG5cdFx0XHQvLyBFeHRlbmQgdGhlIGJhc2Ugb2JqZWN0XG5cdFx0XHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0XHRcdHNyYyA9IHRhcmdldFsgbmFtZSBdO1xuXHRcdFx0XHRjb3B5ID0gb3B0aW9uc1sgbmFtZSBdO1xuXG5cdFx0XHRcdC8vIFByZXZlbnQgbmV2ZXItZW5kaW5nIGxvb3Bcblx0XHRcdFx0aWYgKCB0YXJnZXQgPT09IGNvcHkgKSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBSZWN1cnNlIGlmIHdlJ3JlIG1lcmdpbmcgcGxhaW4gb2JqZWN0cyBvciBhcnJheXNcblx0XHRcdFx0aWYgKCBkZWVwICYmIGNvcHkgJiYgKCBqUXVlcnkuaXNQbGFpbk9iamVjdCggY29weSApIHx8XG5cdFx0XHRcdFx0KCBjb3B5SXNBcnJheSA9IEFycmF5LmlzQXJyYXkoIGNvcHkgKSApICkgKSB7XG5cblx0XHRcdFx0XHRpZiAoIGNvcHlJc0FycmF5ICkge1xuXHRcdFx0XHRcdFx0Y29weUlzQXJyYXkgPSBmYWxzZTtcblx0XHRcdFx0XHRcdGNsb25lID0gc3JjICYmIEFycmF5LmlzQXJyYXkoIHNyYyApID8gc3JjIDogW107XG5cblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0Y2xvbmUgPSBzcmMgJiYgalF1ZXJ5LmlzUGxhaW5PYmplY3QoIHNyYyApID8gc3JjIDoge307XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gTmV2ZXIgbW92ZSBvcmlnaW5hbCBvYmplY3RzLCBjbG9uZSB0aGVtXG5cdFx0XHRcdFx0dGFyZ2V0WyBuYW1lIF0gPSBqUXVlcnkuZXh0ZW5kKCBkZWVwLCBjbG9uZSwgY29weSApO1xuXG5cdFx0XHRcdC8vIERvbid0IGJyaW5nIGluIHVuZGVmaW5lZCB2YWx1ZXNcblx0XHRcdFx0fSBlbHNlIGlmICggY29weSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRcdHRhcmdldFsgbmFtZSBdID0gY29weTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgbW9kaWZpZWQgb2JqZWN0XG5cdHJldHVybiB0YXJnZXQ7XG59O1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gVW5pcXVlIGZvciBlYWNoIGNvcHkgb2YgalF1ZXJ5IG9uIHRoZSBwYWdlXG5cdGV4cGFuZG86IFwialF1ZXJ5XCIgKyAoIHZlcnNpb24gKyBNYXRoLnJhbmRvbSgpICkucmVwbGFjZSggL1xcRC9nLCBcIlwiICksXG5cblx0Ly8gQXNzdW1lIGpRdWVyeSBpcyByZWFkeSB3aXRob3V0IHRoZSByZWFkeSBtb2R1bGVcblx0aXNSZWFkeTogdHJ1ZSxcblxuXHRlcnJvcjogZnVuY3Rpb24oIG1zZyApIHtcblx0XHR0aHJvdyBuZXcgRXJyb3IoIG1zZyApO1xuXHR9LFxuXG5cdG5vb3A6IGZ1bmN0aW9uKCkge30sXG5cblx0aXNQbGFpbk9iamVjdDogZnVuY3Rpb24oIG9iaiApIHtcblx0XHR2YXIgcHJvdG8sIEN0b3I7XG5cblx0XHQvLyBEZXRlY3Qgb2J2aW91cyBuZWdhdGl2ZXNcblx0XHQvLyBVc2UgdG9TdHJpbmcgaW5zdGVhZCBvZiBqUXVlcnkudHlwZSB0byBjYXRjaCBob3N0IG9iamVjdHNcblx0XHRpZiAoICFvYmogfHwgdG9TdHJpbmcuY2FsbCggb2JqICkgIT09IFwiW29iamVjdCBPYmplY3RdXCIgKSB7XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fVxuXG5cdFx0cHJvdG8gPSBnZXRQcm90byggb2JqICk7XG5cblx0XHQvLyBPYmplY3RzIHdpdGggbm8gcHJvdG90eXBlIChlLmcuLCBgT2JqZWN0LmNyZWF0ZSggbnVsbCApYCkgYXJlIHBsYWluXG5cdFx0aWYgKCAhcHJvdG8gKSB7XG5cdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHR9XG5cblx0XHQvLyBPYmplY3RzIHdpdGggcHJvdG90eXBlIGFyZSBwbGFpbiBpZmYgdGhleSB3ZXJlIGNvbnN0cnVjdGVkIGJ5IGEgZ2xvYmFsIE9iamVjdCBmdW5jdGlvblxuXHRcdEN0b3IgPSBoYXNPd24uY2FsbCggcHJvdG8sIFwiY29uc3RydWN0b3JcIiApICYmIHByb3RvLmNvbnN0cnVjdG9yO1xuXHRcdHJldHVybiB0eXBlb2YgQ3RvciA9PT0gXCJmdW5jdGlvblwiICYmIGZuVG9TdHJpbmcuY2FsbCggQ3RvciApID09PSBPYmplY3RGdW5jdGlvblN0cmluZztcblx0fSxcblxuXHRpc0VtcHR5T2JqZWN0OiBmdW5jdGlvbiggb2JqICkge1xuXG5cdFx0LyogZXNsaW50LWRpc2FibGUgbm8tdW51c2VkLXZhcnMgKi9cblx0XHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2VzbGludC9lc2xpbnQvaXNzdWVzLzYxMjVcblx0XHR2YXIgbmFtZTtcblxuXHRcdGZvciAoIG5hbWUgaW4gb2JqICkge1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdHJ1ZTtcblx0fSxcblxuXHQvLyBFdmFsdWF0ZXMgYSBzY3JpcHQgaW4gYSBnbG9iYWwgY29udGV4dFxuXHRnbG9iYWxFdmFsOiBmdW5jdGlvbiggY29kZSApIHtcblx0XHRET01FdmFsKCBjb2RlICk7XG5cdH0sXG5cblx0ZWFjaDogZnVuY3Rpb24oIG9iaiwgY2FsbGJhY2sgKSB7XG5cdFx0dmFyIGxlbmd0aCwgaSA9IDA7XG5cblx0XHRpZiAoIGlzQXJyYXlMaWtlKCBvYmogKSApIHtcblx0XHRcdGxlbmd0aCA9IG9iai5sZW5ndGg7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjay5jYWxsKCBvYmpbIGkgXSwgaSwgb2JqWyBpIF0gKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9IGVsc2Uge1xuXHRcdFx0Zm9yICggaSBpbiBvYmogKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2suY2FsbCggb2JqWyBpIF0sIGksIG9ialsgaSBdICkgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG9iajtcblx0fSxcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4wIG9ubHlcblx0dHJpbTogZnVuY3Rpb24oIHRleHQgKSB7XG5cdFx0cmV0dXJuIHRleHQgPT0gbnVsbCA/XG5cdFx0XHRcIlwiIDpcblx0XHRcdCggdGV4dCArIFwiXCIgKS5yZXBsYWNlKCBydHJpbSwgXCJcIiApO1xuXHR9LFxuXG5cdC8vIHJlc3VsdHMgaXMgZm9yIGludGVybmFsIHVzYWdlIG9ubHlcblx0bWFrZUFycmF5OiBmdW5jdGlvbiggYXJyLCByZXN1bHRzICkge1xuXHRcdHZhciByZXQgPSByZXN1bHRzIHx8IFtdO1xuXG5cdFx0aWYgKCBhcnIgIT0gbnVsbCApIHtcblx0XHRcdGlmICggaXNBcnJheUxpa2UoIE9iamVjdCggYXJyICkgKSApIHtcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCByZXQsXG5cdFx0XHRcdFx0dHlwZW9mIGFyciA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0XHRcdFx0WyBhcnIgXSA6IGFyclxuXHRcdFx0XHQpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5jYWxsKCByZXQsIGFyciApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiByZXQ7XG5cdH0sXG5cblx0aW5BcnJheTogZnVuY3Rpb24oIGVsZW0sIGFyciwgaSApIHtcblx0XHRyZXR1cm4gYXJyID09IG51bGwgPyAtMSA6IGluZGV4T2YuY2FsbCggYXJyLCBlbGVtLCBpICk7XG5cdH0sXG5cblx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0bWVyZ2U6IGZ1bmN0aW9uKCBmaXJzdCwgc2Vjb25kICkge1xuXHRcdHZhciBsZW4gPSArc2Vjb25kLmxlbmd0aCxcblx0XHRcdGogPSAwLFxuXHRcdFx0aSA9IGZpcnN0Lmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaiA8IGxlbjsgaisrICkge1xuXHRcdFx0Zmlyc3RbIGkrKyBdID0gc2Vjb25kWyBqIF07XG5cdFx0fVxuXG5cdFx0Zmlyc3QubGVuZ3RoID0gaTtcblxuXHRcdHJldHVybiBmaXJzdDtcblx0fSxcblxuXHRncmVwOiBmdW5jdGlvbiggZWxlbXMsIGNhbGxiYWNrLCBpbnZlcnQgKSB7XG5cdFx0dmFyIGNhbGxiYWNrSW52ZXJzZSxcblx0XHRcdG1hdGNoZXMgPSBbXSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0bGVuZ3RoID0gZWxlbXMubGVuZ3RoLFxuXHRcdFx0Y2FsbGJhY2tFeHBlY3QgPSAhaW52ZXJ0O1xuXG5cdFx0Ly8gR28gdGhyb3VnaCB0aGUgYXJyYXksIG9ubHkgc2F2aW5nIHRoZSBpdGVtc1xuXHRcdC8vIHRoYXQgcGFzcyB0aGUgdmFsaWRhdG9yIGZ1bmN0aW9uXG5cdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRjYWxsYmFja0ludmVyc2UgPSAhY2FsbGJhY2soIGVsZW1zWyBpIF0sIGkgKTtcblx0XHRcdGlmICggY2FsbGJhY2tJbnZlcnNlICE9PSBjYWxsYmFja0V4cGVjdCApIHtcblx0XHRcdFx0bWF0Y2hlcy5wdXNoKCBlbGVtc1sgaSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIG1hdGNoZXM7XG5cdH0sXG5cblx0Ly8gYXJnIGlzIGZvciBpbnRlcm5hbCB1c2FnZSBvbmx5XG5cdG1hcDogZnVuY3Rpb24oIGVsZW1zLCBjYWxsYmFjaywgYXJnICkge1xuXHRcdHZhciBsZW5ndGgsIHZhbHVlLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRyZXQgPSBbXTtcblxuXHRcdC8vIEdvIHRocm91Z2ggdGhlIGFycmF5LCB0cmFuc2xhdGluZyBlYWNoIG9mIHRoZSBpdGVtcyB0byB0aGVpciBuZXcgdmFsdWVzXG5cdFx0aWYgKCBpc0FycmF5TGlrZSggZWxlbXMgKSApIHtcblx0XHRcdGxlbmd0aCA9IGVsZW1zLmxlbmd0aDtcblx0XHRcdGZvciAoIDsgaSA8IGxlbmd0aDsgaSsrICkge1xuXHRcdFx0XHR2YWx1ZSA9IGNhbGxiYWNrKCBlbGVtc1sgaSBdLCBpLCBhcmcgKTtcblxuXHRcdFx0XHRpZiAoIHZhbHVlICE9IG51bGwgKSB7XG5cdFx0XHRcdFx0cmV0LnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEdvIHRocm91Z2ggZXZlcnkga2V5IG9uIHRoZSBvYmplY3QsXG5cdFx0fSBlbHNlIHtcblx0XHRcdGZvciAoIGkgaW4gZWxlbXMgKSB7XG5cdFx0XHRcdHZhbHVlID0gY2FsbGJhY2soIGVsZW1zWyBpIF0sIGksIGFyZyApO1xuXG5cdFx0XHRcdGlmICggdmFsdWUgIT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXQucHVzaCggdmFsdWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIEZsYXR0ZW4gYW55IG5lc3RlZCBhcnJheXNcblx0XHRyZXR1cm4gY29uY2F0LmFwcGx5KCBbXSwgcmV0ICk7XG5cdH0sXG5cblx0Ly8gQSBnbG9iYWwgR1VJRCBjb3VudGVyIGZvciBvYmplY3RzXG5cdGd1aWQ6IDEsXG5cblx0Ly8galF1ZXJ5LnN1cHBvcnQgaXMgbm90IHVzZWQgaW4gQ29yZSBidXQgb3RoZXIgcHJvamVjdHMgYXR0YWNoIHRoZWlyXG5cdC8vIHByb3BlcnRpZXMgdG8gaXQgc28gaXQgbmVlZHMgdG8gZXhpc3QuXG5cdHN1cHBvcnQ6IHN1cHBvcnRcbn0gKTtcblxuaWYgKCB0eXBlb2YgU3ltYm9sID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cdGpRdWVyeS5mblsgU3ltYm9sLml0ZXJhdG9yIF0gPSBhcnJbIFN5bWJvbC5pdGVyYXRvciBdO1xufVxuXG4vLyBQb3B1bGF0ZSB0aGUgY2xhc3MydHlwZSBtYXBcbmpRdWVyeS5lYWNoKCBcIkJvb2xlYW4gTnVtYmVyIFN0cmluZyBGdW5jdGlvbiBBcnJheSBEYXRlIFJlZ0V4cCBPYmplY3QgRXJyb3IgU3ltYm9sXCIuc3BsaXQoIFwiIFwiICksXG5mdW5jdGlvbiggaSwgbmFtZSApIHtcblx0Y2xhc3MydHlwZVsgXCJbb2JqZWN0IFwiICsgbmFtZSArIFwiXVwiIF0gPSBuYW1lLnRvTG93ZXJDYXNlKCk7XG59ICk7XG5cbmZ1bmN0aW9uIGlzQXJyYXlMaWtlKCBvYmogKSB7XG5cblx0Ly8gU3VwcG9ydDogcmVhbCBpT1MgOC4yIG9ubHkgKG5vdCByZXByb2R1Y2libGUgaW4gc2ltdWxhdG9yKVxuXHQvLyBgaW5gIGNoZWNrIHVzZWQgdG8gcHJldmVudCBKSVQgZXJyb3IgKGdoLTIxNDUpXG5cdC8vIGhhc093biBpc24ndCB1c2VkIGhlcmUgZHVlIHRvIGZhbHNlIG5lZ2F0aXZlc1xuXHQvLyByZWdhcmRpbmcgTm9kZWxpc3QgbGVuZ3RoIGluIElFXG5cdHZhciBsZW5ndGggPSAhIW9iaiAmJiBcImxlbmd0aFwiIGluIG9iaiAmJiBvYmoubGVuZ3RoLFxuXHRcdHR5cGUgPSB0b1R5cGUoIG9iaiApO1xuXG5cdGlmICggaXNGdW5jdGlvbiggb2JqICkgfHwgaXNXaW5kb3coIG9iaiApICkge1xuXHRcdHJldHVybiBmYWxzZTtcblx0fVxuXG5cdHJldHVybiB0eXBlID09PSBcImFycmF5XCIgfHwgbGVuZ3RoID09PSAwIHx8XG5cdFx0dHlwZW9mIGxlbmd0aCA9PT0gXCJudW1iZXJcIiAmJiBsZW5ndGggPiAwICYmICggbGVuZ3RoIC0gMSApIGluIG9iajtcbn1cbnZhciBTaXp6bGUgPVxuLyohXG4gKiBTaXp6bGUgQ1NTIFNlbGVjdG9yIEVuZ2luZSB2Mi4zLjNcbiAqIGh0dHBzOi8vc2l6emxlanMuY29tL1xuICpcbiAqIENvcHlyaWdodCBqUXVlcnkgRm91bmRhdGlvbiBhbmQgb3RoZXIgY29udHJpYnV0b3JzXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcbiAqIGh0dHA6Ly9qcXVlcnkub3JnL2xpY2Vuc2VcbiAqXG4gKiBEYXRlOiAyMDE2LTA4LTA4XG4gKi9cbihmdW5jdGlvbiggd2luZG93ICkge1xuXG52YXIgaSxcblx0c3VwcG9ydCxcblx0RXhwcixcblx0Z2V0VGV4dCxcblx0aXNYTUwsXG5cdHRva2VuaXplLFxuXHRjb21waWxlLFxuXHRzZWxlY3QsXG5cdG91dGVybW9zdENvbnRleHQsXG5cdHNvcnRJbnB1dCxcblx0aGFzRHVwbGljYXRlLFxuXG5cdC8vIExvY2FsIGRvY3VtZW50IHZhcnNcblx0c2V0RG9jdW1lbnQsXG5cdGRvY3VtZW50LFxuXHRkb2NFbGVtLFxuXHRkb2N1bWVudElzSFRNTCxcblx0cmJ1Z2d5UVNBLFxuXHRyYnVnZ3lNYXRjaGVzLFxuXHRtYXRjaGVzLFxuXHRjb250YWlucyxcblxuXHQvLyBJbnN0YW5jZS1zcGVjaWZpYyBkYXRhXG5cdGV4cGFuZG8gPSBcInNpenpsZVwiICsgMSAqIG5ldyBEYXRlKCksXG5cdHByZWZlcnJlZERvYyA9IHdpbmRvdy5kb2N1bWVudCxcblx0ZGlycnVucyA9IDAsXG5cdGRvbmUgPSAwLFxuXHRjbGFzc0NhY2hlID0gY3JlYXRlQ2FjaGUoKSxcblx0dG9rZW5DYWNoZSA9IGNyZWF0ZUNhY2hlKCksXG5cdGNvbXBpbGVyQ2FjaGUgPSBjcmVhdGVDYWNoZSgpLFxuXHRzb3J0T3JkZXIgPSBmdW5jdGlvbiggYSwgYiApIHtcblx0XHRpZiAoIGEgPT09IGIgKSB7XG5cdFx0XHRoYXNEdXBsaWNhdGUgPSB0cnVlO1xuXHRcdH1cblx0XHRyZXR1cm4gMDtcblx0fSxcblxuXHQvLyBJbnN0YW5jZSBtZXRob2RzXG5cdGhhc093biA9ICh7fSkuaGFzT3duUHJvcGVydHksXG5cdGFyciA9IFtdLFxuXHRwb3AgPSBhcnIucG9wLFxuXHRwdXNoX25hdGl2ZSA9IGFyci5wdXNoLFxuXHRwdXNoID0gYXJyLnB1c2gsXG5cdHNsaWNlID0gYXJyLnNsaWNlLFxuXHQvLyBVc2UgYSBzdHJpcHBlZC1kb3duIGluZGV4T2YgYXMgaXQncyBmYXN0ZXIgdGhhbiBuYXRpdmVcblx0Ly8gaHR0cHM6Ly9qc3BlcmYuY29tL3Rob3ItaW5kZXhvZi12cy1mb3IvNVxuXHRpbmRleE9mID0gZnVuY3Rpb24oIGxpc3QsIGVsZW0gKSB7XG5cdFx0dmFyIGkgPSAwLFxuXHRcdFx0bGVuID0gbGlzdC5sZW5ndGg7XG5cdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRpZiAoIGxpc3RbaV0gPT09IGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBpO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gLTE7XG5cdH0sXG5cblx0Ym9vbGVhbnMgPSBcImNoZWNrZWR8c2VsZWN0ZWR8YXN5bmN8YXV0b2ZvY3VzfGF1dG9wbGF5fGNvbnRyb2xzfGRlZmVyfGRpc2FibGVkfGhpZGRlbnxpc21hcHxsb29wfG11bHRpcGxlfG9wZW58cmVhZG9ubHl8cmVxdWlyZWR8c2NvcGVkXCIsXG5cblx0Ly8gUmVndWxhciBleHByZXNzaW9uc1xuXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL2NzczMtc2VsZWN0b3JzLyN3aGl0ZXNwYWNlXG5cdHdoaXRlc3BhY2UgPSBcIltcXFxceDIwXFxcXHRcXFxcclxcXFxuXFxcXGZdXCIsXG5cblx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvQ1NTMjEvc3luZGF0YS5odG1sI3ZhbHVlLWRlZi1pZGVudGlmaWVyXG5cdGlkZW50aWZpZXIgPSBcIig/OlxcXFxcXFxcLnxbXFxcXHctXXxbXlxcMC1cXFxceGEwXSkrXCIsXG5cblx0Ly8gQXR0cmlidXRlIHNlbGVjdG9yczogaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNhdHRyaWJ1dGUtc2VsZWN0b3JzXG5cdGF0dHJpYnV0ZXMgPSBcIlxcXFxbXCIgKyB3aGl0ZXNwYWNlICsgXCIqKFwiICsgaWRlbnRpZmllciArIFwiKSg/OlwiICsgd2hpdGVzcGFjZSArXG5cdFx0Ly8gT3BlcmF0b3IgKGNhcHR1cmUgMilcblx0XHRcIiooWypeJHwhfl0/PSlcIiArIHdoaXRlc3BhY2UgK1xuXHRcdC8vIFwiQXR0cmlidXRlIHZhbHVlcyBtdXN0IGJlIENTUyBpZGVudGlmaWVycyBbY2FwdHVyZSA1XSBvciBzdHJpbmdzIFtjYXB0dXJlIDMgb3IgY2FwdHVyZSA0XVwiXG5cdFx0XCIqKD86JygoPzpcXFxcXFxcXC58W15cXFxcXFxcXCddKSopJ3xcXFwiKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcXFxcIl0pKilcXFwifChcIiArIGlkZW50aWZpZXIgKyBcIikpfClcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFwiKlxcXFxdXCIsXG5cblx0cHNldWRvcyA9IFwiOihcIiArIGlkZW50aWZpZXIgKyBcIikoPzpcXFxcKChcIiArXG5cdFx0Ly8gVG8gcmVkdWNlIHRoZSBudW1iZXIgb2Ygc2VsZWN0b3JzIG5lZWRpbmcgdG9rZW5pemUgaW4gdGhlIHByZUZpbHRlciwgcHJlZmVyIGFyZ3VtZW50czpcblx0XHQvLyAxLiBxdW90ZWQgKGNhcHR1cmUgMzsgY2FwdHVyZSA0IG9yIGNhcHR1cmUgNSlcblx0XHRcIignKCg/OlxcXFxcXFxcLnxbXlxcXFxcXFxcJ10pKiknfFxcXCIoKD86XFxcXFxcXFwufFteXFxcXFxcXFxcXFwiXSkqKVxcXCIpfFwiICtcblx0XHQvLyAyLiBzaW1wbGUgKGNhcHR1cmUgNilcblx0XHRcIigoPzpcXFxcXFxcXC58W15cXFxcXFxcXCgpW1xcXFxdXXxcIiArIGF0dHJpYnV0ZXMgKyBcIikqKXxcIiArXG5cdFx0Ly8gMy4gYW55dGhpbmcgZWxzZSAoY2FwdHVyZSAyKVxuXHRcdFwiLipcIiArXG5cdFx0XCIpXFxcXCl8KVwiLFxuXG5cdC8vIExlYWRpbmcgYW5kIG5vbi1lc2NhcGVkIHRyYWlsaW5nIHdoaXRlc3BhY2UsIGNhcHR1cmluZyBzb21lIG5vbi13aGl0ZXNwYWNlIGNoYXJhY3RlcnMgcHJlY2VkaW5nIHRoZSBsYXR0ZXJcblx0cndoaXRlc3BhY2UgPSBuZXcgUmVnRXhwKCB3aGl0ZXNwYWNlICsgXCIrXCIsIFwiZ1wiICksXG5cdHJ0cmltID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIrfCgoPzpefFteXFxcXFxcXFxdKSg/OlxcXFxcXFxcLikqKVwiICsgd2hpdGVzcGFjZSArIFwiKyRcIiwgXCJnXCIgKSxcblxuXHRyY29tbWEgPSBuZXcgUmVnRXhwKCBcIl5cIiArIHdoaXRlc3BhY2UgKyBcIiosXCIgKyB3aGl0ZXNwYWNlICsgXCIqXCIgKSxcblx0cmNvbWJpbmF0b3JzID0gbmV3IFJlZ0V4cCggXCJeXCIgKyB3aGl0ZXNwYWNlICsgXCIqKFs+K35dfFwiICsgd2hpdGVzcGFjZSArIFwiKVwiICsgd2hpdGVzcGFjZSArIFwiKlwiICksXG5cblx0cmF0dHJpYnV0ZVF1b3RlcyA9IG5ldyBSZWdFeHAoIFwiPVwiICsgd2hpdGVzcGFjZSArIFwiKihbXlxcXFxdJ1xcXCJdKj8pXCIgKyB3aGl0ZXNwYWNlICsgXCIqXFxcXF1cIiwgXCJnXCIgKSxcblxuXHRycHNldWRvID0gbmV3IFJlZ0V4cCggcHNldWRvcyApLFxuXHRyaWRlbnRpZmllciA9IG5ldyBSZWdFeHAoIFwiXlwiICsgaWRlbnRpZmllciArIFwiJFwiICksXG5cblx0bWF0Y2hFeHByID0ge1xuXHRcdFwiSURcIjogbmV3IFJlZ0V4cCggXCJeIyhcIiArIGlkZW50aWZpZXIgKyBcIilcIiApLFxuXHRcdFwiQ0xBU1NcIjogbmV3IFJlZ0V4cCggXCJeXFxcXC4oXCIgKyBpZGVudGlmaWVyICsgXCIpXCIgKSxcblx0XHRcIlRBR1wiOiBuZXcgUmVnRXhwKCBcIl4oXCIgKyBpZGVudGlmaWVyICsgXCJ8WypdKVwiICksXG5cdFx0XCJBVFRSXCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgYXR0cmlidXRlcyApLFxuXHRcdFwiUFNFVURPXCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgcHNldWRvcyApLFxuXHRcdFwiQ0hJTERcIjogbmV3IFJlZ0V4cCggXCJeOihvbmx5fGZpcnN0fGxhc3R8bnRofG50aC1sYXN0KS0oY2hpbGR8b2YtdHlwZSkoPzpcXFxcKFwiICsgd2hpdGVzcGFjZSArXG5cdFx0XHRcIiooZXZlbnxvZGR8KChbKy1dfCkoXFxcXGQqKW58KVwiICsgd2hpdGVzcGFjZSArIFwiKig/OihbKy1dfClcIiArIHdoaXRlc3BhY2UgK1xuXHRcdFx0XCIqKFxcXFxkKyl8KSlcIiArIHdoaXRlc3BhY2UgKyBcIipcXFxcKXwpXCIsIFwiaVwiICksXG5cdFx0XCJib29sXCI6IG5ldyBSZWdFeHAoIFwiXig/OlwiICsgYm9vbGVhbnMgKyBcIikkXCIsIFwiaVwiICksXG5cdFx0Ly8gRm9yIHVzZSBpbiBsaWJyYXJpZXMgaW1wbGVtZW50aW5nIC5pcygpXG5cdFx0Ly8gV2UgdXNlIHRoaXMgZm9yIFBPUyBtYXRjaGluZyBpbiBgc2VsZWN0YFxuXHRcdFwibmVlZHNDb250ZXh0XCI6IG5ldyBSZWdFeHAoIFwiXlwiICsgd2hpdGVzcGFjZSArIFwiKls+K35dfDooZXZlbnxvZGR8ZXF8Z3R8bHR8bnRofGZpcnN0fGxhc3QpKD86XFxcXChcIiArXG5cdFx0XHR3aGl0ZXNwYWNlICsgXCIqKCg/Oi1cXFxcZCk/XFxcXGQqKVwiICsgd2hpdGVzcGFjZSArIFwiKlxcXFwpfCkoPz1bXi1dfCQpXCIsIFwiaVwiIClcblx0fSxcblxuXHRyaW5wdXRzID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8YnV0dG9uKSQvaSxcblx0cmhlYWRlciA9IC9eaFxcZCQvaSxcblxuXHRybmF0aXZlID0gL15bXntdK1xce1xccypcXFtuYXRpdmUgXFx3LyxcblxuXHQvLyBFYXNpbHktcGFyc2VhYmxlL3JldHJpZXZhYmxlIElEIG9yIFRBRyBvciBDTEFTUyBzZWxlY3RvcnNcblx0cnF1aWNrRXhwciA9IC9eKD86IyhbXFx3LV0rKXwoXFx3Kyl8XFwuKFtcXHctXSspKSQvLFxuXG5cdHJzaWJsaW5nID0gL1srfl0vLFxuXG5cdC8vIENTUyBlc2NhcGVzXG5cdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL0NTUzIxL3N5bmRhdGEuaHRtbCNlc2NhcGVkLWNoYXJhY3RlcnNcblx0cnVuZXNjYXBlID0gbmV3IFJlZ0V4cCggXCJcXFxcXFxcXChbXFxcXGRhLWZdezEsNn1cIiArIHdoaXRlc3BhY2UgKyBcIj98KFwiICsgd2hpdGVzcGFjZSArIFwiKXwuKVwiLCBcImlnXCIgKSxcblx0ZnVuZXNjYXBlID0gZnVuY3Rpb24oIF8sIGVzY2FwZWQsIGVzY2FwZWRXaGl0ZXNwYWNlICkge1xuXHRcdHZhciBoaWdoID0gXCIweFwiICsgZXNjYXBlZCAtIDB4MTAwMDA7XG5cdFx0Ly8gTmFOIG1lYW5zIG5vbi1jb2RlcG9pbnRcblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94PDI0XG5cdFx0Ly8gV29ya2Fyb3VuZCBlcnJvbmVvdXMgbnVtZXJpYyBpbnRlcnByZXRhdGlvbiBvZiArXCIweFwiXG5cdFx0cmV0dXJuIGhpZ2ggIT09IGhpZ2ggfHwgZXNjYXBlZFdoaXRlc3BhY2UgP1xuXHRcdFx0ZXNjYXBlZCA6XG5cdFx0XHRoaWdoIDwgMCA/XG5cdFx0XHRcdC8vIEJNUCBjb2RlcG9pbnRcblx0XHRcdFx0U3RyaW5nLmZyb21DaGFyQ29kZSggaGlnaCArIDB4MTAwMDAgKSA6XG5cdFx0XHRcdC8vIFN1cHBsZW1lbnRhbCBQbGFuZSBjb2RlcG9pbnQgKHN1cnJvZ2F0ZSBwYWlyKVxuXHRcdFx0XHRTdHJpbmcuZnJvbUNoYXJDb2RlKCBoaWdoID4+IDEwIHwgMHhEODAwLCBoaWdoICYgMHgzRkYgfCAweERDMDAgKTtcblx0fSxcblxuXHQvLyBDU1Mgc3RyaW5nL2lkZW50aWZpZXIgc2VyaWFsaXphdGlvblxuXHQvLyBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3Nzb20vI2NvbW1vbi1zZXJpYWxpemluZy1pZGlvbXNcblx0cmNzc2VzY2FwZSA9IC8oW1xcMC1cXHgxZlxceDdmXXxeLT9cXGQpfF4tJHxbXlxcMC1cXHgxZlxceDdmLVxcdUZGRkZcXHctXS9nLFxuXHRmY3NzZXNjYXBlID0gZnVuY3Rpb24oIGNoLCBhc0NvZGVQb2ludCApIHtcblx0XHRpZiAoIGFzQ29kZVBvaW50ICkge1xuXG5cdFx0XHQvLyBVKzAwMDAgTlVMTCBiZWNvbWVzIFUrRkZGRCBSRVBMQUNFTUVOVCBDSEFSQUNURVJcblx0XHRcdGlmICggY2ggPT09IFwiXFwwXCIgKSB7XG5cdFx0XHRcdHJldHVybiBcIlxcdUZGRkRcIjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29udHJvbCBjaGFyYWN0ZXJzIGFuZCAoZGVwZW5kZW50IHVwb24gcG9zaXRpb24pIG51bWJlcnMgZ2V0IGVzY2FwZWQgYXMgY29kZSBwb2ludHNcblx0XHRcdHJldHVybiBjaC5zbGljZSggMCwgLTEgKSArIFwiXFxcXFwiICsgY2guY2hhckNvZGVBdCggY2gubGVuZ3RoIC0gMSApLnRvU3RyaW5nKCAxNiApICsgXCIgXCI7XG5cdFx0fVxuXG5cdFx0Ly8gT3RoZXIgcG90ZW50aWFsbHktc3BlY2lhbCBBU0NJSSBjaGFyYWN0ZXJzIGdldCBiYWNrc2xhc2gtZXNjYXBlZFxuXHRcdHJldHVybiBcIlxcXFxcIiArIGNoO1xuXHR9LFxuXG5cdC8vIFVzZWQgZm9yIGlmcmFtZXNcblx0Ly8gU2VlIHNldERvY3VtZW50KClcblx0Ly8gUmVtb3ZpbmcgdGhlIGZ1bmN0aW9uIHdyYXBwZXIgY2F1c2VzIGEgXCJQZXJtaXNzaW9uIERlbmllZFwiXG5cdC8vIGVycm9yIGluIElFXG5cdHVubG9hZEhhbmRsZXIgPSBmdW5jdGlvbigpIHtcblx0XHRzZXREb2N1bWVudCgpO1xuXHR9LFxuXG5cdGRpc2FibGVkQW5jZXN0b3IgPSBhZGRDb21iaW5hdG9yKFxuXHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IHRydWUgJiYgKFwiZm9ybVwiIGluIGVsZW0gfHwgXCJsYWJlbFwiIGluIGVsZW0pO1xuXHRcdH0sXG5cdFx0eyBkaXI6IFwicGFyZW50Tm9kZVwiLCBuZXh0OiBcImxlZ2VuZFwiIH1cblx0KTtcblxuLy8gT3B0aW1pemUgZm9yIHB1c2guYXBwbHkoIF8sIE5vZGVMaXN0IClcbnRyeSB7XG5cdHB1c2guYXBwbHkoXG5cdFx0KGFyciA9IHNsaWNlLmNhbGwoIHByZWZlcnJlZERvYy5jaGlsZE5vZGVzICkpLFxuXHRcdHByZWZlcnJlZERvYy5jaGlsZE5vZGVzXG5cdCk7XG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQ8NC4wXG5cdC8vIERldGVjdCBzaWxlbnRseSBmYWlsaW5nIHB1c2guYXBwbHlcblx0YXJyWyBwcmVmZXJyZWREb2MuY2hpbGROb2Rlcy5sZW5ndGggXS5ub2RlVHlwZTtcbn0gY2F0Y2ggKCBlICkge1xuXHRwdXNoID0geyBhcHBseTogYXJyLmxlbmd0aCA/XG5cblx0XHQvLyBMZXZlcmFnZSBzbGljZSBpZiBwb3NzaWJsZVxuXHRcdGZ1bmN0aW9uKCB0YXJnZXQsIGVscyApIHtcblx0XHRcdHB1c2hfbmF0aXZlLmFwcGx5KCB0YXJnZXQsIHNsaWNlLmNhbGwoZWxzKSApO1xuXHRcdH0gOlxuXG5cdFx0Ly8gU3VwcG9ydDogSUU8OVxuXHRcdC8vIE90aGVyd2lzZSBhcHBlbmQgZGlyZWN0bHlcblx0XHRmdW5jdGlvbiggdGFyZ2V0LCBlbHMgKSB7XG5cdFx0XHR2YXIgaiA9IHRhcmdldC5sZW5ndGgsXG5cdFx0XHRcdGkgPSAwO1xuXHRcdFx0Ly8gQ2FuJ3QgdHJ1c3QgTm9kZUxpc3QubGVuZ3RoXG5cdFx0XHR3aGlsZSAoICh0YXJnZXRbaisrXSA9IGVsc1tpKytdKSApIHt9XG5cdFx0XHR0YXJnZXQubGVuZ3RoID0gaiAtIDE7XG5cdFx0fVxuXHR9O1xufVxuXG5mdW5jdGlvbiBTaXp6bGUoIHNlbGVjdG9yLCBjb250ZXh0LCByZXN1bHRzLCBzZWVkICkge1xuXHR2YXIgbSwgaSwgZWxlbSwgbmlkLCBtYXRjaCwgZ3JvdXBzLCBuZXdTZWxlY3Rvcixcblx0XHRuZXdDb250ZXh0ID0gY29udGV4dCAmJiBjb250ZXh0Lm93bmVyRG9jdW1lbnQsXG5cblx0XHQvLyBub2RlVHlwZSBkZWZhdWx0cyB0byA5LCBzaW5jZSBjb250ZXh0IGRlZmF1bHRzIHRvIGRvY3VtZW50XG5cdFx0bm9kZVR5cGUgPSBjb250ZXh0ID8gY29udGV4dC5ub2RlVHlwZSA6IDk7XG5cblx0cmVzdWx0cyA9IHJlc3VsdHMgfHwgW107XG5cblx0Ly8gUmV0dXJuIGVhcmx5IGZyb20gY2FsbHMgd2l0aCBpbnZhbGlkIHNlbGVjdG9yIG9yIGNvbnRleHRcblx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgfHwgIXNlbGVjdG9yIHx8XG5cdFx0bm9kZVR5cGUgIT09IDEgJiYgbm9kZVR5cGUgIT09IDkgJiYgbm9kZVR5cGUgIT09IDExICkge1xuXG5cdFx0cmV0dXJuIHJlc3VsdHM7XG5cdH1cblxuXHQvLyBUcnkgdG8gc2hvcnRjdXQgZmluZCBvcGVyYXRpb25zIChhcyBvcHBvc2VkIHRvIGZpbHRlcnMpIGluIEhUTUwgZG9jdW1lbnRzXG5cdGlmICggIXNlZWQgKSB7XG5cblx0XHRpZiAoICggY29udGV4dCA/IGNvbnRleHQub3duZXJEb2N1bWVudCB8fCBjb250ZXh0IDogcHJlZmVycmVkRG9jICkgIT09IGRvY3VtZW50ICkge1xuXHRcdFx0c2V0RG9jdW1lbnQoIGNvbnRleHQgKTtcblx0XHR9XG5cdFx0Y29udGV4dCA9IGNvbnRleHQgfHwgZG9jdW1lbnQ7XG5cblx0XHRpZiAoIGRvY3VtZW50SXNIVE1MICkge1xuXG5cdFx0XHQvLyBJZiB0aGUgc2VsZWN0b3IgaXMgc3VmZmljaWVudGx5IHNpbXBsZSwgdHJ5IHVzaW5nIGEgXCJnZXQqQnkqXCIgRE9NIG1ldGhvZFxuXHRcdFx0Ly8gKGV4Y2VwdGluZyBEb2N1bWVudEZyYWdtZW50IGNvbnRleHQsIHdoZXJlIHRoZSBtZXRob2RzIGRvbid0IGV4aXN0KVxuXHRcdFx0aWYgKCBub2RlVHlwZSAhPT0gMTEgJiYgKG1hdGNoID0gcnF1aWNrRXhwci5leGVjKCBzZWxlY3RvciApKSApIHtcblxuXHRcdFx0XHQvLyBJRCBzZWxlY3RvclxuXHRcdFx0XHRpZiAoIChtID0gbWF0Y2hbMV0pICkge1xuXG5cdFx0XHRcdFx0Ly8gRG9jdW1lbnQgY29udGV4dFxuXHRcdFx0XHRcdGlmICggbm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIChlbGVtID0gY29udGV4dC5nZXRFbGVtZW50QnlJZCggbSApKSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdFxuXHRcdFx0XHRcdFx0XHQvLyBUT0RPOiBpZGVudGlmeSB2ZXJzaW9uc1xuXHRcdFx0XHRcdFx0XHQvLyBnZXRFbGVtZW50QnlJZCBjYW4gbWF0Y2ggZWxlbWVudHMgYnkgbmFtZSBpbnN0ZWFkIG9mIElEXG5cdFx0XHRcdFx0XHRcdGlmICggZWxlbS5pZCA9PT0gbSApIHtcblx0XHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBFbGVtZW50IGNvbnRleHRcblx0XHRcdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSwgT3BlcmEsIFdlYmtpdFxuXHRcdFx0XHRcdFx0Ly8gVE9ETzogaWRlbnRpZnkgdmVyc2lvbnNcblx0XHRcdFx0XHRcdC8vIGdldEVsZW1lbnRCeUlkIGNhbiBtYXRjaCBlbGVtZW50cyBieSBuYW1lIGluc3RlYWQgb2YgSURcblx0XHRcdFx0XHRcdGlmICggbmV3Q29udGV4dCAmJiAoZWxlbSA9IG5ld0NvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIG0gKSkgJiZcblx0XHRcdFx0XHRcdFx0Y29udGFpbnMoIGNvbnRleHQsIGVsZW0gKSAmJlxuXHRcdFx0XHRcdFx0XHRlbGVtLmlkID09PSBtICkge1xuXG5cdFx0XHRcdFx0XHRcdHJlc3VsdHMucHVzaCggZWxlbSApO1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHlwZSBzZWxlY3RvclxuXHRcdFx0XHR9IGVsc2UgaWYgKCBtYXRjaFsyXSApIHtcblx0XHRcdFx0XHRwdXNoLmFwcGx5KCByZXN1bHRzLCBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCBzZWxlY3RvciApICk7XG5cdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cblx0XHRcdFx0Ly8gQ2xhc3Mgc2VsZWN0b3Jcblx0XHRcdFx0fSBlbHNlIGlmICggKG0gPSBtYXRjaFszXSkgJiYgc3VwcG9ydC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICYmXG5cdFx0XHRcdFx0Y29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lICkge1xuXG5cdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgY29udGV4dC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCBtICkgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmVzdWx0cztcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBUYWtlIGFkdmFudGFnZSBvZiBxdWVyeVNlbGVjdG9yQWxsXG5cdFx0XHRpZiAoIHN1cHBvcnQucXNhICYmXG5cdFx0XHRcdCFjb21waWxlckNhY2hlWyBzZWxlY3RvciArIFwiIFwiIF0gJiZcblx0XHRcdFx0KCFyYnVnZ3lRU0EgfHwgIXJidWdneVFTQS50ZXN0KCBzZWxlY3RvciApKSApIHtcblxuXHRcdFx0XHRpZiAoIG5vZGVUeXBlICE9PSAxICkge1xuXHRcdFx0XHRcdG5ld0NvbnRleHQgPSBjb250ZXh0O1xuXHRcdFx0XHRcdG5ld1NlbGVjdG9yID0gc2VsZWN0b3I7XG5cblx0XHRcdFx0Ly8gcVNBIGxvb2tzIG91dHNpZGUgRWxlbWVudCBjb250ZXh0LCB3aGljaCBpcyBub3Qgd2hhdCB3ZSB3YW50XG5cdFx0XHRcdC8vIFRoYW5rcyB0byBBbmRyZXcgRHVwb250IGZvciB0aGlzIHdvcmthcm91bmQgdGVjaG5pcXVlXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OFxuXHRcdFx0XHQvLyBFeGNsdWRlIG9iamVjdCBlbGVtZW50c1xuXHRcdFx0XHR9IGVsc2UgaWYgKCBjb250ZXh0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgIT09IFwib2JqZWN0XCIgKSB7XG5cblx0XHRcdFx0XHQvLyBDYXB0dXJlIHRoZSBjb250ZXh0IElELCBzZXR0aW5nIGl0IGZpcnN0IGlmIG5lY2Vzc2FyeVxuXHRcdFx0XHRcdGlmICggKG5pZCA9IGNvbnRleHQuZ2V0QXR0cmlidXRlKCBcImlkXCIgKSkgKSB7XG5cdFx0XHRcdFx0XHRuaWQgPSBuaWQucmVwbGFjZSggcmNzc2VzY2FwZSwgZmNzc2VzY2FwZSApO1xuXHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRjb250ZXh0LnNldEF0dHJpYnV0ZSggXCJpZFwiLCAobmlkID0gZXhwYW5kbykgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBQcmVmaXggZXZlcnkgc2VsZWN0b3IgaW4gdGhlIGxpc3Rcblx0XHRcdFx0XHRncm91cHMgPSB0b2tlbml6ZSggc2VsZWN0b3IgKTtcblx0XHRcdFx0XHRpID0gZ3JvdXBzLmxlbmd0aDtcblx0XHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRcdGdyb3Vwc1tpXSA9IFwiI1wiICsgbmlkICsgXCIgXCIgKyB0b1NlbGVjdG9yKCBncm91cHNbaV0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0bmV3U2VsZWN0b3IgPSBncm91cHMuam9pbiggXCIsXCIgKTtcblxuXHRcdFx0XHRcdC8vIEV4cGFuZCBjb250ZXh0IGZvciBzaWJsaW5nIHNlbGVjdG9yc1xuXHRcdFx0XHRcdG5ld0NvbnRleHQgPSByc2libGluZy50ZXN0KCBzZWxlY3RvciApICYmIHRlc3RDb250ZXh0KCBjb250ZXh0LnBhcmVudE5vZGUgKSB8fFxuXHRcdFx0XHRcdFx0Y29udGV4dDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmICggbmV3U2VsZWN0b3IgKSB7XG5cdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdHB1c2guYXBwbHkoIHJlc3VsdHMsXG5cdFx0XHRcdFx0XHRcdG5ld0NvbnRleHQucXVlcnlTZWxlY3RvckFsbCggbmV3U2VsZWN0b3IgKVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXHRcdFx0XHRcdH0gY2F0Y2ggKCBxc2FFcnJvciApIHtcblx0XHRcdFx0XHR9IGZpbmFsbHkge1xuXHRcdFx0XHRcdFx0aWYgKCBuaWQgPT09IGV4cGFuZG8gKSB7XG5cdFx0XHRcdFx0XHRcdGNvbnRleHQucmVtb3ZlQXR0cmlidXRlKCBcImlkXCIgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBBbGwgb3RoZXJzXG5cdHJldHVybiBzZWxlY3QoIHNlbGVjdG9yLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApO1xufVxuXG4vKipcbiAqIENyZWF0ZSBrZXktdmFsdWUgY2FjaGVzIG9mIGxpbWl0ZWQgc2l6ZVxuICogQHJldHVybnMge2Z1bmN0aW9uKHN0cmluZywgb2JqZWN0KX0gUmV0dXJucyB0aGUgT2JqZWN0IGRhdGEgYWZ0ZXIgc3RvcmluZyBpdCBvbiBpdHNlbGYgd2l0aFxuICpcdHByb3BlcnR5IG5hbWUgdGhlIChzcGFjZS1zdWZmaXhlZCkgc3RyaW5nIGFuZCAoaWYgdGhlIGNhY2hlIGlzIGxhcmdlciB0aGFuIEV4cHIuY2FjaGVMZW5ndGgpXG4gKlx0ZGVsZXRpbmcgdGhlIG9sZGVzdCBlbnRyeVxuICovXG5mdW5jdGlvbiBjcmVhdGVDYWNoZSgpIHtcblx0dmFyIGtleXMgPSBbXTtcblxuXHRmdW5jdGlvbiBjYWNoZSgga2V5LCB2YWx1ZSApIHtcblx0XHQvLyBVc2UgKGtleSArIFwiIFwiKSB0byBhdm9pZCBjb2xsaXNpb24gd2l0aCBuYXRpdmUgcHJvdG90eXBlIHByb3BlcnRpZXMgKHNlZSBJc3N1ZSAjMTU3KVxuXHRcdGlmICgga2V5cy5wdXNoKCBrZXkgKyBcIiBcIiApID4gRXhwci5jYWNoZUxlbmd0aCApIHtcblx0XHRcdC8vIE9ubHkga2VlcCB0aGUgbW9zdCByZWNlbnQgZW50cmllc1xuXHRcdFx0ZGVsZXRlIGNhY2hlWyBrZXlzLnNoaWZ0KCkgXTtcblx0XHR9XG5cdFx0cmV0dXJuIChjYWNoZVsga2V5ICsgXCIgXCIgXSA9IHZhbHVlKTtcblx0fVxuXHRyZXR1cm4gY2FjaGU7XG59XG5cbi8qKlxuICogTWFyayBhIGZ1bmN0aW9uIGZvciBzcGVjaWFsIHVzZSBieSBTaXp6bGVcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFRoZSBmdW5jdGlvbiB0byBtYXJrXG4gKi9cbmZ1bmN0aW9uIG1hcmtGdW5jdGlvbiggZm4gKSB7XG5cdGZuWyBleHBhbmRvIF0gPSB0cnVlO1xuXHRyZXR1cm4gZm47XG59XG5cbi8qKlxuICogU3VwcG9ydCB0ZXN0aW5nIHVzaW5nIGFuIGVsZW1lbnRcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuIFBhc3NlZCB0aGUgY3JlYXRlZCBlbGVtZW50IGFuZCByZXR1cm5zIGEgYm9vbGVhbiByZXN1bHRcbiAqL1xuZnVuY3Rpb24gYXNzZXJ0KCBmbiApIHtcblx0dmFyIGVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImZpZWxkc2V0XCIpO1xuXG5cdHRyeSB7XG5cdFx0cmV0dXJuICEhZm4oIGVsICk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRyZXR1cm4gZmFsc2U7XG5cdH0gZmluYWxseSB7XG5cdFx0Ly8gUmVtb3ZlIGZyb20gaXRzIHBhcmVudCBieSBkZWZhdWx0XG5cdFx0aWYgKCBlbC5wYXJlbnROb2RlICkge1xuXHRcdFx0ZWwucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggZWwgKTtcblx0XHR9XG5cdFx0Ly8gcmVsZWFzZSBtZW1vcnkgaW4gSUVcblx0XHRlbCA9IG51bGw7XG5cdH1cbn1cblxuLyoqXG4gKiBBZGRzIHRoZSBzYW1lIGhhbmRsZXIgZm9yIGFsbCBvZiB0aGUgc3BlY2lmaWVkIGF0dHJzXG4gKiBAcGFyYW0ge1N0cmluZ30gYXR0cnMgUGlwZS1zZXBhcmF0ZWQgbGlzdCBvZiBhdHRyaWJ1dGVzXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBoYW5kbGVyIFRoZSBtZXRob2QgdGhhdCB3aWxsIGJlIGFwcGxpZWRcbiAqL1xuZnVuY3Rpb24gYWRkSGFuZGxlKCBhdHRycywgaGFuZGxlciApIHtcblx0dmFyIGFyciA9IGF0dHJzLnNwbGl0KFwifFwiKSxcblx0XHRpID0gYXJyLmxlbmd0aDtcblxuXHR3aGlsZSAoIGktLSApIHtcblx0XHRFeHByLmF0dHJIYW5kbGVbIGFycltpXSBdID0gaGFuZGxlcjtcblx0fVxufVxuXG4vKipcbiAqIENoZWNrcyBkb2N1bWVudCBvcmRlciBvZiB0d28gc2libGluZ3NcbiAqIEBwYXJhbSB7RWxlbWVudH0gYVxuICogQHBhcmFtIHtFbGVtZW50fSBiXG4gKiBAcmV0dXJucyB7TnVtYmVyfSBSZXR1cm5zIGxlc3MgdGhhbiAwIGlmIGEgcHJlY2VkZXMgYiwgZ3JlYXRlciB0aGFuIDAgaWYgYSBmb2xsb3dzIGJcbiAqL1xuZnVuY3Rpb24gc2libGluZ0NoZWNrKCBhLCBiICkge1xuXHR2YXIgY3VyID0gYiAmJiBhLFxuXHRcdGRpZmYgPSBjdXIgJiYgYS5ub2RlVHlwZSA9PT0gMSAmJiBiLm5vZGVUeXBlID09PSAxICYmXG5cdFx0XHRhLnNvdXJjZUluZGV4IC0gYi5zb3VyY2VJbmRleDtcblxuXHQvLyBVc2UgSUUgc291cmNlSW5kZXggaWYgYXZhaWxhYmxlIG9uIGJvdGggbm9kZXNcblx0aWYgKCBkaWZmICkge1xuXHRcdHJldHVybiBkaWZmO1xuXHR9XG5cblx0Ly8gQ2hlY2sgaWYgYiBmb2xsb3dzIGFcblx0aWYgKCBjdXIgKSB7XG5cdFx0d2hpbGUgKCAoY3VyID0gY3VyLm5leHRTaWJsaW5nKSApIHtcblx0XHRcdGlmICggY3VyID09PSBiICkge1xuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGEgPyAxIDogLTE7XG59XG5cbi8qKlxuICogUmV0dXJucyBhIGZ1bmN0aW9uIHRvIHVzZSBpbiBwc2V1ZG9zIGZvciBpbnB1dCB0eXBlc1xuICogQHBhcmFtIHtTdHJpbmd9IHR5cGVcbiAqL1xuZnVuY3Rpb24gY3JlYXRlSW5wdXRQc2V1ZG8oIHR5cGUgKSB7XG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHR2YXIgbmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRyZXR1cm4gbmFtZSA9PT0gXCJpbnB1dFwiICYmIGVsZW0udHlwZSA9PT0gdHlwZTtcblx0fTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIGJ1dHRvbnNcbiAqIEBwYXJhbSB7U3RyaW5nfSB0eXBlXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZUJ1dHRvblBzZXVkbyggdHlwZSApIHtcblx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHZhciBuYW1lID0gZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpO1xuXHRcdHJldHVybiAobmFtZSA9PT0gXCJpbnB1dFwiIHx8IG5hbWUgPT09IFwiYnV0dG9uXCIpICYmIGVsZW0udHlwZSA9PT0gdHlwZTtcblx0fTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIGEgZnVuY3Rpb24gdG8gdXNlIGluIHBzZXVkb3MgZm9yIDplbmFibGVkLzpkaXNhYmxlZFxuICogQHBhcmFtIHtCb29sZWFufSBkaXNhYmxlZCB0cnVlIGZvciA6ZGlzYWJsZWQ7IGZhbHNlIGZvciA6ZW5hYmxlZFxuICovXG5mdW5jdGlvbiBjcmVhdGVEaXNhYmxlZFBzZXVkbyggZGlzYWJsZWQgKSB7XG5cblx0Ly8gS25vd24gOmRpc2FibGVkIGZhbHNlIHBvc2l0aXZlczogZmllbGRzZXRbZGlzYWJsZWRdID4gbGVnZW5kOm50aC1vZi10eXBlKG4rMikgOmNhbi1kaXNhYmxlXG5cdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIE9ubHkgY2VydGFpbiBlbGVtZW50cyBjYW4gbWF0Y2ggOmVuYWJsZWQgb3IgOmRpc2FibGVkXG5cdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc2NyaXB0aW5nLmh0bWwjc2VsZWN0b3ItZW5hYmxlZFxuXHRcdC8vIGh0dHBzOi8vaHRtbC5zcGVjLndoYXR3Zy5vcmcvbXVsdGlwYWdlL3NjcmlwdGluZy5odG1sI3NlbGVjdG9yLWRpc2FibGVkXG5cdFx0aWYgKCBcImZvcm1cIiBpbiBlbGVtICkge1xuXG5cdFx0XHQvLyBDaGVjayBmb3IgaW5oZXJpdGVkIGRpc2FibGVkbmVzcyBvbiByZWxldmFudCBub24tZGlzYWJsZWQgZWxlbWVudHM6XG5cdFx0XHQvLyAqIGxpc3RlZCBmb3JtLWFzc29jaWF0ZWQgZWxlbWVudHMgaW4gYSBkaXNhYmxlZCBmaWVsZHNldFxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NhdGVnb3J5LWxpc3RlZFxuXHRcdFx0Ly8gICBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnL211bHRpcGFnZS9mb3Jtcy5odG1sI2NvbmNlcHQtZmUtZGlzYWJsZWRcblx0XHRcdC8vICogb3B0aW9uIGVsZW1lbnRzIGluIGEgZGlzYWJsZWQgb3B0Z3JvdXBcblx0XHRcdC8vICAgaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2UvZm9ybXMuaHRtbCNjb25jZXB0LW9wdGlvbi1kaXNhYmxlZFxuXHRcdFx0Ly8gQWxsIHN1Y2ggZWxlbWVudHMgaGF2ZSBhIFwiZm9ybVwiIHByb3BlcnR5LlxuXHRcdFx0aWYgKCBlbGVtLnBhcmVudE5vZGUgJiYgZWxlbS5kaXNhYmxlZCA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0Ly8gT3B0aW9uIGVsZW1lbnRzIGRlZmVyIHRvIGEgcGFyZW50IG9wdGdyb3VwIGlmIHByZXNlbnRcblx0XHRcdFx0aWYgKCBcImxhYmVsXCIgaW4gZWxlbSApIHtcblx0XHRcdFx0XHRpZiAoIFwibGFiZWxcIiBpbiBlbGVtLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5wYXJlbnROb2RlLmRpc2FibGVkID09PSBkaXNhYmxlZDtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDYgLSAxMVxuXHRcdFx0XHQvLyBVc2UgdGhlIGlzRGlzYWJsZWQgc2hvcnRjdXQgcHJvcGVydHkgdG8gY2hlY2sgZm9yIGRpc2FibGVkIGZpZWxkc2V0IGFuY2VzdG9yc1xuXHRcdFx0XHRyZXR1cm4gZWxlbS5pc0Rpc2FibGVkID09PSBkaXNhYmxlZCB8fFxuXG5cdFx0XHRcdFx0Ly8gV2hlcmUgdGhlcmUgaXMgbm8gaXNEaXNhYmxlZCwgY2hlY2sgbWFudWFsbHlcblx0XHRcdFx0XHQvKiBqc2hpbnQgLVcwMTggKi9cblx0XHRcdFx0XHRlbGVtLmlzRGlzYWJsZWQgIT09ICFkaXNhYmxlZCAmJlxuXHRcdFx0XHRcdFx0ZGlzYWJsZWRBbmNlc3RvciggZWxlbSApID09PSBkaXNhYmxlZDtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXG5cdFx0Ly8gVHJ5IHRvIHdpbm5vdyBvdXQgZWxlbWVudHMgdGhhdCBjYW4ndCBiZSBkaXNhYmxlZCBiZWZvcmUgdHJ1c3RpbmcgdGhlIGRpc2FibGVkIHByb3BlcnR5LlxuXHRcdC8vIFNvbWUgdmljdGltcyBnZXQgY2F1Z2h0IGluIG91ciBuZXQgKGxhYmVsLCBsZWdlbmQsIG1lbnUsIHRyYWNrKSwgYnV0IGl0IHNob3VsZG4ndFxuXHRcdC8vIGV2ZW4gZXhpc3Qgb24gdGhlbSwgbGV0IGFsb25lIGhhdmUgYSBib29sZWFuIHZhbHVlLlxuXHRcdH0gZWxzZSBpZiAoIFwibGFiZWxcIiBpbiBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZGlzYWJsZWQgPT09IGRpc2FibGVkO1xuXHRcdH1cblxuXHRcdC8vIFJlbWFpbmluZyBlbGVtZW50cyBhcmUgbmVpdGhlciA6ZW5hYmxlZCBub3IgOmRpc2FibGVkXG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9O1xufVxuXG4vKipcbiAqIFJldHVybnMgYSBmdW5jdGlvbiB0byB1c2UgaW4gcHNldWRvcyBmb3IgcG9zaXRpb25hbHNcbiAqIEBwYXJhbSB7RnVuY3Rpb259IGZuXG4gKi9cbmZ1bmN0aW9uIGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oIGZuICkge1xuXHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBhcmd1bWVudCApIHtcblx0XHRhcmd1bWVudCA9ICthcmd1bWVudDtcblx0XHRyZXR1cm4gbWFya0Z1bmN0aW9uKGZ1bmN0aW9uKCBzZWVkLCBtYXRjaGVzICkge1xuXHRcdFx0dmFyIGosXG5cdFx0XHRcdG1hdGNoSW5kZXhlcyA9IGZuKCBbXSwgc2VlZC5sZW5ndGgsIGFyZ3VtZW50ICksXG5cdFx0XHRcdGkgPSBtYXRjaEluZGV4ZXMubGVuZ3RoO1xuXG5cdFx0XHQvLyBNYXRjaCBlbGVtZW50cyBmb3VuZCBhdCB0aGUgc3BlY2lmaWVkIGluZGV4ZXNcblx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRpZiAoIHNlZWRbIChqID0gbWF0Y2hJbmRleGVzW2ldKSBdICkge1xuXHRcdFx0XHRcdHNlZWRbal0gPSAhKG1hdGNoZXNbal0gPSBzZWVkW2pdKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0pO1xuXHR9KTtcbn1cblxuLyoqXG4gKiBDaGVja3MgYSBub2RlIGZvciB2YWxpZGl0eSBhcyBhIFNpenpsZSBjb250ZXh0XG4gKiBAcGFyYW0ge0VsZW1lbnR8T2JqZWN0PX0gY29udGV4dFxuICogQHJldHVybnMge0VsZW1lbnR8T2JqZWN0fEJvb2xlYW59IFRoZSBpbnB1dCBub2RlIGlmIGFjY2VwdGFibGUsIG90aGVyd2lzZSBhIGZhbHN5IHZhbHVlXG4gKi9cbmZ1bmN0aW9uIHRlc3RDb250ZXh0KCBjb250ZXh0ICkge1xuXHRyZXR1cm4gY29udGV4dCAmJiB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBjb250ZXh0O1xufVxuXG4vLyBFeHBvc2Ugc3VwcG9ydCB2YXJzIGZvciBjb252ZW5pZW5jZVxuc3VwcG9ydCA9IFNpenpsZS5zdXBwb3J0ID0ge307XG5cbi8qKlxuICogRGV0ZWN0cyBYTUwgbm9kZXNcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IGVsZW0gQW4gZWxlbWVudCBvciBhIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7Qm9vbGVhbn0gVHJ1ZSBpZmYgZWxlbSBpcyBhIG5vbi1IVE1MIFhNTCBub2RlXG4gKi9cbmlzWE1MID0gU2l6emxlLmlzWE1MID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdC8vIGRvY3VtZW50RWxlbWVudCBpcyB2ZXJpZmllZCBmb3IgY2FzZXMgd2hlcmUgaXQgZG9lc24ndCB5ZXQgZXhpc3Rcblx0Ly8gKHN1Y2ggYXMgbG9hZGluZyBpZnJhbWVzIGluIElFIC0gIzQ4MzMpXG5cdHZhciBkb2N1bWVudEVsZW1lbnQgPSBlbGVtICYmIChlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSkuZG9jdW1lbnRFbGVtZW50O1xuXHRyZXR1cm4gZG9jdW1lbnRFbGVtZW50ID8gZG9jdW1lbnRFbGVtZW50Lm5vZGVOYW1lICE9PSBcIkhUTUxcIiA6IGZhbHNlO1xufTtcblxuLyoqXG4gKiBTZXRzIGRvY3VtZW50LXJlbGF0ZWQgdmFyaWFibGVzIG9uY2UgYmFzZWQgb24gdGhlIGN1cnJlbnQgZG9jdW1lbnRcbiAqIEBwYXJhbSB7RWxlbWVudHxPYmplY3R9IFtkb2NdIEFuIGVsZW1lbnQgb3IgZG9jdW1lbnQgb2JqZWN0IHRvIHVzZSB0byBzZXQgdGhlIGRvY3VtZW50XG4gKiBAcmV0dXJucyB7T2JqZWN0fSBSZXR1cm5zIHRoZSBjdXJyZW50IGRvY3VtZW50XG4gKi9cbnNldERvY3VtZW50ID0gU2l6emxlLnNldERvY3VtZW50ID0gZnVuY3Rpb24oIG5vZGUgKSB7XG5cdHZhciBoYXNDb21wYXJlLCBzdWJXaW5kb3csXG5cdFx0ZG9jID0gbm9kZSA/IG5vZGUub3duZXJEb2N1bWVudCB8fCBub2RlIDogcHJlZmVycmVkRG9jO1xuXG5cdC8vIFJldHVybiBlYXJseSBpZiBkb2MgaXMgaW52YWxpZCBvciBhbHJlYWR5IHNlbGVjdGVkXG5cdGlmICggZG9jID09PSBkb2N1bWVudCB8fCBkb2Mubm9kZVR5cGUgIT09IDkgfHwgIWRvYy5kb2N1bWVudEVsZW1lbnQgKSB7XG5cdFx0cmV0dXJuIGRvY3VtZW50O1xuXHR9XG5cblx0Ly8gVXBkYXRlIGdsb2JhbCB2YXJpYWJsZXNcblx0ZG9jdW1lbnQgPSBkb2M7XG5cdGRvY0VsZW0gPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQ7XG5cdGRvY3VtZW50SXNIVE1MID0gIWlzWE1MKCBkb2N1bWVudCApO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDktMTEsIEVkZ2Vcblx0Ly8gQWNjZXNzaW5nIGlmcmFtZSBkb2N1bWVudHMgYWZ0ZXIgdW5sb2FkIHRocm93cyBcInBlcm1pc3Npb24gZGVuaWVkXCIgZXJyb3JzIChqUXVlcnkgIzEzOTM2KVxuXHRpZiAoIHByZWZlcnJlZERvYyAhPT0gZG9jdW1lbnQgJiZcblx0XHQoc3ViV2luZG93ID0gZG9jdW1lbnQuZGVmYXVsdFZpZXcpICYmIHN1YldpbmRvdy50b3AgIT09IHN1YldpbmRvdyApIHtcblxuXHRcdC8vIFN1cHBvcnQ6IElFIDExLCBFZGdlXG5cdFx0aWYgKCBzdWJXaW5kb3cuYWRkRXZlbnRMaXN0ZW5lciApIHtcblx0XHRcdHN1YldpbmRvdy5hZGRFdmVudExpc3RlbmVyKCBcInVubG9hZFwiLCB1bmxvYWRIYW5kbGVyLCBmYWxzZSApO1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDEwIG9ubHlcblx0XHR9IGVsc2UgaWYgKCBzdWJXaW5kb3cuYXR0YWNoRXZlbnQgKSB7XG5cdFx0XHRzdWJXaW5kb3cuYXR0YWNoRXZlbnQoIFwib251bmxvYWRcIiwgdW5sb2FkSGFuZGxlciApO1xuXHRcdH1cblx0fVxuXG5cdC8qIEF0dHJpYnV0ZXNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXG5cdC8vIFN1cHBvcnQ6IElFPDhcblx0Ly8gVmVyaWZ5IHRoYXQgZ2V0QXR0cmlidXRlIHJlYWxseSByZXR1cm5zIGF0dHJpYnV0ZXMgYW5kIG5vdCBwcm9wZXJ0aWVzXG5cdC8vIChleGNlcHRpbmcgSUU4IGJvb2xlYW5zKVxuXHRzdXBwb3J0LmF0dHJpYnV0ZXMgPSBhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdGVsLmNsYXNzTmFtZSA9IFwiaVwiO1xuXHRcdHJldHVybiAhZWwuZ2V0QXR0cmlidXRlKFwiY2xhc3NOYW1lXCIpO1xuXHR9KTtcblxuXHQvKiBnZXRFbGVtZW50KHMpQnkqXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBDaGVjayBpZiBnZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikgcmV0dXJucyBvbmx5IGVsZW1lbnRzXG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgPSBhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdGVsLmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVDb21tZW50KFwiXCIpICk7XG5cdFx0cmV0dXJuICFlbC5nZXRFbGVtZW50c0J5VGFnTmFtZShcIipcIikubGVuZ3RoO1xuXHR9KTtcblxuXHQvLyBTdXBwb3J0OiBJRTw5XG5cdHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSA9IHJuYXRpdmUudGVzdCggZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSApO1xuXG5cdC8vIFN1cHBvcnQ6IElFPDEwXG5cdC8vIENoZWNrIGlmIGdldEVsZW1lbnRCeUlkIHJldHVybnMgZWxlbWVudHMgYnkgbmFtZVxuXHQvLyBUaGUgYnJva2VuIGdldEVsZW1lbnRCeUlkIG1ldGhvZHMgZG9uJ3QgcGljayB1cCBwcm9ncmFtbWF0aWNhbGx5LXNldCBuYW1lcyxcblx0Ly8gc28gdXNlIGEgcm91bmRhYm91dCBnZXRFbGVtZW50c0J5TmFtZSB0ZXN0XG5cdHN1cHBvcnQuZ2V0QnlJZCA9IGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5pZCA9IGV4cGFuZG87XG5cdFx0cmV0dXJuICFkb2N1bWVudC5nZXRFbGVtZW50c0J5TmFtZSB8fCAhZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoIGV4cGFuZG8gKS5sZW5ndGg7XG5cdH0pO1xuXG5cdC8vIElEIGZpbHRlciBhbmQgZmluZFxuXHRpZiAoIHN1cHBvcnQuZ2V0QnlJZCApIHtcblx0XHRFeHByLmZpbHRlcltcIklEXCJdID0gZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZShcImlkXCIpID09PSBhdHRySWQ7XG5cdFx0XHR9O1xuXHRcdH07XG5cdFx0RXhwci5maW5kW1wiSURcIl0gPSBmdW5jdGlvbiggaWQsIGNvbnRleHQgKSB7XG5cdFx0XHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRCeUlkICE9PSBcInVuZGVmaW5lZFwiICYmIGRvY3VtZW50SXNIVE1MICkge1xuXHRcdFx0XHR2YXIgZWxlbSA9IGNvbnRleHQuZ2V0RWxlbWVudEJ5SWQoIGlkICk7XG5cdFx0XHRcdHJldHVybiBlbGVtID8gWyBlbGVtIF0gOiBbXTtcblx0XHRcdH1cblx0XHR9O1xuXHR9IGVsc2Uge1xuXHRcdEV4cHIuZmlsdGVyW1wiSURcIl0gPSAgZnVuY3Rpb24oIGlkICkge1xuXHRcdFx0dmFyIGF0dHJJZCA9IGlkLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHZhciBub2RlID0gdHlwZW9mIGVsZW0uZ2V0QXR0cmlidXRlTm9kZSAhPT0gXCJ1bmRlZmluZWRcIiAmJlxuXHRcdFx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpO1xuXHRcdFx0XHRyZXR1cm4gbm9kZSAmJiBub2RlLnZhbHVlID09PSBhdHRySWQ7XG5cdFx0XHR9O1xuXHRcdH07XG5cblx0XHQvLyBTdXBwb3J0OiBJRSA2IC0gNyBvbmx5XG5cdFx0Ly8gZ2V0RWxlbWVudEJ5SWQgaXMgbm90IHJlbGlhYmxlIGFzIGEgZmluZCBzaG9ydGN1dFxuXHRcdEV4cHIuZmluZFtcIklEXCJdID0gZnVuY3Rpb24oIGlkLCBjb250ZXh0ICkge1xuXHRcdFx0aWYgKCB0eXBlb2YgY29udGV4dC5nZXRFbGVtZW50QnlJZCAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdFx0dmFyIG5vZGUsIGksIGVsZW1zLFxuXHRcdFx0XHRcdGVsZW0gPSBjb250ZXh0LmdldEVsZW1lbnRCeUlkKCBpZCApO1xuXG5cdFx0XHRcdGlmICggZWxlbSApIHtcblxuXHRcdFx0XHRcdC8vIFZlcmlmeSB0aGUgaWQgYXR0cmlidXRlXG5cdFx0XHRcdFx0bm9kZSA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpO1xuXHRcdFx0XHRcdGlmICggbm9kZSAmJiBub2RlLnZhbHVlID09PSBpZCApIHtcblx0XHRcdFx0XHRcdHJldHVybiBbIGVsZW0gXTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBGYWxsIGJhY2sgb24gZ2V0RWxlbWVudHNCeU5hbWVcblx0XHRcdFx0XHRlbGVtcyA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeU5hbWUoIGlkICk7XG5cdFx0XHRcdFx0aSA9IDA7XG5cdFx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1zW2krK10pICkge1xuXHRcdFx0XHRcdFx0bm9kZSA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZShcImlkXCIpO1xuXHRcdFx0XHRcdFx0aWYgKCBub2RlICYmIG5vZGUudmFsdWUgPT09IGlkICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gWyBlbGVtIF07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIFtdO1xuXHRcdFx0fVxuXHRcdH07XG5cdH1cblxuXHQvLyBUYWdcblx0RXhwci5maW5kW1wiVEFHXCJdID0gc3VwcG9ydC5nZXRFbGVtZW50c0J5VGFnTmFtZSA/XG5cdFx0ZnVuY3Rpb24oIHRhZywgY29udGV4dCApIHtcblx0XHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lKCB0YWcgKTtcblxuXHRcdFx0Ly8gRG9jdW1lbnRGcmFnbWVudCBub2RlcyBkb24ndCBoYXZlIGdFQlROXG5cdFx0XHR9IGVsc2UgaWYgKCBzdXBwb3J0LnFzYSApIHtcblx0XHRcdFx0cmV0dXJuIGNvbnRleHQucXVlcnlTZWxlY3RvckFsbCggdGFnICk7XG5cdFx0XHR9XG5cdFx0fSA6XG5cblx0XHRmdW5jdGlvbiggdGFnLCBjb250ZXh0ICkge1xuXHRcdFx0dmFyIGVsZW0sXG5cdFx0XHRcdHRtcCA9IFtdLFxuXHRcdFx0XHRpID0gMCxcblx0XHRcdFx0Ly8gQnkgaGFwcHkgY29pbmNpZGVuY2UsIGEgKGJyb2tlbikgZ0VCVE4gYXBwZWFycyBvbiBEb2N1bWVudEZyYWdtZW50IG5vZGVzIHRvb1xuXHRcdFx0XHRyZXN1bHRzID0gY29udGV4dC5nZXRFbGVtZW50c0J5VGFnTmFtZSggdGFnICk7XG5cblx0XHRcdC8vIEZpbHRlciBvdXQgcG9zc2libGUgY29tbWVudHNcblx0XHRcdGlmICggdGFnID09PSBcIipcIiApIHtcblx0XHRcdFx0d2hpbGUgKCAoZWxlbSA9IHJlc3VsdHNbaSsrXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0XHRcdFx0dG1wLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdG1wO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0fTtcblxuXHQvLyBDbGFzc1xuXHRFeHByLmZpbmRbXCJDTEFTU1wiXSA9IHN1cHBvcnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAmJiBmdW5jdGlvbiggY2xhc3NOYW1lLCBjb250ZXh0ICkge1xuXHRcdGlmICggdHlwZW9mIGNvbnRleHQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSAhPT0gXCJ1bmRlZmluZWRcIiAmJiBkb2N1bWVudElzSFRNTCApIHtcblx0XHRcdHJldHVybiBjb250ZXh0LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoIGNsYXNzTmFtZSApO1xuXHRcdH1cblx0fTtcblxuXHQvKiBRU0EvbWF0Y2hlc1NlbGVjdG9yXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBRU0EgYW5kIG1hdGNoZXNTZWxlY3RvciBzdXBwb3J0XG5cblx0Ly8gbWF0Y2hlc1NlbGVjdG9yKDphY3RpdmUpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChJRTkvT3BlcmEgMTEuNSlcblx0cmJ1Z2d5TWF0Y2hlcyA9IFtdO1xuXG5cdC8vIHFTYSg6Zm9jdXMpIHJlcG9ydHMgZmFsc2Ugd2hlbiB0cnVlIChDaHJvbWUgMjEpXG5cdC8vIFdlIGFsbG93IHRoaXMgYmVjYXVzZSBvZiBhIGJ1ZyBpbiBJRTgvOSB0aGF0IHRocm93cyBhbiBlcnJvclxuXHQvLyB3aGVuZXZlciBgZG9jdW1lbnQuYWN0aXZlRWxlbWVudGAgaXMgYWNjZXNzZWQgb24gYW4gaWZyYW1lXG5cdC8vIFNvLCB3ZSBhbGxvdyA6Zm9jdXMgdG8gcGFzcyB0aHJvdWdoIFFTQSBhbGwgdGhlIHRpbWUgdG8gYXZvaWQgdGhlIElFIGVycm9yXG5cdC8vIFNlZSBodHRwczovL2J1Z3MuanF1ZXJ5LmNvbS90aWNrZXQvMTMzNzhcblx0cmJ1Z2d5UVNBID0gW107XG5cblx0aWYgKCAoc3VwcG9ydC5xc2EgPSBybmF0aXZlLnRlc3QoIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwgKSkgKSB7XG5cdFx0Ly8gQnVpbGQgUVNBIHJlZ2V4XG5cdFx0Ly8gUmVnZXggc3RyYXRlZ3kgYWRvcHRlZCBmcm9tIERpZWdvIFBlcmluaVxuXHRcdGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0XHQvLyBTZWxlY3QgaXMgc2V0IHRvIGVtcHR5IHN0cmluZyBvbiBwdXJwb3NlXG5cdFx0XHQvLyBUaGlzIGlzIHRvIHRlc3QgSUUncyB0cmVhdG1lbnQgb2Ygbm90IGV4cGxpY2l0bHlcblx0XHRcdC8vIHNldHRpbmcgYSBib29sZWFuIGNvbnRlbnQgYXR0cmlidXRlLFxuXHRcdFx0Ly8gc2luY2UgaXRzIHByZXNlbmNlIHNob3VsZCBiZSBlbm91Z2hcblx0XHRcdC8vIGh0dHBzOi8vYnVncy5qcXVlcnkuY29tL3RpY2tldC8xMjM1OVxuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5pbm5lckhUTUwgPSBcIjxhIGlkPSdcIiArIGV4cGFuZG8gKyBcIic+PC9hPlwiICtcblx0XHRcdFx0XCI8c2VsZWN0IGlkPSdcIiArIGV4cGFuZG8gKyBcIi1cXHJcXFxcJyBtc2FsbG93Y2FwdHVyZT0nJz5cIiArXG5cdFx0XHRcdFwiPG9wdGlvbiBzZWxlY3RlZD0nJz48L29wdGlvbj48L3NlbGVjdD5cIjtcblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4LCBPcGVyYSAxMS0xMi4xNlxuXHRcdFx0Ly8gTm90aGluZyBzaG91bGQgYmUgc2VsZWN0ZWQgd2hlbiBlbXB0eSBzdHJpbmdzIGZvbGxvdyBePSBvciAkPSBvciAqPVxuXHRcdFx0Ly8gVGhlIHRlc3QgYXR0cmlidXRlIG11c3QgYmUgdW5rbm93biBpbiBPcGVyYSBidXQgXCJzYWZlXCIgZm9yIFdpblJUXG5cdFx0XHQvLyBodHRwczovL21zZG4ubWljcm9zb2Z0LmNvbS9lbi11cy9saWJyYXJ5L2llL2hoNDY1Mzg4LmFzcHgjYXR0cmlidXRlX3NlY3Rpb25cblx0XHRcdGlmICggZWwucXVlcnlTZWxlY3RvckFsbChcIlttc2FsbG93Y2FwdHVyZV49JyddXCIpLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goIFwiWypeJF09XCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86Jyd8XFxcIlxcXCIpXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogSUU4XG5cdFx0XHQvLyBCb29sZWFuIGF0dHJpYnV0ZXMgYW5kIFwidmFsdWVcIiBhcmUgbm90IHRyZWF0ZWQgY29ycmVjdGx5XG5cdFx0XHRpZiAoICFlbC5xdWVyeVNlbGVjdG9yQWxsKFwiW3NlbGVjdGVkXVwiKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKCBcIlxcXFxbXCIgKyB3aGl0ZXNwYWNlICsgXCIqKD86dmFsdWV8XCIgKyBib29sZWFucyArIFwiKVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZTwyOSwgQW5kcm9pZDw0LjQsIFNhZmFyaTw3LjArLCBpT1M8Ny4wKywgUGhhbnRvbUpTPDEuOS44K1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbCggXCJbaWR+PVwiICsgZXhwYW5kbyArIFwiLV1cIiApLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCJ+PVwiKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gV2Via2l0L09wZXJhIC0gOmNoZWNrZWQgc2hvdWxkIHJldHVybiBzZWxlY3RlZCBvcHRpb24gZWxlbWVudHNcblx0XHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSLzIwMTEvUkVDLWNzczMtc2VsZWN0b3JzLTIwMTEwOTI5LyNjaGVja2VkXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCAhZWwucXVlcnlTZWxlY3RvckFsbChcIjpjaGVja2VkXCIpLmxlbmd0aCApIHtcblx0XHRcdFx0cmJ1Z2d5UVNBLnB1c2goXCI6Y2hlY2tlZFwiKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU3VwcG9ydDogU2FmYXJpIDgrLCBpT1MgOCtcblx0XHRcdC8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzY4NTFcblx0XHRcdC8vIEluLXBhZ2UgYHNlbGVjdG9yI2lkIHNpYmxpbmctY29tYmluYXRvciBzZWxlY3RvcmAgZmFpbHNcblx0XHRcdGlmICggIWVsLnF1ZXJ5U2VsZWN0b3JBbGwoIFwiYSNcIiArIGV4cGFuZG8gKyBcIisqXCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdHJidWdneVFTQS5wdXNoKFwiLiMuK1srfl1cIik7XG5cdFx0XHR9XG5cdFx0fSk7XG5cblx0XHRhc3NlcnQoZnVuY3Rpb24oIGVsICkge1xuXHRcdFx0ZWwuaW5uZXJIVE1MID0gXCI8YSBocmVmPScnIGRpc2FibGVkPSdkaXNhYmxlZCc+PC9hPlwiICtcblx0XHRcdFx0XCI8c2VsZWN0IGRpc2FibGVkPSdkaXNhYmxlZCc+PG9wdGlvbi8+PC9zZWxlY3Q+XCI7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IFdpbmRvd3MgOCBOYXRpdmUgQXBwc1xuXHRcdFx0Ly8gVGhlIHR5cGUgYW5kIG5hbWUgYXR0cmlidXRlcyBhcmUgcmVzdHJpY3RlZCBkdXJpbmcgLmlubmVySFRNTCBhc3NpZ25tZW50XG5cdFx0XHR2YXIgaW5wdXQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIik7XG5cdFx0XHRpbnB1dC5zZXRBdHRyaWJ1dGUoIFwidHlwZVwiLCBcImhpZGRlblwiICk7XG5cdFx0XHRlbC5hcHBlbmRDaGlsZCggaW5wdXQgKS5zZXRBdHRyaWJ1dGUoIFwibmFtZVwiLCBcIkRcIiApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRThcblx0XHRcdC8vIEVuZm9yY2UgY2FzZS1zZW5zaXRpdml0eSBvZiBuYW1lIGF0dHJpYnV0ZVxuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKFwiW25hbWU9ZF1cIikubGVuZ3RoICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCJuYW1lXCIgKyB3aGl0ZXNwYWNlICsgXCIqWypeJHwhfl0/PVwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZGIDMuNSAtIDplbmFibGVkLzpkaXNhYmxlZCBhbmQgaGlkZGVuIGVsZW1lbnRzIChoaWRkZW4gZWxlbWVudHMgYXJlIHN0aWxsIGVuYWJsZWQpXG5cdFx0XHQvLyBJRTggdGhyb3dzIGVycm9yIGhlcmUgYW5kIHdpbGwgbm90IHNlZSBsYXRlciB0ZXN0c1xuXHRcdFx0aWYgKCBlbC5xdWVyeVNlbGVjdG9yQWxsKFwiOmVuYWJsZWRcIikubGVuZ3RoICE9PSAyICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6ZW5hYmxlZFwiLCBcIjpkaXNhYmxlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFOS0xMStcblx0XHRcdC8vIElFJ3MgOmRpc2FibGVkIHNlbGVjdG9yIGRvZXMgbm90IHBpY2sgdXAgdGhlIGNoaWxkcmVuIG9mIGRpc2FibGVkIGZpZWxkc2V0c1xuXHRcdFx0ZG9jRWxlbS5hcHBlbmRDaGlsZCggZWwgKS5kaXNhYmxlZCA9IHRydWU7XG5cdFx0XHRpZiAoIGVsLnF1ZXJ5U2VsZWN0b3JBbGwoXCI6ZGlzYWJsZWRcIikubGVuZ3RoICE9PSAyICkge1xuXHRcdFx0XHRyYnVnZ3lRU0EucHVzaCggXCI6ZW5hYmxlZFwiLCBcIjpkaXNhYmxlZFwiICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE9wZXJhIDEwLTExIGRvZXMgbm90IHRocm93IG9uIHBvc3QtY29tbWEgaW52YWxpZCBwc2V1ZG9zXG5cdFx0XHRlbC5xdWVyeVNlbGVjdG9yQWxsKFwiKiw6eFwiKTtcblx0XHRcdHJidWdneVFTQS5wdXNoKFwiLC4qOlwiKTtcblx0XHR9KTtcblx0fVxuXG5cdGlmICggKHN1cHBvcnQubWF0Y2hlc1NlbGVjdG9yID0gcm5hdGl2ZS50ZXN0KCAobWF0Y2hlcyA9IGRvY0VsZW0ubWF0Y2hlcyB8fFxuXHRcdGRvY0VsZW0ud2Via2l0TWF0Y2hlc1NlbGVjdG9yIHx8XG5cdFx0ZG9jRWxlbS5tb3pNYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm9NYXRjaGVzU2VsZWN0b3IgfHxcblx0XHRkb2NFbGVtLm1zTWF0Y2hlc1NlbGVjdG9yKSApKSApIHtcblxuXHRcdGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdFx0XHQvLyBDaGVjayB0byBzZWUgaWYgaXQncyBwb3NzaWJsZSB0byBkbyBtYXRjaGVzU2VsZWN0b3Jcblx0XHRcdC8vIG9uIGEgZGlzY29ubmVjdGVkIG5vZGUgKElFIDkpXG5cdFx0XHRzdXBwb3J0LmRpc2Nvbm5lY3RlZE1hdGNoID0gbWF0Y2hlcy5jYWxsKCBlbCwgXCIqXCIgKTtcblxuXHRcdFx0Ly8gVGhpcyBzaG91bGQgZmFpbCB3aXRoIGFuIGV4Y2VwdGlvblxuXHRcdFx0Ly8gR2Vja28gZG9lcyBub3QgZXJyb3IsIHJldHVybnMgZmFsc2UgaW5zdGVhZFxuXHRcdFx0bWF0Y2hlcy5jYWxsKCBlbCwgXCJbcyE9JyddOnhcIiApO1xuXHRcdFx0cmJ1Z2d5TWF0Y2hlcy5wdXNoKCBcIiE9XCIsIHBzZXVkb3MgKTtcblx0XHR9KTtcblx0fVxuXG5cdHJidWdneVFTQSA9IHJidWdneVFTQS5sZW5ndGggJiYgbmV3IFJlZ0V4cCggcmJ1Z2d5UVNBLmpvaW4oXCJ8XCIpICk7XG5cdHJidWdneU1hdGNoZXMgPSByYnVnZ3lNYXRjaGVzLmxlbmd0aCAmJiBuZXcgUmVnRXhwKCByYnVnZ3lNYXRjaGVzLmpvaW4oXCJ8XCIpICk7XG5cblx0LyogQ29udGFpbnNcblx0LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSAqL1xuXHRoYXNDb21wYXJlID0gcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uICk7XG5cblx0Ly8gRWxlbWVudCBjb250YWlucyBhbm90aGVyXG5cdC8vIFB1cnBvc2VmdWxseSBzZWxmLWV4Y2x1c2l2ZVxuXHQvLyBBcyBpbiwgYW4gZWxlbWVudCBkb2VzIG5vdCBjb250YWluIGl0c2VsZlxuXHRjb250YWlucyA9IGhhc0NvbXBhcmUgfHwgcm5hdGl2ZS50ZXN0KCBkb2NFbGVtLmNvbnRhaW5zICkgP1xuXHRcdGZ1bmN0aW9uKCBhLCBiICkge1xuXHRcdFx0dmFyIGFkb3duID0gYS5ub2RlVHlwZSA9PT0gOSA/IGEuZG9jdW1lbnRFbGVtZW50IDogYSxcblx0XHRcdFx0YnVwID0gYiAmJiBiLnBhcmVudE5vZGU7XG5cdFx0XHRyZXR1cm4gYSA9PT0gYnVwIHx8ICEhKCBidXAgJiYgYnVwLm5vZGVUeXBlID09PSAxICYmIChcblx0XHRcdFx0YWRvd24uY29udGFpbnMgP1xuXHRcdFx0XHRcdGFkb3duLmNvbnRhaW5zKCBidXAgKSA6XG5cdFx0XHRcdFx0YS5jb21wYXJlRG9jdW1lbnRQb3NpdGlvbiAmJiBhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBidXAgKSAmIDE2XG5cdFx0XHQpKTtcblx0XHR9IDpcblx0XHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHRcdGlmICggYiApIHtcblx0XHRcdFx0d2hpbGUgKCAoYiA9IGIucGFyZW50Tm9kZSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBiID09PSBhICkge1xuXHRcdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fTtcblxuXHQvKiBTb3J0aW5nXG5cdC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gKi9cblxuXHQvLyBEb2N1bWVudCBvcmRlciBzb3J0aW5nXG5cdHNvcnRPcmRlciA9IGhhc0NvbXBhcmUgP1xuXHRmdW5jdGlvbiggYSwgYiApIHtcblxuXHRcdC8vIEZsYWcgZm9yIGR1cGxpY2F0ZSByZW1vdmFsXG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdC8vIFNvcnQgb24gbWV0aG9kIGV4aXN0ZW5jZSBpZiBvbmx5IG9uZSBpbnB1dCBoYXMgY29tcGFyZURvY3VtZW50UG9zaXRpb25cblx0XHR2YXIgY29tcGFyZSA9ICFhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uIC0gIWIuY29tcGFyZURvY3VtZW50UG9zaXRpb247XG5cdFx0aWYgKCBjb21wYXJlICkge1xuXHRcdFx0cmV0dXJuIGNvbXBhcmU7XG5cdFx0fVxuXG5cdFx0Ly8gQ2FsY3VsYXRlIHBvc2l0aW9uIGlmIGJvdGggaW5wdXRzIGJlbG9uZyB0byB0aGUgc2FtZSBkb2N1bWVudFxuXHRcdGNvbXBhcmUgPSAoIGEub3duZXJEb2N1bWVudCB8fCBhICkgPT09ICggYi5vd25lckRvY3VtZW50IHx8IGIgKSA/XG5cdFx0XHRhLmNvbXBhcmVEb2N1bWVudFBvc2l0aW9uKCBiICkgOlxuXG5cdFx0XHQvLyBPdGhlcndpc2Ugd2Uga25vdyB0aGV5IGFyZSBkaXNjb25uZWN0ZWRcblx0XHRcdDE7XG5cblx0XHQvLyBEaXNjb25uZWN0ZWQgbm9kZXNcblx0XHRpZiAoIGNvbXBhcmUgJiAxIHx8XG5cdFx0XHQoIXN1cHBvcnQuc29ydERldGFjaGVkICYmIGIuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGEgKSA9PT0gY29tcGFyZSkgKSB7XG5cblx0XHRcdC8vIENob29zZSB0aGUgZmlyc3QgZWxlbWVudCB0aGF0IGlzIHJlbGF0ZWQgdG8gb3VyIHByZWZlcnJlZCBkb2N1bWVudFxuXHRcdFx0aWYgKCBhID09PSBkb2N1bWVudCB8fCBhLm93bmVyRG9jdW1lbnQgPT09IHByZWZlcnJlZERvYyAmJiBjb250YWlucyhwcmVmZXJyZWREb2MsIGEpICkge1xuXHRcdFx0XHRyZXR1cm4gLTE7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGIgPT09IGRvY3VtZW50IHx8IGIub3duZXJEb2N1bWVudCA9PT0gcHJlZmVycmVkRG9jICYmIGNvbnRhaW5zKHByZWZlcnJlZERvYywgYikgKSB7XG5cdFx0XHRcdHJldHVybiAxO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBNYWludGFpbiBvcmlnaW5hbCBvcmRlclxuXHRcdFx0cmV0dXJuIHNvcnRJbnB1dCA/XG5cdFx0XHRcdCggaW5kZXhPZiggc29ydElucHV0LCBhICkgLSBpbmRleE9mKCBzb3J0SW5wdXQsIGIgKSApIDpcblx0XHRcdFx0MDtcblx0XHR9XG5cblx0XHRyZXR1cm4gY29tcGFyZSAmIDQgPyAtMSA6IDE7XG5cdH0gOlxuXHRmdW5jdGlvbiggYSwgYiApIHtcblx0XHQvLyBFeGl0IGVhcmx5IGlmIHRoZSBub2RlcyBhcmUgaWRlbnRpY2FsXG5cdFx0aWYgKCBhID09PSBiICkge1xuXHRcdFx0aGFzRHVwbGljYXRlID0gdHJ1ZTtcblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdHZhciBjdXIsXG5cdFx0XHRpID0gMCxcblx0XHRcdGF1cCA9IGEucGFyZW50Tm9kZSxcblx0XHRcdGJ1cCA9IGIucGFyZW50Tm9kZSxcblx0XHRcdGFwID0gWyBhIF0sXG5cdFx0XHRicCA9IFsgYiBdO1xuXG5cdFx0Ly8gUGFyZW50bGVzcyBub2RlcyBhcmUgZWl0aGVyIGRvY3VtZW50cyBvciBkaXNjb25uZWN0ZWRcblx0XHRpZiAoICFhdXAgfHwgIWJ1cCApIHtcblx0XHRcdHJldHVybiBhID09PSBkb2N1bWVudCA/IC0xIDpcblx0XHRcdFx0YiA9PT0gZG9jdW1lbnQgPyAxIDpcblx0XHRcdFx0YXVwID8gLTEgOlxuXHRcdFx0XHRidXAgPyAxIDpcblx0XHRcdFx0c29ydElucHV0ID9cblx0XHRcdFx0KCBpbmRleE9mKCBzb3J0SW5wdXQsIGEgKSAtIGluZGV4T2YoIHNvcnRJbnB1dCwgYiApICkgOlxuXHRcdFx0XHQwO1xuXG5cdFx0Ly8gSWYgdGhlIG5vZGVzIGFyZSBzaWJsaW5ncywgd2UgY2FuIGRvIGEgcXVpY2sgY2hlY2tcblx0XHR9IGVsc2UgaWYgKCBhdXAgPT09IGJ1cCApIHtcblx0XHRcdHJldHVybiBzaWJsaW5nQ2hlY2soIGEsIGIgKTtcblx0XHR9XG5cblx0XHQvLyBPdGhlcndpc2Ugd2UgbmVlZCBmdWxsIGxpc3RzIG9mIHRoZWlyIGFuY2VzdG9ycyBmb3IgY29tcGFyaXNvblxuXHRcdGN1ciA9IGE7XG5cdFx0d2hpbGUgKCAoY3VyID0gY3VyLnBhcmVudE5vZGUpICkge1xuXHRcdFx0YXAudW5zaGlmdCggY3VyICk7XG5cdFx0fVxuXHRcdGN1ciA9IGI7XG5cdFx0d2hpbGUgKCAoY3VyID0gY3VyLnBhcmVudE5vZGUpICkge1xuXHRcdFx0YnAudW5zaGlmdCggY3VyICk7XG5cdFx0fVxuXG5cdFx0Ly8gV2FsayBkb3duIHRoZSB0cmVlIGxvb2tpbmcgZm9yIGEgZGlzY3JlcGFuY3lcblx0XHR3aGlsZSAoIGFwW2ldID09PSBicFtpXSApIHtcblx0XHRcdGkrKztcblx0XHR9XG5cblx0XHRyZXR1cm4gaSA/XG5cdFx0XHQvLyBEbyBhIHNpYmxpbmcgY2hlY2sgaWYgdGhlIG5vZGVzIGhhdmUgYSBjb21tb24gYW5jZXN0b3Jcblx0XHRcdHNpYmxpbmdDaGVjayggYXBbaV0sIGJwW2ldICkgOlxuXG5cdFx0XHQvLyBPdGhlcndpc2Ugbm9kZXMgaW4gb3VyIGRvY3VtZW50IHNvcnQgZmlyc3Rcblx0XHRcdGFwW2ldID09PSBwcmVmZXJyZWREb2MgPyAtMSA6XG5cdFx0XHRicFtpXSA9PT0gcHJlZmVycmVkRG9jID8gMSA6XG5cdFx0XHQwO1xuXHR9O1xuXG5cdHJldHVybiBkb2N1bWVudDtcbn07XG5cblNpenpsZS5tYXRjaGVzID0gZnVuY3Rpb24oIGV4cHIsIGVsZW1lbnRzICkge1xuXHRyZXR1cm4gU2l6emxlKCBleHByLCBudWxsLCBudWxsLCBlbGVtZW50cyApO1xufTtcblxuU2l6emxlLm1hdGNoZXNTZWxlY3RvciA9IGZ1bmN0aW9uKCBlbGVtLCBleHByICkge1xuXHQvLyBTZXQgZG9jdW1lbnQgdmFycyBpZiBuZWVkZWRcblx0aWYgKCAoIGVsZW0ub3duZXJEb2N1bWVudCB8fCBlbGVtICkgIT09IGRvY3VtZW50ICkge1xuXHRcdHNldERvY3VtZW50KCBlbGVtICk7XG5cdH1cblxuXHQvLyBNYWtlIHN1cmUgdGhhdCBhdHRyaWJ1dGUgc2VsZWN0b3JzIGFyZSBxdW90ZWRcblx0ZXhwciA9IGV4cHIucmVwbGFjZSggcmF0dHJpYnV0ZVF1b3RlcywgXCI9JyQxJ11cIiApO1xuXG5cdGlmICggc3VwcG9ydC5tYXRjaGVzU2VsZWN0b3IgJiYgZG9jdW1lbnRJc0hUTUwgJiZcblx0XHQhY29tcGlsZXJDYWNoZVsgZXhwciArIFwiIFwiIF0gJiZcblx0XHQoICFyYnVnZ3lNYXRjaGVzIHx8ICFyYnVnZ3lNYXRjaGVzLnRlc3QoIGV4cHIgKSApICYmXG5cdFx0KCAhcmJ1Z2d5UVNBICAgICB8fCAhcmJ1Z2d5UVNBLnRlc3QoIGV4cHIgKSApICkge1xuXG5cdFx0dHJ5IHtcblx0XHRcdHZhciByZXQgPSBtYXRjaGVzLmNhbGwoIGVsZW0sIGV4cHIgKTtcblxuXHRcdFx0Ly8gSUUgOSdzIG1hdGNoZXNTZWxlY3RvciByZXR1cm5zIGZhbHNlIG9uIGRpc2Nvbm5lY3RlZCBub2Rlc1xuXHRcdFx0aWYgKCByZXQgfHwgc3VwcG9ydC5kaXNjb25uZWN0ZWRNYXRjaCB8fFxuXHRcdFx0XHRcdC8vIEFzIHdlbGwsIGRpc2Nvbm5lY3RlZCBub2RlcyBhcmUgc2FpZCB0byBiZSBpbiBhIGRvY3VtZW50XG5cdFx0XHRcdFx0Ly8gZnJhZ21lbnQgaW4gSUUgOVxuXHRcdFx0XHRcdGVsZW0uZG9jdW1lbnQgJiYgZWxlbS5kb2N1bWVudC5ub2RlVHlwZSAhPT0gMTEgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cdFx0fSBjYXRjaCAoZSkge31cblx0fVxuXG5cdHJldHVybiBTaXp6bGUoIGV4cHIsIGRvY3VtZW50LCBudWxsLCBbIGVsZW0gXSApLmxlbmd0aCA+IDA7XG59O1xuXG5TaXp6bGUuY29udGFpbnMgPSBmdW5jdGlvbiggY29udGV4dCwgZWxlbSApIHtcblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXG5cdGlmICggKCBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCApICE9PSBkb2N1bWVudCApIHtcblx0XHRzZXREb2N1bWVudCggY29udGV4dCApO1xuXHR9XG5cdHJldHVybiBjb250YWlucyggY29udGV4dCwgZWxlbSApO1xufTtcblxuU2l6emxlLmF0dHIgPSBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0Ly8gU2V0IGRvY3VtZW50IHZhcnMgaWYgbmVlZGVkXG5cdGlmICggKCBlbGVtLm93bmVyRG9jdW1lbnQgfHwgZWxlbSApICE9PSBkb2N1bWVudCApIHtcblx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHR9XG5cblx0dmFyIGZuID0gRXhwci5hdHRySGFuZGxlWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSxcblx0XHQvLyBEb24ndCBnZXQgZm9vbGVkIGJ5IE9iamVjdC5wcm90b3R5cGUgcHJvcGVydGllcyAoalF1ZXJ5ICMxMzgwNylcblx0XHR2YWwgPSBmbiAmJiBoYXNPd24uY2FsbCggRXhwci5hdHRySGFuZGxlLCBuYW1lLnRvTG93ZXJDYXNlKCkgKSA/XG5cdFx0XHRmbiggZWxlbSwgbmFtZSwgIWRvY3VtZW50SXNIVE1MICkgOlxuXHRcdFx0dW5kZWZpbmVkO1xuXG5cdHJldHVybiB2YWwgIT09IHVuZGVmaW5lZCA/XG5cdFx0dmFsIDpcblx0XHRzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWRvY3VtZW50SXNIVE1MID9cblx0XHRcdGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lICkgOlxuXHRcdFx0KHZhbCA9IGVsZW0uZ2V0QXR0cmlidXRlTm9kZShuYW1lKSkgJiYgdmFsLnNwZWNpZmllZCA/XG5cdFx0XHRcdHZhbC52YWx1ZSA6XG5cdFx0XHRcdG51bGw7XG59O1xuXG5TaXp6bGUuZXNjYXBlID0gZnVuY3Rpb24oIHNlbCApIHtcblx0cmV0dXJuIChzZWwgKyBcIlwiKS5yZXBsYWNlKCByY3NzZXNjYXBlLCBmY3NzZXNjYXBlICk7XG59O1xuXG5TaXp6bGUuZXJyb3IgPSBmdW5jdGlvbiggbXNnICkge1xuXHR0aHJvdyBuZXcgRXJyb3IoIFwiU3ludGF4IGVycm9yLCB1bnJlY29nbml6ZWQgZXhwcmVzc2lvbjogXCIgKyBtc2cgKTtcbn07XG5cbi8qKlxuICogRG9jdW1lbnQgc29ydGluZyBhbmQgcmVtb3ZpbmcgZHVwbGljYXRlc1xuICogQHBhcmFtIHtBcnJheUxpa2V9IHJlc3VsdHNcbiAqL1xuU2l6emxlLnVuaXF1ZVNvcnQgPSBmdW5jdGlvbiggcmVzdWx0cyApIHtcblx0dmFyIGVsZW0sXG5cdFx0ZHVwbGljYXRlcyA9IFtdLFxuXHRcdGogPSAwLFxuXHRcdGkgPSAwO1xuXG5cdC8vIFVubGVzcyB3ZSAqa25vdyogd2UgY2FuIGRldGVjdCBkdXBsaWNhdGVzLCBhc3N1bWUgdGhlaXIgcHJlc2VuY2Vcblx0aGFzRHVwbGljYXRlID0gIXN1cHBvcnQuZGV0ZWN0RHVwbGljYXRlcztcblx0c29ydElucHV0ID0gIXN1cHBvcnQuc29ydFN0YWJsZSAmJiByZXN1bHRzLnNsaWNlKCAwICk7XG5cdHJlc3VsdHMuc29ydCggc29ydE9yZGVyICk7XG5cblx0aWYgKCBoYXNEdXBsaWNhdGUgKSB7XG5cdFx0d2hpbGUgKCAoZWxlbSA9IHJlc3VsdHNbaSsrXSkgKSB7XG5cdFx0XHRpZiAoIGVsZW0gPT09IHJlc3VsdHNbIGkgXSApIHtcblx0XHRcdFx0aiA9IGR1cGxpY2F0ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdH1cblx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdHJlc3VsdHMuc3BsaWNlKCBkdXBsaWNhdGVzWyBqIF0sIDEgKTtcblx0XHR9XG5cdH1cblxuXHQvLyBDbGVhciBpbnB1dCBhZnRlciBzb3J0aW5nIHRvIHJlbGVhc2Ugb2JqZWN0c1xuXHQvLyBTZWUgaHR0cHM6Ly9naXRodWIuY29tL2pxdWVyeS9zaXp6bGUvcHVsbC8yMjVcblx0c29ydElucHV0ID0gbnVsbDtcblxuXHRyZXR1cm4gcmVzdWx0cztcbn07XG5cbi8qKlxuICogVXRpbGl0eSBmdW5jdGlvbiBmb3IgcmV0cmlldmluZyB0aGUgdGV4dCB2YWx1ZSBvZiBhbiBhcnJheSBvZiBET00gbm9kZXNcbiAqIEBwYXJhbSB7QXJyYXl8RWxlbWVudH0gZWxlbVxuICovXG5nZXRUZXh0ID0gU2l6emxlLmdldFRleHQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0dmFyIG5vZGUsXG5cdFx0cmV0ID0gXCJcIixcblx0XHRpID0gMCxcblx0XHRub2RlVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0aWYgKCAhbm9kZVR5cGUgKSB7XG5cdFx0Ly8gSWYgbm8gbm9kZVR5cGUsIHRoaXMgaXMgZXhwZWN0ZWQgdG8gYmUgYW4gYXJyYXlcblx0XHR3aGlsZSAoIChub2RlID0gZWxlbVtpKytdKSApIHtcblx0XHRcdC8vIERvIG5vdCB0cmF2ZXJzZSBjb21tZW50IG5vZGVzXG5cdFx0XHRyZXQgKz0gZ2V0VGV4dCggbm9kZSApO1xuXHRcdH1cblx0fSBlbHNlIGlmICggbm9kZVR5cGUgPT09IDEgfHwgbm9kZVR5cGUgPT09IDkgfHwgbm9kZVR5cGUgPT09IDExICkge1xuXHRcdC8vIFVzZSB0ZXh0Q29udGVudCBmb3IgZWxlbWVudHNcblx0XHQvLyBpbm5lclRleHQgdXNhZ2UgcmVtb3ZlZCBmb3IgY29uc2lzdGVuY3kgb2YgbmV3IGxpbmVzIChqUXVlcnkgIzExMTUzKVxuXHRcdGlmICggdHlwZW9mIGVsZW0udGV4dENvbnRlbnQgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS50ZXh0Q29udGVudDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Ly8gVHJhdmVyc2UgaXRzIGNoaWxkcmVuXG5cdFx0XHRmb3IgKCBlbGVtID0gZWxlbS5maXJzdENoaWxkOyBlbGVtOyBlbGVtID0gZWxlbS5uZXh0U2libGluZyApIHtcblx0XHRcdFx0cmV0ICs9IGdldFRleHQoIGVsZW0gKTtcblx0XHRcdH1cblx0XHR9XG5cdH0gZWxzZSBpZiAoIG5vZGVUeXBlID09PSAzIHx8IG5vZGVUeXBlID09PSA0ICkge1xuXHRcdHJldHVybiBlbGVtLm5vZGVWYWx1ZTtcblx0fVxuXHQvLyBEbyBub3QgaW5jbHVkZSBjb21tZW50IG9yIHByb2Nlc3NpbmcgaW5zdHJ1Y3Rpb24gbm9kZXNcblxuXHRyZXR1cm4gcmV0O1xufTtcblxuRXhwciA9IFNpenpsZS5zZWxlY3RvcnMgPSB7XG5cblx0Ly8gQ2FuIGJlIGFkanVzdGVkIGJ5IHRoZSB1c2VyXG5cdGNhY2hlTGVuZ3RoOiA1MCxcblxuXHRjcmVhdGVQc2V1ZG86IG1hcmtGdW5jdGlvbixcblxuXHRtYXRjaDogbWF0Y2hFeHByLFxuXG5cdGF0dHJIYW5kbGU6IHt9LFxuXG5cdGZpbmQ6IHt9LFxuXG5cdHJlbGF0aXZlOiB7XG5cdFx0XCI+XCI6IHsgZGlyOiBcInBhcmVudE5vZGVcIiwgZmlyc3Q6IHRydWUgfSxcblx0XHRcIiBcIjogeyBkaXI6IFwicGFyZW50Tm9kZVwiIH0sXG5cdFx0XCIrXCI6IHsgZGlyOiBcInByZXZpb3VzU2libGluZ1wiLCBmaXJzdDogdHJ1ZSB9LFxuXHRcdFwiflwiOiB7IGRpcjogXCJwcmV2aW91c1NpYmxpbmdcIiB9XG5cdH0sXG5cblx0cHJlRmlsdGVyOiB7XG5cdFx0XCJBVFRSXCI6IGZ1bmN0aW9uKCBtYXRjaCApIHtcblx0XHRcdG1hdGNoWzFdID0gbWF0Y2hbMV0ucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblxuXHRcdFx0Ly8gTW92ZSB0aGUgZ2l2ZW4gdmFsdWUgdG8gbWF0Y2hbM10gd2hldGhlciBxdW90ZWQgb3IgdW5xdW90ZWRcblx0XHRcdG1hdGNoWzNdID0gKCBtYXRjaFszXSB8fCBtYXRjaFs0XSB8fCBtYXRjaFs1XSB8fCBcIlwiICkucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsyXSA9PT0gXCJ+PVwiICkge1xuXHRcdFx0XHRtYXRjaFszXSA9IFwiIFwiICsgbWF0Y2hbM10gKyBcIiBcIjtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCA0ICk7XG5cdFx0fSxcblxuXHRcdFwiQ0hJTERcIjogZnVuY3Rpb24oIG1hdGNoICkge1xuXHRcdFx0LyogbWF0Y2hlcyBmcm9tIG1hdGNoRXhwcltcIkNISUxEXCJdXG5cdFx0XHRcdDEgdHlwZSAob25seXxudGh8Li4uKVxuXHRcdFx0XHQyIHdoYXQgKGNoaWxkfG9mLXR5cGUpXG5cdFx0XHRcdDMgYXJndW1lbnQgKGV2ZW58b2RkfFxcZCp8XFxkKm4oWystXVxcZCspP3wuLi4pXG5cdFx0XHRcdDQgeG4tY29tcG9uZW50IG9mIHhuK3kgYXJndW1lbnQgKFsrLV0/XFxkKm58KVxuXHRcdFx0XHQ1IHNpZ24gb2YgeG4tY29tcG9uZW50XG5cdFx0XHRcdDYgeCBvZiB4bi1jb21wb25lbnRcblx0XHRcdFx0NyBzaWduIG9mIHktY29tcG9uZW50XG5cdFx0XHRcdDggeSBvZiB5LWNvbXBvbmVudFxuXHRcdFx0Ki9cblx0XHRcdG1hdGNoWzFdID0gbWF0Y2hbMV0udG9Mb3dlckNhc2UoKTtcblxuXHRcdFx0aWYgKCBtYXRjaFsxXS5zbGljZSggMCwgMyApID09PSBcIm50aFwiICkge1xuXHRcdFx0XHQvLyBudGgtKiByZXF1aXJlcyBhcmd1bWVudFxuXHRcdFx0XHRpZiAoICFtYXRjaFszXSApIHtcblx0XHRcdFx0XHRTaXp6bGUuZXJyb3IoIG1hdGNoWzBdICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBudW1lcmljIHggYW5kIHkgcGFyYW1ldGVycyBmb3IgRXhwci5maWx0ZXIuQ0hJTERcblx0XHRcdFx0Ly8gcmVtZW1iZXIgdGhhdCBmYWxzZS90cnVlIGNhc3QgcmVzcGVjdGl2ZWx5IHRvIDAvMVxuXHRcdFx0XHRtYXRjaFs0XSA9ICsoIG1hdGNoWzRdID8gbWF0Y2hbNV0gKyAobWF0Y2hbNl0gfHwgMSkgOiAyICogKCBtYXRjaFszXSA9PT0gXCJldmVuXCIgfHwgbWF0Y2hbM10gPT09IFwib2RkXCIgKSApO1xuXHRcdFx0XHRtYXRjaFs1XSA9ICsoICggbWF0Y2hbN10gKyBtYXRjaFs4XSApIHx8IG1hdGNoWzNdID09PSBcIm9kZFwiICk7XG5cblx0XHRcdC8vIG90aGVyIHR5cGVzIHByb2hpYml0IGFyZ3VtZW50c1xuXHRcdFx0fSBlbHNlIGlmICggbWF0Y2hbM10gKSB7XG5cdFx0XHRcdFNpenpsZS5lcnJvciggbWF0Y2hbMF0gKTtcblx0XHRcdH1cblxuXHRcdFx0cmV0dXJuIG1hdGNoO1xuXHRcdH0sXG5cblx0XHRcIlBTRVVET1wiOiBmdW5jdGlvbiggbWF0Y2ggKSB7XG5cdFx0XHR2YXIgZXhjZXNzLFxuXHRcdFx0XHR1bnF1b3RlZCA9ICFtYXRjaFs2XSAmJiBtYXRjaFsyXTtcblxuXHRcdFx0aWYgKCBtYXRjaEV4cHJbXCJDSElMRFwiXS50ZXN0KCBtYXRjaFswXSApICkge1xuXHRcdFx0XHRyZXR1cm4gbnVsbDtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQWNjZXB0IHF1b3RlZCBhcmd1bWVudHMgYXMtaXNcblx0XHRcdGlmICggbWF0Y2hbM10gKSB7XG5cdFx0XHRcdG1hdGNoWzJdID0gbWF0Y2hbNF0gfHwgbWF0Y2hbNV0gfHwgXCJcIjtcblxuXHRcdFx0Ly8gU3RyaXAgZXhjZXNzIGNoYXJhY3RlcnMgZnJvbSB1bnF1b3RlZCBhcmd1bWVudHNcblx0XHRcdH0gZWxzZSBpZiAoIHVucXVvdGVkICYmIHJwc2V1ZG8udGVzdCggdW5xdW90ZWQgKSAmJlxuXHRcdFx0XHQvLyBHZXQgZXhjZXNzIGZyb20gdG9rZW5pemUgKHJlY3Vyc2l2ZWx5KVxuXHRcdFx0XHQoZXhjZXNzID0gdG9rZW5pemUoIHVucXVvdGVkLCB0cnVlICkpICYmXG5cdFx0XHRcdC8vIGFkdmFuY2UgdG8gdGhlIG5leHQgY2xvc2luZyBwYXJlbnRoZXNpc1xuXHRcdFx0XHQoZXhjZXNzID0gdW5xdW90ZWQuaW5kZXhPZiggXCIpXCIsIHVucXVvdGVkLmxlbmd0aCAtIGV4Y2VzcyApIC0gdW5xdW90ZWQubGVuZ3RoKSApIHtcblxuXHRcdFx0XHQvLyBleGNlc3MgaXMgYSBuZWdhdGl2ZSBpbmRleFxuXHRcdFx0XHRtYXRjaFswXSA9IG1hdGNoWzBdLnNsaWNlKCAwLCBleGNlc3MgKTtcblx0XHRcdFx0bWF0Y2hbMl0gPSB1bnF1b3RlZC5zbGljZSggMCwgZXhjZXNzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldHVybiBvbmx5IGNhcHR1cmVzIG5lZWRlZCBieSB0aGUgcHNldWRvIGZpbHRlciBtZXRob2QgKHR5cGUgYW5kIGFyZ3VtZW50KVxuXHRcdFx0cmV0dXJuIG1hdGNoLnNsaWNlKCAwLCAzICk7XG5cdFx0fVxuXHR9LFxuXG5cdGZpbHRlcjoge1xuXG5cdFx0XCJUQUdcIjogZnVuY3Rpb24oIG5vZGVOYW1lU2VsZWN0b3IgKSB7XG5cdFx0XHR2YXIgbm9kZU5hbWUgPSBub2RlTmFtZVNlbGVjdG9yLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICkudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiBub2RlTmFtZVNlbGVjdG9yID09PSBcIipcIiA/XG5cdFx0XHRcdGZ1bmN0aW9uKCkgeyByZXR1cm4gdHJ1ZTsgfSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lICYmIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbm9kZU5hbWU7XG5cdFx0XHRcdH07XG5cdFx0fSxcblxuXHRcdFwiQ0xBU1NcIjogZnVuY3Rpb24oIGNsYXNzTmFtZSApIHtcblx0XHRcdHZhciBwYXR0ZXJuID0gY2xhc3NDYWNoZVsgY2xhc3NOYW1lICsgXCIgXCIgXTtcblxuXHRcdFx0cmV0dXJuIHBhdHRlcm4gfHxcblx0XHRcdFx0KHBhdHRlcm4gPSBuZXcgUmVnRXhwKCBcIihefFwiICsgd2hpdGVzcGFjZSArIFwiKVwiICsgY2xhc3NOYW1lICsgXCIoXCIgKyB3aGl0ZXNwYWNlICsgXCJ8JClcIiApKSAmJlxuXHRcdFx0XHRjbGFzc0NhY2hlKCBjbGFzc05hbWUsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHRcdHJldHVybiBwYXR0ZXJuLnRlc3QoIHR5cGVvZiBlbGVtLmNsYXNzTmFtZSA9PT0gXCJzdHJpbmdcIiAmJiBlbGVtLmNsYXNzTmFtZSB8fCB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGUgIT09IFwidW5kZWZpbmVkXCIgJiYgZWxlbS5nZXRBdHRyaWJ1dGUoXCJjbGFzc1wiKSB8fCBcIlwiICk7XG5cdFx0XHRcdH0pO1xuXHRcdH0sXG5cblx0XHRcIkFUVFJcIjogZnVuY3Rpb24oIG5hbWUsIG9wZXJhdG9yLCBjaGVjayApIHtcblx0XHRcdHJldHVybiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIHJlc3VsdCA9IFNpenpsZS5hdHRyKCBlbGVtLCBuYW1lICk7XG5cblx0XHRcdFx0aWYgKCByZXN1bHQgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRyZXR1cm4gb3BlcmF0b3IgPT09IFwiIT1cIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoICFvcGVyYXRvciApIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJlc3VsdCArPSBcIlwiO1xuXG5cdFx0XHRcdHJldHVybiBvcGVyYXRvciA9PT0gXCI9XCIgPyByZXN1bHQgPT09IGNoZWNrIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIhPVwiID8gcmVzdWx0ICE9PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiXj1cIiA/IGNoZWNrICYmIHJlc3VsdC5pbmRleE9mKCBjaGVjayApID09PSAwIDpcblx0XHRcdFx0XHRvcGVyYXRvciA9PT0gXCIqPVwiID8gY2hlY2sgJiYgcmVzdWx0LmluZGV4T2YoIGNoZWNrICkgPiAtMSA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwiJD1cIiA/IGNoZWNrICYmIHJlc3VsdC5zbGljZSggLWNoZWNrLmxlbmd0aCApID09PSBjaGVjayA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwifj1cIiA/ICggXCIgXCIgKyByZXN1bHQucmVwbGFjZSggcndoaXRlc3BhY2UsIFwiIFwiICkgKyBcIiBcIiApLmluZGV4T2YoIGNoZWNrICkgPiAtMSA6XG5cdFx0XHRcdFx0b3BlcmF0b3IgPT09IFwifD1cIiA/IHJlc3VsdCA9PT0gY2hlY2sgfHwgcmVzdWx0LnNsaWNlKCAwLCBjaGVjay5sZW5ndGggKyAxICkgPT09IGNoZWNrICsgXCItXCIgOlxuXHRcdFx0XHRcdGZhbHNlO1xuXHRcdFx0fTtcblx0XHR9LFxuXG5cdFx0XCJDSElMRFwiOiBmdW5jdGlvbiggdHlwZSwgd2hhdCwgYXJndW1lbnQsIGZpcnN0LCBsYXN0ICkge1xuXHRcdFx0dmFyIHNpbXBsZSA9IHR5cGUuc2xpY2UoIDAsIDMgKSAhPT0gXCJudGhcIixcblx0XHRcdFx0Zm9yd2FyZCA9IHR5cGUuc2xpY2UoIC00ICkgIT09IFwibGFzdFwiLFxuXHRcdFx0XHRvZlR5cGUgPSB3aGF0ID09PSBcIm9mLXR5cGVcIjtcblxuXHRcdFx0cmV0dXJuIGZpcnN0ID09PSAxICYmIGxhc3QgPT09IDAgP1xuXG5cdFx0XHRcdC8vIFNob3J0Y3V0IGZvciA6bnRoLSoobilcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0cmV0dXJuICEhZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0XHR9IDpcblxuXHRcdFx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdHZhciBjYWNoZSwgdW5pcXVlQ2FjaGUsIG91dGVyQ2FjaGUsIG5vZGUsIG5vZGVJbmRleCwgc3RhcnQsXG5cdFx0XHRcdFx0XHRkaXIgPSBzaW1wbGUgIT09IGZvcndhcmQgPyBcIm5leHRTaWJsaW5nXCIgOiBcInByZXZpb3VzU2libGluZ1wiLFxuXHRcdFx0XHRcdFx0cGFyZW50ID0gZWxlbS5wYXJlbnROb2RlLFxuXHRcdFx0XHRcdFx0bmFtZSA9IG9mVHlwZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksXG5cdFx0XHRcdFx0XHR1c2VDYWNoZSA9ICF4bWwgJiYgIW9mVHlwZSxcblx0XHRcdFx0XHRcdGRpZmYgPSBmYWxzZTtcblxuXHRcdFx0XHRcdGlmICggcGFyZW50ICkge1xuXG5cdFx0XHRcdFx0XHQvLyA6KGZpcnN0fGxhc3R8b25seSktKGNoaWxkfG9mLXR5cGUpXG5cdFx0XHRcdFx0XHRpZiAoIHNpbXBsZSApIHtcblx0XHRcdFx0XHRcdFx0d2hpbGUgKCBkaXIgKSB7XG5cdFx0XHRcdFx0XHRcdFx0bm9kZSA9IGVsZW07XG5cdFx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobm9kZSA9IG5vZGVbIGRpciBdKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggb2ZUeXBlID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBuYW1lIDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0bm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdC8vIFJldmVyc2UgZGlyZWN0aW9uIGZvciA6b25seS0qIChpZiB3ZSBoYXZlbid0IHlldCBkb25lIHNvKVxuXHRcdFx0XHRcdFx0XHRcdHN0YXJ0ID0gZGlyID0gdHlwZSA9PT0gXCJvbmx5XCIgJiYgIXN0YXJ0ICYmIFwibmV4dFNpYmxpbmdcIjtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0c3RhcnQgPSBbIGZvcndhcmQgPyBwYXJlbnQuZmlyc3RDaGlsZCA6IHBhcmVudC5sYXN0Q2hpbGQgXTtcblxuXHRcdFx0XHRcdFx0Ly8gbm9uLXhtbCA6bnRoLWNoaWxkKC4uLikgc3RvcmVzIGNhY2hlIGRhdGEgb24gYHBhcmVudGBcblx0XHRcdFx0XHRcdGlmICggZm9yd2FyZCAmJiB1c2VDYWNoZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBTZWVrIGBlbGVtYCBmcm9tIGEgcHJldmlvdXNseS1jYWNoZWQgaW5kZXhcblxuXHRcdFx0XHRcdFx0XHQvLyAuLi5pbiBhIGd6aXAtZnJpZW5kbHkgd2F5XG5cdFx0XHRcdFx0XHRcdG5vZGUgPSBwYXJlbnQ7XG5cdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdChvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0Y2FjaGUgPSB1bmlxdWVDYWNoZVsgdHlwZSBdIHx8IFtdO1xuXHRcdFx0XHRcdFx0XHRub2RlSW5kZXggPSBjYWNoZVsgMCBdID09PSBkaXJydW5zICYmIGNhY2hlWyAxIF07XG5cdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXggJiYgY2FjaGVbIDIgXTtcblx0XHRcdFx0XHRcdFx0bm9kZSA9IG5vZGVJbmRleCAmJiBwYXJlbnQuY2hpbGROb2Rlc1sgbm9kZUluZGV4IF07XG5cblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAobm9kZSA9ICsrbm9kZUluZGV4ICYmIG5vZGUgJiYgbm9kZVsgZGlyIF0gfHxcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEZhbGxiYWNrIHRvIHNlZWtpbmcgYGVsZW1gIGZyb20gdGhlIHN0YXJ0XG5cdFx0XHRcdFx0XHRcdFx0KGRpZmYgPSBub2RlSW5kZXggPSAwKSB8fCBzdGFydC5wb3AoKSkgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBXaGVuIGZvdW5kLCBjYWNoZSBpbmRleGVzIG9uIGBwYXJlbnRgIGFuZCBicmVha1xuXHRcdFx0XHRcdFx0XHRcdGlmICggbm9kZS5ub2RlVHlwZSA9PT0gMSAmJiArK2RpZmYgJiYgbm9kZSA9PT0gZWxlbSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIG5vZGVJbmRleCwgZGlmZiBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdC8vIFVzZSBwcmV2aW91c2x5LWNhY2hlZCBlbGVtZW50IGluZGV4IGlmIGF2YWlsYWJsZVxuXHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXHRcdFx0XHRcdFx0XHRcdC8vIC4uLmluIGEgZ3ppcC1mcmllbmRseSB3YXlcblx0XHRcdFx0XHRcdFx0XHRub2RlID0gZWxlbTtcblx0XHRcdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gbm9kZVsgZXhwYW5kbyBdIHx8IChub2RlWyBleHBhbmRvIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8OSBvbmx5XG5cdFx0XHRcdFx0XHRcdFx0Ly8gRGVmZW5kIGFnYWluc3QgY2xvbmVkIGF0dHJvcGVydGllcyAoalF1ZXJ5IGdoLTE3MDkpXG5cdFx0XHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gfHxcblx0XHRcdFx0XHRcdFx0XHRcdChvdXRlckNhY2hlWyBub2RlLnVuaXF1ZUlEIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdFx0XHRjYWNoZSA9IHVuaXF1ZUNhY2hlWyB0eXBlIF0gfHwgW107XG5cdFx0XHRcdFx0XHRcdFx0bm9kZUluZGV4ID0gY2FjaGVbIDAgXSA9PT0gZGlycnVucyAmJiBjYWNoZVsgMSBdO1xuXHRcdFx0XHRcdFx0XHRcdGRpZmYgPSBub2RlSW5kZXg7XG5cdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHQvLyB4bWwgOm50aC1jaGlsZCguLi4pXG5cdFx0XHRcdFx0XHRcdC8vIG9yIDpudGgtbGFzdC1jaGlsZCguLi4pIG9yIDpudGgoLWxhc3QpPy1vZi10eXBlKC4uLilcblx0XHRcdFx0XHRcdFx0aWYgKCBkaWZmID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRcdFx0XHQvLyBVc2UgdGhlIHNhbWUgbG9vcCBhcyBhYm92ZSB0byBzZWVrIGBlbGVtYCBmcm9tIHRoZSBzdGFydFxuXHRcdFx0XHRcdFx0XHRcdHdoaWxlICggKG5vZGUgPSArK25vZGVJbmRleCAmJiBub2RlICYmIG5vZGVbIGRpciBdIHx8XG5cdFx0XHRcdFx0XHRcdFx0XHQoZGlmZiA9IG5vZGVJbmRleCA9IDApIHx8IHN0YXJ0LnBvcCgpKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0aWYgKCAoIG9mVHlwZSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PT0gbmFtZSA6XG5cdFx0XHRcdFx0XHRcdFx0XHRcdG5vZGUubm9kZVR5cGUgPT09IDEgKSAmJlxuXHRcdFx0XHRcdFx0XHRcdFx0XHQrK2RpZmYgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gQ2FjaGUgdGhlIGluZGV4IG9mIGVhY2ggZW5jb3VudGVyZWQgZWxlbWVudFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIHVzZUNhY2hlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG91dGVyQ2FjaGUgPSBub2RlWyBleHBhbmRvIF0gfHwgKG5vZGVbIGV4cGFuZG8gXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBEZWZlbmQgYWdhaW5zdCBjbG9uZWQgYXR0cm9wZXJ0aWVzIChqUXVlcnkgZ2gtMTcwOSlcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR1bmlxdWVDYWNoZSA9IG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSB8fFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0KG91dGVyQ2FjaGVbIG5vZGUudW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyB0eXBlIF0gPSBbIGRpcnJ1bnMsIGRpZmYgXTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggbm9kZSA9PT0gZWxlbSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBJbmNvcnBvcmF0ZSB0aGUgb2Zmc2V0LCB0aGVuIGNoZWNrIGFnYWluc3QgY3ljbGUgc2l6ZVxuXHRcdFx0XHRcdFx0ZGlmZiAtPSBsYXN0O1xuXHRcdFx0XHRcdFx0cmV0dXJuIGRpZmYgPT09IGZpcnN0IHx8ICggZGlmZiAlIGZpcnN0ID09PSAwICYmIGRpZmYgLyBmaXJzdCA+PSAwICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9O1xuXHRcdH0sXG5cblx0XHRcIlBTRVVET1wiOiBmdW5jdGlvbiggcHNldWRvLCBhcmd1bWVudCApIHtcblx0XHRcdC8vIHBzZXVkby1jbGFzcyBuYW1lcyBhcmUgY2FzZS1pbnNlbnNpdGl2ZVxuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvc2VsZWN0b3JzLyNwc2V1ZG8tY2xhc3Nlc1xuXHRcdFx0Ly8gUHJpb3JpdGl6ZSBieSBjYXNlIHNlbnNpdGl2aXR5IGluIGNhc2UgY3VzdG9tIHBzZXVkb3MgYXJlIGFkZGVkIHdpdGggdXBwZXJjYXNlIGxldHRlcnNcblx0XHRcdC8vIFJlbWVtYmVyIHRoYXQgc2V0RmlsdGVycyBpbmhlcml0cyBmcm9tIHBzZXVkb3Ncblx0XHRcdHZhciBhcmdzLFxuXHRcdFx0XHRmbiA9IEV4cHIucHNldWRvc1sgcHNldWRvIF0gfHwgRXhwci5zZXRGaWx0ZXJzWyBwc2V1ZG8udG9Mb3dlckNhc2UoKSBdIHx8XG5cdFx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIHBzZXVkbzogXCIgKyBwc2V1ZG8gKTtcblxuXHRcdFx0Ly8gVGhlIHVzZXIgbWF5IHVzZSBjcmVhdGVQc2V1ZG8gdG8gaW5kaWNhdGUgdGhhdFxuXHRcdFx0Ly8gYXJndW1lbnRzIGFyZSBuZWVkZWQgdG8gY3JlYXRlIHRoZSBmaWx0ZXIgZnVuY3Rpb25cblx0XHRcdC8vIGp1c3QgYXMgU2l6emxlIGRvZXNcblx0XHRcdGlmICggZm5bIGV4cGFuZG8gXSApIHtcblx0XHRcdFx0cmV0dXJuIGZuKCBhcmd1bWVudCApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBCdXQgbWFpbnRhaW4gc3VwcG9ydCBmb3Igb2xkIHNpZ25hdHVyZXNcblx0XHRcdGlmICggZm4ubGVuZ3RoID4gMSApIHtcblx0XHRcdFx0YXJncyA9IFsgcHNldWRvLCBwc2V1ZG8sIFwiXCIsIGFyZ3VtZW50IF07XG5cdFx0XHRcdHJldHVybiBFeHByLnNldEZpbHRlcnMuaGFzT3duUHJvcGVydHkoIHBzZXVkby50b0xvd2VyQ2FzZSgpICkgP1xuXHRcdFx0XHRcdG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcyApIHtcblx0XHRcdFx0XHRcdHZhciBpZHgsXG5cdFx0XHRcdFx0XHRcdG1hdGNoZWQgPSBmbiggc2VlZCwgYXJndW1lbnQgKSxcblx0XHRcdFx0XHRcdFx0aSA9IG1hdGNoZWQubGVuZ3RoO1xuXHRcdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdFx0XHRcdGlkeCA9IGluZGV4T2YoIHNlZWQsIG1hdGNoZWRbaV0gKTtcblx0XHRcdFx0XHRcdFx0c2VlZFsgaWR4IF0gPSAhKCBtYXRjaGVzWyBpZHggXSA9IG1hdGNoZWRbaV0gKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9KSA6XG5cdFx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZm4oIGVsZW0sIDAsIGFyZ3MgKTtcblx0XHRcdFx0XHR9O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gZm47XG5cdFx0fVxuXHR9LFxuXG5cdHBzZXVkb3M6IHtcblx0XHQvLyBQb3RlbnRpYWxseSBjb21wbGV4IHBzZXVkb3Ncblx0XHRcIm5vdFwiOiBtYXJrRnVuY3Rpb24oZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdFx0Ly8gVHJpbSB0aGUgc2VsZWN0b3IgcGFzc2VkIHRvIGNvbXBpbGVcblx0XHRcdC8vIHRvIGF2b2lkIHRyZWF0aW5nIGxlYWRpbmcgYW5kIHRyYWlsaW5nXG5cdFx0XHQvLyBzcGFjZXMgYXMgY29tYmluYXRvcnNcblx0XHRcdHZhciBpbnB1dCA9IFtdLFxuXHRcdFx0XHRyZXN1bHRzID0gW10sXG5cdFx0XHRcdG1hdGNoZXIgPSBjb21waWxlKCBzZWxlY3Rvci5yZXBsYWNlKCBydHJpbSwgXCIkMVwiICkgKTtcblxuXHRcdFx0cmV0dXJuIG1hdGNoZXJbIGV4cGFuZG8gXSA/XG5cdFx0XHRcdG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgbWF0Y2hlcywgY29udGV4dCwgeG1sICkge1xuXHRcdFx0XHRcdHZhciBlbGVtLFxuXHRcdFx0XHRcdFx0dW5tYXRjaGVkID0gbWF0Y2hlciggc2VlZCwgbnVsbCwgeG1sLCBbXSApLFxuXHRcdFx0XHRcdFx0aSA9IHNlZWQubGVuZ3RoO1xuXG5cdFx0XHRcdFx0Ly8gTWF0Y2ggZWxlbWVudHMgdW5tYXRjaGVkIGJ5IGBtYXRjaGVyYFxuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IHVubWF0Y2hlZFtpXSkgKSB7XG5cdFx0XHRcdFx0XHRcdHNlZWRbaV0gPSAhKG1hdGNoZXNbaV0gPSBlbGVtKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0pIDpcblx0XHRcdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdFx0XHRpbnB1dFswXSA9IGVsZW07XG5cdFx0XHRcdFx0bWF0Y2hlciggaW5wdXQsIG51bGwsIHhtbCwgcmVzdWx0cyApO1xuXHRcdFx0XHRcdC8vIERvbid0IGtlZXAgdGhlIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRcdFx0aW5wdXRbMF0gPSBudWxsO1xuXHRcdFx0XHRcdHJldHVybiAhcmVzdWx0cy5wb3AoKTtcblx0XHRcdFx0fTtcblx0XHR9KSxcblxuXHRcdFwiaGFzXCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiBTaXp6bGUoIHNlbGVjdG9yLCBlbGVtICkubGVuZ3RoID4gMDtcblx0XHRcdH07XG5cdFx0fSksXG5cblx0XHRcImNvbnRhaW5zXCI6IG1hcmtGdW5jdGlvbihmdW5jdGlvbiggdGV4dCApIHtcblx0XHRcdHRleHQgPSB0ZXh0LnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICk7XG5cdFx0XHRyZXR1cm4gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRcdHJldHVybiAoIGVsZW0udGV4dENvbnRlbnQgfHwgZWxlbS5pbm5lclRleHQgfHwgZ2V0VGV4dCggZWxlbSApICkuaW5kZXhPZiggdGV4dCApID4gLTE7XG5cdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0Ly8gXCJXaGV0aGVyIGFuIGVsZW1lbnQgaXMgcmVwcmVzZW50ZWQgYnkgYSA6bGFuZygpIHNlbGVjdG9yXG5cdFx0Ly8gaXMgYmFzZWQgc29sZWx5IG9uIHRoZSBlbGVtZW50J3MgbGFuZ3VhZ2UgdmFsdWVcblx0XHQvLyBiZWluZyBlcXVhbCB0byB0aGUgaWRlbnRpZmllciBDLFxuXHRcdC8vIG9yIGJlZ2lubmluZyB3aXRoIHRoZSBpZGVudGlmaWVyIEMgaW1tZWRpYXRlbHkgZm9sbG93ZWQgYnkgXCItXCIuXG5cdFx0Ly8gVGhlIG1hdGNoaW5nIG9mIEMgYWdhaW5zdCB0aGUgZWxlbWVudCdzIGxhbmd1YWdlIHZhbHVlIGlzIHBlcmZvcm1lZCBjYXNlLWluc2Vuc2l0aXZlbHkuXG5cdFx0Ly8gVGhlIGlkZW50aWZpZXIgQyBkb2VzIG5vdCBoYXZlIHRvIGJlIGEgdmFsaWQgbGFuZ3VhZ2UgbmFtZS5cIlxuXHRcdC8vIGh0dHA6Ly93d3cudzMub3JnL1RSL3NlbGVjdG9ycy8jbGFuZy1wc2V1ZG9cblx0XHRcImxhbmdcIjogbWFya0Z1bmN0aW9uKCBmdW5jdGlvbiggbGFuZyApIHtcblx0XHRcdC8vIGxhbmcgdmFsdWUgbXVzdCBiZSBhIHZhbGlkIGlkZW50aWZpZXJcblx0XHRcdGlmICggIXJpZGVudGlmaWVyLnRlc3QobGFuZyB8fCBcIlwiKSApIHtcblx0XHRcdFx0U2l6emxlLmVycm9yKCBcInVuc3VwcG9ydGVkIGxhbmc6IFwiICsgbGFuZyApO1xuXHRcdFx0fVxuXHRcdFx0bGFuZyA9IGxhbmcucmVwbGFjZSggcnVuZXNjYXBlLCBmdW5lc2NhcGUgKS50b0xvd2VyQ2FzZSgpO1xuXHRcdFx0cmV0dXJuIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0XHR2YXIgZWxlbUxhbmc7XG5cdFx0XHRcdGRvIHtcblx0XHRcdFx0XHRpZiAoIChlbGVtTGFuZyA9IGRvY3VtZW50SXNIVE1MID9cblx0XHRcdFx0XHRcdGVsZW0ubGFuZyA6XG5cdFx0XHRcdFx0XHRlbGVtLmdldEF0dHJpYnV0ZShcInhtbDpsYW5nXCIpIHx8IGVsZW0uZ2V0QXR0cmlidXRlKFwibGFuZ1wiKSkgKSB7XG5cblx0XHRcdFx0XHRcdGVsZW1MYW5nID0gZWxlbUxhbmcudG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0XHRcdHJldHVybiBlbGVtTGFuZyA9PT0gbGFuZyB8fCBlbGVtTGFuZy5pbmRleE9mKCBsYW5nICsgXCItXCIgKSA9PT0gMDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gd2hpbGUgKCAoZWxlbSA9IGVsZW0ucGFyZW50Tm9kZSkgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApO1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9O1xuXHRcdH0pLFxuXG5cdFx0Ly8gTWlzY2VsbGFuZW91c1xuXHRcdFwidGFyZ2V0XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIGhhc2ggPSB3aW5kb3cubG9jYXRpb24gJiYgd2luZG93LmxvY2F0aW9uLmhhc2g7XG5cdFx0XHRyZXR1cm4gaGFzaCAmJiBoYXNoLnNsaWNlKCAxICkgPT09IGVsZW0uaWQ7XG5cdFx0fSxcblxuXHRcdFwicm9vdFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBkb2NFbGVtO1xuXHRcdH0sXG5cblx0XHRcImZvY3VzXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGVsZW0gPT09IGRvY3VtZW50LmFjdGl2ZUVsZW1lbnQgJiYgKCFkb2N1bWVudC5oYXNGb2N1cyB8fCBkb2N1bWVudC5oYXNGb2N1cygpKSAmJiAhIShlbGVtLnR5cGUgfHwgZWxlbS5ocmVmIHx8IH5lbGVtLnRhYkluZGV4KTtcblx0XHR9LFxuXG5cdFx0Ly8gQm9vbGVhbiBwcm9wZXJ0aWVzXG5cdFx0XCJlbmFibGVkXCI6IGNyZWF0ZURpc2FibGVkUHNldWRvKCBmYWxzZSApLFxuXHRcdFwiZGlzYWJsZWRcIjogY3JlYXRlRGlzYWJsZWRQc2V1ZG8oIHRydWUgKSxcblxuXHRcdFwiY2hlY2tlZFwiOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdC8vIEluIENTUzMsIDpjaGVja2VkIHNob3VsZCByZXR1cm4gYm90aCBjaGVja2VkIGFuZCBzZWxlY3RlZCBlbGVtZW50c1xuXHRcdFx0Ly8gaHR0cDovL3d3dy53My5vcmcvVFIvMjAxMS9SRUMtY3NzMy1zZWxlY3RvcnMtMjAxMTA5MjkvI2NoZWNrZWRcblx0XHRcdHZhciBub2RlTmFtZSA9IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblx0XHRcdHJldHVybiAobm9kZU5hbWUgPT09IFwiaW5wdXRcIiAmJiAhIWVsZW0uY2hlY2tlZCkgfHwgKG5vZGVOYW1lID09PSBcIm9wdGlvblwiICYmICEhZWxlbS5zZWxlY3RlZCk7XG5cdFx0fSxcblxuXHRcdFwic2VsZWN0ZWRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHQvLyBBY2Nlc3NpbmcgdGhpcyBwcm9wZXJ0eSBtYWtlcyBzZWxlY3RlZC1ieS1kZWZhdWx0XG5cdFx0XHQvLyBvcHRpb25zIGluIFNhZmFyaSB3b3JrIHByb3Blcmx5XG5cdFx0XHRpZiAoIGVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0ZWxlbS5wYXJlbnROb2RlLnNlbGVjdGVkSW5kZXg7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBlbGVtLnNlbGVjdGVkID09PSB0cnVlO1xuXHRcdH0sXG5cblx0XHQvLyBDb250ZW50c1xuXHRcdFwiZW1wdHlcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHQvLyBodHRwOi8vd3d3LnczLm9yZy9UUi9zZWxlY3RvcnMvI2VtcHR5LXBzZXVkb1xuXHRcdFx0Ly8gOmVtcHR5IGlzIG5lZ2F0ZWQgYnkgZWxlbWVudCAoMSkgb3IgY29udGVudCBub2RlcyAodGV4dDogMzsgY2RhdGE6IDQ7IGVudGl0eSByZWY6IDUpLFxuXHRcdFx0Ly8gICBidXQgbm90IGJ5IG90aGVycyAoY29tbWVudDogODsgcHJvY2Vzc2luZyBpbnN0cnVjdGlvbjogNzsgZXRjLilcblx0XHRcdC8vIG5vZGVUeXBlIDwgNiB3b3JrcyBiZWNhdXNlIGF0dHJpYnV0ZXMgKDIpIGRvIG5vdCBhcHBlYXIgYXMgY2hpbGRyZW5cblx0XHRcdGZvciAoIGVsZW0gPSBlbGVtLmZpcnN0Q2hpbGQ7IGVsZW07IGVsZW0gPSBlbGVtLm5leHRTaWJsaW5nICkge1xuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPCA2ICkge1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0fSxcblxuXHRcdFwicGFyZW50XCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICFFeHByLnBzZXVkb3NbXCJlbXB0eVwiXSggZWxlbSApO1xuXHRcdH0sXG5cblx0XHQvLyBFbGVtZW50L2lucHV0IHR5cGVzXG5cdFx0XCJoZWFkZXJcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmhlYWRlci50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiaW5wdXRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4gcmlucHV0cy50ZXN0KCBlbGVtLm5vZGVOYW1lICk7XG5cdFx0fSxcblxuXHRcdFwiYnV0dG9uXCI6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0dmFyIG5hbWUgPSBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCk7XG5cdFx0XHRyZXR1cm4gbmFtZSA9PT0gXCJpbnB1dFwiICYmIGVsZW0udHlwZSA9PT0gXCJidXR0b25cIiB8fCBuYW1lID09PSBcImJ1dHRvblwiO1xuXHRcdH0sXG5cblx0XHRcInRleHRcIjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgYXR0cjtcblx0XHRcdHJldHVybiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwiaW5wdXRcIiAmJlxuXHRcdFx0XHRlbGVtLnR5cGUgPT09IFwidGV4dFwiICYmXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogSUU8OFxuXHRcdFx0XHQvLyBOZXcgSFRNTDUgYXR0cmlidXRlIHZhbHVlcyAoZS5nLiwgXCJzZWFyY2hcIikgYXBwZWFyIHdpdGggZWxlbS50eXBlID09PSBcInRleHRcIlxuXHRcdFx0XHQoIChhdHRyID0gZWxlbS5nZXRBdHRyaWJ1dGUoXCJ0eXBlXCIpKSA9PSBudWxsIHx8IGF0dHIudG9Mb3dlckNhc2UoKSA9PT0gXCJ0ZXh0XCIgKTtcblx0XHR9LFxuXG5cdFx0Ly8gUG9zaXRpb24taW4tY29sbGVjdGlvblxuXHRcdFwiZmlyc3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbigpIHtcblx0XHRcdHJldHVybiBbIDAgXTtcblx0XHR9KSxcblxuXHRcdFwibGFzdFwiOiBjcmVhdGVQb3NpdGlvbmFsUHNldWRvKGZ1bmN0aW9uKCBtYXRjaEluZGV4ZXMsIGxlbmd0aCApIHtcblx0XHRcdHJldHVybiBbIGxlbmd0aCAtIDEgXTtcblx0XHR9KSxcblxuXHRcdFwiZXFcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0cmV0dXJuIFsgYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudCBdO1xuXHRcdH0pLFxuXG5cdFx0XCJldmVuXCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoICkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuZ3RoOyBpICs9IDIgKSB7XG5cdFx0XHRcdG1hdGNoSW5kZXhlcy5wdXNoKCBpICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gbWF0Y2hJbmRleGVzO1xuXHRcdH0pLFxuXG5cdFx0XCJvZGRcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGggKSB7XG5cdFx0XHR2YXIgaSA9IDE7XG5cdFx0XHRmb3IgKCA7IGkgPCBsZW5ndGg7IGkgKz0gMiApIHtcblx0XHRcdFx0bWF0Y2hJbmRleGVzLnB1c2goIGkgKTtcblx0XHRcdH1cblx0XHRcdHJldHVybiBtYXRjaEluZGV4ZXM7XG5cdFx0fSksXG5cblx0XHRcImx0XCI6IGNyZWF0ZVBvc2l0aW9uYWxQc2V1ZG8oZnVuY3Rpb24oIG1hdGNoSW5kZXhlcywgbGVuZ3RoLCBhcmd1bWVudCApIHtcblx0XHRcdHZhciBpID0gYXJndW1lbnQgPCAwID8gYXJndW1lbnQgKyBsZW5ndGggOiBhcmd1bWVudDtcblx0XHRcdGZvciAoIDsgLS1pID49IDA7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KSxcblxuXHRcdFwiZ3RcIjogY3JlYXRlUG9zaXRpb25hbFBzZXVkbyhmdW5jdGlvbiggbWF0Y2hJbmRleGVzLCBsZW5ndGgsIGFyZ3VtZW50ICkge1xuXHRcdFx0dmFyIGkgPSBhcmd1bWVudCA8IDAgPyBhcmd1bWVudCArIGxlbmd0aCA6IGFyZ3VtZW50O1xuXHRcdFx0Zm9yICggOyArK2kgPCBsZW5ndGg7ICkge1xuXHRcdFx0XHRtYXRjaEluZGV4ZXMucHVzaCggaSApO1xuXHRcdFx0fVxuXHRcdFx0cmV0dXJuIG1hdGNoSW5kZXhlcztcblx0XHR9KVxuXHR9XG59O1xuXG5FeHByLnBzZXVkb3NbXCJudGhcIl0gPSBFeHByLnBzZXVkb3NbXCJlcVwiXTtcblxuLy8gQWRkIGJ1dHRvbi9pbnB1dCB0eXBlIHBzZXVkb3NcbmZvciAoIGkgaW4geyByYWRpbzogdHJ1ZSwgY2hlY2tib3g6IHRydWUsIGZpbGU6IHRydWUsIHBhc3N3b3JkOiB0cnVlLCBpbWFnZTogdHJ1ZSB9ICkge1xuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUlucHV0UHNldWRvKCBpICk7XG59XG5mb3IgKCBpIGluIHsgc3VibWl0OiB0cnVlLCByZXNldDogdHJ1ZSB9ICkge1xuXHRFeHByLnBzZXVkb3NbIGkgXSA9IGNyZWF0ZUJ1dHRvblBzZXVkbyggaSApO1xufVxuXG4vLyBFYXN5IEFQSSBmb3IgY3JlYXRpbmcgbmV3IHNldEZpbHRlcnNcbmZ1bmN0aW9uIHNldEZpbHRlcnMoKSB7fVxuc2V0RmlsdGVycy5wcm90b3R5cGUgPSBFeHByLmZpbHRlcnMgPSBFeHByLnBzZXVkb3M7XG5FeHByLnNldEZpbHRlcnMgPSBuZXcgc2V0RmlsdGVycygpO1xuXG50b2tlbml6ZSA9IFNpenpsZS50b2tlbml6ZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgcGFyc2VPbmx5ICkge1xuXHR2YXIgbWF0Y2hlZCwgbWF0Y2gsIHRva2VucywgdHlwZSxcblx0XHRzb0ZhciwgZ3JvdXBzLCBwcmVGaWx0ZXJzLFxuXHRcdGNhY2hlZCA9IHRva2VuQ2FjaGVbIHNlbGVjdG9yICsgXCIgXCIgXTtcblxuXHRpZiAoIGNhY2hlZCApIHtcblx0XHRyZXR1cm4gcGFyc2VPbmx5ID8gMCA6IGNhY2hlZC5zbGljZSggMCApO1xuXHR9XG5cblx0c29GYXIgPSBzZWxlY3Rvcjtcblx0Z3JvdXBzID0gW107XG5cdHByZUZpbHRlcnMgPSBFeHByLnByZUZpbHRlcjtcblxuXHR3aGlsZSAoIHNvRmFyICkge1xuXG5cdFx0Ly8gQ29tbWEgYW5kIGZpcnN0IHJ1blxuXHRcdGlmICggIW1hdGNoZWQgfHwgKG1hdGNoID0gcmNvbW1hLmV4ZWMoIHNvRmFyICkpICkge1xuXHRcdFx0aWYgKCBtYXRjaCApIHtcblx0XHRcdFx0Ly8gRG9uJ3QgY29uc3VtZSB0cmFpbGluZyBjb21tYXMgYXMgdmFsaWRcblx0XHRcdFx0c29GYXIgPSBzb0Zhci5zbGljZSggbWF0Y2hbMF0ubGVuZ3RoICkgfHwgc29GYXI7XG5cdFx0XHR9XG5cdFx0XHRncm91cHMucHVzaCggKHRva2VucyA9IFtdKSApO1xuXHRcdH1cblxuXHRcdG1hdGNoZWQgPSBmYWxzZTtcblxuXHRcdC8vIENvbWJpbmF0b3JzXG5cdFx0aWYgKCAobWF0Y2ggPSByY29tYmluYXRvcnMuZXhlYyggc29GYXIgKSkgKSB7XG5cdFx0XHRtYXRjaGVkID0gbWF0Y2guc2hpZnQoKTtcblx0XHRcdHRva2Vucy5wdXNoKHtcblx0XHRcdFx0dmFsdWU6IG1hdGNoZWQsXG5cdFx0XHRcdC8vIENhc3QgZGVzY2VuZGFudCBjb21iaW5hdG9ycyB0byBzcGFjZVxuXHRcdFx0XHR0eXBlOiBtYXRjaFswXS5yZXBsYWNlKCBydHJpbSwgXCIgXCIgKVxuXHRcdFx0fSk7XG5cdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdH1cblxuXHRcdC8vIEZpbHRlcnNcblx0XHRmb3IgKCB0eXBlIGluIEV4cHIuZmlsdGVyICkge1xuXHRcdFx0aWYgKCAobWF0Y2ggPSBtYXRjaEV4cHJbIHR5cGUgXS5leGVjKCBzb0ZhciApKSAmJiAoIXByZUZpbHRlcnNbIHR5cGUgXSB8fFxuXHRcdFx0XHQobWF0Y2ggPSBwcmVGaWx0ZXJzWyB0eXBlIF0oIG1hdGNoICkpKSApIHtcblx0XHRcdFx0bWF0Y2hlZCA9IG1hdGNoLnNoaWZ0KCk7XG5cdFx0XHRcdHRva2Vucy5wdXNoKHtcblx0XHRcdFx0XHR2YWx1ZTogbWF0Y2hlZCxcblx0XHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRcdG1hdGNoZXM6IG1hdGNoXG5cdFx0XHRcdH0pO1xuXHRcdFx0XHRzb0ZhciA9IHNvRmFyLnNsaWNlKCBtYXRjaGVkLmxlbmd0aCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggIW1hdGNoZWQgKSB7XG5cdFx0XHRicmVhaztcblx0XHR9XG5cdH1cblxuXHQvLyBSZXR1cm4gdGhlIGxlbmd0aCBvZiB0aGUgaW52YWxpZCBleGNlc3Ncblx0Ly8gaWYgd2UncmUganVzdCBwYXJzaW5nXG5cdC8vIE90aGVyd2lzZSwgdGhyb3cgYW4gZXJyb3Igb3IgcmV0dXJuIHRva2Vuc1xuXHRyZXR1cm4gcGFyc2VPbmx5ID9cblx0XHRzb0Zhci5sZW5ndGggOlxuXHRcdHNvRmFyID9cblx0XHRcdFNpenpsZS5lcnJvciggc2VsZWN0b3IgKSA6XG5cdFx0XHQvLyBDYWNoZSB0aGUgdG9rZW5zXG5cdFx0XHR0b2tlbkNhY2hlKCBzZWxlY3RvciwgZ3JvdXBzICkuc2xpY2UoIDAgKTtcbn07XG5cbmZ1bmN0aW9uIHRvU2VsZWN0b3IoIHRva2VucyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IHRva2Vucy5sZW5ndGgsXG5cdFx0c2VsZWN0b3IgPSBcIlwiO1xuXHRmb3IgKCA7IGkgPCBsZW47IGkrKyApIHtcblx0XHRzZWxlY3RvciArPSB0b2tlbnNbaV0udmFsdWU7XG5cdH1cblx0cmV0dXJuIHNlbGVjdG9yO1xufVxuXG5mdW5jdGlvbiBhZGRDb21iaW5hdG9yKCBtYXRjaGVyLCBjb21iaW5hdG9yLCBiYXNlICkge1xuXHR2YXIgZGlyID0gY29tYmluYXRvci5kaXIsXG5cdFx0c2tpcCA9IGNvbWJpbmF0b3IubmV4dCxcblx0XHRrZXkgPSBza2lwIHx8IGRpcixcblx0XHRjaGVja05vbkVsZW1lbnRzID0gYmFzZSAmJiBrZXkgPT09IFwicGFyZW50Tm9kZVwiLFxuXHRcdGRvbmVOYW1lID0gZG9uZSsrO1xuXG5cdHJldHVybiBjb21iaW5hdG9yLmZpcnN0ID9cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGNsb3Nlc3QgYW5jZXN0b3IvcHJlY2VkaW5nIGVsZW1lbnRcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0d2hpbGUgKCAoZWxlbSA9IGVsZW1bIGRpciBdKSApIHtcblx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fSA6XG5cblx0XHQvLyBDaGVjayBhZ2FpbnN0IGFsbCBhbmNlc3Rvci9wcmVjZWRpbmcgZWxlbWVudHNcblx0XHRmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIG9sZENhY2hlLCB1bmlxdWVDYWNoZSwgb3V0ZXJDYWNoZSxcblx0XHRcdFx0bmV3Q2FjaGUgPSBbIGRpcnJ1bnMsIGRvbmVOYW1lIF07XG5cblx0XHRcdC8vIFdlIGNhbid0IHNldCBhcmJpdHJhcnkgZGF0YSBvbiBYTUwgbm9kZXMsIHNvIHRoZXkgZG9uJ3QgYmVuZWZpdCBmcm9tIGNvbWJpbmF0b3IgY2FjaGluZ1xuXHRcdFx0aWYgKCB4bWwgKSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZXIoIGVsZW0sIGNvbnRleHQsIHhtbCApICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHdoaWxlICggKGVsZW0gPSBlbGVtWyBkaXIgXSkgKSB7XG5cdFx0XHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGNoZWNrTm9uRWxlbWVudHMgKSB7XG5cdFx0XHRcdFx0XHRvdXRlckNhY2hlID0gZWxlbVsgZXhwYW5kbyBdIHx8IChlbGVtWyBleHBhbmRvIF0gPSB7fSk7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDw5IG9ubHlcblx0XHRcdFx0XHRcdC8vIERlZmVuZCBhZ2FpbnN0IGNsb25lZCBhdHRyb3BlcnRpZXMgKGpRdWVyeSBnaC0xNzA5KVxuXHRcdFx0XHRcdFx0dW5pcXVlQ2FjaGUgPSBvdXRlckNhY2hlWyBlbGVtLnVuaXF1ZUlEIF0gfHwgKG91dGVyQ2FjaGVbIGVsZW0udW5pcXVlSUQgXSA9IHt9KTtcblxuXHRcdFx0XHRcdFx0aWYgKCBza2lwICYmIHNraXAgPT09IGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSApIHtcblx0XHRcdFx0XHRcdFx0ZWxlbSA9IGVsZW1bIGRpciBdIHx8IGVsZW07XG5cdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCAob2xkQ2FjaGUgPSB1bmlxdWVDYWNoZVsga2V5IF0pICYmXG5cdFx0XHRcdFx0XHRcdG9sZENhY2hlWyAwIF0gPT09IGRpcnJ1bnMgJiYgb2xkQ2FjaGVbIDEgXSA9PT0gZG9uZU5hbWUgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQXNzaWduIHRvIG5ld0NhY2hlIHNvIHJlc3VsdHMgYmFjay1wcm9wYWdhdGUgdG8gcHJldmlvdXMgZWxlbWVudHNcblx0XHRcdFx0XHRcdFx0cmV0dXJuIChuZXdDYWNoZVsgMiBdID0gb2xkQ2FjaGVbIDIgXSk7XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHQvLyBSZXVzZSBuZXdjYWNoZSBzbyByZXN1bHRzIGJhY2stcHJvcGFnYXRlIHRvIHByZXZpb3VzIGVsZW1lbnRzXG5cdFx0XHRcdFx0XHRcdHVuaXF1ZUNhY2hlWyBrZXkgXSA9IG5ld0NhY2hlO1xuXG5cdFx0XHRcdFx0XHRcdC8vIEEgbWF0Y2ggbWVhbnMgd2UncmUgZG9uZTsgYSBmYWlsIG1lYW5zIHdlIGhhdmUgdG8ga2VlcCBjaGVja2luZ1xuXHRcdFx0XHRcdFx0XHRpZiAoIChuZXdDYWNoZVsgMiBdID0gbWF0Y2hlciggZWxlbSwgY29udGV4dCwgeG1sICkpICkge1xuXHRcdFx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0fTtcbn1cblxuZnVuY3Rpb24gZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICkge1xuXHRyZXR1cm4gbWF0Y2hlcnMubGVuZ3RoID4gMSA/XG5cdFx0ZnVuY3Rpb24oIGVsZW0sIGNvbnRleHQsIHhtbCApIHtcblx0XHRcdHZhciBpID0gbWF0Y2hlcnMubGVuZ3RoO1xuXHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRcdGlmICggIW1hdGNoZXJzW2ldKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiB0cnVlO1xuXHRcdH0gOlxuXHRcdG1hdGNoZXJzWzBdO1xufVxuXG5mdW5jdGlvbiBtdWx0aXBsZUNvbnRleHRzKCBzZWxlY3RvciwgY29udGV4dHMsIHJlc3VsdHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsZW4gPSBjb250ZXh0cy5sZW5ndGg7XG5cdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFNpenpsZSggc2VsZWN0b3IsIGNvbnRleHRzW2ldLCByZXN1bHRzICk7XG5cdH1cblx0cmV0dXJuIHJlc3VsdHM7XG59XG5cbmZ1bmN0aW9uIGNvbmRlbnNlKCB1bm1hdGNoZWQsIG1hcCwgZmlsdGVyLCBjb250ZXh0LCB4bWwgKSB7XG5cdHZhciBlbGVtLFxuXHRcdG5ld1VubWF0Y2hlZCA9IFtdLFxuXHRcdGkgPSAwLFxuXHRcdGxlbiA9IHVubWF0Y2hlZC5sZW5ndGgsXG5cdFx0bWFwcGVkID0gbWFwICE9IG51bGw7XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAoZWxlbSA9IHVubWF0Y2hlZFtpXSkgKSB7XG5cdFx0XHRpZiAoICFmaWx0ZXIgfHwgZmlsdGVyKCBlbGVtLCBjb250ZXh0LCB4bWwgKSApIHtcblx0XHRcdFx0bmV3VW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0aWYgKCBtYXBwZWQgKSB7XG5cdFx0XHRcdFx0bWFwLnB1c2goIGkgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdHJldHVybiBuZXdVbm1hdGNoZWQ7XG59XG5cbmZ1bmN0aW9uIHNldE1hdGNoZXIoIHByZUZpbHRlciwgc2VsZWN0b3IsIG1hdGNoZXIsIHBvc3RGaWx0ZXIsIHBvc3RGaW5kZXIsIHBvc3RTZWxlY3RvciApIHtcblx0aWYgKCBwb3N0RmlsdGVyICYmICFwb3N0RmlsdGVyWyBleHBhbmRvIF0gKSB7XG5cdFx0cG9zdEZpbHRlciA9IHNldE1hdGNoZXIoIHBvc3RGaWx0ZXIgKTtcblx0fVxuXHRpZiAoIHBvc3RGaW5kZXIgJiYgIXBvc3RGaW5kZXJbIGV4cGFuZG8gXSApIHtcblx0XHRwb3N0RmluZGVyID0gc2V0TWF0Y2hlciggcG9zdEZpbmRlciwgcG9zdFNlbGVjdG9yICk7XG5cdH1cblx0cmV0dXJuIG1hcmtGdW5jdGlvbihmdW5jdGlvbiggc2VlZCwgcmVzdWx0cywgY29udGV4dCwgeG1sICkge1xuXHRcdHZhciB0ZW1wLCBpLCBlbGVtLFxuXHRcdFx0cHJlTWFwID0gW10sXG5cdFx0XHRwb3N0TWFwID0gW10sXG5cdFx0XHRwcmVleGlzdGluZyA9IHJlc3VsdHMubGVuZ3RoLFxuXG5cdFx0XHQvLyBHZXQgaW5pdGlhbCBlbGVtZW50cyBmcm9tIHNlZWQgb3IgY29udGV4dFxuXHRcdFx0ZWxlbXMgPSBzZWVkIHx8IG11bHRpcGxlQ29udGV4dHMoIHNlbGVjdG9yIHx8IFwiKlwiLCBjb250ZXh0Lm5vZGVUeXBlID8gWyBjb250ZXh0IF0gOiBjb250ZXh0LCBbXSApLFxuXG5cdFx0XHQvLyBQcmVmaWx0ZXIgdG8gZ2V0IG1hdGNoZXIgaW5wdXQsIHByZXNlcnZpbmcgYSBtYXAgZm9yIHNlZWQtcmVzdWx0cyBzeW5jaHJvbml6YXRpb25cblx0XHRcdG1hdGNoZXJJbiA9IHByZUZpbHRlciAmJiAoIHNlZWQgfHwgIXNlbGVjdG9yICkgP1xuXHRcdFx0XHRjb25kZW5zZSggZWxlbXMsIHByZU1hcCwgcHJlRmlsdGVyLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdGVsZW1zLFxuXG5cdFx0XHRtYXRjaGVyT3V0ID0gbWF0Y2hlciA/XG5cdFx0XHRcdC8vIElmIHdlIGhhdmUgYSBwb3N0RmluZGVyLCBvciBmaWx0ZXJlZCBzZWVkLCBvciBub24tc2VlZCBwb3N0RmlsdGVyIG9yIHByZWV4aXN0aW5nIHJlc3VsdHMsXG5cdFx0XHRcdHBvc3RGaW5kZXIgfHwgKCBzZWVkID8gcHJlRmlsdGVyIDogcHJlZXhpc3RpbmcgfHwgcG9zdEZpbHRlciApID9cblxuXHRcdFx0XHRcdC8vIC4uLmludGVybWVkaWF0ZSBwcm9jZXNzaW5nIGlzIG5lY2Vzc2FyeVxuXHRcdFx0XHRcdFtdIDpcblxuXHRcdFx0XHRcdC8vIC4uLm90aGVyd2lzZSB1c2UgcmVzdWx0cyBkaXJlY3RseVxuXHRcdFx0XHRcdHJlc3VsdHMgOlxuXHRcdFx0XHRtYXRjaGVySW47XG5cblx0XHQvLyBGaW5kIHByaW1hcnkgbWF0Y2hlc1xuXHRcdGlmICggbWF0Y2hlciApIHtcblx0XHRcdG1hdGNoZXIoIG1hdGNoZXJJbiwgbWF0Y2hlck91dCwgY29udGV4dCwgeG1sICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgcG9zdEZpbHRlclxuXHRcdGlmICggcG9zdEZpbHRlciApIHtcblx0XHRcdHRlbXAgPSBjb25kZW5zZSggbWF0Y2hlck91dCwgcG9zdE1hcCApO1xuXHRcdFx0cG9zdEZpbHRlciggdGVtcCwgW10sIGNvbnRleHQsIHhtbCApO1xuXG5cdFx0XHQvLyBVbi1tYXRjaCBmYWlsaW5nIGVsZW1lbnRzIGJ5IG1vdmluZyB0aGVtIGJhY2sgdG8gbWF0Y2hlckluXG5cdFx0XHRpID0gdGVtcC5sZW5ndGg7XG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0aWYgKCAoZWxlbSA9IHRlbXBbaV0pICkge1xuXHRcdFx0XHRcdG1hdGNoZXJPdXRbIHBvc3RNYXBbaV0gXSA9ICEobWF0Y2hlckluWyBwb3N0TWFwW2ldIF0gPSBlbGVtKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblxuXHRcdGlmICggc2VlZCApIHtcblx0XHRcdGlmICggcG9zdEZpbmRlciB8fCBwcmVGaWx0ZXIgKSB7XG5cdFx0XHRcdGlmICggcG9zdEZpbmRlciApIHtcblx0XHRcdFx0XHQvLyBHZXQgdGhlIGZpbmFsIG1hdGNoZXJPdXQgYnkgY29uZGVuc2luZyB0aGlzIGludGVybWVkaWF0ZSBpbnRvIHBvc3RGaW5kZXIgY29udGV4dHNcblx0XHRcdFx0XHR0ZW1wID0gW107XG5cdFx0XHRcdFx0aSA9IG1hdGNoZXJPdXQubGVuZ3RoO1xuXHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0aWYgKCAoZWxlbSA9IG1hdGNoZXJPdXRbaV0pICkge1xuXHRcdFx0XHRcdFx0XHQvLyBSZXN0b3JlIG1hdGNoZXJJbiBzaW5jZSBlbGVtIGlzIG5vdCB5ZXQgYSBmaW5hbCBtYXRjaFxuXHRcdFx0XHRcdFx0XHR0ZW1wLnB1c2goIChtYXRjaGVySW5baV0gPSBlbGVtKSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHRwb3N0RmluZGVyKCBudWxsLCAobWF0Y2hlck91dCA9IFtdKSwgdGVtcCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBNb3ZlIG1hdGNoZWQgZWxlbWVudHMgZnJvbSBzZWVkIHRvIHJlc3VsdHMgdG8ga2VlcCB0aGVtIHN5bmNocm9uaXplZFxuXHRcdFx0XHRpID0gbWF0Y2hlck91dC5sZW5ndGg7XG5cdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdGlmICggKGVsZW0gPSBtYXRjaGVyT3V0W2ldKSAmJlxuXHRcdFx0XHRcdFx0KHRlbXAgPSBwb3N0RmluZGVyID8gaW5kZXhPZiggc2VlZCwgZWxlbSApIDogcHJlTWFwW2ldKSA+IC0xICkge1xuXG5cdFx0XHRcdFx0XHRzZWVkW3RlbXBdID0gIShyZXN1bHRzW3RlbXBdID0gZWxlbSk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHQvLyBBZGQgZWxlbWVudHMgdG8gcmVzdWx0cywgdGhyb3VnaCBwb3N0RmluZGVyIGlmIGRlZmluZWRcblx0XHR9IGVsc2Uge1xuXHRcdFx0bWF0Y2hlck91dCA9IGNvbmRlbnNlKFxuXHRcdFx0XHRtYXRjaGVyT3V0ID09PSByZXN1bHRzID9cblx0XHRcdFx0XHRtYXRjaGVyT3V0LnNwbGljZSggcHJlZXhpc3RpbmcsIG1hdGNoZXJPdXQubGVuZ3RoICkgOlxuXHRcdFx0XHRcdG1hdGNoZXJPdXRcblx0XHRcdCk7XG5cdFx0XHRpZiAoIHBvc3RGaW5kZXIgKSB7XG5cdFx0XHRcdHBvc3RGaW5kZXIoIG51bGwsIHJlc3VsdHMsIG1hdGNoZXJPdXQsIHhtbCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgbWF0Y2hlck91dCApO1xuXHRcdFx0fVxuXHRcdH1cblx0fSk7XG59XG5cbmZ1bmN0aW9uIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMgKSB7XG5cdHZhciBjaGVja0NvbnRleHQsIG1hdGNoZXIsIGosXG5cdFx0bGVuID0gdG9rZW5zLmxlbmd0aCxcblx0XHRsZWFkaW5nUmVsYXRpdmUgPSBFeHByLnJlbGF0aXZlWyB0b2tlbnNbMF0udHlwZSBdLFxuXHRcdGltcGxpY2l0UmVsYXRpdmUgPSBsZWFkaW5nUmVsYXRpdmUgfHwgRXhwci5yZWxhdGl2ZVtcIiBcIl0sXG5cdFx0aSA9IGxlYWRpbmdSZWxhdGl2ZSA/IDEgOiAwLFxuXG5cdFx0Ly8gVGhlIGZvdW5kYXRpb25hbCBtYXRjaGVyIGVuc3VyZXMgdGhhdCBlbGVtZW50cyBhcmUgcmVhY2hhYmxlIGZyb20gdG9wLWxldmVsIGNvbnRleHQocylcblx0XHRtYXRjaENvbnRleHQgPSBhZGRDb21iaW5hdG9yKCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtID09PSBjaGVja0NvbnRleHQ7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoQW55Q29udGV4dCA9IGFkZENvbWJpbmF0b3IoIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuIGluZGV4T2YoIGNoZWNrQ29udGV4dCwgZWxlbSApID4gLTE7XG5cdFx0fSwgaW1wbGljaXRSZWxhdGl2ZSwgdHJ1ZSApLFxuXHRcdG1hdGNoZXJzID0gWyBmdW5jdGlvbiggZWxlbSwgY29udGV4dCwgeG1sICkge1xuXHRcdFx0dmFyIHJldCA9ICggIWxlYWRpbmdSZWxhdGl2ZSAmJiAoIHhtbCB8fCBjb250ZXh0ICE9PSBvdXRlcm1vc3RDb250ZXh0ICkgKSB8fCAoXG5cdFx0XHRcdChjaGVja0NvbnRleHQgPSBjb250ZXh0KS5ub2RlVHlwZSA/XG5cdFx0XHRcdFx0bWF0Y2hDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSA6XG5cdFx0XHRcdFx0bWF0Y2hBbnlDb250ZXh0KCBlbGVtLCBjb250ZXh0LCB4bWwgKSApO1xuXHRcdFx0Ly8gQXZvaWQgaGFuZ2luZyBvbnRvIGVsZW1lbnQgKGlzc3VlICMyOTkpXG5cdFx0XHRjaGVja0NvbnRleHQgPSBudWxsO1xuXHRcdFx0cmV0dXJuIHJldDtcblx0XHR9IF07XG5cblx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0aWYgKCAobWF0Y2hlciA9IEV4cHIucmVsYXRpdmVbIHRva2Vuc1tpXS50eXBlIF0pICkge1xuXHRcdFx0bWF0Y2hlcnMgPSBbIGFkZENvbWJpbmF0b3IoZWxlbWVudE1hdGNoZXIoIG1hdGNoZXJzICksIG1hdGNoZXIpIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdG1hdGNoZXIgPSBFeHByLmZpbHRlclsgdG9rZW5zW2ldLnR5cGUgXS5hcHBseSggbnVsbCwgdG9rZW5zW2ldLm1hdGNoZXMgKTtcblxuXHRcdFx0Ly8gUmV0dXJuIHNwZWNpYWwgdXBvbiBzZWVpbmcgYSBwb3NpdGlvbmFsIG1hdGNoZXJcblx0XHRcdGlmICggbWF0Y2hlclsgZXhwYW5kbyBdICkge1xuXHRcdFx0XHQvLyBGaW5kIHRoZSBuZXh0IHJlbGF0aXZlIG9wZXJhdG9yIChpZiBhbnkpIGZvciBwcm9wZXIgaGFuZGxpbmdcblx0XHRcdFx0aiA9ICsraTtcblx0XHRcdFx0Zm9yICggOyBqIDwgbGVuOyBqKysgKSB7XG5cdFx0XHRcdFx0aWYgKCBFeHByLnJlbGF0aXZlWyB0b2tlbnNbal0udHlwZSBdICkge1xuXHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiBzZXRNYXRjaGVyKFxuXHRcdFx0XHRcdGkgPiAxICYmIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApLFxuXHRcdFx0XHRcdGkgPiAxICYmIHRvU2VsZWN0b3IoXG5cdFx0XHRcdFx0XHQvLyBJZiB0aGUgcHJlY2VkaW5nIHRva2VuIHdhcyBhIGRlc2NlbmRhbnQgY29tYmluYXRvciwgaW5zZXJ0IGFuIGltcGxpY2l0IGFueS1lbGVtZW50IGAqYFxuXHRcdFx0XHRcdFx0dG9rZW5zLnNsaWNlKCAwLCBpIC0gMSApLmNvbmNhdCh7IHZhbHVlOiB0b2tlbnNbIGkgLSAyIF0udHlwZSA9PT0gXCIgXCIgPyBcIipcIiA6IFwiXCIgfSlcblx0XHRcdFx0XHQpLnJlcGxhY2UoIHJ0cmltLCBcIiQxXCIgKSxcblx0XHRcdFx0XHRtYXRjaGVyLFxuXHRcdFx0XHRcdGkgPCBqICYmIG1hdGNoZXJGcm9tVG9rZW5zKCB0b2tlbnMuc2xpY2UoIGksIGogKSApLFxuXHRcdFx0XHRcdGogPCBsZW4gJiYgbWF0Y2hlckZyb21Ub2tlbnMoICh0b2tlbnMgPSB0b2tlbnMuc2xpY2UoIGogKSkgKSxcblx0XHRcdFx0XHRqIDwgbGVuICYmIHRvU2VsZWN0b3IoIHRva2VucyApXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVycy5wdXNoKCBtYXRjaGVyICk7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIGVsZW1lbnRNYXRjaGVyKCBtYXRjaGVycyApO1xufVxuXG5mdW5jdGlvbiBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSB7XG5cdHZhciBieVNldCA9IHNldE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0YnlFbGVtZW50ID0gZWxlbWVudE1hdGNoZXJzLmxlbmd0aCA+IDAsXG5cdFx0c3VwZXJNYXRjaGVyID0gZnVuY3Rpb24oIHNlZWQsIGNvbnRleHQsIHhtbCwgcmVzdWx0cywgb3V0ZXJtb3N0ICkge1xuXHRcdFx0dmFyIGVsZW0sIGosIG1hdGNoZXIsXG5cdFx0XHRcdG1hdGNoZWRDb3VudCA9IDAsXG5cdFx0XHRcdGkgPSBcIjBcIixcblx0XHRcdFx0dW5tYXRjaGVkID0gc2VlZCAmJiBbXSxcblx0XHRcdFx0c2V0TWF0Y2hlZCA9IFtdLFxuXHRcdFx0XHRjb250ZXh0QmFja3VwID0gb3V0ZXJtb3N0Q29udGV4dCxcblx0XHRcdFx0Ly8gV2UgbXVzdCBhbHdheXMgaGF2ZSBlaXRoZXIgc2VlZCBlbGVtZW50cyBvciBvdXRlcm1vc3QgY29udGV4dFxuXHRcdFx0XHRlbGVtcyA9IHNlZWQgfHwgYnlFbGVtZW50ICYmIEV4cHIuZmluZFtcIlRBR1wiXSggXCIqXCIsIG91dGVybW9zdCApLFxuXHRcdFx0XHQvLyBVc2UgaW50ZWdlciBkaXJydW5zIGlmZiB0aGlzIGlzIHRoZSBvdXRlcm1vc3QgbWF0Y2hlclxuXHRcdFx0XHRkaXJydW5zVW5pcXVlID0gKGRpcnJ1bnMgKz0gY29udGV4dEJhY2t1cCA9PSBudWxsID8gMSA6IE1hdGgucmFuZG9tKCkgfHwgMC4xKSxcblx0XHRcdFx0bGVuID0gZWxlbXMubGVuZ3RoO1xuXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0b3V0ZXJtb3N0Q29udGV4dCA9IGNvbnRleHQgPT09IGRvY3VtZW50IHx8IGNvbnRleHQgfHwgb3V0ZXJtb3N0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgZWxlbWVudHMgcGFzc2luZyBlbGVtZW50TWF0Y2hlcnMgZGlyZWN0bHkgdG8gcmVzdWx0c1xuXHRcdFx0Ly8gU3VwcG9ydDogSUU8OSwgU2FmYXJpXG5cdFx0XHQvLyBUb2xlcmF0ZSBOb2RlTGlzdCBwcm9wZXJ0aWVzIChJRTogXCJsZW5ndGhcIjsgU2FmYXJpOiA8bnVtYmVyPikgbWF0Y2hpbmcgZWxlbWVudHMgYnkgaWRcblx0XHRcdGZvciAoIDsgaSAhPT0gbGVuICYmIChlbGVtID0gZWxlbXNbaV0pICE9IG51bGw7IGkrKyApIHtcblx0XHRcdFx0aWYgKCBieUVsZW1lbnQgJiYgZWxlbSApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHRpZiAoICFjb250ZXh0ICYmIGVsZW0ub3duZXJEb2N1bWVudCAhPT0gZG9jdW1lbnQgKSB7XG5cdFx0XHRcdFx0XHRzZXREb2N1bWVudCggZWxlbSApO1xuXHRcdFx0XHRcdFx0eG1sID0gIWRvY3VtZW50SXNIVE1MO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0XHR3aGlsZSAoIChtYXRjaGVyID0gZWxlbWVudE1hdGNoZXJzW2orK10pICkge1xuXHRcdFx0XHRcdFx0aWYgKCBtYXRjaGVyKCBlbGVtLCBjb250ZXh0IHx8IGRvY3VtZW50LCB4bWwpICkge1xuXHRcdFx0XHRcdFx0XHRyZXN1bHRzLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggb3V0ZXJtb3N0ICkge1xuXHRcdFx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gVHJhY2sgdW5tYXRjaGVkIGVsZW1lbnRzIGZvciBzZXQgZmlsdGVyc1xuXHRcdFx0XHRpZiAoIGJ5U2V0ICkge1xuXHRcdFx0XHRcdC8vIFRoZXkgd2lsbCBoYXZlIGdvbmUgdGhyb3VnaCBhbGwgcG9zc2libGUgbWF0Y2hlcnNcblx0XHRcdFx0XHRpZiAoIChlbGVtID0gIW1hdGNoZXIgJiYgZWxlbSkgKSB7XG5cdFx0XHRcdFx0XHRtYXRjaGVkQ291bnQtLTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBMZW5ndGhlbiB0aGUgYXJyYXkgZm9yIGV2ZXJ5IGVsZW1lbnQsIG1hdGNoZWQgb3Igbm90XG5cdFx0XHRcdFx0aWYgKCBzZWVkICkge1xuXHRcdFx0XHRcdFx0dW5tYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gYGlgIGlzIG5vdyB0aGUgY291bnQgb2YgZWxlbWVudHMgdmlzaXRlZCBhYm92ZSwgYW5kIGFkZGluZyBpdCB0byBgbWF0Y2hlZENvdW50YFxuXHRcdFx0Ly8gbWFrZXMgdGhlIGxhdHRlciBub25uZWdhdGl2ZS5cblx0XHRcdG1hdGNoZWRDb3VudCArPSBpO1xuXG5cdFx0XHQvLyBBcHBseSBzZXQgZmlsdGVycyB0byB1bm1hdGNoZWQgZWxlbWVudHNcblx0XHRcdC8vIE5PVEU6IFRoaXMgY2FuIGJlIHNraXBwZWQgaWYgdGhlcmUgYXJlIG5vIHVubWF0Y2hlZCBlbGVtZW50cyAoaS5lLiwgYG1hdGNoZWRDb3VudGBcblx0XHRcdC8vIGVxdWFscyBgaWApLCB1bmxlc3Mgd2UgZGlkbid0IHZpc2l0IF9hbnlfIGVsZW1lbnRzIGluIHRoZSBhYm92ZSBsb29wIGJlY2F1c2Ugd2UgaGF2ZVxuXHRcdFx0Ly8gbm8gZWxlbWVudCBtYXRjaGVycyBhbmQgbm8gc2VlZC5cblx0XHRcdC8vIEluY3JlbWVudGluZyBhbiBpbml0aWFsbHktc3RyaW5nIFwiMFwiIGBpYCBhbGxvd3MgYGlgIHRvIHJlbWFpbiBhIHN0cmluZyBvbmx5IGluIHRoYXRcblx0XHRcdC8vIGNhc2UsIHdoaWNoIHdpbGwgcmVzdWx0IGluIGEgXCIwMFwiIGBtYXRjaGVkQ291bnRgIHRoYXQgZGlmZmVycyBmcm9tIGBpYCBidXQgaXMgYWxzb1xuXHRcdFx0Ly8gbnVtZXJpY2FsbHkgemVyby5cblx0XHRcdGlmICggYnlTZXQgJiYgaSAhPT0gbWF0Y2hlZENvdW50ICkge1xuXHRcdFx0XHRqID0gMDtcblx0XHRcdFx0d2hpbGUgKCAobWF0Y2hlciA9IHNldE1hdGNoZXJzW2orK10pICkge1xuXHRcdFx0XHRcdG1hdGNoZXIoIHVubWF0Y2hlZCwgc2V0TWF0Y2hlZCwgY29udGV4dCwgeG1sICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRpZiAoIHNlZWQgKSB7XG5cdFx0XHRcdFx0Ly8gUmVpbnRlZ3JhdGUgZWxlbWVudCBtYXRjaGVzIHRvIGVsaW1pbmF0ZSB0aGUgbmVlZCBmb3Igc29ydGluZ1xuXHRcdFx0XHRcdGlmICggbWF0Y2hlZENvdW50ID4gMCApIHtcblx0XHRcdFx0XHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoICEodW5tYXRjaGVkW2ldIHx8IHNldE1hdGNoZWRbaV0pICkge1xuXHRcdFx0XHRcdFx0XHRcdHNldE1hdGNoZWRbaV0gPSBwb3AuY2FsbCggcmVzdWx0cyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0Ly8gRGlzY2FyZCBpbmRleCBwbGFjZWhvbGRlciB2YWx1ZXMgdG8gZ2V0IG9ubHkgYWN0dWFsIG1hdGNoZXNcblx0XHRcdFx0XHRzZXRNYXRjaGVkID0gY29uZGVuc2UoIHNldE1hdGNoZWQgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEFkZCBtYXRjaGVzIHRvIHJlc3VsdHNcblx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgc2V0TWF0Y2hlZCApO1xuXG5cdFx0XHRcdC8vIFNlZWRsZXNzIHNldCBtYXRjaGVzIHN1Y2NlZWRpbmcgbXVsdGlwbGUgc3VjY2Vzc2Z1bCBtYXRjaGVycyBzdGlwdWxhdGUgc29ydGluZ1xuXHRcdFx0XHRpZiAoIG91dGVybW9zdCAmJiAhc2VlZCAmJiBzZXRNYXRjaGVkLmxlbmd0aCA+IDAgJiZcblx0XHRcdFx0XHQoIG1hdGNoZWRDb3VudCArIHNldE1hdGNoZXJzLmxlbmd0aCApID4gMSApIHtcblxuXHRcdFx0XHRcdFNpenpsZS51bmlxdWVTb3J0KCByZXN1bHRzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gT3ZlcnJpZGUgbWFuaXB1bGF0aW9uIG9mIGdsb2JhbHMgYnkgbmVzdGVkIG1hdGNoZXJzXG5cdFx0XHRpZiAoIG91dGVybW9zdCApIHtcblx0XHRcdFx0ZGlycnVucyA9IGRpcnJ1bnNVbmlxdWU7XG5cdFx0XHRcdG91dGVybW9zdENvbnRleHQgPSBjb250ZXh0QmFja3VwO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gdW5tYXRjaGVkO1xuXHRcdH07XG5cblx0cmV0dXJuIGJ5U2V0ID9cblx0XHRtYXJrRnVuY3Rpb24oIHN1cGVyTWF0Y2hlciApIDpcblx0XHRzdXBlck1hdGNoZXI7XG59XG5cbmNvbXBpbGUgPSBTaXp6bGUuY29tcGlsZSA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgbWF0Y2ggLyogSW50ZXJuYWwgVXNlIE9ubHkgKi8gKSB7XG5cdHZhciBpLFxuXHRcdHNldE1hdGNoZXJzID0gW10sXG5cdFx0ZWxlbWVudE1hdGNoZXJzID0gW10sXG5cdFx0Y2FjaGVkID0gY29tcGlsZXJDYWNoZVsgc2VsZWN0b3IgKyBcIiBcIiBdO1xuXG5cdGlmICggIWNhY2hlZCApIHtcblx0XHQvLyBHZW5lcmF0ZSBhIGZ1bmN0aW9uIG9mIHJlY3Vyc2l2ZSBmdW5jdGlvbnMgdGhhdCBjYW4gYmUgdXNlZCB0byBjaGVjayBlYWNoIGVsZW1lbnRcblx0XHRpZiAoICFtYXRjaCApIHtcblx0XHRcdG1hdGNoID0gdG9rZW5pemUoIHNlbGVjdG9yICk7XG5cdFx0fVxuXHRcdGkgPSBtYXRjaC5sZW5ndGg7XG5cdFx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0XHRjYWNoZWQgPSBtYXRjaGVyRnJvbVRva2VucyggbWF0Y2hbaV0gKTtcblx0XHRcdGlmICggY2FjaGVkWyBleHBhbmRvIF0gKSB7XG5cdFx0XHRcdHNldE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZWxlbWVudE1hdGNoZXJzLnB1c2goIGNhY2hlZCApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhY2hlIHRoZSBjb21waWxlZCBmdW5jdGlvblxuXHRcdGNhY2hlZCA9IGNvbXBpbGVyQ2FjaGUoIHNlbGVjdG9yLCBtYXRjaGVyRnJvbUdyb3VwTWF0Y2hlcnMoIGVsZW1lbnRNYXRjaGVycywgc2V0TWF0Y2hlcnMgKSApO1xuXG5cdFx0Ly8gU2F2ZSBzZWxlY3RvciBhbmQgdG9rZW5pemF0aW9uXG5cdFx0Y2FjaGVkLnNlbGVjdG9yID0gc2VsZWN0b3I7XG5cdH1cblx0cmV0dXJuIGNhY2hlZDtcbn07XG5cbi8qKlxuICogQSBsb3ctbGV2ZWwgc2VsZWN0aW9uIGZ1bmN0aW9uIHRoYXQgd29ya3Mgd2l0aCBTaXp6bGUncyBjb21waWxlZFxuICogIHNlbGVjdG9yIGZ1bmN0aW9uc1xuICogQHBhcmFtIHtTdHJpbmd8RnVuY3Rpb259IHNlbGVjdG9yIEEgc2VsZWN0b3Igb3IgYSBwcmUtY29tcGlsZWRcbiAqICBzZWxlY3RvciBmdW5jdGlvbiBidWlsdCB3aXRoIFNpenpsZS5jb21waWxlXG4gKiBAcGFyYW0ge0VsZW1lbnR9IGNvbnRleHRcbiAqIEBwYXJhbSB7QXJyYXl9IFtyZXN1bHRzXVxuICogQHBhcmFtIHtBcnJheX0gW3NlZWRdIEEgc2V0IG9mIGVsZW1lbnRzIHRvIG1hdGNoIGFnYWluc3RcbiAqL1xuc2VsZWN0ID0gU2l6emxlLnNlbGVjdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcmVzdWx0cywgc2VlZCApIHtcblx0dmFyIGksIHRva2VucywgdG9rZW4sIHR5cGUsIGZpbmQsXG5cdFx0Y29tcGlsZWQgPSB0eXBlb2Ygc2VsZWN0b3IgPT09IFwiZnVuY3Rpb25cIiAmJiBzZWxlY3Rvcixcblx0XHRtYXRjaCA9ICFzZWVkICYmIHRva2VuaXplKCAoc2VsZWN0b3IgPSBjb21waWxlZC5zZWxlY3RvciB8fCBzZWxlY3RvcikgKTtcblxuXHRyZXN1bHRzID0gcmVzdWx0cyB8fCBbXTtcblxuXHQvLyBUcnkgdG8gbWluaW1pemUgb3BlcmF0aW9ucyBpZiB0aGVyZSBpcyBvbmx5IG9uZSBzZWxlY3RvciBpbiB0aGUgbGlzdCBhbmQgbm8gc2VlZFxuXHQvLyAodGhlIGxhdHRlciBvZiB3aGljaCBndWFyYW50ZWVzIHVzIGNvbnRleHQpXG5cdGlmICggbWF0Y2gubGVuZ3RoID09PSAxICkge1xuXG5cdFx0Ly8gUmVkdWNlIGNvbnRleHQgaWYgdGhlIGxlYWRpbmcgY29tcG91bmQgc2VsZWN0b3IgaXMgYW4gSURcblx0XHR0b2tlbnMgPSBtYXRjaFswXSA9IG1hdGNoWzBdLnNsaWNlKCAwICk7XG5cdFx0aWYgKCB0b2tlbnMubGVuZ3RoID4gMiAmJiAodG9rZW4gPSB0b2tlbnNbMF0pLnR5cGUgPT09IFwiSURcIiAmJlxuXHRcdFx0XHRjb250ZXh0Lm5vZGVUeXBlID09PSA5ICYmIGRvY3VtZW50SXNIVE1MICYmIEV4cHIucmVsYXRpdmVbIHRva2Vuc1sxXS50eXBlIF0gKSB7XG5cblx0XHRcdGNvbnRleHQgPSAoIEV4cHIuZmluZFtcIklEXCJdKCB0b2tlbi5tYXRjaGVzWzBdLnJlcGxhY2UocnVuZXNjYXBlLCBmdW5lc2NhcGUpLCBjb250ZXh0ICkgfHwgW10gKVswXTtcblx0XHRcdGlmICggIWNvbnRleHQgKSB7XG5cdFx0XHRcdHJldHVybiByZXN1bHRzO1xuXG5cdFx0XHQvLyBQcmVjb21waWxlZCBtYXRjaGVycyB3aWxsIHN0aWxsIHZlcmlmeSBhbmNlc3RyeSwgc28gc3RlcCB1cCBhIGxldmVsXG5cdFx0XHR9IGVsc2UgaWYgKCBjb21waWxlZCApIHtcblx0XHRcdFx0Y29udGV4dCA9IGNvbnRleHQucGFyZW50Tm9kZTtcblx0XHRcdH1cblxuXHRcdFx0c2VsZWN0b3IgPSBzZWxlY3Rvci5zbGljZSggdG9rZW5zLnNoaWZ0KCkudmFsdWUubGVuZ3RoICk7XG5cdFx0fVxuXG5cdFx0Ly8gRmV0Y2ggYSBzZWVkIHNldCBmb3IgcmlnaHQtdG8tbGVmdCBtYXRjaGluZ1xuXHRcdGkgPSBtYXRjaEV4cHJbXCJuZWVkc0NvbnRleHRcIl0udGVzdCggc2VsZWN0b3IgKSA/IDAgOiB0b2tlbnMubGVuZ3RoO1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0dG9rZW4gPSB0b2tlbnNbaV07XG5cblx0XHRcdC8vIEFib3J0IGlmIHdlIGhpdCBhIGNvbWJpbmF0b3Jcblx0XHRcdGlmICggRXhwci5yZWxhdGl2ZVsgKHR5cGUgPSB0b2tlbi50eXBlKSBdICkge1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHRcdGlmICggKGZpbmQgPSBFeHByLmZpbmRbIHR5cGUgXSkgKSB7XG5cdFx0XHRcdC8vIFNlYXJjaCwgZXhwYW5kaW5nIGNvbnRleHQgZm9yIGxlYWRpbmcgc2libGluZyBjb21iaW5hdG9yc1xuXHRcdFx0XHRpZiAoIChzZWVkID0gZmluZChcblx0XHRcdFx0XHR0b2tlbi5tYXRjaGVzWzBdLnJlcGxhY2UoIHJ1bmVzY2FwZSwgZnVuZXNjYXBlICksXG5cdFx0XHRcdFx0cnNpYmxpbmcudGVzdCggdG9rZW5zWzBdLnR5cGUgKSAmJiB0ZXN0Q29udGV4dCggY29udGV4dC5wYXJlbnROb2RlICkgfHwgY29udGV4dFxuXHRcdFx0XHQpKSApIHtcblxuXHRcdFx0XHRcdC8vIElmIHNlZWQgaXMgZW1wdHkgb3Igbm8gdG9rZW5zIHJlbWFpbiwgd2UgY2FuIHJldHVybiBlYXJseVxuXHRcdFx0XHRcdHRva2Vucy5zcGxpY2UoIGksIDEgKTtcblx0XHRcdFx0XHRzZWxlY3RvciA9IHNlZWQubGVuZ3RoICYmIHRvU2VsZWN0b3IoIHRva2VucyApO1xuXHRcdFx0XHRcdGlmICggIXNlbGVjdG9yICkge1xuXHRcdFx0XHRcdFx0cHVzaC5hcHBseSggcmVzdWx0cywgc2VlZCApO1xuXHRcdFx0XHRcdFx0cmV0dXJuIHJlc3VsdHM7XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0YnJlYWs7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDb21waWxlIGFuZCBleGVjdXRlIGEgZmlsdGVyaW5nIGZ1bmN0aW9uIGlmIG9uZSBpcyBub3QgcHJvdmlkZWRcblx0Ly8gUHJvdmlkZSBgbWF0Y2hgIHRvIGF2b2lkIHJldG9rZW5pemF0aW9uIGlmIHdlIG1vZGlmaWVkIHRoZSBzZWxlY3RvciBhYm92ZVxuXHQoIGNvbXBpbGVkIHx8IGNvbXBpbGUoIHNlbGVjdG9yLCBtYXRjaCApICkoXG5cdFx0c2VlZCxcblx0XHRjb250ZXh0LFxuXHRcdCFkb2N1bWVudElzSFRNTCxcblx0XHRyZXN1bHRzLFxuXHRcdCFjb250ZXh0IHx8IHJzaWJsaW5nLnRlc3QoIHNlbGVjdG9yICkgJiYgdGVzdENvbnRleHQoIGNvbnRleHQucGFyZW50Tm9kZSApIHx8IGNvbnRleHRcblx0KTtcblx0cmV0dXJuIHJlc3VsdHM7XG59O1xuXG4vLyBPbmUtdGltZSBhc3NpZ25tZW50c1xuXG4vLyBTb3J0IHN0YWJpbGl0eVxuc3VwcG9ydC5zb3J0U3RhYmxlID0gZXhwYW5kby5zcGxpdChcIlwiKS5zb3J0KCBzb3J0T3JkZXIgKS5qb2luKFwiXCIpID09PSBleHBhbmRvO1xuXG4vLyBTdXBwb3J0OiBDaHJvbWUgMTQtMzUrXG4vLyBBbHdheXMgYXNzdW1lIGR1cGxpY2F0ZXMgaWYgdGhleSBhcmVuJ3QgcGFzc2VkIHRvIHRoZSBjb21wYXJpc29uIGZ1bmN0aW9uXG5zdXBwb3J0LmRldGVjdER1cGxpY2F0ZXMgPSAhIWhhc0R1cGxpY2F0ZTtcblxuLy8gSW5pdGlhbGl6ZSBhZ2FpbnN0IHRoZSBkZWZhdWx0IGRvY3VtZW50XG5zZXREb2N1bWVudCgpO1xuXG4vLyBTdXBwb3J0OiBXZWJraXQ8NTM3LjMyIC0gU2FmYXJpIDYuMC4zL0Nocm9tZSAyNSAoZml4ZWQgaW4gQ2hyb21lIDI3KVxuLy8gRGV0YWNoZWQgbm9kZXMgY29uZm91bmRpbmdseSBmb2xsb3cgKmVhY2ggb3RoZXIqXG5zdXBwb3J0LnNvcnREZXRhY2hlZCA9IGFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdC8vIFNob3VsZCByZXR1cm4gMSwgYnV0IHJldHVybnMgNCAoZm9sbG93aW5nKVxuXHRyZXR1cm4gZWwuY29tcGFyZURvY3VtZW50UG9zaXRpb24oIGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJmaWVsZHNldFwiKSApICYgMTtcbn0pO1xuXG4vLyBTdXBwb3J0OiBJRTw4XG4vLyBQcmV2ZW50IGF0dHJpYnV0ZS9wcm9wZXJ0eSBcImludGVycG9sYXRpb25cIlxuLy8gaHR0cHM6Ly9tc2RuLm1pY3Jvc29mdC5jb20vZW4tdXMvbGlicmFyeS9tczUzNjQyOSUyOFZTLjg1JTI5LmFzcHhcbmlmICggIWFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdGVsLmlubmVySFRNTCA9IFwiPGEgaHJlZj0nIyc+PC9hPlwiO1xuXHRyZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoXCJocmVmXCIpID09PSBcIiNcIiA7XG59KSApIHtcblx0YWRkSGFuZGxlKCBcInR5cGV8aHJlZnxoZWlnaHR8d2lkdGhcIiwgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdGlmICggIWlzWE1MICkge1xuXHRcdFx0cmV0dXJuIGVsZW0uZ2V0QXR0cmlidXRlKCBuYW1lLCBuYW1lLnRvTG93ZXJDYXNlKCkgPT09IFwidHlwZVwiID8gMSA6IDIgKTtcblx0XHR9XG5cdH0pO1xufVxuXG4vLyBTdXBwb3J0OiBJRTw5XG4vLyBVc2UgZGVmYXVsdFZhbHVlIGluIHBsYWNlIG9mIGdldEF0dHJpYnV0ZShcInZhbHVlXCIpXG5pZiAoICFzdXBwb3J0LmF0dHJpYnV0ZXMgfHwgIWFzc2VydChmdW5jdGlvbiggZWwgKSB7XG5cdGVsLmlubmVySFRNTCA9IFwiPGlucHV0Lz5cIjtcblx0ZWwuZmlyc3RDaGlsZC5zZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiwgXCJcIiApO1xuXHRyZXR1cm4gZWwuZmlyc3RDaGlsZC5nZXRBdHRyaWJ1dGUoIFwidmFsdWVcIiApID09PSBcIlwiO1xufSkgKSB7XG5cdGFkZEhhbmRsZSggXCJ2YWx1ZVwiLCBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0aWYgKCAhaXNYTUwgJiYgZWxlbS5ub2RlTmFtZS50b0xvd2VyQ2FzZSgpID09PSBcImlucHV0XCIgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbS5kZWZhdWx0VmFsdWU7XG5cdFx0fVxuXHR9KTtcbn1cblxuLy8gU3VwcG9ydDogSUU8OVxuLy8gVXNlIGdldEF0dHJpYnV0ZU5vZGUgdG8gZmV0Y2ggYm9vbGVhbnMgd2hlbiBnZXRBdHRyaWJ1dGUgbGllc1xuaWYgKCAhYXNzZXJ0KGZ1bmN0aW9uKCBlbCApIHtcblx0cmV0dXJuIGVsLmdldEF0dHJpYnV0ZShcImRpc2FibGVkXCIpID09IG51bGw7XG59KSApIHtcblx0YWRkSGFuZGxlKCBib29sZWFucywgZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGlzWE1MICkge1xuXHRcdHZhciB2YWw7XG5cdFx0aWYgKCAhaXNYTUwgKSB7XG5cdFx0XHRyZXR1cm4gZWxlbVsgbmFtZSBdID09PSB0cnVlID8gbmFtZS50b0xvd2VyQ2FzZSgpIDpcblx0XHRcdFx0XHQodmFsID0gZWxlbS5nZXRBdHRyaWJ1dGVOb2RlKCBuYW1lICkpICYmIHZhbC5zcGVjaWZpZWQgP1xuXHRcdFx0XHRcdHZhbC52YWx1ZSA6XG5cdFx0XHRcdG51bGw7XG5cdFx0fVxuXHR9KTtcbn1cblxucmV0dXJuIFNpenpsZTtcblxufSkoIHdpbmRvdyApO1xuXG5cblxualF1ZXJ5LmZpbmQgPSBTaXp6bGU7XG5qUXVlcnkuZXhwciA9IFNpenpsZS5zZWxlY3RvcnM7XG5cbi8vIERlcHJlY2F0ZWRcbmpRdWVyeS5leHByWyBcIjpcIiBdID0galF1ZXJ5LmV4cHIucHNldWRvcztcbmpRdWVyeS51bmlxdWVTb3J0ID0galF1ZXJ5LnVuaXF1ZSA9IFNpenpsZS51bmlxdWVTb3J0O1xualF1ZXJ5LnRleHQgPSBTaXp6bGUuZ2V0VGV4dDtcbmpRdWVyeS5pc1hNTERvYyA9IFNpenpsZS5pc1hNTDtcbmpRdWVyeS5jb250YWlucyA9IFNpenpsZS5jb250YWlucztcbmpRdWVyeS5lc2NhcGVTZWxlY3RvciA9IFNpenpsZS5lc2NhcGU7XG5cblxuXG5cbnZhciBkaXIgPSBmdW5jdGlvbiggZWxlbSwgZGlyLCB1bnRpbCApIHtcblx0dmFyIG1hdGNoZWQgPSBbXSxcblx0XHR0cnVuY2F0ZSA9IHVudGlsICE9PSB1bmRlZmluZWQ7XG5cblx0d2hpbGUgKCAoIGVsZW0gPSBlbGVtWyBkaXIgXSApICYmIGVsZW0ubm9kZVR5cGUgIT09IDkgKSB7XG5cdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXHRcdFx0aWYgKCB0cnVuY2F0ZSAmJiBqUXVlcnkoIGVsZW0gKS5pcyggdW50aWwgKSApIHtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRtYXRjaGVkLnB1c2goIGVsZW0gKTtcblx0XHR9XG5cdH1cblx0cmV0dXJuIG1hdGNoZWQ7XG59O1xuXG5cbnZhciBzaWJsaW5ncyA9IGZ1bmN0aW9uKCBuLCBlbGVtICkge1xuXHR2YXIgbWF0Y2hlZCA9IFtdO1xuXG5cdGZvciAoIDsgbjsgbiA9IG4ubmV4dFNpYmxpbmcgKSB7XG5cdFx0aWYgKCBuLm5vZGVUeXBlID09PSAxICYmIG4gIT09IGVsZW0gKSB7XG5cdFx0XHRtYXRjaGVkLnB1c2goIG4gKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gbWF0Y2hlZDtcbn07XG5cblxudmFyIHJuZWVkc0NvbnRleHQgPSBqUXVlcnkuZXhwci5tYXRjaC5uZWVkc0NvbnRleHQ7XG5cblxuXG5mdW5jdGlvbiBub2RlTmFtZSggZWxlbSwgbmFtZSApIHtcblxuICByZXR1cm4gZWxlbS5ub2RlTmFtZSAmJiBlbGVtLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09IG5hbWUudG9Mb3dlckNhc2UoKTtcblxufTtcbnZhciByc2luZ2xlVGFnID0gKCAvXjwoW2Etel1bXlxcL1xcMD46XFx4MjBcXHRcXHJcXG5cXGZdKilbXFx4MjBcXHRcXHJcXG5cXGZdKlxcLz8+KD86PFxcL1xcMT58KSQvaSApO1xuXG5cblxuLy8gSW1wbGVtZW50IHRoZSBpZGVudGljYWwgZnVuY3Rpb25hbGl0eSBmb3IgZmlsdGVyIGFuZCBub3RcbmZ1bmN0aW9uIHdpbm5vdyggZWxlbWVudHMsIHF1YWxpZmllciwgbm90ICkge1xuXHRpZiAoIGlzRnVuY3Rpb24oIHF1YWxpZmllciApICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtLCBpICkge1xuXHRcdFx0cmV0dXJuICEhcXVhbGlmaWVyLmNhbGwoIGVsZW0sIGksIGVsZW0gKSAhPT0gbm90O1xuXHRcdH0gKTtcblx0fVxuXG5cdC8vIFNpbmdsZSBlbGVtZW50XG5cdGlmICggcXVhbGlmaWVyLm5vZGVUeXBlICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICggZWxlbSA9PT0gcXVhbGlmaWVyICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBBcnJheWxpa2Ugb2YgZWxlbWVudHMgKGpRdWVyeSwgYXJndW1lbnRzLCBBcnJheSlcblx0aWYgKCB0eXBlb2YgcXVhbGlmaWVyICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBqUXVlcnkuZ3JlcCggZWxlbWVudHMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdFx0cmV0dXJuICggaW5kZXhPZi5jYWxsKCBxdWFsaWZpZXIsIGVsZW0gKSA+IC0xICkgIT09IG5vdDtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBGaWx0ZXJlZCBkaXJlY3RseSBmb3IgYm90aCBzaW1wbGUgYW5kIGNvbXBsZXggc2VsZWN0b3JzXG5cdHJldHVybiBqUXVlcnkuZmlsdGVyKCBxdWFsaWZpZXIsIGVsZW1lbnRzLCBub3QgKTtcbn1cblxualF1ZXJ5LmZpbHRlciA9IGZ1bmN0aW9uKCBleHByLCBlbGVtcywgbm90ICkge1xuXHR2YXIgZWxlbSA9IGVsZW1zWyAwIF07XG5cblx0aWYgKCBub3QgKSB7XG5cdFx0ZXhwciA9IFwiOm5vdChcIiArIGV4cHIgKyBcIilcIjtcblx0fVxuXG5cdGlmICggZWxlbXMubGVuZ3RoID09PSAxICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZWxlbSwgZXhwciApID8gWyBlbGVtIF0gOiBbXTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnkuZmluZC5tYXRjaGVzKCBleHByLCBqUXVlcnkuZ3JlcCggZWxlbXMsIGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBlbGVtLm5vZGVUeXBlID09PSAxO1xuXHR9ICkgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZmluZDogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBpLCByZXQsXG5cdFx0XHRsZW4gPSB0aGlzLmxlbmd0aCxcblx0XHRcdHNlbGYgPSB0aGlzO1xuXG5cdFx0aWYgKCB0eXBlb2Ygc2VsZWN0b3IgIT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIGpRdWVyeSggc2VsZWN0b3IgKS5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRcdGlmICggalF1ZXJ5LmNvbnRhaW5zKCBzZWxmWyBpIF0sIHRoaXMgKSApIHtcblx0XHRcdFx0XHRcdHJldHVybiB0cnVlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fSApICk7XG5cdFx0fVxuXG5cdFx0cmV0ID0gdGhpcy5wdXNoU3RhY2soIFtdICk7XG5cblx0XHRmb3IgKCBpID0gMDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0alF1ZXJ5LmZpbmQoIHNlbGVjdG9yLCBzZWxmWyBpIF0sIHJldCApO1xuXHRcdH1cblxuXHRcdHJldHVybiBsZW4gPiAxID8galF1ZXJ5LnVuaXF1ZVNvcnQoIHJldCApIDogcmV0O1xuXHR9LFxuXHRmaWx0ZXI6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIHdpbm5vdyggdGhpcywgc2VsZWN0b3IgfHwgW10sIGZhbHNlICkgKTtcblx0fSxcblx0bm90OiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCB3aW5ub3coIHRoaXMsIHNlbGVjdG9yIHx8IFtdLCB0cnVlICkgKTtcblx0fSxcblx0aXM6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gISF3aW5ub3coXG5cdFx0XHR0aGlzLFxuXG5cdFx0XHQvLyBJZiB0aGlzIGlzIGEgcG9zaXRpb25hbC9yZWxhdGl2ZSBzZWxlY3RvciwgY2hlY2sgbWVtYmVyc2hpcCBpbiB0aGUgcmV0dXJuZWQgc2V0XG5cdFx0XHQvLyBzbyAkKFwicDpmaXJzdFwiKS5pcyhcInA6bGFzdFwiKSB3b24ndCByZXR1cm4gdHJ1ZSBmb3IgYSBkb2Mgd2l0aCB0d28gXCJwXCIuXG5cdFx0XHR0eXBlb2Ygc2VsZWN0b3IgPT09IFwic3RyaW5nXCIgJiYgcm5lZWRzQ29udGV4dC50ZXN0KCBzZWxlY3RvciApID9cblx0XHRcdFx0alF1ZXJ5KCBzZWxlY3RvciApIDpcblx0XHRcdFx0c2VsZWN0b3IgfHwgW10sXG5cdFx0XHRmYWxzZVxuXHRcdCkubGVuZ3RoO1xuXHR9XG59ICk7XG5cblxuLy8gSW5pdGlhbGl6ZSBhIGpRdWVyeSBvYmplY3RcblxuXG4vLyBBIGNlbnRyYWwgcmVmZXJlbmNlIHRvIHRoZSByb290IGpRdWVyeShkb2N1bWVudClcbnZhciByb290alF1ZXJ5LFxuXG5cdC8vIEEgc2ltcGxlIHdheSB0byBjaGVjayBmb3IgSFRNTCBzdHJpbmdzXG5cdC8vIFByaW9yaXRpemUgI2lkIG92ZXIgPHRhZz4gdG8gYXZvaWQgWFNTIHZpYSBsb2NhdGlvbi5oYXNoICgjOTUyMSlcblx0Ly8gU3RyaWN0IEhUTUwgcmVjb2duaXRpb24gKCMxMTI5MDogbXVzdCBzdGFydCB3aXRoIDwpXG5cdC8vIFNob3J0Y3V0IHNpbXBsZSAjaWQgY2FzZSBmb3Igc3BlZWRcblx0cnF1aWNrRXhwciA9IC9eKD86XFxzKig8W1xcd1xcV10rPilbXj5dKnwjKFtcXHctXSspKSQvLFxuXG5cdGluaXQgPSBqUXVlcnkuZm4uaW5pdCA9IGZ1bmN0aW9uKCBzZWxlY3RvciwgY29udGV4dCwgcm9vdCApIHtcblx0XHR2YXIgbWF0Y2gsIGVsZW07XG5cblx0XHQvLyBIQU5ETEU6ICQoXCJcIiksICQobnVsbCksICQodW5kZWZpbmVkKSwgJChmYWxzZSlcblx0XHRpZiAoICFzZWxlY3RvciApIHtcblx0XHRcdHJldHVybiB0aGlzO1xuXHRcdH1cblxuXHRcdC8vIE1ldGhvZCBpbml0KCkgYWNjZXB0cyBhbiBhbHRlcm5hdGUgcm9vdGpRdWVyeVxuXHRcdC8vIHNvIG1pZ3JhdGUgY2FuIHN1cHBvcnQgalF1ZXJ5LnN1YiAoZ2gtMjEwMSlcblx0XHRyb290ID0gcm9vdCB8fCByb290alF1ZXJ5O1xuXG5cdFx0Ly8gSGFuZGxlIEhUTUwgc3RyaW5nc1xuXHRcdGlmICggdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0aWYgKCBzZWxlY3RvclsgMCBdID09PSBcIjxcIiAmJlxuXHRcdFx0XHRzZWxlY3Rvclsgc2VsZWN0b3IubGVuZ3RoIC0gMSBdID09PSBcIj5cIiAmJlxuXHRcdFx0XHRzZWxlY3Rvci5sZW5ndGggPj0gMyApIHtcblxuXHRcdFx0XHQvLyBBc3N1bWUgdGhhdCBzdHJpbmdzIHRoYXQgc3RhcnQgYW5kIGVuZCB3aXRoIDw+IGFyZSBIVE1MIGFuZCBza2lwIHRoZSByZWdleCBjaGVja1xuXHRcdFx0XHRtYXRjaCA9IFsgbnVsbCwgc2VsZWN0b3IsIG51bGwgXTtcblxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0bWF0Y2ggPSBycXVpY2tFeHByLmV4ZWMoIHNlbGVjdG9yICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1hdGNoIGh0bWwgb3IgbWFrZSBzdXJlIG5vIGNvbnRleHQgaXMgc3BlY2lmaWVkIGZvciAjaWRcblx0XHRcdGlmICggbWF0Y2ggJiYgKCBtYXRjaFsgMSBdIHx8ICFjb250ZXh0ICkgKSB7XG5cblx0XHRcdFx0Ly8gSEFORExFOiAkKGh0bWwpIC0+ICQoYXJyYXkpXG5cdFx0XHRcdGlmICggbWF0Y2hbIDEgXSApIHtcblx0XHRcdFx0XHRjb250ZXh0ID0gY29udGV4dCBpbnN0YW5jZW9mIGpRdWVyeSA/IGNvbnRleHRbIDAgXSA6IGNvbnRleHQ7XG5cblx0XHRcdFx0XHQvLyBPcHRpb24gdG8gcnVuIHNjcmlwdHMgaXMgdHJ1ZSBmb3IgYmFjay1jb21wYXRcblx0XHRcdFx0XHQvLyBJbnRlbnRpb25hbGx5IGxldCB0aGUgZXJyb3IgYmUgdGhyb3duIGlmIHBhcnNlSFRNTCBpcyBub3QgcHJlc2VudFxuXHRcdFx0XHRcdGpRdWVyeS5tZXJnZSggdGhpcywgalF1ZXJ5LnBhcnNlSFRNTChcblx0XHRcdFx0XHRcdG1hdGNoWyAxIF0sXG5cdFx0XHRcdFx0XHRjb250ZXh0ICYmIGNvbnRleHQubm9kZVR5cGUgPyBjb250ZXh0Lm93bmVyRG9jdW1lbnQgfHwgY29udGV4dCA6IGRvY3VtZW50LFxuXHRcdFx0XHRcdFx0dHJ1ZVxuXHRcdFx0XHRcdCkgKTtcblxuXHRcdFx0XHRcdC8vIEhBTkRMRTogJChodG1sLCBwcm9wcylcblx0XHRcdFx0XHRpZiAoIHJzaW5nbGVUYWcudGVzdCggbWF0Y2hbIDEgXSApICYmIGpRdWVyeS5pc1BsYWluT2JqZWN0KCBjb250ZXh0ICkgKSB7XG5cdFx0XHRcdFx0XHRmb3IgKCBtYXRjaCBpbiBjb250ZXh0ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIFByb3BlcnRpZXMgb2YgY29udGV4dCBhcmUgY2FsbGVkIGFzIG1ldGhvZHMgaWYgcG9zc2libGVcblx0XHRcdFx0XHRcdFx0aWYgKCBpc0Z1bmN0aW9uKCB0aGlzWyBtYXRjaCBdICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0dGhpc1sgbWF0Y2ggXSggY29udGV4dFsgbWF0Y2ggXSApO1xuXG5cdFx0XHRcdFx0XHRcdC8vIC4uLmFuZCBvdGhlcndpc2Ugc2V0IGFzIGF0dHJpYnV0ZXNcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHR0aGlzLmF0dHIoIG1hdGNoLCBjb250ZXh0WyBtYXRjaCBdICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblxuXHRcdFx0XHQvLyBIQU5ETEU6ICQoI2lkKVxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGVsZW0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCggbWF0Y2hbIDIgXSApO1xuXG5cdFx0XHRcdFx0aWYgKCBlbGVtICkge1xuXG5cdFx0XHRcdFx0XHQvLyBJbmplY3QgdGhlIGVsZW1lbnQgZGlyZWN0bHkgaW50byB0aGUgalF1ZXJ5IG9iamVjdFxuXHRcdFx0XHRcdFx0dGhpc1sgMCBdID0gZWxlbTtcblx0XHRcdFx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH1cblxuXHRcdFx0Ly8gSEFORExFOiAkKGV4cHIsICQoLi4uKSlcblx0XHRcdH0gZWxzZSBpZiAoICFjb250ZXh0IHx8IGNvbnRleHQuanF1ZXJ5ICkge1xuXHRcdFx0XHRyZXR1cm4gKCBjb250ZXh0IHx8IHJvb3QgKS5maW5kKCBzZWxlY3RvciApO1xuXG5cdFx0XHQvLyBIQU5ETEU6ICQoZXhwciwgY29udGV4dClcblx0XHRcdC8vICh3aGljaCBpcyBqdXN0IGVxdWl2YWxlbnQgdG86ICQoY29udGV4dCkuZmluZChleHByKVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0cmV0dXJuIHRoaXMuY29uc3RydWN0b3IoIGNvbnRleHQgKS5maW5kKCBzZWxlY3RvciApO1xuXHRcdFx0fVxuXG5cdFx0Ly8gSEFORExFOiAkKERPTUVsZW1lbnQpXG5cdFx0fSBlbHNlIGlmICggc2VsZWN0b3Iubm9kZVR5cGUgKSB7XG5cdFx0XHR0aGlzWyAwIF0gPSBzZWxlY3Rvcjtcblx0XHRcdHRoaXMubGVuZ3RoID0gMTtcblx0XHRcdHJldHVybiB0aGlzO1xuXG5cdFx0Ly8gSEFORExFOiAkKGZ1bmN0aW9uKVxuXHRcdC8vIFNob3J0Y3V0IGZvciBkb2N1bWVudCByZWFkeVxuXHRcdH0gZWxzZSBpZiAoIGlzRnVuY3Rpb24oIHNlbGVjdG9yICkgKSB7XG5cdFx0XHRyZXR1cm4gcm9vdC5yZWFkeSAhPT0gdW5kZWZpbmVkID9cblx0XHRcdFx0cm9vdC5yZWFkeSggc2VsZWN0b3IgKSA6XG5cblx0XHRcdFx0Ly8gRXhlY3V0ZSBpbW1lZGlhdGVseSBpZiByZWFkeSBpcyBub3QgcHJlc2VudFxuXHRcdFx0XHRzZWxlY3RvciggalF1ZXJ5ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGpRdWVyeS5tYWtlQXJyYXkoIHNlbGVjdG9yLCB0aGlzICk7XG5cdH07XG5cbi8vIEdpdmUgdGhlIGluaXQgZnVuY3Rpb24gdGhlIGpRdWVyeSBwcm90b3R5cGUgZm9yIGxhdGVyIGluc3RhbnRpYXRpb25cbmluaXQucHJvdG90eXBlID0galF1ZXJ5LmZuO1xuXG4vLyBJbml0aWFsaXplIGNlbnRyYWwgcmVmZXJlbmNlXG5yb290alF1ZXJ5ID0galF1ZXJ5KCBkb2N1bWVudCApO1xuXG5cbnZhciBycGFyZW50c3ByZXYgPSAvXig/OnBhcmVudHN8cHJldig/OlVudGlsfEFsbCkpLyxcblxuXHQvLyBNZXRob2RzIGd1YXJhbnRlZWQgdG8gcHJvZHVjZSBhIHVuaXF1ZSBzZXQgd2hlbiBzdGFydGluZyBmcm9tIGEgdW5pcXVlIHNldFxuXHRndWFyYW50ZWVkVW5pcXVlID0ge1xuXHRcdGNoaWxkcmVuOiB0cnVlLFxuXHRcdGNvbnRlbnRzOiB0cnVlLFxuXHRcdG5leHQ6IHRydWUsXG5cdFx0cHJldjogdHJ1ZVxuXHR9O1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGhhczogZnVuY3Rpb24oIHRhcmdldCApIHtcblx0XHR2YXIgdGFyZ2V0cyA9IGpRdWVyeSggdGFyZ2V0LCB0aGlzICksXG5cdFx0XHRsID0gdGFyZ2V0cy5sZW5ndGg7XG5cblx0XHRyZXR1cm4gdGhpcy5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGkgPSAwO1xuXHRcdFx0Zm9yICggOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRpZiAoIGpRdWVyeS5jb250YWlucyggdGhpcywgdGFyZ2V0c1sgaSBdICkgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHRydWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0Y2xvc2VzdDogZnVuY3Rpb24oIHNlbGVjdG9ycywgY29udGV4dCApIHtcblx0XHR2YXIgY3VyLFxuXHRcdFx0aSA9IDAsXG5cdFx0XHRsID0gdGhpcy5sZW5ndGgsXG5cdFx0XHRtYXRjaGVkID0gW10sXG5cdFx0XHR0YXJnZXRzID0gdHlwZW9mIHNlbGVjdG9ycyAhPT0gXCJzdHJpbmdcIiAmJiBqUXVlcnkoIHNlbGVjdG9ycyApO1xuXG5cdFx0Ly8gUG9zaXRpb25hbCBzZWxlY3RvcnMgbmV2ZXIgbWF0Y2gsIHNpbmNlIHRoZXJlJ3Mgbm8gX3NlbGVjdGlvbl8gY29udGV4dFxuXHRcdGlmICggIXJuZWVkc0NvbnRleHQudGVzdCggc2VsZWN0b3JzICkgKSB7XG5cdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdGZvciAoIGN1ciA9IHRoaXNbIGkgXTsgY3VyICYmIGN1ciAhPT0gY29udGV4dDsgY3VyID0gY3VyLnBhcmVudE5vZGUgKSB7XG5cblx0XHRcdFx0XHQvLyBBbHdheXMgc2tpcCBkb2N1bWVudCBmcmFnbWVudHNcblx0XHRcdFx0XHRpZiAoIGN1ci5ub2RlVHlwZSA8IDExICYmICggdGFyZ2V0cyA/XG5cdFx0XHRcdFx0XHR0YXJnZXRzLmluZGV4KCBjdXIgKSA+IC0xIDpcblxuXHRcdFx0XHRcdFx0Ly8gRG9uJ3QgcGFzcyBub24tZWxlbWVudHMgdG8gU2l6emxlXG5cdFx0XHRcdFx0XHRjdXIubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0XHRcdFx0alF1ZXJ5LmZpbmQubWF0Y2hlc1NlbGVjdG9yKCBjdXIsIHNlbGVjdG9ycyApICkgKSB7XG5cblx0XHRcdFx0XHRcdG1hdGNoZWQucHVzaCggY3VyICk7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5wdXNoU3RhY2soIG1hdGNoZWQubGVuZ3RoID4gMSA/IGpRdWVyeS51bmlxdWVTb3J0KCBtYXRjaGVkICkgOiBtYXRjaGVkICk7XG5cdH0sXG5cblx0Ly8gRGV0ZXJtaW5lIHRoZSBwb3NpdGlvbiBvZiBhbiBlbGVtZW50IHdpdGhpbiB0aGUgc2V0XG5cdGluZGV4OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdC8vIE5vIGFyZ3VtZW50LCByZXR1cm4gaW5kZXggaW4gcGFyZW50XG5cdFx0aWYgKCAhZWxlbSApIHtcblx0XHRcdHJldHVybiAoIHRoaXNbIDAgXSAmJiB0aGlzWyAwIF0ucGFyZW50Tm9kZSApID8gdGhpcy5maXJzdCgpLnByZXZBbGwoKS5sZW5ndGggOiAtMTtcblx0XHR9XG5cblx0XHQvLyBJbmRleCBpbiBzZWxlY3RvclxuXHRcdGlmICggdHlwZW9mIGVsZW0gPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHRyZXR1cm4gaW5kZXhPZi5jYWxsKCBqUXVlcnkoIGVsZW0gKSwgdGhpc1sgMCBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gTG9jYXRlIHRoZSBwb3NpdGlvbiBvZiB0aGUgZGVzaXJlZCBlbGVtZW50XG5cdFx0cmV0dXJuIGluZGV4T2YuY2FsbCggdGhpcyxcblxuXHRcdFx0Ly8gSWYgaXQgcmVjZWl2ZXMgYSBqUXVlcnkgb2JqZWN0LCB0aGUgZmlyc3QgZWxlbWVudCBpcyB1c2VkXG5cdFx0XHRlbGVtLmpxdWVyeSA/IGVsZW1bIDAgXSA6IGVsZW1cblx0XHQpO1xuXHR9LFxuXG5cdGFkZDogZnVuY3Rpb24oIHNlbGVjdG9yLCBjb250ZXh0ICkge1xuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayhcblx0XHRcdGpRdWVyeS51bmlxdWVTb3J0KFxuXHRcdFx0XHRqUXVlcnkubWVyZ2UoIHRoaXMuZ2V0KCksIGpRdWVyeSggc2VsZWN0b3IsIGNvbnRleHQgKSApXG5cdFx0XHQpXG5cdFx0KTtcblx0fSxcblxuXHRhZGRCYWNrOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHRoaXMuYWRkKCBzZWxlY3RvciA9PSBudWxsID9cblx0XHRcdHRoaXMucHJldk9iamVjdCA6IHRoaXMucHJldk9iamVjdC5maWx0ZXIoIHNlbGVjdG9yIClcblx0XHQpO1xuXHR9XG59ICk7XG5cbmZ1bmN0aW9uIHNpYmxpbmcoIGN1ciwgZGlyICkge1xuXHR3aGlsZSAoICggY3VyID0gY3VyWyBkaXIgXSApICYmIGN1ci5ub2RlVHlwZSAhPT0gMSApIHt9XG5cdHJldHVybiBjdXI7XG59XG5cbmpRdWVyeS5lYWNoKCB7XG5cdHBhcmVudDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0dmFyIHBhcmVudCA9IGVsZW0ucGFyZW50Tm9kZTtcblx0XHRyZXR1cm4gcGFyZW50ICYmIHBhcmVudC5ub2RlVHlwZSAhPT0gMTEgPyBwYXJlbnQgOiBudWxsO1xuXHR9LFxuXHRwYXJlbnRzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInBhcmVudE5vZGVcIiApO1xuXHR9LFxuXHRwYXJlbnRzVW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBpLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcInBhcmVudE5vZGVcIiwgdW50aWwgKTtcblx0fSxcblx0bmV4dDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmcoIGVsZW0sIFwibmV4dFNpYmxpbmdcIiApO1xuXHR9LFxuXHRwcmV2OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZyggZWxlbSwgXCJwcmV2aW91c1NpYmxpbmdcIiApO1xuXHR9LFxuXHRuZXh0QWxsOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIgKTtcblx0fSxcblx0cHJldkFsbDogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIGRpciggZWxlbSwgXCJwcmV2aW91c1NpYmxpbmdcIiApO1xuXHR9LFxuXHRuZXh0VW50aWw6IGZ1bmN0aW9uKCBlbGVtLCBpLCB1bnRpbCApIHtcblx0XHRyZXR1cm4gZGlyKCBlbGVtLCBcIm5leHRTaWJsaW5nXCIsIHVudGlsICk7XG5cdH0sXG5cdHByZXZVbnRpbDogZnVuY3Rpb24oIGVsZW0sIGksIHVudGlsICkge1xuXHRcdHJldHVybiBkaXIoIGVsZW0sIFwicHJldmlvdXNTaWJsaW5nXCIsIHVudGlsICk7XG5cdH0sXG5cdHNpYmxpbmdzOiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRyZXR1cm4gc2libGluZ3MoICggZWxlbS5wYXJlbnROb2RlIHx8IHt9ICkuZmlyc3RDaGlsZCwgZWxlbSApO1xuXHR9LFxuXHRjaGlsZHJlbjogZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0cmV0dXJuIHNpYmxpbmdzKCBlbGVtLmZpcnN0Q2hpbGQgKTtcblx0fSxcblx0Y29udGVudHM6IGZ1bmN0aW9uKCBlbGVtICkge1xuICAgICAgICBpZiAoIG5vZGVOYW1lKCBlbGVtLCBcImlmcmFtZVwiICkgKSB7XG4gICAgICAgICAgICByZXR1cm4gZWxlbS5jb250ZW50RG9jdW1lbnQ7XG4gICAgICAgIH1cblxuICAgICAgICAvLyBTdXBwb3J0OiBJRSA5IC0gMTEgb25seSwgaU9TIDcgb25seSwgQW5kcm9pZCBCcm93c2VyIDw9NC4zIG9ubHlcbiAgICAgICAgLy8gVHJlYXQgdGhlIHRlbXBsYXRlIGVsZW1lbnQgYXMgYSByZWd1bGFyIG9uZSBpbiBicm93c2VycyB0aGF0XG4gICAgICAgIC8vIGRvbid0IHN1cHBvcnQgaXQuXG4gICAgICAgIGlmICggbm9kZU5hbWUoIGVsZW0sIFwidGVtcGxhdGVcIiApICkge1xuICAgICAgICAgICAgZWxlbSA9IGVsZW0uY29udGVudCB8fCBlbGVtO1xuICAgICAgICB9XG5cbiAgICAgICAgcmV0dXJuIGpRdWVyeS5tZXJnZSggW10sIGVsZW0uY2hpbGROb2RlcyApO1xuXHR9XG59LCBmdW5jdGlvbiggbmFtZSwgZm4gKSB7XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHVudGlsLCBzZWxlY3RvciApIHtcblx0XHR2YXIgbWF0Y2hlZCA9IGpRdWVyeS5tYXAoIHRoaXMsIGZuLCB1bnRpbCApO1xuXG5cdFx0aWYgKCBuYW1lLnNsaWNlKCAtNSApICE9PSBcIlVudGlsXCIgKSB7XG5cdFx0XHRzZWxlY3RvciA9IHVudGlsO1xuXHRcdH1cblxuXHRcdGlmICggc2VsZWN0b3IgJiYgdHlwZW9mIHNlbGVjdG9yID09PSBcInN0cmluZ1wiICkge1xuXHRcdFx0bWF0Y2hlZCA9IGpRdWVyeS5maWx0ZXIoIHNlbGVjdG9yLCBtYXRjaGVkICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB0aGlzLmxlbmd0aCA+IDEgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBkdXBsaWNhdGVzXG5cdFx0XHRpZiAoICFndWFyYW50ZWVkVW5pcXVlWyBuYW1lIF0gKSB7XG5cdFx0XHRcdGpRdWVyeS51bmlxdWVTb3J0KCBtYXRjaGVkICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJldmVyc2Ugb3JkZXIgZm9yIHBhcmVudHMqIGFuZCBwcmV2LWRlcml2YXRpdmVzXG5cdFx0XHRpZiAoIHJwYXJlbnRzcHJldi50ZXN0KCBuYW1lICkgKSB7XG5cdFx0XHRcdG1hdGNoZWQucmV2ZXJzZSgpO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLnB1c2hTdGFjayggbWF0Y2hlZCApO1xuXHR9O1xufSApO1xudmFyIHJub3RodG1sd2hpdGUgPSAoIC9bXlxceDIwXFx0XFxyXFxuXFxmXSsvZyApO1xuXG5cblxuLy8gQ29udmVydCBTdHJpbmctZm9ybWF0dGVkIG9wdGlvbnMgaW50byBPYmplY3QtZm9ybWF0dGVkIG9uZXNcbmZ1bmN0aW9uIGNyZWF0ZU9wdGlvbnMoIG9wdGlvbnMgKSB7XG5cdHZhciBvYmplY3QgPSB7fTtcblx0alF1ZXJ5LmVhY2goIG9wdGlvbnMubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXSwgZnVuY3Rpb24oIF8sIGZsYWcgKSB7XG5cdFx0b2JqZWN0WyBmbGFnIF0gPSB0cnVlO1xuXHR9ICk7XG5cdHJldHVybiBvYmplY3Q7XG59XG5cbi8qXG4gKiBDcmVhdGUgYSBjYWxsYmFjayBsaXN0IHVzaW5nIHRoZSBmb2xsb3dpbmcgcGFyYW1ldGVyczpcbiAqXG4gKlx0b3B0aW9uczogYW4gb3B0aW9uYWwgbGlzdCBvZiBzcGFjZS1zZXBhcmF0ZWQgb3B0aW9ucyB0aGF0IHdpbGwgY2hhbmdlIGhvd1xuICpcdFx0XHR0aGUgY2FsbGJhY2sgbGlzdCBiZWhhdmVzIG9yIGEgbW9yZSB0cmFkaXRpb25hbCBvcHRpb24gb2JqZWN0XG4gKlxuICogQnkgZGVmYXVsdCBhIGNhbGxiYWNrIGxpc3Qgd2lsbCBhY3QgbGlrZSBhbiBldmVudCBjYWxsYmFjayBsaXN0IGFuZCBjYW4gYmVcbiAqIFwiZmlyZWRcIiBtdWx0aXBsZSB0aW1lcy5cbiAqXG4gKiBQb3NzaWJsZSBvcHRpb25zOlxuICpcbiAqXHRvbmNlOlx0XHRcdHdpbGwgZW5zdXJlIHRoZSBjYWxsYmFjayBsaXN0IGNhbiBvbmx5IGJlIGZpcmVkIG9uY2UgKGxpa2UgYSBEZWZlcnJlZClcbiAqXG4gKlx0bWVtb3J5Olx0XHRcdHdpbGwga2VlcCB0cmFjayBvZiBwcmV2aW91cyB2YWx1ZXMgYW5kIHdpbGwgY2FsbCBhbnkgY2FsbGJhY2sgYWRkZWRcbiAqXHRcdFx0XHRcdGFmdGVyIHRoZSBsaXN0IGhhcyBiZWVuIGZpcmVkIHJpZ2h0IGF3YXkgd2l0aCB0aGUgbGF0ZXN0IFwibWVtb3JpemVkXCJcbiAqXHRcdFx0XHRcdHZhbHVlcyAobGlrZSBhIERlZmVycmVkKVxuICpcbiAqXHR1bmlxdWU6XHRcdFx0d2lsbCBlbnN1cmUgYSBjYWxsYmFjayBjYW4gb25seSBiZSBhZGRlZCBvbmNlIChubyBkdXBsaWNhdGUgaW4gdGhlIGxpc3QpXG4gKlxuICpcdHN0b3BPbkZhbHNlOlx0aW50ZXJydXB0IGNhbGxpbmdzIHdoZW4gYSBjYWxsYmFjayByZXR1cm5zIGZhbHNlXG4gKlxuICovXG5qUXVlcnkuQ2FsbGJhY2tzID0gZnVuY3Rpb24oIG9wdGlvbnMgKSB7XG5cblx0Ly8gQ29udmVydCBvcHRpb25zIGZyb20gU3RyaW5nLWZvcm1hdHRlZCB0byBPYmplY3QtZm9ybWF0dGVkIGlmIG5lZWRlZFxuXHQvLyAod2UgY2hlY2sgaW4gY2FjaGUgZmlyc3QpXG5cdG9wdGlvbnMgPSB0eXBlb2Ygb3B0aW9ucyA9PT0gXCJzdHJpbmdcIiA/XG5cdFx0Y3JlYXRlT3B0aW9ucyggb3B0aW9ucyApIDpcblx0XHRqUXVlcnkuZXh0ZW5kKCB7fSwgb3B0aW9ucyApO1xuXG5cdHZhciAvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCBpcyBjdXJyZW50bHkgZmlyaW5nXG5cdFx0ZmlyaW5nLFxuXG5cdFx0Ly8gTGFzdCBmaXJlIHZhbHVlIGZvciBub24tZm9yZ2V0dGFibGUgbGlzdHNcblx0XHRtZW1vcnksXG5cblx0XHQvLyBGbGFnIHRvIGtub3cgaWYgbGlzdCB3YXMgYWxyZWFkeSBmaXJlZFxuXHRcdGZpcmVkLFxuXG5cdFx0Ly8gRmxhZyB0byBwcmV2ZW50IGZpcmluZ1xuXHRcdGxvY2tlZCxcblxuXHRcdC8vIEFjdHVhbCBjYWxsYmFjayBsaXN0XG5cdFx0bGlzdCA9IFtdLFxuXG5cdFx0Ly8gUXVldWUgb2YgZXhlY3V0aW9uIGRhdGEgZm9yIHJlcGVhdGFibGUgbGlzdHNcblx0XHRxdWV1ZSA9IFtdLFxuXG5cdFx0Ly8gSW5kZXggb2YgY3VycmVudGx5IGZpcmluZyBjYWxsYmFjayAobW9kaWZpZWQgYnkgYWRkL3JlbW92ZSBhcyBuZWVkZWQpXG5cdFx0ZmlyaW5nSW5kZXggPSAtMSxcblxuXHRcdC8vIEZpcmUgY2FsbGJhY2tzXG5cdFx0ZmlyZSA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHQvLyBFbmZvcmNlIHNpbmdsZS1maXJpbmdcblx0XHRcdGxvY2tlZCA9IGxvY2tlZCB8fCBvcHRpb25zLm9uY2U7XG5cblx0XHRcdC8vIEV4ZWN1dGUgY2FsbGJhY2tzIGZvciBhbGwgcGVuZGluZyBleGVjdXRpb25zLFxuXHRcdFx0Ly8gcmVzcGVjdGluZyBmaXJpbmdJbmRleCBvdmVycmlkZXMgYW5kIHJ1bnRpbWUgY2hhbmdlc1xuXHRcdFx0ZmlyZWQgPSBmaXJpbmcgPSB0cnVlO1xuXHRcdFx0Zm9yICggOyBxdWV1ZS5sZW5ndGg7IGZpcmluZ0luZGV4ID0gLTEgKSB7XG5cdFx0XHRcdG1lbW9yeSA9IHF1ZXVlLnNoaWZ0KCk7XG5cdFx0XHRcdHdoaWxlICggKytmaXJpbmdJbmRleCA8IGxpc3QubGVuZ3RoICkge1xuXG5cdFx0XHRcdFx0Ly8gUnVuIGNhbGxiYWNrIGFuZCBjaGVjayBmb3IgZWFybHkgdGVybWluYXRpb25cblx0XHRcdFx0XHRpZiAoIGxpc3RbIGZpcmluZ0luZGV4IF0uYXBwbHkoIG1lbW9yeVsgMCBdLCBtZW1vcnlbIDEgXSApID09PSBmYWxzZSAmJlxuXHRcdFx0XHRcdFx0b3B0aW9ucy5zdG9wT25GYWxzZSApIHtcblxuXHRcdFx0XHRcdFx0Ly8gSnVtcCB0byBlbmQgYW5kIGZvcmdldCB0aGUgZGF0YSBzbyAuYWRkIGRvZXNuJ3QgcmUtZmlyZVxuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aDtcblx0XHRcdFx0XHRcdG1lbW9yeSA9IGZhbHNlO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBGb3JnZXQgdGhlIGRhdGEgaWYgd2UncmUgZG9uZSB3aXRoIGl0XG5cdFx0XHRpZiAoICFvcHRpb25zLm1lbW9yeSApIHtcblx0XHRcdFx0bWVtb3J5ID0gZmFsc2U7XG5cdFx0XHR9XG5cblx0XHRcdGZpcmluZyA9IGZhbHNlO1xuXG5cdFx0XHQvLyBDbGVhbiB1cCBpZiB3ZSdyZSBkb25lIGZpcmluZyBmb3IgZ29vZFxuXHRcdFx0aWYgKCBsb2NrZWQgKSB7XG5cblx0XHRcdFx0Ly8gS2VlcCBhbiBlbXB0eSBsaXN0IGlmIHdlIGhhdmUgZGF0YSBmb3IgZnV0dXJlIGFkZCBjYWxsc1xuXHRcdFx0XHRpZiAoIG1lbW9yeSApIHtcblx0XHRcdFx0XHRsaXN0ID0gW107XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCB0aGlzIG9iamVjdCBpcyBzcGVudFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGxpc3QgPSBcIlwiO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdC8vIEFjdHVhbCBDYWxsYmFja3Mgb2JqZWN0XG5cdFx0c2VsZiA9IHtcblxuXHRcdFx0Ly8gQWRkIGEgY2FsbGJhY2sgb3IgYSBjb2xsZWN0aW9uIG9mIGNhbGxiYWNrcyB0byB0aGUgbGlzdFxuXHRcdFx0YWRkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXG5cdFx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBtZW1vcnkgZnJvbSBhIHBhc3QgcnVuLCB3ZSBzaG91bGQgZmlyZSBhZnRlciBhZGRpbmdcblx0XHRcdFx0XHRpZiAoIG1lbW9yeSAmJiAhZmlyaW5nICkge1xuXHRcdFx0XHRcdFx0ZmlyaW5nSW5kZXggPSBsaXN0Lmxlbmd0aCAtIDE7XG5cdFx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBtZW1vcnkgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQoIGZ1bmN0aW9uIGFkZCggYXJncyApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCBhcmdzLCBmdW5jdGlvbiggXywgYXJnICkge1xuXHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIGFyZyApICkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICggIW9wdGlvbnMudW5pcXVlIHx8ICFzZWxmLmhhcyggYXJnICkgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRsaXN0LnB1c2goIGFyZyApO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSBlbHNlIGlmICggYXJnICYmIGFyZy5sZW5ndGggJiYgdG9UeXBlKCBhcmcgKSAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIEluc3BlY3QgcmVjdXJzaXZlbHlcblx0XHRcdFx0XHRcdFx0XHRhZGQoIGFyZyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0fSApKCBhcmd1bWVudHMgKTtcblxuXHRcdFx0XHRcdGlmICggbWVtb3J5ICYmICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gUmVtb3ZlIGEgY2FsbGJhY2sgZnJvbSB0aGUgbGlzdFxuXHRcdFx0cmVtb3ZlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0alF1ZXJ5LmVhY2goIGFyZ3VtZW50cywgZnVuY3Rpb24oIF8sIGFyZyApIHtcblx0XHRcdFx0XHR2YXIgaW5kZXg7XG5cdFx0XHRcdFx0d2hpbGUgKCAoIGluZGV4ID0galF1ZXJ5LmluQXJyYXkoIGFyZywgbGlzdCwgaW5kZXggKSApID4gLTEgKSB7XG5cdFx0XHRcdFx0XHRsaXN0LnNwbGljZSggaW5kZXgsIDEgKTtcblxuXHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGZpcmluZyBpbmRleGVzXG5cdFx0XHRcdFx0XHRpZiAoIGluZGV4IDw9IGZpcmluZ0luZGV4ICkge1xuXHRcdFx0XHRcdFx0XHRmaXJpbmdJbmRleC0tO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSApO1xuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIENoZWNrIGlmIGEgZ2l2ZW4gY2FsbGJhY2sgaXMgaW4gdGhlIGxpc3QuXG5cdFx0XHQvLyBJZiBubyBhcmd1bWVudCBpcyBnaXZlbiwgcmV0dXJuIHdoZXRoZXIgb3Igbm90IGxpc3QgaGFzIGNhbGxiYWNrcyBhdHRhY2hlZC5cblx0XHRcdGhhczogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRyZXR1cm4gZm4gP1xuXHRcdFx0XHRcdGpRdWVyeS5pbkFycmF5KCBmbiwgbGlzdCApID4gLTEgOlxuXHRcdFx0XHRcdGxpc3QubGVuZ3RoID4gMDtcblx0XHRcdH0sXG5cblx0XHRcdC8vIFJlbW92ZSBhbGwgY2FsbGJhY2tzIGZyb20gdGhlIGxpc3Rcblx0XHRcdGVtcHR5OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBsaXN0ICkge1xuXHRcdFx0XHRcdGxpc3QgPSBbXTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cblx0XHRcdC8vIERpc2FibGUgLmZpcmUgYW5kIC5hZGRcblx0XHRcdC8vIEFib3J0IGFueSBjdXJyZW50L3BlbmRpbmcgZXhlY3V0aW9uc1xuXHRcdFx0Ly8gQ2xlYXIgYWxsIGNhbGxiYWNrcyBhbmQgdmFsdWVzXG5cdFx0XHRkaXNhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0bG9ja2VkID0gcXVldWUgPSBbXTtcblx0XHRcdFx0bGlzdCA9IG1lbW9yeSA9IFwiXCI7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblx0XHRcdGRpc2FibGVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICFsaXN0O1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRGlzYWJsZSAuZmlyZVxuXHRcdFx0Ly8gQWxzbyBkaXNhYmxlIC5hZGQgdW5sZXNzIHdlIGhhdmUgbWVtb3J5IChzaW5jZSBpdCB3b3VsZCBoYXZlIG5vIGVmZmVjdClcblx0XHRcdC8vIEFib3J0IGFueSBwZW5kaW5nIGV4ZWN1dGlvbnNcblx0XHRcdGxvY2s6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRsb2NrZWQgPSBxdWV1ZSA9IFtdO1xuXHRcdFx0XHRpZiAoICFtZW1vcnkgJiYgIWZpcmluZyApIHtcblx0XHRcdFx0XHRsaXN0ID0gbWVtb3J5ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH0sXG5cdFx0XHRsb2NrZWQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRyZXR1cm4gISFsb2NrZWQ7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBDYWxsIGFsbCBjYWxsYmFja3Mgd2l0aCB0aGUgZ2l2ZW4gY29udGV4dCBhbmQgYXJndW1lbnRzXG5cdFx0XHRmaXJlV2l0aDogZnVuY3Rpb24oIGNvbnRleHQsIGFyZ3MgKSB7XG5cdFx0XHRcdGlmICggIWxvY2tlZCApIHtcblx0XHRcdFx0XHRhcmdzID0gYXJncyB8fCBbXTtcblx0XHRcdFx0XHRhcmdzID0gWyBjb250ZXh0LCBhcmdzLnNsaWNlID8gYXJncy5zbGljZSgpIDogYXJncyBdO1xuXHRcdFx0XHRcdHF1ZXVlLnB1c2goIGFyZ3MgKTtcblx0XHRcdFx0XHRpZiAoICFmaXJpbmcgKSB7XG5cdFx0XHRcdFx0XHRmaXJlKCk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fSxcblxuXHRcdFx0Ly8gQ2FsbCBhbGwgdGhlIGNhbGxiYWNrcyB3aXRoIHRoZSBnaXZlbiBhcmd1bWVudHNcblx0XHRcdGZpcmU6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRzZWxmLmZpcmVXaXRoKCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHR9LFxuXG5cdFx0XHQvLyBUbyBrbm93IGlmIHRoZSBjYWxsYmFja3MgaGF2ZSBhbHJlYWR5IGJlZW4gY2FsbGVkIGF0IGxlYXN0IG9uY2Vcblx0XHRcdGZpcmVkOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0cmV0dXJuICEhZmlyZWQ7XG5cdFx0XHR9XG5cdFx0fTtcblxuXHRyZXR1cm4gc2VsZjtcbn07XG5cblxuZnVuY3Rpb24gSWRlbnRpdHkoIHYgKSB7XG5cdHJldHVybiB2O1xufVxuZnVuY3Rpb24gVGhyb3dlciggZXggKSB7XG5cdHRocm93IGV4O1xufVxuXG5mdW5jdGlvbiBhZG9wdFZhbHVlKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0LCBub1ZhbHVlICkge1xuXHR2YXIgbWV0aG9kO1xuXG5cdHRyeSB7XG5cblx0XHQvLyBDaGVjayBmb3IgcHJvbWlzZSBhc3BlY3QgZmlyc3QgdG8gcHJpdmlsZWdlIHN5bmNocm9ub3VzIGJlaGF2aW9yXG5cdFx0aWYgKCB2YWx1ZSAmJiBpc0Z1bmN0aW9uKCAoIG1ldGhvZCA9IHZhbHVlLnByb21pc2UgKSApICkge1xuXHRcdFx0bWV0aG9kLmNhbGwoIHZhbHVlICkuZG9uZSggcmVzb2x2ZSApLmZhaWwoIHJlamVjdCApO1xuXG5cdFx0Ly8gT3RoZXIgdGhlbmFibGVzXG5cdFx0fSBlbHNlIGlmICggdmFsdWUgJiYgaXNGdW5jdGlvbiggKCBtZXRob2QgPSB2YWx1ZS50aGVuICkgKSApIHtcblx0XHRcdG1ldGhvZC5jYWxsKCB2YWx1ZSwgcmVzb2x2ZSwgcmVqZWN0ICk7XG5cblx0XHQvLyBPdGhlciBub24tdGhlbmFibGVzXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gQ29udHJvbCBgcmVzb2x2ZWAgYXJndW1lbnRzIGJ5IGxldHRpbmcgQXJyYXkjc2xpY2UgY2FzdCBib29sZWFuIGBub1ZhbHVlYCB0byBpbnRlZ2VyOlxuXHRcdFx0Ly8gKiBmYWxzZTogWyB2YWx1ZSBdLnNsaWNlKCAwICkgPT4gcmVzb2x2ZSggdmFsdWUgKVxuXHRcdFx0Ly8gKiB0cnVlOiBbIHZhbHVlIF0uc2xpY2UoIDEgKSA9PiByZXNvbHZlKClcblx0XHRcdHJlc29sdmUuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdLnNsaWNlKCBub1ZhbHVlICkgKTtcblx0XHR9XG5cblx0Ly8gRm9yIFByb21pc2VzL0ErLCBjb252ZXJ0IGV4Y2VwdGlvbnMgaW50byByZWplY3Rpb25zXG5cdC8vIFNpbmNlIGpRdWVyeS53aGVuIGRvZXNuJ3QgdW53cmFwIHRoZW5hYmxlcywgd2UgY2FuIHNraXAgdGhlIGV4dHJhIGNoZWNrcyBhcHBlYXJpbmcgaW5cblx0Ly8gRGVmZXJyZWQjdGhlbiB0byBjb25kaXRpb25hbGx5IHN1cHByZXNzIHJlamVjdGlvbi5cblx0fSBjYXRjaCAoIHZhbHVlICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgb25seVxuXHRcdC8vIFN0cmljdCBtb2RlIGZ1bmN0aW9ucyBpbnZva2VkIHdpdGhvdXQgLmNhbGwvLmFwcGx5IGdldCBnbG9iYWwtb2JqZWN0IGNvbnRleHRcblx0XHRyZWplY3QuYXBwbHkoIHVuZGVmaW5lZCwgWyB2YWx1ZSBdICk7XG5cdH1cbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdERlZmVycmVkOiBmdW5jdGlvbiggZnVuYyApIHtcblx0XHR2YXIgdHVwbGVzID0gW1xuXG5cdFx0XHRcdC8vIGFjdGlvbiwgYWRkIGxpc3RlbmVyLCBjYWxsYmFja3MsXG5cdFx0XHRcdC8vIC4uLiAudGhlbiBoYW5kbGVycywgYXJndW1lbnQgaW5kZXgsIFtmaW5hbCBzdGF0ZV1cblx0XHRcdFx0WyBcIm5vdGlmeVwiLCBcInByb2dyZXNzXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwibWVtb3J5XCIgKSxcblx0XHRcdFx0XHRqUXVlcnkuQ2FsbGJhY2tzKCBcIm1lbW9yeVwiICksIDIgXSxcblx0XHRcdFx0WyBcInJlc29sdmVcIiwgXCJkb25lXCIsIGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLFxuXHRcdFx0XHRcdGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLCAwLCBcInJlc29sdmVkXCIgXSxcblx0XHRcdFx0WyBcInJlamVjdFwiLCBcImZhaWxcIiwgalF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cdFx0XHRcdFx0alF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksIDEsIFwicmVqZWN0ZWRcIiBdXG5cdFx0XHRdLFxuXHRcdFx0c3RhdGUgPSBcInBlbmRpbmdcIixcblx0XHRcdHByb21pc2UgPSB7XG5cdFx0XHRcdHN0YXRlOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gc3RhdGU7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdGFsd2F5czogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0ZGVmZXJyZWQuZG9uZSggYXJndW1lbnRzICkuZmFpbCggYXJndW1lbnRzICk7XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cdFx0XHRcdFwiY2F0Y2hcIjogZnVuY3Rpb24oIGZuICkge1xuXHRcdFx0XHRcdHJldHVybiBwcm9taXNlLnRoZW4oIG51bGwsIGZuICk7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gS2VlcCBwaXBlIGZvciBiYWNrLWNvbXBhdFxuXHRcdFx0XHRwaXBlOiBmdW5jdGlvbiggLyogZm5Eb25lLCBmbkZhaWwsIGZuUHJvZ3Jlc3MgKi8gKSB7XG5cdFx0XHRcdFx0dmFyIGZucyA9IGFyZ3VtZW50cztcblxuXHRcdFx0XHRcdHJldHVybiBqUXVlcnkuRGVmZXJyZWQoIGZ1bmN0aW9uKCBuZXdEZWZlciApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5lYWNoKCB0dXBsZXMsIGZ1bmN0aW9uKCBpLCB0dXBsZSApIHtcblxuXHRcdFx0XHRcdFx0XHQvLyBNYXAgdHVwbGVzIChwcm9ncmVzcywgZG9uZSwgZmFpbCkgdG8gYXJndW1lbnRzIChkb25lLCBmYWlsLCBwcm9ncmVzcylcblx0XHRcdFx0XHRcdFx0dmFyIGZuID0gaXNGdW5jdGlvbiggZm5zWyB0dXBsZVsgNCBdIF0gKSAmJiBmbnNbIHR1cGxlWyA0IF0gXTtcblxuXHRcdFx0XHRcdFx0XHQvLyBkZWZlcnJlZC5wcm9ncmVzcyhmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5ub3RpZnkgfSlcblx0XHRcdFx0XHRcdFx0Ly8gZGVmZXJyZWQuZG9uZShmdW5jdGlvbigpIHsgYmluZCB0byBuZXdEZWZlciBvciBuZXdEZWZlci5yZXNvbHZlIH0pXG5cdFx0XHRcdFx0XHRcdC8vIGRlZmVycmVkLmZhaWwoZnVuY3Rpb24oKSB7IGJpbmQgdG8gbmV3RGVmZXIgb3IgbmV3RGVmZXIucmVqZWN0IH0pXG5cdFx0XHRcdFx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMSBdIF0oIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdHZhciByZXR1cm5lZCA9IGZuICYmIGZuLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHJldHVybmVkICYmIGlzRnVuY3Rpb24oIHJldHVybmVkLnByb21pc2UgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnByb21pc2UoKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQucHJvZ3Jlc3MoIG5ld0RlZmVyLm5vdGlmeSApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdC5kb25lKCBuZXdEZWZlci5yZXNvbHZlIClcblx0XHRcdFx0XHRcdFx0XHRcdFx0LmZhaWwoIG5ld0RlZmVyLnJlamVjdCApO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRuZXdEZWZlclsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHRoaXMsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGZuID8gWyByZXR1cm5lZCBdIDogYXJndW1lbnRzXG5cdFx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0fSApO1xuXHRcdFx0XHRcdFx0Zm5zID0gbnVsbDtcblx0XHRcdFx0XHR9ICkucHJvbWlzZSgpO1xuXHRcdFx0XHR9LFxuXHRcdFx0XHR0aGVuOiBmdW5jdGlvbiggb25GdWxmaWxsZWQsIG9uUmVqZWN0ZWQsIG9uUHJvZ3Jlc3MgKSB7XG5cdFx0XHRcdFx0dmFyIG1heERlcHRoID0gMDtcblx0XHRcdFx0XHRmdW5jdGlvbiByZXNvbHZlKCBkZXB0aCwgZGVmZXJyZWQsIGhhbmRsZXIsIHNwZWNpYWwgKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRcdHZhciB0aGF0ID0gdGhpcyxcblx0XHRcdFx0XHRcdFx0XHRhcmdzID0gYXJndW1lbnRzLFxuXHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3cgPSBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0XHRcdHZhciByZXR1cm5lZCwgdGhlbjtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMy4zLjNcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU5XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBJZ25vcmUgZG91YmxlLXJlc29sdXRpb24gYXR0ZW1wdHNcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggZGVwdGggPCBtYXhEZXB0aCApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZCA9IGhhbmRsZXIuYXBwbHkoIHRoYXQsIGFyZ3MgKTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuMVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gaHR0cHM6Ly9wcm9taXNlc2FwbHVzLmNvbS8jcG9pbnQtNDhcblx0XHRcdFx0XHRcdFx0XHRcdGlmICggcmV0dXJuZWQgPT09IGRlZmVycmVkLnByb21pc2UoKSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0dGhyb3cgbmV3IFR5cGVFcnJvciggXCJUaGVuYWJsZSBzZWxmLXJlc29sdXRpb25cIiApO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBQcm9taXNlcy9BKyBzZWN0aW9ucyAyLjMuMy4xLCAzLjVcblx0XHRcdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU0XG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC03NVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gUmV0cmlldmUgYHRoZW5gIG9ubHkgb25jZVxuXHRcdFx0XHRcdFx0XHRcdFx0dGhlbiA9IHJldHVybmVkICYmXG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gU3VwcG9ydDogUHJvbWlzZXMvQSsgc2VjdGlvbiAyLjMuNFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02NFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IGNoZWNrIG9iamVjdHMgYW5kIGZ1bmN0aW9ucyBmb3IgdGhlbmFiaWxpdHlcblx0XHRcdFx0XHRcdFx0XHRcdFx0KCB0eXBlb2YgcmV0dXJuZWQgPT09IFwib2JqZWN0XCIgfHxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0eXBlb2YgcmV0dXJuZWQgPT09IFwiZnVuY3Rpb25cIiApICYmXG5cdFx0XHRcdFx0XHRcdFx0XHRcdHJldHVybmVkLnRoZW47XG5cblx0XHRcdFx0XHRcdFx0XHRcdC8vIEhhbmRsZSBhIHJldHVybmVkIHRoZW5hYmxlXG5cdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGlzRnVuY3Rpb24oIHRoZW4gKSApIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBTcGVjaWFsIHByb2Nlc3NvcnMgKG5vdGlmeSkganVzdCB3YWl0IGZvciByZXNvbHV0aW9uXG5cdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggc3BlY2lhbCApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGVuLmNhbGwoXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXR1cm5lZCxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgSWRlbnRpdHksIHNwZWNpYWwgKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgVGhyb3dlciwgc3BlY2lhbCApXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBOb3JtYWwgcHJvY2Vzc29ycyAocmVzb2x2ZSkgYWxzbyBob29rIGludG8gcHJvZ3Jlc3Ncblx0XHRcdFx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIC4uLmFuZCBkaXNyZWdhcmQgb2xkZXIgcmVzb2x1dGlvbiB2YWx1ZXNcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRtYXhEZXB0aCsrO1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhlbi5jYWxsKFxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0cmV0dXJuZWQsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIElkZW50aXR5LCBzcGVjaWFsICksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRyZXNvbHZlKCBtYXhEZXB0aCwgZGVmZXJyZWQsIFRocm93ZXIsIHNwZWNpYWwgKSxcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHJlc29sdmUoIG1heERlcHRoLCBkZWZlcnJlZCwgSWRlbnRpdHksXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGggKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdCk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSGFuZGxlIGFsbCBvdGhlciByZXR1cm5lZCB2YWx1ZXNcblx0XHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0Ly8gT25seSBzdWJzdGl0dXRlIGhhbmRsZXJzIHBhc3Mgb24gY29udGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBhbmQgbXVsdGlwbGUgdmFsdWVzIChub24tc3BlYyBiZWhhdmlvcilcblx0XHRcdFx0XHRcdFx0XHRcdFx0aWYgKCBoYW5kbGVyICE9PSBJZGVudGl0eSApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHR0aGF0ID0gdW5kZWZpbmVkO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGFyZ3MgPSBbIHJldHVybmVkIF07XG5cdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBQcm9jZXNzIHRoZSB2YWx1ZShzKVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBEZWZhdWx0IHByb2Nlc3MgaXMgcmVzb2x2ZVxuXHRcdFx0XHRcdFx0XHRcdFx0XHQoIHNwZWNpYWwgfHwgZGVmZXJyZWQucmVzb2x2ZVdpdGggKSggdGhhdCwgYXJncyApO1xuXHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdH0sXG5cblx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IG5vcm1hbCBwcm9jZXNzb3JzIChyZXNvbHZlKSBjYXRjaCBhbmQgcmVqZWN0IGV4Y2VwdGlvbnNcblx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzID0gc3BlY2lhbCA/XG5cdFx0XHRcdFx0XHRcdFx0XHRtaWdodFRocm93IDpcblx0XHRcdFx0XHRcdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR0cnkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdG1pZ2h0VGhyb3coKTtcblx0XHRcdFx0XHRcdFx0XHRcdFx0fSBjYXRjaCAoIGUgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5EZWZlcnJlZC5leGNlcHRpb25Ib29rICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2soIGUsXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdHByb2Nlc3Muc3RhY2tUcmFjZSApO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy40LjFcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBodHRwczovL3Byb21pc2VzYXBsdXMuY29tLyNwb2ludC02MVxuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdC8vIElnbm9yZSBwb3N0LXJlc29sdXRpb24gZXhjZXB0aW9uc1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggZGVwdGggKyAxID49IG1heERlcHRoICkge1xuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBPbmx5IHN1YnN0aXR1dGUgaGFuZGxlcnMgcGFzcyBvbiBjb250ZXh0XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBhbmQgbXVsdGlwbGUgdmFsdWVzIChub24tc3BlYyBiZWhhdmlvcilcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdGlmICggaGFuZGxlciAhPT0gVGhyb3dlciApIHtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0dGhhdCA9IHVuZGVmaW5lZDtcblx0XHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0YXJncyA9IFsgZSBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0XHRkZWZlcnJlZC5yZWplY3RXaXRoKCB0aGF0LCBhcmdzICk7XG5cdFx0XHRcdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdFx0XHR9O1xuXG5cdFx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFByb21pc2VzL0ErIHNlY3Rpb24gMi4zLjMuMy4xXG5cdFx0XHRcdFx0XHRcdC8vIGh0dHBzOi8vcHJvbWlzZXNhcGx1cy5jb20vI3BvaW50LTU3XG5cdFx0XHRcdFx0XHRcdC8vIFJlLXJlc29sdmUgcHJvbWlzZXMgaW1tZWRpYXRlbHkgdG8gZG9kZ2UgZmFsc2UgcmVqZWN0aW9uIGZyb21cblx0XHRcdFx0XHRcdFx0Ly8gc3Vic2VxdWVudCBlcnJvcnNcblx0XHRcdFx0XHRcdFx0aWYgKCBkZXB0aCApIHtcblx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzKCk7XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBDYWxsIGFuIG9wdGlvbmFsIGhvb2sgdG8gcmVjb3JkIHRoZSBzdGFjaywgaW4gY2FzZSBvZiBleGNlcHRpb25cblx0XHRcdFx0XHRcdFx0XHQvLyBzaW5jZSBpdCdzIG90aGVyd2lzZSBsb3N0IHdoZW4gZXhlY3V0aW9uIGdvZXMgYXN5bmNcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGpRdWVyeS5EZWZlcnJlZC5nZXRTdGFja0hvb2sgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRwcm9jZXNzLnN0YWNrVHJhY2UgPSBqUXVlcnkuRGVmZXJyZWQuZ2V0U3RhY2tIb29rKCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdHdpbmRvdy5zZXRUaW1lb3V0KCBwcm9jZXNzICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0cmV0dXJuIGpRdWVyeS5EZWZlcnJlZCggZnVuY3Rpb24oIG5ld0RlZmVyICkge1xuXG5cdFx0XHRcdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDAgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uUHJvZ3Jlc3MgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvblByb2dyZXNzIDpcblx0XHRcdFx0XHRcdFx0XHRcdElkZW50aXR5LFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLm5vdGlmeVdpdGhcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblxuXHRcdFx0XHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmFkZCggLi4uIClcblx0XHRcdFx0XHRcdHR1cGxlc1sgMSBdWyAzIF0uYWRkKFxuXHRcdFx0XHRcdFx0XHRyZXNvbHZlKFxuXHRcdFx0XHRcdFx0XHRcdDAsXG5cdFx0XHRcdFx0XHRcdFx0bmV3RGVmZXIsXG5cdFx0XHRcdFx0XHRcdFx0aXNGdW5jdGlvbiggb25GdWxmaWxsZWQgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvbkZ1bGZpbGxlZCA6XG5cdFx0XHRcdFx0XHRcdFx0XHRJZGVudGl0eVxuXHRcdFx0XHRcdFx0XHQpXG5cdFx0XHRcdFx0XHQpO1xuXG5cdFx0XHRcdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5hZGQoIC4uLiApXG5cdFx0XHRcdFx0XHR0dXBsZXNbIDIgXVsgMyBdLmFkZChcblx0XHRcdFx0XHRcdFx0cmVzb2x2ZShcblx0XHRcdFx0XHRcdFx0XHQwLFxuXHRcdFx0XHRcdFx0XHRcdG5ld0RlZmVyLFxuXHRcdFx0XHRcdFx0XHRcdGlzRnVuY3Rpb24oIG9uUmVqZWN0ZWQgKSA/XG5cdFx0XHRcdFx0XHRcdFx0XHRvblJlamVjdGVkIDpcblx0XHRcdFx0XHRcdFx0XHRcdFRocm93ZXJcblx0XHRcdFx0XHRcdFx0KVxuXHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHR9ICkucHJvbWlzZSgpO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIEdldCBhIHByb21pc2UgZm9yIHRoaXMgZGVmZXJyZWRcblx0XHRcdFx0Ly8gSWYgb2JqIGlzIHByb3ZpZGVkLCB0aGUgcHJvbWlzZSBhc3BlY3QgaXMgYWRkZWQgdG8gdGhlIG9iamVjdFxuXHRcdFx0XHRwcm9taXNlOiBmdW5jdGlvbiggb2JqICkge1xuXHRcdFx0XHRcdHJldHVybiBvYmogIT0gbnVsbCA/IGpRdWVyeS5leHRlbmQoIG9iaiwgcHJvbWlzZSApIDogcHJvbWlzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlZmVycmVkID0ge307XG5cblx0XHQvLyBBZGQgbGlzdC1zcGVjaWZpYyBtZXRob2RzXG5cdFx0alF1ZXJ5LmVhY2goIHR1cGxlcywgZnVuY3Rpb24oIGksIHR1cGxlICkge1xuXHRcdFx0dmFyIGxpc3QgPSB0dXBsZVsgMiBdLFxuXHRcdFx0XHRzdGF0ZVN0cmluZyA9IHR1cGxlWyA1IF07XG5cblx0XHRcdC8vIHByb21pc2UucHJvZ3Jlc3MgPSBsaXN0LmFkZFxuXHRcdFx0Ly8gcHJvbWlzZS5kb25lID0gbGlzdC5hZGRcblx0XHRcdC8vIHByb21pc2UuZmFpbCA9IGxpc3QuYWRkXG5cdFx0XHRwcm9taXNlWyB0dXBsZVsgMSBdIF0gPSBsaXN0LmFkZDtcblxuXHRcdFx0Ly8gSGFuZGxlIHN0YXRlXG5cdFx0XHRpZiAoIHN0YXRlU3RyaW5nICkge1xuXHRcdFx0XHRsaXN0LmFkZChcblx0XHRcdFx0XHRmdW5jdGlvbigpIHtcblxuXHRcdFx0XHRcdFx0Ly8gc3RhdGUgPSBcInJlc29sdmVkXCIgKGkuZS4sIGZ1bGZpbGxlZClcblx0XHRcdFx0XHRcdC8vIHN0YXRlID0gXCJyZWplY3RlZFwiXG5cdFx0XHRcdFx0XHRzdGF0ZSA9IHN0YXRlU3RyaW5nO1xuXHRcdFx0XHRcdH0sXG5cblx0XHRcdFx0XHQvLyByZWplY3RlZF9jYWxsYmFja3MuZGlzYWJsZVxuXHRcdFx0XHRcdC8vIGZ1bGZpbGxlZF9jYWxsYmFja3MuZGlzYWJsZVxuXHRcdFx0XHRcdHR1cGxlc1sgMyAtIGkgXVsgMiBdLmRpc2FibGUsXG5cblx0XHRcdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5kaXNhYmxlXG5cdFx0XHRcdFx0Ly8gZnVsZmlsbGVkX2hhbmRsZXJzLmRpc2FibGVcblx0XHRcdFx0XHR0dXBsZXNbIDMgLSBpIF1bIDMgXS5kaXNhYmxlLFxuXG5cdFx0XHRcdFx0Ly8gcHJvZ3Jlc3NfY2FsbGJhY2tzLmxvY2tcblx0XHRcdFx0XHR0dXBsZXNbIDAgXVsgMiBdLmxvY2ssXG5cblx0XHRcdFx0XHQvLyBwcm9ncmVzc19oYW5kbGVycy5sb2NrXG5cdFx0XHRcdFx0dHVwbGVzWyAwIF1bIDMgXS5sb2NrXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIHByb2dyZXNzX2hhbmRsZXJzLmZpcmVcblx0XHRcdC8vIGZ1bGZpbGxlZF9oYW5kbGVycy5maXJlXG5cdFx0XHQvLyByZWplY3RlZF9oYW5kbGVycy5maXJlXG5cdFx0XHRsaXN0LmFkZCggdHVwbGVbIDMgXS5maXJlICk7XG5cblx0XHRcdC8vIGRlZmVycmVkLm5vdGlmeSA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5ub3RpZnlXaXRoKC4uLikgfVxuXHRcdFx0Ly8gZGVmZXJyZWQucmVzb2x2ZSA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5yZXNvbHZlV2l0aCguLi4pIH1cblx0XHRcdC8vIGRlZmVycmVkLnJlamVjdCA9IGZ1bmN0aW9uKCkgeyBkZWZlcnJlZC5yZWplY3RXaXRoKC4uLikgfVxuXHRcdFx0ZGVmZXJyZWRbIHR1cGxlWyAwIF0gXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRkZWZlcnJlZFsgdHVwbGVbIDAgXSArIFwiV2l0aFwiIF0oIHRoaXMgPT09IGRlZmVycmVkID8gdW5kZWZpbmVkIDogdGhpcywgYXJndW1lbnRzICk7XG5cdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0fTtcblxuXHRcdFx0Ly8gZGVmZXJyZWQubm90aWZ5V2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdC8vIGRlZmVycmVkLnJlc29sdmVXaXRoID0gbGlzdC5maXJlV2l0aFxuXHRcdFx0Ly8gZGVmZXJyZWQucmVqZWN0V2l0aCA9IGxpc3QuZmlyZVdpdGhcblx0XHRcdGRlZmVycmVkWyB0dXBsZVsgMCBdICsgXCJXaXRoXCIgXSA9IGxpc3QuZmlyZVdpdGg7XG5cdFx0fSApO1xuXG5cdFx0Ly8gTWFrZSB0aGUgZGVmZXJyZWQgYSBwcm9taXNlXG5cdFx0cHJvbWlzZS5wcm9taXNlKCBkZWZlcnJlZCApO1xuXG5cdFx0Ly8gQ2FsbCBnaXZlbiBmdW5jIGlmIGFueVxuXHRcdGlmICggZnVuYyApIHtcblx0XHRcdGZ1bmMuY2FsbCggZGVmZXJyZWQsIGRlZmVycmVkICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsIGRvbmUhXG5cdFx0cmV0dXJuIGRlZmVycmVkO1xuXHR9LFxuXG5cdC8vIERlZmVycmVkIGhlbHBlclxuXHR3aGVuOiBmdW5jdGlvbiggc2luZ2xlVmFsdWUgKSB7XG5cdFx0dmFyXG5cblx0XHRcdC8vIGNvdW50IG9mIHVuY29tcGxldGVkIHN1Ym9yZGluYXRlc1xuXHRcdFx0cmVtYWluaW5nID0gYXJndW1lbnRzLmxlbmd0aCxcblxuXHRcdFx0Ly8gY291bnQgb2YgdW5wcm9jZXNzZWQgYXJndW1lbnRzXG5cdFx0XHRpID0gcmVtYWluaW5nLFxuXG5cdFx0XHQvLyBzdWJvcmRpbmF0ZSBmdWxmaWxsbWVudCBkYXRhXG5cdFx0XHRyZXNvbHZlQ29udGV4dHMgPSBBcnJheSggaSApLFxuXHRcdFx0cmVzb2x2ZVZhbHVlcyA9IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApLFxuXG5cdFx0XHQvLyB0aGUgbWFzdGVyIERlZmVycmVkXG5cdFx0XHRtYXN0ZXIgPSBqUXVlcnkuRGVmZXJyZWQoKSxcblxuXHRcdFx0Ly8gc3Vib3JkaW5hdGUgY2FsbGJhY2sgZmFjdG9yeVxuXHRcdFx0dXBkYXRlRnVuYyA9IGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0XHRcdHJlc29sdmVDb250ZXh0c1sgaSBdID0gdGhpcztcblx0XHRcdFx0XHRyZXNvbHZlVmFsdWVzWyBpIF0gPSBhcmd1bWVudHMubGVuZ3RoID4gMSA/IHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApIDogdmFsdWU7XG5cdFx0XHRcdFx0aWYgKCAhKCAtLXJlbWFpbmluZyApICkge1xuXHRcdFx0XHRcdFx0bWFzdGVyLnJlc29sdmVXaXRoKCByZXNvbHZlQ29udGV4dHMsIHJlc29sdmVWYWx1ZXMgKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH07XG5cdFx0XHR9O1xuXG5cdFx0Ly8gU2luZ2xlLSBhbmQgZW1wdHkgYXJndW1lbnRzIGFyZSBhZG9wdGVkIGxpa2UgUHJvbWlzZS5yZXNvbHZlXG5cdFx0aWYgKCByZW1haW5pbmcgPD0gMSApIHtcblx0XHRcdGFkb3B0VmFsdWUoIHNpbmdsZVZhbHVlLCBtYXN0ZXIuZG9uZSggdXBkYXRlRnVuYyggaSApICkucmVzb2x2ZSwgbWFzdGVyLnJlamVjdCxcblx0XHRcdFx0IXJlbWFpbmluZyApO1xuXG5cdFx0XHQvLyBVc2UgLnRoZW4oKSB0byB1bndyYXAgc2Vjb25kYXJ5IHRoZW5hYmxlcyAoY2YuIGdoLTMwMDApXG5cdFx0XHRpZiAoIG1hc3Rlci5zdGF0ZSgpID09PSBcInBlbmRpbmdcIiB8fFxuXHRcdFx0XHRpc0Z1bmN0aW9uKCByZXNvbHZlVmFsdWVzWyBpIF0gJiYgcmVzb2x2ZVZhbHVlc1sgaSBdLnRoZW4gKSApIHtcblxuXHRcdFx0XHRyZXR1cm4gbWFzdGVyLnRoZW4oKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBNdWx0aXBsZSBhcmd1bWVudHMgYXJlIGFnZ3JlZ2F0ZWQgbGlrZSBQcm9taXNlLmFsbCBhcnJheSBlbGVtZW50c1xuXHRcdHdoaWxlICggaS0tICkge1xuXHRcdFx0YWRvcHRWYWx1ZSggcmVzb2x2ZVZhbHVlc1sgaSBdLCB1cGRhdGVGdW5jKCBpICksIG1hc3Rlci5yZWplY3QgKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gbWFzdGVyLnByb21pc2UoKTtcblx0fVxufSApO1xuXG5cbi8vIFRoZXNlIHVzdWFsbHkgaW5kaWNhdGUgYSBwcm9ncmFtbWVyIG1pc3Rha2UgZHVyaW5nIGRldmVsb3BtZW50LFxuLy8gd2FybiBhYm91dCB0aGVtIEFTQVAgcmF0aGVyIHRoYW4gc3dhbGxvd2luZyB0aGVtIGJ5IGRlZmF1bHQuXG52YXIgcmVycm9yTmFtZXMgPSAvXihFdmFsfEludGVybmFsfFJhbmdlfFJlZmVyZW5jZXxTeW50YXh8VHlwZXxVUkkpRXJyb3IkLztcblxualF1ZXJ5LkRlZmVycmVkLmV4Y2VwdGlvbkhvb2sgPSBmdW5jdGlvbiggZXJyb3IsIHN0YWNrICkge1xuXG5cdC8vIFN1cHBvcnQ6IElFIDggLSA5IG9ubHlcblx0Ly8gQ29uc29sZSBleGlzdHMgd2hlbiBkZXYgdG9vbHMgYXJlIG9wZW4sIHdoaWNoIGNhbiBoYXBwZW4gYXQgYW55IHRpbWVcblx0aWYgKCB3aW5kb3cuY29uc29sZSAmJiB3aW5kb3cuY29uc29sZS53YXJuICYmIGVycm9yICYmIHJlcnJvck5hbWVzLnRlc3QoIGVycm9yLm5hbWUgKSApIHtcblx0XHR3aW5kb3cuY29uc29sZS53YXJuKCBcImpRdWVyeS5EZWZlcnJlZCBleGNlcHRpb246IFwiICsgZXJyb3IubWVzc2FnZSwgZXJyb3Iuc3RhY2ssIHN0YWNrICk7XG5cdH1cbn07XG5cblxuXG5cbmpRdWVyeS5yZWFkeUV4Y2VwdGlvbiA9IGZ1bmN0aW9uKCBlcnJvciApIHtcblx0d2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdHRocm93IGVycm9yO1xuXHR9ICk7XG59O1xuXG5cblxuXG4vLyBUaGUgZGVmZXJyZWQgdXNlZCBvbiBET00gcmVhZHlcbnZhciByZWFkeUxpc3QgPSBqUXVlcnkuRGVmZXJyZWQoKTtcblxualF1ZXJ5LmZuLnJlYWR5ID0gZnVuY3Rpb24oIGZuICkge1xuXG5cdHJlYWR5TGlzdFxuXHRcdC50aGVuKCBmbiApXG5cblx0XHQvLyBXcmFwIGpRdWVyeS5yZWFkeUV4Y2VwdGlvbiBpbiBhIGZ1bmN0aW9uIHNvIHRoYXQgdGhlIGxvb2t1cFxuXHRcdC8vIGhhcHBlbnMgYXQgdGhlIHRpbWUgb2YgZXJyb3IgaGFuZGxpbmcgaW5zdGVhZCBvZiBjYWxsYmFja1xuXHRcdC8vIHJlZ2lzdHJhdGlvbi5cblx0XHQuY2F0Y2goIGZ1bmN0aW9uKCBlcnJvciApIHtcblx0XHRcdGpRdWVyeS5yZWFkeUV4Y2VwdGlvbiggZXJyb3IgKTtcblx0XHR9ICk7XG5cblx0cmV0dXJuIHRoaXM7XG59O1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gSXMgdGhlIERPTSByZWFkeSB0byBiZSB1c2VkPyBTZXQgdG8gdHJ1ZSBvbmNlIGl0IG9jY3Vycy5cblx0aXNSZWFkeTogZmFsc2UsXG5cblx0Ly8gQSBjb3VudGVyIHRvIHRyYWNrIGhvdyBtYW55IGl0ZW1zIHRvIHdhaXQgZm9yIGJlZm9yZVxuXHQvLyB0aGUgcmVhZHkgZXZlbnQgZmlyZXMuIFNlZSAjNjc4MVxuXHRyZWFkeVdhaXQ6IDEsXG5cblx0Ly8gSGFuZGxlIHdoZW4gdGhlIERPTSBpcyByZWFkeVxuXHRyZWFkeTogZnVuY3Rpb24oIHdhaXQgKSB7XG5cblx0XHQvLyBBYm9ydCBpZiB0aGVyZSBhcmUgcGVuZGluZyBob2xkcyBvciB3ZSdyZSBhbHJlYWR5IHJlYWR5XG5cdFx0aWYgKCB3YWl0ID09PSB0cnVlID8gLS1qUXVlcnkucmVhZHlXYWl0IDogalF1ZXJ5LmlzUmVhZHkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gUmVtZW1iZXIgdGhhdCB0aGUgRE9NIGlzIHJlYWR5XG5cdFx0alF1ZXJ5LmlzUmVhZHkgPSB0cnVlO1xuXG5cdFx0Ly8gSWYgYSBub3JtYWwgRE9NIFJlYWR5IGV2ZW50IGZpcmVkLCBkZWNyZW1lbnQsIGFuZCB3YWl0IGlmIG5lZWQgYmVcblx0XHRpZiAoIHdhaXQgIT09IHRydWUgJiYgLS1qUXVlcnkucmVhZHlXYWl0ID4gMCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBJZiB0aGVyZSBhcmUgZnVuY3Rpb25zIGJvdW5kLCB0byBleGVjdXRlXG5cdFx0cmVhZHlMaXN0LnJlc29sdmVXaXRoKCBkb2N1bWVudCwgWyBqUXVlcnkgXSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5yZWFkeS50aGVuID0gcmVhZHlMaXN0LnRoZW47XG5cbi8vIFRoZSByZWFkeSBldmVudCBoYW5kbGVyIGFuZCBzZWxmIGNsZWFudXAgbWV0aG9kXG5mdW5jdGlvbiBjb21wbGV0ZWQoKSB7XG5cdGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblx0d2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoIFwibG9hZFwiLCBjb21wbGV0ZWQgKTtcblx0alF1ZXJ5LnJlYWR5KCk7XG59XG5cbi8vIENhdGNoIGNhc2VzIHdoZXJlICQoZG9jdW1lbnQpLnJlYWR5KCkgaXMgY2FsbGVkXG4vLyBhZnRlciB0aGUgYnJvd3NlciBldmVudCBoYXMgYWxyZWFkeSBvY2N1cnJlZC5cbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDEwIG9ubHlcbi8vIE9sZGVyIElFIHNvbWV0aW1lcyBzaWduYWxzIFwiaW50ZXJhY3RpdmVcIiB0b28gc29vblxuaWYgKCBkb2N1bWVudC5yZWFkeVN0YXRlID09PSBcImNvbXBsZXRlXCIgfHxcblx0KCBkb2N1bWVudC5yZWFkeVN0YXRlICE9PSBcImxvYWRpbmdcIiAmJiAhZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LmRvU2Nyb2xsICkgKSB7XG5cblx0Ly8gSGFuZGxlIGl0IGFzeW5jaHJvbm91c2x5IHRvIGFsbG93IHNjcmlwdHMgdGhlIG9wcG9ydHVuaXR5IHRvIGRlbGF5IHJlYWR5XG5cdHdpbmRvdy5zZXRUaW1lb3V0KCBqUXVlcnkucmVhZHkgKTtcblxufSBlbHNlIHtcblxuXHQvLyBVc2UgdGhlIGhhbmR5IGV2ZW50IGNhbGxiYWNrXG5cdGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoIFwiRE9NQ29udGVudExvYWRlZFwiLCBjb21wbGV0ZWQgKTtcblxuXHQvLyBBIGZhbGxiYWNrIHRvIHdpbmRvdy5vbmxvYWQsIHRoYXQgd2lsbCBhbHdheXMgd29ya1xuXHR3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lciggXCJsb2FkXCIsIGNvbXBsZXRlZCApO1xufVxuXG5cblxuXG4vLyBNdWx0aWZ1bmN0aW9uYWwgbWV0aG9kIHRvIGdldCBhbmQgc2V0IHZhbHVlcyBvZiBhIGNvbGxlY3Rpb25cbi8vIFRoZSB2YWx1ZS9zIGNhbiBvcHRpb25hbGx5IGJlIGV4ZWN1dGVkIGlmIGl0J3MgYSBmdW5jdGlvblxudmFyIGFjY2VzcyA9IGZ1bmN0aW9uKCBlbGVtcywgZm4sIGtleSwgdmFsdWUsIGNoYWluYWJsZSwgZW1wdHlHZXQsIHJhdyApIHtcblx0dmFyIGkgPSAwLFxuXHRcdGxlbiA9IGVsZW1zLmxlbmd0aCxcblx0XHRidWxrID0ga2V5ID09IG51bGw7XG5cblx0Ly8gU2V0cyBtYW55IHZhbHVlc1xuXHRpZiAoIHRvVHlwZSgga2V5ICkgPT09IFwib2JqZWN0XCIgKSB7XG5cdFx0Y2hhaW5hYmxlID0gdHJ1ZTtcblx0XHRmb3IgKCBpIGluIGtleSApIHtcblx0XHRcdGFjY2VzcyggZWxlbXMsIGZuLCBpLCBrZXlbIGkgXSwgdHJ1ZSwgZW1wdHlHZXQsIHJhdyApO1xuXHRcdH1cblxuXHQvLyBTZXRzIG9uZSB2YWx1ZVxuXHR9IGVsc2UgaWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdGNoYWluYWJsZSA9IHRydWU7XG5cblx0XHRpZiAoICFpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmF3ID0gdHJ1ZTtcblx0XHR9XG5cblx0XHRpZiAoIGJ1bGsgKSB7XG5cblx0XHRcdC8vIEJ1bGsgb3BlcmF0aW9ucyBydW4gYWdhaW5zdCB0aGUgZW50aXJlIHNldFxuXHRcdFx0aWYgKCByYXcgKSB7XG5cdFx0XHRcdGZuLmNhbGwoIGVsZW1zLCB2YWx1ZSApO1xuXHRcdFx0XHRmbiA9IG51bGw7XG5cblx0XHRcdC8vIC4uLmV4Y2VwdCB3aGVuIGV4ZWN1dGluZyBmdW5jdGlvbiB2YWx1ZXNcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGJ1bGsgPSBmbjtcblx0XHRcdFx0Zm4gPSBmdW5jdGlvbiggZWxlbSwga2V5LCB2YWx1ZSApIHtcblx0XHRcdFx0XHRyZXR1cm4gYnVsay5jYWxsKCBqUXVlcnkoIGVsZW0gKSwgdmFsdWUgKTtcblx0XHRcdFx0fTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRpZiAoIGZuICkge1xuXHRcdFx0Zm9yICggOyBpIDwgbGVuOyBpKysgKSB7XG5cdFx0XHRcdGZuKFxuXHRcdFx0XHRcdGVsZW1zWyBpIF0sIGtleSwgcmF3ID9cblx0XHRcdFx0XHR2YWx1ZSA6XG5cdFx0XHRcdFx0dmFsdWUuY2FsbCggZWxlbXNbIGkgXSwgaSwgZm4oIGVsZW1zWyBpIF0sIGtleSApIClcblx0XHRcdFx0KTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRpZiAoIGNoYWluYWJsZSApIHtcblx0XHRyZXR1cm4gZWxlbXM7XG5cdH1cblxuXHQvLyBHZXRzXG5cdGlmICggYnVsayApIHtcblx0XHRyZXR1cm4gZm4uY2FsbCggZWxlbXMgKTtcblx0fVxuXG5cdHJldHVybiBsZW4gPyBmbiggZWxlbXNbIDAgXSwga2V5ICkgOiBlbXB0eUdldDtcbn07XG5cblxuLy8gTWF0Y2hlcyBkYXNoZWQgc3RyaW5nIGZvciBjYW1lbGl6aW5nXG52YXIgcm1zUHJlZml4ID0gL14tbXMtLyxcblx0cmRhc2hBbHBoYSA9IC8tKFthLXpdKS9nO1xuXG4vLyBVc2VkIGJ5IGNhbWVsQ2FzZSBhcyBjYWxsYmFjayB0byByZXBsYWNlKClcbmZ1bmN0aW9uIGZjYW1lbENhc2UoIGFsbCwgbGV0dGVyICkge1xuXHRyZXR1cm4gbGV0dGVyLnRvVXBwZXJDYXNlKCk7XG59XG5cbi8vIENvbnZlcnQgZGFzaGVkIHRvIGNhbWVsQ2FzZTsgdXNlZCBieSB0aGUgY3NzIGFuZCBkYXRhIG1vZHVsZXNcbi8vIFN1cHBvcnQ6IElFIDw9OSAtIDExLCBFZGdlIDEyIC0gMTVcbi8vIE1pY3Jvc29mdCBmb3Jnb3QgdG8gaHVtcCB0aGVpciB2ZW5kb3IgcHJlZml4ICgjOTU3MilcbmZ1bmN0aW9uIGNhbWVsQ2FzZSggc3RyaW5nICkge1xuXHRyZXR1cm4gc3RyaW5nLnJlcGxhY2UoIHJtc1ByZWZpeCwgXCJtcy1cIiApLnJlcGxhY2UoIHJkYXNoQWxwaGEsIGZjYW1lbENhc2UgKTtcbn1cbnZhciBhY2NlcHREYXRhID0gZnVuY3Rpb24oIG93bmVyICkge1xuXG5cdC8vIEFjY2VwdHMgb25seTpcblx0Ly8gIC0gTm9kZVxuXHQvLyAgICAtIE5vZGUuRUxFTUVOVF9OT0RFXG5cdC8vICAgIC0gTm9kZS5ET0NVTUVOVF9OT0RFXG5cdC8vICAtIE9iamVjdFxuXHQvLyAgICAtIEFueVxuXHRyZXR1cm4gb3duZXIubm9kZVR5cGUgPT09IDEgfHwgb3duZXIubm9kZVR5cGUgPT09IDkgfHwgISggK293bmVyLm5vZGVUeXBlICk7XG59O1xuXG5cblxuXG5mdW5jdGlvbiBEYXRhKCkge1xuXHR0aGlzLmV4cGFuZG8gPSBqUXVlcnkuZXhwYW5kbyArIERhdGEudWlkKys7XG59XG5cbkRhdGEudWlkID0gMTtcblxuRGF0YS5wcm90b3R5cGUgPSB7XG5cblx0Y2FjaGU6IGZ1bmN0aW9uKCBvd25lciApIHtcblxuXHRcdC8vIENoZWNrIGlmIHRoZSBvd25lciBvYmplY3QgYWxyZWFkeSBoYXMgYSBjYWNoZVxuXHRcdHZhciB2YWx1ZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblxuXHRcdC8vIElmIG5vdCwgY3JlYXRlIG9uZVxuXHRcdGlmICggIXZhbHVlICkge1xuXHRcdFx0dmFsdWUgPSB7fTtcblxuXHRcdFx0Ly8gV2UgY2FuIGFjY2VwdCBkYXRhIGZvciBub24tZWxlbWVudCBub2RlcyBpbiBtb2Rlcm4gYnJvd3NlcnMsXG5cdFx0XHQvLyBidXQgd2Ugc2hvdWxkIG5vdCwgc2VlICM4MzM1LlxuXHRcdFx0Ly8gQWx3YXlzIHJldHVybiBhbiBlbXB0eSBvYmplY3QuXG5cdFx0XHRpZiAoIGFjY2VwdERhdGEoIG93bmVyICkgKSB7XG5cblx0XHRcdFx0Ly8gSWYgaXQgaXMgYSBub2RlIHVubGlrZWx5IHRvIGJlIHN0cmluZ2lmeS1lZCBvciBsb29wZWQgb3ZlclxuXHRcdFx0XHQvLyB1c2UgcGxhaW4gYXNzaWdubWVudFxuXHRcdFx0XHRpZiAoIG93bmVyLm5vZGVUeXBlICkge1xuXHRcdFx0XHRcdG93bmVyWyB0aGlzLmV4cGFuZG8gXSA9IHZhbHVlO1xuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBzZWN1cmUgaXQgaW4gYSBub24tZW51bWVyYWJsZSBwcm9wZXJ0eVxuXHRcdFx0XHQvLyBjb25maWd1cmFibGUgbXVzdCBiZSB0cnVlIHRvIGFsbG93IHRoZSBwcm9wZXJ0eSB0byBiZVxuXHRcdFx0XHQvLyBkZWxldGVkIHdoZW4gZGF0YSBpcyByZW1vdmVkXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCBvd25lciwgdGhpcy5leHBhbmRvLCB7XG5cdFx0XHRcdFx0XHR2YWx1ZTogdmFsdWUsXG5cdFx0XHRcdFx0XHRjb25maWd1cmFibGU6IHRydWVcblx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gdmFsdWU7XG5cdH0sXG5cdHNldDogZnVuY3Rpb24oIG93bmVyLCBkYXRhLCB2YWx1ZSApIHtcblx0XHR2YXIgcHJvcCxcblx0XHRcdGNhY2hlID0gdGhpcy5jYWNoZSggb3duZXIgKTtcblxuXHRcdC8vIEhhbmRsZTogWyBvd25lciwga2V5LCB2YWx1ZSBdIGFyZ3Ncblx0XHQvLyBBbHdheXMgdXNlIGNhbWVsQ2FzZSBrZXkgKGdoLTIyNTcpXG5cdFx0aWYgKCB0eXBlb2YgZGF0YSA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGNhY2hlWyBjYW1lbENhc2UoIGRhdGEgKSBdID0gdmFsdWU7XG5cblx0XHQvLyBIYW5kbGU6IFsgb3duZXIsIHsgcHJvcGVydGllcyB9IF0gYXJnc1xuXHRcdH0gZWxzZSB7XG5cblx0XHRcdC8vIENvcHkgdGhlIHByb3BlcnRpZXMgb25lLWJ5LW9uZSB0byB0aGUgY2FjaGUgb2JqZWN0XG5cdFx0XHRmb3IgKCBwcm9wIGluIGRhdGEgKSB7XG5cdFx0XHRcdGNhY2hlWyBjYW1lbENhc2UoIHByb3AgKSBdID0gZGF0YVsgcHJvcCBdO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRyZXR1cm4gY2FjaGU7XG5cdH0sXG5cdGdldDogZnVuY3Rpb24oIG93bmVyLCBrZXkgKSB7XG5cdFx0cmV0dXJuIGtleSA9PT0gdW5kZWZpbmVkID9cblx0XHRcdHRoaXMuY2FjaGUoIG93bmVyICkgOlxuXG5cdFx0XHQvLyBBbHdheXMgdXNlIGNhbWVsQ2FzZSBrZXkgKGdoLTIyNTcpXG5cdFx0XHRvd25lclsgdGhpcy5leHBhbmRvIF0gJiYgb3duZXJbIHRoaXMuZXhwYW5kbyBdWyBjYW1lbENhc2UoIGtleSApIF07XG5cdH0sXG5cdGFjY2VzczogZnVuY3Rpb24oIG93bmVyLCBrZXksIHZhbHVlICkge1xuXG5cdFx0Ly8gSW4gY2FzZXMgd2hlcmUgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBObyBrZXkgd2FzIHNwZWNpZmllZFxuXHRcdC8vICAgMi4gQSBzdHJpbmcga2V5IHdhcyBzcGVjaWZpZWQsIGJ1dCBubyB2YWx1ZSBwcm92aWRlZFxuXHRcdC8vXG5cdFx0Ly8gVGFrZSB0aGUgXCJyZWFkXCIgcGF0aCBhbmQgYWxsb3cgdGhlIGdldCBtZXRob2QgdG8gZGV0ZXJtaW5lXG5cdFx0Ly8gd2hpY2ggdmFsdWUgdG8gcmV0dXJuLCByZXNwZWN0aXZlbHkgZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBUaGUgZW50aXJlIGNhY2hlIG9iamVjdFxuXHRcdC8vICAgMi4gVGhlIGRhdGEgc3RvcmVkIGF0IHRoZSBrZXlcblx0XHQvL1xuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgfHxcblx0XHRcdFx0KCAoIGtleSAmJiB0eXBlb2Yga2V5ID09PSBcInN0cmluZ1wiICkgJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApICkge1xuXG5cdFx0XHRyZXR1cm4gdGhpcy5nZXQoIG93bmVyLCBrZXkgKTtcblx0XHR9XG5cblx0XHQvLyBXaGVuIHRoZSBrZXkgaXMgbm90IGEgc3RyaW5nLCBvciBib3RoIGEga2V5IGFuZCB2YWx1ZVxuXHRcdC8vIGFyZSBzcGVjaWZpZWQsIHNldCBvciBleHRlbmQgKGV4aXN0aW5nIG9iamVjdHMpIHdpdGggZWl0aGVyOlxuXHRcdC8vXG5cdFx0Ly8gICAxLiBBbiBvYmplY3Qgb2YgcHJvcGVydGllc1xuXHRcdC8vICAgMi4gQSBrZXkgYW5kIHZhbHVlXG5cdFx0Ly9cblx0XHR0aGlzLnNldCggb3duZXIsIGtleSwgdmFsdWUgKTtcblxuXHRcdC8vIFNpbmNlIHRoZSBcInNldFwiIHBhdGggY2FuIGhhdmUgdHdvIHBvc3NpYmxlIGVudHJ5IHBvaW50c1xuXHRcdC8vIHJldHVybiB0aGUgZXhwZWN0ZWQgZGF0YSBiYXNlZCBvbiB3aGljaCBwYXRoIHdhcyB0YWtlblsqXVxuXHRcdHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID8gdmFsdWUgOiBrZXk7XG5cdH0sXG5cdHJlbW92ZTogZnVuY3Rpb24oIG93bmVyLCBrZXkgKSB7XG5cdFx0dmFyIGksXG5cdFx0XHRjYWNoZSA9IG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblxuXHRcdGlmICggY2FjaGUgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIGtleSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHQvLyBTdXBwb3J0IGFycmF5IG9yIHNwYWNlIHNlcGFyYXRlZCBzdHJpbmcgb2Yga2V5c1xuXHRcdFx0aWYgKCBBcnJheS5pc0FycmF5KCBrZXkgKSApIHtcblxuXHRcdFx0XHQvLyBJZiBrZXkgaXMgYW4gYXJyYXkgb2Yga2V5cy4uLlxuXHRcdFx0XHQvLyBXZSBhbHdheXMgc2V0IGNhbWVsQ2FzZSBrZXlzLCBzbyByZW1vdmUgdGhhdC5cblx0XHRcdFx0a2V5ID0ga2V5Lm1hcCggY2FtZWxDYXNlICk7XG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRrZXkgPSBjYW1lbENhc2UoIGtleSApO1xuXG5cdFx0XHRcdC8vIElmIGEga2V5IHdpdGggdGhlIHNwYWNlcyBleGlzdHMsIHVzZSBpdC5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlLCBjcmVhdGUgYW4gYXJyYXkgYnkgbWF0Y2hpbmcgbm9uLXdoaXRlc3BhY2Vcblx0XHRcdFx0a2V5ID0ga2V5IGluIGNhY2hlID9cblx0XHRcdFx0XHRbIGtleSBdIDpcblx0XHRcdFx0XHQoIGtleS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdICk7XG5cdFx0XHR9XG5cblx0XHRcdGkgPSBrZXkubGVuZ3RoO1xuXG5cdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0ZGVsZXRlIGNhY2hlWyBrZXlbIGkgXSBdO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFJlbW92ZSB0aGUgZXhwYW5kbyBpZiB0aGVyZSdzIG5vIG1vcmUgZGF0YVxuXHRcdGlmICgga2V5ID09PSB1bmRlZmluZWQgfHwgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIGNhY2hlICkgKSB7XG5cblx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTM1IC0gNDVcblx0XHRcdC8vIFdlYmtpdCAmIEJsaW5rIHBlcmZvcm1hbmNlIHN1ZmZlcnMgd2hlbiBkZWxldGluZyBwcm9wZXJ0aWVzXG5cdFx0XHQvLyBmcm9tIERPTSBub2Rlcywgc28gc2V0IHRvIHVuZGVmaW5lZCBpbnN0ZWFkXG5cdFx0XHQvLyBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD0zNzg2MDcgKGJ1ZyByZXN0cmljdGVkKVxuXHRcdFx0aWYgKCBvd25lci5ub2RlVHlwZSApIHtcblx0XHRcdFx0b3duZXJbIHRoaXMuZXhwYW5kbyBdID0gdW5kZWZpbmVkO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGVsZXRlIG93bmVyWyB0aGlzLmV4cGFuZG8gXTtcblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cdGhhc0RhdGE6IGZ1bmN0aW9uKCBvd25lciApIHtcblx0XHR2YXIgY2FjaGUgPSBvd25lclsgdGhpcy5leHBhbmRvIF07XG5cdFx0cmV0dXJuIGNhY2hlICE9PSB1bmRlZmluZWQgJiYgIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBjYWNoZSApO1xuXHR9XG59O1xudmFyIGRhdGFQcml2ID0gbmV3IERhdGEoKTtcblxudmFyIGRhdGFVc2VyID0gbmV3IERhdGEoKTtcblxuXG5cbi8vXHRJbXBsZW1lbnRhdGlvbiBTdW1tYXJ5XG4vL1xuLy9cdDEuIEVuZm9yY2UgQVBJIHN1cmZhY2UgYW5kIHNlbWFudGljIGNvbXBhdGliaWxpdHkgd2l0aCAxLjkueCBicmFuY2hcbi8vXHQyLiBJbXByb3ZlIHRoZSBtb2R1bGUncyBtYWludGFpbmFiaWxpdHkgYnkgcmVkdWNpbmcgdGhlIHN0b3JhZ2Vcbi8vXHRcdHBhdGhzIHRvIGEgc2luZ2xlIG1lY2hhbmlzbS5cbi8vXHQzLiBVc2UgdGhlIHNhbWUgc2luZ2xlIG1lY2hhbmlzbSB0byBzdXBwb3J0IFwicHJpdmF0ZVwiIGFuZCBcInVzZXJcIiBkYXRhLlxuLy9cdDQuIF9OZXZlcl8gZXhwb3NlIFwicHJpdmF0ZVwiIGRhdGEgdG8gdXNlciBjb2RlIChUT0RPOiBEcm9wIF9kYXRhLCBfcmVtb3ZlRGF0YSlcbi8vXHQ1LiBBdm9pZCBleHBvc2luZyBpbXBsZW1lbnRhdGlvbiBkZXRhaWxzIG9uIHVzZXIgb2JqZWN0cyAoZWcuIGV4cGFuZG8gcHJvcGVydGllcylcbi8vXHQ2LiBQcm92aWRlIGEgY2xlYXIgcGF0aCBmb3IgaW1wbGVtZW50YXRpb24gdXBncmFkZSB0byBXZWFrTWFwIGluIDIwMTRcblxudmFyIHJicmFjZSA9IC9eKD86XFx7W1xcd1xcV10qXFx9fFxcW1tcXHdcXFddKlxcXSkkLyxcblx0cm11bHRpRGFzaCA9IC9bQS1aXS9nO1xuXG5mdW5jdGlvbiBnZXREYXRhKCBkYXRhICkge1xuXHRpZiAoIGRhdGEgPT09IFwidHJ1ZVwiICkge1xuXHRcdHJldHVybiB0cnVlO1xuXHR9XG5cblx0aWYgKCBkYXRhID09PSBcImZhbHNlXCIgKSB7XG5cdFx0cmV0dXJuIGZhbHNlO1xuXHR9XG5cblx0aWYgKCBkYXRhID09PSBcIm51bGxcIiApIHtcblx0XHRyZXR1cm4gbnVsbDtcblx0fVxuXG5cdC8vIE9ubHkgY29udmVydCB0byBhIG51bWJlciBpZiBpdCBkb2Vzbid0IGNoYW5nZSB0aGUgc3RyaW5nXG5cdGlmICggZGF0YSA9PT0gK2RhdGEgKyBcIlwiICkge1xuXHRcdHJldHVybiArZGF0YTtcblx0fVxuXG5cdGlmICggcmJyYWNlLnRlc3QoIGRhdGEgKSApIHtcblx0XHRyZXR1cm4gSlNPTi5wYXJzZSggZGF0YSApO1xuXHR9XG5cblx0cmV0dXJuIGRhdGE7XG59XG5cbmZ1bmN0aW9uIGRhdGFBdHRyKCBlbGVtLCBrZXksIGRhdGEgKSB7XG5cdHZhciBuYW1lO1xuXG5cdC8vIElmIG5vdGhpbmcgd2FzIGZvdW5kIGludGVybmFsbHksIHRyeSB0byBmZXRjaCBhbnlcblx0Ly8gZGF0YSBmcm9tIHRoZSBIVE1MNSBkYXRhLSogYXR0cmlidXRlXG5cdGlmICggZGF0YSA9PT0gdW5kZWZpbmVkICYmIGVsZW0ubm9kZVR5cGUgPT09IDEgKSB7XG5cdFx0bmFtZSA9IFwiZGF0YS1cIiArIGtleS5yZXBsYWNlKCBybXVsdGlEYXNoLCBcIi0kJlwiICkudG9Mb3dlckNhc2UoKTtcblx0XHRkYXRhID0gZWxlbS5nZXRBdHRyaWJ1dGUoIG5hbWUgKTtcblxuXHRcdGlmICggdHlwZW9mIGRhdGEgPT09IFwic3RyaW5nXCIgKSB7XG5cdFx0XHR0cnkge1xuXHRcdFx0XHRkYXRhID0gZ2V0RGF0YSggZGF0YSApO1xuXHRcdFx0fSBjYXRjaCAoIGUgKSB7fVxuXG5cdFx0XHQvLyBNYWtlIHN1cmUgd2Ugc2V0IHRoZSBkYXRhIHNvIGl0IGlzbid0IGNoYW5nZWQgbGF0ZXJcblx0XHRcdGRhdGFVc2VyLnNldCggZWxlbSwga2V5LCBkYXRhICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHR9XG5cdHJldHVybiBkYXRhO1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGhhc0RhdGE6IGZ1bmN0aW9uKCBlbGVtICkge1xuXHRcdHJldHVybiBkYXRhVXNlci5oYXNEYXRhKCBlbGVtICkgfHwgZGF0YVByaXYuaGFzRGF0YSggZWxlbSApO1xuXHR9LFxuXG5cdGRhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkge1xuXHRcdHJldHVybiBkYXRhVXNlci5hY2Nlc3MoIGVsZW0sIG5hbWUsIGRhdGEgKTtcblx0fSxcblxuXHRyZW1vdmVEYXRhOiBmdW5jdGlvbiggZWxlbSwgbmFtZSApIHtcblx0XHRkYXRhVXNlci5yZW1vdmUoIGVsZW0sIG5hbWUgKTtcblx0fSxcblxuXHQvLyBUT0RPOiBOb3cgdGhhdCBhbGwgY2FsbHMgdG8gX2RhdGEgYW5kIF9yZW1vdmVEYXRhIGhhdmUgYmVlbiByZXBsYWNlZFxuXHQvLyB3aXRoIGRpcmVjdCBjYWxscyB0byBkYXRhUHJpdiBtZXRob2RzLCB0aGVzZSBjYW4gYmUgZGVwcmVjYXRlZC5cblx0X2RhdGE6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCBkYXRhICkge1xuXHRcdHJldHVybiBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIG5hbWUsIGRhdGEgKTtcblx0fSxcblxuXHRfcmVtb3ZlRGF0YTogZnVuY3Rpb24oIGVsZW0sIG5hbWUgKSB7XG5cdFx0ZGF0YVByaXYucmVtb3ZlKCBlbGVtLCBuYW1lICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRkYXRhOiBmdW5jdGlvbigga2V5LCB2YWx1ZSApIHtcblx0XHR2YXIgaSwgbmFtZSwgZGF0YSxcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF0sXG5cdFx0XHRhdHRycyA9IGVsZW0gJiYgZWxlbS5hdHRyaWJ1dGVzO1xuXG5cdFx0Ly8gR2V0cyBhbGwgdmFsdWVzXG5cdFx0aWYgKCBrZXkgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggdGhpcy5sZW5ndGggKSB7XG5cdFx0XHRcdGRhdGEgPSBkYXRhVXNlci5nZXQoIGVsZW0gKTtcblxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgIWRhdGFQcml2LmdldCggZWxlbSwgXCJoYXNEYXRhQXR0cnNcIiApICkge1xuXHRcdFx0XHRcdGkgPSBhdHRycy5sZW5ndGg7XG5cdFx0XHRcdFx0d2hpbGUgKCBpLS0gKSB7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDExIG9ubHlcblx0XHRcdFx0XHRcdC8vIFRoZSBhdHRycyBlbGVtZW50cyBjYW4gYmUgbnVsbCAoIzE0ODk0KVxuXHRcdFx0XHRcdFx0aWYgKCBhdHRyc1sgaSBdICkge1xuXHRcdFx0XHRcdFx0XHRuYW1lID0gYXR0cnNbIGkgXS5uYW1lO1xuXHRcdFx0XHRcdFx0XHRpZiAoIG5hbWUuaW5kZXhPZiggXCJkYXRhLVwiICkgPT09IDAgKSB7XG5cdFx0XHRcdFx0XHRcdFx0bmFtZSA9IGNhbWVsQ2FzZSggbmFtZS5zbGljZSggNSApICk7XG5cdFx0XHRcdFx0XHRcdFx0ZGF0YUF0dHIoIGVsZW0sIG5hbWUsIGRhdGFbIG5hbWUgXSApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRhdGFQcml2LnNldCggZWxlbSwgXCJoYXNEYXRhQXR0cnNcIiwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBkYXRhO1xuXHRcdH1cblxuXHRcdC8vIFNldHMgbXVsdGlwbGUgdmFsdWVzXG5cdFx0aWYgKCB0eXBlb2Yga2V5ID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGRhdGFVc2VyLnNldCggdGhpcywga2V5ICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGFjY2VzcyggdGhpcywgZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGRhdGE7XG5cblx0XHRcdC8vIFRoZSBjYWxsaW5nIGpRdWVyeSBvYmplY3QgKGVsZW1lbnQgbWF0Y2hlcykgaXMgbm90IGVtcHR5XG5cdFx0XHQvLyAoYW5kIHRoZXJlZm9yZSBoYXMgYW4gZWxlbWVudCBhcHBlYXJzIGF0IHRoaXNbIDAgXSkgYW5kIHRoZVxuXHRcdFx0Ly8gYHZhbHVlYCBwYXJhbWV0ZXIgd2FzIG5vdCB1bmRlZmluZWQuIEFuIGVtcHR5IGpRdWVyeSBvYmplY3Rcblx0XHRcdC8vIHdpbGwgcmVzdWx0IGluIGB1bmRlZmluZWRgIGZvciBlbGVtID0gdGhpc1sgMCBdIHdoaWNoIHdpbGxcblx0XHRcdC8vIHRocm93IGFuIGV4Y2VwdGlvbiBpZiBhbiBhdHRlbXB0IHRvIHJlYWQgYSBkYXRhIGNhY2hlIGlzIG1hZGUuXG5cdFx0XHRpZiAoIGVsZW0gJiYgdmFsdWUgPT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHQvLyBBdHRlbXB0IHRvIGdldCBkYXRhIGZyb20gdGhlIGNhY2hlXG5cdFx0XHRcdC8vIFRoZSBrZXkgd2lsbCBhbHdheXMgYmUgY2FtZWxDYXNlZCBpbiBEYXRhXG5cdFx0XHRcdGRhdGEgPSBkYXRhVXNlci5nZXQoIGVsZW0sIGtleSApO1xuXHRcdFx0XHRpZiAoIGRhdGEgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gZGF0YTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEF0dGVtcHQgdG8gXCJkaXNjb3ZlclwiIHRoZSBkYXRhIGluXG5cdFx0XHRcdC8vIEhUTUw1IGN1c3RvbSBkYXRhLSogYXR0cnNcblx0XHRcdFx0ZGF0YSA9IGRhdGFBdHRyKCBlbGVtLCBrZXkgKTtcblx0XHRcdFx0aWYgKCBkYXRhICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIGRhdGE7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBXZSB0cmllZCByZWFsbHkgaGFyZCwgYnV0IHRoZSBkYXRhIGRvZXNuJ3QgZXhpc3QuXG5cdFx0XHRcdHJldHVybjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gU2V0IHRoZSBkYXRhLi4uXG5cdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIFdlIGFsd2F5cyBzdG9yZSB0aGUgY2FtZWxDYXNlZCBrZXlcblx0XHRcdFx0ZGF0YVVzZXIuc2V0KCB0aGlzLCBrZXksIHZhbHVlICk7XG5cdFx0XHR9ICk7XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxLCBudWxsLCB0cnVlICk7XG5cdH0sXG5cblx0cmVtb3ZlRGF0YTogZnVuY3Rpb24oIGtleSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGRhdGFVc2VyLnJlbW92ZSggdGhpcywga2V5ICk7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRxdWV1ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGUsIGRhdGEgKSB7XG5cdFx0dmFyIHF1ZXVlO1xuXG5cdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0dHlwZSA9ICggdHlwZSB8fCBcImZ4XCIgKSArIFwicXVldWVcIjtcblx0XHRcdHF1ZXVlID0gZGF0YVByaXYuZ2V0KCBlbGVtLCB0eXBlICk7XG5cblx0XHRcdC8vIFNwZWVkIHVwIGRlcXVldWUgYnkgZ2V0dGluZyBvdXQgcXVpY2tseSBpZiB0aGlzIGlzIGp1c3QgYSBsb29rdXBcblx0XHRcdGlmICggZGF0YSApIHtcblx0XHRcdFx0aWYgKCAhcXVldWUgfHwgQXJyYXkuaXNBcnJheSggZGF0YSApICkge1xuXHRcdFx0XHRcdHF1ZXVlID0gZGF0YVByaXYuYWNjZXNzKCBlbGVtLCB0eXBlLCBqUXVlcnkubWFrZUFycmF5KCBkYXRhICkgKTtcblx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRxdWV1ZS5wdXNoKCBkYXRhICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdHJldHVybiBxdWV1ZSB8fCBbXTtcblx0XHR9XG5cdH0sXG5cblx0ZGVxdWV1ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGUgKSB7XG5cdFx0dHlwZSA9IHR5cGUgfHwgXCJmeFwiO1xuXG5cdFx0dmFyIHF1ZXVlID0galF1ZXJ5LnF1ZXVlKCBlbGVtLCB0eXBlICksXG5cdFx0XHRzdGFydExlbmd0aCA9IHF1ZXVlLmxlbmd0aCxcblx0XHRcdGZuID0gcXVldWUuc2hpZnQoKSxcblx0XHRcdGhvb2tzID0galF1ZXJ5Ll9xdWV1ZUhvb2tzKCBlbGVtLCB0eXBlICksXG5cdFx0XHRuZXh0ID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGpRdWVyeS5kZXF1ZXVlKCBlbGVtLCB0eXBlICk7XG5cdFx0XHR9O1xuXG5cdFx0Ly8gSWYgdGhlIGZ4IHF1ZXVlIGlzIGRlcXVldWVkLCBhbHdheXMgcmVtb3ZlIHRoZSBwcm9ncmVzcyBzZW50aW5lbFxuXHRcdGlmICggZm4gPT09IFwiaW5wcm9ncmVzc1wiICkge1xuXHRcdFx0Zm4gPSBxdWV1ZS5zaGlmdCgpO1xuXHRcdFx0c3RhcnRMZW5ndGgtLTtcblx0XHR9XG5cblx0XHRpZiAoIGZuICkge1xuXG5cdFx0XHQvLyBBZGQgYSBwcm9ncmVzcyBzZW50aW5lbCB0byBwcmV2ZW50IHRoZSBmeCBxdWV1ZSBmcm9tIGJlaW5nXG5cdFx0XHQvLyBhdXRvbWF0aWNhbGx5IGRlcXVldWVkXG5cdFx0XHRpZiAoIHR5cGUgPT09IFwiZnhcIiApIHtcblx0XHRcdFx0cXVldWUudW5zaGlmdCggXCJpbnByb2dyZXNzXCIgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ2xlYXIgdXAgdGhlIGxhc3QgcXVldWUgc3RvcCBmdW5jdGlvblxuXHRcdFx0ZGVsZXRlIGhvb2tzLnN0b3A7XG5cdFx0XHRmbi5jYWxsKCBlbGVtLCBuZXh0LCBob29rcyApO1xuXHRcdH1cblxuXHRcdGlmICggIXN0YXJ0TGVuZ3RoICYmIGhvb2tzICkge1xuXHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xuXHRcdH1cblx0fSxcblxuXHQvLyBOb3QgcHVibGljIC0gZ2VuZXJhdGUgYSBxdWV1ZUhvb2tzIG9iamVjdCwgb3IgcmV0dXJuIHRoZSBjdXJyZW50IG9uZVxuXHRfcXVldWVIb29rczogZnVuY3Rpb24oIGVsZW0sIHR5cGUgKSB7XG5cdFx0dmFyIGtleSA9IHR5cGUgKyBcInF1ZXVlSG9va3NcIjtcblx0XHRyZXR1cm4gZGF0YVByaXYuZ2V0KCBlbGVtLCBrZXkgKSB8fCBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIGtleSwge1xuXHRcdFx0ZW1wdHk6IGpRdWVyeS5DYWxsYmFja3MoIFwib25jZSBtZW1vcnlcIiApLmFkZCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgWyB0eXBlICsgXCJxdWV1ZVwiLCBrZXkgXSApO1xuXHRcdFx0fSApXG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0cXVldWU6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHZhciBzZXR0ZXIgPSAyO1xuXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdGRhdGEgPSB0eXBlO1xuXHRcdFx0dHlwZSA9IFwiZnhcIjtcblx0XHRcdHNldHRlci0tO1xuXHRcdH1cblxuXHRcdGlmICggYXJndW1lbnRzLmxlbmd0aCA8IHNldHRlciApIHtcblx0XHRcdHJldHVybiBqUXVlcnkucXVldWUoIHRoaXNbIDAgXSwgdHlwZSApO1xuXHRcdH1cblxuXHRcdHJldHVybiBkYXRhID09PSB1bmRlZmluZWQgP1xuXHRcdFx0dGhpcyA6XG5cdFx0XHR0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgcXVldWUgPSBqUXVlcnkucXVldWUoIHRoaXMsIHR5cGUsIGRhdGEgKTtcblxuXHRcdFx0XHQvLyBFbnN1cmUgYSBob29rcyBmb3IgdGhpcyBxdWV1ZVxuXHRcdFx0XHRqUXVlcnkuX3F1ZXVlSG9va3MoIHRoaXMsIHR5cGUgKTtcblxuXHRcdFx0XHRpZiAoIHR5cGUgPT09IFwiZnhcIiAmJiBxdWV1ZVsgMCBdICE9PSBcImlucHJvZ3Jlc3NcIiApIHtcblx0XHRcdFx0XHRqUXVlcnkuZGVxdWV1ZSggdGhpcywgdHlwZSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdH0sXG5cdGRlcXVldWU6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHR9ICk7XG5cdH0sXG5cdGNsZWFyUXVldWU6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdHJldHVybiB0aGlzLnF1ZXVlKCB0eXBlIHx8IFwiZnhcIiwgW10gKTtcblx0fSxcblxuXHQvLyBHZXQgYSBwcm9taXNlIHJlc29sdmVkIHdoZW4gcXVldWVzIG9mIGEgY2VydGFpbiB0eXBlXG5cdC8vIGFyZSBlbXB0aWVkIChmeCBpcyB0aGUgdHlwZSBieSBkZWZhdWx0KVxuXHRwcm9taXNlOiBmdW5jdGlvbiggdHlwZSwgb2JqICkge1xuXHRcdHZhciB0bXAsXG5cdFx0XHRjb3VudCA9IDEsXG5cdFx0XHRkZWZlciA9IGpRdWVyeS5EZWZlcnJlZCgpLFxuXHRcdFx0ZWxlbWVudHMgPSB0aGlzLFxuXHRcdFx0aSA9IHRoaXMubGVuZ3RoLFxuXHRcdFx0cmVzb2x2ZSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoICEoIC0tY291bnQgKSApIHtcblx0XHRcdFx0XHRkZWZlci5yZXNvbHZlV2l0aCggZWxlbWVudHMsIFsgZWxlbWVudHMgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0aWYgKCB0eXBlb2YgdHlwZSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdG9iaiA9IHR5cGU7XG5cdFx0XHR0eXBlID0gdW5kZWZpbmVkO1xuXHRcdH1cblx0XHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdHRtcCA9IGRhdGFQcml2LmdldCggZWxlbWVudHNbIGkgXSwgdHlwZSArIFwicXVldWVIb29rc1wiICk7XG5cdFx0XHRpZiAoIHRtcCAmJiB0bXAuZW1wdHkgKSB7XG5cdFx0XHRcdGNvdW50Kys7XG5cdFx0XHRcdHRtcC5lbXB0eS5hZGQoIHJlc29sdmUgKTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmVzb2x2ZSgpO1xuXHRcdHJldHVybiBkZWZlci5wcm9taXNlKCBvYmogKTtcblx0fVxufSApO1xudmFyIHBudW0gPSAoIC9bKy1dPyg/OlxcZCpcXC58KVxcZCsoPzpbZUVdWystXT9cXGQrfCkvICkuc291cmNlO1xuXG52YXIgcmNzc051bSA9IG5ldyBSZWdFeHAoIFwiXig/OihbKy1dKT18KShcIiArIHBudW0gKyBcIikoW2EteiVdKikkXCIsIFwiaVwiICk7XG5cblxudmFyIGNzc0V4cGFuZCA9IFsgXCJUb3BcIiwgXCJSaWdodFwiLCBcIkJvdHRvbVwiLCBcIkxlZnRcIiBdO1xuXG52YXIgaXNIaWRkZW5XaXRoaW5UcmVlID0gZnVuY3Rpb24oIGVsZW0sIGVsICkge1xuXG5cdFx0Ly8gaXNIaWRkZW5XaXRoaW5UcmVlIG1pZ2h0IGJlIGNhbGxlZCBmcm9tIGpRdWVyeSNmaWx0ZXIgZnVuY3Rpb247XG5cdFx0Ly8gaW4gdGhhdCBjYXNlLCBlbGVtZW50IHdpbGwgYmUgc2Vjb25kIGFyZ3VtZW50XG5cdFx0ZWxlbSA9IGVsIHx8IGVsZW07XG5cblx0XHQvLyBJbmxpbmUgc3R5bGUgdHJ1bXBzIGFsbFxuXHRcdHJldHVybiBlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwibm9uZVwiIHx8XG5cdFx0XHRlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwiXCIgJiZcblxuXHRcdFx0Ly8gT3RoZXJ3aXNlLCBjaGVjayBjb21wdXRlZCBzdHlsZVxuXHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTQzIC0gNDVcblx0XHRcdC8vIERpc2Nvbm5lY3RlZCBlbGVtZW50cyBjYW4gaGF2ZSBjb21wdXRlZCBkaXNwbGF5OiBub25lLCBzbyBmaXJzdCBjb25maXJtIHRoYXQgZWxlbSBpc1xuXHRcdFx0Ly8gaW4gdGhlIGRvY3VtZW50LlxuXHRcdFx0alF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKSAmJlxuXG5cdFx0XHRqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApID09PSBcIm5vbmVcIjtcblx0fTtcblxudmFyIHN3YXAgPSBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgY2FsbGJhY2ssIGFyZ3MgKSB7XG5cdHZhciByZXQsIG5hbWUsXG5cdFx0b2xkID0ge307XG5cblx0Ly8gUmVtZW1iZXIgdGhlIG9sZCB2YWx1ZXMsIGFuZCBpbnNlcnQgdGhlIG5ldyBvbmVzXG5cdGZvciAoIG5hbWUgaW4gb3B0aW9ucyApIHtcblx0XHRvbGRbIG5hbWUgXSA9IGVsZW0uc3R5bGVbIG5hbWUgXTtcblx0XHRlbGVtLnN0eWxlWyBuYW1lIF0gPSBvcHRpb25zWyBuYW1lIF07XG5cdH1cblxuXHRyZXQgPSBjYWxsYmFjay5hcHBseSggZWxlbSwgYXJncyB8fCBbXSApO1xuXG5cdC8vIFJldmVydCB0aGUgb2xkIHZhbHVlc1xuXHRmb3IgKCBuYW1lIGluIG9wdGlvbnMgKSB7XG5cdFx0ZWxlbS5zdHlsZVsgbmFtZSBdID0gb2xkWyBuYW1lIF07XG5cdH1cblxuXHRyZXR1cm4gcmV0O1xufTtcblxuXG5cblxuZnVuY3Rpb24gYWRqdXN0Q1NTKCBlbGVtLCBwcm9wLCB2YWx1ZVBhcnRzLCB0d2VlbiApIHtcblx0dmFyIGFkanVzdGVkLCBzY2FsZSxcblx0XHRtYXhJdGVyYXRpb25zID0gMjAsXG5cdFx0Y3VycmVudFZhbHVlID0gdHdlZW4gP1xuXHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiB0d2Vlbi5jdXIoKTtcblx0XHRcdH0gOlxuXHRcdFx0ZnVuY3Rpb24oKSB7XG5cdFx0XHRcdHJldHVybiBqUXVlcnkuY3NzKCBlbGVtLCBwcm9wLCBcIlwiICk7XG5cdFx0XHR9LFxuXHRcdGluaXRpYWwgPSBjdXJyZW50VmFsdWUoKSxcblx0XHR1bml0ID0gdmFsdWVQYXJ0cyAmJiB2YWx1ZVBhcnRzWyAzIF0gfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyBcIlwiIDogXCJweFwiICksXG5cblx0XHQvLyBTdGFydGluZyB2YWx1ZSBjb21wdXRhdGlvbiBpcyByZXF1aXJlZCBmb3IgcG90ZW50aWFsIHVuaXQgbWlzbWF0Y2hlc1xuXHRcdGluaXRpYWxJblVuaXQgPSAoIGpRdWVyeS5jc3NOdW1iZXJbIHByb3AgXSB8fCB1bml0ICE9PSBcInB4XCIgJiYgK2luaXRpYWwgKSAmJlxuXHRcdFx0cmNzc051bS5leGVjKCBqUXVlcnkuY3NzKCBlbGVtLCBwcm9wICkgKTtcblxuXHRpZiAoIGluaXRpYWxJblVuaXQgJiYgaW5pdGlhbEluVW5pdFsgMyBdICE9PSB1bml0ICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTU0XG5cdFx0Ly8gSGFsdmUgdGhlIGl0ZXJhdGlvbiB0YXJnZXQgdmFsdWUgdG8gcHJldmVudCBpbnRlcmZlcmVuY2UgZnJvbSBDU1MgdXBwZXIgYm91bmRzIChnaC0yMTQ0KVxuXHRcdGluaXRpYWwgPSBpbml0aWFsIC8gMjtcblxuXHRcdC8vIFRydXN0IHVuaXRzIHJlcG9ydGVkIGJ5IGpRdWVyeS5jc3Ncblx0XHR1bml0ID0gdW5pdCB8fCBpbml0aWFsSW5Vbml0WyAzIF07XG5cblx0XHQvLyBJdGVyYXRpdmVseSBhcHByb3hpbWF0ZSBmcm9tIGEgbm9uemVybyBzdGFydGluZyBwb2ludFxuXHRcdGluaXRpYWxJblVuaXQgPSAraW5pdGlhbCB8fCAxO1xuXG5cdFx0d2hpbGUgKCBtYXhJdGVyYXRpb25zLS0gKSB7XG5cblx0XHRcdC8vIEV2YWx1YXRlIGFuZCB1cGRhdGUgb3VyIGJlc3QgZ3Vlc3MgKGRvdWJsaW5nIGd1ZXNzZXMgdGhhdCB6ZXJvIG91dCkuXG5cdFx0XHQvLyBGaW5pc2ggaWYgdGhlIHNjYWxlIGVxdWFscyBvciBjcm9zc2VzIDEgKG1ha2luZyB0aGUgb2xkKm5ldyBwcm9kdWN0IG5vbi1wb3NpdGl2ZSkuXG5cdFx0XHRqUXVlcnkuc3R5bGUoIGVsZW0sIHByb3AsIGluaXRpYWxJblVuaXQgKyB1bml0ICk7XG5cdFx0XHRpZiAoICggMSAtIHNjYWxlICkgKiAoIDEgLSAoIHNjYWxlID0gY3VycmVudFZhbHVlKCkgLyBpbml0aWFsIHx8IDAuNSApICkgPD0gMCApIHtcblx0XHRcdFx0bWF4SXRlcmF0aW9ucyA9IDA7XG5cdFx0XHR9XG5cdFx0XHRpbml0aWFsSW5Vbml0ID0gaW5pdGlhbEluVW5pdCAvIHNjYWxlO1xuXG5cdFx0fVxuXG5cdFx0aW5pdGlhbEluVW5pdCA9IGluaXRpYWxJblVuaXQgKiAyO1xuXHRcdGpRdWVyeS5zdHlsZSggZWxlbSwgcHJvcCwgaW5pdGlhbEluVW5pdCArIHVuaXQgKTtcblxuXHRcdC8vIE1ha2Ugc3VyZSB3ZSB1cGRhdGUgdGhlIHR3ZWVuIHByb3BlcnRpZXMgbGF0ZXIgb25cblx0XHR2YWx1ZVBhcnRzID0gdmFsdWVQYXJ0cyB8fCBbXTtcblx0fVxuXG5cdGlmICggdmFsdWVQYXJ0cyApIHtcblx0XHRpbml0aWFsSW5Vbml0ID0gK2luaXRpYWxJblVuaXQgfHwgK2luaXRpYWwgfHwgMDtcblxuXHRcdC8vIEFwcGx5IHJlbGF0aXZlIG9mZnNldCAoKz0vLT0pIGlmIHNwZWNpZmllZFxuXHRcdGFkanVzdGVkID0gdmFsdWVQYXJ0c1sgMSBdID9cblx0XHRcdGluaXRpYWxJblVuaXQgKyAoIHZhbHVlUGFydHNbIDEgXSArIDEgKSAqIHZhbHVlUGFydHNbIDIgXSA6XG5cdFx0XHQrdmFsdWVQYXJ0c1sgMiBdO1xuXHRcdGlmICggdHdlZW4gKSB7XG5cdFx0XHR0d2Vlbi51bml0ID0gdW5pdDtcblx0XHRcdHR3ZWVuLnN0YXJ0ID0gaW5pdGlhbEluVW5pdDtcblx0XHRcdHR3ZWVuLmVuZCA9IGFkanVzdGVkO1xuXHRcdH1cblx0fVxuXHRyZXR1cm4gYWRqdXN0ZWQ7XG59XG5cblxudmFyIGRlZmF1bHREaXNwbGF5TWFwID0ge307XG5cbmZ1bmN0aW9uIGdldERlZmF1bHREaXNwbGF5KCBlbGVtICkge1xuXHR2YXIgdGVtcCxcblx0XHRkb2MgPSBlbGVtLm93bmVyRG9jdW1lbnQsXG5cdFx0bm9kZU5hbWUgPSBlbGVtLm5vZGVOYW1lLFxuXHRcdGRpc3BsYXkgPSBkZWZhdWx0RGlzcGxheU1hcFsgbm9kZU5hbWUgXTtcblxuXHRpZiAoIGRpc3BsYXkgKSB7XG5cdFx0cmV0dXJuIGRpc3BsYXk7XG5cdH1cblxuXHR0ZW1wID0gZG9jLmJvZHkuYXBwZW5kQ2hpbGQoIGRvYy5jcmVhdGVFbGVtZW50KCBub2RlTmFtZSApICk7XG5cdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCB0ZW1wLCBcImRpc3BsYXlcIiApO1xuXG5cdHRlbXAucGFyZW50Tm9kZS5yZW1vdmVDaGlsZCggdGVtcCApO1xuXG5cdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0ZGlzcGxheSA9IFwiYmxvY2tcIjtcblx0fVxuXHRkZWZhdWx0RGlzcGxheU1hcFsgbm9kZU5hbWUgXSA9IGRpc3BsYXk7XG5cblx0cmV0dXJuIGRpc3BsYXk7XG59XG5cbmZ1bmN0aW9uIHNob3dIaWRlKCBlbGVtZW50cywgc2hvdyApIHtcblx0dmFyIGRpc3BsYXksIGVsZW0sXG5cdFx0dmFsdWVzID0gW10sXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IGVsZW1lbnRzLmxlbmd0aDtcblxuXHQvLyBEZXRlcm1pbmUgbmV3IGRpc3BsYXkgdmFsdWUgZm9yIGVsZW1lbnRzIHRoYXQgbmVlZCB0byBjaGFuZ2Vcblx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRlbGVtID0gZWxlbWVudHNbIGluZGV4IF07XG5cdFx0aWYgKCAhZWxlbS5zdHlsZSApIHtcblx0XHRcdGNvbnRpbnVlO1xuXHRcdH1cblxuXHRcdGRpc3BsYXkgPSBlbGVtLnN0eWxlLmRpc3BsYXk7XG5cdFx0aWYgKCBzaG93ICkge1xuXG5cdFx0XHQvLyBTaW5jZSB3ZSBmb3JjZSB2aXNpYmlsaXR5IHVwb24gY2FzY2FkZS1oaWRkZW4gZWxlbWVudHMsIGFuIGltbWVkaWF0ZSAoYW5kIHNsb3cpXG5cdFx0XHQvLyBjaGVjayBpcyByZXF1aXJlZCBpbiB0aGlzIGZpcnN0IGxvb3AgdW5sZXNzIHdlIGhhdmUgYSBub25lbXB0eSBkaXNwbGF5IHZhbHVlIChlaXRoZXJcblx0XHRcdC8vIGlubGluZSBvciBhYm91dC10by1iZS1yZXN0b3JlZClcblx0XHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IGRhdGFQcml2LmdldCggZWxlbSwgXCJkaXNwbGF5XCIgKSB8fCBudWxsO1xuXHRcdFx0XHRpZiAoICF2YWx1ZXNbIGluZGV4IF0gKSB7XG5cdFx0XHRcdFx0ZWxlbS5zdHlsZS5kaXNwbGF5ID0gXCJcIjtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdFx0aWYgKCBlbGVtLnN0eWxlLmRpc3BsYXkgPT09IFwiXCIgJiYgaXNIaWRkZW5XaXRoaW5UcmVlKCBlbGVtICkgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IGdldERlZmF1bHREaXNwbGF5KCBlbGVtICk7XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdGlmICggZGlzcGxheSAhPT0gXCJub25lXCIgKSB7XG5cdFx0XHRcdHZhbHVlc1sgaW5kZXggXSA9IFwibm9uZVwiO1xuXG5cdFx0XHRcdC8vIFJlbWVtYmVyIHdoYXQgd2UncmUgb3ZlcndyaXRpbmdcblx0XHRcdFx0ZGF0YVByaXYuc2V0KCBlbGVtLCBcImRpc3BsYXlcIiwgZGlzcGxheSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxuXG5cdC8vIFNldCB0aGUgZGlzcGxheSBvZiB0aGUgZWxlbWVudHMgaW4gYSBzZWNvbmQgbG9vcCB0byBhdm9pZCBjb25zdGFudCByZWZsb3dcblx0Zm9yICggaW5kZXggPSAwOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRpZiAoIHZhbHVlc1sgaW5kZXggXSAhPSBudWxsICkge1xuXHRcdFx0ZWxlbWVudHNbIGluZGV4IF0uc3R5bGUuZGlzcGxheSA9IHZhbHVlc1sgaW5kZXggXTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbWVudHM7XG59XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2hvdzogZnVuY3Rpb24oKSB7XG5cdFx0cmV0dXJuIHNob3dIaWRlKCB0aGlzLCB0cnVlICk7XG5cdH0sXG5cdGhpZGU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBzaG93SGlkZSggdGhpcyApO1xuXHR9LFxuXHR0b2dnbGU6IGZ1bmN0aW9uKCBzdGF0ZSApIHtcblx0XHRpZiAoIHR5cGVvZiBzdGF0ZSA9PT0gXCJib29sZWFuXCIgKSB7XG5cdFx0XHRyZXR1cm4gc3RhdGUgPyB0aGlzLnNob3coKSA6IHRoaXMuaGlkZSgpO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBpc0hpZGRlbldpdGhpblRyZWUoIHRoaXMgKSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuc2hvdygpO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkuaGlkZSgpO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fVxufSApO1xudmFyIHJjaGVja2FibGVUeXBlID0gKCAvXig/OmNoZWNrYm94fHJhZGlvKSQvaSApO1xuXG52YXIgcnRhZ05hbWUgPSAoIC88KFthLXpdW15cXC9cXDA+XFx4MjBcXHRcXHJcXG5cXGZdKykvaSApO1xuXG52YXIgcnNjcmlwdFR5cGUgPSAoIC9eJHxebW9kdWxlJHxcXC8oPzpqYXZhfGVjbWEpc2NyaXB0L2kgKTtcblxuXG5cbi8vIFdlIGhhdmUgdG8gY2xvc2UgdGhlc2UgdGFncyB0byBzdXBwb3J0IFhIVE1MICgjMTMyMDApXG52YXIgd3JhcE1hcCA9IHtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRvcHRpb246IFsgMSwgXCI8c2VsZWN0IG11bHRpcGxlPSdtdWx0aXBsZSc+XCIsIFwiPC9zZWxlY3Q+XCIgXSxcblxuXHQvLyBYSFRNTCBwYXJzZXJzIGRvIG5vdCBtYWdpY2FsbHkgaW5zZXJ0IGVsZW1lbnRzIGluIHRoZVxuXHQvLyBzYW1lIHdheSB0aGF0IHRhZyBzb3VwIHBhcnNlcnMgZG8uIFNvIHdlIGNhbm5vdCBzaG9ydGVuXG5cdC8vIHRoaXMgYnkgb21pdHRpbmcgPHRib2R5PiBvciBvdGhlciByZXF1aXJlZCBlbGVtZW50cy5cblx0dGhlYWQ6IFsgMSwgXCI8dGFibGU+XCIsIFwiPC90YWJsZT5cIiBdLFxuXHRjb2w6IFsgMiwgXCI8dGFibGU+PGNvbGdyb3VwPlwiLCBcIjwvY29sZ3JvdXA+PC90YWJsZT5cIiBdLFxuXHR0cjogWyAyLCBcIjx0YWJsZT48dGJvZHk+XCIsIFwiPC90Ym9keT48L3RhYmxlPlwiIF0sXG5cdHRkOiBbIDMsIFwiPHRhYmxlPjx0Ym9keT48dHI+XCIsIFwiPC90cj48L3Rib2R5PjwvdGFibGU+XCIgXSxcblxuXHRfZGVmYXVsdDogWyAwLCBcIlwiLCBcIlwiIF1cbn07XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG53cmFwTWFwLm9wdGdyb3VwID0gd3JhcE1hcC5vcHRpb247XG5cbndyYXBNYXAudGJvZHkgPSB3cmFwTWFwLnRmb290ID0gd3JhcE1hcC5jb2xncm91cCA9IHdyYXBNYXAuY2FwdGlvbiA9IHdyYXBNYXAudGhlYWQ7XG53cmFwTWFwLnRoID0gd3JhcE1hcC50ZDtcblxuXG5mdW5jdGlvbiBnZXRBbGwoIGNvbnRleHQsIHRhZyApIHtcblxuXHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdC8vIFVzZSB0eXBlb2YgdG8gYXZvaWQgemVyby1hcmd1bWVudCBtZXRob2QgaW52b2NhdGlvbiBvbiBob3N0IG9iamVjdHMgKCMxNTE1MSlcblx0dmFyIHJldDtcblxuXHRpZiAoIHR5cGVvZiBjb250ZXh0LmdldEVsZW1lbnRzQnlUYWdOYW1lICE9PSBcInVuZGVmaW5lZFwiICkge1xuXHRcdHJldCA9IGNvbnRleHQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoIHRhZyB8fCBcIipcIiApO1xuXG5cdH0gZWxzZSBpZiAoIHR5cGVvZiBjb250ZXh0LnF1ZXJ5U2VsZWN0b3JBbGwgIT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0cmV0ID0gY29udGV4dC5xdWVyeVNlbGVjdG9yQWxsKCB0YWcgfHwgXCIqXCIgKTtcblxuXHR9IGVsc2Uge1xuXHRcdHJldCA9IFtdO1xuXHR9XG5cblx0aWYgKCB0YWcgPT09IHVuZGVmaW5lZCB8fCB0YWcgJiYgbm9kZU5hbWUoIGNvbnRleHQsIHRhZyApICkge1xuXHRcdHJldHVybiBqUXVlcnkubWVyZ2UoIFsgY29udGV4dCBdLCByZXQgKTtcblx0fVxuXG5cdHJldHVybiByZXQ7XG59XG5cblxuLy8gTWFyayBzY3JpcHRzIGFzIGhhdmluZyBhbHJlYWR5IGJlZW4gZXZhbHVhdGVkXG5mdW5jdGlvbiBzZXRHbG9iYWxFdmFsKCBlbGVtcywgcmVmRWxlbWVudHMgKSB7XG5cdHZhciBpID0gMCxcblx0XHRsID0gZWxlbXMubGVuZ3RoO1xuXG5cdGZvciAoIDsgaSA8IGw7IGkrKyApIHtcblx0XHRkYXRhUHJpdi5zZXQoXG5cdFx0XHRlbGVtc1sgaSBdLFxuXHRcdFx0XCJnbG9iYWxFdmFsXCIsXG5cdFx0XHQhcmVmRWxlbWVudHMgfHwgZGF0YVByaXYuZ2V0KCByZWZFbGVtZW50c1sgaSBdLCBcImdsb2JhbEV2YWxcIiApXG5cdFx0KTtcblx0fVxufVxuXG5cbnZhciByaHRtbCA9IC88fCYjP1xcdys7LztcblxuZnVuY3Rpb24gYnVpbGRGcmFnbWVudCggZWxlbXMsIGNvbnRleHQsIHNjcmlwdHMsIHNlbGVjdGlvbiwgaWdub3JlZCApIHtcblx0dmFyIGVsZW0sIHRtcCwgdGFnLCB3cmFwLCBjb250YWlucywgaixcblx0XHRmcmFnbWVudCA9IGNvbnRleHQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuXHRcdG5vZGVzID0gW10sXG5cdFx0aSA9IDAsXG5cdFx0bCA9IGVsZW1zLmxlbmd0aDtcblxuXHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0ZWxlbSA9IGVsZW1zWyBpIF07XG5cblx0XHRpZiAoIGVsZW0gfHwgZWxlbSA9PT0gMCApIHtcblxuXHRcdFx0Ly8gQWRkIG5vZGVzIGRpcmVjdGx5XG5cdFx0XHRpZiAoIHRvVHlwZSggZWxlbSApID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0XHQvLyBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRcdGpRdWVyeS5tZXJnZSggbm9kZXMsIGVsZW0ubm9kZVR5cGUgPyBbIGVsZW0gXSA6IGVsZW0gKTtcblxuXHRcdFx0Ly8gQ29udmVydCBub24taHRtbCBpbnRvIGEgdGV4dCBub2RlXG5cdFx0XHR9IGVsc2UgaWYgKCAhcmh0bWwudGVzdCggZWxlbSApICkge1xuXHRcdFx0XHRub2Rlcy5wdXNoKCBjb250ZXh0LmNyZWF0ZVRleHROb2RlKCBlbGVtICkgKTtcblxuXHRcdFx0Ly8gQ29udmVydCBodG1sIGludG8gRE9NIG5vZGVzXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHR0bXAgPSB0bXAgfHwgZnJhZ21lbnQuYXBwZW5kQ2hpbGQoIGNvbnRleHQuY3JlYXRlRWxlbWVudCggXCJkaXZcIiApICk7XG5cblx0XHRcdFx0Ly8gRGVzZXJpYWxpemUgYSBzdGFuZGFyZCByZXByZXNlbnRhdGlvblxuXHRcdFx0XHR0YWcgPSAoIHJ0YWdOYW1lLmV4ZWMoIGVsZW0gKSB8fCBbIFwiXCIsIFwiXCIgXSApWyAxIF0udG9Mb3dlckNhc2UoKTtcblx0XHRcdFx0d3JhcCA9IHdyYXBNYXBbIHRhZyBdIHx8IHdyYXBNYXAuX2RlZmF1bHQ7XG5cdFx0XHRcdHRtcC5pbm5lckhUTUwgPSB3cmFwWyAxIF0gKyBqUXVlcnkuaHRtbFByZWZpbHRlciggZWxlbSApICsgd3JhcFsgMiBdO1xuXG5cdFx0XHRcdC8vIERlc2NlbmQgdGhyb3VnaCB3cmFwcGVycyB0byB0aGUgcmlnaHQgY29udGVudFxuXHRcdFx0XHRqID0gd3JhcFsgMCBdO1xuXHRcdFx0XHR3aGlsZSAoIGotLSApIHtcblx0XHRcdFx0XHR0bXAgPSB0bXAubGFzdENoaWxkO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHRcdC8vIHB1c2guYXBwbHkoXywgYXJyYXlsaWtlKSB0aHJvd3Mgb24gYW5jaWVudCBXZWJLaXRcblx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBub2RlcywgdG1wLmNoaWxkTm9kZXMgKTtcblxuXHRcdFx0XHQvLyBSZW1lbWJlciB0aGUgdG9wLWxldmVsIGNvbnRhaW5lclxuXHRcdFx0XHR0bXAgPSBmcmFnbWVudC5maXJzdENoaWxkO1xuXG5cdFx0XHRcdC8vIEVuc3VyZSB0aGUgY3JlYXRlZCBub2RlcyBhcmUgb3JwaGFuZWQgKCMxMjM5Milcblx0XHRcdFx0dG1wLnRleHRDb250ZW50ID0gXCJcIjtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBSZW1vdmUgd3JhcHBlciBmcm9tIGZyYWdtZW50XG5cdGZyYWdtZW50LnRleHRDb250ZW50ID0gXCJcIjtcblxuXHRpID0gMDtcblx0d2hpbGUgKCAoIGVsZW0gPSBub2Rlc1sgaSsrIF0gKSApIHtcblxuXHRcdC8vIFNraXAgZWxlbWVudHMgYWxyZWFkeSBpbiB0aGUgY29udGV4dCBjb2xsZWN0aW9uICh0cmFjLTQwODcpXG5cdFx0aWYgKCBzZWxlY3Rpb24gJiYgalF1ZXJ5LmluQXJyYXkoIGVsZW0sIHNlbGVjdGlvbiApID4gLTEgKSB7XG5cdFx0XHRpZiAoIGlnbm9yZWQgKSB7XG5cdFx0XHRcdGlnbm9yZWQucHVzaCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdFx0Y29udGludWU7XG5cdFx0fVxuXG5cdFx0Y29udGFpbnMgPSBqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApO1xuXG5cdFx0Ly8gQXBwZW5kIHRvIGZyYWdtZW50XG5cdFx0dG1wID0gZ2V0QWxsKCBmcmFnbWVudC5hcHBlbmRDaGlsZCggZWxlbSApLCBcInNjcmlwdFwiICk7XG5cblx0XHQvLyBQcmVzZXJ2ZSBzY3JpcHQgZXZhbHVhdGlvbiBoaXN0b3J5XG5cdFx0aWYgKCBjb250YWlucyApIHtcblx0XHRcdHNldEdsb2JhbEV2YWwoIHRtcCApO1xuXHRcdH1cblxuXHRcdC8vIENhcHR1cmUgZXhlY3V0YWJsZXNcblx0XHRpZiAoIHNjcmlwdHMgKSB7XG5cdFx0XHRqID0gMDtcblx0XHRcdHdoaWxlICggKCBlbGVtID0gdG1wWyBqKysgXSApICkge1xuXHRcdFx0XHRpZiAoIHJzY3JpcHRUeXBlLnRlc3QoIGVsZW0udHlwZSB8fCBcIlwiICkgKSB7XG5cdFx0XHRcdFx0c2NyaXB0cy5wdXNoKCBlbGVtICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZnJhZ21lbnQ7XG59XG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGZyYWdtZW50ID0gZG9jdW1lbnQuY3JlYXRlRG9jdW1lbnRGcmFnbWVudCgpLFxuXHRcdGRpdiA9IGZyYWdtZW50LmFwcGVuZENoaWxkKCBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkgKSxcblx0XHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHlcblx0Ly8gQ2hlY2sgc3RhdGUgbG9zdCBpZiB0aGUgbmFtZSBpcyBzZXQgKCMxMTIxNylcblx0Ly8gU3VwcG9ydDogV2luZG93cyBXZWIgQXBwcyAoV1dBKVxuXHQvLyBgbmFtZWAgYW5kIGB0eXBlYCBtdXN0IHVzZSAuc2V0QXR0cmlidXRlIGZvciBXV0EgKCMxNDkwMSlcblx0aW5wdXQuc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgXCJyYWRpb1wiICk7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJjaGVja2VkXCIsIFwiY2hlY2tlZFwiICk7XG5cdGlucHV0LnNldEF0dHJpYnV0ZSggXCJuYW1lXCIsIFwidFwiICk7XG5cblx0ZGl2LmFwcGVuZENoaWxkKCBpbnB1dCApO1xuXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjEgb25seVxuXHQvLyBPbGRlciBXZWJLaXQgZG9lc24ndCBjbG9uZSBjaGVja2VkIHN0YXRlIGNvcnJlY3RseSBpbiBmcmFnbWVudHNcblx0c3VwcG9ydC5jaGVja0Nsb25lID0gZGl2LmNsb25lTm9kZSggdHJ1ZSApLmNsb25lTm9kZSggdHJ1ZSApLmxhc3RDaGlsZC5jaGVja2VkO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBNYWtlIHN1cmUgdGV4dGFyZWEgKGFuZCBjaGVja2JveCkgZGVmYXVsdFZhbHVlIGlzIHByb3Blcmx5IGNsb25lZFxuXHRkaXYuaW5uZXJIVE1MID0gXCI8dGV4dGFyZWE+eDwvdGV4dGFyZWE+XCI7XG5cdHN1cHBvcnQubm9DbG9uZUNoZWNrZWQgPSAhIWRpdi5jbG9uZU5vZGUoIHRydWUgKS5sYXN0Q2hpbGQuZGVmYXVsdFZhbHVlO1xufSApKCk7XG52YXIgZG9jdW1lbnRFbGVtZW50ID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuXG5cblxudmFyXG5cdHJrZXlFdmVudCA9IC9ea2V5Lyxcblx0cm1vdXNlRXZlbnQgPSAvXig/Om1vdXNlfHBvaW50ZXJ8Y29udGV4dG1lbnV8ZHJhZ3xkcm9wKXxjbGljay8sXG5cdHJ0eXBlbmFtZXNwYWNlID0gL14oW14uXSopKD86XFwuKC4rKXwpLztcblxuZnVuY3Rpb24gcmV0dXJuVHJ1ZSgpIHtcblx0cmV0dXJuIHRydWU7XG59XG5cbmZ1bmN0aW9uIHJldHVybkZhbHNlKCkge1xuXHRyZXR1cm4gZmFsc2U7XG59XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG4vLyBTZWUgIzEzMzkzIGZvciBtb3JlIGluZm9cbmZ1bmN0aW9uIHNhZmVBY3RpdmVFbGVtZW50KCkge1xuXHR0cnkge1xuXHRcdHJldHVybiBkb2N1bWVudC5hY3RpdmVFbGVtZW50O1xuXHR9IGNhdGNoICggZXJyICkgeyB9XG59XG5cbmZ1bmN0aW9uIG9uKCBlbGVtLCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuLCBvbmUgKSB7XG5cdHZhciBvcmlnRm4sIHR5cGU7XG5cblx0Ly8gVHlwZXMgY2FuIGJlIGEgbWFwIG9mIHR5cGVzL2hhbmRsZXJzXG5cdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gKCB0eXBlcy1PYmplY3QsIHNlbGVjdG9yLCBkYXRhIClcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciAhPT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcy1PYmplY3QsIGRhdGEgKVxuXHRcdFx0ZGF0YSA9IGRhdGEgfHwgc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcblx0XHRcdG9uKCBlbGVtLCB0eXBlLCBzZWxlY3RvciwgZGF0YSwgdHlwZXNbIHR5cGUgXSwgb25lICk7XG5cdFx0fVxuXHRcdHJldHVybiBlbGVtO1xuXHR9XG5cblx0aWYgKCBkYXRhID09IG51bGwgJiYgZm4gPT0gbnVsbCApIHtcblxuXHRcdC8vICggdHlwZXMsIGZuIClcblx0XHRmbiA9IHNlbGVjdG9yO1xuXHRcdGRhdGEgPSBzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0fSBlbHNlIGlmICggZm4gPT0gbnVsbCApIHtcblx0XHRpZiAoIHR5cGVvZiBzZWxlY3RvciA9PT0gXCJzdHJpbmdcIiApIHtcblxuXHRcdFx0Ly8gKCB0eXBlcywgc2VsZWN0b3IsIGZuIClcblx0XHRcdGZuID0gZGF0YTtcblx0XHRcdGRhdGEgPSB1bmRlZmluZWQ7XG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gKCB0eXBlcywgZGF0YSwgZm4gKVxuXHRcdFx0Zm4gPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHNlbGVjdG9yO1xuXHRcdFx0c2VsZWN0b3IgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHR9XG5cdGlmICggZm4gPT09IGZhbHNlICkge1xuXHRcdGZuID0gcmV0dXJuRmFsc2U7XG5cdH0gZWxzZSBpZiAoICFmbiApIHtcblx0XHRyZXR1cm4gZWxlbTtcblx0fVxuXG5cdGlmICggb25lID09PSAxICkge1xuXHRcdG9yaWdGbiA9IGZuO1xuXHRcdGZuID0gZnVuY3Rpb24oIGV2ZW50ICkge1xuXG5cdFx0XHQvLyBDYW4gdXNlIGFuIGVtcHR5IHNldCwgc2luY2UgZXZlbnQgY29udGFpbnMgdGhlIGluZm9cblx0XHRcdGpRdWVyeSgpLm9mZiggZXZlbnQgKTtcblx0XHRcdHJldHVybiBvcmlnRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH07XG5cblx0XHQvLyBVc2Ugc2FtZSBndWlkIHNvIGNhbGxlciBjYW4gcmVtb3ZlIHVzaW5nIG9yaWdGblxuXHRcdGZuLmd1aWQgPSBvcmlnRm4uZ3VpZCB8fCAoIG9yaWdGbi5ndWlkID0galF1ZXJ5Lmd1aWQrKyApO1xuXHR9XG5cdHJldHVybiBlbGVtLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdGpRdWVyeS5ldmVudC5hZGQoIHRoaXMsIHR5cGVzLCBmbiwgZGF0YSwgc2VsZWN0b3IgKTtcblx0fSApO1xufVxuXG4vKlxuICogSGVscGVyIGZ1bmN0aW9ucyBmb3IgbWFuYWdpbmcgZXZlbnRzIC0tIG5vdCBwYXJ0IG9mIHRoZSBwdWJsaWMgaW50ZXJmYWNlLlxuICogUHJvcHMgdG8gRGVhbiBFZHdhcmRzJyBhZGRFdmVudCBsaWJyYXJ5IGZvciBtYW55IG9mIHRoZSBpZGVhcy5cbiAqL1xualF1ZXJ5LmV2ZW50ID0ge1xuXG5cdGdsb2JhbDoge30sXG5cblx0YWRkOiBmdW5jdGlvbiggZWxlbSwgdHlwZXMsIGhhbmRsZXIsIGRhdGEsIHNlbGVjdG9yICkge1xuXG5cdFx0dmFyIGhhbmRsZU9iakluLCBldmVudEhhbmRsZSwgdG1wLFxuXHRcdFx0ZXZlbnRzLCB0LCBoYW5kbGVPYmosXG5cdFx0XHRzcGVjaWFsLCBoYW5kbGVycywgdHlwZSwgbmFtZXNwYWNlcywgb3JpZ1R5cGUsXG5cdFx0XHRlbGVtRGF0YSA9IGRhdGFQcml2LmdldCggZWxlbSApO1xuXG5cdFx0Ly8gRG9uJ3QgYXR0YWNoIGV2ZW50cyB0byBub0RhdGEgb3IgdGV4dC9jb21tZW50IG5vZGVzIChidXQgYWxsb3cgcGxhaW4gb2JqZWN0cylcblx0XHRpZiAoICFlbGVtRGF0YSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBDYWxsZXIgY2FuIHBhc3MgaW4gYW4gb2JqZWN0IG9mIGN1c3RvbSBkYXRhIGluIGxpZXUgb2YgdGhlIGhhbmRsZXJcblx0XHRpZiAoIGhhbmRsZXIuaGFuZGxlciApIHtcblx0XHRcdGhhbmRsZU9iakluID0gaGFuZGxlcjtcblx0XHRcdGhhbmRsZXIgPSBoYW5kbGVPYmpJbi5oYW5kbGVyO1xuXHRcdFx0c2VsZWN0b3IgPSBoYW5kbGVPYmpJbi5zZWxlY3Rvcjtcblx0XHR9XG5cblx0XHQvLyBFbnN1cmUgdGhhdCBpbnZhbGlkIHNlbGVjdG9ycyB0aHJvdyBleGNlcHRpb25zIGF0IGF0dGFjaCB0aW1lXG5cdFx0Ly8gRXZhbHVhdGUgYWdhaW5zdCBkb2N1bWVudEVsZW1lbnQgaW4gY2FzZSBlbGVtIGlzIGEgbm9uLWVsZW1lbnQgbm9kZSAoZS5nLiwgZG9jdW1lbnQpXG5cdFx0aWYgKCBzZWxlY3RvciApIHtcblx0XHRcdGpRdWVyeS5maW5kLm1hdGNoZXNTZWxlY3RvciggZG9jdW1lbnRFbGVtZW50LCBzZWxlY3RvciApO1xuXHRcdH1cblxuXHRcdC8vIE1ha2Ugc3VyZSB0aGF0IHRoZSBoYW5kbGVyIGhhcyBhIHVuaXF1ZSBJRCwgdXNlZCB0byBmaW5kL3JlbW92ZSBpdCBsYXRlclxuXHRcdGlmICggIWhhbmRsZXIuZ3VpZCApIHtcblx0XHRcdGhhbmRsZXIuZ3VpZCA9IGpRdWVyeS5ndWlkKys7XG5cdFx0fVxuXG5cdFx0Ly8gSW5pdCB0aGUgZWxlbWVudCdzIGV2ZW50IHN0cnVjdHVyZSBhbmQgbWFpbiBoYW5kbGVyLCBpZiB0aGlzIGlzIHRoZSBmaXJzdFxuXHRcdGlmICggISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XG5cdFx0XHRldmVudHMgPSBlbGVtRGF0YS5ldmVudHMgPSB7fTtcblx0XHR9XG5cdFx0aWYgKCAhKCBldmVudEhhbmRsZSA9IGVsZW1EYXRhLmhhbmRsZSApICkge1xuXHRcdFx0ZXZlbnRIYW5kbGUgPSBlbGVtRGF0YS5oYW5kbGUgPSBmdW5jdGlvbiggZSApIHtcblxuXHRcdFx0XHQvLyBEaXNjYXJkIHRoZSBzZWNvbmQgZXZlbnQgb2YgYSBqUXVlcnkuZXZlbnQudHJpZ2dlcigpIGFuZFxuXHRcdFx0XHQvLyB3aGVuIGFuIGV2ZW50IGlzIGNhbGxlZCBhZnRlciBhIHBhZ2UgaGFzIHVubG9hZGVkXG5cdFx0XHRcdHJldHVybiB0eXBlb2YgalF1ZXJ5ICE9PSBcInVuZGVmaW5lZFwiICYmIGpRdWVyeS5ldmVudC50cmlnZ2VyZWQgIT09IGUudHlwZSA/XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmRpc3BhdGNoLmFwcGx5KCBlbGVtLCBhcmd1bWVudHMgKSA6IHVuZGVmaW5lZDtcblx0XHRcdH07XG5cdFx0fVxuXG5cdFx0Ly8gSGFuZGxlIG11bHRpcGxlIGV2ZW50cyBzZXBhcmF0ZWQgYnkgYSBzcGFjZVxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBUaGVyZSAqbXVzdCogYmUgYSB0eXBlLCBubyBhdHRhY2hpbmcgbmFtZXNwYWNlLW9ubHkgaGFuZGxlcnNcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiBldmVudCBjaGFuZ2VzIGl0cyB0eXBlLCB1c2UgdGhlIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMgZm9yIHRoZSBjaGFuZ2VkIHR5cGVcblx0XHRcdHNwZWNpYWwgPSBqUXVlcnkuZXZlbnQuc3BlY2lhbFsgdHlwZSBdIHx8IHt9O1xuXG5cdFx0XHQvLyBJZiBzZWxlY3RvciBkZWZpbmVkLCBkZXRlcm1pbmUgc3BlY2lhbCBldmVudCBhcGkgdHlwZSwgb3RoZXJ3aXNlIGdpdmVuIHR5cGVcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblxuXHRcdFx0Ly8gVXBkYXRlIHNwZWNpYWwgYmFzZWQgb24gbmV3bHkgcmVzZXQgdHlwZVxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyB0eXBlIF0gfHwge307XG5cblx0XHRcdC8vIGhhbmRsZU9iaiBpcyBwYXNzZWQgdG8gYWxsIGV2ZW50IGhhbmRsZXJzXG5cdFx0XHRoYW5kbGVPYmogPSBqUXVlcnkuZXh0ZW5kKCB7XG5cdFx0XHRcdHR5cGU6IHR5cGUsXG5cdFx0XHRcdG9yaWdUeXBlOiBvcmlnVHlwZSxcblx0XHRcdFx0ZGF0YTogZGF0YSxcblx0XHRcdFx0aGFuZGxlcjogaGFuZGxlcixcblx0XHRcdFx0Z3VpZDogaGFuZGxlci5ndWlkLFxuXHRcdFx0XHRzZWxlY3Rvcjogc2VsZWN0b3IsXG5cdFx0XHRcdG5lZWRzQ29udGV4dDogc2VsZWN0b3IgJiYgalF1ZXJ5LmV4cHIubWF0Y2gubmVlZHNDb250ZXh0LnRlc3QoIHNlbGVjdG9yICksXG5cdFx0XHRcdG5hbWVzcGFjZTogbmFtZXNwYWNlcy5qb2luKCBcIi5cIiApXG5cdFx0XHR9LCBoYW5kbGVPYmpJbiApO1xuXG5cdFx0XHQvLyBJbml0IHRoZSBldmVudCBoYW5kbGVyIHF1ZXVlIGlmIHdlJ3JlIHRoZSBmaXJzdFxuXHRcdFx0aWYgKCAhKCBoYW5kbGVycyA9IGV2ZW50c1sgdHlwZSBdICkgKSB7XG5cdFx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gPSBbXTtcblx0XHRcdFx0aGFuZGxlcnMuZGVsZWdhdGVDb3VudCA9IDA7XG5cblx0XHRcdFx0Ly8gT25seSB1c2UgYWRkRXZlbnRMaXN0ZW5lciBpZiB0aGUgc3BlY2lhbCBldmVudHMgaGFuZGxlciByZXR1cm5zIGZhbHNlXG5cdFx0XHRcdGlmICggIXNwZWNpYWwuc2V0dXAgfHxcblx0XHRcdFx0XHRzcGVjaWFsLnNldHVwLmNhbGwoIGVsZW0sIGRhdGEsIG5hbWVzcGFjZXMsIGV2ZW50SGFuZGxlICkgPT09IGZhbHNlICkge1xuXG5cdFx0XHRcdFx0aWYgKCBlbGVtLmFkZEV2ZW50TGlzdGVuZXIgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLmFkZEV2ZW50TGlzdGVuZXIoIHR5cGUsIGV2ZW50SGFuZGxlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdGlmICggc3BlY2lhbC5hZGQgKSB7XG5cdFx0XHRcdHNwZWNpYWwuYWRkLmNhbGwoIGVsZW0sIGhhbmRsZU9iaiApO1xuXG5cdFx0XHRcdGlmICggIWhhbmRsZU9iai5oYW5kbGVyLmd1aWQgKSB7XG5cdFx0XHRcdFx0aGFuZGxlT2JqLmhhbmRsZXIuZ3VpZCA9IGhhbmRsZXIuZ3VpZDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHQvLyBBZGQgdG8gdGhlIGVsZW1lbnQncyBoYW5kbGVyIGxpc3QsIGRlbGVnYXRlcyBpbiBmcm9udFxuXHRcdFx0aWYgKCBzZWxlY3RvciApIHtcblx0XHRcdFx0aGFuZGxlcnMuc3BsaWNlKCBoYW5kbGVycy5kZWxlZ2F0ZUNvdW50KyssIDAsIGhhbmRsZU9iaiApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0aGFuZGxlcnMucHVzaCggaGFuZGxlT2JqICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEtlZXAgdHJhY2sgb2Ygd2hpY2ggZXZlbnRzIGhhdmUgZXZlciBiZWVuIHVzZWQsIGZvciBldmVudCBvcHRpbWl6YXRpb25cblx0XHRcdGpRdWVyeS5ldmVudC5nbG9iYWxbIHR5cGUgXSA9IHRydWU7XG5cdFx0fVxuXG5cdH0sXG5cblx0Ly8gRGV0YWNoIGFuIGV2ZW50IG9yIHNldCBvZiBldmVudHMgZnJvbSBhbiBlbGVtZW50XG5cdHJlbW92ZTogZnVuY3Rpb24oIGVsZW0sIHR5cGVzLCBoYW5kbGVyLCBzZWxlY3RvciwgbWFwcGVkVHlwZXMgKSB7XG5cblx0XHR2YXIgaiwgb3JpZ0NvdW50LCB0bXAsXG5cdFx0XHRldmVudHMsIHQsIGhhbmRsZU9iaixcblx0XHRcdHNwZWNpYWwsIGhhbmRsZXJzLCB0eXBlLCBuYW1lc3BhY2VzLCBvcmlnVHlwZSxcblx0XHRcdGVsZW1EYXRhID0gZGF0YVByaXYuaGFzRGF0YSggZWxlbSApICYmIGRhdGFQcml2LmdldCggZWxlbSApO1xuXG5cdFx0aWYgKCAhZWxlbURhdGEgfHwgISggZXZlbnRzID0gZWxlbURhdGEuZXZlbnRzICkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gT25jZSBmb3IgZWFjaCB0eXBlLm5hbWVzcGFjZSBpbiB0eXBlczsgdHlwZSBtYXkgYmUgb21pdHRlZFxuXHRcdHR5cGVzID0gKCB0eXBlcyB8fCBcIlwiICkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbIFwiXCIgXTtcblx0XHR0ID0gdHlwZXMubGVuZ3RoO1xuXHRcdHdoaWxlICggdC0tICkge1xuXHRcdFx0dG1wID0gcnR5cGVuYW1lc3BhY2UuZXhlYyggdHlwZXNbIHQgXSApIHx8IFtdO1xuXHRcdFx0dHlwZSA9IG9yaWdUeXBlID0gdG1wWyAxIF07XG5cdFx0XHRuYW1lc3BhY2VzID0gKCB0bXBbIDIgXSB8fCBcIlwiICkuc3BsaXQoIFwiLlwiICkuc29ydCgpO1xuXG5cdFx0XHQvLyBVbmJpbmQgYWxsIGV2ZW50cyAob24gdGhpcyBuYW1lc3BhY2UsIGlmIHByb3ZpZGVkKSBmb3IgdGhlIGVsZW1lbnRcblx0XHRcdGlmICggIXR5cGUgKSB7XG5cdFx0XHRcdGZvciAoIHR5cGUgaW4gZXZlbnRzICkge1xuXHRcdFx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIGVsZW0sIHR5cGUgKyB0eXBlc1sgdCBdLCBoYW5kbGVyLCBzZWxlY3RvciwgdHJ1ZSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0fVxuXG5cdFx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblx0XHRcdHR5cGUgPSAoIHNlbGVjdG9yID8gc3BlY2lhbC5kZWxlZ2F0ZVR5cGUgOiBzcGVjaWFsLmJpbmRUeXBlICkgfHwgdHlwZTtcblx0XHRcdGhhbmRsZXJzID0gZXZlbnRzWyB0eXBlIF0gfHwgW107XG5cdFx0XHR0bXAgPSB0bXBbIDIgXSAmJlxuXHRcdFx0XHRuZXcgUmVnRXhwKCBcIihefFxcXFwuKVwiICsgbmFtZXNwYWNlcy5qb2luKCBcIlxcXFwuKD86LipcXFxcLnwpXCIgKSArIFwiKFxcXFwufCQpXCIgKTtcblxuXHRcdFx0Ly8gUmVtb3ZlIG1hdGNoaW5nIGV2ZW50c1xuXHRcdFx0b3JpZ0NvdW50ID0gaiA9IGhhbmRsZXJzLmxlbmd0aDtcblx0XHRcdHdoaWxlICggai0tICkge1xuXHRcdFx0XHRoYW5kbGVPYmogPSBoYW5kbGVyc1sgaiBdO1xuXG5cdFx0XHRcdGlmICggKCBtYXBwZWRUeXBlcyB8fCBvcmlnVHlwZSA9PT0gaGFuZGxlT2JqLm9yaWdUeXBlICkgJiZcblx0XHRcdFx0XHQoICFoYW5kbGVyIHx8IGhhbmRsZXIuZ3VpZCA9PT0gaGFuZGxlT2JqLmd1aWQgKSAmJlxuXHRcdFx0XHRcdCggIXRtcCB8fCB0bXAudGVzdCggaGFuZGxlT2JqLm5hbWVzcGFjZSApICkgJiZcblx0XHRcdFx0XHQoICFzZWxlY3RvciB8fCBzZWxlY3RvciA9PT0gaGFuZGxlT2JqLnNlbGVjdG9yIHx8XG5cdFx0XHRcdFx0XHRzZWxlY3RvciA9PT0gXCIqKlwiICYmIGhhbmRsZU9iai5zZWxlY3RvciApICkge1xuXHRcdFx0XHRcdGhhbmRsZXJzLnNwbGljZSggaiwgMSApO1xuXG5cdFx0XHRcdFx0aWYgKCBoYW5kbGVPYmouc2VsZWN0b3IgKSB7XG5cdFx0XHRcdFx0XHRoYW5kbGVycy5kZWxlZ2F0ZUNvdW50LS07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGlmICggc3BlY2lhbC5yZW1vdmUgKSB7XG5cdFx0XHRcdFx0XHRzcGVjaWFsLnJlbW92ZS5jYWxsKCBlbGVtLCBoYW5kbGVPYmogKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gUmVtb3ZlIGdlbmVyaWMgZXZlbnQgaGFuZGxlciBpZiB3ZSByZW1vdmVkIHNvbWV0aGluZyBhbmQgbm8gbW9yZSBoYW5kbGVycyBleGlzdFxuXHRcdFx0Ly8gKGF2b2lkcyBwb3RlbnRpYWwgZm9yIGVuZGxlc3MgcmVjdXJzaW9uIGR1cmluZyByZW1vdmFsIG9mIHNwZWNpYWwgZXZlbnQgaGFuZGxlcnMpXG5cdFx0XHRpZiAoIG9yaWdDb3VudCAmJiAhaGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0XHRpZiAoICFzcGVjaWFsLnRlYXJkb3duIHx8XG5cdFx0XHRcdFx0c3BlY2lhbC50ZWFyZG93bi5jYWxsKCBlbGVtLCBuYW1lc3BhY2VzLCBlbGVtRGF0YS5oYW5kbGUgKSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdFx0XHRqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGVsZW1EYXRhLmhhbmRsZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0ZGVsZXRlIGV2ZW50c1sgdHlwZSBdO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIFJlbW92ZSBkYXRhIGFuZCB0aGUgZXhwYW5kbyBpZiBpdCdzIG5vIGxvbmdlciB1c2VkXG5cdFx0aWYgKCBqUXVlcnkuaXNFbXB0eU9iamVjdCggZXZlbnRzICkgKSB7XG5cdFx0XHRkYXRhUHJpdi5yZW1vdmUoIGVsZW0sIFwiaGFuZGxlIGV2ZW50c1wiICk7XG5cdFx0fVxuXHR9LFxuXG5cdGRpc3BhdGNoOiBmdW5jdGlvbiggbmF0aXZlRXZlbnQgKSB7XG5cblx0XHQvLyBNYWtlIGEgd3JpdGFibGUgalF1ZXJ5LkV2ZW50IGZyb20gdGhlIG5hdGl2ZSBldmVudCBvYmplY3Rcblx0XHR2YXIgZXZlbnQgPSBqUXVlcnkuZXZlbnQuZml4KCBuYXRpdmVFdmVudCApO1xuXG5cdFx0dmFyIGksIGosIHJldCwgbWF0Y2hlZCwgaGFuZGxlT2JqLCBoYW5kbGVyUXVldWUsXG5cdFx0XHRhcmdzID0gbmV3IEFycmF5KCBhcmd1bWVudHMubGVuZ3RoICksXG5cdFx0XHRoYW5kbGVycyA9ICggZGF0YVByaXYuZ2V0KCB0aGlzLCBcImV2ZW50c1wiICkgfHwge30gKVsgZXZlbnQudHlwZSBdIHx8IFtdLFxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsWyBldmVudC50eXBlIF0gfHwge307XG5cblx0XHQvLyBVc2UgdGhlIGZpeC1lZCBqUXVlcnkuRXZlbnQgcmF0aGVyIHRoYW4gdGhlIChyZWFkLW9ubHkpIG5hdGl2ZSBldmVudFxuXHRcdGFyZ3NbIDAgXSA9IGV2ZW50O1xuXG5cdFx0Zm9yICggaSA9IDE7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKysgKSB7XG5cdFx0XHRhcmdzWyBpIF0gPSBhcmd1bWVudHNbIGkgXTtcblx0XHR9XG5cblx0XHRldmVudC5kZWxlZ2F0ZVRhcmdldCA9IHRoaXM7XG5cblx0XHQvLyBDYWxsIHRoZSBwcmVEaXNwYXRjaCBob29rIGZvciB0aGUgbWFwcGVkIHR5cGUsIGFuZCBsZXQgaXQgYmFpbCBpZiBkZXNpcmVkXG5cdFx0aWYgKCBzcGVjaWFsLnByZURpc3BhdGNoICYmIHNwZWNpYWwucHJlRGlzcGF0Y2guY2FsbCggdGhpcywgZXZlbnQgKSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gRGV0ZXJtaW5lIGhhbmRsZXJzXG5cdFx0aGFuZGxlclF1ZXVlID0galF1ZXJ5LmV2ZW50LmhhbmRsZXJzLmNhbGwoIHRoaXMsIGV2ZW50LCBoYW5kbGVycyApO1xuXG5cdFx0Ly8gUnVuIGRlbGVnYXRlcyBmaXJzdDsgdGhleSBtYXkgd2FudCB0byBzdG9wIHByb3BhZ2F0aW9uIGJlbmVhdGggdXNcblx0XHRpID0gMDtcblx0XHR3aGlsZSAoICggbWF0Y2hlZCA9IGhhbmRsZXJRdWV1ZVsgaSsrIF0gKSAmJiAhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdGV2ZW50LmN1cnJlbnRUYXJnZXQgPSBtYXRjaGVkLmVsZW07XG5cblx0XHRcdGogPSAwO1xuXHRcdFx0d2hpbGUgKCAoIGhhbmRsZU9iaiA9IG1hdGNoZWQuaGFuZGxlcnNbIGorKyBdICkgJiZcblx0XHRcdFx0IWV2ZW50LmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cblx0XHRcdFx0Ly8gVHJpZ2dlcmVkIGV2ZW50IG11c3QgZWl0aGVyIDEpIGhhdmUgbm8gbmFtZXNwYWNlLCBvciAyKSBoYXZlIG5hbWVzcGFjZShzKVxuXHRcdFx0XHQvLyBhIHN1YnNldCBvciBlcXVhbCB0byB0aG9zZSBpbiB0aGUgYm91bmQgZXZlbnQgKGJvdGggY2FuIGhhdmUgbm8gbmFtZXNwYWNlKS5cblx0XHRcdFx0aWYgKCAhZXZlbnQucm5hbWVzcGFjZSB8fCBldmVudC5ybmFtZXNwYWNlLnRlc3QoIGhhbmRsZU9iai5uYW1lc3BhY2UgKSApIHtcblxuXHRcdFx0XHRcdGV2ZW50LmhhbmRsZU9iaiA9IGhhbmRsZU9iajtcblx0XHRcdFx0XHRldmVudC5kYXRhID0gaGFuZGxlT2JqLmRhdGE7XG5cblx0XHRcdFx0XHRyZXQgPSAoICggalF1ZXJ5LmV2ZW50LnNwZWNpYWxbIGhhbmRsZU9iai5vcmlnVHlwZSBdIHx8IHt9ICkuaGFuZGxlIHx8XG5cdFx0XHRcdFx0XHRoYW5kbGVPYmouaGFuZGxlciApLmFwcGx5KCBtYXRjaGVkLmVsZW0sIGFyZ3MgKTtcblxuXHRcdFx0XHRcdGlmICggcmV0ICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0XHRpZiAoICggZXZlbnQucmVzdWx0ID0gcmV0ICkgPT09IGZhbHNlICkge1xuXHRcdFx0XHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHRcdFx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDYWxsIHRoZSBwb3N0RGlzcGF0Y2ggaG9vayBmb3IgdGhlIG1hcHBlZCB0eXBlXG5cdFx0aWYgKCBzcGVjaWFsLnBvc3REaXNwYXRjaCApIHtcblx0XHRcdHNwZWNpYWwucG9zdERpc3BhdGNoLmNhbGwoIHRoaXMsIGV2ZW50ICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGV2ZW50LnJlc3VsdDtcblx0fSxcblxuXHRoYW5kbGVyczogZnVuY3Rpb24oIGV2ZW50LCBoYW5kbGVycyApIHtcblx0XHR2YXIgaSwgaGFuZGxlT2JqLCBzZWwsIG1hdGNoZWRIYW5kbGVycywgbWF0Y2hlZFNlbGVjdG9ycyxcblx0XHRcdGhhbmRsZXJRdWV1ZSA9IFtdLFxuXHRcdFx0ZGVsZWdhdGVDb3VudCA9IGhhbmRsZXJzLmRlbGVnYXRlQ291bnQsXG5cdFx0XHRjdXIgPSBldmVudC50YXJnZXQ7XG5cblx0XHQvLyBGaW5kIGRlbGVnYXRlIGhhbmRsZXJzXG5cdFx0aWYgKCBkZWxlZ2F0ZUNvdW50ICYmXG5cblx0XHRcdC8vIFN1cHBvcnQ6IElFIDw9OVxuXHRcdFx0Ly8gQmxhY2staG9sZSBTVkcgPHVzZT4gaW5zdGFuY2UgdHJlZXMgKHRyYWMtMTMxODApXG5cdFx0XHRjdXIubm9kZVR5cGUgJiZcblxuXHRcdFx0Ly8gU3VwcG9ydDogRmlyZWZveCA8PTQyXG5cdFx0XHQvLyBTdXBwcmVzcyBzcGVjLXZpb2xhdGluZyBjbGlja3MgaW5kaWNhdGluZyBhIG5vbi1wcmltYXJ5IHBvaW50ZXIgYnV0dG9uICh0cmFjLTM4NjEpXG5cdFx0XHQvLyBodHRwczovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTMtRXZlbnRzLyNldmVudC10eXBlLWNsaWNrXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSAxMSBvbmx5XG5cdFx0XHQvLyAuLi5idXQgbm90IGFycm93IGtleSBcImNsaWNrc1wiIG9mIHJhZGlvIGlucHV0cywgd2hpY2ggY2FuIGhhdmUgYGJ1dHRvbmAgLTEgKGdoLTIzNDMpXG5cdFx0XHQhKCBldmVudC50eXBlID09PSBcImNsaWNrXCIgJiYgZXZlbnQuYnV0dG9uID49IDEgKSApIHtcblxuXHRcdFx0Zm9yICggOyBjdXIgIT09IHRoaXM7IGN1ciA9IGN1ci5wYXJlbnROb2RlIHx8IHRoaXMgKSB7XG5cblx0XHRcdFx0Ly8gRG9uJ3QgY2hlY2sgbm9uLWVsZW1lbnRzICgjMTMyMDgpXG5cdFx0XHRcdC8vIERvbid0IHByb2Nlc3MgY2xpY2tzIG9uIGRpc2FibGVkIGVsZW1lbnRzICgjNjkxMSwgIzgxNjUsICMxMTM4MiwgIzExNzY0KVxuXHRcdFx0XHRpZiAoIGN1ci5ub2RlVHlwZSA9PT0gMSAmJiAhKCBldmVudC50eXBlID09PSBcImNsaWNrXCIgJiYgY3VyLmRpc2FibGVkID09PSB0cnVlICkgKSB7XG5cdFx0XHRcdFx0bWF0Y2hlZEhhbmRsZXJzID0gW107XG5cdFx0XHRcdFx0bWF0Y2hlZFNlbGVjdG9ycyA9IHt9O1xuXHRcdFx0XHRcdGZvciAoIGkgPSAwOyBpIDwgZGVsZWdhdGVDb3VudDsgaSsrICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlT2JqID0gaGFuZGxlcnNbIGkgXTtcblxuXHRcdFx0XHRcdFx0Ly8gRG9uJ3QgY29uZmxpY3Qgd2l0aCBPYmplY3QucHJvdG90eXBlIHByb3BlcnRpZXMgKCMxMzIwMylcblx0XHRcdFx0XHRcdHNlbCA9IGhhbmRsZU9iai5zZWxlY3RvciArIFwiIFwiO1xuXG5cdFx0XHRcdFx0XHRpZiAoIG1hdGNoZWRTZWxlY3RvcnNbIHNlbCBdID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0XHRcdG1hdGNoZWRTZWxlY3RvcnNbIHNlbCBdID0gaGFuZGxlT2JqLm5lZWRzQ29udGV4dCA/XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5KCBzZWwsIHRoaXMgKS5pbmRleCggY3VyICkgPiAtMSA6XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LmZpbmQoIHNlbCwgdGhpcywgbnVsbCwgWyBjdXIgXSApLmxlbmd0aDtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdGlmICggbWF0Y2hlZFNlbGVjdG9yc1sgc2VsIF0gKSB7XG5cdFx0XHRcdFx0XHRcdG1hdGNoZWRIYW5kbGVycy5wdXNoKCBoYW5kbGVPYmogKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0aWYgKCBtYXRjaGVkSGFuZGxlcnMubGVuZ3RoICkge1xuXHRcdFx0XHRcdFx0aGFuZGxlclF1ZXVlLnB1c2goIHsgZWxlbTogY3VyLCBoYW5kbGVyczogbWF0Y2hlZEhhbmRsZXJzIH0gKTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBBZGQgdGhlIHJlbWFpbmluZyAoZGlyZWN0bHktYm91bmQpIGhhbmRsZXJzXG5cdFx0Y3VyID0gdGhpcztcblx0XHRpZiAoIGRlbGVnYXRlQ291bnQgPCBoYW5kbGVycy5sZW5ndGggKSB7XG5cdFx0XHRoYW5kbGVyUXVldWUucHVzaCggeyBlbGVtOiBjdXIsIGhhbmRsZXJzOiBoYW5kbGVycy5zbGljZSggZGVsZWdhdGVDb3VudCApIH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gaGFuZGxlclF1ZXVlO1xuXHR9LFxuXG5cdGFkZFByb3A6IGZ1bmN0aW9uKCBuYW1lLCBob29rICkge1xuXHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eSggalF1ZXJ5LkV2ZW50LnByb3RvdHlwZSwgbmFtZSwge1xuXHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdGNvbmZpZ3VyYWJsZTogdHJ1ZSxcblxuXHRcdFx0Z2V0OiBpc0Z1bmN0aW9uKCBob29rICkgP1xuXHRcdFx0XHRmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRpZiAoIHRoaXMub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGhvb2soIHRoaXMub3JpZ2luYWxFdmVudCApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fSA6XG5cdFx0XHRcdGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdGlmICggdGhpcy5vcmlnaW5hbEV2ZW50ICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4gdGhpcy5vcmlnaW5hbEV2ZW50WyBuYW1lIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9LFxuXG5cdFx0XHRzZXQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KCB0aGlzLCBuYW1lLCB7XG5cdFx0XHRcdFx0ZW51bWVyYWJsZTogdHJ1ZSxcblx0XHRcdFx0XHRjb25maWd1cmFibGU6IHRydWUsXG5cdFx0XHRcdFx0d3JpdGFibGU6IHRydWUsXG5cdFx0XHRcdFx0dmFsdWU6IHZhbHVlXG5cdFx0XHRcdH0gKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cblx0Zml4OiBmdW5jdGlvbiggb3JpZ2luYWxFdmVudCApIHtcblx0XHRyZXR1cm4gb3JpZ2luYWxFdmVudFsgalF1ZXJ5LmV4cGFuZG8gXSA/XG5cdFx0XHRvcmlnaW5hbEV2ZW50IDpcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoIG9yaWdpbmFsRXZlbnQgKTtcblx0fSxcblxuXHRzcGVjaWFsOiB7XG5cdFx0bG9hZDoge1xuXG5cdFx0XHQvLyBQcmV2ZW50IHRyaWdnZXJlZCBpbWFnZS5sb2FkIGV2ZW50cyBmcm9tIGJ1YmJsaW5nIHRvIHdpbmRvdy5sb2FkXG5cdFx0XHRub0J1YmJsZTogdHJ1ZVxuXHRcdH0sXG5cdFx0Zm9jdXM6IHtcblxuXHRcdFx0Ly8gRmlyZSBuYXRpdmUgZXZlbnQgaWYgcG9zc2libGUgc28gYmx1ci9mb2N1cyBzZXF1ZW5jZSBpcyBjb3JyZWN0XG5cdFx0XHR0cmlnZ2VyOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCB0aGlzICE9PSBzYWZlQWN0aXZlRWxlbWVudCgpICYmIHRoaXMuZm9jdXMgKSB7XG5cdFx0XHRcdFx0dGhpcy5mb2N1cygpO1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlbGVnYXRlVHlwZTogXCJmb2N1c2luXCJcblx0XHR9LFxuXHRcdGJsdXI6IHtcblx0XHRcdHRyaWdnZXI6IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRpZiAoIHRoaXMgPT09IHNhZmVBY3RpdmVFbGVtZW50KCkgJiYgdGhpcy5ibHVyICkge1xuXHRcdFx0XHRcdHRoaXMuYmx1cigpO1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblx0XHRcdGRlbGVnYXRlVHlwZTogXCJmb2N1c291dFwiXG5cdFx0fSxcblx0XHRjbGljazoge1xuXG5cdFx0XHQvLyBGb3IgY2hlY2tib3gsIGZpcmUgbmF0aXZlIGV2ZW50IHNvIGNoZWNrZWQgc3RhdGUgd2lsbCBiZSByaWdodFxuXHRcdFx0dHJpZ2dlcjogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggdGhpcy50eXBlID09PSBcImNoZWNrYm94XCIgJiYgdGhpcy5jbGljayAmJiBub2RlTmFtZSggdGhpcywgXCJpbnB1dFwiICkgKSB7XG5cdFx0XHRcdFx0dGhpcy5jbGljaygpO1xuXHRcdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdFx0fVxuXHRcdFx0fSxcblxuXHRcdFx0Ly8gRm9yIGNyb3NzLWJyb3dzZXIgY29uc2lzdGVuY3ksIGRvbid0IGZpcmUgbmF0aXZlIC5jbGljaygpIG9uIGxpbmtzXG5cdFx0XHRfZGVmYXVsdDogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0XHRyZXR1cm4gbm9kZU5hbWUoIGV2ZW50LnRhcmdldCwgXCJhXCIgKTtcblx0XHRcdH1cblx0XHR9LFxuXG5cdFx0YmVmb3JldW5sb2FkOiB7XG5cdFx0XHRwb3N0RGlzcGF0Y2g6IGZ1bmN0aW9uKCBldmVudCApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDIwK1xuXHRcdFx0XHQvLyBGaXJlZm94IGRvZXNuJ3QgYWxlcnQgaWYgdGhlIHJldHVyblZhbHVlIGZpZWxkIGlzIG5vdCBzZXQuXG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ICE9PSB1bmRlZmluZWQgJiYgZXZlbnQub3JpZ2luYWxFdmVudCApIHtcblx0XHRcdFx0XHRldmVudC5vcmlnaW5hbEV2ZW50LnJldHVyblZhbHVlID0gZXZlbnQucmVzdWx0O1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59O1xuXG5qUXVlcnkucmVtb3ZlRXZlbnQgPSBmdW5jdGlvbiggZWxlbSwgdHlwZSwgaGFuZGxlICkge1xuXG5cdC8vIFRoaXMgXCJpZlwiIGlzIG5lZWRlZCBmb3IgcGxhaW4gb2JqZWN0c1xuXHRpZiAoIGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciApIHtcblx0XHRlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIoIHR5cGUsIGhhbmRsZSApO1xuXHR9XG59O1xuXG5qUXVlcnkuRXZlbnQgPSBmdW5jdGlvbiggc3JjLCBwcm9wcyApIHtcblxuXHQvLyBBbGxvdyBpbnN0YW50aWF0aW9uIHdpdGhvdXQgdGhlICduZXcnIGtleXdvcmRcblx0aWYgKCAhKCB0aGlzIGluc3RhbmNlb2YgalF1ZXJ5LkV2ZW50ICkgKSB7XG5cdFx0cmV0dXJuIG5ldyBqUXVlcnkuRXZlbnQoIHNyYywgcHJvcHMgKTtcblx0fVxuXG5cdC8vIEV2ZW50IG9iamVjdFxuXHRpZiAoIHNyYyAmJiBzcmMudHlwZSApIHtcblx0XHR0aGlzLm9yaWdpbmFsRXZlbnQgPSBzcmM7XG5cdFx0dGhpcy50eXBlID0gc3JjLnR5cGU7XG5cblx0XHQvLyBFdmVudHMgYnViYmxpbmcgdXAgdGhlIGRvY3VtZW50IG1heSBoYXZlIGJlZW4gbWFya2VkIGFzIHByZXZlbnRlZFxuXHRcdC8vIGJ5IGEgaGFuZGxlciBsb3dlciBkb3duIHRoZSB0cmVlOyByZWZsZWN0IHRoZSBjb3JyZWN0IHZhbHVlLlxuXHRcdHRoaXMuaXNEZWZhdWx0UHJldmVudGVkID0gc3JjLmRlZmF1bHRQcmV2ZW50ZWQgfHxcblx0XHRcdFx0c3JjLmRlZmF1bHRQcmV2ZW50ZWQgPT09IHVuZGVmaW5lZCAmJlxuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD0yLjMgb25seVxuXHRcdFx0XHRzcmMucmV0dXJuVmFsdWUgPT09IGZhbHNlID9cblx0XHRcdHJldHVyblRydWUgOlxuXHRcdFx0cmV0dXJuRmFsc2U7XG5cblx0XHQvLyBDcmVhdGUgdGFyZ2V0IHByb3BlcnRpZXNcblx0XHQvLyBTdXBwb3J0OiBTYWZhcmkgPD02IC0gNyBvbmx5XG5cdFx0Ly8gVGFyZ2V0IHNob3VsZCBub3QgYmUgYSB0ZXh0IG5vZGUgKCM1MDQsICMxMzE0Mylcblx0XHR0aGlzLnRhcmdldCA9ICggc3JjLnRhcmdldCAmJiBzcmMudGFyZ2V0Lm5vZGVUeXBlID09PSAzICkgP1xuXHRcdFx0c3JjLnRhcmdldC5wYXJlbnROb2RlIDpcblx0XHRcdHNyYy50YXJnZXQ7XG5cblx0XHR0aGlzLmN1cnJlbnRUYXJnZXQgPSBzcmMuY3VycmVudFRhcmdldDtcblx0XHR0aGlzLnJlbGF0ZWRUYXJnZXQgPSBzcmMucmVsYXRlZFRhcmdldDtcblxuXHQvLyBFdmVudCB0eXBlXG5cdH0gZWxzZSB7XG5cdFx0dGhpcy50eXBlID0gc3JjO1xuXHR9XG5cblx0Ly8gUHV0IGV4cGxpY2l0bHkgcHJvdmlkZWQgcHJvcGVydGllcyBvbnRvIHRoZSBldmVudCBvYmplY3Rcblx0aWYgKCBwcm9wcyApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0aGlzLCBwcm9wcyApO1xuXHR9XG5cblx0Ly8gQ3JlYXRlIGEgdGltZXN0YW1wIGlmIGluY29taW5nIGV2ZW50IGRvZXNuJ3QgaGF2ZSBvbmVcblx0dGhpcy50aW1lU3RhbXAgPSBzcmMgJiYgc3JjLnRpbWVTdGFtcCB8fCBEYXRlLm5vdygpO1xuXG5cdC8vIE1hcmsgaXQgYXMgZml4ZWRcblx0dGhpc1sgalF1ZXJ5LmV4cGFuZG8gXSA9IHRydWU7XG59O1xuXG4vLyBqUXVlcnkuRXZlbnQgaXMgYmFzZWQgb24gRE9NMyBFdmVudHMgYXMgc3BlY2lmaWVkIGJ5IHRoZSBFQ01BU2NyaXB0IExhbmd1YWdlIEJpbmRpbmdcbi8vIGh0dHBzOi8vd3d3LnczLm9yZy9UUi8yMDAzL1dELURPTS1MZXZlbC0zLUV2ZW50cy0yMDAzMDMzMS9lY21hLXNjcmlwdC1iaW5kaW5nLmh0bWxcbmpRdWVyeS5FdmVudC5wcm90b3R5cGUgPSB7XG5cdGNvbnN0cnVjdG9yOiBqUXVlcnkuRXZlbnQsXG5cdGlzRGVmYXVsdFByZXZlbnRlZDogcmV0dXJuRmFsc2UsXG5cdGlzUHJvcGFnYXRpb25TdG9wcGVkOiByZXR1cm5GYWxzZSxcblx0aXNJbW1lZGlhdGVQcm9wYWdhdGlvblN0b3BwZWQ6IHJldHVybkZhbHNlLFxuXHRpc1NpbXVsYXRlZDogZmFsc2UsXG5cblx0cHJldmVudERlZmF1bHQ6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBlID0gdGhpcy5vcmlnaW5hbEV2ZW50O1xuXG5cdFx0dGhpcy5pc0RlZmF1bHRQcmV2ZW50ZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdH1cblx0fSxcblx0c3RvcFByb3BhZ2F0aW9uOiBmdW5jdGlvbigpIHtcblx0XHR2YXIgZSA9IHRoaXMub3JpZ2luYWxFdmVudDtcblxuXHRcdHRoaXMuaXNQcm9wYWdhdGlvblN0b3BwZWQgPSByZXR1cm5UcnVlO1xuXG5cdFx0aWYgKCBlICYmICF0aGlzLmlzU2ltdWxhdGVkICkge1xuXHRcdFx0ZS5zdG9wUHJvcGFnYXRpb24oKTtcblx0XHR9XG5cdH0sXG5cdHN0b3BJbW1lZGlhdGVQcm9wYWdhdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGUgPSB0aGlzLm9yaWdpbmFsRXZlbnQ7XG5cblx0XHR0aGlzLmlzSW1tZWRpYXRlUHJvcGFnYXRpb25TdG9wcGVkID0gcmV0dXJuVHJ1ZTtcblxuXHRcdGlmICggZSAmJiAhdGhpcy5pc1NpbXVsYXRlZCApIHtcblx0XHRcdGUuc3RvcEltbWVkaWF0ZVByb3BhZ2F0aW9uKCk7XG5cdFx0fVxuXG5cdFx0dGhpcy5zdG9wUHJvcGFnYXRpb24oKTtcblx0fVxufTtcblxuLy8gSW5jbHVkZXMgYWxsIGNvbW1vbiBldmVudCBwcm9wcyBpbmNsdWRpbmcgS2V5RXZlbnQgYW5kIE1vdXNlRXZlbnQgc3BlY2lmaWMgcHJvcHNcbmpRdWVyeS5lYWNoKCB7XG5cdGFsdEtleTogdHJ1ZSxcblx0YnViYmxlczogdHJ1ZSxcblx0Y2FuY2VsYWJsZTogdHJ1ZSxcblx0Y2hhbmdlZFRvdWNoZXM6IHRydWUsXG5cdGN0cmxLZXk6IHRydWUsXG5cdGRldGFpbDogdHJ1ZSxcblx0ZXZlbnRQaGFzZTogdHJ1ZSxcblx0bWV0YUtleTogdHJ1ZSxcblx0cGFnZVg6IHRydWUsXG5cdHBhZ2VZOiB0cnVlLFxuXHRzaGlmdEtleTogdHJ1ZSxcblx0dmlldzogdHJ1ZSxcblx0XCJjaGFyXCI6IHRydWUsXG5cdGNoYXJDb2RlOiB0cnVlLFxuXHRrZXk6IHRydWUsXG5cdGtleUNvZGU6IHRydWUsXG5cdGJ1dHRvbjogdHJ1ZSxcblx0YnV0dG9uczogdHJ1ZSxcblx0Y2xpZW50WDogdHJ1ZSxcblx0Y2xpZW50WTogdHJ1ZSxcblx0b2Zmc2V0WDogdHJ1ZSxcblx0b2Zmc2V0WTogdHJ1ZSxcblx0cG9pbnRlcklkOiB0cnVlLFxuXHRwb2ludGVyVHlwZTogdHJ1ZSxcblx0c2NyZWVuWDogdHJ1ZSxcblx0c2NyZWVuWTogdHJ1ZSxcblx0dGFyZ2V0VG91Y2hlczogdHJ1ZSxcblx0dG9FbGVtZW50OiB0cnVlLFxuXHR0b3VjaGVzOiB0cnVlLFxuXG5cdHdoaWNoOiBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0dmFyIGJ1dHRvbiA9IGV2ZW50LmJ1dHRvbjtcblxuXHRcdC8vIEFkZCB3aGljaCBmb3Iga2V5IGV2ZW50c1xuXHRcdGlmICggZXZlbnQud2hpY2ggPT0gbnVsbCAmJiBya2V5RXZlbnQudGVzdCggZXZlbnQudHlwZSApICkge1xuXHRcdFx0cmV0dXJuIGV2ZW50LmNoYXJDb2RlICE9IG51bGwgPyBldmVudC5jaGFyQ29kZSA6IGV2ZW50LmtleUNvZGU7XG5cdFx0fVxuXG5cdFx0Ly8gQWRkIHdoaWNoIGZvciBjbGljazogMSA9PT0gbGVmdDsgMiA9PT0gbWlkZGxlOyAzID09PSByaWdodFxuXHRcdGlmICggIWV2ZW50LndoaWNoICYmIGJ1dHRvbiAhPT0gdW5kZWZpbmVkICYmIHJtb3VzZUV2ZW50LnRlc3QoIGV2ZW50LnR5cGUgKSApIHtcblx0XHRcdGlmICggYnV0dG9uICYgMSApIHtcblx0XHRcdFx0cmV0dXJuIDE7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggYnV0dG9uICYgMiApIHtcblx0XHRcdFx0cmV0dXJuIDM7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggYnV0dG9uICYgNCApIHtcblx0XHRcdFx0cmV0dXJuIDI7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiAwO1xuXHRcdH1cblxuXHRcdHJldHVybiBldmVudC53aGljaDtcblx0fVxufSwgalF1ZXJ5LmV2ZW50LmFkZFByb3AgKTtcblxuLy8gQ3JlYXRlIG1vdXNlZW50ZXIvbGVhdmUgZXZlbnRzIHVzaW5nIG1vdXNlb3Zlci9vdXQgYW5kIGV2ZW50LXRpbWUgY2hlY2tzXG4vLyBzbyB0aGF0IGV2ZW50IGRlbGVnYXRpb24gd29ya3MgaW4galF1ZXJ5LlxuLy8gRG8gdGhlIHNhbWUgZm9yIHBvaW50ZXJlbnRlci9wb2ludGVybGVhdmUgYW5kIHBvaW50ZXJvdmVyL3BvaW50ZXJvdXRcbi8vXG4vLyBTdXBwb3J0OiBTYWZhcmkgNyBvbmx5XG4vLyBTYWZhcmkgc2VuZHMgbW91c2VlbnRlciB0b28gb2Z0ZW47IHNlZTpcbi8vIGh0dHBzOi8vYnVncy5jaHJvbWl1bS5vcmcvcC9jaHJvbWl1bS9pc3N1ZXMvZGV0YWlsP2lkPTQ3MDI1OFxuLy8gZm9yIHRoZSBkZXNjcmlwdGlvbiBvZiB0aGUgYnVnIChpdCBleGlzdGVkIGluIG9sZGVyIENocm9tZSB2ZXJzaW9ucyBhcyB3ZWxsKS5cbmpRdWVyeS5lYWNoKCB7XG5cdG1vdXNlZW50ZXI6IFwibW91c2VvdmVyXCIsXG5cdG1vdXNlbGVhdmU6IFwibW91c2VvdXRcIixcblx0cG9pbnRlcmVudGVyOiBcInBvaW50ZXJvdmVyXCIsXG5cdHBvaW50ZXJsZWF2ZTogXCJwb2ludGVyb3V0XCJcbn0sIGZ1bmN0aW9uKCBvcmlnLCBmaXggKSB7XG5cdGpRdWVyeS5ldmVudC5zcGVjaWFsWyBvcmlnIF0gPSB7XG5cdFx0ZGVsZWdhdGVUeXBlOiBmaXgsXG5cdFx0YmluZFR5cGU6IGZpeCxcblxuXHRcdGhhbmRsZTogZnVuY3Rpb24oIGV2ZW50ICkge1xuXHRcdFx0dmFyIHJldCxcblx0XHRcdFx0dGFyZ2V0ID0gdGhpcyxcblx0XHRcdFx0cmVsYXRlZCA9IGV2ZW50LnJlbGF0ZWRUYXJnZXQsXG5cdFx0XHRcdGhhbmRsZU9iaiA9IGV2ZW50LmhhbmRsZU9iajtcblxuXHRcdFx0Ly8gRm9yIG1vdXNlZW50ZXIvbGVhdmUgY2FsbCB0aGUgaGFuZGxlciBpZiByZWxhdGVkIGlzIG91dHNpZGUgdGhlIHRhcmdldC5cblx0XHRcdC8vIE5COiBObyByZWxhdGVkVGFyZ2V0IGlmIHRoZSBtb3VzZSBsZWZ0L2VudGVyZWQgdGhlIGJyb3dzZXIgd2luZG93XG5cdFx0XHRpZiAoICFyZWxhdGVkIHx8ICggcmVsYXRlZCAhPT0gdGFyZ2V0ICYmICFqUXVlcnkuY29udGFpbnMoIHRhcmdldCwgcmVsYXRlZCApICkgKSB7XG5cdFx0XHRcdGV2ZW50LnR5cGUgPSBoYW5kbGVPYmoub3JpZ1R5cGU7XG5cdFx0XHRcdHJldCA9IGhhbmRsZU9iai5oYW5kbGVyLmFwcGx5KCB0aGlzLCBhcmd1bWVudHMgKTtcblx0XHRcdFx0ZXZlbnQudHlwZSA9IGZpeDtcblx0XHRcdH1cblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXHR9O1xufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cblx0b246IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiApO1xuXHR9LFxuXHRvbmU6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiBvbiggdGhpcywgdHlwZXMsIHNlbGVjdG9yLCBkYXRhLCBmbiwgMSApO1xuXHR9LFxuXHRvZmY6IGZ1bmN0aW9uKCB0eXBlcywgc2VsZWN0b3IsIGZuICkge1xuXHRcdHZhciBoYW5kbGVPYmosIHR5cGU7XG5cdFx0aWYgKCB0eXBlcyAmJiB0eXBlcy5wcmV2ZW50RGVmYXVsdCAmJiB0eXBlcy5oYW5kbGVPYmogKSB7XG5cblx0XHRcdC8vICggZXZlbnQgKSAgZGlzcGF0Y2hlZCBqUXVlcnkuRXZlbnRcblx0XHRcdGhhbmRsZU9iaiA9IHR5cGVzLmhhbmRsZU9iajtcblx0XHRcdGpRdWVyeSggdHlwZXMuZGVsZWdhdGVUYXJnZXQgKS5vZmYoXG5cdFx0XHRcdGhhbmRsZU9iai5uYW1lc3BhY2UgP1xuXHRcdFx0XHRcdGhhbmRsZU9iai5vcmlnVHlwZSArIFwiLlwiICsgaGFuZGxlT2JqLm5hbWVzcGFjZSA6XG5cdFx0XHRcdFx0aGFuZGxlT2JqLm9yaWdUeXBlLFxuXHRcdFx0XHRoYW5kbGVPYmouc2VsZWN0b3IsXG5cdFx0XHRcdGhhbmRsZU9iai5oYW5kbGVyXG5cdFx0XHQpO1xuXHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0fVxuXHRcdGlmICggdHlwZW9mIHR5cGVzID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0XHQvLyAoIHR5cGVzLW9iamVjdCBbLCBzZWxlY3Rvcl0gKVxuXHRcdFx0Zm9yICggdHlwZSBpbiB0eXBlcyApIHtcblx0XHRcdFx0dGhpcy5vZmYoIHR5cGUsIHNlbGVjdG9yLCB0eXBlc1sgdHlwZSBdICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gdGhpcztcblx0XHR9XG5cdFx0aWYgKCBzZWxlY3RvciA9PT0gZmFsc2UgfHwgdHlwZW9mIHNlbGVjdG9yID09PSBcImZ1bmN0aW9uXCIgKSB7XG5cblx0XHRcdC8vICggdHlwZXMgWywgZm5dIClcblx0XHRcdGZuID0gc2VsZWN0b3I7XG5cdFx0XHRzZWxlY3RvciA9IHVuZGVmaW5lZDtcblx0XHR9XG5cdFx0aWYgKCBmbiA9PT0gZmFsc2UgKSB7XG5cdFx0XHRmbiA9IHJldHVybkZhbHNlO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGpRdWVyeS5ldmVudC5yZW1vdmUoIHRoaXMsIHR5cGVzLCBmbiwgc2VsZWN0b3IgKTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxuXG52YXJcblxuXHQvKiBlc2xpbnQtZGlzYWJsZSBtYXgtbGVuICovXG5cblx0Ly8gU2VlIGh0dHBzOi8vZ2l0aHViLmNvbS9lc2xpbnQvZXNsaW50L2lzc3Vlcy8zMjI5XG5cdHJ4aHRtbFRhZyA9IC88KD8hYXJlYXxicnxjb2x8ZW1iZWR8aHJ8aW1nfGlucHV0fGxpbmt8bWV0YXxwYXJhbSkoKFthLXpdW15cXC9cXDA+XFx4MjBcXHRcXHJcXG5cXGZdKilbXj5dKilcXC8+L2dpLFxuXG5cdC8qIGVzbGludC1lbmFibGUgKi9cblxuXHQvLyBTdXBwb3J0OiBJRSA8PTEwIC0gMTEsIEVkZ2UgMTIgLSAxMyBvbmx5XG5cdC8vIEluIElFL0VkZ2UgdXNpbmcgcmVnZXggZ3JvdXBzIGhlcmUgY2F1c2VzIHNldmVyZSBzbG93ZG93bnMuXG5cdC8vIFNlZSBodHRwczovL2Nvbm5lY3QubWljcm9zb2Z0LmNvbS9JRS9mZWVkYmFjay9kZXRhaWxzLzE3MzY1MTIvXG5cdHJub0lubmVyaHRtbCA9IC88c2NyaXB0fDxzdHlsZXw8bGluay9pLFxuXG5cdC8vIGNoZWNrZWQ9XCJjaGVja2VkXCIgb3IgY2hlY2tlZFxuXHRyY2hlY2tlZCA9IC9jaGVja2VkXFxzKig/OltePV18PVxccyouY2hlY2tlZC4pL2ksXG5cdHJjbGVhblNjcmlwdCA9IC9eXFxzKjwhKD86XFxbQ0RBVEFcXFt8LS0pfCg/OlxcXVxcXXwtLSk+XFxzKiQvZztcblxuLy8gUHJlZmVyIGEgdGJvZHkgb3ZlciBpdHMgcGFyZW50IHRhYmxlIGZvciBjb250YWluaW5nIG5ldyByb3dzXG5mdW5jdGlvbiBtYW5pcHVsYXRpb25UYXJnZXQoIGVsZW0sIGNvbnRlbnQgKSB7XG5cdGlmICggbm9kZU5hbWUoIGVsZW0sIFwidGFibGVcIiApICYmXG5cdFx0bm9kZU5hbWUoIGNvbnRlbnQubm9kZVR5cGUgIT09IDExID8gY29udGVudCA6IGNvbnRlbnQuZmlyc3RDaGlsZCwgXCJ0clwiICkgKSB7XG5cblx0XHRyZXR1cm4galF1ZXJ5KCBlbGVtICkuY2hpbGRyZW4oIFwidGJvZHlcIiApWyAwIF0gfHwgZWxlbTtcblx0fVxuXG5cdHJldHVybiBlbGVtO1xufVxuXG4vLyBSZXBsYWNlL3Jlc3RvcmUgdGhlIHR5cGUgYXR0cmlidXRlIG9mIHNjcmlwdCBlbGVtZW50cyBmb3Igc2FmZSBET00gbWFuaXB1bGF0aW9uXG5mdW5jdGlvbiBkaXNhYmxlU2NyaXB0KCBlbGVtICkge1xuXHRlbGVtLnR5cGUgPSAoIGVsZW0uZ2V0QXR0cmlidXRlKCBcInR5cGVcIiApICE9PSBudWxsICkgKyBcIi9cIiArIGVsZW0udHlwZTtcblx0cmV0dXJuIGVsZW07XG59XG5mdW5jdGlvbiByZXN0b3JlU2NyaXB0KCBlbGVtICkge1xuXHRpZiAoICggZWxlbS50eXBlIHx8IFwiXCIgKS5zbGljZSggMCwgNSApID09PSBcInRydWUvXCIgKSB7XG5cdFx0ZWxlbS50eXBlID0gZWxlbS50eXBlLnNsaWNlKCA1ICk7XG5cdH0gZWxzZSB7XG5cdFx0ZWxlbS5yZW1vdmVBdHRyaWJ1dGUoIFwidHlwZVwiICk7XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxuZnVuY3Rpb24gY2xvbmVDb3B5RXZlbnQoIHNyYywgZGVzdCApIHtcblx0dmFyIGksIGwsIHR5cGUsIHBkYXRhT2xkLCBwZGF0YUN1ciwgdWRhdGFPbGQsIHVkYXRhQ3VyLCBldmVudHM7XG5cblx0aWYgKCBkZXN0Lm5vZGVUeXBlICE9PSAxICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIDEuIENvcHkgcHJpdmF0ZSBkYXRhOiBldmVudHMsIGhhbmRsZXJzLCBldGMuXG5cdGlmICggZGF0YVByaXYuaGFzRGF0YSggc3JjICkgKSB7XG5cdFx0cGRhdGFPbGQgPSBkYXRhUHJpdi5hY2Nlc3MoIHNyYyApO1xuXHRcdHBkYXRhQ3VyID0gZGF0YVByaXYuc2V0KCBkZXN0LCBwZGF0YU9sZCApO1xuXHRcdGV2ZW50cyA9IHBkYXRhT2xkLmV2ZW50cztcblxuXHRcdGlmICggZXZlbnRzICkge1xuXHRcdFx0ZGVsZXRlIHBkYXRhQ3VyLmhhbmRsZTtcblx0XHRcdHBkYXRhQ3VyLmV2ZW50cyA9IHt9O1xuXG5cdFx0XHRmb3IgKCB0eXBlIGluIGV2ZW50cyApIHtcblx0XHRcdFx0Zm9yICggaSA9IDAsIGwgPSBldmVudHNbIHR5cGUgXS5sZW5ndGg7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LmFkZCggZGVzdCwgdHlwZSwgZXZlbnRzWyB0eXBlIF1bIGkgXSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gMi4gQ29weSB1c2VyIGRhdGFcblx0aWYgKCBkYXRhVXNlci5oYXNEYXRhKCBzcmMgKSApIHtcblx0XHR1ZGF0YU9sZCA9IGRhdGFVc2VyLmFjY2Vzcyggc3JjICk7XG5cdFx0dWRhdGFDdXIgPSBqUXVlcnkuZXh0ZW5kKCB7fSwgdWRhdGFPbGQgKTtcblxuXHRcdGRhdGFVc2VyLnNldCggZGVzdCwgdWRhdGFDdXIgKTtcblx0fVxufVxuXG4vLyBGaXggSUUgYnVncywgc2VlIHN1cHBvcnQgdGVzdHNcbmZ1bmN0aW9uIGZpeElucHV0KCBzcmMsIGRlc3QgKSB7XG5cdHZhciBub2RlTmFtZSA9IGRlc3Qubm9kZU5hbWUudG9Mb3dlckNhc2UoKTtcblxuXHQvLyBGYWlscyB0byBwZXJzaXN0IHRoZSBjaGVja2VkIHN0YXRlIG9mIGEgY2xvbmVkIGNoZWNrYm94IG9yIHJhZGlvIGJ1dHRvbi5cblx0aWYgKCBub2RlTmFtZSA9PT0gXCJpbnB1dFwiICYmIHJjaGVja2FibGVUeXBlLnRlc3QoIHNyYy50eXBlICkgKSB7XG5cdFx0ZGVzdC5jaGVja2VkID0gc3JjLmNoZWNrZWQ7XG5cblx0Ly8gRmFpbHMgdG8gcmV0dXJuIHRoZSBzZWxlY3RlZCBvcHRpb24gdG8gdGhlIGRlZmF1bHQgc2VsZWN0ZWQgc3RhdGUgd2hlbiBjbG9uaW5nIG9wdGlvbnNcblx0fSBlbHNlIGlmICggbm9kZU5hbWUgPT09IFwiaW5wdXRcIiB8fCBub2RlTmFtZSA9PT0gXCJ0ZXh0YXJlYVwiICkge1xuXHRcdGRlc3QuZGVmYXVsdFZhbHVlID0gc3JjLmRlZmF1bHRWYWx1ZTtcblx0fVxufVxuXG5mdW5jdGlvbiBkb21NYW5pcCggY29sbGVjdGlvbiwgYXJncywgY2FsbGJhY2ssIGlnbm9yZWQgKSB7XG5cblx0Ly8gRmxhdHRlbiBhbnkgbmVzdGVkIGFycmF5c1xuXHRhcmdzID0gY29uY2F0LmFwcGx5KCBbXSwgYXJncyApO1xuXG5cdHZhciBmcmFnbWVudCwgZmlyc3QsIHNjcmlwdHMsIGhhc1NjcmlwdHMsIG5vZGUsIGRvYyxcblx0XHRpID0gMCxcblx0XHRsID0gY29sbGVjdGlvbi5sZW5ndGgsXG5cdFx0aU5vQ2xvbmUgPSBsIC0gMSxcblx0XHR2YWx1ZSA9IGFyZ3NbIDAgXSxcblx0XHR2YWx1ZUlzRnVuY3Rpb24gPSBpc0Z1bmN0aW9uKCB2YWx1ZSApO1xuXG5cdC8vIFdlIGNhbid0IGNsb25lTm9kZSBmcmFnbWVudHMgdGhhdCBjb250YWluIGNoZWNrZWQsIGluIFdlYktpdFxuXHRpZiAoIHZhbHVlSXNGdW5jdGlvbiB8fFxuXHRcdFx0KCBsID4gMSAmJiB0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgJiZcblx0XHRcdFx0IXN1cHBvcnQuY2hlY2tDbG9uZSAmJiByY2hlY2tlZC50ZXN0KCB2YWx1ZSApICkgKSB7XG5cdFx0cmV0dXJuIGNvbGxlY3Rpb24uZWFjaCggZnVuY3Rpb24oIGluZGV4ICkge1xuXHRcdFx0dmFyIHNlbGYgPSBjb2xsZWN0aW9uLmVxKCBpbmRleCApO1xuXHRcdFx0aWYgKCB2YWx1ZUlzRnVuY3Rpb24gKSB7XG5cdFx0XHRcdGFyZ3NbIDAgXSA9IHZhbHVlLmNhbGwoIHRoaXMsIGluZGV4LCBzZWxmLmh0bWwoKSApO1xuXHRcdFx0fVxuXHRcdFx0ZG9tTWFuaXAoIHNlbGYsIGFyZ3MsIGNhbGxiYWNrLCBpZ25vcmVkICk7XG5cdFx0fSApO1xuXHR9XG5cblx0aWYgKCBsICkge1xuXHRcdGZyYWdtZW50ID0gYnVpbGRGcmFnbWVudCggYXJncywgY29sbGVjdGlvblsgMCBdLm93bmVyRG9jdW1lbnQsIGZhbHNlLCBjb2xsZWN0aW9uLCBpZ25vcmVkICk7XG5cdFx0Zmlyc3QgPSBmcmFnbWVudC5maXJzdENoaWxkO1xuXG5cdFx0aWYgKCBmcmFnbWVudC5jaGlsZE5vZGVzLmxlbmd0aCA9PT0gMSApIHtcblx0XHRcdGZyYWdtZW50ID0gZmlyc3Q7XG5cdFx0fVxuXG5cdFx0Ly8gUmVxdWlyZSBlaXRoZXIgbmV3IGNvbnRlbnQgb3IgYW4gaW50ZXJlc3QgaW4gaWdub3JlZCBlbGVtZW50cyB0byBpbnZva2UgdGhlIGNhbGxiYWNrXG5cdFx0aWYgKCBmaXJzdCB8fCBpZ25vcmVkICkge1xuXHRcdFx0c2NyaXB0cyA9IGpRdWVyeS5tYXAoIGdldEFsbCggZnJhZ21lbnQsIFwic2NyaXB0XCIgKSwgZGlzYWJsZVNjcmlwdCApO1xuXHRcdFx0aGFzU2NyaXB0cyA9IHNjcmlwdHMubGVuZ3RoO1xuXG5cdFx0XHQvLyBVc2UgdGhlIG9yaWdpbmFsIGZyYWdtZW50IGZvciB0aGUgbGFzdCBpdGVtXG5cdFx0XHQvLyBpbnN0ZWFkIG9mIHRoZSBmaXJzdCBiZWNhdXNlIGl0IGNhbiBlbmQgdXBcblx0XHRcdC8vIGJlaW5nIGVtcHRpZWQgaW5jb3JyZWN0bHkgaW4gY2VydGFpbiBzaXR1YXRpb25zICgjODA3MCkuXG5cdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdG5vZGUgPSBmcmFnbWVudDtcblxuXHRcdFx0XHRpZiAoIGkgIT09IGlOb0Nsb25lICkge1xuXHRcdFx0XHRcdG5vZGUgPSBqUXVlcnkuY2xvbmUoIG5vZGUsIHRydWUsIHRydWUgKTtcblxuXHRcdFx0XHRcdC8vIEtlZXAgcmVmZXJlbmNlcyB0byBjbG9uZWQgc2NyaXB0cyBmb3IgbGF0ZXIgcmVzdG9yYXRpb25cblx0XHRcdFx0XHRpZiAoIGhhc1NjcmlwdHMgKSB7XG5cblx0XHRcdFx0XHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjAgb25seSwgUGhhbnRvbUpTIDEgb25seVxuXHRcdFx0XHRcdFx0Ly8gcHVzaC5hcHBseShfLCBhcnJheWxpa2UpIHRocm93cyBvbiBhbmNpZW50IFdlYktpdFxuXHRcdFx0XHRcdFx0alF1ZXJ5Lm1lcmdlKCBzY3JpcHRzLCBnZXRBbGwoIG5vZGUsIFwic2NyaXB0XCIgKSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXG5cdFx0XHRcdGNhbGxiYWNrLmNhbGwoIGNvbGxlY3Rpb25bIGkgXSwgbm9kZSwgaSApO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGhhc1NjcmlwdHMgKSB7XG5cdFx0XHRcdGRvYyA9IHNjcmlwdHNbIHNjcmlwdHMubGVuZ3RoIC0gMSBdLm93bmVyRG9jdW1lbnQ7XG5cblx0XHRcdFx0Ly8gUmVlbmFibGUgc2NyaXB0c1xuXHRcdFx0XHRqUXVlcnkubWFwKCBzY3JpcHRzLCByZXN0b3JlU2NyaXB0ICk7XG5cblx0XHRcdFx0Ly8gRXZhbHVhdGUgZXhlY3V0YWJsZSBzY3JpcHRzIG9uIGZpcnN0IGRvY3VtZW50IGluc2VydGlvblxuXHRcdFx0XHRmb3IgKCBpID0gMDsgaSA8IGhhc1NjcmlwdHM7IGkrKyApIHtcblx0XHRcdFx0XHRub2RlID0gc2NyaXB0c1sgaSBdO1xuXHRcdFx0XHRcdGlmICggcnNjcmlwdFR5cGUudGVzdCggbm9kZS50eXBlIHx8IFwiXCIgKSAmJlxuXHRcdFx0XHRcdFx0IWRhdGFQcml2LmFjY2Vzcyggbm9kZSwgXCJnbG9iYWxFdmFsXCIgKSAmJlxuXHRcdFx0XHRcdFx0alF1ZXJ5LmNvbnRhaW5zKCBkb2MsIG5vZGUgKSApIHtcblxuXHRcdFx0XHRcdFx0aWYgKCBub2RlLnNyYyAmJiAoIG5vZGUudHlwZSB8fCBcIlwiICkudG9Mb3dlckNhc2UoKSAgIT09IFwibW9kdWxlXCIgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gT3B0aW9uYWwgQUpBWCBkZXBlbmRlbmN5LCBidXQgd29uJ3QgcnVuIHNjcmlwdHMgaWYgbm90IHByZXNlbnRcblx0XHRcdFx0XHRcdFx0aWYgKCBqUXVlcnkuX2V2YWxVcmwgKSB7XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5Ll9ldmFsVXJsKCBub2RlLnNyYyApO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0XHRET01FdmFsKCBub2RlLnRleHRDb250ZW50LnJlcGxhY2UoIHJjbGVhblNjcmlwdCwgXCJcIiApLCBkb2MsIG5vZGUgKTtcblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gY29sbGVjdGlvbjtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlKCBlbGVtLCBzZWxlY3Rvciwga2VlcERhdGEgKSB7XG5cdHZhciBub2RlLFxuXHRcdG5vZGVzID0gc2VsZWN0b3IgPyBqUXVlcnkuZmlsdGVyKCBzZWxlY3RvciwgZWxlbSApIDogZWxlbSxcblx0XHRpID0gMDtcblxuXHRmb3IgKCA7ICggbm9kZSA9IG5vZGVzWyBpIF0gKSAhPSBudWxsOyBpKysgKSB7XG5cdFx0aWYgKCAha2VlcERhdGEgJiYgbm9kZS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggbm9kZSApICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBub2RlLnBhcmVudE5vZGUgKSB7XG5cdFx0XHRpZiAoIGtlZXBEYXRhICYmIGpRdWVyeS5jb250YWlucyggbm9kZS5vd25lckRvY3VtZW50LCBub2RlICkgKSB7XG5cdFx0XHRcdHNldEdsb2JhbEV2YWwoIGdldEFsbCggbm9kZSwgXCJzY3JpcHRcIiApICk7XG5cdFx0XHR9XG5cdFx0XHRub2RlLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoIG5vZGUgKTtcblx0XHR9XG5cdH1cblxuXHRyZXR1cm4gZWxlbTtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXHRodG1sUHJlZmlsdGVyOiBmdW5jdGlvbiggaHRtbCApIHtcblx0XHRyZXR1cm4gaHRtbC5yZXBsYWNlKCByeGh0bWxUYWcsIFwiPCQxPjwvJDI+XCIgKTtcblx0fSxcblxuXHRjbG9uZTogZnVuY3Rpb24oIGVsZW0sIGRhdGFBbmRFdmVudHMsIGRlZXBEYXRhQW5kRXZlbnRzICkge1xuXHRcdHZhciBpLCBsLCBzcmNFbGVtZW50cywgZGVzdEVsZW1lbnRzLFxuXHRcdFx0Y2xvbmUgPSBlbGVtLmNsb25lTm9kZSggdHJ1ZSApLFxuXHRcdFx0aW5QYWdlID0galF1ZXJ5LmNvbnRhaW5zKCBlbGVtLm93bmVyRG9jdW1lbnQsIGVsZW0gKTtcblxuXHRcdC8vIEZpeCBJRSBjbG9uaW5nIGlzc3Vlc1xuXHRcdGlmICggIXN1cHBvcnQubm9DbG9uZUNoZWNrZWQgJiYgKCBlbGVtLm5vZGVUeXBlID09PSAxIHx8IGVsZW0ubm9kZVR5cGUgPT09IDExICkgJiZcblx0XHRcdFx0IWpRdWVyeS5pc1hNTERvYyggZWxlbSApICkge1xuXG5cdFx0XHQvLyBXZSBlc2NoZXcgU2l6emxlIGhlcmUgZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnM6IGh0dHBzOi8vanNwZXJmLmNvbS9nZXRhbGwtdnMtc2l6emxlLzJcblx0XHRcdGRlc3RFbGVtZW50cyA9IGdldEFsbCggY2xvbmUgKTtcblx0XHRcdHNyY0VsZW1lbnRzID0gZ2V0QWxsKCBlbGVtICk7XG5cblx0XHRcdGZvciAoIGkgPSAwLCBsID0gc3JjRWxlbWVudHMubGVuZ3RoOyBpIDwgbDsgaSsrICkge1xuXHRcdFx0XHRmaXhJbnB1dCggc3JjRWxlbWVudHNbIGkgXSwgZGVzdEVsZW1lbnRzWyBpIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBDb3B5IHRoZSBldmVudHMgZnJvbSB0aGUgb3JpZ2luYWwgdG8gdGhlIGNsb25lXG5cdFx0aWYgKCBkYXRhQW5kRXZlbnRzICkge1xuXHRcdFx0aWYgKCBkZWVwRGF0YUFuZEV2ZW50cyApIHtcblx0XHRcdFx0c3JjRWxlbWVudHMgPSBzcmNFbGVtZW50cyB8fCBnZXRBbGwoIGVsZW0gKTtcblx0XHRcdFx0ZGVzdEVsZW1lbnRzID0gZGVzdEVsZW1lbnRzIHx8IGdldEFsbCggY2xvbmUgKTtcblxuXHRcdFx0XHRmb3IgKCBpID0gMCwgbCA9IHNyY0VsZW1lbnRzLmxlbmd0aDsgaSA8IGw7IGkrKyApIHtcblx0XHRcdFx0XHRjbG9uZUNvcHlFdmVudCggc3JjRWxlbWVudHNbIGkgXSwgZGVzdEVsZW1lbnRzWyBpIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Y2xvbmVDb3B5RXZlbnQoIGVsZW0sIGNsb25lICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gUHJlc2VydmUgc2NyaXB0IGV2YWx1YXRpb24gaGlzdG9yeVxuXHRcdGRlc3RFbGVtZW50cyA9IGdldEFsbCggY2xvbmUsIFwic2NyaXB0XCIgKTtcblx0XHRpZiAoIGRlc3RFbGVtZW50cy5sZW5ndGggPiAwICkge1xuXHRcdFx0c2V0R2xvYmFsRXZhbCggZGVzdEVsZW1lbnRzLCAhaW5QYWdlICYmIGdldEFsbCggZWxlbSwgXCJzY3JpcHRcIiApICk7XG5cdFx0fVxuXG5cdFx0Ly8gUmV0dXJuIHRoZSBjbG9uZWQgc2V0XG5cdFx0cmV0dXJuIGNsb25lO1xuXHR9LFxuXG5cdGNsZWFuRGF0YTogZnVuY3Rpb24oIGVsZW1zICkge1xuXHRcdHZhciBkYXRhLCBlbGVtLCB0eXBlLFxuXHRcdFx0c3BlY2lhbCA9IGpRdWVyeS5ldmVudC5zcGVjaWFsLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRmb3IgKCA7ICggZWxlbSA9IGVsZW1zWyBpIF0gKSAhPT0gdW5kZWZpbmVkOyBpKysgKSB7XG5cdFx0XHRpZiAoIGFjY2VwdERhdGEoIGVsZW0gKSApIHtcblx0XHRcdFx0aWYgKCAoIGRhdGEgPSBlbGVtWyBkYXRhUHJpdi5leHBhbmRvIF0gKSApIHtcblx0XHRcdFx0XHRpZiAoIGRhdGEuZXZlbnRzICkge1xuXHRcdFx0XHRcdFx0Zm9yICggdHlwZSBpbiBkYXRhLmV2ZW50cyApIHtcblx0XHRcdFx0XHRcdFx0aWYgKCBzcGVjaWFsWyB0eXBlIF0gKSB7XG5cdFx0XHRcdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnJlbW92ZSggZWxlbSwgdHlwZSApO1xuXG5cdFx0XHRcdFx0XHRcdC8vIFRoaXMgaXMgYSBzaG9ydGN1dCB0byBhdm9pZCBqUXVlcnkuZXZlbnQucmVtb3ZlJ3Mgb3ZlcmhlYWRcblx0XHRcdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdFx0XHRqUXVlcnkucmVtb3ZlRXZlbnQoIGVsZW0sIHR5cGUsIGRhdGEuaGFuZGxlICk7XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBDaHJvbWUgPD0zNSAtIDQ1K1xuXHRcdFx0XHRcdC8vIEFzc2lnbiB1bmRlZmluZWQgaW5zdGVhZCBvZiB1c2luZyBkZWxldGUsIHNlZSBEYXRhI3JlbW92ZVxuXHRcdFx0XHRcdGVsZW1bIGRhdGFQcml2LmV4cGFuZG8gXSA9IHVuZGVmaW5lZDtcblx0XHRcdFx0fVxuXHRcdFx0XHRpZiAoIGVsZW1bIGRhdGFVc2VyLmV4cGFuZG8gXSApIHtcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IENocm9tZSA8PTM1IC0gNDUrXG5cdFx0XHRcdFx0Ly8gQXNzaWduIHVuZGVmaW5lZCBpbnN0ZWFkIG9mIHVzaW5nIGRlbGV0ZSwgc2VlIERhdGEjcmVtb3ZlXG5cdFx0XHRcdFx0ZWxlbVsgZGF0YVVzZXIuZXhwYW5kbyBdID0gdW5kZWZpbmVkO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZGV0YWNoOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0cmV0dXJuIHJlbW92ZSggdGhpcywgc2VsZWN0b3IsIHRydWUgKTtcblx0fSxcblxuXHRyZW1vdmU6IGZ1bmN0aW9uKCBzZWxlY3RvciApIHtcblx0XHRyZXR1cm4gcmVtb3ZlKCB0aGlzLCBzZWxlY3RvciApO1xuXHR9LFxuXG5cdHRleHQ6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cdFx0XHRcdGpRdWVyeS50ZXh0KCB0aGlzICkgOlxuXHRcdFx0XHR0aGlzLmVtcHR5KCkuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlID09PSAxIHx8IHRoaXMubm9kZVR5cGUgPT09IDExIHx8IHRoaXMubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0XHR0aGlzLnRleHRDb250ZW50ID0gdmFsdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9ICk7XG5cdFx0fSwgbnVsbCwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggKTtcblx0fSxcblxuXHRhcHBlbmQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5ub2RlVHlwZSA9PT0gMSB8fCB0aGlzLm5vZGVUeXBlID09PSAxMSB8fCB0aGlzLm5vZGVUeXBlID09PSA5ICkge1xuXHRcdFx0XHR2YXIgdGFyZ2V0ID0gbWFuaXB1bGF0aW9uVGFyZ2V0KCB0aGlzLCBlbGVtICk7XG5cdFx0XHRcdHRhcmdldC5hcHBlbmRDaGlsZCggZWxlbSApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRwcmVwZW5kOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMubm9kZVR5cGUgPT09IDEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gMTEgfHwgdGhpcy5ub2RlVHlwZSA9PT0gOSApIHtcblx0XHRcdFx0dmFyIHRhcmdldCA9IG1hbmlwdWxhdGlvblRhcmdldCggdGhpcywgZWxlbSApO1xuXHRcdFx0XHR0YXJnZXQuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0YXJnZXQuZmlyc3RDaGlsZCApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRiZWZvcmU6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiBkb21NYW5pcCggdGhpcywgYXJndW1lbnRzLCBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdGlmICggdGhpcy5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR0aGlzLnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKCBlbGVtLCB0aGlzICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdGFmdGVyOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHRpZiAoIHRoaXMucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0dGhpcy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggZWxlbSwgdGhpcy5uZXh0U2libGluZyApO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRlbXB0eTogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGVsZW0sXG5cdFx0XHRpID0gMDtcblxuXHRcdGZvciAoIDsgKCBlbGVtID0gdGhpc1sgaSBdICkgIT0gbnVsbDsgaSsrICkge1xuXHRcdFx0aWYgKCBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0XHRcdC8vIFByZXZlbnQgbWVtb3J5IGxlYWtzXG5cdFx0XHRcdGpRdWVyeS5jbGVhbkRhdGEoIGdldEFsbCggZWxlbSwgZmFsc2UgKSApO1xuXG5cdFx0XHRcdC8vIFJlbW92ZSBhbnkgcmVtYWluaW5nIG5vZGVzXG5cdFx0XHRcdGVsZW0udGV4dENvbnRlbnQgPSBcIlwiO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdGNsb25lOiBmdW5jdGlvbiggZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKSB7XG5cdFx0ZGF0YUFuZEV2ZW50cyA9IGRhdGFBbmRFdmVudHMgPT0gbnVsbCA/IGZhbHNlIDogZGF0YUFuZEV2ZW50cztcblx0XHRkZWVwRGF0YUFuZEV2ZW50cyA9IGRlZXBEYXRhQW5kRXZlbnRzID09IG51bGwgPyBkYXRhQW5kRXZlbnRzIDogZGVlcERhdGFBbmRFdmVudHM7XG5cblx0XHRyZXR1cm4gdGhpcy5tYXAoIGZ1bmN0aW9uKCkge1xuXHRcdFx0cmV0dXJuIGpRdWVyeS5jbG9uZSggdGhpcywgZGF0YUFuZEV2ZW50cywgZGVlcERhdGFBbmRFdmVudHMgKTtcblx0XHR9ICk7XG5cdH0sXG5cblx0aHRtbDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHRcdHZhciBlbGVtID0gdGhpc1sgMCBdIHx8IHt9LFxuXHRcdFx0XHRpID0gMCxcblx0XHRcdFx0bCA9IHRoaXMubGVuZ3RoO1xuXG5cdFx0XHRpZiAoIHZhbHVlID09PSB1bmRlZmluZWQgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0cmV0dXJuIGVsZW0uaW5uZXJIVE1MO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTZWUgaWYgd2UgY2FuIHRha2UgYSBzaG9ydGN1dCBhbmQganVzdCB1c2UgaW5uZXJIVE1MXG5cdFx0XHRpZiAoIHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiAmJiAhcm5vSW5uZXJodG1sLnRlc3QoIHZhbHVlICkgJiZcblx0XHRcdFx0IXdyYXBNYXBbICggcnRhZ05hbWUuZXhlYyggdmFsdWUgKSB8fCBbIFwiXCIsIFwiXCIgXSApWyAxIF0udG9Mb3dlckNhc2UoKSBdICkge1xuXG5cdFx0XHRcdHZhbHVlID0galF1ZXJ5Lmh0bWxQcmVmaWx0ZXIoIHZhbHVlICk7XG5cblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRmb3IgKCA7IGkgPCBsOyBpKysgKSB7XG5cdFx0XHRcdFx0XHRlbGVtID0gdGhpc1sgaSBdIHx8IHt9O1xuXG5cdFx0XHRcdFx0XHQvLyBSZW1vdmUgZWxlbWVudCBub2RlcyBhbmQgcHJldmVudCBtZW1vcnkgbGVha3Ncblx0XHRcdFx0XHRcdGlmICggZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdFx0XHRcdFx0alF1ZXJ5LmNsZWFuRGF0YSggZ2V0QWxsKCBlbGVtLCBmYWxzZSApICk7XG5cdFx0XHRcdFx0XHRcdGVsZW0uaW5uZXJIVE1MID0gdmFsdWU7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0ZWxlbSA9IDA7XG5cblx0XHRcdFx0Ly8gSWYgdXNpbmcgaW5uZXJIVE1MIHRocm93cyBhbiBleGNlcHRpb24sIHVzZSB0aGUgZmFsbGJhY2sgbWV0aG9kXG5cdFx0XHRcdH0gY2F0Y2ggKCBlICkge31cblx0XHRcdH1cblxuXHRcdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0XHR0aGlzLmVtcHR5KCkuYXBwZW5kKCB2YWx1ZSApO1xuXHRcdFx0fVxuXHRcdH0sIG51bGwsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoICk7XG5cdH0sXG5cblx0cmVwbGFjZVdpdGg6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBpZ25vcmVkID0gW107XG5cblx0XHQvLyBNYWtlIHRoZSBjaGFuZ2VzLCByZXBsYWNpbmcgZWFjaCBub24taWdub3JlZCBjb250ZXh0IGVsZW1lbnQgd2l0aCB0aGUgbmV3IGNvbnRlbnRcblx0XHRyZXR1cm4gZG9tTWFuaXAoIHRoaXMsIGFyZ3VtZW50cywgZnVuY3Rpb24oIGVsZW0gKSB7XG5cdFx0XHR2YXIgcGFyZW50ID0gdGhpcy5wYXJlbnROb2RlO1xuXG5cdFx0XHRpZiAoIGpRdWVyeS5pbkFycmF5KCB0aGlzLCBpZ25vcmVkICkgPCAwICkge1xuXHRcdFx0XHRqUXVlcnkuY2xlYW5EYXRhKCBnZXRBbGwoIHRoaXMgKSApO1xuXHRcdFx0XHRpZiAoIHBhcmVudCApIHtcblx0XHRcdFx0XHRwYXJlbnQucmVwbGFjZUNoaWxkKCBlbGVtLCB0aGlzICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdC8vIEZvcmNlIGNhbGxiYWNrIGludm9jYXRpb25cblx0XHR9LCBpZ25vcmVkICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIHtcblx0YXBwZW5kVG86IFwiYXBwZW5kXCIsXG5cdHByZXBlbmRUbzogXCJwcmVwZW5kXCIsXG5cdGluc2VydEJlZm9yZTogXCJiZWZvcmVcIixcblx0aW5zZXJ0QWZ0ZXI6IFwiYWZ0ZXJcIixcblx0cmVwbGFjZUFsbDogXCJyZXBsYWNlV2l0aFwiXG59LCBmdW5jdGlvbiggbmFtZSwgb3JpZ2luYWwgKSB7XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBlbGVtcyxcblx0XHRcdHJldCA9IFtdLFxuXHRcdFx0aW5zZXJ0ID0galF1ZXJ5KCBzZWxlY3RvciApLFxuXHRcdFx0bGFzdCA9IGluc2VydC5sZW5ndGggLSAxLFxuXHRcdFx0aSA9IDA7XG5cblx0XHRmb3IgKCA7IGkgPD0gbGFzdDsgaSsrICkge1xuXHRcdFx0ZWxlbXMgPSBpID09PSBsYXN0ID8gdGhpcyA6IHRoaXMuY2xvbmUoIHRydWUgKTtcblx0XHRcdGpRdWVyeSggaW5zZXJ0WyBpIF0gKVsgb3JpZ2luYWwgXSggZWxlbXMgKTtcblxuXHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA8PTQuMCBvbmx5LCBQaGFudG9tSlMgMSBvbmx5XG5cdFx0XHQvLyAuZ2V0KCkgYmVjYXVzZSBwdXNoLmFwcGx5KF8sIGFycmF5bGlrZSkgdGhyb3dzIG9uIGFuY2llbnQgV2ViS2l0XG5cdFx0XHRwdXNoLmFwcGx5KCByZXQsIGVsZW1zLmdldCgpICk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXMucHVzaFN0YWNrKCByZXQgKTtcblx0fTtcbn0gKTtcbnZhciBybnVtbm9ucHggPSBuZXcgUmVnRXhwKCBcIl4oXCIgKyBwbnVtICsgXCIpKD8hcHgpW2EteiVdKyRcIiwgXCJpXCIgKTtcblxudmFyIGdldFN0eWxlcyA9IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD0xMSBvbmx5LCBGaXJlZm94IDw9MzAgKCMxNTA5OCwgIzE0MTUwKVxuXHRcdC8vIElFIHRocm93cyBvbiBlbGVtZW50cyBjcmVhdGVkIGluIHBvcHVwc1xuXHRcdC8vIEZGIG1lYW53aGlsZSB0aHJvd3Mgb24gZnJhbWUgZWxlbWVudHMgdGhyb3VnaCBcImRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGVcIlxuXHRcdHZhciB2aWV3ID0gZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3O1xuXG5cdFx0aWYgKCAhdmlldyB8fCAhdmlldy5vcGVuZXIgKSB7XG5cdFx0XHR2aWV3ID0gd2luZG93O1xuXHRcdH1cblxuXHRcdHJldHVybiB2aWV3LmdldENvbXB1dGVkU3R5bGUoIGVsZW0gKTtcblx0fTtcblxudmFyIHJib3hTdHlsZSA9IG5ldyBSZWdFeHAoIGNzc0V4cGFuZC5qb2luKCBcInxcIiApLCBcImlcIiApO1xuXG5cblxuKCBmdW5jdGlvbigpIHtcblxuXHQvLyBFeGVjdXRpbmcgYm90aCBwaXhlbFBvc2l0aW9uICYgYm94U2l6aW5nUmVsaWFibGUgdGVzdHMgcmVxdWlyZSBvbmx5IG9uZSBsYXlvdXRcblx0Ly8gc28gdGhleSdyZSBleGVjdXRlZCBhdCB0aGUgc2FtZSB0aW1lIHRvIHNhdmUgdGhlIHNlY29uZCBjb21wdXRhdGlvbi5cblx0ZnVuY3Rpb24gY29tcHV0ZVN0eWxlVGVzdHMoKSB7XG5cblx0XHQvLyBUaGlzIGlzIGEgc2luZ2xldG9uLCB3ZSBuZWVkIHRvIGV4ZWN1dGUgaXQgb25seSBvbmNlXG5cdFx0aWYgKCAhZGl2ICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdGNvbnRhaW5lci5zdHlsZS5jc3NUZXh0ID0gXCJwb3NpdGlvbjphYnNvbHV0ZTtsZWZ0Oi0xMTExMXB4O3dpZHRoOjYwcHg7XCIgK1xuXHRcdFx0XCJtYXJnaW4tdG9wOjFweDtwYWRkaW5nOjA7Ym9yZGVyOjBcIjtcblx0XHRkaXYuc3R5bGUuY3NzVGV4dCA9XG5cdFx0XHRcInBvc2l0aW9uOnJlbGF0aXZlO2Rpc3BsYXk6YmxvY2s7Ym94LXNpemluZzpib3JkZXItYm94O292ZXJmbG93OnNjcm9sbDtcIiArXG5cdFx0XHRcIm1hcmdpbjphdXRvO2JvcmRlcjoxcHg7cGFkZGluZzoxcHg7XCIgK1xuXHRcdFx0XCJ3aWR0aDo2MCU7dG9wOjElXCI7XG5cdFx0ZG9jdW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKCBjb250YWluZXIgKS5hcHBlbmRDaGlsZCggZGl2ICk7XG5cblx0XHR2YXIgZGl2U3R5bGUgPSB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSggZGl2ICk7XG5cdFx0cGl4ZWxQb3NpdGlvblZhbCA9IGRpdlN0eWxlLnRvcCAhPT0gXCIxJVwiO1xuXG5cdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCA0LjAgLSA0LjMgb25seSwgRmlyZWZveCA8PTMgLSA0NFxuXHRcdHJlbGlhYmxlTWFyZ2luTGVmdFZhbCA9IHJvdW5kUGl4ZWxNZWFzdXJlcyggZGl2U3R5bGUubWFyZ2luTGVmdCApID09PSAxMjtcblxuXHRcdC8vIFN1cHBvcnQ6IEFuZHJvaWQgNC4wIC0gNC4zIG9ubHksIFNhZmFyaSA8PTkuMSAtIDEwLjEsIGlPUyA8PTcuMCAtIDkuM1xuXHRcdC8vIFNvbWUgc3R5bGVzIGNvbWUgYmFjayB3aXRoIHBlcmNlbnRhZ2UgdmFsdWVzLCBldmVuIHRob3VnaCB0aGV5IHNob3VsZG4ndFxuXHRcdGRpdi5zdHlsZS5yaWdodCA9IFwiNjAlXCI7XG5cdFx0cGl4ZWxCb3hTdHlsZXNWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLnJpZ2h0ICkgPT09IDM2O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHlcblx0XHQvLyBEZXRlY3QgbWlzcmVwb3J0aW5nIG9mIGNvbnRlbnQgZGltZW5zaW9ucyBmb3IgYm94LXNpemluZzpib3JkZXItYm94IGVsZW1lbnRzXG5cdFx0Ym94U2l6aW5nUmVsaWFibGVWYWwgPSByb3VuZFBpeGVsTWVhc3VyZXMoIGRpdlN0eWxlLndpZHRoICkgPT09IDM2O1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgOSBvbmx5XG5cdFx0Ly8gRGV0ZWN0IG92ZXJmbG93OnNjcm9sbCBzY3Jld2luZXNzIChnaC0zNjk5KVxuXHRcdGRpdi5zdHlsZS5wb3NpdGlvbiA9IFwiYWJzb2x1dGVcIjtcblx0XHRzY3JvbGxib3hTaXplVmFsID0gZGl2Lm9mZnNldFdpZHRoID09PSAzNiB8fCBcImFic29sdXRlXCI7XG5cblx0XHRkb2N1bWVudEVsZW1lbnQucmVtb3ZlQ2hpbGQoIGNvbnRhaW5lciApO1xuXG5cdFx0Ly8gTnVsbGlmeSB0aGUgZGl2IHNvIGl0IHdvdWxkbid0IGJlIHN0b3JlZCBpbiB0aGUgbWVtb3J5IGFuZFxuXHRcdC8vIGl0IHdpbGwgYWxzbyBiZSBhIHNpZ24gdGhhdCBjaGVja3MgYWxyZWFkeSBwZXJmb3JtZWRcblx0XHRkaXYgPSBudWxsO1xuXHR9XG5cblx0ZnVuY3Rpb24gcm91bmRQaXhlbE1lYXN1cmVzKCBtZWFzdXJlICkge1xuXHRcdHJldHVybiBNYXRoLnJvdW5kKCBwYXJzZUZsb2F0KCBtZWFzdXJlICkgKTtcblx0fVxuXG5cdHZhciBwaXhlbFBvc2l0aW9uVmFsLCBib3hTaXppbmdSZWxpYWJsZVZhbCwgc2Nyb2xsYm94U2l6ZVZhbCwgcGl4ZWxCb3hTdHlsZXNWYWwsXG5cdFx0cmVsaWFibGVNYXJnaW5MZWZ0VmFsLFxuXHRcdGNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiZGl2XCIgKSxcblx0XHRkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICk7XG5cblx0Ly8gRmluaXNoIGVhcmx5IGluIGxpbWl0ZWQgKG5vbi1icm93c2VyKSBlbnZpcm9ubWVudHNcblx0aWYgKCAhZGl2LnN0eWxlICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0Ly8gU3R5bGUgb2YgY2xvbmVkIGVsZW1lbnQgYWZmZWN0cyBzb3VyY2UgZWxlbWVudCBjbG9uZWQgKCM4OTA4KVxuXHRkaXYuc3R5bGUuYmFja2dyb3VuZENsaXAgPSBcImNvbnRlbnQtYm94XCI7XG5cdGRpdi5jbG9uZU5vZGUoIHRydWUgKS5zdHlsZS5iYWNrZ3JvdW5kQ2xpcCA9IFwiXCI7XG5cdHN1cHBvcnQuY2xlYXJDbG9uZVN0eWxlID0gZGl2LnN0eWxlLmJhY2tncm91bmRDbGlwID09PSBcImNvbnRlbnQtYm94XCI7XG5cblx0alF1ZXJ5LmV4dGVuZCggc3VwcG9ydCwge1xuXHRcdGJveFNpemluZ1JlbGlhYmxlOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gYm94U2l6aW5nUmVsaWFibGVWYWw7XG5cdFx0fSxcblx0XHRwaXhlbEJveFN0eWxlczogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHBpeGVsQm94U3R5bGVzVmFsO1xuXHRcdH0sXG5cdFx0cGl4ZWxQb3NpdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0XHRjb21wdXRlU3R5bGVUZXN0cygpO1xuXHRcdFx0cmV0dXJuIHBpeGVsUG9zaXRpb25WYWw7XG5cdFx0fSxcblx0XHRyZWxpYWJsZU1hcmdpbkxlZnQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0Y29tcHV0ZVN0eWxlVGVzdHMoKTtcblx0XHRcdHJldHVybiByZWxpYWJsZU1hcmdpbkxlZnRWYWw7XG5cdFx0fSxcblx0XHRzY3JvbGxib3hTaXplOiBmdW5jdGlvbigpIHtcblx0XHRcdGNvbXB1dGVTdHlsZVRlc3RzKCk7XG5cdFx0XHRyZXR1cm4gc2Nyb2xsYm94U2l6ZVZhbDtcblx0XHR9XG5cdH0gKTtcbn0gKSgpO1xuXG5cbmZ1bmN0aW9uIGN1ckNTUyggZWxlbSwgbmFtZSwgY29tcHV0ZWQgKSB7XG5cdHZhciB3aWR0aCwgbWluV2lkdGgsIG1heFdpZHRoLCByZXQsXG5cblx0XHQvLyBTdXBwb3J0OiBGaXJlZm94IDUxK1xuXHRcdC8vIFJldHJpZXZpbmcgc3R5bGUgYmVmb3JlIGNvbXB1dGVkIHNvbWVob3dcblx0XHQvLyBmaXhlcyBhbiBpc3N1ZSB3aXRoIGdldHRpbmcgd3JvbmcgdmFsdWVzXG5cdFx0Ly8gb24gZGV0YWNoZWQgZWxlbWVudHNcblx0XHRzdHlsZSA9IGVsZW0uc3R5bGU7XG5cblx0Y29tcHV0ZWQgPSBjb21wdXRlZCB8fCBnZXRTdHlsZXMoIGVsZW0gKTtcblxuXHQvLyBnZXRQcm9wZXJ0eVZhbHVlIGlzIG5lZWRlZCBmb3I6XG5cdC8vICAgLmNzcygnZmlsdGVyJykgKElFIDkgb25seSwgIzEyNTM3KVxuXHQvLyAgIC5jc3MoJy0tY3VzdG9tUHJvcGVydHkpICgjMzE0NClcblx0aWYgKCBjb21wdXRlZCApIHtcblx0XHRyZXQgPSBjb21wdXRlZC5nZXRQcm9wZXJ0eVZhbHVlKCBuYW1lICkgfHwgY29tcHV0ZWRbIG5hbWUgXTtcblxuXHRcdGlmICggcmV0ID09PSBcIlwiICYmICFqUXVlcnkuY29udGFpbnMoIGVsZW0ub3duZXJEb2N1bWVudCwgZWxlbSApICkge1xuXHRcdFx0cmV0ID0galF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lICk7XG5cdFx0fVxuXG5cdFx0Ly8gQSB0cmlidXRlIHRvIHRoZSBcImF3ZXNvbWUgaGFjayBieSBEZWFuIEVkd2FyZHNcIlxuXHRcdC8vIEFuZHJvaWQgQnJvd3NlciByZXR1cm5zIHBlcmNlbnRhZ2UgZm9yIHNvbWUgdmFsdWVzLFxuXHRcdC8vIGJ1dCB3aWR0aCBzZWVtcyB0byBiZSByZWxpYWJseSBwaXhlbHMuXG5cdFx0Ly8gVGhpcyBpcyBhZ2FpbnN0IHRoZSBDU1NPTSBkcmFmdCBzcGVjOlxuXHRcdC8vIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3NvbS8jcmVzb2x2ZWQtdmFsdWVzXG5cdFx0aWYgKCAhc3VwcG9ydC5waXhlbEJveFN0eWxlcygpICYmIHJudW1ub25weC50ZXN0KCByZXQgKSAmJiByYm94U3R5bGUudGVzdCggbmFtZSApICkge1xuXG5cdFx0XHQvLyBSZW1lbWJlciB0aGUgb3JpZ2luYWwgdmFsdWVzXG5cdFx0XHR3aWR0aCA9IHN0eWxlLndpZHRoO1xuXHRcdFx0bWluV2lkdGggPSBzdHlsZS5taW5XaWR0aDtcblx0XHRcdG1heFdpZHRoID0gc3R5bGUubWF4V2lkdGg7XG5cblx0XHRcdC8vIFB1dCBpbiB0aGUgbmV3IHZhbHVlcyB0byBnZXQgYSBjb21wdXRlZCB2YWx1ZSBvdXRcblx0XHRcdHN0eWxlLm1pbldpZHRoID0gc3R5bGUubWF4V2lkdGggPSBzdHlsZS53aWR0aCA9IHJldDtcblx0XHRcdHJldCA9IGNvbXB1dGVkLndpZHRoO1xuXG5cdFx0XHQvLyBSZXZlcnQgdGhlIGNoYW5nZWQgdmFsdWVzXG5cdFx0XHRzdHlsZS53aWR0aCA9IHdpZHRoO1xuXHRcdFx0c3R5bGUubWluV2lkdGggPSBtaW5XaWR0aDtcblx0XHRcdHN0eWxlLm1heFdpZHRoID0gbWF4V2lkdGg7XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHJldCAhPT0gdW5kZWZpbmVkID9cblxuXHRcdC8vIFN1cHBvcnQ6IElFIDw9OSAtIDExIG9ubHlcblx0XHQvLyBJRSByZXR1cm5zIHpJbmRleCB2YWx1ZSBhcyBhbiBpbnRlZ2VyLlxuXHRcdHJldCArIFwiXCIgOlxuXHRcdHJldDtcbn1cblxuXG5mdW5jdGlvbiBhZGRHZXRIb29rSWYoIGNvbmRpdGlvbkZuLCBob29rRm4gKSB7XG5cblx0Ly8gRGVmaW5lIHRoZSBob29rLCB3ZSdsbCBjaGVjayBvbiB0aGUgZmlyc3QgcnVuIGlmIGl0J3MgcmVhbGx5IG5lZWRlZC5cblx0cmV0dXJuIHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBjb25kaXRpb25GbigpICkge1xuXG5cdFx0XHRcdC8vIEhvb2sgbm90IG5lZWRlZCAob3IgaXQncyBub3QgcG9zc2libGUgdG8gdXNlIGl0IGR1ZVxuXHRcdFx0XHQvLyB0byBtaXNzaW5nIGRlcGVuZGVuY3kpLCByZW1vdmUgaXQuXG5cdFx0XHRcdGRlbGV0ZSB0aGlzLmdldDtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBIb29rIG5lZWRlZDsgcmVkZWZpbmUgaXQgc28gdGhhdCB0aGUgc3VwcG9ydCB0ZXN0IGlzIG5vdCBleGVjdXRlZCBhZ2Fpbi5cblx0XHRcdHJldHVybiAoIHRoaXMuZ2V0ID0gaG9va0ZuICkuYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApO1xuXHRcdH1cblx0fTtcbn1cblxuXG52YXJcblxuXHQvLyBTd2FwcGFibGUgaWYgZGlzcGxheSBpcyBub25lIG9yIHN0YXJ0cyB3aXRoIHRhYmxlXG5cdC8vIGV4Y2VwdCBcInRhYmxlXCIsIFwidGFibGUtY2VsbFwiLCBvciBcInRhYmxlLWNhcHRpb25cIlxuXHQvLyBTZWUgaGVyZSBmb3IgZGlzcGxheSB2YWx1ZXM6IGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvQ1NTL2Rpc3BsYXlcblx0cmRpc3BsYXlzd2FwID0gL14obm9uZXx0YWJsZSg/IS1jW2VhXSkuKykvLFxuXHRyY3VzdG9tUHJvcCA9IC9eLS0vLFxuXHRjc3NTaG93ID0geyBwb3NpdGlvbjogXCJhYnNvbHV0ZVwiLCB2aXNpYmlsaXR5OiBcImhpZGRlblwiLCBkaXNwbGF5OiBcImJsb2NrXCIgfSxcblx0Y3NzTm9ybWFsVHJhbnNmb3JtID0ge1xuXHRcdGxldHRlclNwYWNpbmc6IFwiMFwiLFxuXHRcdGZvbnRXZWlnaHQ6IFwiNDAwXCJcblx0fSxcblxuXHRjc3NQcmVmaXhlcyA9IFsgXCJXZWJraXRcIiwgXCJNb3pcIiwgXCJtc1wiIF0sXG5cdGVtcHR5U3R5bGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImRpdlwiICkuc3R5bGU7XG5cbi8vIFJldHVybiBhIGNzcyBwcm9wZXJ0eSBtYXBwZWQgdG8gYSBwb3RlbnRpYWxseSB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHlcbmZ1bmN0aW9uIHZlbmRvclByb3BOYW1lKCBuYW1lICkge1xuXG5cdC8vIFNob3J0Y3V0IGZvciBuYW1lcyB0aGF0IGFyZSBub3QgdmVuZG9yIHByZWZpeGVkXG5cdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdHJldHVybiBuYW1lO1xuXHR9XG5cblx0Ly8gQ2hlY2sgZm9yIHZlbmRvciBwcmVmaXhlZCBuYW1lc1xuXHR2YXIgY2FwTmFtZSA9IG5hbWVbIDAgXS50b1VwcGVyQ2FzZSgpICsgbmFtZS5zbGljZSggMSApLFxuXHRcdGkgPSBjc3NQcmVmaXhlcy5sZW5ndGg7XG5cblx0d2hpbGUgKCBpLS0gKSB7XG5cdFx0bmFtZSA9IGNzc1ByZWZpeGVzWyBpIF0gKyBjYXBOYW1lO1xuXHRcdGlmICggbmFtZSBpbiBlbXB0eVN0eWxlICkge1xuXHRcdFx0cmV0dXJuIG5hbWU7XG5cdFx0fVxuXHR9XG59XG5cbi8vIFJldHVybiBhIHByb3BlcnR5IG1hcHBlZCBhbG9uZyB3aGF0IGpRdWVyeS5jc3NQcm9wcyBzdWdnZXN0cyBvciB0b1xuLy8gYSB2ZW5kb3IgcHJlZml4ZWQgcHJvcGVydHkuXG5mdW5jdGlvbiBmaW5hbFByb3BOYW1lKCBuYW1lICkge1xuXHR2YXIgcmV0ID0galF1ZXJ5LmNzc1Byb3BzWyBuYW1lIF07XG5cdGlmICggIXJldCApIHtcblx0XHRyZXQgPSBqUXVlcnkuY3NzUHJvcHNbIG5hbWUgXSA9IHZlbmRvclByb3BOYW1lKCBuYW1lICkgfHwgbmFtZTtcblx0fVxuXHRyZXR1cm4gcmV0O1xufVxuXG5mdW5jdGlvbiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICkge1xuXG5cdC8vIEFueSByZWxhdGl2ZSAoKy8tKSB2YWx1ZXMgaGF2ZSBhbHJlYWR5IGJlZW5cblx0Ly8gbm9ybWFsaXplZCBhdCB0aGlzIHBvaW50XG5cdHZhciBtYXRjaGVzID0gcmNzc051bS5leGVjKCB2YWx1ZSApO1xuXHRyZXR1cm4gbWF0Y2hlcyA/XG5cblx0XHQvLyBHdWFyZCBhZ2FpbnN0IHVuZGVmaW5lZCBcInN1YnRyYWN0XCIsIGUuZy4sIHdoZW4gdXNlZCBhcyBpbiBjc3NIb29rc1xuXHRcdE1hdGgubWF4KCAwLCBtYXRjaGVzWyAyIF0gLSAoIHN1YnRyYWN0IHx8IDAgKSApICsgKCBtYXRjaGVzWyAzIF0gfHwgXCJweFwiICkgOlxuXHRcdHZhbHVlO1xufVxuXG5mdW5jdGlvbiBib3hNb2RlbEFkanVzdG1lbnQoIGVsZW0sIGRpbWVuc2lvbiwgYm94LCBpc0JvcmRlckJveCwgc3R5bGVzLCBjb21wdXRlZFZhbCApIHtcblx0dmFyIGkgPSBkaW1lbnNpb24gPT09IFwid2lkdGhcIiA/IDEgOiAwLFxuXHRcdGV4dHJhID0gMCxcblx0XHRkZWx0YSA9IDA7XG5cblx0Ly8gQWRqdXN0bWVudCBtYXkgbm90IGJlIG5lY2Vzc2FyeVxuXHRpZiAoIGJveCA9PT0gKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApICkge1xuXHRcdHJldHVybiAwO1xuXHR9XG5cblx0Zm9yICggOyBpIDwgNDsgaSArPSAyICkge1xuXG5cdFx0Ly8gQm90aCBib3ggbW9kZWxzIGV4Y2x1ZGUgbWFyZ2luXG5cdFx0aWYgKCBib3ggPT09IFwibWFyZ2luXCIgKSB7XG5cdFx0XHRkZWx0YSArPSBqUXVlcnkuY3NzKCBlbGVtLCBib3ggKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0fVxuXG5cdFx0Ly8gSWYgd2UgZ2V0IGhlcmUgd2l0aCBhIGNvbnRlbnQtYm94LCB3ZSdyZSBzZWVraW5nIFwicGFkZGluZ1wiIG9yIFwiYm9yZGVyXCIgb3IgXCJtYXJnaW5cIlxuXHRcdGlmICggIWlzQm9yZGVyQm94ICkge1xuXG5cdFx0XHQvLyBBZGQgcGFkZGluZ1xuXHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cblx0XHRcdC8vIEZvciBcImJvcmRlclwiIG9yIFwibWFyZ2luXCIsIGFkZCBib3JkZXJcblx0XHRcdGlmICggYm94ICE9PSBcInBhZGRpbmdcIiApIHtcblx0XHRcdFx0ZGVsdGEgKz0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblxuXHRcdFx0Ly8gQnV0IHN0aWxsIGtlZXAgdHJhY2sgb2YgaXQgb3RoZXJ3aXNlXG5cdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRleHRyYSArPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJvcmRlclwiICsgY3NzRXhwYW5kWyBpIF0gKyBcIldpZHRoXCIsIHRydWUsIHN0eWxlcyApO1xuXHRcdFx0fVxuXG5cdFx0Ly8gSWYgd2UgZ2V0IGhlcmUgd2l0aCBhIGJvcmRlci1ib3ggKGNvbnRlbnQgKyBwYWRkaW5nICsgYm9yZGVyKSwgd2UncmUgc2Vla2luZyBcImNvbnRlbnRcIiBvclxuXHRcdC8vIFwicGFkZGluZ1wiIG9yIFwibWFyZ2luXCJcblx0XHR9IGVsc2Uge1xuXG5cdFx0XHQvLyBGb3IgXCJjb250ZW50XCIsIHN1YnRyYWN0IHBhZGRpbmdcblx0XHRcdGlmICggYm94ID09PSBcImNvbnRlbnRcIiApIHtcblx0XHRcdFx0ZGVsdGEgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJwYWRkaW5nXCIgKyBjc3NFeHBhbmRbIGkgXSwgdHJ1ZSwgc3R5bGVzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEZvciBcImNvbnRlbnRcIiBvciBcInBhZGRpbmdcIiwgc3VidHJhY3QgYm9yZGVyXG5cdFx0XHRpZiAoIGJveCAhPT0gXCJtYXJnaW5cIiApIHtcblx0XHRcdFx0ZGVsdGEgLT0galF1ZXJ5LmNzcyggZWxlbSwgXCJib3JkZXJcIiArIGNzc0V4cGFuZFsgaSBdICsgXCJXaWR0aFwiLCB0cnVlLCBzdHlsZXMgKTtcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBBY2NvdW50IGZvciBwb3NpdGl2ZSBjb250ZW50LWJveCBzY3JvbGwgZ3V0dGVyIHdoZW4gcmVxdWVzdGVkIGJ5IHByb3ZpZGluZyBjb21wdXRlZFZhbFxuXHRpZiAoICFpc0JvcmRlckJveCAmJiBjb21wdXRlZFZhbCA+PSAwICkge1xuXG5cdFx0Ly8gb2Zmc2V0V2lkdGgvb2Zmc2V0SGVpZ2h0IGlzIGEgcm91bmRlZCBzdW0gb2YgY29udGVudCwgcGFkZGluZywgc2Nyb2xsIGd1dHRlciwgYW5kIGJvcmRlclxuXHRcdC8vIEFzc3VtaW5nIGludGVnZXIgc2Nyb2xsIGd1dHRlciwgc3VidHJhY3QgdGhlIHJlc3QgYW5kIHJvdW5kIGRvd25cblx0XHRkZWx0YSArPSBNYXRoLm1heCggMCwgTWF0aC5jZWlsKFxuXHRcdFx0ZWxlbVsgXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKSBdIC1cblx0XHRcdGNvbXB1dGVkVmFsIC1cblx0XHRcdGRlbHRhIC1cblx0XHRcdGV4dHJhIC1cblx0XHRcdDAuNVxuXHRcdCkgKTtcblx0fVxuXG5cdHJldHVybiBkZWx0YTtcbn1cblxuZnVuY3Rpb24gZ2V0V2lkdGhPckhlaWdodCggZWxlbSwgZGltZW5zaW9uLCBleHRyYSApIHtcblxuXHQvLyBTdGFydCB3aXRoIGNvbXB1dGVkIHN0eWxlXG5cdHZhciBzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKSxcblx0XHR2YWwgPSBjdXJDU1MoIGVsZW0sIGRpbWVuc2lvbiwgc3R5bGVzICksXG5cdFx0aXNCb3JkZXJCb3ggPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiLFxuXHRcdHZhbHVlSXNCb3JkZXJCb3ggPSBpc0JvcmRlckJveDtcblxuXHQvLyBTdXBwb3J0OiBGaXJlZm94IDw9NTRcblx0Ly8gUmV0dXJuIGEgY29uZm91bmRpbmcgbm9uLXBpeGVsIHZhbHVlIG9yIGZlaWduIGlnbm9yYW5jZSwgYXMgYXBwcm9wcmlhdGUuXG5cdGlmICggcm51bW5vbnB4LnRlc3QoIHZhbCApICkge1xuXHRcdGlmICggIWV4dHJhICkge1xuXHRcdFx0cmV0dXJuIHZhbDtcblx0XHR9XG5cdFx0dmFsID0gXCJhdXRvXCI7XG5cdH1cblxuXHQvLyBDaGVjayBmb3Igc3R5bGUgaW4gY2FzZSBhIGJyb3dzZXIgd2hpY2ggcmV0dXJucyB1bnJlbGlhYmxlIHZhbHVlc1xuXHQvLyBmb3IgZ2V0Q29tcHV0ZWRTdHlsZSBzaWxlbnRseSBmYWxscyBiYWNrIHRvIHRoZSByZWxpYWJsZSBlbGVtLnN0eWxlXG5cdHZhbHVlSXNCb3JkZXJCb3ggPSB2YWx1ZUlzQm9yZGVyQm94ICYmXG5cdFx0KCBzdXBwb3J0LmJveFNpemluZ1JlbGlhYmxlKCkgfHwgdmFsID09PSBlbGVtLnN0eWxlWyBkaW1lbnNpb24gXSApO1xuXG5cdC8vIEZhbGwgYmFjayB0byBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgd2hlbiB2YWx1ZSBpcyBcImF1dG9cIlxuXHQvLyBUaGlzIGhhcHBlbnMgZm9yIGlubGluZSBlbGVtZW50cyB3aXRoIG5vIGV4cGxpY2l0IHNldHRpbmcgKGdoLTM1NzEpXG5cdC8vIFN1cHBvcnQ6IEFuZHJvaWQgPD00LjEgLSA0LjMgb25seVxuXHQvLyBBbHNvIHVzZSBvZmZzZXRXaWR0aC9vZmZzZXRIZWlnaHQgZm9yIG1pc3JlcG9ydGVkIGlubGluZSBkaW1lbnNpb25zIChnaC0zNjAyKVxuXHRpZiAoIHZhbCA9PT0gXCJhdXRvXCIgfHxcblx0XHQhcGFyc2VGbG9hdCggdmFsICkgJiYgalF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIsIGZhbHNlLCBzdHlsZXMgKSA9PT0gXCJpbmxpbmVcIiApIHtcblxuXHRcdHZhbCA9IGVsZW1bIFwib2Zmc2V0XCIgKyBkaW1lbnNpb25bIDAgXS50b1VwcGVyQ2FzZSgpICsgZGltZW5zaW9uLnNsaWNlKCAxICkgXTtcblxuXHRcdC8vIG9mZnNldFdpZHRoL29mZnNldEhlaWdodCBwcm92aWRlIGJvcmRlci1ib3ggdmFsdWVzXG5cdFx0dmFsdWVJc0JvcmRlckJveCA9IHRydWU7XG5cdH1cblxuXHQvLyBOb3JtYWxpemUgXCJcIiBhbmQgYXV0b1xuXHR2YWwgPSBwYXJzZUZsb2F0KCB2YWwgKSB8fCAwO1xuXG5cdC8vIEFkanVzdCBmb3IgdGhlIGVsZW1lbnQncyBib3ggbW9kZWxcblx0cmV0dXJuICggdmFsICtcblx0XHRib3hNb2RlbEFkanVzdG1lbnQoXG5cdFx0XHRlbGVtLFxuXHRcdFx0ZGltZW5zaW9uLFxuXHRcdFx0ZXh0cmEgfHwgKCBpc0JvcmRlckJveCA/IFwiYm9yZGVyXCIgOiBcImNvbnRlbnRcIiApLFxuXHRcdFx0dmFsdWVJc0JvcmRlckJveCxcblx0XHRcdHN0eWxlcyxcblxuXHRcdFx0Ly8gUHJvdmlkZSB0aGUgY3VycmVudCBjb21wdXRlZCBzaXplIHRvIHJlcXVlc3Qgc2Nyb2xsIGd1dHRlciBjYWxjdWxhdGlvbiAoZ2gtMzU4OSlcblx0XHRcdHZhbFxuXHRcdClcblx0KSArIFwicHhcIjtcbn1cblxualF1ZXJ5LmV4dGVuZCgge1xuXG5cdC8vIEFkZCBpbiBzdHlsZSBwcm9wZXJ0eSBob29rcyBmb3Igb3ZlcnJpZGluZyB0aGUgZGVmYXVsdFxuXHQvLyBiZWhhdmlvciBvZiBnZXR0aW5nIGFuZCBzZXR0aW5nIGEgc3R5bGUgcHJvcGVydHlcblx0Y3NzSG9va3M6IHtcblx0XHRvcGFjaXR5OiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdFx0XHRcdC8vIFdlIHNob3VsZCBhbHdheXMgZ2V0IGEgbnVtYmVyIGJhY2sgZnJvbSBvcGFjaXR5XG5cdFx0XHRcdFx0dmFyIHJldCA9IGN1ckNTUyggZWxlbSwgXCJvcGFjaXR5XCIgKTtcblx0XHRcdFx0XHRyZXR1cm4gcmV0ID09PSBcIlwiID8gXCIxXCIgOiByZXQ7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cdH0sXG5cblx0Ly8gRG9uJ3QgYXV0b21hdGljYWxseSBhZGQgXCJweFwiIHRvIHRoZXNlIHBvc3NpYmx5LXVuaXRsZXNzIHByb3BlcnRpZXNcblx0Y3NzTnVtYmVyOiB7XG5cdFx0XCJhbmltYXRpb25JdGVyYXRpb25Db3VudFwiOiB0cnVlLFxuXHRcdFwiY29sdW1uQ291bnRcIjogdHJ1ZSxcblx0XHRcImZpbGxPcGFjaXR5XCI6IHRydWUsXG5cdFx0XCJmbGV4R3Jvd1wiOiB0cnVlLFxuXHRcdFwiZmxleFNocmlua1wiOiB0cnVlLFxuXHRcdFwiZm9udFdlaWdodFwiOiB0cnVlLFxuXHRcdFwibGluZUhlaWdodFwiOiB0cnVlLFxuXHRcdFwib3BhY2l0eVwiOiB0cnVlLFxuXHRcdFwib3JkZXJcIjogdHJ1ZSxcblx0XHRcIm9ycGhhbnNcIjogdHJ1ZSxcblx0XHRcIndpZG93c1wiOiB0cnVlLFxuXHRcdFwiekluZGV4XCI6IHRydWUsXG5cdFx0XCJ6b29tXCI6IHRydWVcblx0fSxcblxuXHQvLyBBZGQgaW4gcHJvcGVydGllcyB3aG9zZSBuYW1lcyB5b3Ugd2lzaCB0byBmaXggYmVmb3JlXG5cdC8vIHNldHRpbmcgb3IgZ2V0dGluZyB0aGUgdmFsdWVcblx0Y3NzUHJvcHM6IHt9LFxuXG5cdC8vIEdldCBhbmQgc2V0IHRoZSBzdHlsZSBwcm9wZXJ0eSBvbiBhIERPTSBOb2RlXG5cdHN0eWxlOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUsIGV4dHJhICkge1xuXG5cdFx0Ly8gRG9uJ3Qgc2V0IHN0eWxlcyBvbiB0ZXh0IGFuZCBjb21tZW50IG5vZGVzXG5cdFx0aWYgKCAhZWxlbSB8fCBlbGVtLm5vZGVUeXBlID09PSAzIHx8IGVsZW0ubm9kZVR5cGUgPT09IDggfHwgIWVsZW0uc3R5bGUgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lXG5cdFx0dmFyIHJldCwgdHlwZSwgaG9va3MsXG5cdFx0XHRvcmlnTmFtZSA9IGNhbWVsQ2FzZSggbmFtZSApLFxuXHRcdFx0aXNDdXN0b21Qcm9wID0gcmN1c3RvbVByb3AudGVzdCggbmFtZSApLFxuXHRcdFx0c3R5bGUgPSBlbGVtLnN0eWxlO1xuXG5cdFx0Ly8gTWFrZSBzdXJlIHRoYXQgd2UncmUgd29ya2luZyB3aXRoIHRoZSByaWdodCBuYW1lLiBXZSBkb24ndFxuXHRcdC8vIHdhbnQgdG8gcXVlcnkgdGhlIHZhbHVlIGlmIGl0IGlzIGEgQ1NTIGN1c3RvbSBwcm9wZXJ0eVxuXHRcdC8vIHNpbmNlIHRoZXkgYXJlIHVzZXItZGVmaW5lZC5cblx0XHRpZiAoICFpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRuYW1lID0gZmluYWxQcm9wTmFtZSggb3JpZ05hbWUgKTtcblx0XHR9XG5cblx0XHQvLyBHZXRzIGhvb2sgZm9yIHRoZSBwcmVmaXhlZCB2ZXJzaW9uLCB0aGVuIHVucHJlZml4ZWQgdmVyc2lvblxuXHRcdGhvb2tzID0galF1ZXJ5LmNzc0hvb2tzWyBuYW1lIF0gfHwgalF1ZXJ5LmNzc0hvb2tzWyBvcmlnTmFtZSBdO1xuXG5cdFx0Ly8gQ2hlY2sgaWYgd2UncmUgc2V0dGluZyBhIHZhbHVlXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0dHlwZSA9IHR5cGVvZiB2YWx1ZTtcblxuXHRcdFx0Ly8gQ29udmVydCBcIis9XCIgb3IgXCItPVwiIHRvIHJlbGF0aXZlIG51bWJlcnMgKCM3MzQ1KVxuXHRcdFx0aWYgKCB0eXBlID09PSBcInN0cmluZ1wiICYmICggcmV0ID0gcmNzc051bS5leGVjKCB2YWx1ZSApICkgJiYgcmV0WyAxIF0gKSB7XG5cdFx0XHRcdHZhbHVlID0gYWRqdXN0Q1NTKCBlbGVtLCBuYW1lLCByZXQgKTtcblxuXHRcdFx0XHQvLyBGaXhlcyBidWcgIzkyMzdcblx0XHRcdFx0dHlwZSA9IFwibnVtYmVyXCI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE1ha2Ugc3VyZSB0aGF0IG51bGwgYW5kIE5hTiB2YWx1ZXMgYXJlbid0IHNldCAoIzcxMTYpXG5cdFx0XHRpZiAoIHZhbHVlID09IG51bGwgfHwgdmFsdWUgIT09IHZhbHVlICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIGEgbnVtYmVyIHdhcyBwYXNzZWQgaW4sIGFkZCB0aGUgdW5pdCAoZXhjZXB0IGZvciBjZXJ0YWluIENTUyBwcm9wZXJ0aWVzKVxuXHRcdFx0aWYgKCB0eXBlID09PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHR2YWx1ZSArPSByZXQgJiYgcmV0WyAzIF0gfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBvcmlnTmFtZSBdID8gXCJcIiA6IFwicHhcIiApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBiYWNrZ3JvdW5kLSogcHJvcHMgYWZmZWN0IG9yaWdpbmFsIGNsb25lJ3MgdmFsdWVzXG5cdFx0XHRpZiAoICFzdXBwb3J0LmNsZWFyQ2xvbmVTdHlsZSAmJiB2YWx1ZSA9PT0gXCJcIiAmJiBuYW1lLmluZGV4T2YoIFwiYmFja2dyb3VuZFwiICkgPT09IDAgKSB7XG5cdFx0XHRcdHN0eWxlWyBuYW1lIF0gPSBcImluaGVyaXRcIjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCwgdXNlIHRoYXQgdmFsdWUsIG90aGVyd2lzZSBqdXN0IHNldCB0aGUgc3BlY2lmaWVkIHZhbHVlXG5cdFx0XHRpZiAoICFob29rcyB8fCAhKCBcInNldFwiIGluIGhvb2tzICkgfHxcblx0XHRcdFx0KCB2YWx1ZSA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIGV4dHJhICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXG5cdFx0XHRcdGlmICggaXNDdXN0b21Qcm9wICkge1xuXHRcdFx0XHRcdHN0eWxlLnNldFByb3BlcnR5KCBuYW1lLCB2YWx1ZSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdHN0eWxlWyBuYW1lIF0gPSB2YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0fSBlbHNlIHtcblxuXHRcdFx0Ly8gSWYgYSBob29rIHdhcyBwcm92aWRlZCBnZXQgdGhlIG5vbi1jb21wdXRlZCB2YWx1ZSBmcm9tIHRoZXJlXG5cdFx0XHRpZiAoIGhvb2tzICYmIFwiZ2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5nZXQoIGVsZW0sIGZhbHNlLCBleHRyYSApICkgIT09IHVuZGVmaW5lZCApIHtcblxuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBPdGhlcndpc2UganVzdCBnZXQgdGhlIHZhbHVlIGZyb20gdGhlIHN0eWxlIG9iamVjdFxuXHRcdFx0cmV0dXJuIHN0eWxlWyBuYW1lIF07XG5cdFx0fVxuXHR9LFxuXG5cdGNzczogZnVuY3Rpb24oIGVsZW0sIG5hbWUsIGV4dHJhLCBzdHlsZXMgKSB7XG5cdFx0dmFyIHZhbCwgbnVtLCBob29rcyxcblx0XHRcdG9yaWdOYW1lID0gY2FtZWxDYXNlKCBuYW1lICksXG5cdFx0XHRpc0N1c3RvbVByb3AgPSByY3VzdG9tUHJvcC50ZXN0KCBuYW1lICk7XG5cblx0XHQvLyBNYWtlIHN1cmUgdGhhdCB3ZSdyZSB3b3JraW5nIHdpdGggdGhlIHJpZ2h0IG5hbWUuIFdlIGRvbid0XG5cdFx0Ly8gd2FudCB0byBtb2RpZnkgdGhlIHZhbHVlIGlmIGl0IGlzIGEgQ1NTIGN1c3RvbSBwcm9wZXJ0eVxuXHRcdC8vIHNpbmNlIHRoZXkgYXJlIHVzZXItZGVmaW5lZC5cblx0XHRpZiAoICFpc0N1c3RvbVByb3AgKSB7XG5cdFx0XHRuYW1lID0gZmluYWxQcm9wTmFtZSggb3JpZ05hbWUgKTtcblx0XHR9XG5cblx0XHQvLyBUcnkgcHJlZml4ZWQgbmFtZSBmb2xsb3dlZCBieSB0aGUgdW5wcmVmaXhlZCBuYW1lXG5cdFx0aG9va3MgPSBqUXVlcnkuY3NzSG9va3NbIG5hbWUgXSB8fCBqUXVlcnkuY3NzSG9va3NbIG9yaWdOYW1lIF07XG5cblx0XHQvLyBJZiBhIGhvb2sgd2FzIHByb3ZpZGVkIGdldCB0aGUgY29tcHV0ZWQgdmFsdWUgZnJvbSB0aGVyZVxuXHRcdGlmICggaG9va3MgJiYgXCJnZXRcIiBpbiBob29rcyApIHtcblx0XHRcdHZhbCA9IGhvb2tzLmdldCggZWxlbSwgdHJ1ZSwgZXh0cmEgKTtcblx0XHR9XG5cblx0XHQvLyBPdGhlcndpc2UsIGlmIGEgd2F5IHRvIGdldCB0aGUgY29tcHV0ZWQgdmFsdWUgZXhpc3RzLCB1c2UgdGhhdFxuXHRcdGlmICggdmFsID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHR2YWwgPSBjdXJDU1MoIGVsZW0sIG5hbWUsIHN0eWxlcyApO1xuXHRcdH1cblxuXHRcdC8vIENvbnZlcnQgXCJub3JtYWxcIiB0byBjb21wdXRlZCB2YWx1ZVxuXHRcdGlmICggdmFsID09PSBcIm5vcm1hbFwiICYmIG5hbWUgaW4gY3NzTm9ybWFsVHJhbnNmb3JtICkge1xuXHRcdFx0dmFsID0gY3NzTm9ybWFsVHJhbnNmb3JtWyBuYW1lIF07XG5cdFx0fVxuXG5cdFx0Ly8gTWFrZSBudW1lcmljIGlmIGZvcmNlZCBvciBhIHF1YWxpZmllciB3YXMgcHJvdmlkZWQgYW5kIHZhbCBsb29rcyBudW1lcmljXG5cdFx0aWYgKCBleHRyYSA9PT0gXCJcIiB8fCBleHRyYSApIHtcblx0XHRcdG51bSA9IHBhcnNlRmxvYXQoIHZhbCApO1xuXHRcdFx0cmV0dXJuIGV4dHJhID09PSB0cnVlIHx8IGlzRmluaXRlKCBudW0gKSA/IG51bSB8fCAwIDogdmFsO1xuXHRcdH1cblxuXHRcdHJldHVybiB2YWw7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIFsgXCJoZWlnaHRcIiwgXCJ3aWR0aFwiIF0sIGZ1bmN0aW9uKCBpLCBkaW1lbnNpb24gKSB7XG5cdGpRdWVyeS5jc3NIb29rc1sgZGltZW5zaW9uIF0gPSB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSwgY29tcHV0ZWQsIGV4dHJhICkge1xuXHRcdFx0aWYgKCBjb21wdXRlZCApIHtcblxuXHRcdFx0XHQvLyBDZXJ0YWluIGVsZW1lbnRzIGNhbiBoYXZlIGRpbWVuc2lvbiBpbmZvIGlmIHdlIGludmlzaWJseSBzaG93IHRoZW1cblx0XHRcdFx0Ly8gYnV0IGl0IG11c3QgaGF2ZSBhIGN1cnJlbnQgZGlzcGxheSBzdHlsZSB0aGF0IHdvdWxkIGJlbmVmaXRcblx0XHRcdFx0cmV0dXJuIHJkaXNwbGF5c3dhcC50ZXN0KCBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApICkgJiZcblxuXHRcdFx0XHRcdC8vIFN1cHBvcnQ6IFNhZmFyaSA4K1xuXHRcdFx0XHRcdC8vIFRhYmxlIGNvbHVtbnMgaW4gU2FmYXJpIGhhdmUgbm9uLXplcm8gb2Zmc2V0V2lkdGggJiB6ZXJvXG5cdFx0XHRcdFx0Ly8gZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggdW5sZXNzIGRpc3BsYXkgaXMgY2hhbmdlZC5cblx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0XHRcdFx0XHQvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhIGRpc2Nvbm5lY3RlZCBub2RlXG5cdFx0XHRcdFx0Ly8gaW4gSUUgdGhyb3dzIGFuIGVycm9yLlxuXHRcdFx0XHRcdCggIWVsZW0uZ2V0Q2xpZW50UmVjdHMoKS5sZW5ndGggfHwgIWVsZW0uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkud2lkdGggKSA/XG5cdFx0XHRcdFx0XHRzd2FwKCBlbGVtLCBjc3NTaG93LCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIGdldFdpZHRoT3JIZWlnaHQoIGVsZW0sIGRpbWVuc2lvbiwgZXh0cmEgKTtcblx0XHRcdFx0XHRcdH0gKSA6XG5cdFx0XHRcdFx0XHRnZXRXaWR0aE9ySGVpZ2h0KCBlbGVtLCBkaW1lbnNpb24sIGV4dHJhICk7XG5cdFx0XHR9XG5cdFx0fSxcblxuXHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlLCBleHRyYSApIHtcblx0XHRcdHZhciBtYXRjaGVzLFxuXHRcdFx0XHRzdHlsZXMgPSBnZXRTdHlsZXMoIGVsZW0gKSxcblx0XHRcdFx0aXNCb3JkZXJCb3ggPSBqUXVlcnkuY3NzKCBlbGVtLCBcImJveFNpemluZ1wiLCBmYWxzZSwgc3R5bGVzICkgPT09IFwiYm9yZGVyLWJveFwiLFxuXHRcdFx0XHRzdWJ0cmFjdCA9IGV4dHJhICYmIGJveE1vZGVsQWRqdXN0bWVudChcblx0XHRcdFx0XHRlbGVtLFxuXHRcdFx0XHRcdGRpbWVuc2lvbixcblx0XHRcdFx0XHRleHRyYSxcblx0XHRcdFx0XHRpc0JvcmRlckJveCxcblx0XHRcdFx0XHRzdHlsZXNcblx0XHRcdFx0KTtcblxuXHRcdFx0Ly8gQWNjb3VudCBmb3IgdW5yZWxpYWJsZSBib3JkZXItYm94IGRpbWVuc2lvbnMgYnkgY29tcGFyaW5nIG9mZnNldCogdG8gY29tcHV0ZWQgYW5kXG5cdFx0XHQvLyBmYWtpbmcgYSBjb250ZW50LWJveCB0byBnZXQgYm9yZGVyIGFuZCBwYWRkaW5nIChnaC0zNjk5KVxuXHRcdFx0aWYgKCBpc0JvcmRlckJveCAmJiBzdXBwb3J0LnNjcm9sbGJveFNpemUoKSA9PT0gc3R5bGVzLnBvc2l0aW9uICkge1xuXHRcdFx0XHRzdWJ0cmFjdCAtPSBNYXRoLmNlaWwoXG5cdFx0XHRcdFx0ZWxlbVsgXCJvZmZzZXRcIiArIGRpbWVuc2lvblsgMCBdLnRvVXBwZXJDYXNlKCkgKyBkaW1lbnNpb24uc2xpY2UoIDEgKSBdIC1cblx0XHRcdFx0XHRwYXJzZUZsb2F0KCBzdHlsZXNbIGRpbWVuc2lvbiBdICkgLVxuXHRcdFx0XHRcdGJveE1vZGVsQWRqdXN0bWVudCggZWxlbSwgZGltZW5zaW9uLCBcImJvcmRlclwiLCBmYWxzZSwgc3R5bGVzICkgLVxuXHRcdFx0XHRcdDAuNVxuXHRcdFx0XHQpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDb252ZXJ0IHRvIHBpeGVscyBpZiB2YWx1ZSBhZGp1c3RtZW50IGlzIG5lZWRlZFxuXHRcdFx0aWYgKCBzdWJ0cmFjdCAmJiAoIG1hdGNoZXMgPSByY3NzTnVtLmV4ZWMoIHZhbHVlICkgKSAmJlxuXHRcdFx0XHQoIG1hdGNoZXNbIDMgXSB8fCBcInB4XCIgKSAhPT0gXCJweFwiICkge1xuXG5cdFx0XHRcdGVsZW0uc3R5bGVbIGRpbWVuc2lvbiBdID0gdmFsdWU7XG5cdFx0XHRcdHZhbHVlID0galF1ZXJ5LmNzcyggZWxlbSwgZGltZW5zaW9uICk7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBzZXRQb3NpdGl2ZU51bWJlciggZWxlbSwgdmFsdWUsIHN1YnRyYWN0ICk7XG5cdFx0fVxuXHR9O1xufSApO1xuXG5qUXVlcnkuY3NzSG9va3MubWFyZ2luTGVmdCA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5yZWxpYWJsZU1hcmdpbkxlZnQsXG5cdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRpZiAoIGNvbXB1dGVkICkge1xuXHRcdFx0cmV0dXJuICggcGFyc2VGbG9hdCggY3VyQ1NTKCBlbGVtLCBcIm1hcmdpbkxlZnRcIiApICkgfHxcblx0XHRcdFx0ZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0IC1cblx0XHRcdFx0XHRzd2FwKCBlbGVtLCB7IG1hcmdpbkxlZnQ6IDAgfSwgZnVuY3Rpb24oKSB7XG5cdFx0XHRcdFx0XHRyZXR1cm4gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5sZWZ0O1xuXHRcdFx0XHRcdH0gKVxuXHRcdFx0XHQpICsgXCJweFwiO1xuXHRcdH1cblx0fVxuKTtcblxuLy8gVGhlc2UgaG9va3MgYXJlIHVzZWQgYnkgYW5pbWF0ZSB0byBleHBhbmQgcHJvcGVydGllc1xualF1ZXJ5LmVhY2goIHtcblx0bWFyZ2luOiBcIlwiLFxuXHRwYWRkaW5nOiBcIlwiLFxuXHRib3JkZXI6IFwiV2lkdGhcIlxufSwgZnVuY3Rpb24oIHByZWZpeCwgc3VmZml4ICkge1xuXHRqUXVlcnkuY3NzSG9va3NbIHByZWZpeCArIHN1ZmZpeCBdID0ge1xuXHRcdGV4cGFuZDogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdFx0dmFyIGkgPSAwLFxuXHRcdFx0XHRleHBhbmRlZCA9IHt9LFxuXG5cdFx0XHRcdC8vIEFzc3VtZXMgYSBzaW5nbGUgbnVtYmVyIGlmIG5vdCBhIHN0cmluZ1xuXHRcdFx0XHRwYXJ0cyA9IHR5cGVvZiB2YWx1ZSA9PT0gXCJzdHJpbmdcIiA/IHZhbHVlLnNwbGl0KCBcIiBcIiApIDogWyB2YWx1ZSBdO1xuXG5cdFx0XHRmb3IgKCA7IGkgPCA0OyBpKysgKSB7XG5cdFx0XHRcdGV4cGFuZGVkWyBwcmVmaXggKyBjc3NFeHBhbmRbIGkgXSArIHN1ZmZpeCBdID1cblx0XHRcdFx0XHRwYXJ0c1sgaSBdIHx8IHBhcnRzWyBpIC0gMiBdIHx8IHBhcnRzWyAwIF07XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBleHBhbmRlZDtcblx0XHR9XG5cdH07XG5cblx0aWYgKCBwcmVmaXggIT09IFwibWFyZ2luXCIgKSB7XG5cdFx0alF1ZXJ5LmNzc0hvb2tzWyBwcmVmaXggKyBzdWZmaXggXS5zZXQgPSBzZXRQb3NpdGl2ZU51bWJlcjtcblx0fVxufSApO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGNzczogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHRcdHZhciBzdHlsZXMsIGxlbixcblx0XHRcdFx0bWFwID0ge30sXG5cdFx0XHRcdGkgPSAwO1xuXG5cdFx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIG5hbWUgKSApIHtcblx0XHRcdFx0c3R5bGVzID0gZ2V0U3R5bGVzKCBlbGVtICk7XG5cdFx0XHRcdGxlbiA9IG5hbWUubGVuZ3RoO1xuXG5cdFx0XHRcdGZvciAoIDsgaSA8IGxlbjsgaSsrICkge1xuXHRcdFx0XHRcdG1hcFsgbmFtZVsgaSBdIF0gPSBqUXVlcnkuY3NzKCBlbGVtLCBuYW1lWyBpIF0sIGZhbHNlLCBzdHlsZXMgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBtYXA7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiB2YWx1ZSAhPT0gdW5kZWZpbmVkID9cblx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBuYW1lLCB2YWx1ZSApIDpcblx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgbmFtZSApO1xuXHRcdH0sIG5hbWUsIHZhbHVlLCBhcmd1bWVudHMubGVuZ3RoID4gMSApO1xuXHR9XG59ICk7XG5cblxuZnVuY3Rpb24gVHdlZW4oIGVsZW0sIG9wdGlvbnMsIHByb3AsIGVuZCwgZWFzaW5nICkge1xuXHRyZXR1cm4gbmV3IFR3ZWVuLnByb3RvdHlwZS5pbml0KCBlbGVtLCBvcHRpb25zLCBwcm9wLCBlbmQsIGVhc2luZyApO1xufVxualF1ZXJ5LlR3ZWVuID0gVHdlZW47XG5cblR3ZWVuLnByb3RvdHlwZSA9IHtcblx0Y29uc3RydWN0b3I6IFR3ZWVuLFxuXHRpbml0OiBmdW5jdGlvbiggZWxlbSwgb3B0aW9ucywgcHJvcCwgZW5kLCBlYXNpbmcsIHVuaXQgKSB7XG5cdFx0dGhpcy5lbGVtID0gZWxlbTtcblx0XHR0aGlzLnByb3AgPSBwcm9wO1xuXHRcdHRoaXMuZWFzaW5nID0gZWFzaW5nIHx8IGpRdWVyeS5lYXNpbmcuX2RlZmF1bHQ7XG5cdFx0dGhpcy5vcHRpb25zID0gb3B0aW9ucztcblx0XHR0aGlzLnN0YXJ0ID0gdGhpcy5ub3cgPSB0aGlzLmN1cigpO1xuXHRcdHRoaXMuZW5kID0gZW5kO1xuXHRcdHRoaXMudW5pdCA9IHVuaXQgfHwgKCBqUXVlcnkuY3NzTnVtYmVyWyBwcm9wIF0gPyBcIlwiIDogXCJweFwiICk7XG5cdH0sXG5cdGN1cjogZnVuY3Rpb24oKSB7XG5cdFx0dmFyIGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcblxuXHRcdHJldHVybiBob29rcyAmJiBob29rcy5nZXQgP1xuXHRcdFx0aG9va3MuZ2V0KCB0aGlzICkgOlxuXHRcdFx0VHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LmdldCggdGhpcyApO1xuXHR9LFxuXHRydW46IGZ1bmN0aW9uKCBwZXJjZW50ICkge1xuXHRcdHZhciBlYXNlZCxcblx0XHRcdGhvb2tzID0gVHdlZW4ucHJvcEhvb2tzWyB0aGlzLnByb3AgXTtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLmR1cmF0aW9uICkge1xuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IGpRdWVyeS5lYXNpbmdbIHRoaXMuZWFzaW5nIF0oXG5cdFx0XHRcdHBlcmNlbnQsIHRoaXMub3B0aW9ucy5kdXJhdGlvbiAqIHBlcmNlbnQsIDAsIDEsIHRoaXMub3B0aW9ucy5kdXJhdGlvblxuXHRcdFx0KTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0dGhpcy5wb3MgPSBlYXNlZCA9IHBlcmNlbnQ7XG5cdFx0fVxuXHRcdHRoaXMubm93ID0gKCB0aGlzLmVuZCAtIHRoaXMuc3RhcnQgKSAqIGVhc2VkICsgdGhpcy5zdGFydDtcblxuXHRcdGlmICggdGhpcy5vcHRpb25zLnN0ZXAgKSB7XG5cdFx0XHR0aGlzLm9wdGlvbnMuc3RlcC5jYWxsKCB0aGlzLmVsZW0sIHRoaXMubm93LCB0aGlzICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBob29rcy5zZXQgKSB7XG5cdFx0XHRob29rcy5zZXQoIHRoaXMgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0VHdlZW4ucHJvcEhvb2tzLl9kZWZhdWx0LnNldCggdGhpcyApO1xuXHRcdH1cblx0XHRyZXR1cm4gdGhpcztcblx0fVxufTtcblxuVHdlZW4ucHJvdG90eXBlLmluaXQucHJvdG90eXBlID0gVHdlZW4ucHJvdG90eXBlO1xuXG5Ud2Vlbi5wcm9wSG9va3MgPSB7XG5cdF9kZWZhdWx0OiB7XG5cdFx0Z2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cdFx0XHR2YXIgcmVzdWx0O1xuXG5cdFx0XHQvLyBVc2UgYSBwcm9wZXJ0eSBvbiB0aGUgZWxlbWVudCBkaXJlY3RseSB3aGVuIGl0IGlzIG5vdCBhIERPTSBlbGVtZW50LFxuXHRcdFx0Ly8gb3Igd2hlbiB0aGVyZSBpcyBubyBtYXRjaGluZyBzdHlsZSBwcm9wZXJ0eSB0aGF0IGV4aXN0cy5cblx0XHRcdGlmICggdHdlZW4uZWxlbS5ub2RlVHlwZSAhPT0gMSB8fFxuXHRcdFx0XHR0d2Vlbi5lbGVtWyB0d2Vlbi5wcm9wIF0gIT0gbnVsbCAmJiB0d2Vlbi5lbGVtLnN0eWxlWyB0d2Vlbi5wcm9wIF0gPT0gbnVsbCApIHtcblx0XHRcdFx0cmV0dXJuIHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gUGFzc2luZyBhbiBlbXB0eSBzdHJpbmcgYXMgYSAzcmQgcGFyYW1ldGVyIHRvIC5jc3Mgd2lsbCBhdXRvbWF0aWNhbGx5XG5cdFx0XHQvLyBhdHRlbXB0IGEgcGFyc2VGbG9hdCBhbmQgZmFsbGJhY2sgdG8gYSBzdHJpbmcgaWYgdGhlIHBhcnNlIGZhaWxzLlxuXHRcdFx0Ly8gU2ltcGxlIHZhbHVlcyBzdWNoIGFzIFwiMTBweFwiIGFyZSBwYXJzZWQgdG8gRmxvYXQ7XG5cdFx0XHQvLyBjb21wbGV4IHZhbHVlcyBzdWNoIGFzIFwicm90YXRlKDFyYWQpXCIgYXJlIHJldHVybmVkIGFzLWlzLlxuXHRcdFx0cmVzdWx0ID0galF1ZXJ5LmNzcyggdHdlZW4uZWxlbSwgdHdlZW4ucHJvcCwgXCJcIiApO1xuXG5cdFx0XHQvLyBFbXB0eSBzdHJpbmdzLCBudWxsLCB1bmRlZmluZWQgYW5kIFwiYXV0b1wiIGFyZSBjb252ZXJ0ZWQgdG8gMC5cblx0XHRcdHJldHVybiAhcmVzdWx0IHx8IHJlc3VsdCA9PT0gXCJhdXRvXCIgPyAwIDogcmVzdWx0O1xuXHRcdH0sXG5cdFx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cblx0XHRcdC8vIFVzZSBzdGVwIGhvb2sgZm9yIGJhY2sgY29tcGF0LlxuXHRcdFx0Ly8gVXNlIGNzc0hvb2sgaWYgaXRzIHRoZXJlLlxuXHRcdFx0Ly8gVXNlIC5zdHlsZSBpZiBhdmFpbGFibGUgYW5kIHVzZSBwbGFpbiBwcm9wZXJ0aWVzIHdoZXJlIGF2YWlsYWJsZS5cblx0XHRcdGlmICggalF1ZXJ5LmZ4LnN0ZXBbIHR3ZWVuLnByb3AgXSApIHtcblx0XHRcdFx0alF1ZXJ5LmZ4LnN0ZXBbIHR3ZWVuLnByb3AgXSggdHdlZW4gKTtcblx0XHRcdH0gZWxzZSBpZiAoIHR3ZWVuLmVsZW0ubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0KCB0d2Vlbi5lbGVtLnN0eWxlWyBqUXVlcnkuY3NzUHJvcHNbIHR3ZWVuLnByb3AgXSBdICE9IG51bGwgfHxcblx0XHRcdFx0XHRqUXVlcnkuY3NzSG9va3NbIHR3ZWVuLnByb3AgXSApICkge1xuXHRcdFx0XHRqUXVlcnkuc3R5bGUoIHR3ZWVuLmVsZW0sIHR3ZWVuLnByb3AsIHR3ZWVuLm5vdyArIHR3ZWVuLnVuaXQgKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn07XG5cbi8vIFN1cHBvcnQ6IElFIDw9OSBvbmx5XG4vLyBQYW5pYyBiYXNlZCBhcHByb2FjaCB0byBzZXR0aW5nIHRoaW5ncyBvbiBkaXNjb25uZWN0ZWQgbm9kZXNcblR3ZWVuLnByb3BIb29rcy5zY3JvbGxUb3AgPSBUd2Vlbi5wcm9wSG9va3Muc2Nyb2xsTGVmdCA9IHtcblx0c2V0OiBmdW5jdGlvbiggdHdlZW4gKSB7XG5cdFx0aWYgKCB0d2Vlbi5lbGVtLm5vZGVUeXBlICYmIHR3ZWVuLmVsZW0ucGFyZW50Tm9kZSApIHtcblx0XHRcdHR3ZWVuLmVsZW1bIHR3ZWVuLnByb3AgXSA9IHR3ZWVuLm5vdztcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5lYXNpbmcgPSB7XG5cdGxpbmVhcjogZnVuY3Rpb24oIHAgKSB7XG5cdFx0cmV0dXJuIHA7XG5cdH0sXG5cdHN3aW5nOiBmdW5jdGlvbiggcCApIHtcblx0XHRyZXR1cm4gMC41IC0gTWF0aC5jb3MoIHAgKiBNYXRoLlBJICkgLyAyO1xuXHR9LFxuXHRfZGVmYXVsdDogXCJzd2luZ1wiXG59O1xuXG5qUXVlcnkuZnggPSBUd2Vlbi5wcm90b3R5cGUuaW5pdDtcblxuLy8gQmFjayBjb21wYXQgPDEuOCBleHRlbnNpb24gcG9pbnRcbmpRdWVyeS5meC5zdGVwID0ge307XG5cblxuXG5cbnZhclxuXHRmeE5vdywgaW5Qcm9ncmVzcyxcblx0cmZ4dHlwZXMgPSAvXig/OnRvZ2dsZXxzaG93fGhpZGUpJC8sXG5cdHJydW4gPSAvcXVldWVIb29rcyQvO1xuXG5mdW5jdGlvbiBzY2hlZHVsZSgpIHtcblx0aWYgKCBpblByb2dyZXNzICkge1xuXHRcdGlmICggZG9jdW1lbnQuaGlkZGVuID09PSBmYWxzZSAmJiB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lICkge1xuXHRcdFx0d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZSggc2NoZWR1bGUgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0d2luZG93LnNldFRpbWVvdXQoIHNjaGVkdWxlLCBqUXVlcnkuZnguaW50ZXJ2YWwgKTtcblx0XHR9XG5cblx0XHRqUXVlcnkuZngudGljaygpO1xuXHR9XG59XG5cbi8vIEFuaW1hdGlvbnMgY3JlYXRlZCBzeW5jaHJvbm91c2x5IHdpbGwgcnVuIHN5bmNocm9ub3VzbHlcbmZ1bmN0aW9uIGNyZWF0ZUZ4Tm93KCkge1xuXHR3aW5kb3cuc2V0VGltZW91dCggZnVuY3Rpb24oKSB7XG5cdFx0ZnhOb3cgPSB1bmRlZmluZWQ7XG5cdH0gKTtcblx0cmV0dXJuICggZnhOb3cgPSBEYXRlLm5vdygpICk7XG59XG5cbi8vIEdlbmVyYXRlIHBhcmFtZXRlcnMgdG8gY3JlYXRlIGEgc3RhbmRhcmQgYW5pbWF0aW9uXG5mdW5jdGlvbiBnZW5GeCggdHlwZSwgaW5jbHVkZVdpZHRoICkge1xuXHR2YXIgd2hpY2gsXG5cdFx0aSA9IDAsXG5cdFx0YXR0cnMgPSB7IGhlaWdodDogdHlwZSB9O1xuXG5cdC8vIElmIHdlIGluY2x1ZGUgd2lkdGgsIHN0ZXAgdmFsdWUgaXMgMSB0byBkbyBhbGwgY3NzRXhwYW5kIHZhbHVlcyxcblx0Ly8gb3RoZXJ3aXNlIHN0ZXAgdmFsdWUgaXMgMiB0byBza2lwIG92ZXIgTGVmdCBhbmQgUmlnaHRcblx0aW5jbHVkZVdpZHRoID0gaW5jbHVkZVdpZHRoID8gMSA6IDA7XG5cdGZvciAoIDsgaSA8IDQ7IGkgKz0gMiAtIGluY2x1ZGVXaWR0aCApIHtcblx0XHR3aGljaCA9IGNzc0V4cGFuZFsgaSBdO1xuXHRcdGF0dHJzWyBcIm1hcmdpblwiICsgd2hpY2ggXSA9IGF0dHJzWyBcInBhZGRpbmdcIiArIHdoaWNoIF0gPSB0eXBlO1xuXHR9XG5cblx0aWYgKCBpbmNsdWRlV2lkdGggKSB7XG5cdFx0YXR0cnMub3BhY2l0eSA9IGF0dHJzLndpZHRoID0gdHlwZTtcblx0fVxuXG5cdHJldHVybiBhdHRycztcbn1cblxuZnVuY3Rpb24gY3JlYXRlVHdlZW4oIHZhbHVlLCBwcm9wLCBhbmltYXRpb24gKSB7XG5cdHZhciB0d2Vlbixcblx0XHRjb2xsZWN0aW9uID0gKCBBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSB8fCBbXSApLmNvbmNhdCggQW5pbWF0aW9uLnR3ZWVuZXJzWyBcIipcIiBdICksXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IGNvbGxlY3Rpb24ubGVuZ3RoO1xuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdGlmICggKCB0d2VlbiA9IGNvbGxlY3Rpb25bIGluZGV4IF0uY2FsbCggYW5pbWF0aW9uLCBwcm9wLCB2YWx1ZSApICkgKSB7XG5cblx0XHRcdC8vIFdlJ3JlIGRvbmUgd2l0aCB0aGlzIHByb3BlcnR5XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fVxuXHR9XG59XG5cbmZ1bmN0aW9uIGRlZmF1bHRQcmVmaWx0ZXIoIGVsZW0sIHByb3BzLCBvcHRzICkge1xuXHR2YXIgcHJvcCwgdmFsdWUsIHRvZ2dsZSwgaG9va3MsIG9sZGZpcmUsIHByb3BUd2VlbiwgcmVzdG9yZURpc3BsYXksIGRpc3BsYXksXG5cdFx0aXNCb3ggPSBcIndpZHRoXCIgaW4gcHJvcHMgfHwgXCJoZWlnaHRcIiBpbiBwcm9wcyxcblx0XHRhbmltID0gdGhpcyxcblx0XHRvcmlnID0ge30sXG5cdFx0c3R5bGUgPSBlbGVtLnN0eWxlLFxuXHRcdGhpZGRlbiA9IGVsZW0ubm9kZVR5cGUgJiYgaXNIaWRkZW5XaXRoaW5UcmVlKCBlbGVtICksXG5cdFx0ZGF0YVNob3cgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZnhzaG93XCIgKTtcblxuXHQvLyBRdWV1ZS1za2lwcGluZyBhbmltYXRpb25zIGhpamFjayB0aGUgZnggaG9va3Ncblx0aWYgKCAhb3B0cy5xdWV1ZSApIHtcblx0XHRob29rcyA9IGpRdWVyeS5fcXVldWVIb29rcyggZWxlbSwgXCJmeFwiICk7XG5cdFx0aWYgKCBob29rcy51bnF1ZXVlZCA9PSBudWxsICkge1xuXHRcdFx0aG9va3MudW5xdWV1ZWQgPSAwO1xuXHRcdFx0b2xkZmlyZSA9IGhvb2tzLmVtcHR5LmZpcmU7XG5cdFx0XHRob29rcy5lbXB0eS5maXJlID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggIWhvb2tzLnVucXVldWVkICkge1xuXHRcdFx0XHRcdG9sZGZpcmUoKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHR9XG5cdFx0aG9va3MudW5xdWV1ZWQrKztcblxuXHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0Ly8gRW5zdXJlIHRoZSBjb21wbGV0ZSBoYW5kbGVyIGlzIGNhbGxlZCBiZWZvcmUgdGhpcyBjb21wbGV0ZXNcblx0XHRcdGFuaW0uYWx3YXlzKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0aG9va3MudW5xdWV1ZWQtLTtcblx0XHRcdFx0aWYgKCAhalF1ZXJ5LnF1ZXVlKCBlbGVtLCBcImZ4XCIgKS5sZW5ndGggKSB7XG5cdFx0XHRcdFx0aG9va3MuZW1wdHkuZmlyZSgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9ICk7XG5cdFx0fSApO1xuXHR9XG5cblx0Ly8gRGV0ZWN0IHNob3cvaGlkZSBhbmltYXRpb25zXG5cdGZvciAoIHByb3AgaW4gcHJvcHMgKSB7XG5cdFx0dmFsdWUgPSBwcm9wc1sgcHJvcCBdO1xuXHRcdGlmICggcmZ4dHlwZXMudGVzdCggdmFsdWUgKSApIHtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgcHJvcCBdO1xuXHRcdFx0dG9nZ2xlID0gdG9nZ2xlIHx8IHZhbHVlID09PSBcInRvZ2dsZVwiO1xuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gKCBoaWRkZW4gPyBcImhpZGVcIiA6IFwic2hvd1wiICkgKSB7XG5cblx0XHRcdFx0Ly8gUHJldGVuZCB0byBiZSBoaWRkZW4gaWYgdGhpcyBpcyBhIFwic2hvd1wiIGFuZFxuXHRcdFx0XHQvLyB0aGVyZSBpcyBzdGlsbCBkYXRhIGZyb20gYSBzdG9wcGVkIHNob3cvaGlkZVxuXHRcdFx0XHRpZiAoIHZhbHVlID09PSBcInNob3dcIiAmJiBkYXRhU2hvdyAmJiBkYXRhU2hvd1sgcHJvcCBdICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdFx0aGlkZGVuID0gdHJ1ZTtcblxuXHRcdFx0XHQvLyBJZ25vcmUgYWxsIG90aGVyIG5vLW9wIHNob3cvaGlkZSBkYXRhXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0Y29udGludWU7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHRcdG9yaWdbIHByb3AgXSA9IGRhdGFTaG93ICYmIGRhdGFTaG93WyBwcm9wIF0gfHwgalF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wICk7XG5cdFx0fVxuXHR9XG5cblx0Ly8gQmFpbCBvdXQgaWYgdGhpcyBpcyBhIG5vLW9wIGxpa2UgLmhpZGUoKS5oaWRlKClcblx0cHJvcFR3ZWVuID0gIWpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wcyApO1xuXHRpZiAoICFwcm9wVHdlZW4gJiYgalF1ZXJ5LmlzRW1wdHlPYmplY3QoIG9yaWcgKSApIHtcblx0XHRyZXR1cm47XG5cdH1cblxuXHQvLyBSZXN0cmljdCBcIm92ZXJmbG93XCIgYW5kIFwiZGlzcGxheVwiIHN0eWxlcyBkdXJpbmcgYm94IGFuaW1hdGlvbnNcblx0aWYgKCBpc0JveCAmJiBlbGVtLm5vZGVUeXBlID09PSAxICkge1xuXG5cdFx0Ly8gU3VwcG9ydDogSUUgPD05IC0gMTEsIEVkZ2UgMTIgLSAxNVxuXHRcdC8vIFJlY29yZCBhbGwgMyBvdmVyZmxvdyBhdHRyaWJ1dGVzIGJlY2F1c2UgSUUgZG9lcyBub3QgaW5mZXIgdGhlIHNob3J0aGFuZFxuXHRcdC8vIGZyb20gaWRlbnRpY2FsbHktdmFsdWVkIG92ZXJmbG93WCBhbmQgb3ZlcmZsb3dZIGFuZCBFZGdlIGp1c3QgbWlycm9yc1xuXHRcdC8vIHRoZSBvdmVyZmxvd1ggdmFsdWUgdGhlcmUuXG5cdFx0b3B0cy5vdmVyZmxvdyA9IFsgc3R5bGUub3ZlcmZsb3csIHN0eWxlLm92ZXJmbG93WCwgc3R5bGUub3ZlcmZsb3dZIF07XG5cblx0XHQvLyBJZGVudGlmeSBhIGRpc3BsYXkgdHlwZSwgcHJlZmVycmluZyBvbGQgc2hvdy9oaWRlIGRhdGEgb3ZlciB0aGUgQ1NTIGNhc2NhZGVcblx0XHRyZXN0b3JlRGlzcGxheSA9IGRhdGFTaG93ICYmIGRhdGFTaG93LmRpc3BsYXk7XG5cdFx0aWYgKCByZXN0b3JlRGlzcGxheSA9PSBudWxsICkge1xuXHRcdFx0cmVzdG9yZURpc3BsYXkgPSBkYXRhUHJpdi5nZXQoIGVsZW0sIFwiZGlzcGxheVwiICk7XG5cdFx0fVxuXHRcdGRpc3BsYXkgPSBqUXVlcnkuY3NzKCBlbGVtLCBcImRpc3BsYXlcIiApO1xuXHRcdGlmICggZGlzcGxheSA9PT0gXCJub25lXCIgKSB7XG5cdFx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ICkge1xuXHRcdFx0XHRkaXNwbGF5ID0gcmVzdG9yZURpc3BsYXk7XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEdldCBub25lbXB0eSB2YWx1ZShzKSBieSB0ZW1wb3JhcmlseSBmb3JjaW5nIHZpc2liaWxpdHlcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdLCB0cnVlICk7XG5cdFx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZWxlbS5zdHlsZS5kaXNwbGF5IHx8IHJlc3RvcmVEaXNwbGF5O1xuXHRcdFx0XHRkaXNwbGF5ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJkaXNwbGF5XCIgKTtcblx0XHRcdFx0c2hvd0hpZGUoIFsgZWxlbSBdICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gQW5pbWF0ZSBpbmxpbmUgZWxlbWVudHMgYXMgaW5saW5lLWJsb2NrXG5cdFx0aWYgKCBkaXNwbGF5ID09PSBcImlubGluZVwiIHx8IGRpc3BsYXkgPT09IFwiaW5saW5lLWJsb2NrXCIgJiYgcmVzdG9yZURpc3BsYXkgIT0gbnVsbCApIHtcblx0XHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJmbG9hdFwiICkgPT09IFwibm9uZVwiICkge1xuXG5cdFx0XHRcdC8vIFJlc3RvcmUgdGhlIG9yaWdpbmFsIGRpc3BsYXkgdmFsdWUgYXQgdGhlIGVuZCBvZiBwdXJlIHNob3cvaGlkZSBhbmltYXRpb25zXG5cdFx0XHRcdGlmICggIXByb3BUd2VlbiApIHtcblx0XHRcdFx0XHRhbmltLmRvbmUoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0c3R5bGUuZGlzcGxheSA9IHJlc3RvcmVEaXNwbGF5O1xuXHRcdFx0XHRcdH0gKTtcblx0XHRcdFx0XHRpZiAoIHJlc3RvcmVEaXNwbGF5ID09IG51bGwgKSB7XG5cdFx0XHRcdFx0XHRkaXNwbGF5ID0gc3R5bGUuZGlzcGxheTtcblx0XHRcdFx0XHRcdHJlc3RvcmVEaXNwbGF5ID0gZGlzcGxheSA9PT0gXCJub25lXCIgPyBcIlwiIDogZGlzcGxheTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdFx0c3R5bGUuZGlzcGxheSA9IFwiaW5saW5lLWJsb2NrXCI7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0aWYgKCBvcHRzLm92ZXJmbG93ICkge1xuXHRcdHN0eWxlLm92ZXJmbG93ID0gXCJoaWRkZW5cIjtcblx0XHRhbmltLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cdFx0XHRzdHlsZS5vdmVyZmxvdyA9IG9wdHMub3ZlcmZsb3dbIDAgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WCA9IG9wdHMub3ZlcmZsb3dbIDEgXTtcblx0XHRcdHN0eWxlLm92ZXJmbG93WSA9IG9wdHMub3ZlcmZsb3dbIDIgXTtcblx0XHR9ICk7XG5cdH1cblxuXHQvLyBJbXBsZW1lbnQgc2hvdy9oaWRlIGFuaW1hdGlvbnNcblx0cHJvcFR3ZWVuID0gZmFsc2U7XG5cdGZvciAoIHByb3AgaW4gb3JpZyApIHtcblxuXHRcdC8vIEdlbmVyYWwgc2hvdy9oaWRlIHNldHVwIGZvciB0aGlzIGVsZW1lbnQgYW5pbWF0aW9uXG5cdFx0aWYgKCAhcHJvcFR3ZWVuICkge1xuXHRcdFx0aWYgKCBkYXRhU2hvdyApIHtcblx0XHRcdFx0aWYgKCBcImhpZGRlblwiIGluIGRhdGFTaG93ICkge1xuXHRcdFx0XHRcdGhpZGRlbiA9IGRhdGFTaG93LmhpZGRlbjtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0ZGF0YVNob3cgPSBkYXRhUHJpdi5hY2Nlc3MoIGVsZW0sIFwiZnhzaG93XCIsIHsgZGlzcGxheTogcmVzdG9yZURpc3BsYXkgfSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdG9yZSBoaWRkZW4vdmlzaWJsZSBmb3IgdG9nZ2xlIHNvIGAuc3RvcCgpLnRvZ2dsZSgpYCBcInJldmVyc2VzXCJcblx0XHRcdGlmICggdG9nZ2xlICkge1xuXHRcdFx0XHRkYXRhU2hvdy5oaWRkZW4gPSAhaGlkZGVuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTaG93IGVsZW1lbnRzIGJlZm9yZSBhbmltYXRpbmcgdGhlbVxuXHRcdFx0aWYgKCBoaWRkZW4gKSB7XG5cdFx0XHRcdHNob3dIaWRlKCBbIGVsZW0gXSwgdHJ1ZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby1sb29wLWZ1bmMgKi9cblxuXHRcdFx0YW5pbS5kb25lKCBmdW5jdGlvbigpIHtcblxuXHRcdFx0LyogZXNsaW50LWVuYWJsZSBuby1sb29wLWZ1bmMgKi9cblxuXHRcdFx0XHQvLyBUaGUgZmluYWwgc3RlcCBvZiBhIFwiaGlkZVwiIGFuaW1hdGlvbiBpcyBhY3R1YWxseSBoaWRpbmcgdGhlIGVsZW1lbnRcblx0XHRcdFx0aWYgKCAhaGlkZGVuICkge1xuXHRcdFx0XHRcdHNob3dIaWRlKCBbIGVsZW0gXSApO1xuXHRcdFx0XHR9XG5cdFx0XHRcdGRhdGFQcml2LnJlbW92ZSggZWxlbSwgXCJmeHNob3dcIiApO1xuXHRcdFx0XHRmb3IgKCBwcm9wIGluIG9yaWcgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCBwcm9wLCBvcmlnWyBwcm9wIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdC8vIFBlci1wcm9wZXJ0eSBzZXR1cFxuXHRcdHByb3BUd2VlbiA9IGNyZWF0ZVR3ZWVuKCBoaWRkZW4gPyBkYXRhU2hvd1sgcHJvcCBdIDogMCwgcHJvcCwgYW5pbSApO1xuXHRcdGlmICggISggcHJvcCBpbiBkYXRhU2hvdyApICkge1xuXHRcdFx0ZGF0YVNob3dbIHByb3AgXSA9IHByb3BUd2Vlbi5zdGFydDtcblx0XHRcdGlmICggaGlkZGVuICkge1xuXHRcdFx0XHRwcm9wVHdlZW4uZW5kID0gcHJvcFR3ZWVuLnN0YXJ0O1xuXHRcdFx0XHRwcm9wVHdlZW4uc3RhcnQgPSAwO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufVxuXG5mdW5jdGlvbiBwcm9wRmlsdGVyKCBwcm9wcywgc3BlY2lhbEVhc2luZyApIHtcblx0dmFyIGluZGV4LCBuYW1lLCBlYXNpbmcsIHZhbHVlLCBob29rcztcblxuXHQvLyBjYW1lbENhc2UsIHNwZWNpYWxFYXNpbmcgYW5kIGV4cGFuZCBjc3NIb29rIHBhc3Ncblx0Zm9yICggaW5kZXggaW4gcHJvcHMgKSB7XG5cdFx0bmFtZSA9IGNhbWVsQ2FzZSggaW5kZXggKTtcblx0XHRlYXNpbmcgPSBzcGVjaWFsRWFzaW5nWyBuYW1lIF07XG5cdFx0dmFsdWUgPSBwcm9wc1sgaW5kZXggXTtcblx0XHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0XHRlYXNpbmcgPSB2YWx1ZVsgMSBdO1xuXHRcdFx0dmFsdWUgPSBwcm9wc1sgaW5kZXggXSA9IHZhbHVlWyAwIF07XG5cdFx0fVxuXG5cdFx0aWYgKCBpbmRleCAhPT0gbmFtZSApIHtcblx0XHRcdHByb3BzWyBuYW1lIF0gPSB2YWx1ZTtcblx0XHRcdGRlbGV0ZSBwcm9wc1sgaW5kZXggXTtcblx0XHR9XG5cblx0XHRob29rcyA9IGpRdWVyeS5jc3NIb29rc1sgbmFtZSBdO1xuXHRcdGlmICggaG9va3MgJiYgXCJleHBhbmRcIiBpbiBob29rcyApIHtcblx0XHRcdHZhbHVlID0gaG9va3MuZXhwYW5kKCB2YWx1ZSApO1xuXHRcdFx0ZGVsZXRlIHByb3BzWyBuYW1lIF07XG5cblx0XHRcdC8vIE5vdCBxdWl0ZSAkLmV4dGVuZCwgdGhpcyB3b24ndCBvdmVyd3JpdGUgZXhpc3Rpbmcga2V5cy5cblx0XHRcdC8vIFJldXNpbmcgJ2luZGV4JyBiZWNhdXNlIHdlIGhhdmUgdGhlIGNvcnJlY3QgXCJuYW1lXCJcblx0XHRcdGZvciAoIGluZGV4IGluIHZhbHVlICkge1xuXHRcdFx0XHRpZiAoICEoIGluZGV4IGluIHByb3BzICkgKSB7XG5cdFx0XHRcdFx0cHJvcHNbIGluZGV4IF0gPSB2YWx1ZVsgaW5kZXggXTtcblx0XHRcdFx0XHRzcGVjaWFsRWFzaW5nWyBpbmRleCBdID0gZWFzaW5nO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fSBlbHNlIHtcblx0XHRcdHNwZWNpYWxFYXNpbmdbIG5hbWUgXSA9IGVhc2luZztcblx0XHR9XG5cdH1cbn1cblxuZnVuY3Rpb24gQW5pbWF0aW9uKCBlbGVtLCBwcm9wZXJ0aWVzLCBvcHRpb25zICkge1xuXHR2YXIgcmVzdWx0LFxuXHRcdHN0b3BwZWQsXG5cdFx0aW5kZXggPSAwLFxuXHRcdGxlbmd0aCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzLmxlbmd0aCxcblx0XHRkZWZlcnJlZCA9IGpRdWVyeS5EZWZlcnJlZCgpLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIERvbid0IG1hdGNoIGVsZW0gaW4gdGhlIDphbmltYXRlZCBzZWxlY3RvclxuXHRcdFx0ZGVsZXRlIHRpY2suZWxlbTtcblx0XHR9ICksXG5cdFx0dGljayA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0aWYgKCBzdG9wcGVkICkge1xuXHRcdFx0XHRyZXR1cm4gZmFsc2U7XG5cdFx0XHR9XG5cdFx0XHR2YXIgY3VycmVudFRpbWUgPSBmeE5vdyB8fCBjcmVhdGVGeE5vdygpLFxuXHRcdFx0XHRyZW1haW5pbmcgPSBNYXRoLm1heCggMCwgYW5pbWF0aW9uLnN0YXJ0VGltZSArIGFuaW1hdGlvbi5kdXJhdGlvbiAtIGN1cnJlbnRUaW1lICksXG5cblx0XHRcdFx0Ly8gU3VwcG9ydDogQW5kcm9pZCAyLjMgb25seVxuXHRcdFx0XHQvLyBBcmNoYWljIGNyYXNoIGJ1ZyB3b24ndCBhbGxvdyB1cyB0byB1c2UgYDEgLSAoIDAuNSB8fCAwIClgICgjMTI0OTcpXG5cdFx0XHRcdHRlbXAgPSByZW1haW5pbmcgLyBhbmltYXRpb24uZHVyYXRpb24gfHwgMCxcblx0XHRcdFx0cGVyY2VudCA9IDEgLSB0ZW1wLFxuXHRcdFx0XHRpbmRleCA9IDAsXG5cdFx0XHRcdGxlbmd0aCA9IGFuaW1hdGlvbi50d2VlbnMubGVuZ3RoO1xuXG5cdFx0XHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggcGVyY2VudCApO1xuXHRcdFx0fVxuXG5cdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgcGVyY2VudCwgcmVtYWluaW5nIF0gKTtcblxuXHRcdFx0Ly8gSWYgdGhlcmUncyBtb3JlIHRvIGRvLCB5aWVsZFxuXHRcdFx0aWYgKCBwZXJjZW50IDwgMSAmJiBsZW5ndGggKSB7XG5cdFx0XHRcdHJldHVybiByZW1haW5pbmc7XG5cdFx0XHR9XG5cblx0XHRcdC8vIElmIHRoaXMgd2FzIGFuIGVtcHR5IGFuaW1hdGlvbiwgc3ludGhlc2l6ZSBhIGZpbmFsIHByb2dyZXNzIG5vdGlmaWNhdGlvblxuXHRcdFx0aWYgKCAhbGVuZ3RoICkge1xuXHRcdFx0XHRkZWZlcnJlZC5ub3RpZnlXaXRoKCBlbGVtLCBbIGFuaW1hdGlvbiwgMSwgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFJlc29sdmUgdGhlIGFuaW1hdGlvbiBhbmQgcmVwb3J0IGl0cyBjb25jbHVzaW9uXG5cdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24gXSApO1xuXHRcdFx0cmV0dXJuIGZhbHNlO1xuXHRcdH0sXG5cdFx0YW5pbWF0aW9uID0gZGVmZXJyZWQucHJvbWlzZSgge1xuXHRcdFx0ZWxlbTogZWxlbSxcblx0XHRcdHByb3BzOiBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcGVydGllcyApLFxuXHRcdFx0b3B0czogalF1ZXJ5LmV4dGVuZCggdHJ1ZSwge1xuXHRcdFx0XHRzcGVjaWFsRWFzaW5nOiB7fSxcblx0XHRcdFx0ZWFzaW5nOiBqUXVlcnkuZWFzaW5nLl9kZWZhdWx0XG5cdFx0XHR9LCBvcHRpb25zICksXG5cdFx0XHRvcmlnaW5hbFByb3BlcnRpZXM6IHByb3BlcnRpZXMsXG5cdFx0XHRvcmlnaW5hbE9wdGlvbnM6IG9wdGlvbnMsXG5cdFx0XHRzdGFydFRpbWU6IGZ4Tm93IHx8IGNyZWF0ZUZ4Tm93KCksXG5cdFx0XHRkdXJhdGlvbjogb3B0aW9ucy5kdXJhdGlvbixcblx0XHRcdHR3ZWVuczogW10sXG5cdFx0XHRjcmVhdGVUd2VlbjogZnVuY3Rpb24oIHByb3AsIGVuZCApIHtcblx0XHRcdFx0dmFyIHR3ZWVuID0galF1ZXJ5LlR3ZWVuKCBlbGVtLCBhbmltYXRpb24ub3B0cywgcHJvcCwgZW5kLFxuXHRcdFx0XHRcdFx0YW5pbWF0aW9uLm9wdHMuc3BlY2lhbEVhc2luZ1sgcHJvcCBdIHx8IGFuaW1hdGlvbi5vcHRzLmVhc2luZyApO1xuXHRcdFx0XHRhbmltYXRpb24udHdlZW5zLnB1c2goIHR3ZWVuICk7XG5cdFx0XHRcdHJldHVybiB0d2Vlbjtcblx0XHRcdH0sXG5cdFx0XHRzdG9wOiBmdW5jdGlvbiggZ290b0VuZCApIHtcblx0XHRcdFx0dmFyIGluZGV4ID0gMCxcblxuXHRcdFx0XHRcdC8vIElmIHdlIGFyZSBnb2luZyB0byB0aGUgZW5kLCB3ZSB3YW50IHRvIHJ1biBhbGwgdGhlIHR3ZWVuc1xuXHRcdFx0XHRcdC8vIG90aGVyd2lzZSB3ZSBza2lwIHRoaXMgcGFydFxuXHRcdFx0XHRcdGxlbmd0aCA9IGdvdG9FbmQgPyBhbmltYXRpb24udHdlZW5zLmxlbmd0aCA6IDA7XG5cdFx0XHRcdGlmICggc3RvcHBlZCApIHtcblx0XHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdFx0fVxuXHRcdFx0XHRzdG9wcGVkID0gdHJ1ZTtcblx0XHRcdFx0Zm9yICggOyBpbmRleCA8IGxlbmd0aDsgaW5kZXgrKyApIHtcblx0XHRcdFx0XHRhbmltYXRpb24udHdlZW5zWyBpbmRleCBdLnJ1biggMSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gUmVzb2x2ZSB3aGVuIHdlIHBsYXllZCB0aGUgbGFzdCBmcmFtZTsgb3RoZXJ3aXNlLCByZWplY3Rcblx0XHRcdFx0aWYgKCBnb3RvRW5kICkge1xuXHRcdFx0XHRcdGRlZmVycmVkLm5vdGlmeVdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCAxLCAwIF0gKTtcblx0XHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggZWxlbSwgWyBhbmltYXRpb24sIGdvdG9FbmQgXSApO1xuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGVsZW0sIFsgYW5pbWF0aW9uLCBnb3RvRW5kIF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0XHRyZXR1cm4gdGhpcztcblx0XHRcdH1cblx0XHR9ICksXG5cdFx0cHJvcHMgPSBhbmltYXRpb24ucHJvcHM7XG5cblx0cHJvcEZpbHRlciggcHJvcHMsIGFuaW1hdGlvbi5vcHRzLnNwZWNpYWxFYXNpbmcgKTtcblxuXHRmb3IgKCA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdHJlc3VsdCA9IEFuaW1hdGlvbi5wcmVmaWx0ZXJzWyBpbmRleCBdLmNhbGwoIGFuaW1hdGlvbiwgZWxlbSwgcHJvcHMsIGFuaW1hdGlvbi5vcHRzICk7XG5cdFx0aWYgKCByZXN1bHQgKSB7XG5cdFx0XHRpZiAoIGlzRnVuY3Rpb24oIHJlc3VsdC5zdG9wICkgKSB7XG5cdFx0XHRcdGpRdWVyeS5fcXVldWVIb29rcyggYW5pbWF0aW9uLmVsZW0sIGFuaW1hdGlvbi5vcHRzLnF1ZXVlICkuc3RvcCA9XG5cdFx0XHRcdFx0cmVzdWx0LnN0b3AuYmluZCggcmVzdWx0ICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzdWx0O1xuXHRcdH1cblx0fVxuXG5cdGpRdWVyeS5tYXAoIHByb3BzLCBjcmVhdGVUd2VlbiwgYW5pbWF0aW9uICk7XG5cblx0aWYgKCBpc0Z1bmN0aW9uKCBhbmltYXRpb24ub3B0cy5zdGFydCApICkge1xuXHRcdGFuaW1hdGlvbi5vcHRzLnN0YXJ0LmNhbGwoIGVsZW0sIGFuaW1hdGlvbiApO1xuXHR9XG5cblx0Ly8gQXR0YWNoIGNhbGxiYWNrcyBmcm9tIG9wdGlvbnNcblx0YW5pbWF0aW9uXG5cdFx0LnByb2dyZXNzKCBhbmltYXRpb24ub3B0cy5wcm9ncmVzcyApXG5cdFx0LmRvbmUoIGFuaW1hdGlvbi5vcHRzLmRvbmUsIGFuaW1hdGlvbi5vcHRzLmNvbXBsZXRlIClcblx0XHQuZmFpbCggYW5pbWF0aW9uLm9wdHMuZmFpbCApXG5cdFx0LmFsd2F5cyggYW5pbWF0aW9uLm9wdHMuYWx3YXlzICk7XG5cblx0alF1ZXJ5LmZ4LnRpbWVyKFxuXHRcdGpRdWVyeS5leHRlbmQoIHRpY2ssIHtcblx0XHRcdGVsZW06IGVsZW0sXG5cdFx0XHRhbmltOiBhbmltYXRpb24sXG5cdFx0XHRxdWV1ZTogYW5pbWF0aW9uLm9wdHMucXVldWVcblx0XHR9IClcblx0KTtcblxuXHRyZXR1cm4gYW5pbWF0aW9uO1xufVxuXG5qUXVlcnkuQW5pbWF0aW9uID0galF1ZXJ5LmV4dGVuZCggQW5pbWF0aW9uLCB7XG5cblx0dHdlZW5lcnM6IHtcblx0XHRcIipcIjogWyBmdW5jdGlvbiggcHJvcCwgdmFsdWUgKSB7XG5cdFx0XHR2YXIgdHdlZW4gPSB0aGlzLmNyZWF0ZVR3ZWVuKCBwcm9wLCB2YWx1ZSApO1xuXHRcdFx0YWRqdXN0Q1NTKCB0d2Vlbi5lbGVtLCBwcm9wLCByY3NzTnVtLmV4ZWMoIHZhbHVlICksIHR3ZWVuICk7XG5cdFx0XHRyZXR1cm4gdHdlZW47XG5cdFx0fSBdXG5cdH0sXG5cblx0dHdlZW5lcjogZnVuY3Rpb24oIHByb3BzLCBjYWxsYmFjayApIHtcblx0XHRpZiAoIGlzRnVuY3Rpb24oIHByb3BzICkgKSB7XG5cdFx0XHRjYWxsYmFjayA9IHByb3BzO1xuXHRcdFx0cHJvcHMgPSBbIFwiKlwiIF07XG5cdFx0fSBlbHNlIHtcblx0XHRcdHByb3BzID0gcHJvcHMubWF0Y2goIHJub3RodG1sd2hpdGUgKTtcblx0XHR9XG5cblx0XHR2YXIgcHJvcCxcblx0XHRcdGluZGV4ID0gMCxcblx0XHRcdGxlbmd0aCA9IHByb3BzLmxlbmd0aDtcblxuXHRcdGZvciAoIDsgaW5kZXggPCBsZW5ndGg7IGluZGV4KysgKSB7XG5cdFx0XHRwcm9wID0gcHJvcHNbIGluZGV4IF07XG5cdFx0XHRBbmltYXRpb24udHdlZW5lcnNbIHByb3AgXSA9IEFuaW1hdGlvbi50d2VlbmVyc1sgcHJvcCBdIHx8IFtdO1xuXHRcdFx0QW5pbWF0aW9uLnR3ZWVuZXJzWyBwcm9wIF0udW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH0sXG5cblx0cHJlZmlsdGVyczogWyBkZWZhdWx0UHJlZmlsdGVyIF0sXG5cblx0cHJlZmlsdGVyOiBmdW5jdGlvbiggY2FsbGJhY2ssIHByZXBlbmQgKSB7XG5cdFx0aWYgKCBwcmVwZW5kICkge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMudW5zaGlmdCggY2FsbGJhY2sgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0QW5pbWF0aW9uLnByZWZpbHRlcnMucHVzaCggY2FsbGJhY2sgKTtcblx0XHR9XG5cdH1cbn0gKTtcblxualF1ZXJ5LnNwZWVkID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGZuICkge1xuXHR2YXIgb3B0ID0gc3BlZWQgJiYgdHlwZW9mIHNwZWVkID09PSBcIm9iamVjdFwiID8galF1ZXJ5LmV4dGVuZCgge30sIHNwZWVkICkgOiB7XG5cdFx0Y29tcGxldGU6IGZuIHx8ICFmbiAmJiBlYXNpbmcgfHxcblx0XHRcdGlzRnVuY3Rpb24oIHNwZWVkICkgJiYgc3BlZWQsXG5cdFx0ZHVyYXRpb246IHNwZWVkLFxuXHRcdGVhc2luZzogZm4gJiYgZWFzaW5nIHx8IGVhc2luZyAmJiAhaXNGdW5jdGlvbiggZWFzaW5nICkgJiYgZWFzaW5nXG5cdH07XG5cblx0Ly8gR28gdG8gdGhlIGVuZCBzdGF0ZSBpZiBmeCBhcmUgb2ZmXG5cdGlmICggalF1ZXJ5LmZ4Lm9mZiApIHtcblx0XHRvcHQuZHVyYXRpb24gPSAwO1xuXG5cdH0gZWxzZSB7XG5cdFx0aWYgKCB0eXBlb2Ygb3B0LmR1cmF0aW9uICE9PSBcIm51bWJlclwiICkge1xuXHRcdFx0aWYgKCBvcHQuZHVyYXRpb24gaW4galF1ZXJ5LmZ4LnNwZWVkcyApIHtcblx0XHRcdFx0b3B0LmR1cmF0aW9uID0galF1ZXJ5LmZ4LnNwZWVkc1sgb3B0LmR1cmF0aW9uIF07XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdG9wdC5kdXJhdGlvbiA9IGpRdWVyeS5meC5zcGVlZHMuX2RlZmF1bHQ7XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0Ly8gTm9ybWFsaXplIG9wdC5xdWV1ZSAtIHRydWUvdW5kZWZpbmVkL251bGwgLT4gXCJmeFwiXG5cdGlmICggb3B0LnF1ZXVlID09IG51bGwgfHwgb3B0LnF1ZXVlID09PSB0cnVlICkge1xuXHRcdG9wdC5xdWV1ZSA9IFwiZnhcIjtcblx0fVxuXG5cdC8vIFF1ZXVlaW5nXG5cdG9wdC5vbGQgPSBvcHQuY29tcGxldGU7XG5cblx0b3B0LmNvbXBsZXRlID0gZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBvcHQub2xkICkgKSB7XG5cdFx0XHRvcHQub2xkLmNhbGwoIHRoaXMgKTtcblx0XHR9XG5cblx0XHRpZiAoIG9wdC5xdWV1ZSApIHtcblx0XHRcdGpRdWVyeS5kZXF1ZXVlKCB0aGlzLCBvcHQucXVldWUgKTtcblx0XHR9XG5cdH07XG5cblx0cmV0dXJuIG9wdDtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0ZmFkZVRvOiBmdW5jdGlvbiggc3BlZWQsIHRvLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXG5cdFx0Ly8gU2hvdyBhbnkgaGlkZGVuIGVsZW1lbnRzIGFmdGVyIHNldHRpbmcgb3BhY2l0eSB0byAwXG5cdFx0cmV0dXJuIHRoaXMuZmlsdGVyKCBpc0hpZGRlbldpdGhpblRyZWUgKS5jc3MoIFwib3BhY2l0eVwiLCAwICkuc2hvdygpXG5cblx0XHRcdC8vIEFuaW1hdGUgdG8gdGhlIHZhbHVlIHNwZWNpZmllZFxuXHRcdFx0LmVuZCgpLmFuaW1hdGUoIHsgb3BhY2l0eTogdG8gfSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fSxcblx0YW5pbWF0ZTogZnVuY3Rpb24oIHByb3AsIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHZhciBlbXB0eSA9IGpRdWVyeS5pc0VtcHR5T2JqZWN0KCBwcm9wICksXG5cdFx0XHRvcHRhbGwgPSBqUXVlcnkuc3BlZWQoIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICksXG5cdFx0XHRkb0FuaW1hdGlvbiA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdC8vIE9wZXJhdGUgb24gYSBjb3B5IG9mIHByb3Agc28gcGVyLXByb3BlcnR5IGVhc2luZyB3b24ndCBiZSBsb3N0XG5cdFx0XHRcdHZhciBhbmltID0gQW5pbWF0aW9uKCB0aGlzLCBqUXVlcnkuZXh0ZW5kKCB7fSwgcHJvcCApLCBvcHRhbGwgKTtcblxuXHRcdFx0XHQvLyBFbXB0eSBhbmltYXRpb25zLCBvciBmaW5pc2hpbmcgcmVzb2x2ZXMgaW1tZWRpYXRlbHlcblx0XHRcdFx0aWYgKCBlbXB0eSB8fCBkYXRhUHJpdi5nZXQoIHRoaXMsIFwiZmluaXNoXCIgKSApIHtcblx0XHRcdFx0XHRhbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0fVxuXHRcdFx0fTtcblx0XHRcdGRvQW5pbWF0aW9uLmZpbmlzaCA9IGRvQW5pbWF0aW9uO1xuXG5cdFx0cmV0dXJuIGVtcHR5IHx8IG9wdGFsbC5xdWV1ZSA9PT0gZmFsc2UgP1xuXHRcdFx0dGhpcy5lYWNoKCBkb0FuaW1hdGlvbiApIDpcblx0XHRcdHRoaXMucXVldWUoIG9wdGFsbC5xdWV1ZSwgZG9BbmltYXRpb24gKTtcblx0fSxcblx0c3RvcDogZnVuY3Rpb24oIHR5cGUsIGNsZWFyUXVldWUsIGdvdG9FbmQgKSB7XG5cdFx0dmFyIHN0b3BRdWV1ZSA9IGZ1bmN0aW9uKCBob29rcyApIHtcblx0XHRcdHZhciBzdG9wID0gaG9va3Muc3RvcDtcblx0XHRcdGRlbGV0ZSBob29rcy5zdG9wO1xuXHRcdFx0c3RvcCggZ290b0VuZCApO1xuXHRcdH07XG5cblx0XHRpZiAoIHR5cGVvZiB0eXBlICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0Z290b0VuZCA9IGNsZWFyUXVldWU7XG5cdFx0XHRjbGVhclF1ZXVlID0gdHlwZTtcblx0XHRcdHR5cGUgPSB1bmRlZmluZWQ7XG5cdFx0fVxuXHRcdGlmICggY2xlYXJRdWV1ZSAmJiB0eXBlICE9PSBmYWxzZSApIHtcblx0XHRcdHRoaXMucXVldWUoIHR5cGUgfHwgXCJmeFwiLCBbXSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIGRlcXVldWUgPSB0cnVlLFxuXHRcdFx0XHRpbmRleCA9IHR5cGUgIT0gbnVsbCAmJiB0eXBlICsgXCJxdWV1ZUhvb2tzXCIsXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKTtcblxuXHRcdFx0aWYgKCBpbmRleCApIHtcblx0XHRcdFx0aWYgKCBkYXRhWyBpbmRleCBdICYmIGRhdGFbIGluZGV4IF0uc3RvcCApIHtcblx0XHRcdFx0XHRzdG9wUXVldWUoIGRhdGFbIGluZGV4IF0gKTtcblx0XHRcdFx0fVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0Zm9yICggaW5kZXggaW4gZGF0YSApIHtcblx0XHRcdFx0XHRpZiAoIGRhdGFbIGluZGV4IF0gJiYgZGF0YVsgaW5kZXggXS5zdG9wICYmIHJydW4udGVzdCggaW5kZXggKSApIHtcblx0XHRcdFx0XHRcdHN0b3BRdWV1ZSggZGF0YVsgaW5kZXggXSApO1xuXHRcdFx0XHRcdH1cblx0XHRcdFx0fVxuXHRcdFx0fVxuXG5cdFx0XHRmb3IgKCBpbmRleCA9IHRpbWVycy5sZW5ndGg7IGluZGV4LS07ICkge1xuXHRcdFx0XHRpZiAoIHRpbWVyc1sgaW5kZXggXS5lbGVtID09PSB0aGlzICYmXG5cdFx0XHRcdFx0KCB0eXBlID09IG51bGwgfHwgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkgKSB7XG5cblx0XHRcdFx0XHR0aW1lcnNbIGluZGV4IF0uYW5pbS5zdG9wKCBnb3RvRW5kICk7XG5cdFx0XHRcdFx0ZGVxdWV1ZSA9IGZhbHNlO1xuXHRcdFx0XHRcdHRpbWVycy5zcGxpY2UoIGluZGV4LCAxICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblxuXHRcdFx0Ly8gU3RhcnQgdGhlIG5leHQgaW4gdGhlIHF1ZXVlIGlmIHRoZSBsYXN0IHN0ZXAgd2Fzbid0IGZvcmNlZC5cblx0XHRcdC8vIFRpbWVycyBjdXJyZW50bHkgd2lsbCBjYWxsIHRoZWlyIGNvbXBsZXRlIGNhbGxiYWNrcywgd2hpY2hcblx0XHRcdC8vIHdpbGwgZGVxdWV1ZSBidXQgb25seSBpZiB0aGV5IHdlcmUgZ290b0VuZC5cblx0XHRcdGlmICggZGVxdWV1ZSB8fCAhZ290b0VuZCApIHtcblx0XHRcdFx0alF1ZXJ5LmRlcXVldWUoIHRoaXMsIHR5cGUgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdH0sXG5cdGZpbmlzaDogZnVuY3Rpb24oIHR5cGUgKSB7XG5cdFx0aWYgKCB0eXBlICE9PSBmYWxzZSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IFwiZnhcIjtcblx0XHR9XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgaW5kZXgsXG5cdFx0XHRcdGRhdGEgPSBkYXRhUHJpdi5nZXQoIHRoaXMgKSxcblx0XHRcdFx0cXVldWUgPSBkYXRhWyB0eXBlICsgXCJxdWV1ZVwiIF0sXG5cdFx0XHRcdGhvb2tzID0gZGF0YVsgdHlwZSArIFwicXVldWVIb29rc1wiIF0sXG5cdFx0XHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnMsXG5cdFx0XHRcdGxlbmd0aCA9IHF1ZXVlID8gcXVldWUubGVuZ3RoIDogMDtcblxuXHRcdFx0Ly8gRW5hYmxlIGZpbmlzaGluZyBmbGFnIG9uIHByaXZhdGUgZGF0YVxuXHRcdFx0ZGF0YS5maW5pc2ggPSB0cnVlO1xuXG5cdFx0XHQvLyBFbXB0eSB0aGUgcXVldWUgZmlyc3Rcblx0XHRcdGpRdWVyeS5xdWV1ZSggdGhpcywgdHlwZSwgW10gKTtcblxuXHRcdFx0aWYgKCBob29rcyAmJiBob29rcy5zdG9wICkge1xuXHRcdFx0XHRob29rcy5zdG9wLmNhbGwoIHRoaXMsIHRydWUgKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gTG9vayBmb3IgYW55IGFjdGl2ZSBhbmltYXRpb25zLCBhbmQgZmluaXNoIHRoZW1cblx0XHRcdGZvciAoIGluZGV4ID0gdGltZXJzLmxlbmd0aDsgaW5kZXgtLTsgKSB7XG5cdFx0XHRcdGlmICggdGltZXJzWyBpbmRleCBdLmVsZW0gPT09IHRoaXMgJiYgdGltZXJzWyBpbmRleCBdLnF1ZXVlID09PSB0eXBlICkge1xuXHRcdFx0XHRcdHRpbWVyc1sgaW5kZXggXS5hbmltLnN0b3AoIHRydWUgKTtcblx0XHRcdFx0XHR0aW1lcnMuc3BsaWNlKCBpbmRleCwgMSApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIExvb2sgZm9yIGFueSBhbmltYXRpb25zIGluIHRoZSBvbGQgcXVldWUgYW5kIGZpbmlzaCB0aGVtXG5cdFx0XHRmb3IgKCBpbmRleCA9IDA7IGluZGV4IDwgbGVuZ3RoOyBpbmRleCsrICkge1xuXHRcdFx0XHRpZiAoIHF1ZXVlWyBpbmRleCBdICYmIHF1ZXVlWyBpbmRleCBdLmZpbmlzaCApIHtcblx0XHRcdFx0XHRxdWV1ZVsgaW5kZXggXS5maW5pc2guY2FsbCggdGhpcyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFR1cm4gb2ZmIGZpbmlzaGluZyBmbGFnXG5cdFx0XHRkZWxldGUgZGF0YS5maW5pc2g7XG5cdFx0fSApO1xuXHR9XG59ICk7XG5cbmpRdWVyeS5lYWNoKCBbIFwidG9nZ2xlXCIsIFwic2hvd1wiLCBcImhpZGVcIiBdLCBmdW5jdGlvbiggaSwgbmFtZSApIHtcblx0dmFyIGNzc0ZuID0galF1ZXJ5LmZuWyBuYW1lIF07XG5cdGpRdWVyeS5mblsgbmFtZSBdID0gZnVuY3Rpb24oIHNwZWVkLCBlYXNpbmcsIGNhbGxiYWNrICkge1xuXHRcdHJldHVybiBzcGVlZCA9PSBudWxsIHx8IHR5cGVvZiBzcGVlZCA9PT0gXCJib29sZWFuXCIgP1xuXHRcdFx0Y3NzRm4uYXBwbHkoIHRoaXMsIGFyZ3VtZW50cyApIDpcblx0XHRcdHRoaXMuYW5pbWF0ZSggZ2VuRngoIG5hbWUsIHRydWUgKSwgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fTtcbn0gKTtcblxuLy8gR2VuZXJhdGUgc2hvcnRjdXRzIGZvciBjdXN0b20gYW5pbWF0aW9uc1xualF1ZXJ5LmVhY2goIHtcblx0c2xpZGVEb3duOiBnZW5GeCggXCJzaG93XCIgKSxcblx0c2xpZGVVcDogZ2VuRngoIFwiaGlkZVwiICksXG5cdHNsaWRlVG9nZ2xlOiBnZW5GeCggXCJ0b2dnbGVcIiApLFxuXHRmYWRlSW46IHsgb3BhY2l0eTogXCJzaG93XCIgfSxcblx0ZmFkZU91dDogeyBvcGFjaXR5OiBcImhpZGVcIiB9LFxuXHRmYWRlVG9nZ2xlOiB7IG9wYWNpdHk6IFwidG9nZ2xlXCIgfVxufSwgZnVuY3Rpb24oIG5hbWUsIHByb3BzICkge1xuXHRqUXVlcnkuZm5bIG5hbWUgXSA9IGZ1bmN0aW9uKCBzcGVlZCwgZWFzaW5nLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4gdGhpcy5hbmltYXRlKCBwcm9wcywgc3BlZWQsIGVhc2luZywgY2FsbGJhY2sgKTtcblx0fTtcbn0gKTtcblxualF1ZXJ5LnRpbWVycyA9IFtdO1xualF1ZXJ5LmZ4LnRpY2sgPSBmdW5jdGlvbigpIHtcblx0dmFyIHRpbWVyLFxuXHRcdGkgPSAwLFxuXHRcdHRpbWVycyA9IGpRdWVyeS50aW1lcnM7XG5cblx0ZnhOb3cgPSBEYXRlLm5vdygpO1xuXG5cdGZvciAoIDsgaSA8IHRpbWVycy5sZW5ndGg7IGkrKyApIHtcblx0XHR0aW1lciA9IHRpbWVyc1sgaSBdO1xuXG5cdFx0Ly8gUnVuIHRoZSB0aW1lciBhbmQgc2FmZWx5IHJlbW92ZSBpdCB3aGVuIGRvbmUgKGFsbG93aW5nIGZvciBleHRlcm5hbCByZW1vdmFsKVxuXHRcdGlmICggIXRpbWVyKCkgJiYgdGltZXJzWyBpIF0gPT09IHRpbWVyICkge1xuXHRcdFx0dGltZXJzLnNwbGljZSggaS0tLCAxICk7XG5cdFx0fVxuXHR9XG5cblx0aWYgKCAhdGltZXJzLmxlbmd0aCApIHtcblx0XHRqUXVlcnkuZnguc3RvcCgpO1xuXHR9XG5cdGZ4Tm93ID0gdW5kZWZpbmVkO1xufTtcblxualF1ZXJ5LmZ4LnRpbWVyID0gZnVuY3Rpb24oIHRpbWVyICkge1xuXHRqUXVlcnkudGltZXJzLnB1c2goIHRpbWVyICk7XG5cdGpRdWVyeS5meC5zdGFydCgpO1xufTtcblxualF1ZXJ5LmZ4LmludGVydmFsID0gMTM7XG5qUXVlcnkuZnguc3RhcnQgPSBmdW5jdGlvbigpIHtcblx0aWYgKCBpblByb2dyZXNzICkge1xuXHRcdHJldHVybjtcblx0fVxuXG5cdGluUHJvZ3Jlc3MgPSB0cnVlO1xuXHRzY2hlZHVsZSgpO1xufTtcblxualF1ZXJ5LmZ4LnN0b3AgPSBmdW5jdGlvbigpIHtcblx0aW5Qcm9ncmVzcyA9IG51bGw7XG59O1xuXG5qUXVlcnkuZnguc3BlZWRzID0ge1xuXHRzbG93OiA2MDAsXG5cdGZhc3Q6IDIwMCxcblxuXHQvLyBEZWZhdWx0IHNwZWVkXG5cdF9kZWZhdWx0OiA0MDBcbn07XG5cblxuLy8gQmFzZWQgb2ZmIG9mIHRoZSBwbHVnaW4gYnkgQ2xpbnQgSGVsZmVycywgd2l0aCBwZXJtaXNzaW9uLlxuLy8gaHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTAwMzI0MDE0NzQ3L2h0dHA6Ly9ibGluZHNpZ25hbHMuY29tL2luZGV4LnBocC8yMDA5LzA3L2pxdWVyeS1kZWxheS9cbmpRdWVyeS5mbi5kZWxheSA9IGZ1bmN0aW9uKCB0aW1lLCB0eXBlICkge1xuXHR0aW1lID0galF1ZXJ5LmZ4ID8galF1ZXJ5LmZ4LnNwZWVkc1sgdGltZSBdIHx8IHRpbWUgOiB0aW1lO1xuXHR0eXBlID0gdHlwZSB8fCBcImZ4XCI7XG5cblx0cmV0dXJuIHRoaXMucXVldWUoIHR5cGUsIGZ1bmN0aW9uKCBuZXh0LCBob29rcyApIHtcblx0XHR2YXIgdGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KCBuZXh0LCB0aW1lICk7XG5cdFx0aG9va3Muc3RvcCA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dCApO1xuXHRcdH07XG5cdH0gKTtcbn07XG5cblxuKCBmdW5jdGlvbigpIHtcblx0dmFyIGlucHV0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJpbnB1dFwiICksXG5cdFx0c2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJzZWxlY3RcIiApLFxuXHRcdG9wdCA9IHNlbGVjdC5hcHBlbmRDaGlsZCggZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJvcHRpb25cIiApICk7XG5cblx0aW5wdXQudHlwZSA9IFwiY2hlY2tib3hcIjtcblxuXHQvLyBTdXBwb3J0OiBBbmRyb2lkIDw9NC4zIG9ubHlcblx0Ly8gRGVmYXVsdCB2YWx1ZSBmb3IgYSBjaGVja2JveCBzaG91bGQgYmUgXCJvblwiXG5cdHN1cHBvcnQuY2hlY2tPbiA9IGlucHV0LnZhbHVlICE9PSBcIlwiO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBNdXN0IGFjY2VzcyBzZWxlY3RlZEluZGV4IHRvIG1ha2UgZGVmYXVsdCBvcHRpb25zIHNlbGVjdFxuXHRzdXBwb3J0Lm9wdFNlbGVjdGVkID0gb3B0LnNlbGVjdGVkO1xuXG5cdC8vIFN1cHBvcnQ6IElFIDw9MTEgb25seVxuXHQvLyBBbiBpbnB1dCBsb3NlcyBpdHMgdmFsdWUgYWZ0ZXIgYmVjb21pbmcgYSByYWRpb1xuXHRpbnB1dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIFwiaW5wdXRcIiApO1xuXHRpbnB1dC52YWx1ZSA9IFwidFwiO1xuXHRpbnB1dC50eXBlID0gXCJyYWRpb1wiO1xuXHRzdXBwb3J0LnJhZGlvVmFsdWUgPSBpbnB1dC52YWx1ZSA9PT0gXCJ0XCI7XG59ICkoKTtcblxuXG52YXIgYm9vbEhvb2ssXG5cdGF0dHJIYW5kbGUgPSBqUXVlcnkuZXhwci5hdHRySGFuZGxlO1xuXG5qUXVlcnkuZm4uZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBuYW1lLCB2YWx1ZSApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBqUXVlcnkuYXR0ciwgbmFtZSwgdmFsdWUsIGFyZ3VtZW50cy5sZW5ndGggPiAxICk7XG5cdH0sXG5cblx0cmVtb3ZlQXR0cjogZnVuY3Rpb24oIG5hbWUgKSB7XG5cdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oKSB7XG5cdFx0XHRqUXVlcnkucmVtb3ZlQXR0ciggdGhpcywgbmFtZSApO1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdGF0dHI6IGZ1bmN0aW9uKCBlbGVtLCBuYW1lLCB2YWx1ZSApIHtcblx0XHR2YXIgcmV0LCBob29rcyxcblx0XHRcdG5UeXBlID0gZWxlbS5ub2RlVHlwZTtcblxuXHRcdC8vIERvbid0IGdldC9zZXQgYXR0cmlidXRlcyBvbiB0ZXh0LCBjb21tZW50IGFuZCBhdHRyaWJ1dGUgbm9kZXNcblx0XHRpZiAoIG5UeXBlID09PSAzIHx8IG5UeXBlID09PSA4IHx8IG5UeXBlID09PSAyICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdC8vIEZhbGxiYWNrIHRvIHByb3Agd2hlbiBhdHRyaWJ1dGVzIGFyZSBub3Qgc3VwcG9ydGVkXG5cdFx0aWYgKCB0eXBlb2YgZWxlbS5nZXRBdHRyaWJ1dGUgPT09IFwidW5kZWZpbmVkXCIgKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LnByb3AoIGVsZW0sIG5hbWUsIHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXR0cmlidXRlIGhvb2tzIGFyZSBkZXRlcm1pbmVkIGJ5IHRoZSBsb3dlcmNhc2UgdmVyc2lvblxuXHRcdC8vIEdyYWIgbmVjZXNzYXJ5IGhvb2sgaWYgb25lIGlzIGRlZmluZWRcblx0XHRpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblx0XHRcdGhvb2tzID0galF1ZXJ5LmF0dHJIb29rc1sgbmFtZS50b0xvd2VyQ2FzZSgpIF0gfHxcblx0XHRcdFx0KCBqUXVlcnkuZXhwci5tYXRjaC5ib29sLnRlc3QoIG5hbWUgKSA/IGJvb2xIb29rIDogdW5kZWZpbmVkICk7XG5cdFx0fVxuXG5cdFx0aWYgKCB2YWx1ZSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0aWYgKCB2YWx1ZSA9PT0gbnVsbCApIHtcblx0XHRcdFx0alF1ZXJ5LnJlbW92ZUF0dHIoIGVsZW0sIG5hbWUgKTtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIGhvb2tzICYmIFwic2V0XCIgaW4gaG9va3MgJiZcblx0XHRcdFx0KCByZXQgPSBob29rcy5zZXQoIGVsZW0sIHZhbHVlLCBuYW1lICkgKSAhPT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggbmFtZSwgdmFsdWUgKyBcIlwiICk7XG5cdFx0XHRyZXR1cm4gdmFsdWU7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXG5cdFx0cmV0ID0galF1ZXJ5LmZpbmQuYXR0ciggZWxlbSwgbmFtZSApO1xuXG5cdFx0Ly8gTm9uLWV4aXN0ZW50IGF0dHJpYnV0ZXMgcmV0dXJuIG51bGwsIHdlIG5vcm1hbGl6ZSB0byB1bmRlZmluZWRcblx0XHRyZXR1cm4gcmV0ID09IG51bGwgPyB1bmRlZmluZWQgOiByZXQ7XG5cdH0sXG5cblx0YXR0ckhvb2tzOiB7XG5cdFx0dHlwZToge1xuXHRcdFx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0XHRcdGlmICggIXN1cHBvcnQucmFkaW9WYWx1ZSAmJiB2YWx1ZSA9PT0gXCJyYWRpb1wiICYmXG5cdFx0XHRcdFx0bm9kZU5hbWUoIGVsZW0sIFwiaW5wdXRcIiApICkge1xuXHRcdFx0XHRcdHZhciB2YWwgPSBlbGVtLnZhbHVlO1xuXHRcdFx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBcInR5cGVcIiwgdmFsdWUgKTtcblx0XHRcdFx0XHRpZiAoIHZhbCApIHtcblx0XHRcdFx0XHRcdGVsZW0udmFsdWUgPSB2YWw7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB2YWx1ZTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRyZW1vdmVBdHRyOiBmdW5jdGlvbiggZWxlbSwgdmFsdWUgKSB7XG5cdFx0dmFyIG5hbWUsXG5cdFx0XHRpID0gMCxcblxuXHRcdFx0Ly8gQXR0cmlidXRlIG5hbWVzIGNhbiBjb250YWluIG5vbi1IVE1MIHdoaXRlc3BhY2UgY2hhcmFjdGVyc1xuXHRcdFx0Ly8gaHR0cHM6Ly9odG1sLnNwZWMud2hhdHdnLm9yZy9tdWx0aXBhZ2Uvc3ludGF4Lmh0bWwjYXR0cmlidXRlcy0yXG5cdFx0XHRhdHRyTmFtZXMgPSB2YWx1ZSAmJiB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApO1xuXG5cdFx0aWYgKCBhdHRyTmFtZXMgJiYgZWxlbS5ub2RlVHlwZSA9PT0gMSApIHtcblx0XHRcdHdoaWxlICggKCBuYW1lID0gYXR0ck5hbWVzWyBpKysgXSApICkge1xuXHRcdFx0XHRlbGVtLnJlbW92ZUF0dHJpYnV0ZSggbmFtZSApO1xuXHRcdFx0fVxuXHRcdH1cblx0fVxufSApO1xuXG4vLyBIb29rcyBmb3IgYm9vbGVhbiBhdHRyaWJ1dGVzXG5ib29sSG9vayA9IHtcblx0c2V0OiBmdW5jdGlvbiggZWxlbSwgdmFsdWUsIG5hbWUgKSB7XG5cdFx0aWYgKCB2YWx1ZSA9PT0gZmFsc2UgKSB7XG5cblx0XHRcdC8vIFJlbW92ZSBib29sZWFuIGF0dHJpYnV0ZXMgd2hlbiBzZXQgdG8gZmFsc2Vcblx0XHRcdGpRdWVyeS5yZW1vdmVBdHRyKCBlbGVtLCBuYW1lICk7XG5cdFx0fSBlbHNlIHtcblx0XHRcdGVsZW0uc2V0QXR0cmlidXRlKCBuYW1lLCBuYW1lICk7XG5cdFx0fVxuXHRcdHJldHVybiBuYW1lO1xuXHR9XG59O1xuXG5qUXVlcnkuZWFjaCggalF1ZXJ5LmV4cHIubWF0Y2guYm9vbC5zb3VyY2UubWF0Y2goIC9cXHcrL2cgKSwgZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cdHZhciBnZXR0ZXIgPSBhdHRySGFuZGxlWyBuYW1lIF0gfHwgalF1ZXJ5LmZpbmQuYXR0cjtcblxuXHRhdHRySGFuZGxlWyBuYW1lIF0gPSBmdW5jdGlvbiggZWxlbSwgbmFtZSwgaXNYTUwgKSB7XG5cdFx0dmFyIHJldCwgaGFuZGxlLFxuXHRcdFx0bG93ZXJjYXNlTmFtZSA9IG5hbWUudG9Mb3dlckNhc2UoKTtcblxuXHRcdGlmICggIWlzWE1MICkge1xuXG5cdFx0XHQvLyBBdm9pZCBhbiBpbmZpbml0ZSBsb29wIGJ5IHRlbXBvcmFyaWx5IHJlbW92aW5nIHRoaXMgZnVuY3Rpb24gZnJvbSB0aGUgZ2V0dGVyXG5cdFx0XHRoYW5kbGUgPSBhdHRySGFuZGxlWyBsb3dlcmNhc2VOYW1lIF07XG5cdFx0XHRhdHRySGFuZGxlWyBsb3dlcmNhc2VOYW1lIF0gPSByZXQ7XG5cdFx0XHRyZXQgPSBnZXR0ZXIoIGVsZW0sIG5hbWUsIGlzWE1MICkgIT0gbnVsbCA/XG5cdFx0XHRcdGxvd2VyY2FzZU5hbWUgOlxuXHRcdFx0XHRudWxsO1xuXHRcdFx0YXR0ckhhbmRsZVsgbG93ZXJjYXNlTmFtZSBdID0gaGFuZGxlO1xuXHRcdH1cblx0XHRyZXR1cm4gcmV0O1xuXHR9O1xufSApO1xuXG5cblxuXG52YXIgcmZvY3VzYWJsZSA9IC9eKD86aW5wdXR8c2VsZWN0fHRleHRhcmVhfGJ1dHRvbikkL2ksXG5cdHJjbGlja2FibGUgPSAvXig/OmF8YXJlYSkkL2k7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0cHJvcDogZnVuY3Rpb24oIG5hbWUsIHZhbHVlICkge1xuXHRcdHJldHVybiBhY2Nlc3MoIHRoaXMsIGpRdWVyeS5wcm9wLCBuYW1lLCB2YWx1ZSwgYXJndW1lbnRzLmxlbmd0aCA+IDEgKTtcblx0fSxcblxuXHRyZW1vdmVQcm9wOiBmdW5jdGlvbiggbmFtZSApIHtcblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdGRlbGV0ZSB0aGlzWyBqUXVlcnkucHJvcEZpeFsgbmFtZSBdIHx8IG5hbWUgXTtcblx0XHR9ICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmV4dGVuZCgge1xuXHRwcm9wOiBmdW5jdGlvbiggZWxlbSwgbmFtZSwgdmFsdWUgKSB7XG5cdFx0dmFyIHJldCwgaG9va3MsXG5cdFx0XHRuVHlwZSA9IGVsZW0ubm9kZVR5cGU7XG5cblx0XHQvLyBEb24ndCBnZXQvc2V0IHByb3BlcnRpZXMgb24gdGV4dCwgY29tbWVudCBhbmQgYXR0cmlidXRlIG5vZGVzXG5cdFx0aWYgKCBuVHlwZSA9PT0gMyB8fCBuVHlwZSA9PT0gOCB8fCBuVHlwZSA9PT0gMiApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHRpZiAoIG5UeXBlICE9PSAxIHx8ICFqUXVlcnkuaXNYTUxEb2MoIGVsZW0gKSApIHtcblxuXHRcdFx0Ly8gRml4IG5hbWUgYW5kIGF0dGFjaCBob29rc1xuXHRcdFx0bmFtZSA9IGpRdWVyeS5wcm9wRml4WyBuYW1lIF0gfHwgbmFtZTtcblx0XHRcdGhvb2tzID0galF1ZXJ5LnByb3BIb29rc1sgbmFtZSBdO1xuXHRcdH1cblxuXHRcdGlmICggdmFsdWUgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGlmICggaG9va3MgJiYgXCJzZXRcIiBpbiBob29rcyAmJlxuXHRcdFx0XHQoIHJldCA9IGhvb2tzLnNldCggZWxlbSwgdmFsdWUsIG5hbWUgKSApICE9PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHJldHVybiByZXQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiAoIGVsZW1bIG5hbWUgXSA9IHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBob29rcyAmJiBcImdldFwiIGluIGhvb2tzICYmICggcmV0ID0gaG9va3MuZ2V0KCBlbGVtLCBuYW1lICkgKSAhPT0gbnVsbCApIHtcblx0XHRcdHJldHVybiByZXQ7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIGVsZW1bIG5hbWUgXTtcblx0fSxcblxuXHRwcm9wSG9va3M6IHtcblx0XHR0YWJJbmRleDoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgLSAxMSBvbmx5XG5cdFx0XHRcdC8vIGVsZW0udGFiSW5kZXggZG9lc24ndCBhbHdheXMgcmV0dXJuIHRoZVxuXHRcdFx0XHQvLyBjb3JyZWN0IHZhbHVlIHdoZW4gaXQgaGFzbid0IGJlZW4gZXhwbGljaXRseSBzZXRcblx0XHRcdFx0Ly8gaHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTQxMTE2MjMzMzQ3L2h0dHA6Ly9mbHVpZHByb2plY3Qub3JnL2Jsb2cvMjAwOC8wMS8wOS9nZXR0aW5nLXNldHRpbmctYW5kLXJlbW92aW5nLXRhYmluZGV4LXZhbHVlcy13aXRoLWphdmFzY3JpcHQvXG5cdFx0XHRcdC8vIFVzZSBwcm9wZXIgYXR0cmlidXRlIHJldHJpZXZhbCgjMTIwNzIpXG5cdFx0XHRcdHZhciB0YWJpbmRleCA9IGpRdWVyeS5maW5kLmF0dHIoIGVsZW0sIFwidGFiaW5kZXhcIiApO1xuXG5cdFx0XHRcdGlmICggdGFiaW5kZXggKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHBhcnNlSW50KCB0YWJpbmRleCwgMTAgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdGlmIChcblx0XHRcdFx0XHRyZm9jdXNhYmxlLnRlc3QoIGVsZW0ubm9kZU5hbWUgKSB8fFxuXHRcdFx0XHRcdHJjbGlja2FibGUudGVzdCggZWxlbS5ub2RlTmFtZSApICYmXG5cdFx0XHRcdFx0ZWxlbS5ocmVmXG5cdFx0XHRcdCkge1xuXHRcdFx0XHRcdHJldHVybiAwO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIC0xO1xuXHRcdFx0fVxuXHRcdH1cblx0fSxcblxuXHRwcm9wRml4OiB7XG5cdFx0XCJmb3JcIjogXCJodG1sRm9yXCIsXG5cdFx0XCJjbGFzc1wiOiBcImNsYXNzTmFtZVwiXG5cdH1cbn0gKTtcblxuLy8gU3VwcG9ydDogSUUgPD0xMSBvbmx5XG4vLyBBY2Nlc3NpbmcgdGhlIHNlbGVjdGVkSW5kZXggcHJvcGVydHlcbi8vIGZvcmNlcyB0aGUgYnJvd3NlciB0byByZXNwZWN0IHNldHRpbmcgc2VsZWN0ZWRcbi8vIG9uIHRoZSBvcHRpb25cbi8vIFRoZSBnZXR0ZXIgZW5zdXJlcyBhIGRlZmF1bHQgb3B0aW9uIGlzIHNlbGVjdGVkXG4vLyB3aGVuIGluIGFuIG9wdGdyb3VwXG4vLyBlc2xpbnQgcnVsZSBcIm5vLXVudXNlZC1leHByZXNzaW9uc1wiIGlzIGRpc2FibGVkIGZvciB0aGlzIGNvZGVcbi8vIHNpbmNlIGl0IGNvbnNpZGVycyBzdWNoIGFjY2Vzc2lvbnMgbm9vcFxuaWYgKCAhc3VwcG9ydC5vcHRTZWxlY3RlZCApIHtcblx0alF1ZXJ5LnByb3BIb29rcy5zZWxlY3RlZCA9IHtcblx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHQvKiBlc2xpbnQgbm8tdW51c2VkLWV4cHJlc3Npb25zOiBcIm9mZlwiICovXG5cblx0XHRcdHZhciBwYXJlbnQgPSBlbGVtLnBhcmVudE5vZGU7XG5cdFx0XHRpZiAoIHBhcmVudCAmJiBwYXJlbnQucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0cGFyZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcblx0XHRcdH1cblx0XHRcdHJldHVybiBudWxsO1xuXHRcdH0sXG5cdFx0c2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblxuXHRcdFx0LyogZXNsaW50IG5vLXVudXNlZC1leHByZXNzaW9uczogXCJvZmZcIiAqL1xuXG5cdFx0XHR2YXIgcGFyZW50ID0gZWxlbS5wYXJlbnROb2RlO1xuXHRcdFx0aWYgKCBwYXJlbnQgKSB7XG5cdFx0XHRcdHBhcmVudC5zZWxlY3RlZEluZGV4O1xuXG5cdFx0XHRcdGlmICggcGFyZW50LnBhcmVudE5vZGUgKSB7XG5cdFx0XHRcdFx0cGFyZW50LnBhcmVudE5vZGUuc2VsZWN0ZWRJbmRleDtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH1cblx0fTtcbn1cblxualF1ZXJ5LmVhY2goIFtcblx0XCJ0YWJJbmRleFwiLFxuXHRcInJlYWRPbmx5XCIsXG5cdFwibWF4TGVuZ3RoXCIsXG5cdFwiY2VsbFNwYWNpbmdcIixcblx0XCJjZWxsUGFkZGluZ1wiLFxuXHRcInJvd1NwYW5cIixcblx0XCJjb2xTcGFuXCIsXG5cdFwidXNlTWFwXCIsXG5cdFwiZnJhbWVCb3JkZXJcIixcblx0XCJjb250ZW50RWRpdGFibGVcIlxuXSwgZnVuY3Rpb24oKSB7XG5cdGpRdWVyeS5wcm9wRml4WyB0aGlzLnRvTG93ZXJDYXNlKCkgXSA9IHRoaXM7XG59ICk7XG5cblxuXG5cblx0Ly8gU3RyaXAgYW5kIGNvbGxhcHNlIHdoaXRlc3BhY2UgYWNjb3JkaW5nIHRvIEhUTUwgc3BlY1xuXHQvLyBodHRwczovL2luZnJhLnNwZWMud2hhdHdnLm9yZy8jc3RyaXAtYW5kLWNvbGxhcHNlLWFzY2lpLXdoaXRlc3BhY2Vcblx0ZnVuY3Rpb24gc3RyaXBBbmRDb2xsYXBzZSggdmFsdWUgKSB7XG5cdFx0dmFyIHRva2VucyA9IHZhbHVlLm1hdGNoKCBybm90aHRtbHdoaXRlICkgfHwgW107XG5cdFx0cmV0dXJuIHRva2Vucy5qb2luKCBcIiBcIiApO1xuXHR9XG5cblxuZnVuY3Rpb24gZ2V0Q2xhc3MoIGVsZW0gKSB7XG5cdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSAmJiBlbGVtLmdldEF0dHJpYnV0ZSggXCJjbGFzc1wiICkgfHwgXCJcIjtcbn1cblxuZnVuY3Rpb24gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICkge1xuXHRpZiAoIEFycmF5LmlzQXJyYXkoIHZhbHVlICkgKSB7XG5cdFx0cmV0dXJuIHZhbHVlO1xuXHR9XG5cdGlmICggdHlwZW9mIHZhbHVlID09PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiB2YWx1ZS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFtdO1xuXHR9XG5cdHJldHVybiBbXTtcbn1cblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXHRhZGRDbGFzczogZnVuY3Rpb24oIHZhbHVlICkge1xuXHRcdHZhciBjbGFzc2VzLCBlbGVtLCBjdXIsIGN1clZhbHVlLCBjbGF6eiwgaiwgZmluYWxWYWx1ZSxcblx0XHRcdGkgPSAwO1xuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGogKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLmFkZENsYXNzKCB2YWx1ZS5jYWxsKCB0aGlzLCBqLCBnZXRDbGFzcyggdGhpcyApICkgKTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRjbGFzc2VzID0gY2xhc3Nlc1RvQXJyYXkoIHZhbHVlICk7XG5cblx0XHRpZiAoIGNsYXNzZXMubGVuZ3RoICkge1xuXHRcdFx0d2hpbGUgKCAoIGVsZW0gPSB0aGlzWyBpKysgXSApICkge1xuXHRcdFx0XHRjdXJWYWx1ZSA9IGdldENsYXNzKCBlbGVtICk7XG5cdFx0XHRcdGN1ciA9IGVsZW0ubm9kZVR5cGUgPT09IDEgJiYgKCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGN1clZhbHVlICkgKyBcIiBcIiApO1xuXG5cdFx0XHRcdGlmICggY3VyICkge1xuXHRcdFx0XHRcdGogPSAwO1xuXHRcdFx0XHRcdHdoaWxlICggKCBjbGF6eiA9IGNsYXNzZXNbIGorKyBdICkgKSB7XG5cdFx0XHRcdFx0XHRpZiAoIGN1ci5pbmRleE9mKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIgKSA8IDAgKSB7XG5cdFx0XHRcdFx0XHRcdGN1ciArPSBjbGF6eiArIFwiIFwiO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIE9ubHkgYXNzaWduIGlmIGRpZmZlcmVudCB0byBhdm9pZCB1bm5lZWRlZCByZW5kZXJpbmcuXG5cdFx0XHRcdFx0ZmluYWxWYWx1ZSA9IHN0cmlwQW5kQ29sbGFwc2UoIGN1ciApO1xuXHRcdFx0XHRcdGlmICggY3VyVmFsdWUgIT09IGZpbmFsVmFsdWUgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggXCJjbGFzc1wiLCBmaW5hbFZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0cmVtb3ZlQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSApIHtcblx0XHR2YXIgY2xhc3NlcywgZWxlbSwgY3VyLCBjdXJWYWx1ZSwgY2xhenosIGosIGZpbmFsVmFsdWUsXG5cdFx0XHRpID0gMDtcblxuXHRcdGlmICggaXNGdW5jdGlvbiggdmFsdWUgKSApIHtcblx0XHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBqICkge1xuXHRcdFx0XHRqUXVlcnkoIHRoaXMgKS5yZW1vdmVDbGFzcyggdmFsdWUuY2FsbCggdGhpcywgaiwgZ2V0Q2xhc3MoIHRoaXMgKSApICk7XG5cdFx0XHR9ICk7XG5cdFx0fVxuXG5cdFx0aWYgKCAhYXJndW1lbnRzLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiB0aGlzLmF0dHIoIFwiY2xhc3NcIiwgXCJcIiApO1xuXHRcdH1cblxuXHRcdGNsYXNzZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTtcblxuXHRcdGlmICggY2xhc3Nlcy5sZW5ndGggKSB7XG5cdFx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRcdGN1clZhbHVlID0gZ2V0Q2xhc3MoIGVsZW0gKTtcblxuXHRcdFx0XHQvLyBUaGlzIGV4cHJlc3Npb24gaXMgaGVyZSBmb3IgYmV0dGVyIGNvbXByZXNzaWJpbGl0eSAoc2VlIGFkZENsYXNzKVxuXHRcdFx0XHRjdXIgPSBlbGVtLm5vZGVUeXBlID09PSAxICYmICggXCIgXCIgKyBzdHJpcEFuZENvbGxhcHNlKCBjdXJWYWx1ZSApICsgXCIgXCIgKTtcblxuXHRcdFx0XHRpZiAoIGN1ciApIHtcblx0XHRcdFx0XHRqID0gMDtcblx0XHRcdFx0XHR3aGlsZSAoICggY2xhenogPSBjbGFzc2VzWyBqKysgXSApICkge1xuXG5cdFx0XHRcdFx0XHQvLyBSZW1vdmUgKmFsbCogaW5zdGFuY2VzXG5cdFx0XHRcdFx0XHR3aGlsZSAoIGN1ci5pbmRleE9mKCBcIiBcIiArIGNsYXp6ICsgXCIgXCIgKSA+IC0xICkge1xuXHRcdFx0XHRcdFx0XHRjdXIgPSBjdXIucmVwbGFjZSggXCIgXCIgKyBjbGF6eiArIFwiIFwiLCBcIiBcIiApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIE9ubHkgYXNzaWduIGlmIGRpZmZlcmVudCB0byBhdm9pZCB1bm5lZWRlZCByZW5kZXJpbmcuXG5cdFx0XHRcdFx0ZmluYWxWYWx1ZSA9IHN0cmlwQW5kQ29sbGFwc2UoIGN1ciApO1xuXHRcdFx0XHRcdGlmICggY3VyVmFsdWUgIT09IGZpbmFsVmFsdWUgKSB7XG5cdFx0XHRcdFx0XHRlbGVtLnNldEF0dHJpYnV0ZSggXCJjbGFzc1wiLCBmaW5hbFZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0cmV0dXJuIHRoaXM7XG5cdH0sXG5cblx0dG9nZ2xlQ2xhc3M6IGZ1bmN0aW9uKCB2YWx1ZSwgc3RhdGVWYWwgKSB7XG5cdFx0dmFyIHR5cGUgPSB0eXBlb2YgdmFsdWUsXG5cdFx0XHRpc1ZhbGlkVmFsdWUgPSB0eXBlID09PSBcInN0cmluZ1wiIHx8IEFycmF5LmlzQXJyYXkoIHZhbHVlICk7XG5cblx0XHRpZiAoIHR5cGVvZiBzdGF0ZVZhbCA9PT0gXCJib29sZWFuXCIgJiYgaXNWYWxpZFZhbHVlICkge1xuXHRcdFx0cmV0dXJuIHN0YXRlVmFsID8gdGhpcy5hZGRDbGFzcyggdmFsdWUgKSA6IHRoaXMucmVtb3ZlQ2xhc3MoIHZhbHVlICk7XG5cdFx0fVxuXG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCB2YWx1ZSApICkge1xuXHRcdFx0cmV0dXJuIHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdGpRdWVyeSggdGhpcyApLnRvZ2dsZUNsYXNzKFxuXHRcdFx0XHRcdHZhbHVlLmNhbGwoIHRoaXMsIGksIGdldENsYXNzKCB0aGlzICksIHN0YXRlVmFsICksXG5cdFx0XHRcdFx0c3RhdGVWYWxcblx0XHRcdFx0KTtcblx0XHRcdH0gKTtcblx0XHR9XG5cblx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdHZhciBjbGFzc05hbWUsIGksIHNlbGYsIGNsYXNzTmFtZXM7XG5cblx0XHRcdGlmICggaXNWYWxpZFZhbHVlICkge1xuXG5cdFx0XHRcdC8vIFRvZ2dsZSBpbmRpdmlkdWFsIGNsYXNzIG5hbWVzXG5cdFx0XHRcdGkgPSAwO1xuXHRcdFx0XHRzZWxmID0galF1ZXJ5KCB0aGlzICk7XG5cdFx0XHRcdGNsYXNzTmFtZXMgPSBjbGFzc2VzVG9BcnJheSggdmFsdWUgKTtcblxuXHRcdFx0XHR3aGlsZSAoICggY2xhc3NOYW1lID0gY2xhc3NOYW1lc1sgaSsrIF0gKSApIHtcblxuXHRcdFx0XHRcdC8vIENoZWNrIGVhY2ggY2xhc3NOYW1lIGdpdmVuLCBzcGFjZSBzZXBhcmF0ZWQgbGlzdFxuXHRcdFx0XHRcdGlmICggc2VsZi5oYXNDbGFzcyggY2xhc3NOYW1lICkgKSB7XG5cdFx0XHRcdFx0XHRzZWxmLnJlbW92ZUNsYXNzKCBjbGFzc05hbWUgKTtcblx0XHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdFx0c2VsZi5hZGRDbGFzcyggY2xhc3NOYW1lICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdC8vIFRvZ2dsZSB3aG9sZSBjbGFzcyBuYW1lXG5cdFx0XHR9IGVsc2UgaWYgKCB2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHR5cGUgPT09IFwiYm9vbGVhblwiICkge1xuXHRcdFx0XHRjbGFzc05hbWUgPSBnZXRDbGFzcyggdGhpcyApO1xuXHRcdFx0XHRpZiAoIGNsYXNzTmFtZSApIHtcblxuXHRcdFx0XHRcdC8vIFN0b3JlIGNsYXNzTmFtZSBpZiBzZXRcblx0XHRcdFx0XHRkYXRhUHJpdi5zZXQoIHRoaXMsIFwiX19jbGFzc05hbWVfX1wiLCBjbGFzc05hbWUgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIElmIHRoZSBlbGVtZW50IGhhcyBhIGNsYXNzIG5hbWUgb3IgaWYgd2UncmUgcGFzc2VkIGBmYWxzZWAsXG5cdFx0XHRcdC8vIHRoZW4gcmVtb3ZlIHRoZSB3aG9sZSBjbGFzc25hbWUgKGlmIHRoZXJlIHdhcyBvbmUsIHRoZSBhYm92ZSBzYXZlZCBpdCkuXG5cdFx0XHRcdC8vIE90aGVyd2lzZSBicmluZyBiYWNrIHdoYXRldmVyIHdhcyBwcmV2aW91c2x5IHNhdmVkIChpZiBhbnl0aGluZyksXG5cdFx0XHRcdC8vIGZhbGxpbmcgYmFjayB0byB0aGUgZW1wdHkgc3RyaW5nIGlmIG5vdGhpbmcgd2FzIHN0b3JlZC5cblx0XHRcdFx0aWYgKCB0aGlzLnNldEF0dHJpYnV0ZSApIHtcblx0XHRcdFx0XHR0aGlzLnNldEF0dHJpYnV0ZSggXCJjbGFzc1wiLFxuXHRcdFx0XHRcdFx0Y2xhc3NOYW1lIHx8IHZhbHVlID09PSBmYWxzZSA/XG5cdFx0XHRcdFx0XHRcIlwiIDpcblx0XHRcdFx0XHRcdGRhdGFQcml2LmdldCggdGhpcywgXCJfX2NsYXNzTmFtZV9fXCIgKSB8fCBcIlwiXG5cdFx0XHRcdFx0KTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH0gKTtcblx0fSxcblxuXHRoYXNDbGFzczogZnVuY3Rpb24oIHNlbGVjdG9yICkge1xuXHRcdHZhciBjbGFzc05hbWUsIGVsZW0sXG5cdFx0XHRpID0gMDtcblxuXHRcdGNsYXNzTmFtZSA9IFwiIFwiICsgc2VsZWN0b3IgKyBcIiBcIjtcblx0XHR3aGlsZSAoICggZWxlbSA9IHRoaXNbIGkrKyBdICkgKSB7XG5cdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDEgJiZcblx0XHRcdFx0KCBcIiBcIiArIHN0cmlwQW5kQ29sbGFwc2UoIGdldENsYXNzKCBlbGVtICkgKSArIFwiIFwiICkuaW5kZXhPZiggY2xhc3NOYW1lICkgPiAtMSApIHtcblx0XHRcdFx0XHRyZXR1cm4gdHJ1ZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gZmFsc2U7XG5cdH1cbn0gKTtcblxuXG5cblxudmFyIHJyZXR1cm4gPSAvXFxyL2c7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0dmFsOiBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0dmFyIGhvb2tzLCByZXQsIHZhbHVlSXNGdW5jdGlvbixcblx0XHRcdGVsZW0gPSB0aGlzWyAwIF07XG5cblx0XHRpZiAoICFhcmd1bWVudHMubGVuZ3RoICkge1xuXHRcdFx0aWYgKCBlbGVtICkge1xuXHRcdFx0XHRob29rcyA9IGpRdWVyeS52YWxIb29rc1sgZWxlbS50eXBlIF0gfHxcblx0XHRcdFx0XHRqUXVlcnkudmFsSG9va3NbIGVsZW0ubm9kZU5hbWUudG9Mb3dlckNhc2UoKSBdO1xuXG5cdFx0XHRcdGlmICggaG9va3MgJiZcblx0XHRcdFx0XHRcImdldFwiIGluIGhvb2tzICYmXG5cdFx0XHRcdFx0KCByZXQgPSBob29rcy5nZXQoIGVsZW0sIFwidmFsdWVcIiApICkgIT09IHVuZGVmaW5lZFxuXHRcdFx0XHQpIHtcblx0XHRcdFx0XHRyZXR1cm4gcmV0O1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0ID0gZWxlbS52YWx1ZTtcblxuXHRcdFx0XHQvLyBIYW5kbGUgbW9zdCBjb21tb24gc3RyaW5nIGNhc2VzXG5cdFx0XHRcdGlmICggdHlwZW9mIHJldCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdFx0XHRyZXR1cm4gcmV0LnJlcGxhY2UoIHJyZXR1cm4sIFwiXCIgKTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIEhhbmRsZSBjYXNlcyB3aGVyZSB2YWx1ZSBpcyBudWxsL3VuZGVmIG9yIG51bWJlclxuXHRcdFx0XHRyZXR1cm4gcmV0ID09IG51bGwgPyBcIlwiIDogcmV0O1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0dmFsdWVJc0Z1bmN0aW9uID0gaXNGdW5jdGlvbiggdmFsdWUgKTtcblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0dmFyIHZhbDtcblxuXHRcdFx0aWYgKCB0aGlzLm5vZGVUeXBlICE9PSAxICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGlmICggdmFsdWVJc0Z1bmN0aW9uICkge1xuXHRcdFx0XHR2YWwgPSB2YWx1ZS5jYWxsKCB0aGlzLCBpLCBqUXVlcnkoIHRoaXMgKS52YWwoKSApO1xuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0dmFsID0gdmFsdWU7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFRyZWF0IG51bGwvdW5kZWZpbmVkIGFzIFwiXCI7IGNvbnZlcnQgbnVtYmVycyB0byBzdHJpbmdcblx0XHRcdGlmICggdmFsID09IG51bGwgKSB7XG5cdFx0XHRcdHZhbCA9IFwiXCI7XG5cblx0XHRcdH0gZWxzZSBpZiAoIHR5cGVvZiB2YWwgPT09IFwibnVtYmVyXCIgKSB7XG5cdFx0XHRcdHZhbCArPSBcIlwiO1xuXG5cdFx0XHR9IGVsc2UgaWYgKCBBcnJheS5pc0FycmF5KCB2YWwgKSApIHtcblx0XHRcdFx0dmFsID0galF1ZXJ5Lm1hcCggdmFsLCBmdW5jdGlvbiggdmFsdWUgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHZhbHVlID09IG51bGwgPyBcIlwiIDogdmFsdWUgKyBcIlwiO1xuXHRcdFx0XHR9ICk7XG5cdFx0XHR9XG5cblx0XHRcdGhvb2tzID0galF1ZXJ5LnZhbEhvb2tzWyB0aGlzLnR5cGUgXSB8fCBqUXVlcnkudmFsSG9va3NbIHRoaXMubm9kZU5hbWUudG9Mb3dlckNhc2UoKSBdO1xuXG5cdFx0XHQvLyBJZiBzZXQgcmV0dXJucyB1bmRlZmluZWQsIGZhbGwgYmFjayB0byBub3JtYWwgc2V0dGluZ1xuXHRcdFx0aWYgKCAhaG9va3MgfHwgISggXCJzZXRcIiBpbiBob29rcyApIHx8IGhvb2tzLnNldCggdGhpcywgdmFsLCBcInZhbHVlXCIgKSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHR0aGlzLnZhbHVlID0gdmFsO1xuXHRcdFx0fVxuXHRcdH0gKTtcblx0fVxufSApO1xuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cdHZhbEhvb2tzOiB7XG5cdFx0b3B0aW9uOiB7XG5cdFx0XHRnZXQ6IGZ1bmN0aW9uKCBlbGVtICkge1xuXG5cdFx0XHRcdHZhciB2YWwgPSBqUXVlcnkuZmluZC5hdHRyKCBlbGVtLCBcInZhbHVlXCIgKTtcblx0XHRcdFx0cmV0dXJuIHZhbCAhPSBudWxsID9cblx0XHRcdFx0XHR2YWwgOlxuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD0xMCAtIDExIG9ubHlcblx0XHRcdFx0XHQvLyBvcHRpb24udGV4dCB0aHJvd3MgZXhjZXB0aW9ucyAoIzE0Njg2LCAjMTQ4NTgpXG5cdFx0XHRcdFx0Ly8gU3RyaXAgYW5kIGNvbGxhcHNlIHdoaXRlc3BhY2Vcblx0XHRcdFx0XHQvLyBodHRwczovL2h0bWwuc3BlYy53aGF0d2cub3JnLyNzdHJpcC1hbmQtY29sbGFwc2Utd2hpdGVzcGFjZVxuXHRcdFx0XHRcdHN0cmlwQW5kQ29sbGFwc2UoIGpRdWVyeS50ZXh0KCBlbGVtICkgKTtcblx0XHRcdH1cblx0XHR9LFxuXHRcdHNlbGVjdDoge1xuXHRcdFx0Z2V0OiBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdFx0dmFyIHZhbHVlLCBvcHRpb24sIGksXG5cdFx0XHRcdFx0b3B0aW9ucyA9IGVsZW0ub3B0aW9ucyxcblx0XHRcdFx0XHRpbmRleCA9IGVsZW0uc2VsZWN0ZWRJbmRleCxcblx0XHRcdFx0XHRvbmUgPSBlbGVtLnR5cGUgPT09IFwic2VsZWN0LW9uZVwiLFxuXHRcdFx0XHRcdHZhbHVlcyA9IG9uZSA/IG51bGwgOiBbXSxcblx0XHRcdFx0XHRtYXggPSBvbmUgPyBpbmRleCArIDEgOiBvcHRpb25zLmxlbmd0aDtcblxuXHRcdFx0XHRpZiAoIGluZGV4IDwgMCApIHtcblx0XHRcdFx0XHRpID0gbWF4O1xuXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0aSA9IG9uZSA/IGluZGV4IDogMDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIExvb3AgdGhyb3VnaCBhbGwgdGhlIHNlbGVjdGVkIG9wdGlvbnNcblx0XHRcdFx0Zm9yICggOyBpIDwgbWF4OyBpKysgKSB7XG5cdFx0XHRcdFx0b3B0aW9uID0gb3B0aW9uc1sgaSBdO1xuXG5cdFx0XHRcdFx0Ly8gU3VwcG9ydDogSUUgPD05IG9ubHlcblx0XHRcdFx0XHQvLyBJRTgtOSBkb2Vzbid0IHVwZGF0ZSBzZWxlY3RlZCBhZnRlciBmb3JtIHJlc2V0ICgjMjU1MSlcblx0XHRcdFx0XHRpZiAoICggb3B0aW9uLnNlbGVjdGVkIHx8IGkgPT09IGluZGV4ICkgJiZcblxuXHRcdFx0XHRcdFx0XHQvLyBEb24ndCByZXR1cm4gb3B0aW9ucyB0aGF0IGFyZSBkaXNhYmxlZCBvciBpbiBhIGRpc2FibGVkIG9wdGdyb3VwXG5cdFx0XHRcdFx0XHRcdCFvcHRpb24uZGlzYWJsZWQgJiZcblx0XHRcdFx0XHRcdFx0KCAhb3B0aW9uLnBhcmVudE5vZGUuZGlzYWJsZWQgfHxcblx0XHRcdFx0XHRcdFx0XHQhbm9kZU5hbWUoIG9wdGlvbi5wYXJlbnROb2RlLCBcIm9wdGdyb3VwXCIgKSApICkge1xuXG5cdFx0XHRcdFx0XHQvLyBHZXQgdGhlIHNwZWNpZmljIHZhbHVlIGZvciB0aGUgb3B0aW9uXG5cdFx0XHRcdFx0XHR2YWx1ZSA9IGpRdWVyeSggb3B0aW9uICkudmFsKCk7XG5cblx0XHRcdFx0XHRcdC8vIFdlIGRvbid0IG5lZWQgYW4gYXJyYXkgZm9yIG9uZSBzZWxlY3RzXG5cdFx0XHRcdFx0XHRpZiAoIG9uZSApIHtcblx0XHRcdFx0XHRcdFx0cmV0dXJuIHZhbHVlO1xuXHRcdFx0XHRcdFx0fVxuXG5cdFx0XHRcdFx0XHQvLyBNdWx0aS1TZWxlY3RzIHJldHVybiBhbiBhcnJheVxuXHRcdFx0XHRcdFx0dmFsdWVzLnB1c2goIHZhbHVlICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0cmV0dXJuIHZhbHVlcztcblx0XHRcdH0sXG5cblx0XHRcdHNldDogZnVuY3Rpb24oIGVsZW0sIHZhbHVlICkge1xuXHRcdFx0XHR2YXIgb3B0aW9uU2V0LCBvcHRpb24sXG5cdFx0XHRcdFx0b3B0aW9ucyA9IGVsZW0ub3B0aW9ucyxcblx0XHRcdFx0XHR2YWx1ZXMgPSBqUXVlcnkubWFrZUFycmF5KCB2YWx1ZSApLFxuXHRcdFx0XHRcdGkgPSBvcHRpb25zLmxlbmd0aDtcblxuXHRcdFx0XHR3aGlsZSAoIGktLSApIHtcblx0XHRcdFx0XHRvcHRpb24gPSBvcHRpb25zWyBpIF07XG5cblx0XHRcdFx0XHQvKiBlc2xpbnQtZGlzYWJsZSBuby1jb25kLWFzc2lnbiAqL1xuXG5cdFx0XHRcdFx0aWYgKCBvcHRpb24uc2VsZWN0ZWQgPVxuXHRcdFx0XHRcdFx0alF1ZXJ5LmluQXJyYXkoIGpRdWVyeS52YWxIb29rcy5vcHRpb24uZ2V0KCBvcHRpb24gKSwgdmFsdWVzICkgPiAtMVxuXHRcdFx0XHRcdCkge1xuXHRcdFx0XHRcdFx0b3B0aW9uU2V0ID0gdHJ1ZTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHQvKiBlc2xpbnQtZW5hYmxlIG5vLWNvbmQtYXNzaWduICovXG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBGb3JjZSBicm93c2VycyB0byBiZWhhdmUgY29uc2lzdGVudGx5IHdoZW4gbm9uLW1hdGNoaW5nIHZhbHVlIGlzIHNldFxuXHRcdFx0XHRpZiAoICFvcHRpb25TZXQgKSB7XG5cdFx0XHRcdFx0ZWxlbS5zZWxlY3RlZEluZGV4ID0gLTE7XG5cdFx0XHRcdH1cblx0XHRcdFx0cmV0dXJuIHZhbHVlcztcblx0XHRcdH1cblx0XHR9XG5cdH1cbn0gKTtcblxuLy8gUmFkaW9zIGFuZCBjaGVja2JveGVzIGdldHRlci9zZXR0ZXJcbmpRdWVyeS5lYWNoKCBbIFwicmFkaW9cIiwgXCJjaGVja2JveFwiIF0sIGZ1bmN0aW9uKCkge1xuXHRqUXVlcnkudmFsSG9va3NbIHRoaXMgXSA9IHtcblx0XHRzZXQ6IGZ1bmN0aW9uKCBlbGVtLCB2YWx1ZSApIHtcblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsdWUgKSApIHtcblx0XHRcdFx0cmV0dXJuICggZWxlbS5jaGVja2VkID0galF1ZXJ5LmluQXJyYXkoIGpRdWVyeSggZWxlbSApLnZhbCgpLCB2YWx1ZSApID4gLTEgKTtcblx0XHRcdH1cblx0XHR9XG5cdH07XG5cdGlmICggIXN1cHBvcnQuY2hlY2tPbiApIHtcblx0XHRqUXVlcnkudmFsSG9va3NbIHRoaXMgXS5nZXQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0XHRcdHJldHVybiBlbGVtLmdldEF0dHJpYnV0ZSggXCJ2YWx1ZVwiICkgPT09IG51bGwgPyBcIm9uXCIgOiBlbGVtLnZhbHVlO1xuXHRcdH07XG5cdH1cbn0gKTtcblxuXG5cblxuLy8gUmV0dXJuIGpRdWVyeSBmb3IgYXR0cmlidXRlcy1vbmx5IGluY2x1c2lvblxuXG5cbnN1cHBvcnQuZm9jdXNpbiA9IFwib25mb2N1c2luXCIgaW4gd2luZG93O1xuXG5cbnZhciByZm9jdXNNb3JwaCA9IC9eKD86Zm9jdXNpbmZvY3VzfGZvY3Vzb3V0Ymx1cikkLyxcblx0c3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2sgPSBmdW5jdGlvbiggZSApIHtcblx0XHRlLnN0b3BQcm9wYWdhdGlvbigpO1xuXHR9O1xuXG5qUXVlcnkuZXh0ZW5kKCBqUXVlcnkuZXZlbnQsIHtcblxuXHR0cmlnZ2VyOiBmdW5jdGlvbiggZXZlbnQsIGRhdGEsIGVsZW0sIG9ubHlIYW5kbGVycyApIHtcblxuXHRcdHZhciBpLCBjdXIsIHRtcCwgYnViYmxlVHlwZSwgb250eXBlLCBoYW5kbGUsIHNwZWNpYWwsIGxhc3RFbGVtZW50LFxuXHRcdFx0ZXZlbnRQYXRoID0gWyBlbGVtIHx8IGRvY3VtZW50IF0sXG5cdFx0XHR0eXBlID0gaGFzT3duLmNhbGwoIGV2ZW50LCBcInR5cGVcIiApID8gZXZlbnQudHlwZSA6IGV2ZW50LFxuXHRcdFx0bmFtZXNwYWNlcyA9IGhhc093bi5jYWxsKCBldmVudCwgXCJuYW1lc3BhY2VcIiApID8gZXZlbnQubmFtZXNwYWNlLnNwbGl0KCBcIi5cIiApIDogW107XG5cblx0XHRjdXIgPSBsYXN0RWxlbWVudCA9IHRtcCA9IGVsZW0gPSBlbGVtIHx8IGRvY3VtZW50O1xuXG5cdFx0Ly8gRG9uJ3QgZG8gZXZlbnRzIG9uIHRleHQgYW5kIGNvbW1lbnQgbm9kZXNcblx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDMgfHwgZWxlbS5ub2RlVHlwZSA9PT0gOCApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBmb2N1cy9ibHVyIG1vcnBocyB0byBmb2N1c2luL291dDsgZW5zdXJlIHdlJ3JlIG5vdCBmaXJpbmcgdGhlbSByaWdodCBub3dcblx0XHRpZiAoIHJmb2N1c01vcnBoLnRlc3QoIHR5cGUgKyBqUXVlcnkuZXZlbnQudHJpZ2dlcmVkICkgKSB7XG5cdFx0XHRyZXR1cm47XG5cdFx0fVxuXG5cdFx0aWYgKCB0eXBlLmluZGV4T2YoIFwiLlwiICkgPiAtMSApIHtcblxuXHRcdFx0Ly8gTmFtZXNwYWNlZCB0cmlnZ2VyOyBjcmVhdGUgYSByZWdleHAgdG8gbWF0Y2ggZXZlbnQgdHlwZSBpbiBoYW5kbGUoKVxuXHRcdFx0bmFtZXNwYWNlcyA9IHR5cGUuc3BsaXQoIFwiLlwiICk7XG5cdFx0XHR0eXBlID0gbmFtZXNwYWNlcy5zaGlmdCgpO1xuXHRcdFx0bmFtZXNwYWNlcy5zb3J0KCk7XG5cdFx0fVxuXHRcdG9udHlwZSA9IHR5cGUuaW5kZXhPZiggXCI6XCIgKSA8IDAgJiYgXCJvblwiICsgdHlwZTtcblxuXHRcdC8vIENhbGxlciBjYW4gcGFzcyBpbiBhIGpRdWVyeS5FdmVudCBvYmplY3QsIE9iamVjdCwgb3IganVzdCBhbiBldmVudCB0eXBlIHN0cmluZ1xuXHRcdGV2ZW50ID0gZXZlbnRbIGpRdWVyeS5leHBhbmRvIF0gP1xuXHRcdFx0ZXZlbnQgOlxuXHRcdFx0bmV3IGpRdWVyeS5FdmVudCggdHlwZSwgdHlwZW9mIGV2ZW50ID09PSBcIm9iamVjdFwiICYmIGV2ZW50ICk7XG5cblx0XHQvLyBUcmlnZ2VyIGJpdG1hc2s6ICYgMSBmb3IgbmF0aXZlIGhhbmRsZXJzOyAmIDIgZm9yIGpRdWVyeSAoYWx3YXlzIHRydWUpXG5cdFx0ZXZlbnQuaXNUcmlnZ2VyID0gb25seUhhbmRsZXJzID8gMiA6IDM7XG5cdFx0ZXZlbnQubmFtZXNwYWNlID0gbmFtZXNwYWNlcy5qb2luKCBcIi5cIiApO1xuXHRcdGV2ZW50LnJuYW1lc3BhY2UgPSBldmVudC5uYW1lc3BhY2UgP1xuXHRcdFx0bmV3IFJlZ0V4cCggXCIoXnxcXFxcLilcIiArIG5hbWVzcGFjZXMuam9pbiggXCJcXFxcLig/Oi4qXFxcXC58KVwiICkgKyBcIihcXFxcLnwkKVwiICkgOlxuXHRcdFx0bnVsbDtcblxuXHRcdC8vIENsZWFuIHVwIHRoZSBldmVudCBpbiBjYXNlIGl0IGlzIGJlaW5nIHJldXNlZFxuXHRcdGV2ZW50LnJlc3VsdCA9IHVuZGVmaW5lZDtcblx0XHRpZiAoICFldmVudC50YXJnZXQgKSB7XG5cdFx0XHRldmVudC50YXJnZXQgPSBlbGVtO1xuXHRcdH1cblxuXHRcdC8vIENsb25lIGFueSBpbmNvbWluZyBkYXRhIGFuZCBwcmVwZW5kIHRoZSBldmVudCwgY3JlYXRpbmcgdGhlIGhhbmRsZXIgYXJnIGxpc3Rcblx0XHRkYXRhID0gZGF0YSA9PSBudWxsID9cblx0XHRcdFsgZXZlbnQgXSA6XG5cdFx0XHRqUXVlcnkubWFrZUFycmF5KCBkYXRhLCBbIGV2ZW50IF0gKTtcblxuXHRcdC8vIEFsbG93IHNwZWNpYWwgZXZlbnRzIHRvIGRyYXcgb3V0c2lkZSB0aGUgbGluZXNcblx0XHRzcGVjaWFsID0galF1ZXJ5LmV2ZW50LnNwZWNpYWxbIHR5cGUgXSB8fCB7fTtcblx0XHRpZiAoICFvbmx5SGFuZGxlcnMgJiYgc3BlY2lhbC50cmlnZ2VyICYmIHNwZWNpYWwudHJpZ2dlci5hcHBseSggZWxlbSwgZGF0YSApID09PSBmYWxzZSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBEZXRlcm1pbmUgZXZlbnQgcHJvcGFnYXRpb24gcGF0aCBpbiBhZHZhbmNlLCBwZXIgVzNDIGV2ZW50cyBzcGVjICgjOTk1MSlcblx0XHQvLyBCdWJibGUgdXAgdG8gZG9jdW1lbnQsIHRoZW4gdG8gd2luZG93OyB3YXRjaCBmb3IgYSBnbG9iYWwgb3duZXJEb2N1bWVudCB2YXIgKCM5NzI0KVxuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiAhc3BlY2lhbC5ub0J1YmJsZSAmJiAhaXNXaW5kb3coIGVsZW0gKSApIHtcblxuXHRcdFx0YnViYmxlVHlwZSA9IHNwZWNpYWwuZGVsZWdhdGVUeXBlIHx8IHR5cGU7XG5cdFx0XHRpZiAoICFyZm9jdXNNb3JwaC50ZXN0KCBidWJibGVUeXBlICsgdHlwZSApICkge1xuXHRcdFx0XHRjdXIgPSBjdXIucGFyZW50Tm9kZTtcblx0XHRcdH1cblx0XHRcdGZvciAoIDsgY3VyOyBjdXIgPSBjdXIucGFyZW50Tm9kZSApIHtcblx0XHRcdFx0ZXZlbnRQYXRoLnB1c2goIGN1ciApO1xuXHRcdFx0XHR0bXAgPSBjdXI7XG5cdFx0XHR9XG5cblx0XHRcdC8vIE9ubHkgYWRkIHdpbmRvdyBpZiB3ZSBnb3QgdG8gZG9jdW1lbnQgKGUuZy4sIG5vdCBwbGFpbiBvYmogb3IgZGV0YWNoZWQgRE9NKVxuXHRcdFx0aWYgKCB0bXAgPT09ICggZWxlbS5vd25lckRvY3VtZW50IHx8IGRvY3VtZW50ICkgKSB7XG5cdFx0XHRcdGV2ZW50UGF0aC5wdXNoKCB0bXAuZGVmYXVsdFZpZXcgfHwgdG1wLnBhcmVudFdpbmRvdyB8fCB3aW5kb3cgKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBGaXJlIGhhbmRsZXJzIG9uIHRoZSBldmVudCBwYXRoXG5cdFx0aSA9IDA7XG5cdFx0d2hpbGUgKCAoIGN1ciA9IGV2ZW50UGF0aFsgaSsrIF0gKSAmJiAhZXZlbnQuaXNQcm9wYWdhdGlvblN0b3BwZWQoKSApIHtcblx0XHRcdGxhc3RFbGVtZW50ID0gY3VyO1xuXHRcdFx0ZXZlbnQudHlwZSA9IGkgPiAxID9cblx0XHRcdFx0YnViYmxlVHlwZSA6XG5cdFx0XHRcdHNwZWNpYWwuYmluZFR5cGUgfHwgdHlwZTtcblxuXHRcdFx0Ly8galF1ZXJ5IGhhbmRsZXJcblx0XHRcdGhhbmRsZSA9ICggZGF0YVByaXYuZ2V0KCBjdXIsIFwiZXZlbnRzXCIgKSB8fCB7fSApWyBldmVudC50eXBlIF0gJiZcblx0XHRcdFx0ZGF0YVByaXYuZ2V0KCBjdXIsIFwiaGFuZGxlXCIgKTtcblx0XHRcdGlmICggaGFuZGxlICkge1xuXHRcdFx0XHRoYW5kbGUuYXBwbHkoIGN1ciwgZGF0YSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBOYXRpdmUgaGFuZGxlclxuXHRcdFx0aGFuZGxlID0gb250eXBlICYmIGN1clsgb250eXBlIF07XG5cdFx0XHRpZiAoIGhhbmRsZSAmJiBoYW5kbGUuYXBwbHkgJiYgYWNjZXB0RGF0YSggY3VyICkgKSB7XG5cdFx0XHRcdGV2ZW50LnJlc3VsdCA9IGhhbmRsZS5hcHBseSggY3VyLCBkYXRhICk7XG5cdFx0XHRcdGlmICggZXZlbnQucmVzdWx0ID09PSBmYWxzZSApIHtcblx0XHRcdFx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGV2ZW50LnR5cGUgPSB0eXBlO1xuXG5cdFx0Ly8gSWYgbm9ib2R5IHByZXZlbnRlZCB0aGUgZGVmYXVsdCBhY3Rpb24sIGRvIGl0IG5vd1xuXHRcdGlmICggIW9ubHlIYW5kbGVycyAmJiAhZXZlbnQuaXNEZWZhdWx0UHJldmVudGVkKCkgKSB7XG5cblx0XHRcdGlmICggKCAhc3BlY2lhbC5fZGVmYXVsdCB8fFxuXHRcdFx0XHRzcGVjaWFsLl9kZWZhdWx0LmFwcGx5KCBldmVudFBhdGgucG9wKCksIGRhdGEgKSA9PT0gZmFsc2UgKSAmJlxuXHRcdFx0XHRhY2NlcHREYXRhKCBlbGVtICkgKSB7XG5cblx0XHRcdFx0Ly8gQ2FsbCBhIG5hdGl2ZSBET00gbWV0aG9kIG9uIHRoZSB0YXJnZXQgd2l0aCB0aGUgc2FtZSBuYW1lIGFzIHRoZSBldmVudC5cblx0XHRcdFx0Ly8gRG9uJ3QgZG8gZGVmYXVsdCBhY3Rpb25zIG9uIHdpbmRvdywgdGhhdCdzIHdoZXJlIGdsb2JhbCB2YXJpYWJsZXMgYmUgKCM2MTcwKVxuXHRcdFx0XHRpZiAoIG9udHlwZSAmJiBpc0Z1bmN0aW9uKCBlbGVtWyB0eXBlIF0gKSAmJiAhaXNXaW5kb3coIGVsZW0gKSApIHtcblxuXHRcdFx0XHRcdC8vIERvbid0IHJlLXRyaWdnZXIgYW4gb25GT08gZXZlbnQgd2hlbiB3ZSBjYWxsIGl0cyBGT08oKSBtZXRob2Rcblx0XHRcdFx0XHR0bXAgPSBlbGVtWyBvbnR5cGUgXTtcblxuXHRcdFx0XHRcdGlmICggdG1wICkge1xuXHRcdFx0XHRcdFx0ZWxlbVsgb250eXBlIF0gPSBudWxsO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdC8vIFByZXZlbnQgcmUtdHJpZ2dlcmluZyBvZiB0aGUgc2FtZSBldmVudCwgc2luY2Ugd2UgYWxyZWFkeSBidWJibGVkIGl0IGFib3ZlXG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXJlZCA9IHR5cGU7XG5cblx0XHRcdFx0XHRpZiAoIGV2ZW50LmlzUHJvcGFnYXRpb25TdG9wcGVkKCkgKSB7XG5cdFx0XHRcdFx0XHRsYXN0RWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCB0eXBlLCBzdG9wUHJvcGFnYXRpb25DYWxsYmFjayApO1xuXHRcdFx0XHRcdH1cblxuXHRcdFx0XHRcdGVsZW1bIHR5cGUgXSgpO1xuXG5cdFx0XHRcdFx0aWYgKCBldmVudC5pc1Byb3BhZ2F0aW9uU3RvcHBlZCgpICkge1xuXHRcdFx0XHRcdFx0bGFzdEVsZW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lciggdHlwZSwgc3RvcFByb3BhZ2F0aW9uQ2FsbGJhY2sgKTtcblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlcmVkID0gdW5kZWZpbmVkO1xuXG5cdFx0XHRcdFx0aWYgKCB0bXAgKSB7XG5cdFx0XHRcdFx0XHRlbGVtWyBvbnR5cGUgXSA9IHRtcDtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4gZXZlbnQucmVzdWx0O1xuXHR9LFxuXG5cdC8vIFBpZ2d5YmFjayBvbiBhIGRvbm9yIGV2ZW50IHRvIHNpbXVsYXRlIGEgZGlmZmVyZW50IG9uZVxuXHQvLyBVc2VkIG9ubHkgZm9yIGBmb2N1cyhpbiB8IG91dClgIGV2ZW50c1xuXHRzaW11bGF0ZTogZnVuY3Rpb24oIHR5cGUsIGVsZW0sIGV2ZW50ICkge1xuXHRcdHZhciBlID0galF1ZXJ5LmV4dGVuZChcblx0XHRcdG5ldyBqUXVlcnkuRXZlbnQoKSxcblx0XHRcdGV2ZW50LFxuXHRcdFx0e1xuXHRcdFx0XHR0eXBlOiB0eXBlLFxuXHRcdFx0XHRpc1NpbXVsYXRlZDogdHJ1ZVxuXHRcdFx0fVxuXHRcdCk7XG5cblx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggZSwgbnVsbCwgZWxlbSApO1xuXHR9XG5cbn0gKTtcblxualF1ZXJ5LmZuLmV4dGVuZCgge1xuXG5cdHRyaWdnZXI6IGZ1bmN0aW9uKCB0eXBlLCBkYXRhICkge1xuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5LmV2ZW50LnRyaWdnZXIoIHR5cGUsIGRhdGEsIHRoaXMgKTtcblx0XHR9ICk7XG5cdH0sXG5cdHRyaWdnZXJIYW5kbGVyOiBmdW5jdGlvbiggdHlwZSwgZGF0YSApIHtcblx0XHR2YXIgZWxlbSA9IHRoaXNbIDAgXTtcblx0XHRpZiAoIGVsZW0gKSB7XG5cdFx0XHRyZXR1cm4galF1ZXJ5LmV2ZW50LnRyaWdnZXIoIHR5cGUsIGRhdGEsIGVsZW0sIHRydWUgKTtcblx0XHR9XG5cdH1cbn0gKTtcblxuXG4vLyBTdXBwb3J0OiBGaXJlZm94IDw9NDRcbi8vIEZpcmVmb3ggZG9lc24ndCBoYXZlIGZvY3VzKGluIHwgb3V0KSBldmVudHNcbi8vIFJlbGF0ZWQgdGlja2V0IC0gaHR0cHM6Ly9idWd6aWxsYS5tb3ppbGxhLm9yZy9zaG93X2J1Zy5jZ2k/aWQ9Njg3Nzg3XG4vL1xuLy8gU3VwcG9ydDogQ2hyb21lIDw9NDggLSA0OSwgU2FmYXJpIDw9OS4wIC0gOS4xXG4vLyBmb2N1cyhpbiB8IG91dCkgZXZlbnRzIGZpcmUgYWZ0ZXIgZm9jdXMgJiBibHVyIGV2ZW50cyxcbi8vIHdoaWNoIGlzIHNwZWMgdmlvbGF0aW9uIC0gaHR0cDovL3d3dy53My5vcmcvVFIvRE9NLUxldmVsLTMtRXZlbnRzLyNldmVudHMtZm9jdXNldmVudC1ldmVudC1vcmRlclxuLy8gUmVsYXRlZCB0aWNrZXQgLSBodHRwczovL2J1Z3MuY2hyb21pdW0ub3JnL3AvY2hyb21pdW0vaXNzdWVzL2RldGFpbD9pZD00NDk4NTdcbmlmICggIXN1cHBvcnQuZm9jdXNpbiApIHtcblx0alF1ZXJ5LmVhY2goIHsgZm9jdXM6IFwiZm9jdXNpblwiLCBibHVyOiBcImZvY3Vzb3V0XCIgfSwgZnVuY3Rpb24oIG9yaWcsIGZpeCApIHtcblxuXHRcdC8vIEF0dGFjaCBhIHNpbmdsZSBjYXB0dXJpbmcgaGFuZGxlciBvbiB0aGUgZG9jdW1lbnQgd2hpbGUgc29tZW9uZSB3YW50cyBmb2N1c2luL2ZvY3Vzb3V0XG5cdFx0dmFyIGhhbmRsZXIgPSBmdW5jdGlvbiggZXZlbnQgKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQuc2ltdWxhdGUoIGZpeCwgZXZlbnQudGFyZ2V0LCBqUXVlcnkuZXZlbnQuZml4KCBldmVudCApICk7XG5cdFx0fTtcblxuXHRcdGpRdWVyeS5ldmVudC5zcGVjaWFsWyBmaXggXSA9IHtcblx0XHRcdHNldHVwOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGRvYyA9IHRoaXMub3duZXJEb2N1bWVudCB8fCB0aGlzLFxuXHRcdFx0XHRcdGF0dGFjaGVzID0gZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCApO1xuXG5cdFx0XHRcdGlmICggIWF0dGFjaGVzICkge1xuXHRcdFx0XHRcdGRvYy5hZGRFdmVudExpc3RlbmVyKCBvcmlnLCBoYW5kbGVyLCB0cnVlICk7XG5cdFx0XHRcdH1cblx0XHRcdFx0ZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCwgKCBhdHRhY2hlcyB8fCAwICkgKyAxICk7XG5cdFx0XHR9LFxuXHRcdFx0dGVhcmRvd246IGZ1bmN0aW9uKCkge1xuXHRcdFx0XHR2YXIgZG9jID0gdGhpcy5vd25lckRvY3VtZW50IHx8IHRoaXMsXG5cdFx0XHRcdFx0YXR0YWNoZXMgPSBkYXRhUHJpdi5hY2Nlc3MoIGRvYywgZml4ICkgLSAxO1xuXG5cdFx0XHRcdGlmICggIWF0dGFjaGVzICkge1xuXHRcdFx0XHRcdGRvYy5yZW1vdmVFdmVudExpc3RlbmVyKCBvcmlnLCBoYW5kbGVyLCB0cnVlICk7XG5cdFx0XHRcdFx0ZGF0YVByaXYucmVtb3ZlKCBkb2MsIGZpeCApO1xuXG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0ZGF0YVByaXYuYWNjZXNzKCBkb2MsIGZpeCwgYXR0YWNoZXMgKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH0gKTtcbn1cbnZhciBsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbjtcblxudmFyIG5vbmNlID0gRGF0ZS5ub3coKTtcblxudmFyIHJxdWVyeSA9ICggL1xcPy8gKTtcblxuXG5cbi8vIENyb3NzLWJyb3dzZXIgeG1sIHBhcnNpbmdcbmpRdWVyeS5wYXJzZVhNTCA9IGZ1bmN0aW9uKCBkYXRhICkge1xuXHR2YXIgeG1sO1xuXHRpZiAoICFkYXRhIHx8IHR5cGVvZiBkYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBudWxsO1xuXHR9XG5cblx0Ly8gU3VwcG9ydDogSUUgOSAtIDExIG9ubHlcblx0Ly8gSUUgdGhyb3dzIG9uIHBhcnNlRnJvbVN0cmluZyB3aXRoIGludmFsaWQgaW5wdXQuXG5cdHRyeSB7XG5cdFx0eG1sID0gKCBuZXcgd2luZG93LkRPTVBhcnNlcigpICkucGFyc2VGcm9tU3RyaW5nKCBkYXRhLCBcInRleHQveG1sXCIgKTtcblx0fSBjYXRjaCAoIGUgKSB7XG5cdFx0eG1sID0gdW5kZWZpbmVkO1xuXHR9XG5cblx0aWYgKCAheG1sIHx8IHhtbC5nZXRFbGVtZW50c0J5VGFnTmFtZSggXCJwYXJzZXJlcnJvclwiICkubGVuZ3RoICkge1xuXHRcdGpRdWVyeS5lcnJvciggXCJJbnZhbGlkIFhNTDogXCIgKyBkYXRhICk7XG5cdH1cblx0cmV0dXJuIHhtbDtcbn07XG5cblxudmFyXG5cdHJicmFja2V0ID0gL1xcW1xcXSQvLFxuXHRyQ1JMRiA9IC9cXHI/XFxuL2csXG5cdHJzdWJtaXR0ZXJUeXBlcyA9IC9eKD86c3VibWl0fGJ1dHRvbnxpbWFnZXxyZXNldHxmaWxlKSQvaSxcblx0cnN1Ym1pdHRhYmxlID0gL14oPzppbnB1dHxzZWxlY3R8dGV4dGFyZWF8a2V5Z2VuKS9pO1xuXG5mdW5jdGlvbiBidWlsZFBhcmFtcyggcHJlZml4LCBvYmosIHRyYWRpdGlvbmFsLCBhZGQgKSB7XG5cdHZhciBuYW1lO1xuXG5cdGlmICggQXJyYXkuaXNBcnJheSggb2JqICkgKSB7XG5cblx0XHQvLyBTZXJpYWxpemUgYXJyYXkgaXRlbS5cblx0XHRqUXVlcnkuZWFjaCggb2JqLCBmdW5jdGlvbiggaSwgdiApIHtcblx0XHRcdGlmICggdHJhZGl0aW9uYWwgfHwgcmJyYWNrZXQudGVzdCggcHJlZml4ICkgKSB7XG5cblx0XHRcdFx0Ly8gVHJlYXQgZWFjaCBhcnJheSBpdGVtIGFzIGEgc2NhbGFyLlxuXHRcdFx0XHRhZGQoIHByZWZpeCwgdiApO1xuXG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEl0ZW0gaXMgbm9uLXNjYWxhciAoYXJyYXkgb3Igb2JqZWN0KSwgZW5jb2RlIGl0cyBudW1lcmljIGluZGV4LlxuXHRcdFx0XHRidWlsZFBhcmFtcyhcblx0XHRcdFx0XHRwcmVmaXggKyBcIltcIiArICggdHlwZW9mIHYgPT09IFwib2JqZWN0XCIgJiYgdiAhPSBudWxsID8gaSA6IFwiXCIgKSArIFwiXVwiLFxuXHRcdFx0XHRcdHYsXG5cdFx0XHRcdFx0dHJhZGl0aW9uYWwsXG5cdFx0XHRcdFx0YWRkXG5cdFx0XHRcdCk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXG5cdH0gZWxzZSBpZiAoICF0cmFkaXRpb25hbCAmJiB0b1R5cGUoIG9iaiApID09PSBcIm9iamVjdFwiICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIG9iamVjdCBpdGVtLlxuXHRcdGZvciAoIG5hbWUgaW4gb2JqICkge1xuXHRcdFx0YnVpbGRQYXJhbXMoIHByZWZpeCArIFwiW1wiICsgbmFtZSArIFwiXVwiLCBvYmpbIG5hbWUgXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblxuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gU2VyaWFsaXplIHNjYWxhciBpdGVtLlxuXHRcdGFkZCggcHJlZml4LCBvYmogKTtcblx0fVxufVxuXG4vLyBTZXJpYWxpemUgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cyBvciBhIHNldCBvZlxuLy8ga2V5L3ZhbHVlcyBpbnRvIGEgcXVlcnkgc3RyaW5nXG5qUXVlcnkucGFyYW0gPSBmdW5jdGlvbiggYSwgdHJhZGl0aW9uYWwgKSB7XG5cdHZhciBwcmVmaXgsXG5cdFx0cyA9IFtdLFxuXHRcdGFkZCA9IGZ1bmN0aW9uKCBrZXksIHZhbHVlT3JGdW5jdGlvbiApIHtcblxuXHRcdFx0Ly8gSWYgdmFsdWUgaXMgYSBmdW5jdGlvbiwgaW52b2tlIGl0IGFuZCB1c2UgaXRzIHJldHVybiB2YWx1ZVxuXHRcdFx0dmFyIHZhbHVlID0gaXNGdW5jdGlvbiggdmFsdWVPckZ1bmN0aW9uICkgP1xuXHRcdFx0XHR2YWx1ZU9yRnVuY3Rpb24oKSA6XG5cdFx0XHRcdHZhbHVlT3JGdW5jdGlvbjtcblxuXHRcdFx0c1sgcy5sZW5ndGggXSA9IGVuY29kZVVSSUNvbXBvbmVudCgga2V5ICkgKyBcIj1cIiArXG5cdFx0XHRcdGVuY29kZVVSSUNvbXBvbmVudCggdmFsdWUgPT0gbnVsbCA/IFwiXCIgOiB2YWx1ZSApO1xuXHRcdH07XG5cblx0Ly8gSWYgYW4gYXJyYXkgd2FzIHBhc3NlZCBpbiwgYXNzdW1lIHRoYXQgaXQgaXMgYW4gYXJyYXkgb2YgZm9ybSBlbGVtZW50cy5cblx0aWYgKCBBcnJheS5pc0FycmF5KCBhICkgfHwgKCBhLmpxdWVyeSAmJiAhalF1ZXJ5LmlzUGxhaW5PYmplY3QoIGEgKSApICkge1xuXG5cdFx0Ly8gU2VyaWFsaXplIHRoZSBmb3JtIGVsZW1lbnRzXG5cdFx0alF1ZXJ5LmVhY2goIGEsIGZ1bmN0aW9uKCkge1xuXHRcdFx0YWRkKCB0aGlzLm5hbWUsIHRoaXMudmFsdWUgKTtcblx0XHR9ICk7XG5cblx0fSBlbHNlIHtcblxuXHRcdC8vIElmIHRyYWRpdGlvbmFsLCBlbmNvZGUgdGhlIFwib2xkXCIgd2F5ICh0aGUgd2F5IDEuMy4yIG9yIG9sZGVyXG5cdFx0Ly8gZGlkIGl0KSwgb3RoZXJ3aXNlIGVuY29kZSBwYXJhbXMgcmVjdXJzaXZlbHkuXG5cdFx0Zm9yICggcHJlZml4IGluIGEgKSB7XG5cdFx0XHRidWlsZFBhcmFtcyggcHJlZml4LCBhWyBwcmVmaXggXSwgdHJhZGl0aW9uYWwsIGFkZCApO1xuXHRcdH1cblx0fVxuXG5cdC8vIFJldHVybiB0aGUgcmVzdWx0aW5nIHNlcmlhbGl6YXRpb25cblx0cmV0dXJuIHMuam9pbiggXCImXCIgKTtcbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0c2VyaWFsaXplOiBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5LnBhcmFtKCB0aGlzLnNlcmlhbGl6ZUFycmF5KCkgKTtcblx0fSxcblx0c2VyaWFsaXplQXJyYXk6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIENhbiBhZGQgcHJvcEhvb2sgZm9yIFwiZWxlbWVudHNcIiB0byBmaWx0ZXIgb3IgYWRkIGZvcm0gZWxlbWVudHNcblx0XHRcdHZhciBlbGVtZW50cyA9IGpRdWVyeS5wcm9wKCB0aGlzLCBcImVsZW1lbnRzXCIgKTtcblx0XHRcdHJldHVybiBlbGVtZW50cyA/IGpRdWVyeS5tYWtlQXJyYXkoIGVsZW1lbnRzICkgOiB0aGlzO1xuXHRcdH0gKVxuXHRcdC5maWx0ZXIoIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHR5cGUgPSB0aGlzLnR5cGU7XG5cblx0XHRcdC8vIFVzZSAuaXMoIFwiOmRpc2FibGVkXCIgKSBzbyB0aGF0IGZpZWxkc2V0W2Rpc2FibGVkXSB3b3Jrc1xuXHRcdFx0cmV0dXJuIHRoaXMubmFtZSAmJiAhalF1ZXJ5KCB0aGlzICkuaXMoIFwiOmRpc2FibGVkXCIgKSAmJlxuXHRcdFx0XHRyc3VibWl0dGFibGUudGVzdCggdGhpcy5ub2RlTmFtZSApICYmICFyc3VibWl0dGVyVHlwZXMudGVzdCggdHlwZSApICYmXG5cdFx0XHRcdCggdGhpcy5jaGVja2VkIHx8ICFyY2hlY2thYmxlVHlwZS50ZXN0KCB0eXBlICkgKTtcblx0XHR9IClcblx0XHQubWFwKCBmdW5jdGlvbiggaSwgZWxlbSApIHtcblx0XHRcdHZhciB2YWwgPSBqUXVlcnkoIHRoaXMgKS52YWwoKTtcblxuXHRcdFx0aWYgKCB2YWwgPT0gbnVsbCApIHtcblx0XHRcdFx0cmV0dXJuIG51bGw7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggQXJyYXkuaXNBcnJheSggdmFsICkgKSB7XG5cdFx0XHRcdHJldHVybiBqUXVlcnkubWFwKCB2YWwsIGZ1bmN0aW9uKCB2YWwgKSB7XG5cdFx0XHRcdFx0cmV0dXJuIHsgbmFtZTogZWxlbS5uYW1lLCB2YWx1ZTogdmFsLnJlcGxhY2UoIHJDUkxGLCBcIlxcclxcblwiICkgfTtcblx0XHRcdFx0fSApO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4geyBuYW1lOiBlbGVtLm5hbWUsIHZhbHVlOiB2YWwucmVwbGFjZSggckNSTEYsIFwiXFxyXFxuXCIgKSB9O1xuXHRcdH0gKS5nZXQoKTtcblx0fVxufSApO1xuXG5cbnZhclxuXHRyMjAgPSAvJTIwL2csXG5cdHJoYXNoID0gLyMuKiQvLFxuXHRyYW50aUNhY2hlID0gLyhbPyZdKV89W14mXSovLFxuXHRyaGVhZGVycyA9IC9eKC4qPyk6WyBcXHRdKihbXlxcclxcbl0qKSQvbWcsXG5cblx0Ly8gIzc2NTMsICM4MTI1LCAjODE1MjogbG9jYWwgcHJvdG9jb2wgZGV0ZWN0aW9uXG5cdHJsb2NhbFByb3RvY29sID0gL14oPzphYm91dHxhcHB8YXBwLXN0b3JhZ2V8ListZXh0ZW5zaW9ufGZpbGV8cmVzfHdpZGdldCk6JC8sXG5cdHJub0NvbnRlbnQgPSAvXig/OkdFVHxIRUFEKSQvLFxuXHRycHJvdG9jb2wgPSAvXlxcL1xcLy8sXG5cblx0LyogUHJlZmlsdGVyc1xuXHQgKiAxKSBUaGV5IGFyZSB1c2VmdWwgdG8gaW50cm9kdWNlIGN1c3RvbSBkYXRhVHlwZXMgKHNlZSBhamF4L2pzb25wLmpzIGZvciBhbiBleGFtcGxlKVxuXHQgKiAyKSBUaGVzZSBhcmUgY2FsbGVkOlxuXHQgKiAgICAtIEJFRk9SRSBhc2tpbmcgZm9yIGEgdHJhbnNwb3J0XG5cdCAqICAgIC0gQUZURVIgcGFyYW0gc2VyaWFsaXphdGlvbiAocy5kYXRhIGlzIGEgc3RyaW5nIGlmIHMucHJvY2Vzc0RhdGEgaXMgdHJ1ZSlcblx0ICogMykga2V5IGlzIHRoZSBkYXRhVHlwZVxuXHQgKiA0KSB0aGUgY2F0Y2hhbGwgc3ltYm9sIFwiKlwiIGNhbiBiZSB1c2VkXG5cdCAqIDUpIGV4ZWN1dGlvbiB3aWxsIHN0YXJ0IHdpdGggdHJhbnNwb3J0IGRhdGFUeXBlIGFuZCBUSEVOIGNvbnRpbnVlIGRvd24gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHRwcmVmaWx0ZXJzID0ge30sXG5cblx0LyogVHJhbnNwb3J0cyBiaW5kaW5nc1xuXHQgKiAxKSBrZXkgaXMgdGhlIGRhdGFUeXBlXG5cdCAqIDIpIHRoZSBjYXRjaGFsbCBzeW1ib2wgXCIqXCIgY2FuIGJlIHVzZWRcblx0ICogMykgc2VsZWN0aW9uIHdpbGwgc3RhcnQgd2l0aCB0cmFuc3BvcnQgZGF0YVR5cGUgYW5kIFRIRU4gZ28gdG8gXCIqXCIgaWYgbmVlZGVkXG5cdCAqL1xuXHR0cmFuc3BvcnRzID0ge30sXG5cblx0Ly8gQXZvaWQgY29tbWVudC1wcm9sb2cgY2hhciBzZXF1ZW5jZSAoIzEwMDk4KTsgbXVzdCBhcHBlYXNlIGxpbnQgYW5kIGV2YWRlIGNvbXByZXNzaW9uXG5cdGFsbFR5cGVzID0gXCIqL1wiLmNvbmNhdCggXCIqXCIgKSxcblxuXHQvLyBBbmNob3IgdGFnIGZvciBwYXJzaW5nIHRoZSBkb2N1bWVudCBvcmlnaW5cblx0b3JpZ2luQW5jaG9yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCggXCJhXCIgKTtcblx0b3JpZ2luQW5jaG9yLmhyZWYgPSBsb2NhdGlvbi5ocmVmO1xuXG4vLyBCYXNlIFwiY29uc3RydWN0b3JcIiBmb3IgalF1ZXJ5LmFqYXhQcmVmaWx0ZXIgYW5kIGpRdWVyeS5hamF4VHJhbnNwb3J0XG5mdW5jdGlvbiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHN0cnVjdHVyZSApIHtcblxuXHQvLyBkYXRhVHlwZUV4cHJlc3Npb24gaXMgb3B0aW9uYWwgYW5kIGRlZmF1bHRzIHRvIFwiKlwiXG5cdHJldHVybiBmdW5jdGlvbiggZGF0YVR5cGVFeHByZXNzaW9uLCBmdW5jICkge1xuXG5cdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVFeHByZXNzaW9uICE9PSBcInN0cmluZ1wiICkge1xuXHRcdFx0ZnVuYyA9IGRhdGFUeXBlRXhwcmVzc2lvbjtcblx0XHRcdGRhdGFUeXBlRXhwcmVzc2lvbiA9IFwiKlwiO1xuXHRcdH1cblxuXHRcdHZhciBkYXRhVHlwZSxcblx0XHRcdGkgPSAwLFxuXHRcdFx0ZGF0YVR5cGVzID0gZGF0YVR5cGVFeHByZXNzaW9uLnRvTG93ZXJDYXNlKCkubWF0Y2goIHJub3RodG1sd2hpdGUgKSB8fCBbXTtcblxuXHRcdGlmICggaXNGdW5jdGlvbiggZnVuYyApICkge1xuXG5cdFx0XHQvLyBGb3IgZWFjaCBkYXRhVHlwZSBpbiB0aGUgZGF0YVR5cGVFeHByZXNzaW9uXG5cdFx0XHR3aGlsZSAoICggZGF0YVR5cGUgPSBkYXRhVHlwZXNbIGkrKyBdICkgKSB7XG5cblx0XHRcdFx0Ly8gUHJlcGVuZCBpZiByZXF1ZXN0ZWRcblx0XHRcdFx0aWYgKCBkYXRhVHlwZVsgMCBdID09PSBcIitcIiApIHtcblx0XHRcdFx0XHRkYXRhVHlwZSA9IGRhdGFUeXBlLnNsaWNlKCAxICkgfHwgXCIqXCI7XG5cdFx0XHRcdFx0KCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gPSBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10gKS51bnNoaWZ0KCBmdW5jICk7XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIGFwcGVuZFxuXHRcdFx0XHR9IGVsc2Uge1xuXHRcdFx0XHRcdCggc3RydWN0dXJlWyBkYXRhVHlwZSBdID0gc3RydWN0dXJlWyBkYXRhVHlwZSBdIHx8IFtdICkucHVzaCggZnVuYyApO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9O1xufVxuXG4vLyBCYXNlIGluc3BlY3Rpb24gZnVuY3Rpb24gZm9yIHByZWZpbHRlcnMgYW5kIHRyYW5zcG9ydHNcbmZ1bmN0aW9uIGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBzdHJ1Y3R1cmUsIG9wdGlvbnMsIG9yaWdpbmFsT3B0aW9ucywganFYSFIgKSB7XG5cblx0dmFyIGluc3BlY3RlZCA9IHt9LFxuXHRcdHNlZWtpbmdUcmFuc3BvcnQgPSAoIHN0cnVjdHVyZSA9PT0gdHJhbnNwb3J0cyApO1xuXG5cdGZ1bmN0aW9uIGluc3BlY3QoIGRhdGFUeXBlICkge1xuXHRcdHZhciBzZWxlY3RlZDtcblx0XHRpbnNwZWN0ZWRbIGRhdGFUeXBlIF0gPSB0cnVlO1xuXHRcdGpRdWVyeS5lYWNoKCBzdHJ1Y3R1cmVbIGRhdGFUeXBlIF0gfHwgW10sIGZ1bmN0aW9uKCBfLCBwcmVmaWx0ZXJPckZhY3RvcnkgKSB7XG5cdFx0XHR2YXIgZGF0YVR5cGVPclRyYW5zcG9ydCA9IHByZWZpbHRlck9yRmFjdG9yeSggb3B0aW9ucywgb3JpZ2luYWxPcHRpb25zLCBqcVhIUiApO1xuXHRcdFx0aWYgKCB0eXBlb2YgZGF0YVR5cGVPclRyYW5zcG9ydCA9PT0gXCJzdHJpbmdcIiAmJlxuXHRcdFx0XHQhc2Vla2luZ1RyYW5zcG9ydCAmJiAhaW5zcGVjdGVkWyBkYXRhVHlwZU9yVHJhbnNwb3J0IF0gKSB7XG5cblx0XHRcdFx0b3B0aW9ucy5kYXRhVHlwZXMudW5zaGlmdCggZGF0YVR5cGVPclRyYW5zcG9ydCApO1xuXHRcdFx0XHRpbnNwZWN0KCBkYXRhVHlwZU9yVHJhbnNwb3J0ICk7XG5cdFx0XHRcdHJldHVybiBmYWxzZTtcblx0XHRcdH0gZWxzZSBpZiAoIHNlZWtpbmdUcmFuc3BvcnQgKSB7XG5cdFx0XHRcdHJldHVybiAhKCBzZWxlY3RlZCA9IGRhdGFUeXBlT3JUcmFuc3BvcnQgKTtcblx0XHRcdH1cblx0XHR9ICk7XG5cdFx0cmV0dXJuIHNlbGVjdGVkO1xuXHR9XG5cblx0cmV0dXJuIGluc3BlY3QoIG9wdGlvbnMuZGF0YVR5cGVzWyAwIF0gKSB8fCAhaW5zcGVjdGVkWyBcIipcIiBdICYmIGluc3BlY3QoIFwiKlwiICk7XG59XG5cbi8vIEEgc3BlY2lhbCBleHRlbmQgZm9yIGFqYXggb3B0aW9uc1xuLy8gdGhhdCB0YWtlcyBcImZsYXRcIiBvcHRpb25zIChub3QgdG8gYmUgZGVlcCBleHRlbmRlZClcbi8vIEZpeGVzICM5ODg3XG5mdW5jdGlvbiBhamF4RXh0ZW5kKCB0YXJnZXQsIHNyYyApIHtcblx0dmFyIGtleSwgZGVlcCxcblx0XHRmbGF0T3B0aW9ucyA9IGpRdWVyeS5hamF4U2V0dGluZ3MuZmxhdE9wdGlvbnMgfHwge307XG5cblx0Zm9yICgga2V5IGluIHNyYyApIHtcblx0XHRpZiAoIHNyY1sga2V5IF0gIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdCggZmxhdE9wdGlvbnNbIGtleSBdID8gdGFyZ2V0IDogKCBkZWVwIHx8ICggZGVlcCA9IHt9ICkgKSApWyBrZXkgXSA9IHNyY1sga2V5IF07XG5cdFx0fVxuXHR9XG5cdGlmICggZGVlcCApIHtcblx0XHRqUXVlcnkuZXh0ZW5kKCB0cnVlLCB0YXJnZXQsIGRlZXAgKTtcblx0fVxuXG5cdHJldHVybiB0YXJnZXQ7XG59XG5cbi8qIEhhbmRsZXMgcmVzcG9uc2VzIHRvIGFuIGFqYXggcmVxdWVzdDpcbiAqIC0gZmluZHMgdGhlIHJpZ2h0IGRhdGFUeXBlIChtZWRpYXRlcyBiZXR3ZWVuIGNvbnRlbnQtdHlwZSBhbmQgZXhwZWN0ZWQgZGF0YVR5cGUpXG4gKiAtIHJldHVybnMgdGhlIGNvcnJlc3BvbmRpbmcgcmVzcG9uc2VcbiAqL1xuZnVuY3Rpb24gYWpheEhhbmRsZVJlc3BvbnNlcyggcywganFYSFIsIHJlc3BvbnNlcyApIHtcblxuXHR2YXIgY3QsIHR5cGUsIGZpbmFsRGF0YVR5cGUsIGZpcnN0RGF0YVR5cGUsXG5cdFx0Y29udGVudHMgPSBzLmNvbnRlbnRzLFxuXHRcdGRhdGFUeXBlcyA9IHMuZGF0YVR5cGVzO1xuXG5cdC8vIFJlbW92ZSBhdXRvIGRhdGFUeXBlIGFuZCBnZXQgY29udGVudC10eXBlIGluIHRoZSBwcm9jZXNzXG5cdHdoaWxlICggZGF0YVR5cGVzWyAwIF0gPT09IFwiKlwiICkge1xuXHRcdGRhdGFUeXBlcy5zaGlmdCgpO1xuXHRcdGlmICggY3QgPT09IHVuZGVmaW5lZCApIHtcblx0XHRcdGN0ID0gcy5taW1lVHlwZSB8fCBqcVhIUi5nZXRSZXNwb25zZUhlYWRlciggXCJDb250ZW50LVR5cGVcIiApO1xuXHRcdH1cblx0fVxuXG5cdC8vIENoZWNrIGlmIHdlJ3JlIGRlYWxpbmcgd2l0aCBhIGtub3duIGNvbnRlbnQtdHlwZVxuXHRpZiAoIGN0ICkge1xuXHRcdGZvciAoIHR5cGUgaW4gY29udGVudHMgKSB7XG5cdFx0XHRpZiAoIGNvbnRlbnRzWyB0eXBlIF0gJiYgY29udGVudHNbIHR5cGUgXS50ZXN0KCBjdCApICkge1xuXHRcdFx0XHRkYXRhVHlwZXMudW5zaGlmdCggdHlwZSApO1xuXHRcdFx0XHRicmVhaztcblx0XHRcdH1cblx0XHR9XG5cdH1cblxuXHQvLyBDaGVjayB0byBzZWUgaWYgd2UgaGF2ZSBhIHJlc3BvbnNlIGZvciB0aGUgZXhwZWN0ZWQgZGF0YVR5cGVcblx0aWYgKCBkYXRhVHlwZXNbIDAgXSBpbiByZXNwb25zZXMgKSB7XG5cdFx0ZmluYWxEYXRhVHlwZSA9IGRhdGFUeXBlc1sgMCBdO1xuXHR9IGVsc2Uge1xuXG5cdFx0Ly8gVHJ5IGNvbnZlcnRpYmxlIGRhdGFUeXBlc1xuXHRcdGZvciAoIHR5cGUgaW4gcmVzcG9uc2VzICkge1xuXHRcdFx0aWYgKCAhZGF0YVR5cGVzWyAwIF0gfHwgcy5jb252ZXJ0ZXJzWyB0eXBlICsgXCIgXCIgKyBkYXRhVHlwZXNbIDAgXSBdICkge1xuXHRcdFx0XHRmaW5hbERhdGFUeXBlID0gdHlwZTtcblx0XHRcdFx0YnJlYWs7XG5cdFx0XHR9XG5cdFx0XHRpZiAoICFmaXJzdERhdGFUeXBlICkge1xuXHRcdFx0XHRmaXJzdERhdGFUeXBlID0gdHlwZTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBPciBqdXN0IHVzZSBmaXJzdCBvbmVcblx0XHRmaW5hbERhdGFUeXBlID0gZmluYWxEYXRhVHlwZSB8fCBmaXJzdERhdGFUeXBlO1xuXHR9XG5cblx0Ly8gSWYgd2UgZm91bmQgYSBkYXRhVHlwZVxuXHQvLyBXZSBhZGQgdGhlIGRhdGFUeXBlIHRvIHRoZSBsaXN0IGlmIG5lZWRlZFxuXHQvLyBhbmQgcmV0dXJuIHRoZSBjb3JyZXNwb25kaW5nIHJlc3BvbnNlXG5cdGlmICggZmluYWxEYXRhVHlwZSApIHtcblx0XHRpZiAoIGZpbmFsRGF0YVR5cGUgIT09IGRhdGFUeXBlc1sgMCBdICkge1xuXHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIGZpbmFsRGF0YVR5cGUgKTtcblx0XHR9XG5cdFx0cmV0dXJuIHJlc3BvbnNlc1sgZmluYWxEYXRhVHlwZSBdO1xuXHR9XG59XG5cbi8qIENoYWluIGNvbnZlcnNpb25zIGdpdmVuIHRoZSByZXF1ZXN0IGFuZCB0aGUgb3JpZ2luYWwgcmVzcG9uc2VcbiAqIEFsc28gc2V0cyB0aGUgcmVzcG9uc2VYWFggZmllbGRzIG9uIHRoZSBqcVhIUiBpbnN0YW5jZVxuICovXG5mdW5jdGlvbiBhamF4Q29udmVydCggcywgcmVzcG9uc2UsIGpxWEhSLCBpc1N1Y2Nlc3MgKSB7XG5cdHZhciBjb252MiwgY3VycmVudCwgY29udiwgdG1wLCBwcmV2LFxuXHRcdGNvbnZlcnRlcnMgPSB7fSxcblxuXHRcdC8vIFdvcmsgd2l0aCBhIGNvcHkgb2YgZGF0YVR5cGVzIGluIGNhc2Ugd2UgbmVlZCB0byBtb2RpZnkgaXQgZm9yIGNvbnZlcnNpb25cblx0XHRkYXRhVHlwZXMgPSBzLmRhdGFUeXBlcy5zbGljZSgpO1xuXG5cdC8vIENyZWF0ZSBjb252ZXJ0ZXJzIG1hcCB3aXRoIGxvd2VyY2FzZWQga2V5c1xuXHRpZiAoIGRhdGFUeXBlc1sgMSBdICkge1xuXHRcdGZvciAoIGNvbnYgaW4gcy5jb252ZXJ0ZXJzICkge1xuXHRcdFx0Y29udmVydGVyc1sgY29udi50b0xvd2VyQ2FzZSgpIF0gPSBzLmNvbnZlcnRlcnNbIGNvbnYgXTtcblx0XHR9XG5cdH1cblxuXHRjdXJyZW50ID0gZGF0YVR5cGVzLnNoaWZ0KCk7XG5cblx0Ly8gQ29udmVydCB0byBlYWNoIHNlcXVlbnRpYWwgZGF0YVR5cGVcblx0d2hpbGUgKCBjdXJyZW50ICkge1xuXG5cdFx0aWYgKCBzLnJlc3BvbnNlRmllbGRzWyBjdXJyZW50IF0gKSB7XG5cdFx0XHRqcVhIUlsgcy5yZXNwb25zZUZpZWxkc1sgY3VycmVudCBdIF0gPSByZXNwb25zZTtcblx0XHR9XG5cblx0XHQvLyBBcHBseSB0aGUgZGF0YUZpbHRlciBpZiBwcm92aWRlZFxuXHRcdGlmICggIXByZXYgJiYgaXNTdWNjZXNzICYmIHMuZGF0YUZpbHRlciApIHtcblx0XHRcdHJlc3BvbnNlID0gcy5kYXRhRmlsdGVyKCByZXNwb25zZSwgcy5kYXRhVHlwZSApO1xuXHRcdH1cblxuXHRcdHByZXYgPSBjdXJyZW50O1xuXHRcdGN1cnJlbnQgPSBkYXRhVHlwZXMuc2hpZnQoKTtcblxuXHRcdGlmICggY3VycmVudCApIHtcblxuXHRcdFx0Ly8gVGhlcmUncyBvbmx5IHdvcmsgdG8gZG8gaWYgY3VycmVudCBkYXRhVHlwZSBpcyBub24tYXV0b1xuXHRcdFx0aWYgKCBjdXJyZW50ID09PSBcIipcIiApIHtcblxuXHRcdFx0XHRjdXJyZW50ID0gcHJldjtcblxuXHRcdFx0Ly8gQ29udmVydCByZXNwb25zZSBpZiBwcmV2IGRhdGFUeXBlIGlzIG5vbi1hdXRvIGFuZCBkaWZmZXJzIGZyb20gY3VycmVudFxuXHRcdFx0fSBlbHNlIGlmICggcHJldiAhPT0gXCIqXCIgJiYgcHJldiAhPT0gY3VycmVudCApIHtcblxuXHRcdFx0XHQvLyBTZWVrIGEgZGlyZWN0IGNvbnZlcnRlclxuXHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgY3VycmVudCBdIHx8IGNvbnZlcnRlcnNbIFwiKiBcIiArIGN1cnJlbnQgXTtcblxuXHRcdFx0XHQvLyBJZiBub25lIGZvdW5kLCBzZWVrIGEgcGFpclxuXHRcdFx0XHRpZiAoICFjb252ICkge1xuXHRcdFx0XHRcdGZvciAoIGNvbnYyIGluIGNvbnZlcnRlcnMgKSB7XG5cblx0XHRcdFx0XHRcdC8vIElmIGNvbnYyIG91dHB1dHMgY3VycmVudFxuXHRcdFx0XHRcdFx0dG1wID0gY29udjIuc3BsaXQoIFwiIFwiICk7XG5cdFx0XHRcdFx0XHRpZiAoIHRtcFsgMSBdID09PSBjdXJyZW50ICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIElmIHByZXYgY2FuIGJlIGNvbnZlcnRlZCB0byBhY2NlcHRlZCBpbnB1dFxuXHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgcHJldiArIFwiIFwiICsgdG1wWyAwIF0gXSB8fFxuXHRcdFx0XHRcdFx0XHRcdGNvbnZlcnRlcnNbIFwiKiBcIiArIHRtcFsgMCBdIF07XG5cdFx0XHRcdFx0XHRcdGlmICggY29udiApIHtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIENvbmRlbnNlIGVxdWl2YWxlbmNlIGNvbnZlcnRlcnNcblx0XHRcdFx0XHRcdFx0XHRpZiAoIGNvbnYgPT09IHRydWUgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb252ID0gY29udmVydGVyc1sgY29udjIgXTtcblxuXHRcdFx0XHRcdFx0XHRcdC8vIE90aGVyd2lzZSwgaW5zZXJ0IHRoZSBpbnRlcm1lZGlhdGUgZGF0YVR5cGVcblx0XHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCBjb252ZXJ0ZXJzWyBjb252MiBdICE9PSB0cnVlICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y3VycmVudCA9IHRtcFsgMCBdO1xuXHRcdFx0XHRcdFx0XHRcdFx0ZGF0YVR5cGVzLnVuc2hpZnQoIHRtcFsgMSBdICk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHRcdGJyZWFrO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gQXBwbHkgY29udmVydGVyIChpZiBub3QgYW4gZXF1aXZhbGVuY2UpXG5cdFx0XHRcdGlmICggY29udiAhPT0gdHJ1ZSApIHtcblxuXHRcdFx0XHRcdC8vIFVubGVzcyBlcnJvcnMgYXJlIGFsbG93ZWQgdG8gYnViYmxlLCBjYXRjaCBhbmQgcmV0dXJuIHRoZW1cblx0XHRcdFx0XHRpZiAoIGNvbnYgJiYgcy50aHJvd3MgKSB7XG5cdFx0XHRcdFx0XHRyZXNwb25zZSA9IGNvbnYoIHJlc3BvbnNlICk7XG5cdFx0XHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0XHRcdHRyeSB7XG5cdFx0XHRcdFx0XHRcdHJlc3BvbnNlID0gY29udiggcmVzcG9uc2UgKTtcblx0XHRcdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXHRcdFx0XHRcdFx0XHRyZXR1cm4ge1xuXHRcdFx0XHRcdFx0XHRcdHN0YXRlOiBcInBhcnNlcmVycm9yXCIsXG5cdFx0XHRcdFx0XHRcdFx0ZXJyb3I6IGNvbnYgPyBlIDogXCJObyBjb252ZXJzaW9uIGZyb20gXCIgKyBwcmV2ICsgXCIgdG8gXCIgKyBjdXJyZW50XG5cdFx0XHRcdFx0XHRcdH07XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fVxuXHR9XG5cblx0cmV0dXJuIHsgc3RhdGU6IFwic3VjY2Vzc1wiLCBkYXRhOiByZXNwb25zZSB9O1xufVxuXG5qUXVlcnkuZXh0ZW5kKCB7XG5cblx0Ly8gQ291bnRlciBmb3IgaG9sZGluZyB0aGUgbnVtYmVyIG9mIGFjdGl2ZSBxdWVyaWVzXG5cdGFjdGl2ZTogMCxcblxuXHQvLyBMYXN0LU1vZGlmaWVkIGhlYWRlciBjYWNoZSBmb3IgbmV4dCByZXF1ZXN0XG5cdGxhc3RNb2RpZmllZDoge30sXG5cdGV0YWc6IHt9LFxuXG5cdGFqYXhTZXR0aW5nczoge1xuXHRcdHVybDogbG9jYXRpb24uaHJlZixcblx0XHR0eXBlOiBcIkdFVFwiLFxuXHRcdGlzTG9jYWw6IHJsb2NhbFByb3RvY29sLnRlc3QoIGxvY2F0aW9uLnByb3RvY29sICksXG5cdFx0Z2xvYmFsOiB0cnVlLFxuXHRcdHByb2Nlc3NEYXRhOiB0cnVlLFxuXHRcdGFzeW5jOiB0cnVlLFxuXHRcdGNvbnRlbnRUeXBlOiBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZDsgY2hhcnNldD1VVEYtOFwiLFxuXG5cdFx0Lypcblx0XHR0aW1lb3V0OiAwLFxuXHRcdGRhdGE6IG51bGwsXG5cdFx0ZGF0YVR5cGU6IG51bGwsXG5cdFx0dXNlcm5hbWU6IG51bGwsXG5cdFx0cGFzc3dvcmQ6IG51bGwsXG5cdFx0Y2FjaGU6IG51bGwsXG5cdFx0dGhyb3dzOiBmYWxzZSxcblx0XHR0cmFkaXRpb25hbDogZmFsc2UsXG5cdFx0aGVhZGVyczoge30sXG5cdFx0Ki9cblxuXHRcdGFjY2VwdHM6IHtcblx0XHRcdFwiKlwiOiBhbGxUeXBlcyxcblx0XHRcdHRleHQ6IFwidGV4dC9wbGFpblwiLFxuXHRcdFx0aHRtbDogXCJ0ZXh0L2h0bWxcIixcblx0XHRcdHhtbDogXCJhcHBsaWNhdGlvbi94bWwsIHRleHQveG1sXCIsXG5cdFx0XHRqc29uOiBcImFwcGxpY2F0aW9uL2pzb24sIHRleHQvamF2YXNjcmlwdFwiXG5cdFx0fSxcblxuXHRcdGNvbnRlbnRzOiB7XG5cdFx0XHR4bWw6IC9cXGJ4bWxcXGIvLFxuXHRcdFx0aHRtbDogL1xcYmh0bWwvLFxuXHRcdFx0anNvbjogL1xcYmpzb25cXGIvXG5cdFx0fSxcblxuXHRcdHJlc3BvbnNlRmllbGRzOiB7XG5cdFx0XHR4bWw6IFwicmVzcG9uc2VYTUxcIixcblx0XHRcdHRleHQ6IFwicmVzcG9uc2VUZXh0XCIsXG5cdFx0XHRqc29uOiBcInJlc3BvbnNlSlNPTlwiXG5cdFx0fSxcblxuXHRcdC8vIERhdGEgY29udmVydGVyc1xuXHRcdC8vIEtleXMgc2VwYXJhdGUgc291cmNlIChvciBjYXRjaGFsbCBcIipcIikgYW5kIGRlc3RpbmF0aW9uIHR5cGVzIHdpdGggYSBzaW5nbGUgc3BhY2Vcblx0XHRjb252ZXJ0ZXJzOiB7XG5cblx0XHRcdC8vIENvbnZlcnQgYW55dGhpbmcgdG8gdGV4dFxuXHRcdFx0XCIqIHRleHRcIjogU3RyaW5nLFxuXG5cdFx0XHQvLyBUZXh0IHRvIGh0bWwgKHRydWUgPSBubyB0cmFuc2Zvcm1hdGlvbilcblx0XHRcdFwidGV4dCBodG1sXCI6IHRydWUsXG5cblx0XHRcdC8vIEV2YWx1YXRlIHRleHQgYXMgYSBqc29uIGV4cHJlc3Npb25cblx0XHRcdFwidGV4dCBqc29uXCI6IEpTT04ucGFyc2UsXG5cblx0XHRcdC8vIFBhcnNlIHRleHQgYXMgeG1sXG5cdFx0XHRcInRleHQgeG1sXCI6IGpRdWVyeS5wYXJzZVhNTFxuXHRcdH0sXG5cblx0XHQvLyBGb3Igb3B0aW9ucyB0aGF0IHNob3VsZG4ndCBiZSBkZWVwIGV4dGVuZGVkOlxuXHRcdC8vIHlvdSBjYW4gYWRkIHlvdXIgb3duIGN1c3RvbSBvcHRpb25zIGhlcmUgaWZcblx0XHQvLyBhbmQgd2hlbiB5b3UgY3JlYXRlIG9uZSB0aGF0IHNob3VsZG4ndCBiZVxuXHRcdC8vIGRlZXAgZXh0ZW5kZWQgKHNlZSBhamF4RXh0ZW5kKVxuXHRcdGZsYXRPcHRpb25zOiB7XG5cdFx0XHR1cmw6IHRydWUsXG5cdFx0XHRjb250ZXh0OiB0cnVlXG5cdFx0fVxuXHR9LFxuXG5cdC8vIENyZWF0ZXMgYSBmdWxsIGZsZWRnZWQgc2V0dGluZ3Mgb2JqZWN0IGludG8gdGFyZ2V0XG5cdC8vIHdpdGggYm90aCBhamF4U2V0dGluZ3MgYW5kIHNldHRpbmdzIGZpZWxkcy5cblx0Ly8gSWYgdGFyZ2V0IGlzIG9taXR0ZWQsIHdyaXRlcyBpbnRvIGFqYXhTZXR0aW5ncy5cblx0YWpheFNldHVwOiBmdW5jdGlvbiggdGFyZ2V0LCBzZXR0aW5ncyApIHtcblx0XHRyZXR1cm4gc2V0dGluZ3MgP1xuXG5cdFx0XHQvLyBCdWlsZGluZyBhIHNldHRpbmdzIG9iamVjdFxuXHRcdFx0YWpheEV4dGVuZCggYWpheEV4dGVuZCggdGFyZ2V0LCBqUXVlcnkuYWpheFNldHRpbmdzICksIHNldHRpbmdzICkgOlxuXG5cdFx0XHQvLyBFeHRlbmRpbmcgYWpheFNldHRpbmdzXG5cdFx0XHRhamF4RXh0ZW5kKCBqUXVlcnkuYWpheFNldHRpbmdzLCB0YXJnZXQgKTtcblx0fSxcblxuXHRhamF4UHJlZmlsdGVyOiBhZGRUb1ByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHByZWZpbHRlcnMgKSxcblx0YWpheFRyYW5zcG9ydDogYWRkVG9QcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCB0cmFuc3BvcnRzICksXG5cblx0Ly8gTWFpbiBtZXRob2Rcblx0YWpheDogZnVuY3Rpb24oIHVybCwgb3B0aW9ucyApIHtcblxuXHRcdC8vIElmIHVybCBpcyBhbiBvYmplY3QsIHNpbXVsYXRlIHByZS0xLjUgc2lnbmF0dXJlXG5cdFx0aWYgKCB0eXBlb2YgdXJsID09PSBcIm9iamVjdFwiICkge1xuXHRcdFx0b3B0aW9ucyA9IHVybDtcblx0XHRcdHVybCA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBGb3JjZSBvcHRpb25zIHRvIGJlIGFuIG9iamVjdFxuXHRcdG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuXG5cdFx0dmFyIHRyYW5zcG9ydCxcblxuXHRcdFx0Ly8gVVJMIHdpdGhvdXQgYW50aS1jYWNoZSBwYXJhbVxuXHRcdFx0Y2FjaGVVUkwsXG5cblx0XHRcdC8vIFJlc3BvbnNlIGhlYWRlcnNcblx0XHRcdHJlc3BvbnNlSGVhZGVyc1N0cmluZyxcblx0XHRcdHJlc3BvbnNlSGVhZGVycyxcblxuXHRcdFx0Ly8gdGltZW91dCBoYW5kbGVcblx0XHRcdHRpbWVvdXRUaW1lcixcblxuXHRcdFx0Ly8gVXJsIGNsZWFudXAgdmFyXG5cdFx0XHR1cmxBbmNob3IsXG5cblx0XHRcdC8vIFJlcXVlc3Qgc3RhdGUgKGJlY29tZXMgZmFsc2UgdXBvbiBzZW5kIGFuZCB0cnVlIHVwb24gY29tcGxldGlvbilcblx0XHRcdGNvbXBsZXRlZCxcblxuXHRcdFx0Ly8gVG8ga25vdyBpZiBnbG9iYWwgZXZlbnRzIGFyZSB0byBiZSBkaXNwYXRjaGVkXG5cdFx0XHRmaXJlR2xvYmFscyxcblxuXHRcdFx0Ly8gTG9vcCB2YXJpYWJsZVxuXHRcdFx0aSxcblxuXHRcdFx0Ly8gdW5jYWNoZWQgcGFydCBvZiB0aGUgdXJsXG5cdFx0XHR1bmNhY2hlZCxcblxuXHRcdFx0Ly8gQ3JlYXRlIHRoZSBmaW5hbCBvcHRpb25zIG9iamVjdFxuXHRcdFx0cyA9IGpRdWVyeS5hamF4U2V0dXAoIHt9LCBvcHRpb25zICksXG5cblx0XHRcdC8vIENhbGxiYWNrcyBjb250ZXh0XG5cdFx0XHRjYWxsYmFja0NvbnRleHQgPSBzLmNvbnRleHQgfHwgcyxcblxuXHRcdFx0Ly8gQ29udGV4dCBmb3IgZ2xvYmFsIGV2ZW50cyBpcyBjYWxsYmFja0NvbnRleHQgaWYgaXQgaXMgYSBET00gbm9kZSBvciBqUXVlcnkgY29sbGVjdGlvblxuXHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0ID0gcy5jb250ZXh0ICYmXG5cdFx0XHRcdCggY2FsbGJhY2tDb250ZXh0Lm5vZGVUeXBlIHx8IGNhbGxiYWNrQ29udGV4dC5qcXVlcnkgKSA/XG5cdFx0XHRcdFx0alF1ZXJ5KCBjYWxsYmFja0NvbnRleHQgKSA6XG5cdFx0XHRcdFx0alF1ZXJ5LmV2ZW50LFxuXG5cdFx0XHQvLyBEZWZlcnJlZHNcblx0XHRcdGRlZmVycmVkID0galF1ZXJ5LkRlZmVycmVkKCksXG5cdFx0XHRjb21wbGV0ZURlZmVycmVkID0galF1ZXJ5LkNhbGxiYWNrcyggXCJvbmNlIG1lbW9yeVwiICksXG5cblx0XHRcdC8vIFN0YXR1cy1kZXBlbmRlbnQgY2FsbGJhY2tzXG5cdFx0XHRzdGF0dXNDb2RlID0gcy5zdGF0dXNDb2RlIHx8IHt9LFxuXG5cdFx0XHQvLyBIZWFkZXJzICh0aGV5IGFyZSBzZW50IGFsbCBhdCBvbmNlKVxuXHRcdFx0cmVxdWVzdEhlYWRlcnMgPSB7fSxcblx0XHRcdHJlcXVlc3RIZWFkZXJzTmFtZXMgPSB7fSxcblxuXHRcdFx0Ly8gRGVmYXVsdCBhYm9ydCBtZXNzYWdlXG5cdFx0XHRzdHJBYm9ydCA9IFwiY2FuY2VsZWRcIixcblxuXHRcdFx0Ly8gRmFrZSB4aHJcblx0XHRcdGpxWEhSID0ge1xuXHRcdFx0XHRyZWFkeVN0YXRlOiAwLFxuXG5cdFx0XHRcdC8vIEJ1aWxkcyBoZWFkZXJzIGhhc2h0YWJsZSBpZiBuZWVkZWRcblx0XHRcdFx0Z2V0UmVzcG9uc2VIZWFkZXI6IGZ1bmN0aW9uKCBrZXkgKSB7XG5cdFx0XHRcdFx0dmFyIG1hdGNoO1xuXHRcdFx0XHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0XHRcdFx0aWYgKCAhcmVzcG9uc2VIZWFkZXJzICkge1xuXHRcdFx0XHRcdFx0XHRyZXNwb25zZUhlYWRlcnMgPSB7fTtcblx0XHRcdFx0XHRcdFx0d2hpbGUgKCAoIG1hdGNoID0gcmhlYWRlcnMuZXhlYyggcmVzcG9uc2VIZWFkZXJzU3RyaW5nICkgKSApIHtcblx0XHRcdFx0XHRcdFx0XHRyZXNwb25zZUhlYWRlcnNbIG1hdGNoWyAxIF0udG9Mb3dlckNhc2UoKSBdID0gbWF0Y2hbIDIgXTtcblx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0bWF0Y2ggPSByZXNwb25zZUhlYWRlcnNbIGtleS50b0xvd2VyQ2FzZSgpIF07XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiBtYXRjaCA9PSBudWxsID8gbnVsbCA6IG1hdGNoO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIFJhdyBzdHJpbmdcblx0XHRcdFx0Z2V0QWxsUmVzcG9uc2VIZWFkZXJzOiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRyZXR1cm4gY29tcGxldGVkID8gcmVzcG9uc2VIZWFkZXJzU3RyaW5nIDogbnVsbDtcblx0XHRcdFx0fSxcblxuXHRcdFx0XHQvLyBDYWNoZXMgdGhlIGhlYWRlclxuXHRcdFx0XHRzZXRSZXF1ZXN0SGVhZGVyOiBmdW5jdGlvbiggbmFtZSwgdmFsdWUgKSB7XG5cdFx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgPT0gbnVsbCApIHtcblx0XHRcdFx0XHRcdG5hbWUgPSByZXF1ZXN0SGVhZGVyc05hbWVzWyBuYW1lLnRvTG93ZXJDYXNlKCkgXSA9XG5cdFx0XHRcdFx0XHRcdHJlcXVlc3RIZWFkZXJzTmFtZXNbIG5hbWUudG9Mb3dlckNhc2UoKSBdIHx8IG5hbWU7XG5cdFx0XHRcdFx0XHRyZXF1ZXN0SGVhZGVyc1sgbmFtZSBdID0gdmFsdWU7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9LFxuXG5cdFx0XHRcdC8vIE92ZXJyaWRlcyByZXNwb25zZSBjb250ZW50LXR5cGUgaGVhZGVyXG5cdFx0XHRcdG92ZXJyaWRlTWltZVR5cGU6IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdFx0XHRcdGlmICggY29tcGxldGVkID09IG51bGwgKSB7XG5cdFx0XHRcdFx0XHRzLm1pbWVUeXBlID0gdHlwZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gU3RhdHVzLWRlcGVuZGVudCBjYWxsYmFja3Ncblx0XHRcdFx0c3RhdHVzQ29kZTogZnVuY3Rpb24oIG1hcCApIHtcblx0XHRcdFx0XHR2YXIgY29kZTtcblx0XHRcdFx0XHRpZiAoIG1hcCApIHtcblx0XHRcdFx0XHRcdGlmICggY29tcGxldGVkICkge1xuXG5cdFx0XHRcdFx0XHRcdC8vIEV4ZWN1dGUgdGhlIGFwcHJvcHJpYXRlIGNhbGxiYWNrc1xuXHRcdFx0XHRcdFx0XHRqcVhIUi5hbHdheXMoIG1hcFsganFYSFIuc3RhdHVzIF0gKTtcblx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gTGF6eS1hZGQgdGhlIG5ldyBjYWxsYmFja3MgaW4gYSB3YXkgdGhhdCBwcmVzZXJ2ZXMgb2xkIG9uZXNcblx0XHRcdFx0XHRcdFx0Zm9yICggY29kZSBpbiBtYXAgKSB7XG5cdFx0XHRcdFx0XHRcdFx0c3RhdHVzQ29kZVsgY29kZSBdID0gWyBzdGF0dXNDb2RlWyBjb2RlIF0sIG1hcFsgY29kZSBdIF07XG5cdFx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHRcdH1cblx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0cmV0dXJuIHRoaXM7XG5cdFx0XHRcdH0sXG5cblx0XHRcdFx0Ly8gQ2FuY2VsIHRoZSByZXF1ZXN0XG5cdFx0XHRcdGFib3J0OiBmdW5jdGlvbiggc3RhdHVzVGV4dCApIHtcblx0XHRcdFx0XHR2YXIgZmluYWxUZXh0ID0gc3RhdHVzVGV4dCB8fCBzdHJBYm9ydDtcblx0XHRcdFx0XHRpZiAoIHRyYW5zcG9ydCApIHtcblx0XHRcdFx0XHRcdHRyYW5zcG9ydC5hYm9ydCggZmluYWxUZXh0ICk7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdGRvbmUoIDAsIGZpbmFsVGV4dCApO1xuXHRcdFx0XHRcdHJldHVybiB0aGlzO1xuXHRcdFx0XHR9XG5cdFx0XHR9O1xuXG5cdFx0Ly8gQXR0YWNoIGRlZmVycmVkc1xuXHRcdGRlZmVycmVkLnByb21pc2UoIGpxWEhSICk7XG5cblx0XHQvLyBBZGQgcHJvdG9jb2wgaWYgbm90IHByb3ZpZGVkIChwcmVmaWx0ZXJzIG1pZ2h0IGV4cGVjdCBpdClcblx0XHQvLyBIYW5kbGUgZmFsc3kgdXJsIGluIHRoZSBzZXR0aW5ncyBvYmplY3QgKCMxMDA5MzogY29uc2lzdGVuY3kgd2l0aCBvbGQgc2lnbmF0dXJlKVxuXHRcdC8vIFdlIGFsc28gdXNlIHRoZSB1cmwgcGFyYW1ldGVyIGlmIGF2YWlsYWJsZVxuXHRcdHMudXJsID0gKCAoIHVybCB8fCBzLnVybCB8fCBsb2NhdGlvbi5ocmVmICkgKyBcIlwiIClcblx0XHRcdC5yZXBsYWNlKCBycHJvdG9jb2wsIGxvY2F0aW9uLnByb3RvY29sICsgXCIvL1wiICk7XG5cblx0XHQvLyBBbGlhcyBtZXRob2Qgb3B0aW9uIHRvIHR5cGUgYXMgcGVyIHRpY2tldCAjMTIwMDRcblx0XHRzLnR5cGUgPSBvcHRpb25zLm1ldGhvZCB8fCBvcHRpb25zLnR5cGUgfHwgcy5tZXRob2QgfHwgcy50eXBlO1xuXG5cdFx0Ly8gRXh0cmFjdCBkYXRhVHlwZXMgbGlzdFxuXHRcdHMuZGF0YVR5cGVzID0gKCBzLmRhdGFUeXBlIHx8IFwiKlwiICkudG9Mb3dlckNhc2UoKS5tYXRjaCggcm5vdGh0bWx3aGl0ZSApIHx8IFsgXCJcIiBdO1xuXG5cdFx0Ly8gQSBjcm9zcy1kb21haW4gcmVxdWVzdCBpcyBpbiBvcmRlciB3aGVuIHRoZSBvcmlnaW4gZG9lc24ndCBtYXRjaCB0aGUgY3VycmVudCBvcmlnaW4uXG5cdFx0aWYgKCBzLmNyb3NzRG9tYWluID09IG51bGwgKSB7XG5cdFx0XHR1cmxBbmNob3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCBcImFcIiApO1xuXG5cdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTggLSAxMSwgRWRnZSAxMiAtIDE1XG5cdFx0XHQvLyBJRSB0aHJvd3MgZXhjZXB0aW9uIG9uIGFjY2Vzc2luZyB0aGUgaHJlZiBwcm9wZXJ0eSBpZiB1cmwgaXMgbWFsZm9ybWVkLFxuXHRcdFx0Ly8gZS5nLiBodHRwOi8vZXhhbXBsZS5jb206ODB4L1xuXHRcdFx0dHJ5IHtcblx0XHRcdFx0dXJsQW5jaG9yLmhyZWYgPSBzLnVybDtcblxuXHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTggLSAxMSBvbmx5XG5cdFx0XHRcdC8vIEFuY2hvcidzIGhvc3QgcHJvcGVydHkgaXNuJ3QgY29ycmVjdGx5IHNldCB3aGVuIHMudXJsIGlzIHJlbGF0aXZlXG5cdFx0XHRcdHVybEFuY2hvci5ocmVmID0gdXJsQW5jaG9yLmhyZWY7XG5cdFx0XHRcdHMuY3Jvc3NEb21haW4gPSBvcmlnaW5BbmNob3IucHJvdG9jb2wgKyBcIi8vXCIgKyBvcmlnaW5BbmNob3IuaG9zdCAhPT1cblx0XHRcdFx0XHR1cmxBbmNob3IucHJvdG9jb2wgKyBcIi8vXCIgKyB1cmxBbmNob3IuaG9zdDtcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdC8vIElmIHRoZXJlIGlzIGFuIGVycm9yIHBhcnNpbmcgdGhlIFVSTCwgYXNzdW1lIGl0IGlzIGNyb3NzRG9tYWluLFxuXHRcdFx0XHQvLyBpdCBjYW4gYmUgcmVqZWN0ZWQgYnkgdGhlIHRyYW5zcG9ydCBpZiBpdCBpcyBpbnZhbGlkXG5cdFx0XHRcdHMuY3Jvc3NEb21haW4gPSB0cnVlO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENvbnZlcnQgZGF0YSBpZiBub3QgYWxyZWFkeSBhIHN0cmluZ1xuXHRcdGlmICggcy5kYXRhICYmIHMucHJvY2Vzc0RhdGEgJiYgdHlwZW9mIHMuZGF0YSAhPT0gXCJzdHJpbmdcIiApIHtcblx0XHRcdHMuZGF0YSA9IGpRdWVyeS5wYXJhbSggcy5kYXRhLCBzLnRyYWRpdGlvbmFsICk7XG5cdFx0fVxuXG5cdFx0Ly8gQXBwbHkgcHJlZmlsdGVyc1xuXHRcdGluc3BlY3RQcmVmaWx0ZXJzT3JUcmFuc3BvcnRzKCBwcmVmaWx0ZXJzLCBzLCBvcHRpb25zLCBqcVhIUiApO1xuXG5cdFx0Ly8gSWYgcmVxdWVzdCB3YXMgYWJvcnRlZCBpbnNpZGUgYSBwcmVmaWx0ZXIsIHN0b3AgdGhlcmVcblx0XHRpZiAoIGNvbXBsZXRlZCApIHtcblx0XHRcdHJldHVybiBqcVhIUjtcblx0XHR9XG5cblx0XHQvLyBXZSBjYW4gZmlyZSBnbG9iYWwgZXZlbnRzIGFzIG9mIG5vdyBpZiBhc2tlZCB0b1xuXHRcdC8vIERvbid0IGZpcmUgZXZlbnRzIGlmIGpRdWVyeS5ldmVudCBpcyB1bmRlZmluZWQgaW4gYW4gQU1ELXVzYWdlIHNjZW5hcmlvICgjMTUxMTgpXG5cdFx0ZmlyZUdsb2JhbHMgPSBqUXVlcnkuZXZlbnQgJiYgcy5nbG9iYWw7XG5cblx0XHQvLyBXYXRjaCBmb3IgYSBuZXcgc2V0IG9mIHJlcXVlc3RzXG5cdFx0aWYgKCBmaXJlR2xvYmFscyAmJiBqUXVlcnkuYWN0aXZlKysgPT09IDAgKSB7XG5cdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggXCJhamF4U3RhcnRcIiApO1xuXHRcdH1cblxuXHRcdC8vIFVwcGVyY2FzZSB0aGUgdHlwZVxuXHRcdHMudHlwZSA9IHMudHlwZS50b1VwcGVyQ2FzZSgpO1xuXG5cdFx0Ly8gRGV0ZXJtaW5lIGlmIHJlcXVlc3QgaGFzIGNvbnRlbnRcblx0XHRzLmhhc0NvbnRlbnQgPSAhcm5vQ29udGVudC50ZXN0KCBzLnR5cGUgKTtcblxuXHRcdC8vIFNhdmUgdGhlIFVSTCBpbiBjYXNlIHdlJ3JlIHRveWluZyB3aXRoIHRoZSBJZi1Nb2RpZmllZC1TaW5jZVxuXHRcdC8vIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciBsYXRlciBvblxuXHRcdC8vIFJlbW92ZSBoYXNoIHRvIHNpbXBsaWZ5IHVybCBtYW5pcHVsYXRpb25cblx0XHRjYWNoZVVSTCA9IHMudXJsLnJlcGxhY2UoIHJoYXNoLCBcIlwiICk7XG5cblx0XHQvLyBNb3JlIG9wdGlvbnMgaGFuZGxpbmcgZm9yIHJlcXVlc3RzIHdpdGggbm8gY29udGVudFxuXHRcdGlmICggIXMuaGFzQ29udGVudCApIHtcblxuXHRcdFx0Ly8gUmVtZW1iZXIgdGhlIGhhc2ggc28gd2UgY2FuIHB1dCBpdCBiYWNrXG5cdFx0XHR1bmNhY2hlZCA9IHMudXJsLnNsaWNlKCBjYWNoZVVSTC5sZW5ndGggKTtcblxuXHRcdFx0Ly8gSWYgZGF0YSBpcyBhdmFpbGFibGUgYW5kIHNob3VsZCBiZSBwcm9jZXNzZWQsIGFwcGVuZCBkYXRhIHRvIHVybFxuXHRcdFx0aWYgKCBzLmRhdGEgJiYgKCBzLnByb2Nlc3NEYXRhIHx8IHR5cGVvZiBzLmRhdGEgPT09IFwic3RyaW5nXCIgKSApIHtcblx0XHRcdFx0Y2FjaGVVUkwgKz0gKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/IFwiJlwiIDogXCI/XCIgKSArIHMuZGF0YTtcblxuXHRcdFx0XHQvLyAjOTY4MjogcmVtb3ZlIGRhdGEgc28gdGhhdCBpdCdzIG5vdCB1c2VkIGluIGFuIGV2ZW50dWFsIHJldHJ5XG5cdFx0XHRcdGRlbGV0ZSBzLmRhdGE7XG5cdFx0XHR9XG5cblx0XHRcdC8vIEFkZCBvciB1cGRhdGUgYW50aS1jYWNoZSBwYXJhbSBpZiBuZWVkZWRcblx0XHRcdGlmICggcy5jYWNoZSA9PT0gZmFsc2UgKSB7XG5cdFx0XHRcdGNhY2hlVVJMID0gY2FjaGVVUkwucmVwbGFjZSggcmFudGlDYWNoZSwgXCIkMVwiICk7XG5cdFx0XHRcdHVuY2FjaGVkID0gKCBycXVlcnkudGVzdCggY2FjaGVVUkwgKSA/IFwiJlwiIDogXCI/XCIgKSArIFwiXz1cIiArICggbm9uY2UrKyApICsgdW5jYWNoZWQ7XG5cdFx0XHR9XG5cblx0XHRcdC8vIFB1dCBoYXNoIGFuZCBhbnRpLWNhY2hlIG9uIHRoZSBVUkwgdGhhdCB3aWxsIGJlIHJlcXVlc3RlZCAoZ2gtMTczMilcblx0XHRcdHMudXJsID0gY2FjaGVVUkwgKyB1bmNhY2hlZDtcblxuXHRcdC8vIENoYW5nZSAnJTIwJyB0byAnKycgaWYgdGhpcyBpcyBlbmNvZGVkIGZvcm0gYm9keSBjb250ZW50IChnaC0yNjU4KVxuXHRcdH0gZWxzZSBpZiAoIHMuZGF0YSAmJiBzLnByb2Nlc3NEYXRhICYmXG5cdFx0XHQoIHMuY29udGVudFR5cGUgfHwgXCJcIiApLmluZGV4T2YoIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIgKSA9PT0gMCApIHtcblx0XHRcdHMuZGF0YSA9IHMuZGF0YS5yZXBsYWNlKCByMjAsIFwiK1wiICk7XG5cdFx0fVxuXG5cdFx0Ly8gU2V0IHRoZSBJZi1Nb2RpZmllZC1TaW5jZSBhbmQvb3IgSWYtTm9uZS1NYXRjaCBoZWFkZXIsIGlmIGluIGlmTW9kaWZpZWQgbW9kZS5cblx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdGlmICggalF1ZXJ5Lmxhc3RNb2RpZmllZFsgY2FjaGVVUkwgXSApIHtcblx0XHRcdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlciggXCJJZi1Nb2RpZmllZC1TaW5jZVwiLCBqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdICk7XG5cdFx0XHR9XG5cdFx0XHRpZiAoIGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdICkge1xuXHRcdFx0XHRqcVhIUi5zZXRSZXF1ZXN0SGVhZGVyKCBcIklmLU5vbmUtTWF0Y2hcIiwgalF1ZXJ5LmV0YWdbIGNhY2hlVVJMIF0gKTtcblx0XHRcdH1cblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIGNvcnJlY3QgaGVhZGVyLCBpZiBkYXRhIGlzIGJlaW5nIHNlbnRcblx0XHRpZiAoIHMuZGF0YSAmJiBzLmhhc0NvbnRlbnQgJiYgcy5jb250ZW50VHlwZSAhPT0gZmFsc2UgfHwgb3B0aW9ucy5jb250ZW50VHlwZSApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIFwiQ29udGVudC1UeXBlXCIsIHMuY29udGVudFR5cGUgKTtcblx0XHR9XG5cblx0XHQvLyBTZXQgdGhlIEFjY2VwdHMgaGVhZGVyIGZvciB0aGUgc2VydmVyLCBkZXBlbmRpbmcgb24gdGhlIGRhdGFUeXBlXG5cdFx0anFYSFIuc2V0UmVxdWVzdEhlYWRlcihcblx0XHRcdFwiQWNjZXB0XCIsXG5cdFx0XHRzLmRhdGFUeXBlc1sgMCBdICYmIHMuYWNjZXB0c1sgcy5kYXRhVHlwZXNbIDAgXSBdID9cblx0XHRcdFx0cy5hY2NlcHRzWyBzLmRhdGFUeXBlc1sgMCBdIF0gK1xuXHRcdFx0XHRcdCggcy5kYXRhVHlwZXNbIDAgXSAhPT0gXCIqXCIgPyBcIiwgXCIgKyBhbGxUeXBlcyArIFwiOyBxPTAuMDFcIiA6IFwiXCIgKSA6XG5cdFx0XHRcdHMuYWNjZXB0c1sgXCIqXCIgXVxuXHRcdCk7XG5cblx0XHQvLyBDaGVjayBmb3IgaGVhZGVycyBvcHRpb25cblx0XHRmb3IgKCBpIGluIHMuaGVhZGVycyApIHtcblx0XHRcdGpxWEhSLnNldFJlcXVlc3RIZWFkZXIoIGksIHMuaGVhZGVyc1sgaSBdICk7XG5cdFx0fVxuXG5cdFx0Ly8gQWxsb3cgY3VzdG9tIGhlYWRlcnMvbWltZXR5cGVzIGFuZCBlYXJseSBhYm9ydFxuXHRcdGlmICggcy5iZWZvcmVTZW5kICYmXG5cdFx0XHQoIHMuYmVmb3JlU2VuZC5jYWxsKCBjYWxsYmFja0NvbnRleHQsIGpxWEhSLCBzICkgPT09IGZhbHNlIHx8IGNvbXBsZXRlZCApICkge1xuXG5cdFx0XHQvLyBBYm9ydCBpZiBub3QgZG9uZSBhbHJlYWR5IGFuZCByZXR1cm5cblx0XHRcdHJldHVybiBqcVhIUi5hYm9ydCgpO1xuXHRcdH1cblxuXHRcdC8vIEFib3J0aW5nIGlzIG5vIGxvbmdlciBhIGNhbmNlbGxhdGlvblxuXHRcdHN0ckFib3J0ID0gXCJhYm9ydFwiO1xuXG5cdFx0Ly8gSW5zdGFsbCBjYWxsYmFja3Mgb24gZGVmZXJyZWRzXG5cdFx0Y29tcGxldGVEZWZlcnJlZC5hZGQoIHMuY29tcGxldGUgKTtcblx0XHRqcVhIUi5kb25lKCBzLnN1Y2Nlc3MgKTtcblx0XHRqcVhIUi5mYWlsKCBzLmVycm9yICk7XG5cblx0XHQvLyBHZXQgdHJhbnNwb3J0XG5cdFx0dHJhbnNwb3J0ID0gaW5zcGVjdFByZWZpbHRlcnNPclRyYW5zcG9ydHMoIHRyYW5zcG9ydHMsIHMsIG9wdGlvbnMsIGpxWEhSICk7XG5cblx0XHQvLyBJZiBubyB0cmFuc3BvcnQsIHdlIGF1dG8tYWJvcnRcblx0XHRpZiAoICF0cmFuc3BvcnQgKSB7XG5cdFx0XHRkb25lKCAtMSwgXCJObyBUcmFuc3BvcnRcIiApO1xuXHRcdH0gZWxzZSB7XG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gMTtcblxuXHRcdFx0Ly8gU2VuZCBnbG9iYWwgZXZlbnRcblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhTZW5kXCIsIFsganFYSFIsIHMgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBJZiByZXF1ZXN0IHdhcyBhYm9ydGVkIGluc2lkZSBhamF4U2VuZCwgc3RvcCB0aGVyZVxuXHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdHJldHVybiBqcVhIUjtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGltZW91dFxuXHRcdFx0aWYgKCBzLmFzeW5jICYmIHMudGltZW91dCA+IDAgKSB7XG5cdFx0XHRcdHRpbWVvdXRUaW1lciA9IHdpbmRvdy5zZXRUaW1lb3V0KCBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRqcVhIUi5hYm9ydCggXCJ0aW1lb3V0XCIgKTtcblx0XHRcdFx0fSwgcy50aW1lb3V0ICk7XG5cdFx0XHR9XG5cblx0XHRcdHRyeSB7XG5cdFx0XHRcdGNvbXBsZXRlZCA9IGZhbHNlO1xuXHRcdFx0XHR0cmFuc3BvcnQuc2VuZCggcmVxdWVzdEhlYWRlcnMsIGRvbmUgKTtcblx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdC8vIFJldGhyb3cgcG9zdC1jb21wbGV0aW9uIGV4Y2VwdGlvbnNcblx0XHRcdFx0aWYgKCBjb21wbGV0ZWQgKSB7XG5cdFx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFByb3BhZ2F0ZSBvdGhlcnMgYXMgcmVzdWx0c1xuXHRcdFx0XHRkb25lKCAtMSwgZSApO1xuXHRcdFx0fVxuXHRcdH1cblxuXHRcdC8vIENhbGxiYWNrIGZvciB3aGVuIGV2ZXJ5dGhpbmcgaXMgZG9uZVxuXHRcdGZ1bmN0aW9uIGRvbmUoIHN0YXR1cywgbmF0aXZlU3RhdHVzVGV4dCwgcmVzcG9uc2VzLCBoZWFkZXJzICkge1xuXHRcdFx0dmFyIGlzU3VjY2Vzcywgc3VjY2VzcywgZXJyb3IsIHJlc3BvbnNlLCBtb2RpZmllZCxcblx0XHRcdFx0c3RhdHVzVGV4dCA9IG5hdGl2ZVN0YXR1c1RleHQ7XG5cblx0XHRcdC8vIElnbm9yZSByZXBlYXQgaW52b2NhdGlvbnNcblx0XHRcdGlmICggY29tcGxldGVkICkge1xuXHRcdFx0XHRyZXR1cm47XG5cdFx0XHR9XG5cblx0XHRcdGNvbXBsZXRlZCA9IHRydWU7XG5cblx0XHRcdC8vIENsZWFyIHRpbWVvdXQgaWYgaXQgZXhpc3RzXG5cdFx0XHRpZiAoIHRpbWVvdXRUaW1lciApIHtcblx0XHRcdFx0d2luZG93LmNsZWFyVGltZW91dCggdGltZW91dFRpbWVyICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIERlcmVmZXJlbmNlIHRyYW5zcG9ydCBmb3IgZWFybHkgZ2FyYmFnZSBjb2xsZWN0aW9uXG5cdFx0XHQvLyAobm8gbWF0dGVyIGhvdyBsb25nIHRoZSBqcVhIUiBvYmplY3Qgd2lsbCBiZSB1c2VkKVxuXHRcdFx0dHJhbnNwb3J0ID0gdW5kZWZpbmVkO1xuXG5cdFx0XHQvLyBDYWNoZSByZXNwb25zZSBoZWFkZXJzXG5cdFx0XHRyZXNwb25zZUhlYWRlcnNTdHJpbmcgPSBoZWFkZXJzIHx8IFwiXCI7XG5cblx0XHRcdC8vIFNldCByZWFkeVN0YXRlXG5cdFx0XHRqcVhIUi5yZWFkeVN0YXRlID0gc3RhdHVzID4gMCA/IDQgOiAwO1xuXG5cdFx0XHQvLyBEZXRlcm1pbmUgaWYgc3VjY2Vzc2Z1bFxuXHRcdFx0aXNTdWNjZXNzID0gc3RhdHVzID49IDIwMCAmJiBzdGF0dXMgPCAzMDAgfHwgc3RhdHVzID09PSAzMDQ7XG5cblx0XHRcdC8vIEdldCByZXNwb25zZSBkYXRhXG5cdFx0XHRpZiAoIHJlc3BvbnNlcyApIHtcblx0XHRcdFx0cmVzcG9uc2UgPSBhamF4SGFuZGxlUmVzcG9uc2VzKCBzLCBqcVhIUiwgcmVzcG9uc2VzICk7XG5cdFx0XHR9XG5cblx0XHRcdC8vIENvbnZlcnQgbm8gbWF0dGVyIHdoYXQgKHRoYXQgd2F5IHJlc3BvbnNlWFhYIGZpZWxkcyBhcmUgYWx3YXlzIHNldClcblx0XHRcdHJlc3BvbnNlID0gYWpheENvbnZlcnQoIHMsIHJlc3BvbnNlLCBqcVhIUiwgaXNTdWNjZXNzICk7XG5cblx0XHRcdC8vIElmIHN1Y2Nlc3NmdWwsIGhhbmRsZSB0eXBlIGNoYWluaW5nXG5cdFx0XHRpZiAoIGlzU3VjY2VzcyApIHtcblxuXHRcdFx0XHQvLyBTZXQgdGhlIElmLU1vZGlmaWVkLVNpbmNlIGFuZC9vciBJZi1Ob25lLU1hdGNoIGhlYWRlciwgaWYgaW4gaWZNb2RpZmllZCBtb2RlLlxuXHRcdFx0XHRpZiAoIHMuaWZNb2RpZmllZCApIHtcblx0XHRcdFx0XHRtb2RpZmllZCA9IGpxWEhSLmdldFJlc3BvbnNlSGVhZGVyKCBcIkxhc3QtTW9kaWZpZWRcIiApO1xuXHRcdFx0XHRcdGlmICggbW9kaWZpZWQgKSB7XG5cdFx0XHRcdFx0XHRqUXVlcnkubGFzdE1vZGlmaWVkWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHRcdG1vZGlmaWVkID0ganFYSFIuZ2V0UmVzcG9uc2VIZWFkZXIoIFwiZXRhZ1wiICk7XG5cdFx0XHRcdFx0aWYgKCBtb2RpZmllZCApIHtcblx0XHRcdFx0XHRcdGpRdWVyeS5ldGFnWyBjYWNoZVVSTCBdID0gbW9kaWZpZWQ7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gaWYgbm8gY29udGVudFxuXHRcdFx0XHRpZiAoIHN0YXR1cyA9PT0gMjA0IHx8IHMudHlwZSA9PT0gXCJIRUFEXCIgKSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IFwibm9jb250ZW50XCI7XG5cblx0XHRcdFx0Ly8gaWYgbm90IG1vZGlmaWVkXG5cdFx0XHRcdH0gZWxzZSBpZiAoIHN0YXR1cyA9PT0gMzA0ICkge1xuXHRcdFx0XHRcdHN0YXR1c1RleHQgPSBcIm5vdG1vZGlmaWVkXCI7XG5cblx0XHRcdFx0Ly8gSWYgd2UgaGF2ZSBkYXRhLCBsZXQncyBjb252ZXJ0IGl0XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0c3RhdHVzVGV4dCA9IHJlc3BvbnNlLnN0YXRlO1xuXHRcdFx0XHRcdHN1Y2Nlc3MgPSByZXNwb25zZS5kYXRhO1xuXHRcdFx0XHRcdGVycm9yID0gcmVzcG9uc2UuZXJyb3I7XG5cdFx0XHRcdFx0aXNTdWNjZXNzID0gIWVycm9yO1xuXHRcdFx0XHR9XG5cdFx0XHR9IGVsc2Uge1xuXG5cdFx0XHRcdC8vIEV4dHJhY3QgZXJyb3IgZnJvbSBzdGF0dXNUZXh0IGFuZCBub3JtYWxpemUgZm9yIG5vbi1hYm9ydHNcblx0XHRcdFx0ZXJyb3IgPSBzdGF0dXNUZXh0O1xuXHRcdFx0XHRpZiAoIHN0YXR1cyB8fCAhc3RhdHVzVGV4dCApIHtcblx0XHRcdFx0XHRzdGF0dXNUZXh0ID0gXCJlcnJvclwiO1xuXHRcdFx0XHRcdGlmICggc3RhdHVzIDwgMCApIHtcblx0XHRcdFx0XHRcdHN0YXR1cyA9IDA7XG5cdFx0XHRcdFx0fVxuXHRcdFx0XHR9XG5cdFx0XHR9XG5cblx0XHRcdC8vIFNldCBkYXRhIGZvciB0aGUgZmFrZSB4aHIgb2JqZWN0XG5cdFx0XHRqcVhIUi5zdGF0dXMgPSBzdGF0dXM7XG5cdFx0XHRqcVhIUi5zdGF0dXNUZXh0ID0gKCBuYXRpdmVTdGF0dXNUZXh0IHx8IHN0YXR1c1RleHQgKSArIFwiXCI7XG5cblx0XHRcdC8vIFN1Y2Nlc3MvRXJyb3Jcblx0XHRcdGlmICggaXNTdWNjZXNzICkge1xuXHRcdFx0XHRkZWZlcnJlZC5yZXNvbHZlV2l0aCggY2FsbGJhY2tDb250ZXh0LCBbIHN1Y2Nlc3MsIHN0YXR1c1RleHQsIGpxWEhSIF0gKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGRlZmVycmVkLnJlamVjdFdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCwgZXJyb3IgXSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTdGF0dXMtZGVwZW5kZW50IGNhbGxiYWNrc1xuXHRcdFx0anFYSFIuc3RhdHVzQ29kZSggc3RhdHVzQ29kZSApO1xuXHRcdFx0c3RhdHVzQ29kZSA9IHVuZGVmaW5lZDtcblxuXHRcdFx0aWYgKCBmaXJlR2xvYmFscyApIHtcblx0XHRcdFx0Z2xvYmFsRXZlbnRDb250ZXh0LnRyaWdnZXIoIGlzU3VjY2VzcyA/IFwiYWpheFN1Y2Nlc3NcIiA6IFwiYWpheEVycm9yXCIsXG5cdFx0XHRcdFx0WyBqcVhIUiwgcywgaXNTdWNjZXNzID8gc3VjY2VzcyA6IGVycm9yIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gQ29tcGxldGVcblx0XHRcdGNvbXBsZXRlRGVmZXJyZWQuZmlyZVdpdGgoIGNhbGxiYWNrQ29udGV4dCwgWyBqcVhIUiwgc3RhdHVzVGV4dCBdICk7XG5cblx0XHRcdGlmICggZmlyZUdsb2JhbHMgKSB7XG5cdFx0XHRcdGdsb2JhbEV2ZW50Q29udGV4dC50cmlnZ2VyKCBcImFqYXhDb21wbGV0ZVwiLCBbIGpxWEhSLCBzIF0gKTtcblxuXHRcdFx0XHQvLyBIYW5kbGUgdGhlIGdsb2JhbCBBSkFYIGNvdW50ZXJcblx0XHRcdFx0aWYgKCAhKCAtLWpRdWVyeS5hY3RpdmUgKSApIHtcblx0XHRcdFx0XHRqUXVlcnkuZXZlbnQudHJpZ2dlciggXCJhamF4U3RvcFwiICk7XG5cdFx0XHRcdH1cblx0XHRcdH1cblx0XHR9XG5cblx0XHRyZXR1cm4ganFYSFI7XG5cdH0sXG5cblx0Z2V0SlNPTjogZnVuY3Rpb24oIHVybCwgZGF0YSwgY2FsbGJhY2sgKSB7XG5cdFx0cmV0dXJuIGpRdWVyeS5nZXQoIHVybCwgZGF0YSwgY2FsbGJhY2ssIFwianNvblwiICk7XG5cdH0sXG5cblx0Z2V0U2NyaXB0OiBmdW5jdGlvbiggdXJsLCBjYWxsYmFjayApIHtcblx0XHRyZXR1cm4galF1ZXJ5LmdldCggdXJsLCB1bmRlZmluZWQsIGNhbGxiYWNrLCBcInNjcmlwdFwiICk7XG5cdH1cbn0gKTtcblxualF1ZXJ5LmVhY2goIFsgXCJnZXRcIiwgXCJwb3N0XCIgXSwgZnVuY3Rpb24oIGksIG1ldGhvZCApIHtcblx0alF1ZXJ5WyBtZXRob2QgXSA9IGZ1bmN0aW9uKCB1cmwsIGRhdGEsIGNhbGxiYWNrLCB0eXBlICkge1xuXG5cdFx0Ly8gU2hpZnQgYXJndW1lbnRzIGlmIGRhdGEgYXJndW1lbnQgd2FzIG9taXR0ZWRcblx0XHRpZiAoIGlzRnVuY3Rpb24oIGRhdGEgKSApIHtcblx0XHRcdHR5cGUgPSB0eXBlIHx8IGNhbGxiYWNrO1xuXHRcdFx0Y2FsbGJhY2sgPSBkYXRhO1xuXHRcdFx0ZGF0YSA9IHVuZGVmaW5lZDtcblx0XHR9XG5cblx0XHQvLyBUaGUgdXJsIGNhbiBiZSBhbiBvcHRpb25zIG9iamVjdCAod2hpY2ggdGhlbiBtdXN0IGhhdmUgLnVybClcblx0XHRyZXR1cm4galF1ZXJ5LmFqYXgoIGpRdWVyeS5leHRlbmQoIHtcblx0XHRcdHVybDogdXJsLFxuXHRcdFx0dHlwZTogbWV0aG9kLFxuXHRcdFx0ZGF0YVR5cGU6IHR5cGUsXG5cdFx0XHRkYXRhOiBkYXRhLFxuXHRcdFx0c3VjY2VzczogY2FsbGJhY2tcblx0XHR9LCBqUXVlcnkuaXNQbGFpbk9iamVjdCggdXJsICkgJiYgdXJsICkgKTtcblx0fTtcbn0gKTtcblxuXG5qUXVlcnkuX2V2YWxVcmwgPSBmdW5jdGlvbiggdXJsICkge1xuXHRyZXR1cm4galF1ZXJ5LmFqYXgoIHtcblx0XHR1cmw6IHVybCxcblxuXHRcdC8vIE1ha2UgdGhpcyBleHBsaWNpdCwgc2luY2UgdXNlciBjYW4gb3ZlcnJpZGUgdGhpcyB0aHJvdWdoIGFqYXhTZXR1cCAoIzExMjY0KVxuXHRcdHR5cGU6IFwiR0VUXCIsXG5cdFx0ZGF0YVR5cGU6IFwic2NyaXB0XCIsXG5cdFx0Y2FjaGU6IHRydWUsXG5cdFx0YXN5bmM6IGZhbHNlLFxuXHRcdGdsb2JhbDogZmFsc2UsXG5cdFx0XCJ0aHJvd3NcIjogdHJ1ZVxuXHR9ICk7XG59O1xuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0d3JhcEFsbDogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0dmFyIHdyYXA7XG5cblx0XHRpZiAoIHRoaXNbIDAgXSApIHtcblx0XHRcdGlmICggaXNGdW5jdGlvbiggaHRtbCApICkge1xuXHRcdFx0XHRodG1sID0gaHRtbC5jYWxsKCB0aGlzWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0Ly8gVGhlIGVsZW1lbnRzIHRvIHdyYXAgdGhlIHRhcmdldCBhcm91bmRcblx0XHRcdHdyYXAgPSBqUXVlcnkoIGh0bWwsIHRoaXNbIDAgXS5vd25lckRvY3VtZW50ICkuZXEoIDAgKS5jbG9uZSggdHJ1ZSApO1xuXG5cdFx0XHRpZiAoIHRoaXNbIDAgXS5wYXJlbnROb2RlICkge1xuXHRcdFx0XHR3cmFwLmluc2VydEJlZm9yZSggdGhpc1sgMCBdICk7XG5cdFx0XHR9XG5cblx0XHRcdHdyYXAubWFwKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0dmFyIGVsZW0gPSB0aGlzO1xuXG5cdFx0XHRcdHdoaWxlICggZWxlbS5maXJzdEVsZW1lbnRDaGlsZCApIHtcblx0XHRcdFx0XHRlbGVtID0gZWxlbS5maXJzdEVsZW1lbnRDaGlsZDtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdHJldHVybiBlbGVtO1xuXHRcdFx0fSApLmFwcGVuZCggdGhpcyApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzO1xuXHR9LFxuXG5cdHdyYXBJbm5lcjogZnVuY3Rpb24oIGh0bWwgKSB7XG5cdFx0aWYgKCBpc0Z1bmN0aW9uKCBodG1sICkgKSB7XG5cdFx0XHRyZXR1cm4gdGhpcy5lYWNoKCBmdW5jdGlvbiggaSApIHtcblx0XHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcElubmVyKCBodG1sLmNhbGwoIHRoaXMsIGkgKSApO1xuXHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0dmFyIHNlbGYgPSBqUXVlcnkoIHRoaXMgKSxcblx0XHRcdFx0Y29udGVudHMgPSBzZWxmLmNvbnRlbnRzKCk7XG5cblx0XHRcdGlmICggY29udGVudHMubGVuZ3RoICkge1xuXHRcdFx0XHRjb250ZW50cy53cmFwQWxsKCBodG1sICk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdHNlbGYuYXBwZW5kKCBodG1sICk7XG5cdFx0XHR9XG5cdFx0fSApO1xuXHR9LFxuXG5cdHdyYXA6IGZ1bmN0aW9uKCBodG1sICkge1xuXHRcdHZhciBodG1sSXNGdW5jdGlvbiA9IGlzRnVuY3Rpb24oIGh0bWwgKTtcblxuXHRcdHJldHVybiB0aGlzLmVhY2goIGZ1bmN0aW9uKCBpICkge1xuXHRcdFx0alF1ZXJ5KCB0aGlzICkud3JhcEFsbCggaHRtbElzRnVuY3Rpb24gPyBodG1sLmNhbGwoIHRoaXMsIGkgKSA6IGh0bWwgKTtcblx0XHR9ICk7XG5cdH0sXG5cblx0dW53cmFwOiBmdW5jdGlvbiggc2VsZWN0b3IgKSB7XG5cdFx0dGhpcy5wYXJlbnQoIHNlbGVjdG9yICkubm90KCBcImJvZHlcIiApLmVhY2goIGZ1bmN0aW9uKCkge1xuXHRcdFx0alF1ZXJ5KCB0aGlzICkucmVwbGFjZVdpdGgoIHRoaXMuY2hpbGROb2RlcyApO1xuXHRcdH0gKTtcblx0XHRyZXR1cm4gdGhpcztcblx0fVxufSApO1xuXG5cbmpRdWVyeS5leHByLnBzZXVkb3MuaGlkZGVuID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiAhalF1ZXJ5LmV4cHIucHNldWRvcy52aXNpYmxlKCBlbGVtICk7XG59O1xualF1ZXJ5LmV4cHIucHNldWRvcy52aXNpYmxlID0gZnVuY3Rpb24oIGVsZW0gKSB7XG5cdHJldHVybiAhISggZWxlbS5vZmZzZXRXaWR0aCB8fCBlbGVtLm9mZnNldEhlaWdodCB8fCBlbGVtLmdldENsaWVudFJlY3RzKCkubGVuZ3RoICk7XG59O1xuXG5cblxuXG5qUXVlcnkuYWpheFNldHRpbmdzLnhociA9IGZ1bmN0aW9uKCkge1xuXHR0cnkge1xuXHRcdHJldHVybiBuZXcgd2luZG93LlhNTEh0dHBSZXF1ZXN0KCk7XG5cdH0gY2F0Y2ggKCBlICkge31cbn07XG5cbnZhciB4aHJTdWNjZXNzU3RhdHVzID0ge1xuXG5cdFx0Ly8gRmlsZSBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyBjb2RlIDAsIGFzc3VtZSAyMDBcblx0XHQwOiAyMDAsXG5cblx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdC8vICMxNDUwOiBzb21ldGltZXMgSUUgcmV0dXJucyAxMjIzIHdoZW4gaXQgc2hvdWxkIGJlIDIwNFxuXHRcdDEyMjM6IDIwNFxuXHR9LFxuXHR4aHJTdXBwb3J0ZWQgPSBqUXVlcnkuYWpheFNldHRpbmdzLnhocigpO1xuXG5zdXBwb3J0LmNvcnMgPSAhIXhoclN1cHBvcnRlZCAmJiAoIFwid2l0aENyZWRlbnRpYWxzXCIgaW4geGhyU3VwcG9ydGVkICk7XG5zdXBwb3J0LmFqYXggPSB4aHJTdXBwb3J0ZWQgPSAhIXhoclN1cHBvcnRlZDtcblxualF1ZXJ5LmFqYXhUcmFuc3BvcnQoIGZ1bmN0aW9uKCBvcHRpb25zICkge1xuXHR2YXIgY2FsbGJhY2ssIGVycm9yQ2FsbGJhY2s7XG5cblx0Ly8gQ3Jvc3MgZG9tYWluIG9ubHkgYWxsb3dlZCBpZiBzdXBwb3J0ZWQgdGhyb3VnaCBYTUxIdHRwUmVxdWVzdFxuXHRpZiAoIHN1cHBvcnQuY29ycyB8fCB4aHJTdXBwb3J0ZWQgJiYgIW9wdGlvbnMuY3Jvc3NEb21haW4gKSB7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHNlbmQ6IGZ1bmN0aW9uKCBoZWFkZXJzLCBjb21wbGV0ZSApIHtcblx0XHRcdFx0dmFyIGksXG5cdFx0XHRcdFx0eGhyID0gb3B0aW9ucy54aHIoKTtcblxuXHRcdFx0XHR4aHIub3Blbihcblx0XHRcdFx0XHRvcHRpb25zLnR5cGUsXG5cdFx0XHRcdFx0b3B0aW9ucy51cmwsXG5cdFx0XHRcdFx0b3B0aW9ucy5hc3luYyxcblx0XHRcdFx0XHRvcHRpb25zLnVzZXJuYW1lLFxuXHRcdFx0XHRcdG9wdGlvbnMucGFzc3dvcmRcblx0XHRcdFx0KTtcblxuXHRcdFx0XHQvLyBBcHBseSBjdXN0b20gZmllbGRzIGlmIHByb3ZpZGVkXG5cdFx0XHRcdGlmICggb3B0aW9ucy54aHJGaWVsZHMgKSB7XG5cdFx0XHRcdFx0Zm9yICggaSBpbiBvcHRpb25zLnhockZpZWxkcyApIHtcblx0XHRcdFx0XHRcdHhoclsgaSBdID0gb3B0aW9ucy54aHJGaWVsZHNbIGkgXTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBPdmVycmlkZSBtaW1lIHR5cGUgaWYgbmVlZGVkXG5cdFx0XHRcdGlmICggb3B0aW9ucy5taW1lVHlwZSAmJiB4aHIub3ZlcnJpZGVNaW1lVHlwZSApIHtcblx0XHRcdFx0XHR4aHIub3ZlcnJpZGVNaW1lVHlwZSggb3B0aW9ucy5taW1lVHlwZSApO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gWC1SZXF1ZXN0ZWQtV2l0aCBoZWFkZXJcblx0XHRcdFx0Ly8gRm9yIGNyb3NzLWRvbWFpbiByZXF1ZXN0cywgc2VlaW5nIGFzIGNvbmRpdGlvbnMgZm9yIGEgcHJlZmxpZ2h0IGFyZVxuXHRcdFx0XHQvLyBha2luIHRvIGEgamlnc2F3IHB1enpsZSwgd2Ugc2ltcGx5IG5ldmVyIHNldCBpdCB0byBiZSBzdXJlLlxuXHRcdFx0XHQvLyAoaXQgY2FuIGFsd2F5cyBiZSBzZXQgb24gYSBwZXItcmVxdWVzdCBiYXNpcyBvciBldmVuIHVzaW5nIGFqYXhTZXR1cClcblx0XHRcdFx0Ly8gRm9yIHNhbWUtZG9tYWluIHJlcXVlc3RzLCB3b24ndCBjaGFuZ2UgaGVhZGVyIGlmIGFscmVhZHkgcHJvdmlkZWQuXG5cdFx0XHRcdGlmICggIW9wdGlvbnMuY3Jvc3NEb21haW4gJiYgIWhlYWRlcnNbIFwiWC1SZXF1ZXN0ZWQtV2l0aFwiIF0gKSB7XG5cdFx0XHRcdFx0aGVhZGVyc1sgXCJYLVJlcXVlc3RlZC1XaXRoXCIgXSA9IFwiWE1MSHR0cFJlcXVlc3RcIjtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIFNldCBoZWFkZXJzXG5cdFx0XHRcdGZvciAoIGkgaW4gaGVhZGVycyApIHtcblx0XHRcdFx0XHR4aHIuc2V0UmVxdWVzdEhlYWRlciggaSwgaGVhZGVyc1sgaSBdICk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHQvLyBDYWxsYmFja1xuXHRcdFx0XHRjYWxsYmFjayA9IGZ1bmN0aW9uKCB0eXBlICkge1xuXHRcdFx0XHRcdHJldHVybiBmdW5jdGlvbigpIHtcblx0XHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHRcdGNhbGxiYWNrID0gZXJyb3JDYWxsYmFjayA9IHhoci5vbmxvYWQgPVxuXHRcdFx0XHRcdFx0XHRcdHhoci5vbmVycm9yID0geGhyLm9uYWJvcnQgPSB4aHIub250aW1lb3V0ID1cblx0XHRcdFx0XHRcdFx0XHRcdHhoci5vbnJlYWR5c3RhdGVjaGFuZ2UgPSBudWxsO1xuXG5cdFx0XHRcdFx0XHRcdGlmICggdHlwZSA9PT0gXCJhYm9ydFwiICkge1xuXHRcdFx0XHRcdFx0XHRcdHhoci5hYm9ydCgpO1xuXHRcdFx0XHRcdFx0XHR9IGVsc2UgaWYgKCB0eXBlID09PSBcImVycm9yXCIgKSB7XG5cblx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdFx0XHRcdFx0XHRcdC8vIE9uIGEgbWFudWFsIG5hdGl2ZSBhYm9ydCwgSUU5IHRocm93c1xuXHRcdFx0XHRcdFx0XHRcdC8vIGVycm9ycyBvbiBhbnkgcHJvcGVydHkgYWNjZXNzIHRoYXQgaXMgbm90IHJlYWR5U3RhdGVcblx0XHRcdFx0XHRcdFx0XHRpZiAoIHR5cGVvZiB4aHIuc3RhdHVzICE9PSBcIm51bWJlclwiICkge1xuXHRcdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoIDAsIFwiZXJyb3JcIiApO1xuXHRcdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRjb21wbGV0ZShcblxuXHRcdFx0XHRcdFx0XHRcdFx0XHQvLyBGaWxlOiBwcm90b2NvbCBhbHdheXMgeWllbGRzIHN0YXR1cyAwOyBzZWUgIzg2MDUsICMxNDIwN1xuXHRcdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzLFxuXHRcdFx0XHRcdFx0XHRcdFx0XHR4aHIuc3RhdHVzVGV4dFxuXHRcdFx0XHRcdFx0XHRcdFx0KTtcblx0XHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0XHRcdFx0Y29tcGxldGUoXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHJTdWNjZXNzU3RhdHVzWyB4aHIuc3RhdHVzIF0gfHwgeGhyLnN0YXR1cyxcblx0XHRcdFx0XHRcdFx0XHRcdHhoci5zdGF0dXNUZXh0LFxuXG5cdFx0XHRcdFx0XHRcdFx0XHQvLyBTdXBwb3J0OiBJRSA8PTkgb25seVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gSUU5IGhhcyBubyBYSFIyIGJ1dCB0aHJvd3Mgb24gYmluYXJ5ICh0cmFjLTExNDI2KVxuXHRcdFx0XHRcdFx0XHRcdFx0Ly8gRm9yIFhIUjIgbm9uLXRleHQsIGxldCB0aGUgY2FsbGVyIGhhbmRsZSBpdCAoZ2gtMjQ5OClcblx0XHRcdFx0XHRcdFx0XHRcdCggeGhyLnJlc3BvbnNlVHlwZSB8fCBcInRleHRcIiApICE9PSBcInRleHRcIiAgfHxcblx0XHRcdFx0XHRcdFx0XHRcdHR5cGVvZiB4aHIucmVzcG9uc2VUZXh0ICE9PSBcInN0cmluZ1wiID9cblx0XHRcdFx0XHRcdFx0XHRcdFx0eyBiaW5hcnk6IHhoci5yZXNwb25zZSB9IDpcblx0XHRcdFx0XHRcdFx0XHRcdFx0eyB0ZXh0OiB4aHIucmVzcG9uc2VUZXh0IH0sXG5cdFx0XHRcdFx0XHRcdFx0XHR4aHIuZ2V0QWxsUmVzcG9uc2VIZWFkZXJzKClcblx0XHRcdFx0XHRcdFx0XHQpO1xuXHRcdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fTtcblxuXHRcdFx0XHQvLyBMaXN0ZW4gdG8gZXZlbnRzXG5cdFx0XHRcdHhoci5vbmxvYWQgPSBjYWxsYmFjaygpO1xuXHRcdFx0XHRlcnJvckNhbGxiYWNrID0geGhyLm9uZXJyb3IgPSB4aHIub250aW1lb3V0ID0gY2FsbGJhY2soIFwiZXJyb3JcIiApO1xuXG5cdFx0XHRcdC8vIFN1cHBvcnQ6IElFIDkgb25seVxuXHRcdFx0XHQvLyBVc2Ugb25yZWFkeXN0YXRlY2hhbmdlIHRvIHJlcGxhY2Ugb25hYm9ydFxuXHRcdFx0XHQvLyB0byBoYW5kbGUgdW5jYXVnaHQgYWJvcnRzXG5cdFx0XHRcdGlmICggeGhyLm9uYWJvcnQgIT09IHVuZGVmaW5lZCApIHtcblx0XHRcdFx0XHR4aHIub25hYm9ydCA9IGVycm9yQ2FsbGJhY2s7XG5cdFx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdFx0eGhyLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCkge1xuXG5cdFx0XHRcdFx0XHQvLyBDaGVjayByZWFkeVN0YXRlIGJlZm9yZSB0aW1lb3V0IGFzIGl0IGNoYW5nZXNcblx0XHRcdFx0XHRcdGlmICggeGhyLnJlYWR5U3RhdGUgPT09IDQgKSB7XG5cblx0XHRcdFx0XHRcdFx0Ly8gQWxsb3cgb25lcnJvciB0byBiZSBjYWxsZWQgZmlyc3QsXG5cdFx0XHRcdFx0XHRcdC8vIGJ1dCB0aGF0IHdpbGwgbm90IGhhbmRsZSBhIG5hdGl2ZSBhYm9ydFxuXHRcdFx0XHRcdFx0XHQvLyBBbHNvLCBzYXZlIGVycm9yQ2FsbGJhY2sgdG8gYSB2YXJpYWJsZVxuXHRcdFx0XHRcdFx0XHQvLyBhcyB4aHIub25lcnJvciBjYW5ub3QgYmUgYWNjZXNzZWRcblx0XHRcdFx0XHRcdFx0d2luZG93LnNldFRpbWVvdXQoIGZ1bmN0aW9uKCkge1xuXHRcdFx0XHRcdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0XHRcdFx0XHRlcnJvckNhbGxiYWNrKCk7XG5cdFx0XHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdFx0XHR9ICk7XG5cdFx0XHRcdFx0XHR9XG5cdFx0XHRcdFx0fTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIENyZWF0ZSB0aGUgYWJvcnQgY2FsbGJhY2tcblx0XHRcdFx0Y2FsbGJhY2sgPSBjYWxsYmFjayggXCJhYm9ydFwiICk7XG5cblx0XHRcdFx0dHJ5IHtcblxuXHRcdFx0XHRcdC8vIERvIHNlbmQgdGhlIHJlcXVlc3QgKHRoaXMgbWF5IHJhaXNlIGFuIGV4Y2VwdGlvbilcblx0XHRcdFx0XHR4aHIuc2VuZCggb3B0aW9ucy5oYXNDb250ZW50ICYmIG9wdGlvbnMuZGF0YSB8fCBudWxsICk7XG5cdFx0XHRcdH0gY2F0Y2ggKCBlICkge1xuXG5cdFx0XHRcdFx0Ly8gIzE0NjgzOiBPbmx5IHJldGhyb3cgaWYgdGhpcyBoYXNuJ3QgYmVlbiBub3RpZmllZCBhcyBhbiBlcnJvciB5ZXRcblx0XHRcdFx0XHRpZiAoIGNhbGxiYWNrICkge1xuXHRcdFx0XHRcdFx0dGhyb3cgZTtcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH1cblx0XHRcdH0sXG5cblx0XHRcdGFib3J0OiBmdW5jdGlvbigpIHtcblx0XHRcdFx0aWYgKCBjYWxsYmFjayApIHtcblx0XHRcdFx0XHRjYWxsYmFjaygpO1xuXHRcdFx0XHR9XG5cdFx0XHR9XG5cdFx0fTtcblx0fVxufSApO1xuXG5cblxuXG4vLyBQcmV2ZW50IGF1dG8tZXhlY3V0aW9uIG9mIHNjcmlwdHMgd2hlbiBubyBleHBsaWNpdCBkYXRhVHlwZSB3YXMgcHJvdmlkZWQgKFNlZSBnaC0yNDMyKVxualF1ZXJ5LmFqYXhQcmVmaWx0ZXIoIGZ1bmN0aW9uKCBzICkge1xuXHRpZiAoIHMuY3Jvc3NEb21haW4gKSB7XG5cdFx0cy5jb250ZW50cy5zY3JpcHQgPSBmYWxzZTtcblx0fVxufSApO1xuXG4vLyBJbnN0YWxsIHNjcmlwdCBkYXRhVHlwZVxualF1ZXJ5LmFqYXhTZXR1cCgge1xuXHRhY2NlcHRzOiB7XG5cdFx0c2NyaXB0OiBcInRleHQvamF2YXNjcmlwdCwgYXBwbGljYXRpb24vamF2YXNjcmlwdCwgXCIgK1xuXHRcdFx0XCJhcHBsaWNhdGlvbi9lY21hc2NyaXB0LCBhcHBsaWNhdGlvbi94LWVjbWFzY3JpcHRcIlxuXHR9LFxuXHRjb250ZW50czoge1xuXHRcdHNjcmlwdDogL1xcYig/OmphdmF8ZWNtYSlzY3JpcHRcXGIvXG5cdH0sXG5cdGNvbnZlcnRlcnM6IHtcblx0XHRcInRleHQgc2NyaXB0XCI6IGZ1bmN0aW9uKCB0ZXh0ICkge1xuXHRcdFx0alF1ZXJ5Lmdsb2JhbEV2YWwoIHRleHQgKTtcblx0XHRcdHJldHVybiB0ZXh0O1xuXHRcdH1cblx0fVxufSApO1xuXG4vLyBIYW5kbGUgY2FjaGUncyBzcGVjaWFsIGNhc2UgYW5kIGNyb3NzRG9tYWluXG5qUXVlcnkuYWpheFByZWZpbHRlciggXCJzY3JpcHRcIiwgZnVuY3Rpb24oIHMgKSB7XG5cdGlmICggcy5jYWNoZSA9PT0gdW5kZWZpbmVkICkge1xuXHRcdHMuY2FjaGUgPSBmYWxzZTtcblx0fVxuXHRpZiAoIHMuY3Jvc3NEb21haW4gKSB7XG5cdFx0cy50eXBlID0gXCJHRVRcIjtcblx0fVxufSApO1xuXG4vLyBCaW5kIHNjcmlwdCB0YWcgaGFjayB0cmFuc3BvcnRcbmpRdWVyeS5hamF4VHJhbnNwb3J0KCBcInNjcmlwdFwiLCBmdW5jdGlvbiggcyApIHtcblxuXHQvLyBUaGlzIHRyYW5zcG9ydCBvbmx5IGRlYWxzIHdpdGggY3Jvc3MgZG9tYWluIHJlcXVlc3RzXG5cdGlmICggcy5jcm9zc0RvbWFpbiApIHtcblx0XHR2YXIgc2NyaXB0LCBjYWxsYmFjaztcblx0XHRyZXR1cm4ge1xuXHRcdFx0c2VuZDogZnVuY3Rpb24oIF8sIGNvbXBsZXRlICkge1xuXHRcdFx0XHRzY3JpcHQgPSBqUXVlcnkoIFwiPHNjcmlwdD5cIiApLnByb3AoIHtcblx0XHRcdFx0XHRjaGFyc2V0OiBzLnNjcmlwdENoYXJzZXQsXG5cdFx0XHRcdFx0c3JjOiBzLnVybFxuXHRcdFx0XHR9ICkub24oXG5cdFx0XHRcdFx0XCJsb2FkIGVycm9yXCIsXG5cdFx0XHRcdFx0Y2FsbGJhY2sgPSBmdW5jdGlvbiggZXZ0ICkge1xuXHRcdFx0XHRcdFx0c2NyaXB0LnJlbW92ZSgpO1xuXHRcdFx0XHRcdFx0Y2FsbGJhY2sgPSBudWxsO1xuXHRcdFx0XHRcdFx0aWYgKCBldnQgKSB7XG5cdFx0XHRcdFx0XHRcdGNvbXBsZXRlKCBldnQudHlwZSA9PT0gXCJlcnJvclwiID8gNDA0IDogMjAwLCBldnQudHlwZSApO1xuXHRcdFx0XHRcdFx0fVxuXHRcdFx0XHRcdH1cblx0XHRcdFx0KTtcblxuXHRcdFx0XHQvLyBVc2UgbmF0aXZlIERPTSBtYW5pcHVsYXRpb24gdG8gYXZvaWQgb3VyIGRvbU1hbmlwIEFKQVggdHJpY2tlcnlcblx0XHRcdFx0ZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZCggc2NyaXB0WyAwIF0gKTtcblx0XHRcdH0sXG5cdFx0XHRhYm9ydDogZnVuY3Rpb24oKSB7XG5cdFx0XHRcdGlmICggY2FsbGJhY2sgKSB7XG5cdFx0XHRcdFx0Y2FsbGJhY2soKTtcblx0XHRcdFx0fVxuXHRcdFx0fVxuXHRcdH07XG5cdH1cbn0gKTtcblxuXG5cblxudmFyIG9sZENhbGxiYWNrcyA9IFtdLFxuXHRyanNvbnAgPSAvKD0pXFw/KD89JnwkKXxcXD9cXD8vO1xuXG4vLyBEZWZhdWx0IGpzb25wIHNldHRpbmdzXG5qUXVlcnkuYWpheFNldHVwKCB7XG5cdGpzb25wOiBcImNhbGxiYWNrXCIsXG5cdGpzb25wQ2FsbGJhY2s6IGZ1bmN0aW9uKCkge1xuXHRcdHZhciBjYWxsYmFjayA9IG9sZENhbGxiYWNrcy5wb3AoKSB8fCAoIGpRdWVyeS5leHBhbmRvICsgXCJfXCIgKyAoIG5vbmNlKysgKSApO1xuXHRcdHRoaXNbIGNhbGxiYWNrIF0gPSB0cnVlO1xuXHRcdHJldHVybiBjYWxsYmFjaztcblx0fVxufSApO1xuXG4vLyBEZXRlY3QsIG5vcm1hbGl6ZSBvcHRpb25zIGFuZCBpbnN0YWxsIGNhbGxiYWNrcyBmb3IganNvbnAgcmVxdWVzdHNcbmpRdWVyeS5hamF4UHJlZmlsdGVyKCBcImpzb24ganNvbnBcIiwgZnVuY3Rpb24oIHMsIG9yaWdpbmFsU2V0dGluZ3MsIGpxWEhSICkge1xuXG5cdHZhciBjYWxsYmFja05hbWUsIG92ZXJ3cml0dGVuLCByZXNwb25zZUNvbnRhaW5lcixcblx0XHRqc29uUHJvcCA9IHMuanNvbnAgIT09IGZhbHNlICYmICggcmpzb25wLnRlc3QoIHMudXJsICkgP1xuXHRcdFx0XCJ1cmxcIiA6XG5cdFx0XHR0eXBlb2Ygcy5kYXRhID09PSBcInN0cmluZ1wiICYmXG5cdFx0XHRcdCggcy5jb250ZW50VHlwZSB8fCBcIlwiIClcblx0XHRcdFx0XHQuaW5kZXhPZiggXCJhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWRcIiApID09PSAwICYmXG5cdFx0XHRcdHJqc29ucC50ZXN0KCBzLmRhdGEgKSAmJiBcImRhdGFcIlxuXHRcdCk7XG5cblx0Ly8gSGFuZGxlIGlmZiB0aGUgZXhwZWN0ZWQgZGF0YSB0eXBlIGlzIFwianNvbnBcIiBvciB3ZSBoYXZlIGEgcGFyYW1ldGVyIHRvIHNldFxuXHRpZiAoIGpzb25Qcm9wIHx8IHMuZGF0YVR5cGVzWyAwIF0gPT09IFwianNvbnBcIiApIHtcblxuXHRcdC8vIEdldCBjYWxsYmFjayBuYW1lLCByZW1lbWJlcmluZyBwcmVleGlzdGluZyB2YWx1ZSBhc3NvY2lhdGVkIHdpdGggaXRcblx0XHRjYWxsYmFja05hbWUgPSBzLmpzb25wQ2FsbGJhY2sgPSBpc0Z1bmN0aW9uKCBzLmpzb25wQ2FsbGJhY2sgKSA/XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2soKSA6XG5cdFx0XHRzLmpzb25wQ2FsbGJhY2s7XG5cblx0XHQvLyBJbnNlcnQgY2FsbGJhY2sgaW50byB1cmwgb3IgZm9ybSBkYXRhXG5cdFx0aWYgKCBqc29uUHJvcCApIHtcblx0XHRcdHNbIGpzb25Qcm9wIF0gPSBzWyBqc29uUHJvcCBdLnJlcGxhY2UoIHJqc29ucCwgXCIkMVwiICsgY2FsbGJhY2tOYW1lICk7XG5cdFx0fSBlbHNlIGlmICggcy5qc29ucCAhPT0gZmFsc2UgKSB7XG5cdFx0XHRzLnVybCArPSAoIHJxdWVyeS50ZXN0KCBzLnVybCApID8gXCImXCIgOiBcIj9cIiApICsgcy5qc29ucCArIFwiPVwiICsgY2FsbGJhY2tOYW1lO1xuXHRcdH1cblxuXHRcdC8vIFVzZSBkYXRhIGNvbnZlcnRlciB0byByZXRyaWV2ZSBqc29uIGFmdGVyIHNjcmlwdCBleGVjdXRpb25cblx0XHRzLmNvbnZlcnRlcnNbIFwic2NyaXB0IGpzb25cIiBdID0gZnVuY3Rpb24oKSB7XG5cdFx0XHRpZiAoICFyZXNwb25zZUNvbnRhaW5lciApIHtcblx0XHRcdFx0alF1ZXJ5LmVycm9yKCBjYWxsYmFja05hbWUgKyBcIiB3YXMgbm90IGNhbGxlZFwiICk7XG5cdFx0XHR9XG5cdFx0XHRyZXR1cm4gcmVzcG9uc2VDb250YWluZXJbIDAgXTtcblx0XHR9O1xuXG5cdFx0Ly8gRm9yY2UganNvbiBkYXRhVHlwZVxuXHRcdHMuZGF0YVR5cGVzWyAwIF0gPSBcImpzb25cIjtcblxuXHRcdC8vIEluc3RhbGwgY2FsbGJhY2tcblx0XHRvdmVyd3JpdHRlbiA9IHdpbmRvd1sgY2FsbGJhY2tOYW1lIF07XG5cdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IGZ1bmN0aW9uKCkge1xuXHRcdFx0cmVzcG9uc2VDb250YWluZXIgPSBhcmd1bWVudHM7XG5cdFx0fTtcblxuXHRcdC8vIENsZWFuLXVwIGZ1bmN0aW9uIChmaXJlcyBhZnRlciBjb252ZXJ0ZXJzKVxuXHRcdGpxWEhSLmFsd2F5cyggZnVuY3Rpb24oKSB7XG5cblx0XHRcdC8vIElmIHByZXZpb3VzIHZhbHVlIGRpZG4ndCBleGlzdCAtIHJlbW92ZSBpdFxuXHRcdFx0aWYgKCBvdmVyd3JpdHRlbiA9PT0gdW5kZWZpbmVkICkge1xuXHRcdFx0XHRqUXVlcnkoIHdpbmRvdyApLnJlbW92ZVByb3AoIGNhbGxiYWNrTmFtZSApO1xuXG5cdFx0XHQvLyBPdGhlcndpc2UgcmVzdG9yZSBwcmVleGlzdGluZyB2YWx1ZVxuXHRcdFx0fSBlbHNlIHtcblx0XHRcdFx0d2luZG93WyBjYWxsYmFja05hbWUgXSA9IG92ZXJ3cml0dGVuO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBTYXZlIGJhY2sgYXMgZnJlZVxuXHRcdFx0aWYgKCBzWyBjYWxsYmFja05hbWUgXSApIHtcblxuXHRcdFx0XHQvLyBNYWtlIHN1cmUgdGhhdCByZS11c2luZyB0aGUgb3B0aW9ucyBkb2Vzbid0IHNjcmV3IHRoaW5ncyBhcm91bmRcblx0XHRcdFx0cy5qc29ucENhbGxiYWNrID0gb3JpZ2luYWxTZXR0aW5ncy5qc29ucENhbGxiYWNrO1xuXG5cdFx0XHRcdC8vIFNhdmUgdGhlIGNhbGxiYWNrIG5hbWUgZm9yIGZ1dHVyZSB1c2Vcblx0XHRcdFx0b2xkQ2FsbGJhY2tzLnB1c2goIGNhbGxiYWNrTmFtZSApO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBDYWxsIGlmIGl0IHdhcyBhIGZ1bmN0aW9uIGFuZCB3ZSBoYXZlIGEgcmVzcG9uc2Vcblx0XHRcdGlmICggcmVzcG9uc2VDb250YWluZXIgJiYgaXNGdW5jdGlvbiggb3ZlcndyaXR0ZW4gKSApIHtcblx0XHRcdFx0b3ZlcndyaXR0ZW4oIHJlc3BvbnNlQ29udGFpbmVyWyAwIF0gKTtcblx0XHRcdH1cblxuXHRcdFx0cmVzcG9uc2VDb250YWluZXIgPSBvdmVyd3JpdHRlbiA9IHVuZGVmaW5lZDtcblx0XHR9ICk7XG5cblx0XHQvLyBEZWxlZ2F0ZSB0byBzY3JpcHRcblx0XHRyZXR1cm4gXCJzY3JpcHRcIjtcblx0fVxufSApO1xuXG5cblxuXG4vLyBTdXBwb3J0OiBTYWZhcmkgOCBvbmx5XG4vLyBJbiBTYWZhcmkgOCBkb2N1bWVudHMgY3JlYXRlZCB2aWEgZG9jdW1lbnQuaW1wbGVtZW50YXRpb24uY3JlYXRlSFRNTERvY3VtZW50XG4vLyBjb2xsYXBzZSBzaWJsaW5nIGZvcm1zOiB0aGUgc2Vjb25kIG9uZSBiZWNvbWVzIGEgY2hpbGQgb2YgdGhlIGZpcnN0IG9uZS5cbi8vIEJlY2F1c2Ugb2YgdGhhdCwgdGhpcyBzZWN1cml0eSBtZWFzdXJlIGhhcyB0byBiZSBkaXNhYmxlZCBpbiBTYWZhcmkgOC5cbi8vIGh0dHBzOi8vYnVncy53ZWJraXQub3JnL3Nob3dfYnVnLmNnaT9pZD0xMzczMzdcbnN1cHBvcnQuY3JlYXRlSFRNTERvY3VtZW50ID0gKCBmdW5jdGlvbigpIHtcblx0dmFyIGJvZHkgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIFwiXCIgKS5ib2R5O1xuXHRib2R5LmlubmVySFRNTCA9IFwiPGZvcm0+PC9mb3JtPjxmb3JtPjwvZm9ybT5cIjtcblx0cmV0dXJuIGJvZHkuY2hpbGROb2Rlcy5sZW5ndGggPT09IDI7XG59ICkoKTtcblxuXG4vLyBBcmd1bWVudCBcImRhdGFcIiBzaG91bGQgYmUgc3RyaW5nIG9mIGh0bWxcbi8vIGNvbnRleHQgKG9wdGlvbmFsKTogSWYgc3BlY2lmaWVkLCB0aGUgZnJhZ21lbnQgd2lsbCBiZSBjcmVhdGVkIGluIHRoaXMgY29udGV4dCxcbi8vIGRlZmF1bHRzIHRvIGRvY3VtZW50XG4vLyBrZWVwU2NyaXB0cyAob3B0aW9uYWwpOiBJZiB0cnVlLCB3aWxsIGluY2x1ZGUgc2NyaXB0cyBwYXNzZWQgaW4gdGhlIGh0bWwgc3RyaW5nXG5qUXVlcnkucGFyc2VIVE1MID0gZnVuY3Rpb24oIGRhdGEsIGNvbnRleHQsIGtlZXBTY3JpcHRzICkge1xuXHRpZiAoIHR5cGVvZiBkYXRhICE9PSBcInN0cmluZ1wiICkge1xuXHRcdHJldHVybiBbXTtcblx0fVxuXHRpZiAoIHR5cGVvZiBjb250ZXh0ID09PSBcImJvb2xlYW5cIiApIHtcblx0XHRrZWVwU2NyaXB0cyA9IGNvbnRleHQ7XG5cdFx0Y29udGV4dCA9IGZhbHNlO1xuXHR9XG5cblx0dmFyIGJhc2UsIHBhcnNlZCwgc2NyaXB0cztcblxuXHRpZiAoICFjb250ZXh0ICkge1xuXG5cdFx0Ly8gU3RvcCBzY3JpcHRzIG9yIGlubGluZSBldmVudCBoYW5kbGVycyBmcm9tIGJlaW5nIGV4ZWN1dGVkIGltbWVkaWF0ZWx5XG5cdFx0Ly8gYnkgdXNpbmcgZG9jdW1lbnQuaW1wbGVtZW50YXRpb25cblx0XHRpZiAoIHN1cHBvcnQuY3JlYXRlSFRNTERvY3VtZW50ICkge1xuXHRcdFx0Y29udGV4dCA9IGRvY3VtZW50LmltcGxlbWVudGF0aW9uLmNyZWF0ZUhUTUxEb2N1bWVudCggXCJcIiApO1xuXG5cdFx0XHQvLyBTZXQgdGhlIGJhc2UgaHJlZiBmb3IgdGhlIGNyZWF0ZWQgZG9jdW1lbnRcblx0XHRcdC8vIHNvIGFueSBwYXJzZWQgZWxlbWVudHMgd2l0aCBVUkxzXG5cdFx0XHQvLyBhcmUgYmFzZWQgb24gdGhlIGRvY3VtZW50J3MgVVJMIChnaC0yOTY1KVxuXHRcdFx0YmFzZSA9IGNvbnRleHQuY3JlYXRlRWxlbWVudCggXCJiYXNlXCIgKTtcblx0XHRcdGJhc2UuaHJlZiA9IGRvY3VtZW50LmxvY2F0aW9uLmhyZWY7XG5cdFx0XHRjb250ZXh0LmhlYWQuYXBwZW5kQ2hpbGQoIGJhc2UgKTtcblx0XHR9IGVsc2Uge1xuXHRcdFx0Y29udGV4dCA9IGRvY3VtZW50O1xuXHRcdH1cblx0fVxuXG5cdHBhcnNlZCA9IHJzaW5nbGVUYWcuZXhlYyggZGF0YSApO1xuXHRzY3JpcHRzID0gIWtlZXBTY3JpcHRzICYmIFtdO1xuXG5cdC8vIFNpbmdsZSB0YWdcblx0aWYgKCBwYXJzZWQgKSB7XG5cdFx0cmV0dXJuIFsgY29udGV4dC5jcmVhdGVFbGVtZW50KCBwYXJzZWRbIDEgXSApIF07XG5cdH1cblxuXHRwYXJzZWQgPSBidWlsZEZyYWdtZW50KCBbIGRhdGEgXSwgY29udGV4dCwgc2NyaXB0cyApO1xuXG5cdGlmICggc2NyaXB0cyAmJiBzY3JpcHRzLmxlbmd0aCApIHtcblx0XHRqUXVlcnkoIHNjcmlwdHMgKS5yZW1vdmUoKTtcblx0fVxuXG5cdHJldHVybiBqUXVlcnkubWVyZ2UoIFtdLCBwYXJzZWQuY2hpbGROb2RlcyApO1xufTtcblxuXG4vKipcbiAqIExvYWQgYSB1cmwgaW50byBhIHBhZ2VcbiAqL1xualF1ZXJ5LmZuLmxvYWQgPSBmdW5jdGlvbiggdXJsLCBwYXJhbXMsIGNhbGxiYWNrICkge1xuXHR2YXIgc2VsZWN0b3IsIHR5cGUsIHJlc3BvbnNlLFxuXHRcdHNlbGYgPSB0aGlzLFxuXHRcdG9mZiA9IHVybC5pbmRleE9mKCBcIiBcIiApO1xuXG5cdGlmICggb2ZmID4gLTEgKSB7XG5cdFx0c2VsZWN0b3IgPSBzdHJpcEFuZENvbGxhcHNlKCB1cmwuc2xpY2UoIG9mZiApICk7XG5cdFx0dXJsID0gdXJsLnNsaWNlKCAwLCBvZmYgKTtcblx0fVxuXG5cdC8vIElmIGl0J3MgYSBmdW5jdGlvblxuXHRpZiAoIGlzRnVuY3Rpb24oIHBhcmFtcyApICkge1xuXG5cdFx0Ly8gV2UgYXNzdW1lIHRoYXQgaXQncyB0aGUgY2FsbGJhY2tcblx0XHRjYWxsYmFjayA9IHBhcmFtcztcblx0XHRwYXJhbXMgPSB1bmRlZmluZWQ7XG5cblx0Ly8gT3RoZXJ3aXNlLCBidWlsZCBhIHBhcmFtIHN0cmluZ1xuXHR9IGVsc2UgaWYgKCBwYXJhbXMgJiYgdHlwZW9mIHBhcmFtcyA9PT0gXCJvYmplY3RcIiApIHtcblx0XHR0eXBlID0gXCJQT1NUXCI7XG5cdH1cblxuXHQvLyBJZiB3ZSBoYXZlIGVsZW1lbnRzIHRvIG1vZGlmeSwgbWFrZSB0aGUgcmVxdWVzdFxuXHRpZiAoIHNlbGYubGVuZ3RoID4gMCApIHtcblx0XHRqUXVlcnkuYWpheCgge1xuXHRcdFx0dXJsOiB1cmwsXG5cblx0XHRcdC8vIElmIFwidHlwZVwiIHZhcmlhYmxlIGlzIHVuZGVmaW5lZCwgdGhlbiBcIkdFVFwiIG1ldGhvZCB3aWxsIGJlIHVzZWQuXG5cdFx0XHQvLyBNYWtlIHZhbHVlIG9mIHRoaXMgZmllbGQgZXhwbGljaXQgc2luY2Vcblx0XHRcdC8vIHVzZXIgY2FuIG92ZXJyaWRlIGl0IHRocm91Z2ggYWpheFNldHVwIG1ldGhvZFxuXHRcdFx0dHlwZTogdHlwZSB8fCBcIkdFVFwiLFxuXHRcdFx0ZGF0YVR5cGU6IFwiaHRtbFwiLFxuXHRcdFx0ZGF0YTogcGFyYW1zXG5cdFx0fSApLmRvbmUoIGZ1bmN0aW9uKCByZXNwb25zZVRleHQgKSB7XG5cblx0XHRcdC8vIFNhdmUgcmVzcG9uc2UgZm9yIHVzZSBpbiBjb21wbGV0ZSBjYWxsYmFja1xuXHRcdFx0cmVzcG9uc2UgPSBhcmd1bWVudHM7XG5cblx0XHRcdHNlbGYuaHRtbCggc2VsZWN0b3IgP1xuXG5cdFx0XHRcdC8vIElmIGEgc2VsZWN0b3Igd2FzIHNwZWNpZmllZCwgbG9jYXRlIHRoZSByaWdodCBlbGVtZW50cyBpbiBhIGR1bW15IGRpdlxuXHRcdFx0XHQvLyBFeGNsdWRlIHNjcmlwdHMgdG8gYXZvaWQgSUUgJ1Blcm1pc3Npb24gRGVuaWVkJyBlcnJvcnNcblx0XHRcdFx0alF1ZXJ5KCBcIjxkaXY+XCIgKS5hcHBlbmQoIGpRdWVyeS5wYXJzZUhUTUwoIHJlc3BvbnNlVGV4dCApICkuZmluZCggc2VsZWN0b3IgKSA6XG5cblx0XHRcdFx0Ly8gT3RoZXJ3aXNlIHVzZSB0aGUgZnVsbCByZXN1bHRcblx0XHRcdFx0cmVzcG9uc2VUZXh0ICk7XG5cblx0XHQvLyBJZiB0aGUgcmVxdWVzdCBzdWNjZWVkcywgdGhpcyBmdW5jdGlvbiBnZXRzIFwiZGF0YVwiLCBcInN0YXR1c1wiLCBcImpxWEhSXCJcblx0XHQvLyBidXQgdGhleSBhcmUgaWdub3JlZCBiZWNhdXNlIHJlc3BvbnNlIHdhcyBzZXQgYWJvdmUuXG5cdFx0Ly8gSWYgaXQgZmFpbHMsIHRoaXMgZnVuY3Rpb24gZ2V0cyBcImpxWEhSXCIsIFwic3RhdHVzXCIsIFwiZXJyb3JcIlxuXHRcdH0gKS5hbHdheXMoIGNhbGxiYWNrICYmIGZ1bmN0aW9uKCBqcVhIUiwgc3RhdHVzICkge1xuXHRcdFx0c2VsZi5lYWNoKCBmdW5jdGlvbigpIHtcblx0XHRcdFx0Y2FsbGJhY2suYXBwbHkoIHRoaXMsIHJlc3BvbnNlIHx8IFsganFYSFIucmVzcG9uc2VUZXh0LCBzdGF0dXMsIGpxWEhSIF0gKTtcblx0XHRcdH0gKTtcblx0XHR9ICk7XG5cdH1cblxuXHRyZXR1cm4gdGhpcztcbn07XG5cblxuXG5cbi8vIEF0dGFjaCBhIGJ1bmNoIG9mIGZ1bmN0aW9ucyBmb3IgaGFuZGxpbmcgY29tbW9uIEFKQVggZXZlbnRzXG5qUXVlcnkuZWFjaCggW1xuXHRcImFqYXhTdGFydFwiLFxuXHRcImFqYXhTdG9wXCIsXG5cdFwiYWpheENvbXBsZXRlXCIsXG5cdFwiYWpheEVycm9yXCIsXG5cdFwiYWpheFN1Y2Nlc3NcIixcblx0XCJhamF4U2VuZFwiXG5dLCBmdW5jdGlvbiggaSwgdHlwZSApIHtcblx0alF1ZXJ5LmZuWyB0eXBlIF0gPSBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIHRoaXMub24oIHR5cGUsIGZuICk7XG5cdH07XG59ICk7XG5cblxuXG5cbmpRdWVyeS5leHByLnBzZXVkb3MuYW5pbWF0ZWQgPSBmdW5jdGlvbiggZWxlbSApIHtcblx0cmV0dXJuIGpRdWVyeS5ncmVwKCBqUXVlcnkudGltZXJzLCBmdW5jdGlvbiggZm4gKSB7XG5cdFx0cmV0dXJuIGVsZW0gPT09IGZuLmVsZW07XG5cdH0gKS5sZW5ndGg7XG59O1xuXG5cblxuXG5qUXVlcnkub2Zmc2V0ID0ge1xuXHRzZXRPZmZzZXQ6IGZ1bmN0aW9uKCBlbGVtLCBvcHRpb25zLCBpICkge1xuXHRcdHZhciBjdXJQb3NpdGlvbiwgY3VyTGVmdCwgY3VyQ1NTVG9wLCBjdXJUb3AsIGN1ck9mZnNldCwgY3VyQ1NTTGVmdCwgY2FsY3VsYXRlUG9zaXRpb24sXG5cdFx0XHRwb3NpdGlvbiA9IGpRdWVyeS5jc3MoIGVsZW0sIFwicG9zaXRpb25cIiApLFxuXHRcdFx0Y3VyRWxlbSA9IGpRdWVyeSggZWxlbSApLFxuXHRcdFx0cHJvcHMgPSB7fTtcblxuXHRcdC8vIFNldCBwb3NpdGlvbiBmaXJzdCwgaW4tY2FzZSB0b3AvbGVmdCBhcmUgc2V0IGV2ZW4gb24gc3RhdGljIGVsZW1cblx0XHRpZiAoIHBvc2l0aW9uID09PSBcInN0YXRpY1wiICkge1xuXHRcdFx0ZWxlbS5zdHlsZS5wb3NpdGlvbiA9IFwicmVsYXRpdmVcIjtcblx0XHR9XG5cblx0XHRjdXJPZmZzZXQgPSBjdXJFbGVtLm9mZnNldCgpO1xuXHRcdGN1ckNTU1RvcCA9IGpRdWVyeS5jc3MoIGVsZW0sIFwidG9wXCIgKTtcblx0XHRjdXJDU1NMZWZ0ID0galF1ZXJ5LmNzcyggZWxlbSwgXCJsZWZ0XCIgKTtcblx0XHRjYWxjdWxhdGVQb3NpdGlvbiA9ICggcG9zaXRpb24gPT09IFwiYWJzb2x1dGVcIiB8fCBwb3NpdGlvbiA9PT0gXCJmaXhlZFwiICkgJiZcblx0XHRcdCggY3VyQ1NTVG9wICsgY3VyQ1NTTGVmdCApLmluZGV4T2YoIFwiYXV0b1wiICkgPiAtMTtcblxuXHRcdC8vIE5lZWQgdG8gYmUgYWJsZSB0byBjYWxjdWxhdGUgcG9zaXRpb24gaWYgZWl0aGVyXG5cdFx0Ly8gdG9wIG9yIGxlZnQgaXMgYXV0byBhbmQgcG9zaXRpb24gaXMgZWl0aGVyIGFic29sdXRlIG9yIGZpeGVkXG5cdFx0aWYgKCBjYWxjdWxhdGVQb3NpdGlvbiApIHtcblx0XHRcdGN1clBvc2l0aW9uID0gY3VyRWxlbS5wb3NpdGlvbigpO1xuXHRcdFx0Y3VyVG9wID0gY3VyUG9zaXRpb24udG9wO1xuXHRcdFx0Y3VyTGVmdCA9IGN1clBvc2l0aW9uLmxlZnQ7XG5cblx0XHR9IGVsc2Uge1xuXHRcdFx0Y3VyVG9wID0gcGFyc2VGbG9hdCggY3VyQ1NTVG9wICkgfHwgMDtcblx0XHRcdGN1ckxlZnQgPSBwYXJzZUZsb2F0KCBjdXJDU1NMZWZ0ICkgfHwgMDtcblx0XHR9XG5cblx0XHRpZiAoIGlzRnVuY3Rpb24oIG9wdGlvbnMgKSApIHtcblxuXHRcdFx0Ly8gVXNlIGpRdWVyeS5leHRlbmQgaGVyZSB0byBhbGxvdyBtb2RpZmljYXRpb24gb2YgY29vcmRpbmF0ZXMgYXJndW1lbnQgKGdoLTE4NDgpXG5cdFx0XHRvcHRpb25zID0gb3B0aW9ucy5jYWxsKCBlbGVtLCBpLCBqUXVlcnkuZXh0ZW5kKCB7fSwgY3VyT2Zmc2V0ICkgKTtcblx0XHR9XG5cblx0XHRpZiAoIG9wdGlvbnMudG9wICE9IG51bGwgKSB7XG5cdFx0XHRwcm9wcy50b3AgPSAoIG9wdGlvbnMudG9wIC0gY3VyT2Zmc2V0LnRvcCApICsgY3VyVG9wO1xuXHRcdH1cblx0XHRpZiAoIG9wdGlvbnMubGVmdCAhPSBudWxsICkge1xuXHRcdFx0cHJvcHMubGVmdCA9ICggb3B0aW9ucy5sZWZ0IC0gY3VyT2Zmc2V0LmxlZnQgKSArIGN1ckxlZnQ7XG5cdFx0fVxuXG5cdFx0aWYgKCBcInVzaW5nXCIgaW4gb3B0aW9ucyApIHtcblx0XHRcdG9wdGlvbnMudXNpbmcuY2FsbCggZWxlbSwgcHJvcHMgKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRjdXJFbGVtLmNzcyggcHJvcHMgKTtcblx0XHR9XG5cdH1cbn07XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHQvLyBvZmZzZXQoKSByZWxhdGVzIGFuIGVsZW1lbnQncyBib3JkZXIgYm94IHRvIHRoZSBkb2N1bWVudCBvcmlnaW5cblx0b2Zmc2V0OiBmdW5jdGlvbiggb3B0aW9ucyApIHtcblxuXHRcdC8vIFByZXNlcnZlIGNoYWluaW5nIGZvciBzZXR0ZXJcblx0XHRpZiAoIGFyZ3VtZW50cy5sZW5ndGggKSB7XG5cdFx0XHRyZXR1cm4gb3B0aW9ucyA9PT0gdW5kZWZpbmVkID9cblx0XHRcdFx0dGhpcyA6XG5cdFx0XHRcdHRoaXMuZWFjaCggZnVuY3Rpb24oIGkgKSB7XG5cdFx0XHRcdFx0alF1ZXJ5Lm9mZnNldC5zZXRPZmZzZXQoIHRoaXMsIG9wdGlvbnMsIGkgKTtcblx0XHRcdFx0fSApO1xuXHRcdH1cblxuXHRcdHZhciByZWN0LCB3aW4sXG5cdFx0XHRlbGVtID0gdGhpc1sgMCBdO1xuXG5cdFx0aWYgKCAhZWxlbSApIHtcblx0XHRcdHJldHVybjtcblx0XHR9XG5cblx0XHQvLyBSZXR1cm4gemVyb3MgZm9yIGRpc2Nvbm5lY3RlZCBhbmQgaGlkZGVuIChkaXNwbGF5OiBub25lKSBlbGVtZW50cyAoZ2gtMjMxMClcblx0XHQvLyBTdXBwb3J0OiBJRSA8PTExIG9ubHlcblx0XHQvLyBSdW5uaW5nIGdldEJvdW5kaW5nQ2xpZW50UmVjdCBvbiBhXG5cdFx0Ly8gZGlzY29ubmVjdGVkIG5vZGUgaW4gSUUgdGhyb3dzIGFuIGVycm9yXG5cdFx0aWYgKCAhZWxlbS5nZXRDbGllbnRSZWN0cygpLmxlbmd0aCApIHtcblx0XHRcdHJldHVybiB7IHRvcDogMCwgbGVmdDogMCB9O1xuXHRcdH1cblxuXHRcdC8vIEdldCBkb2N1bWVudC1yZWxhdGl2ZSBwb3NpdGlvbiBieSBhZGRpbmcgdmlld3BvcnQgc2Nyb2xsIHRvIHZpZXdwb3J0LXJlbGF0aXZlIGdCQ1Jcblx0XHRyZWN0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblx0XHR3aW4gPSBlbGVtLm93bmVyRG9jdW1lbnQuZGVmYXVsdFZpZXc7XG5cdFx0cmV0dXJuIHtcblx0XHRcdHRvcDogcmVjdC50b3AgKyB3aW4ucGFnZVlPZmZzZXQsXG5cdFx0XHRsZWZ0OiByZWN0LmxlZnQgKyB3aW4ucGFnZVhPZmZzZXRcblx0XHR9O1xuXHR9LFxuXG5cdC8vIHBvc2l0aW9uKCkgcmVsYXRlcyBhbiBlbGVtZW50J3MgbWFyZ2luIGJveCB0byBpdHMgb2Zmc2V0IHBhcmVudCdzIHBhZGRpbmcgYm94XG5cdC8vIFRoaXMgY29ycmVzcG9uZHMgdG8gdGhlIGJlaGF2aW9yIG9mIENTUyBhYnNvbHV0ZSBwb3NpdGlvbmluZ1xuXHRwb3NpdGlvbjogZnVuY3Rpb24oKSB7XG5cdFx0aWYgKCAhdGhpc1sgMCBdICkge1xuXHRcdFx0cmV0dXJuO1xuXHRcdH1cblxuXHRcdHZhciBvZmZzZXRQYXJlbnQsIG9mZnNldCwgZG9jLFxuXHRcdFx0ZWxlbSA9IHRoaXNbIDAgXSxcblx0XHRcdHBhcmVudE9mZnNldCA9IHsgdG9wOiAwLCBsZWZ0OiAwIH07XG5cblx0XHQvLyBwb3NpdGlvbjpmaXhlZCBlbGVtZW50cyBhcmUgb2Zmc2V0IGZyb20gdGhlIHZpZXdwb3J0LCB3aGljaCBpdHNlbGYgYWx3YXlzIGhhcyB6ZXJvIG9mZnNldFxuXHRcdGlmICggalF1ZXJ5LmNzcyggZWxlbSwgXCJwb3NpdGlvblwiICkgPT09IFwiZml4ZWRcIiApIHtcblxuXHRcdFx0Ly8gQXNzdW1lIHBvc2l0aW9uOmZpeGVkIGltcGxpZXMgYXZhaWxhYmlsaXR5IG9mIGdldEJvdW5kaW5nQ2xpZW50UmVjdFxuXHRcdFx0b2Zmc2V0ID0gZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcblxuXHRcdH0gZWxzZSB7XG5cdFx0XHRvZmZzZXQgPSB0aGlzLm9mZnNldCgpO1xuXG5cdFx0XHQvLyBBY2NvdW50IGZvciB0aGUgKnJlYWwqIG9mZnNldCBwYXJlbnQsIHdoaWNoIGNhbiBiZSB0aGUgZG9jdW1lbnQgb3IgaXRzIHJvb3QgZWxlbWVudFxuXHRcdFx0Ly8gd2hlbiBhIHN0YXRpY2FsbHkgcG9zaXRpb25lZCBlbGVtZW50IGlzIGlkZW50aWZpZWRcblx0XHRcdGRvYyA9IGVsZW0ub3duZXJEb2N1bWVudDtcblx0XHRcdG9mZnNldFBhcmVudCA9IGVsZW0ub2Zmc2V0UGFyZW50IHx8IGRvYy5kb2N1bWVudEVsZW1lbnQ7XG5cdFx0XHR3aGlsZSAoIG9mZnNldFBhcmVudCAmJlxuXHRcdFx0XHQoIG9mZnNldFBhcmVudCA9PT0gZG9jLmJvZHkgfHwgb2Zmc2V0UGFyZW50ID09PSBkb2MuZG9jdW1lbnRFbGVtZW50ICkgJiZcblx0XHRcdFx0alF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcInBvc2l0aW9uXCIgKSA9PT0gXCJzdGF0aWNcIiApIHtcblxuXHRcdFx0XHRvZmZzZXRQYXJlbnQgPSBvZmZzZXRQYXJlbnQucGFyZW50Tm9kZTtcblx0XHRcdH1cblx0XHRcdGlmICggb2Zmc2V0UGFyZW50ICYmIG9mZnNldFBhcmVudCAhPT0gZWxlbSAmJiBvZmZzZXRQYXJlbnQubm9kZVR5cGUgPT09IDEgKSB7XG5cblx0XHRcdFx0Ly8gSW5jb3Jwb3JhdGUgYm9yZGVycyBpbnRvIGl0cyBvZmZzZXQsIHNpbmNlIHRoZXkgYXJlIG91dHNpZGUgaXRzIGNvbnRlbnQgb3JpZ2luXG5cdFx0XHRcdHBhcmVudE9mZnNldCA9IGpRdWVyeSggb2Zmc2V0UGFyZW50ICkub2Zmc2V0KCk7XG5cdFx0XHRcdHBhcmVudE9mZnNldC50b3AgKz0galF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcImJvcmRlclRvcFdpZHRoXCIsIHRydWUgKTtcblx0XHRcdFx0cGFyZW50T2Zmc2V0LmxlZnQgKz0galF1ZXJ5LmNzcyggb2Zmc2V0UGFyZW50LCBcImJvcmRlckxlZnRXaWR0aFwiLCB0cnVlICk7XG5cdFx0XHR9XG5cdFx0fVxuXG5cdFx0Ly8gU3VidHJhY3QgcGFyZW50IG9mZnNldHMgYW5kIGVsZW1lbnQgbWFyZ2luc1xuXHRcdHJldHVybiB7XG5cdFx0XHR0b3A6IG9mZnNldC50b3AgLSBwYXJlbnRPZmZzZXQudG9wIC0galF1ZXJ5LmNzcyggZWxlbSwgXCJtYXJnaW5Ub3BcIiwgdHJ1ZSApLFxuXHRcdFx0bGVmdDogb2Zmc2V0LmxlZnQgLSBwYXJlbnRPZmZzZXQubGVmdCAtIGpRdWVyeS5jc3MoIGVsZW0sIFwibWFyZ2luTGVmdFwiLCB0cnVlIClcblx0XHR9O1xuXHR9LFxuXG5cdC8vIFRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuIGRvY3VtZW50RWxlbWVudCBpbiB0aGUgZm9sbG93aW5nIGNhc2VzOlxuXHQvLyAxKSBGb3IgdGhlIGVsZW1lbnQgaW5zaWRlIHRoZSBpZnJhbWUgd2l0aG91dCBvZmZzZXRQYXJlbnQsIHRoaXMgbWV0aG9kIHdpbGwgcmV0dXJuXG5cdC8vICAgIGRvY3VtZW50RWxlbWVudCBvZiB0aGUgcGFyZW50IHdpbmRvd1xuXHQvLyAyKSBGb3IgdGhlIGhpZGRlbiBvciBkZXRhY2hlZCBlbGVtZW50XG5cdC8vIDMpIEZvciBib2R5IG9yIGh0bWwgZWxlbWVudCwgaS5lLiBpbiBjYXNlIG9mIHRoZSBodG1sIG5vZGUgLSBpdCB3aWxsIHJldHVybiBpdHNlbGZcblx0Ly9cblx0Ly8gYnV0IHRob3NlIGV4Y2VwdGlvbnMgd2VyZSBuZXZlciBwcmVzZW50ZWQgYXMgYSByZWFsIGxpZmUgdXNlLWNhc2VzXG5cdC8vIGFuZCBtaWdodCBiZSBjb25zaWRlcmVkIGFzIG1vcmUgcHJlZmVyYWJsZSByZXN1bHRzLlxuXHQvL1xuXHQvLyBUaGlzIGxvZ2ljLCBob3dldmVyLCBpcyBub3QgZ3VhcmFudGVlZCBhbmQgY2FuIGNoYW5nZSBhdCBhbnkgcG9pbnQgaW4gdGhlIGZ1dHVyZVxuXHRvZmZzZXRQYXJlbnQ6IGZ1bmN0aW9uKCkge1xuXHRcdHJldHVybiB0aGlzLm1hcCggZnVuY3Rpb24oKSB7XG5cdFx0XHR2YXIgb2Zmc2V0UGFyZW50ID0gdGhpcy5vZmZzZXRQYXJlbnQ7XG5cblx0XHRcdHdoaWxlICggb2Zmc2V0UGFyZW50ICYmIGpRdWVyeS5jc3MoIG9mZnNldFBhcmVudCwgXCJwb3NpdGlvblwiICkgPT09IFwic3RhdGljXCIgKSB7XG5cdFx0XHRcdG9mZnNldFBhcmVudCA9IG9mZnNldFBhcmVudC5vZmZzZXRQYXJlbnQ7XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBvZmZzZXRQYXJlbnQgfHwgZG9jdW1lbnRFbGVtZW50O1xuXHRcdH0gKTtcblx0fVxufSApO1xuXG4vLyBDcmVhdGUgc2Nyb2xsTGVmdCBhbmQgc2Nyb2xsVG9wIG1ldGhvZHNcbmpRdWVyeS5lYWNoKCB7IHNjcm9sbExlZnQ6IFwicGFnZVhPZmZzZXRcIiwgc2Nyb2xsVG9wOiBcInBhZ2VZT2Zmc2V0XCIgfSwgZnVuY3Rpb24oIG1ldGhvZCwgcHJvcCApIHtcblx0dmFyIHRvcCA9IFwicGFnZVlPZmZzZXRcIiA9PT0gcHJvcDtcblxuXHRqUXVlcnkuZm5bIG1ldGhvZCBdID0gZnVuY3Rpb24oIHZhbCApIHtcblx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgbWV0aG9kLCB2YWwgKSB7XG5cblx0XHRcdC8vIENvYWxlc2NlIGRvY3VtZW50cyBhbmQgd2luZG93c1xuXHRcdFx0dmFyIHdpbjtcblx0XHRcdGlmICggaXNXaW5kb3coIGVsZW0gKSApIHtcblx0XHRcdFx0d2luID0gZWxlbTtcblx0XHRcdH0gZWxzZSBpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdHdpbiA9IGVsZW0uZGVmYXVsdFZpZXc7XG5cdFx0XHR9XG5cblx0XHRcdGlmICggdmFsID09PSB1bmRlZmluZWQgKSB7XG5cdFx0XHRcdHJldHVybiB3aW4gPyB3aW5bIHByb3AgXSA6IGVsZW1bIG1ldGhvZCBdO1xuXHRcdFx0fVxuXG5cdFx0XHRpZiAoIHdpbiApIHtcblx0XHRcdFx0d2luLnNjcm9sbFRvKFxuXHRcdFx0XHRcdCF0b3AgPyB2YWwgOiB3aW4ucGFnZVhPZmZzZXQsXG5cdFx0XHRcdFx0dG9wID8gdmFsIDogd2luLnBhZ2VZT2Zmc2V0XG5cdFx0XHRcdCk7XG5cblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGVsZW1bIG1ldGhvZCBdID0gdmFsO1xuXHRcdFx0fVxuXHRcdH0sIG1ldGhvZCwgdmFsLCBhcmd1bWVudHMubGVuZ3RoICk7XG5cdH07XG59ICk7XG5cbi8vIFN1cHBvcnQ6IFNhZmFyaSA8PTcgLSA5LjEsIENocm9tZSA8PTM3IC0gNDlcbi8vIEFkZCB0aGUgdG9wL2xlZnQgY3NzSG9va3MgdXNpbmcgalF1ZXJ5LmZuLnBvc2l0aW9uXG4vLyBXZWJraXQgYnVnOiBodHRwczovL2J1Z3Mud2Via2l0Lm9yZy9zaG93X2J1Zy5jZ2k/aWQ9MjkwODRcbi8vIEJsaW5rIGJ1ZzogaHR0cHM6Ly9idWdzLmNocm9taXVtLm9yZy9wL2Nocm9taXVtL2lzc3Vlcy9kZXRhaWw/aWQ9NTg5MzQ3XG4vLyBnZXRDb21wdXRlZFN0eWxlIHJldHVybnMgcGVyY2VudCB3aGVuIHNwZWNpZmllZCBmb3IgdG9wL2xlZnQvYm90dG9tL3JpZ2h0O1xuLy8gcmF0aGVyIHRoYW4gbWFrZSB0aGUgY3NzIG1vZHVsZSBkZXBlbmQgb24gdGhlIG9mZnNldCBtb2R1bGUsIGp1c3QgY2hlY2sgZm9yIGl0IGhlcmVcbmpRdWVyeS5lYWNoKCBbIFwidG9wXCIsIFwibGVmdFwiIF0sIGZ1bmN0aW9uKCBpLCBwcm9wICkge1xuXHRqUXVlcnkuY3NzSG9va3NbIHByb3AgXSA9IGFkZEdldEhvb2tJZiggc3VwcG9ydC5waXhlbFBvc2l0aW9uLFxuXHRcdGZ1bmN0aW9uKCBlbGVtLCBjb21wdXRlZCApIHtcblx0XHRcdGlmICggY29tcHV0ZWQgKSB7XG5cdFx0XHRcdGNvbXB1dGVkID0gY3VyQ1NTKCBlbGVtLCBwcm9wICk7XG5cblx0XHRcdFx0Ly8gSWYgY3VyQ1NTIHJldHVybnMgcGVyY2VudGFnZSwgZmFsbGJhY2sgdG8gb2Zmc2V0XG5cdFx0XHRcdHJldHVybiBybnVtbm9ucHgudGVzdCggY29tcHV0ZWQgKSA/XG5cdFx0XHRcdFx0alF1ZXJ5KCBlbGVtICkucG9zaXRpb24oKVsgcHJvcCBdICsgXCJweFwiIDpcblx0XHRcdFx0XHRjb21wdXRlZDtcblx0XHRcdH1cblx0XHR9XG5cdCk7XG59ICk7XG5cblxuLy8gQ3JlYXRlIGlubmVySGVpZ2h0LCBpbm5lcldpZHRoLCBoZWlnaHQsIHdpZHRoLCBvdXRlckhlaWdodCBhbmQgb3V0ZXJXaWR0aCBtZXRob2RzXG5qUXVlcnkuZWFjaCggeyBIZWlnaHQ6IFwiaGVpZ2h0XCIsIFdpZHRoOiBcIndpZHRoXCIgfSwgZnVuY3Rpb24oIG5hbWUsIHR5cGUgKSB7XG5cdGpRdWVyeS5lYWNoKCB7IHBhZGRpbmc6IFwiaW5uZXJcIiArIG5hbWUsIGNvbnRlbnQ6IHR5cGUsIFwiXCI6IFwib3V0ZXJcIiArIG5hbWUgfSxcblx0XHRmdW5jdGlvbiggZGVmYXVsdEV4dHJhLCBmdW5jTmFtZSApIHtcblxuXHRcdC8vIE1hcmdpbiBpcyBvbmx5IGZvciBvdXRlckhlaWdodCwgb3V0ZXJXaWR0aFxuXHRcdGpRdWVyeS5mblsgZnVuY05hbWUgXSA9IGZ1bmN0aW9uKCBtYXJnaW4sIHZhbHVlICkge1xuXHRcdFx0dmFyIGNoYWluYWJsZSA9IGFyZ3VtZW50cy5sZW5ndGggJiYgKCBkZWZhdWx0RXh0cmEgfHwgdHlwZW9mIG1hcmdpbiAhPT0gXCJib29sZWFuXCIgKSxcblx0XHRcdFx0ZXh0cmEgPSBkZWZhdWx0RXh0cmEgfHwgKCBtYXJnaW4gPT09IHRydWUgfHwgdmFsdWUgPT09IHRydWUgPyBcIm1hcmdpblwiIDogXCJib3JkZXJcIiApO1xuXG5cdFx0XHRyZXR1cm4gYWNjZXNzKCB0aGlzLCBmdW5jdGlvbiggZWxlbSwgdHlwZSwgdmFsdWUgKSB7XG5cdFx0XHRcdHZhciBkb2M7XG5cblx0XHRcdFx0aWYgKCBpc1dpbmRvdyggZWxlbSApICkge1xuXG5cdFx0XHRcdFx0Ly8gJCggd2luZG93ICkub3V0ZXJXaWR0aC9IZWlnaHQgcmV0dXJuIHcvaCBpbmNsdWRpbmcgc2Nyb2xsYmFycyAoZ2gtMTcyOSlcblx0XHRcdFx0XHRyZXR1cm4gZnVuY05hbWUuaW5kZXhPZiggXCJvdXRlclwiICkgPT09IDAgP1xuXHRcdFx0XHRcdFx0ZWxlbVsgXCJpbm5lclwiICsgbmFtZSBdIDpcblx0XHRcdFx0XHRcdGVsZW0uZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50WyBcImNsaWVudFwiICsgbmFtZSBdO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0Ly8gR2V0IGRvY3VtZW50IHdpZHRoIG9yIGhlaWdodFxuXHRcdFx0XHRpZiAoIGVsZW0ubm9kZVR5cGUgPT09IDkgKSB7XG5cdFx0XHRcdFx0ZG9jID0gZWxlbS5kb2N1bWVudEVsZW1lbnQ7XG5cblx0XHRcdFx0XHQvLyBFaXRoZXIgc2Nyb2xsW1dpZHRoL0hlaWdodF0gb3Igb2Zmc2V0W1dpZHRoL0hlaWdodF0gb3IgY2xpZW50W1dpZHRoL0hlaWdodF0sXG5cdFx0XHRcdFx0Ly8gd2hpY2hldmVyIGlzIGdyZWF0ZXN0XG5cdFx0XHRcdFx0cmV0dXJuIE1hdGgubWF4KFxuXHRcdFx0XHRcdFx0ZWxlbS5ib2R5WyBcInNjcm9sbFwiICsgbmFtZSBdLCBkb2NbIFwic2Nyb2xsXCIgKyBuYW1lIF0sXG5cdFx0XHRcdFx0XHRlbGVtLmJvZHlbIFwib2Zmc2V0XCIgKyBuYW1lIF0sIGRvY1sgXCJvZmZzZXRcIiArIG5hbWUgXSxcblx0XHRcdFx0XHRcdGRvY1sgXCJjbGllbnRcIiArIG5hbWUgXVxuXHRcdFx0XHRcdCk7XG5cdFx0XHRcdH1cblxuXHRcdFx0XHRyZXR1cm4gdmFsdWUgPT09IHVuZGVmaW5lZCA/XG5cblx0XHRcdFx0XHQvLyBHZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50LCByZXF1ZXN0aW5nIGJ1dCBub3QgZm9yY2luZyBwYXJzZUZsb2F0XG5cdFx0XHRcdFx0alF1ZXJ5LmNzcyggZWxlbSwgdHlwZSwgZXh0cmEgKSA6XG5cblx0XHRcdFx0XHQvLyBTZXQgd2lkdGggb3IgaGVpZ2h0IG9uIHRoZSBlbGVtZW50XG5cdFx0XHRcdFx0alF1ZXJ5LnN0eWxlKCBlbGVtLCB0eXBlLCB2YWx1ZSwgZXh0cmEgKTtcblx0XHRcdH0sIHR5cGUsIGNoYWluYWJsZSA/IG1hcmdpbiA6IHVuZGVmaW5lZCwgY2hhaW5hYmxlICk7XG5cdFx0fTtcblx0fSApO1xufSApO1xuXG5cbmpRdWVyeS5lYWNoKCAoIFwiYmx1ciBmb2N1cyBmb2N1c2luIGZvY3Vzb3V0IHJlc2l6ZSBzY3JvbGwgY2xpY2sgZGJsY2xpY2sgXCIgK1xuXHRcIm1vdXNlZG93biBtb3VzZXVwIG1vdXNlbW92ZSBtb3VzZW92ZXIgbW91c2VvdXQgbW91c2VlbnRlciBtb3VzZWxlYXZlIFwiICtcblx0XCJjaGFuZ2Ugc2VsZWN0IHN1Ym1pdCBrZXlkb3duIGtleXByZXNzIGtleXVwIGNvbnRleHRtZW51XCIgKS5zcGxpdCggXCIgXCIgKSxcblx0ZnVuY3Rpb24oIGksIG5hbWUgKSB7XG5cblx0Ly8gSGFuZGxlIGV2ZW50IGJpbmRpbmdcblx0alF1ZXJ5LmZuWyBuYW1lIF0gPSBmdW5jdGlvbiggZGF0YSwgZm4gKSB7XG5cdFx0cmV0dXJuIGFyZ3VtZW50cy5sZW5ndGggPiAwID9cblx0XHRcdHRoaXMub24oIG5hbWUsIG51bGwsIGRhdGEsIGZuICkgOlxuXHRcdFx0dGhpcy50cmlnZ2VyKCBuYW1lICk7XG5cdH07XG59ICk7XG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblx0aG92ZXI6IGZ1bmN0aW9uKCBmbk92ZXIsIGZuT3V0ICkge1xuXHRcdHJldHVybiB0aGlzLm1vdXNlZW50ZXIoIGZuT3ZlciApLm1vdXNlbGVhdmUoIGZuT3V0IHx8IGZuT3ZlciApO1xuXHR9XG59ICk7XG5cblxuXG5cbmpRdWVyeS5mbi5leHRlbmQoIHtcblxuXHRiaW5kOiBmdW5jdGlvbiggdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgbnVsbCwgZGF0YSwgZm4gKTtcblx0fSxcblx0dW5iaW5kOiBmdW5jdGlvbiggdHlwZXMsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9mZiggdHlwZXMsIG51bGwsIGZuICk7XG5cdH0sXG5cblx0ZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGRhdGEsIGZuICkge1xuXHRcdHJldHVybiB0aGlzLm9uKCB0eXBlcywgc2VsZWN0b3IsIGRhdGEsIGZuICk7XG5cdH0sXG5cdHVuZGVsZWdhdGU6IGZ1bmN0aW9uKCBzZWxlY3RvciwgdHlwZXMsIGZuICkge1xuXG5cdFx0Ly8gKCBuYW1lc3BhY2UgKSBvciAoIHNlbGVjdG9yLCB0eXBlcyBbLCBmbl0gKVxuXHRcdHJldHVybiBhcmd1bWVudHMubGVuZ3RoID09PSAxID9cblx0XHRcdHRoaXMub2ZmKCBzZWxlY3RvciwgXCIqKlwiICkgOlxuXHRcdFx0dGhpcy5vZmYoIHR5cGVzLCBzZWxlY3RvciB8fCBcIioqXCIsIGZuICk7XG5cdH1cbn0gKTtcblxuLy8gQmluZCBhIGZ1bmN0aW9uIHRvIGEgY29udGV4dCwgb3B0aW9uYWxseSBwYXJ0aWFsbHkgYXBwbHlpbmcgYW55XG4vLyBhcmd1bWVudHMuXG4vLyBqUXVlcnkucHJveHkgaXMgZGVwcmVjYXRlZCB0byBwcm9tb3RlIHN0YW5kYXJkcyAoc3BlY2lmaWNhbGx5IEZ1bmN0aW9uI2JpbmQpXG4vLyBIb3dldmVyLCBpdCBpcyBub3Qgc2xhdGVkIGZvciByZW1vdmFsIGFueSB0aW1lIHNvb25cbmpRdWVyeS5wcm94eSA9IGZ1bmN0aW9uKCBmbiwgY29udGV4dCApIHtcblx0dmFyIHRtcCwgYXJncywgcHJveHk7XG5cblx0aWYgKCB0eXBlb2YgY29udGV4dCA9PT0gXCJzdHJpbmdcIiApIHtcblx0XHR0bXAgPSBmblsgY29udGV4dCBdO1xuXHRcdGNvbnRleHQgPSBmbjtcblx0XHRmbiA9IHRtcDtcblx0fVxuXG5cdC8vIFF1aWNrIGNoZWNrIHRvIGRldGVybWluZSBpZiB0YXJnZXQgaXMgY2FsbGFibGUsIGluIHRoZSBzcGVjXG5cdC8vIHRoaXMgdGhyb3dzIGEgVHlwZUVycm9yLCBidXQgd2Ugd2lsbCBqdXN0IHJldHVybiB1bmRlZmluZWQuXG5cdGlmICggIWlzRnVuY3Rpb24oIGZuICkgKSB7XG5cdFx0cmV0dXJuIHVuZGVmaW5lZDtcblx0fVxuXG5cdC8vIFNpbXVsYXRlZCBiaW5kXG5cdGFyZ3MgPSBzbGljZS5jYWxsKCBhcmd1bWVudHMsIDIgKTtcblx0cHJveHkgPSBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4gZm4uYXBwbHkoIGNvbnRleHQgfHwgdGhpcywgYXJncy5jb25jYXQoIHNsaWNlLmNhbGwoIGFyZ3VtZW50cyApICkgKTtcblx0fTtcblxuXHQvLyBTZXQgdGhlIGd1aWQgb2YgdW5pcXVlIGhhbmRsZXIgdG8gdGhlIHNhbWUgb2Ygb3JpZ2luYWwgaGFuZGxlciwgc28gaXQgY2FuIGJlIHJlbW92ZWRcblx0cHJveHkuZ3VpZCA9IGZuLmd1aWQgPSBmbi5ndWlkIHx8IGpRdWVyeS5ndWlkKys7XG5cblx0cmV0dXJuIHByb3h5O1xufTtcblxualF1ZXJ5LmhvbGRSZWFkeSA9IGZ1bmN0aW9uKCBob2xkICkge1xuXHRpZiAoIGhvbGQgKSB7XG5cdFx0alF1ZXJ5LnJlYWR5V2FpdCsrO1xuXHR9IGVsc2Uge1xuXHRcdGpRdWVyeS5yZWFkeSggdHJ1ZSApO1xuXHR9XG59O1xualF1ZXJ5LmlzQXJyYXkgPSBBcnJheS5pc0FycmF5O1xualF1ZXJ5LnBhcnNlSlNPTiA9IEpTT04ucGFyc2U7XG5qUXVlcnkubm9kZU5hbWUgPSBub2RlTmFtZTtcbmpRdWVyeS5pc0Z1bmN0aW9uID0gaXNGdW5jdGlvbjtcbmpRdWVyeS5pc1dpbmRvdyA9IGlzV2luZG93O1xualF1ZXJ5LmNhbWVsQ2FzZSA9IGNhbWVsQ2FzZTtcbmpRdWVyeS50eXBlID0gdG9UeXBlO1xuXG5qUXVlcnkubm93ID0gRGF0ZS5ub3c7XG5cbmpRdWVyeS5pc051bWVyaWMgPSBmdW5jdGlvbiggb2JqICkge1xuXG5cdC8vIEFzIG9mIGpRdWVyeSAzLjAsIGlzTnVtZXJpYyBpcyBsaW1pdGVkIHRvXG5cdC8vIHN0cmluZ3MgYW5kIG51bWJlcnMgKHByaW1pdGl2ZXMgb3Igb2JqZWN0cylcblx0Ly8gdGhhdCBjYW4gYmUgY29lcmNlZCB0byBmaW5pdGUgbnVtYmVycyAoZ2gtMjY2Milcblx0dmFyIHR5cGUgPSBqUXVlcnkudHlwZSggb2JqICk7XG5cdHJldHVybiAoIHR5cGUgPT09IFwibnVtYmVyXCIgfHwgdHlwZSA9PT0gXCJzdHJpbmdcIiApICYmXG5cblx0XHQvLyBwYXJzZUZsb2F0IE5hTnMgbnVtZXJpYy1jYXN0IGZhbHNlIHBvc2l0aXZlcyAoXCJcIilcblx0XHQvLyAuLi5idXQgbWlzaW50ZXJwcmV0cyBsZWFkaW5nLW51bWJlciBzdHJpbmdzLCBwYXJ0aWN1bGFybHkgaGV4IGxpdGVyYWxzIChcIjB4Li4uXCIpXG5cdFx0Ly8gc3VidHJhY3Rpb24gZm9yY2VzIGluZmluaXRpZXMgdG8gTmFOXG5cdFx0IWlzTmFOKCBvYmogLSBwYXJzZUZsb2F0KCBvYmogKSApO1xufTtcblxuXG5cblxuLy8gUmVnaXN0ZXIgYXMgYSBuYW1lZCBBTUQgbW9kdWxlLCBzaW5jZSBqUXVlcnkgY2FuIGJlIGNvbmNhdGVuYXRlZCB3aXRoIG90aGVyXG4vLyBmaWxlcyB0aGF0IG1heSB1c2UgZGVmaW5lLCBidXQgbm90IHZpYSBhIHByb3BlciBjb25jYXRlbmF0aW9uIHNjcmlwdCB0aGF0XG4vLyB1bmRlcnN0YW5kcyBhbm9ueW1vdXMgQU1EIG1vZHVsZXMuIEEgbmFtZWQgQU1EIGlzIHNhZmVzdCBhbmQgbW9zdCByb2J1c3Rcbi8vIHdheSB0byByZWdpc3Rlci4gTG93ZXJjYXNlIGpxdWVyeSBpcyB1c2VkIGJlY2F1c2UgQU1EIG1vZHVsZSBuYW1lcyBhcmVcbi8vIGRlcml2ZWQgZnJvbSBmaWxlIG5hbWVzLCBhbmQgalF1ZXJ5IGlzIG5vcm1hbGx5IGRlbGl2ZXJlZCBpbiBhIGxvd2VyY2FzZVxuLy8gZmlsZSBuYW1lLiBEbyB0aGlzIGFmdGVyIGNyZWF0aW5nIHRoZSBnbG9iYWwgc28gdGhhdCBpZiBhbiBBTUQgbW9kdWxlIHdhbnRzXG4vLyB0byBjYWxsIG5vQ29uZmxpY3QgdG8gaGlkZSB0aGlzIHZlcnNpb24gb2YgalF1ZXJ5LCBpdCB3aWxsIHdvcmsuXG5cbi8vIE5vdGUgdGhhdCBmb3IgbWF4aW11bSBwb3J0YWJpbGl0eSwgbGlicmFyaWVzIHRoYXQgYXJlIG5vdCBqUXVlcnkgc2hvdWxkXG4vLyBkZWNsYXJlIHRoZW1zZWx2ZXMgYXMgYW5vbnltb3VzIG1vZHVsZXMsIGFuZCBhdm9pZCBzZXR0aW5nIGEgZ2xvYmFsIGlmIGFuXG4vLyBBTUQgbG9hZGVyIGlzIHByZXNlbnQuIGpRdWVyeSBpcyBhIHNwZWNpYWwgY2FzZS4gRm9yIG1vcmUgaW5mb3JtYXRpb24sIHNlZVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL2pyYnVya2UvcmVxdWlyZWpzL3dpa2kvVXBkYXRpbmctZXhpc3RpbmctbGlicmFyaWVzI3dpa2ktYW5vblxuXG5pZiAoIHR5cGVvZiBkZWZpbmUgPT09IFwiZnVuY3Rpb25cIiAmJiBkZWZpbmUuYW1kICkge1xuXHRkZWZpbmUoIFwianF1ZXJ5XCIsIFtdLCBmdW5jdGlvbigpIHtcblx0XHRyZXR1cm4galF1ZXJ5O1xuXHR9ICk7XG59XG5cblxuXG5cbnZhclxuXG5cdC8vIE1hcCBvdmVyIGpRdWVyeSBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfalF1ZXJ5ID0gd2luZG93LmpRdWVyeSxcblxuXHQvLyBNYXAgb3ZlciB0aGUgJCBpbiBjYXNlIG9mIG92ZXJ3cml0ZVxuXHRfJCA9IHdpbmRvdy4kO1xuXG5qUXVlcnkubm9Db25mbGljdCA9IGZ1bmN0aW9uKCBkZWVwICkge1xuXHRpZiAoIHdpbmRvdy4kID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LiQgPSBfJDtcblx0fVxuXG5cdGlmICggZGVlcCAmJiB3aW5kb3cualF1ZXJ5ID09PSBqUXVlcnkgKSB7XG5cdFx0d2luZG93LmpRdWVyeSA9IF9qUXVlcnk7XG5cdH1cblxuXHRyZXR1cm4galF1ZXJ5O1xufTtcblxuLy8gRXhwb3NlIGpRdWVyeSBhbmQgJCBpZGVudGlmaWVycywgZXZlbiBpbiBBTURcbi8vICgjNzEwMiNjb21tZW50OjEwLCBodHRwczovL2dpdGh1Yi5jb20vanF1ZXJ5L2pxdWVyeS9wdWxsLzU1Nylcbi8vIGFuZCBDb21tb25KUyBmb3IgYnJvd3NlciBlbXVsYXRvcnMgKCMxMzU2NilcbmlmICggIW5vR2xvYmFsICkge1xuXHR3aW5kb3cualF1ZXJ5ID0gd2luZG93LiQgPSBqUXVlcnk7XG59XG5cblxuXG5cbnJldHVybiBqUXVlcnk7XG59ICk7XG4vKipcbiAqIE93bCBDYXJvdXNlbCB2Mi4zLjRcbiAqIENvcHlyaWdodCAyMDEzLTIwMTggRGF2aWQgRGV1dHNjaFxuICogTGljZW5zZWQgdW5kZXI6IFNFRSBMSUNFTlNFIElOIGh0dHBzOi8vZ2l0aHViLmNvbS9Pd2xDYXJvdXNlbDIvT3dsQ2Fyb3VzZWwyL2Jsb2IvbWFzdGVyL0xJQ0VOU0VcbiAqL1xuIWZ1bmN0aW9uKGEsYixjLGQpe2Z1bmN0aW9uIGUoYixjKXt0aGlzLnNldHRpbmdzPW51bGwsdGhpcy5vcHRpb25zPWEuZXh0ZW5kKHt9LGUuRGVmYXVsdHMsYyksdGhpcy4kZWxlbWVudD1hKGIpLHRoaXMuX2hhbmRsZXJzPXt9LHRoaXMuX3BsdWdpbnM9e30sdGhpcy5fc3VwcmVzcz17fSx0aGlzLl9jdXJyZW50PW51bGwsdGhpcy5fc3BlZWQ9bnVsbCx0aGlzLl9jb29yZGluYXRlcz1bXSx0aGlzLl9icmVha3BvaW50PW51bGwsdGhpcy5fd2lkdGg9bnVsbCx0aGlzLl9pdGVtcz1bXSx0aGlzLl9jbG9uZXM9W10sdGhpcy5fbWVyZ2Vycz1bXSx0aGlzLl93aWR0aHM9W10sdGhpcy5faW52YWxpZGF0ZWQ9e30sdGhpcy5fcGlwZT1bXSx0aGlzLl9kcmFnPXt0aW1lOm51bGwsdGFyZ2V0Om51bGwscG9pbnRlcjpudWxsLHN0YWdlOntzdGFydDpudWxsLGN1cnJlbnQ6bnVsbH0sZGlyZWN0aW9uOm51bGx9LHRoaXMuX3N0YXRlcz17Y3VycmVudDp7fSx0YWdzOntpbml0aWFsaXppbmc6W1wiYnVzeVwiXSxhbmltYXRpbmc6W1wiYnVzeVwiXSxkcmFnZ2luZzpbXCJpbnRlcmFjdGluZ1wiXX19LGEuZWFjaChbXCJvblJlc2l6ZVwiLFwib25UaHJvdHRsZWRSZXNpemVcIl0sYS5wcm94eShmdW5jdGlvbihiLGMpe3RoaXMuX2hhbmRsZXJzW2NdPWEucHJveHkodGhpc1tjXSx0aGlzKX0sdGhpcykpLGEuZWFjaChlLlBsdWdpbnMsYS5wcm94eShmdW5jdGlvbihhLGIpe3RoaXMuX3BsdWdpbnNbYS5jaGFyQXQoMCkudG9Mb3dlckNhc2UoKSthLnNsaWNlKDEpXT1uZXcgYih0aGlzKX0sdGhpcykpLGEuZWFjaChlLldvcmtlcnMsYS5wcm94eShmdW5jdGlvbihiLGMpe3RoaXMuX3BpcGUucHVzaCh7ZmlsdGVyOmMuZmlsdGVyLHJ1bjphLnByb3h5KGMucnVuLHRoaXMpfSl9LHRoaXMpKSx0aGlzLnNldHVwKCksdGhpcy5pbml0aWFsaXplKCl9ZS5EZWZhdWx0cz17aXRlbXM6Myxsb29wOiExLGNlbnRlcjohMSxyZXdpbmQ6ITEsY2hlY2tWaXNpYmlsaXR5OiEwLG1vdXNlRHJhZzohMCx0b3VjaERyYWc6ITAscHVsbERyYWc6ITAsZnJlZURyYWc6ITEsbWFyZ2luOjAsc3RhZ2VQYWRkaW5nOjAsbWVyZ2U6ITEsbWVyZ2VGaXQ6ITAsYXV0b1dpZHRoOiExLHN0YXJ0UG9zaXRpb246MCxydGw6ITEsc21hcnRTcGVlZDoyNTAsZmx1aWRTcGVlZDohMSxkcmFnRW5kU3BlZWQ6ITEscmVzcG9uc2l2ZTp7fSxyZXNwb25zaXZlUmVmcmVzaFJhdGU6MjAwLHJlc3BvbnNpdmVCYXNlRWxlbWVudDpiLGZhbGxiYWNrRWFzaW5nOlwic3dpbmdcIixzbGlkZVRyYW5zaXRpb246XCJcIixpbmZvOiExLG5lc3RlZEl0ZW1TZWxlY3RvcjohMSxpdGVtRWxlbWVudDpcImRpdlwiLHN0YWdlRWxlbWVudDpcImRpdlwiLHJlZnJlc2hDbGFzczpcIm93bC1yZWZyZXNoXCIsbG9hZGVkQ2xhc3M6XCJvd2wtbG9hZGVkXCIsbG9hZGluZ0NsYXNzOlwib3dsLWxvYWRpbmdcIixydGxDbGFzczpcIm93bC1ydGxcIixyZXNwb25zaXZlQ2xhc3M6XCJvd2wtcmVzcG9uc2l2ZVwiLGRyYWdDbGFzczpcIm93bC1kcmFnXCIsaXRlbUNsYXNzOlwib3dsLWl0ZW1cIixzdGFnZUNsYXNzOlwib3dsLXN0YWdlXCIsc3RhZ2VPdXRlckNsYXNzOlwib3dsLXN0YWdlLW91dGVyXCIsZ3JhYkNsYXNzOlwib3dsLWdyYWJcIn0sZS5XaWR0aD17RGVmYXVsdDpcImRlZmF1bHRcIixJbm5lcjpcImlubmVyXCIsT3V0ZXI6XCJvdXRlclwifSxlLlR5cGU9e0V2ZW50OlwiZXZlbnRcIixTdGF0ZTpcInN0YXRlXCJ9LGUuUGx1Z2lucz17fSxlLldvcmtlcnM9W3tmaWx0ZXI6W1wid2lkdGhcIixcInNldHRpbmdzXCJdLHJ1bjpmdW5jdGlvbigpe3RoaXMuX3dpZHRoPXRoaXMuJGVsZW1lbnQud2lkdGgoKX19LHtmaWx0ZXI6W1wid2lkdGhcIixcIml0ZW1zXCIsXCJzZXR0aW5nc1wiXSxydW46ZnVuY3Rpb24oYSl7YS5jdXJyZW50PXRoaXMuX2l0ZW1zJiZ0aGlzLl9pdGVtc1t0aGlzLnJlbGF0aXZlKHRoaXMuX2N1cnJlbnQpXX19LHtmaWx0ZXI6W1wiaXRlbXNcIixcInNldHRpbmdzXCJdLHJ1bjpmdW5jdGlvbigpe3RoaXMuJHN0YWdlLmNoaWxkcmVuKFwiLmNsb25lZFwiKS5yZW1vdmUoKX19LHtmaWx0ZXI6W1wid2lkdGhcIixcIml0ZW1zXCIsXCJzZXR0aW5nc1wiXSxydW46ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5zZXR0aW5ncy5tYXJnaW58fFwiXCIsYz0hdGhpcy5zZXR0aW5ncy5hdXRvV2lkdGgsZD10aGlzLnNldHRpbmdzLnJ0bCxlPXt3aWR0aDpcImF1dG9cIixcIm1hcmdpbi1sZWZ0XCI6ZD9iOlwiXCIsXCJtYXJnaW4tcmlnaHRcIjpkP1wiXCI6Yn07IWMmJnRoaXMuJHN0YWdlLmNoaWxkcmVuKCkuY3NzKGUpLGEuY3NzPWV9fSx7ZmlsdGVyOltcIndpZHRoXCIsXCJpdGVtc1wiLFwic2V0dGluZ3NcIl0scnVuOmZ1bmN0aW9uKGEpe3ZhciBiPSh0aGlzLndpZHRoKCkvdGhpcy5zZXR0aW5ncy5pdGVtcykudG9GaXhlZCgzKS10aGlzLnNldHRpbmdzLm1hcmdpbixjPW51bGwsZD10aGlzLl9pdGVtcy5sZW5ndGgsZT0hdGhpcy5zZXR0aW5ncy5hdXRvV2lkdGgsZj1bXTtmb3IoYS5pdGVtcz17bWVyZ2U6ITEsd2lkdGg6Yn07ZC0tOyljPXRoaXMuX21lcmdlcnNbZF0sYz10aGlzLnNldHRpbmdzLm1lcmdlRml0JiZNYXRoLm1pbihjLHRoaXMuc2V0dGluZ3MuaXRlbXMpfHxjLGEuaXRlbXMubWVyZ2U9Yz4xfHxhLml0ZW1zLm1lcmdlLGZbZF09ZT9iKmM6dGhpcy5faXRlbXNbZF0ud2lkdGgoKTt0aGlzLl93aWR0aHM9Zn19LHtmaWx0ZXI6W1wiaXRlbXNcIixcInNldHRpbmdzXCJdLHJ1bjpmdW5jdGlvbigpe3ZhciBiPVtdLGM9dGhpcy5faXRlbXMsZD10aGlzLnNldHRpbmdzLGU9TWF0aC5tYXgoMipkLml0ZW1zLDQpLGY9MipNYXRoLmNlaWwoYy5sZW5ndGgvMiksZz1kLmxvb3AmJmMubGVuZ3RoP2QucmV3aW5kP2U6TWF0aC5tYXgoZSxmKTowLGg9XCJcIixpPVwiXCI7Zm9yKGcvPTI7Zz4wOyliLnB1c2godGhpcy5ub3JtYWxpemUoYi5sZW5ndGgvMiwhMCkpLGgrPWNbYltiLmxlbmd0aC0xXV1bMF0ub3V0ZXJIVE1MLGIucHVzaCh0aGlzLm5vcm1hbGl6ZShjLmxlbmd0aC0xLShiLmxlbmd0aC0xKS8yLCEwKSksaT1jW2JbYi5sZW5ndGgtMV1dWzBdLm91dGVySFRNTCtpLGctPTE7dGhpcy5fY2xvbmVzPWIsYShoKS5hZGRDbGFzcyhcImNsb25lZFwiKS5hcHBlbmRUbyh0aGlzLiRzdGFnZSksYShpKS5hZGRDbGFzcyhcImNsb25lZFwiKS5wcmVwZW5kVG8odGhpcy4kc3RhZ2UpfX0se2ZpbHRlcjpbXCJ3aWR0aFwiLFwiaXRlbXNcIixcInNldHRpbmdzXCJdLHJ1bjpmdW5jdGlvbigpe2Zvcih2YXIgYT10aGlzLnNldHRpbmdzLnJ0bD8xOi0xLGI9dGhpcy5fY2xvbmVzLmxlbmd0aCt0aGlzLl9pdGVtcy5sZW5ndGgsYz0tMSxkPTAsZT0wLGY9W107KytjPGI7KWQ9ZltjLTFdfHwwLGU9dGhpcy5fd2lkdGhzW3RoaXMucmVsYXRpdmUoYyldK3RoaXMuc2V0dGluZ3MubWFyZ2luLGYucHVzaChkK2UqYSk7dGhpcy5fY29vcmRpbmF0ZXM9Zn19LHtmaWx0ZXI6W1wid2lkdGhcIixcIml0ZW1zXCIsXCJzZXR0aW5nc1wiXSxydW46ZnVuY3Rpb24oKXt2YXIgYT10aGlzLnNldHRpbmdzLnN0YWdlUGFkZGluZyxiPXRoaXMuX2Nvb3JkaW5hdGVzLGM9e3dpZHRoOk1hdGguY2VpbChNYXRoLmFicyhiW2IubGVuZ3RoLTFdKSkrMiphLFwicGFkZGluZy1sZWZ0XCI6YXx8XCJcIixcInBhZGRpbmctcmlnaHRcIjphfHxcIlwifTt0aGlzLiRzdGFnZS5jc3MoYyl9fSx7ZmlsdGVyOltcIndpZHRoXCIsXCJpdGVtc1wiLFwic2V0dGluZ3NcIl0scnVuOmZ1bmN0aW9uKGEpe3ZhciBiPXRoaXMuX2Nvb3JkaW5hdGVzLmxlbmd0aCxjPSF0aGlzLnNldHRpbmdzLmF1dG9XaWR0aCxkPXRoaXMuJHN0YWdlLmNoaWxkcmVuKCk7aWYoYyYmYS5pdGVtcy5tZXJnZSlmb3IoO2ItLTspYS5jc3Mud2lkdGg9dGhpcy5fd2lkdGhzW3RoaXMucmVsYXRpdmUoYildLGQuZXEoYikuY3NzKGEuY3NzKTtlbHNlIGMmJihhLmNzcy53aWR0aD1hLml0ZW1zLndpZHRoLGQuY3NzKGEuY3NzKSl9fSx7ZmlsdGVyOltcIml0ZW1zXCJdLHJ1bjpmdW5jdGlvbigpe3RoaXMuX2Nvb3JkaW5hdGVzLmxlbmd0aDwxJiZ0aGlzLiRzdGFnZS5yZW1vdmVBdHRyKFwic3R5bGVcIil9fSx7ZmlsdGVyOltcIndpZHRoXCIsXCJpdGVtc1wiLFwic2V0dGluZ3NcIl0scnVuOmZ1bmN0aW9uKGEpe2EuY3VycmVudD1hLmN1cnJlbnQ/dGhpcy4kc3RhZ2UuY2hpbGRyZW4oKS5pbmRleChhLmN1cnJlbnQpOjAsYS5jdXJyZW50PU1hdGgubWF4KHRoaXMubWluaW11bSgpLE1hdGgubWluKHRoaXMubWF4aW11bSgpLGEuY3VycmVudCkpLHRoaXMucmVzZXQoYS5jdXJyZW50KX19LHtmaWx0ZXI6W1wicG9zaXRpb25cIl0scnVuOmZ1bmN0aW9uKCl7dGhpcy5hbmltYXRlKHRoaXMuY29vcmRpbmF0ZXModGhpcy5fY3VycmVudCkpfX0se2ZpbHRlcjpbXCJ3aWR0aFwiLFwicG9zaXRpb25cIixcIml0ZW1zXCIsXCJzZXR0aW5nc1wiXSxydW46ZnVuY3Rpb24oKXt2YXIgYSxiLGMsZCxlPXRoaXMuc2V0dGluZ3MucnRsPzE6LTEsZj0yKnRoaXMuc2V0dGluZ3Muc3RhZ2VQYWRkaW5nLGc9dGhpcy5jb29yZGluYXRlcyh0aGlzLmN1cnJlbnQoKSkrZixoPWcrdGhpcy53aWR0aCgpKmUsaT1bXTtmb3IoYz0wLGQ9dGhpcy5fY29vcmRpbmF0ZXMubGVuZ3RoO2M8ZDtjKyspYT10aGlzLl9jb29yZGluYXRlc1tjLTFdfHwwLGI9TWF0aC5hYnModGhpcy5fY29vcmRpbmF0ZXNbY10pK2YqZSwodGhpcy5vcChhLFwiPD1cIixnKSYmdGhpcy5vcChhLFwiPlwiLGgpfHx0aGlzLm9wKGIsXCI8XCIsZykmJnRoaXMub3AoYixcIj5cIixoKSkmJmkucHVzaChjKTt0aGlzLiRzdGFnZS5jaGlsZHJlbihcIi5hY3RpdmVcIikucmVtb3ZlQ2xhc3MoXCJhY3RpdmVcIiksdGhpcy4kc3RhZ2UuY2hpbGRyZW4oXCI6ZXEoXCIraS5qb2luKFwiKSwgOmVxKFwiKStcIilcIikuYWRkQ2xhc3MoXCJhY3RpdmVcIiksdGhpcy4kc3RhZ2UuY2hpbGRyZW4oXCIuY2VudGVyXCIpLnJlbW92ZUNsYXNzKFwiY2VudGVyXCIpLHRoaXMuc2V0dGluZ3MuY2VudGVyJiZ0aGlzLiRzdGFnZS5jaGlsZHJlbigpLmVxKHRoaXMuY3VycmVudCgpKS5hZGRDbGFzcyhcImNlbnRlclwiKX19XSxlLnByb3RvdHlwZS5pbml0aWFsaXplU3RhZ2U9ZnVuY3Rpb24oKXt0aGlzLiRzdGFnZT10aGlzLiRlbGVtZW50LmZpbmQoXCIuXCIrdGhpcy5zZXR0aW5ncy5zdGFnZUNsYXNzKSx0aGlzLiRzdGFnZS5sZW5ndGh8fCh0aGlzLiRlbGVtZW50LmFkZENsYXNzKHRoaXMub3B0aW9ucy5sb2FkaW5nQ2xhc3MpLHRoaXMuJHN0YWdlPWEoXCI8XCIrdGhpcy5zZXR0aW5ncy5zdGFnZUVsZW1lbnQrXCI+XCIse2NsYXNzOnRoaXMuc2V0dGluZ3Muc3RhZ2VDbGFzc30pLndyYXAoYShcIjxkaXYvPlwiLHtjbGFzczp0aGlzLnNldHRpbmdzLnN0YWdlT3V0ZXJDbGFzc30pKSx0aGlzLiRlbGVtZW50LmFwcGVuZCh0aGlzLiRzdGFnZS5wYXJlbnQoKSkpfSxlLnByb3RvdHlwZS5pbml0aWFsaXplSXRlbXM9ZnVuY3Rpb24oKXt2YXIgYj10aGlzLiRlbGVtZW50LmZpbmQoXCIub3dsLWl0ZW1cIik7aWYoYi5sZW5ndGgpcmV0dXJuIHRoaXMuX2l0ZW1zPWIuZ2V0KCkubWFwKGZ1bmN0aW9uKGIpe3JldHVybiBhKGIpfSksdGhpcy5fbWVyZ2Vycz10aGlzLl9pdGVtcy5tYXAoZnVuY3Rpb24oKXtyZXR1cm4gMX0pLHZvaWQgdGhpcy5yZWZyZXNoKCk7dGhpcy5yZXBsYWNlKHRoaXMuJGVsZW1lbnQuY2hpbGRyZW4oKS5ub3QodGhpcy4kc3RhZ2UucGFyZW50KCkpKSx0aGlzLmlzVmlzaWJsZSgpP3RoaXMucmVmcmVzaCgpOnRoaXMuaW52YWxpZGF0ZShcIndpZHRoXCIpLHRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmxvYWRpbmdDbGFzcykuYWRkQ2xhc3ModGhpcy5vcHRpb25zLmxvYWRlZENsYXNzKX0sZS5wcm90b3R5cGUuaW5pdGlhbGl6ZT1mdW5jdGlvbigpe2lmKHRoaXMuZW50ZXIoXCJpbml0aWFsaXppbmdcIiksdGhpcy50cmlnZ2VyKFwiaW5pdGlhbGl6ZVwiKSx0aGlzLiRlbGVtZW50LnRvZ2dsZUNsYXNzKHRoaXMuc2V0dGluZ3MucnRsQ2xhc3MsdGhpcy5zZXR0aW5ncy5ydGwpLHRoaXMuc2V0dGluZ3MuYXV0b1dpZHRoJiYhdGhpcy5pcyhcInByZS1sb2FkaW5nXCIpKXt2YXIgYSxiLGM7YT10aGlzLiRlbGVtZW50LmZpbmQoXCJpbWdcIiksYj10aGlzLnNldHRpbmdzLm5lc3RlZEl0ZW1TZWxlY3Rvcj9cIi5cIit0aGlzLnNldHRpbmdzLm5lc3RlZEl0ZW1TZWxlY3RvcjpkLGM9dGhpcy4kZWxlbWVudC5jaGlsZHJlbihiKS53aWR0aCgpLGEubGVuZ3RoJiZjPD0wJiZ0aGlzLnByZWxvYWRBdXRvV2lkdGhJbWFnZXMoYSl9dGhpcy5pbml0aWFsaXplU3RhZ2UoKSx0aGlzLmluaXRpYWxpemVJdGVtcygpLHRoaXMucmVnaXN0ZXJFdmVudEhhbmRsZXJzKCksdGhpcy5sZWF2ZShcImluaXRpYWxpemluZ1wiKSx0aGlzLnRyaWdnZXIoXCJpbml0aWFsaXplZFwiKX0sZS5wcm90b3R5cGUuaXNWaXNpYmxlPWZ1bmN0aW9uKCl7cmV0dXJuIXRoaXMuc2V0dGluZ3MuY2hlY2tWaXNpYmlsaXR5fHx0aGlzLiRlbGVtZW50LmlzKFwiOnZpc2libGVcIil9LGUucHJvdG90eXBlLnNldHVwPWZ1bmN0aW9uKCl7dmFyIGI9dGhpcy52aWV3cG9ydCgpLGM9dGhpcy5vcHRpb25zLnJlc3BvbnNpdmUsZD0tMSxlPW51bGw7Yz8oYS5lYWNoKGMsZnVuY3Rpb24oYSl7YTw9YiYmYT5kJiYoZD1OdW1iZXIoYSkpfSksZT1hLmV4dGVuZCh7fSx0aGlzLm9wdGlvbnMsY1tkXSksXCJmdW5jdGlvblwiPT10eXBlb2YgZS5zdGFnZVBhZGRpbmcmJihlLnN0YWdlUGFkZGluZz1lLnN0YWdlUGFkZGluZygpKSxkZWxldGUgZS5yZXNwb25zaXZlLGUucmVzcG9uc2l2ZUNsYXNzJiZ0aGlzLiRlbGVtZW50LmF0dHIoXCJjbGFzc1wiLHRoaXMuJGVsZW1lbnQuYXR0cihcImNsYXNzXCIpLnJlcGxhY2UobmV3IFJlZ0V4cChcIihcIit0aGlzLm9wdGlvbnMucmVzcG9uc2l2ZUNsYXNzK1wiLSlcXFxcUytcXFxcc1wiLFwiZ1wiKSxcIiQxXCIrZCkpKTplPWEuZXh0ZW5kKHt9LHRoaXMub3B0aW9ucyksdGhpcy50cmlnZ2VyKFwiY2hhbmdlXCIse3Byb3BlcnR5OntuYW1lOlwic2V0dGluZ3NcIix2YWx1ZTplfX0pLHRoaXMuX2JyZWFrcG9pbnQ9ZCx0aGlzLnNldHRpbmdzPWUsdGhpcy5pbnZhbGlkYXRlKFwic2V0dGluZ3NcIiksdGhpcy50cmlnZ2VyKFwiY2hhbmdlZFwiLHtwcm9wZXJ0eTp7bmFtZTpcInNldHRpbmdzXCIsdmFsdWU6dGhpcy5zZXR0aW5nc319KX0sZS5wcm90b3R5cGUub3B0aW9uc0xvZ2ljPWZ1bmN0aW9uKCl7dGhpcy5zZXR0aW5ncy5hdXRvV2lkdGgmJih0aGlzLnNldHRpbmdzLnN0YWdlUGFkZGluZz0hMSx0aGlzLnNldHRpbmdzLm1lcmdlPSExKX0sZS5wcm90b3R5cGUucHJlcGFyZT1mdW5jdGlvbihiKXt2YXIgYz10aGlzLnRyaWdnZXIoXCJwcmVwYXJlXCIse2NvbnRlbnQ6Yn0pO3JldHVybiBjLmRhdGF8fChjLmRhdGE9YShcIjxcIit0aGlzLnNldHRpbmdzLml0ZW1FbGVtZW50K1wiLz5cIikuYWRkQ2xhc3ModGhpcy5vcHRpb25zLml0ZW1DbGFzcykuYXBwZW5kKGIpKSx0aGlzLnRyaWdnZXIoXCJwcmVwYXJlZFwiLHtjb250ZW50OmMuZGF0YX0pLGMuZGF0YX0sZS5wcm90b3R5cGUudXBkYXRlPWZ1bmN0aW9uKCl7Zm9yKHZhciBiPTAsYz10aGlzLl9waXBlLmxlbmd0aCxkPWEucHJveHkoZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXNbYV19LHRoaXMuX2ludmFsaWRhdGVkKSxlPXt9O2I8YzspKHRoaXMuX2ludmFsaWRhdGVkLmFsbHx8YS5ncmVwKHRoaXMuX3BpcGVbYl0uZmlsdGVyLGQpLmxlbmd0aD4wKSYmdGhpcy5fcGlwZVtiXS5ydW4oZSksYisrO3RoaXMuX2ludmFsaWRhdGVkPXt9LCF0aGlzLmlzKFwidmFsaWRcIikmJnRoaXMuZW50ZXIoXCJ2YWxpZFwiKX0sZS5wcm90b3R5cGUud2lkdGg9ZnVuY3Rpb24oYSl7c3dpdGNoKGE9YXx8ZS5XaWR0aC5EZWZhdWx0KXtjYXNlIGUuV2lkdGguSW5uZXI6Y2FzZSBlLldpZHRoLk91dGVyOnJldHVybiB0aGlzLl93aWR0aDtkZWZhdWx0OnJldHVybiB0aGlzLl93aWR0aC0yKnRoaXMuc2V0dGluZ3Muc3RhZ2VQYWRkaW5nK3RoaXMuc2V0dGluZ3MubWFyZ2lufX0sZS5wcm90b3R5cGUucmVmcmVzaD1mdW5jdGlvbigpe3RoaXMuZW50ZXIoXCJyZWZyZXNoaW5nXCIpLHRoaXMudHJpZ2dlcihcInJlZnJlc2hcIiksdGhpcy5zZXR1cCgpLHRoaXMub3B0aW9uc0xvZ2ljKCksdGhpcy4kZWxlbWVudC5hZGRDbGFzcyh0aGlzLm9wdGlvbnMucmVmcmVzaENsYXNzKSx0aGlzLnVwZGF0ZSgpLHRoaXMuJGVsZW1lbnQucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLnJlZnJlc2hDbGFzcyksdGhpcy5sZWF2ZShcInJlZnJlc2hpbmdcIiksdGhpcy50cmlnZ2VyKFwicmVmcmVzaGVkXCIpfSxlLnByb3RvdHlwZS5vblRocm90dGxlZFJlc2l6ZT1mdW5jdGlvbigpe2IuY2xlYXJUaW1lb3V0KHRoaXMucmVzaXplVGltZXIpLHRoaXMucmVzaXplVGltZXI9Yi5zZXRUaW1lb3V0KHRoaXMuX2hhbmRsZXJzLm9uUmVzaXplLHRoaXMuc2V0dGluZ3MucmVzcG9uc2l2ZVJlZnJlc2hSYXRlKX0sZS5wcm90b3R5cGUub25SZXNpemU9ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuX2l0ZW1zLmxlbmd0aCYmKHRoaXMuX3dpZHRoIT09dGhpcy4kZWxlbWVudC53aWR0aCgpJiYoISF0aGlzLmlzVmlzaWJsZSgpJiYodGhpcy5lbnRlcihcInJlc2l6aW5nXCIpLHRoaXMudHJpZ2dlcihcInJlc2l6ZVwiKS5pc0RlZmF1bHRQcmV2ZW50ZWQoKT8odGhpcy5sZWF2ZShcInJlc2l6aW5nXCIpLCExKToodGhpcy5pbnZhbGlkYXRlKFwid2lkdGhcIiksdGhpcy5yZWZyZXNoKCksdGhpcy5sZWF2ZShcInJlc2l6aW5nXCIpLHZvaWQgdGhpcy50cmlnZ2VyKFwicmVzaXplZFwiKSkpKSl9LGUucHJvdG90eXBlLnJlZ2lzdGVyRXZlbnRIYW5kbGVycz1mdW5jdGlvbigpe2Euc3VwcG9ydC50cmFuc2l0aW9uJiZ0aGlzLiRzdGFnZS5vbihhLnN1cHBvcnQudHJhbnNpdGlvbi5lbmQrXCIub3dsLmNvcmVcIixhLnByb3h5KHRoaXMub25UcmFuc2l0aW9uRW5kLHRoaXMpKSwhMSE9PXRoaXMuc2V0dGluZ3MucmVzcG9uc2l2ZSYmdGhpcy5vbihiLFwicmVzaXplXCIsdGhpcy5faGFuZGxlcnMub25UaHJvdHRsZWRSZXNpemUpLHRoaXMuc2V0dGluZ3MubW91c2VEcmFnJiYodGhpcy4kZWxlbWVudC5hZGRDbGFzcyh0aGlzLm9wdGlvbnMuZHJhZ0NsYXNzKSx0aGlzLiRzdGFnZS5vbihcIm1vdXNlZG93bi5vd2wuY29yZVwiLGEucHJveHkodGhpcy5vbkRyYWdTdGFydCx0aGlzKSksdGhpcy4kc3RhZ2Uub24oXCJkcmFnc3RhcnQub3dsLmNvcmUgc2VsZWN0c3RhcnQub3dsLmNvcmVcIixmdW5jdGlvbigpe3JldHVybiExfSkpLHRoaXMuc2V0dGluZ3MudG91Y2hEcmFnJiYodGhpcy4kc3RhZ2Uub24oXCJ0b3VjaHN0YXJ0Lm93bC5jb3JlXCIsYS5wcm94eSh0aGlzLm9uRHJhZ1N0YXJ0LHRoaXMpKSx0aGlzLiRzdGFnZS5vbihcInRvdWNoY2FuY2VsLm93bC5jb3JlXCIsYS5wcm94eSh0aGlzLm9uRHJhZ0VuZCx0aGlzKSkpfSxlLnByb3RvdHlwZS5vbkRyYWdTdGFydD1mdW5jdGlvbihiKXt2YXIgZD1udWxsOzMhPT1iLndoaWNoJiYoYS5zdXBwb3J0LnRyYW5zZm9ybT8oZD10aGlzLiRzdGFnZS5jc3MoXCJ0cmFuc2Zvcm1cIikucmVwbGFjZSgvLipcXCh8XFwpfCAvZyxcIlwiKS5zcGxpdChcIixcIiksZD17eDpkWzE2PT09ZC5sZW5ndGg/MTI6NF0seTpkWzE2PT09ZC5sZW5ndGg/MTM6NV19KTooZD10aGlzLiRzdGFnZS5wb3NpdGlvbigpLGQ9e3g6dGhpcy5zZXR0aW5ncy5ydGw/ZC5sZWZ0K3RoaXMuJHN0YWdlLndpZHRoKCktdGhpcy53aWR0aCgpK3RoaXMuc2V0dGluZ3MubWFyZ2luOmQubGVmdCx5OmQudG9wfSksdGhpcy5pcyhcImFuaW1hdGluZ1wiKSYmKGEuc3VwcG9ydC50cmFuc2Zvcm0/dGhpcy5hbmltYXRlKGQueCk6dGhpcy4kc3RhZ2Uuc3RvcCgpLHRoaXMuaW52YWxpZGF0ZShcInBvc2l0aW9uXCIpKSx0aGlzLiRlbGVtZW50LnRvZ2dsZUNsYXNzKHRoaXMub3B0aW9ucy5ncmFiQ2xhc3MsXCJtb3VzZWRvd25cIj09PWIudHlwZSksdGhpcy5zcGVlZCgwKSx0aGlzLl9kcmFnLnRpbWU9KG5ldyBEYXRlKS5nZXRUaW1lKCksdGhpcy5fZHJhZy50YXJnZXQ9YShiLnRhcmdldCksdGhpcy5fZHJhZy5zdGFnZS5zdGFydD1kLHRoaXMuX2RyYWcuc3RhZ2UuY3VycmVudD1kLHRoaXMuX2RyYWcucG9pbnRlcj10aGlzLnBvaW50ZXIoYiksYShjKS5vbihcIm1vdXNldXAub3dsLmNvcmUgdG91Y2hlbmQub3dsLmNvcmVcIixhLnByb3h5KHRoaXMub25EcmFnRW5kLHRoaXMpKSxhKGMpLm9uZShcIm1vdXNlbW92ZS5vd2wuY29yZSB0b3VjaG1vdmUub3dsLmNvcmVcIixhLnByb3h5KGZ1bmN0aW9uKGIpe3ZhciBkPXRoaXMuZGlmZmVyZW5jZSh0aGlzLl9kcmFnLnBvaW50ZXIsdGhpcy5wb2ludGVyKGIpKTthKGMpLm9uKFwibW91c2Vtb3ZlLm93bC5jb3JlIHRvdWNobW92ZS5vd2wuY29yZVwiLGEucHJveHkodGhpcy5vbkRyYWdNb3ZlLHRoaXMpKSxNYXRoLmFicyhkLngpPE1hdGguYWJzKGQueSkmJnRoaXMuaXMoXCJ2YWxpZFwiKXx8KGIucHJldmVudERlZmF1bHQoKSx0aGlzLmVudGVyKFwiZHJhZ2dpbmdcIiksdGhpcy50cmlnZ2VyKFwiZHJhZ1wiKSl9LHRoaXMpKSl9LGUucHJvdG90eXBlLm9uRHJhZ01vdmU9ZnVuY3Rpb24oYSl7dmFyIGI9bnVsbCxjPW51bGwsZD1udWxsLGU9dGhpcy5kaWZmZXJlbmNlKHRoaXMuX2RyYWcucG9pbnRlcix0aGlzLnBvaW50ZXIoYSkpLGY9dGhpcy5kaWZmZXJlbmNlKHRoaXMuX2RyYWcuc3RhZ2Uuc3RhcnQsZSk7dGhpcy5pcyhcImRyYWdnaW5nXCIpJiYoYS5wcmV2ZW50RGVmYXVsdCgpLHRoaXMuc2V0dGluZ3MubG9vcD8oYj10aGlzLmNvb3JkaW5hdGVzKHRoaXMubWluaW11bSgpKSxjPXRoaXMuY29vcmRpbmF0ZXModGhpcy5tYXhpbXVtKCkrMSktYixmLng9KChmLngtYiklYytjKSVjK2IpOihiPXRoaXMuc2V0dGluZ3MucnRsP3RoaXMuY29vcmRpbmF0ZXModGhpcy5tYXhpbXVtKCkpOnRoaXMuY29vcmRpbmF0ZXModGhpcy5taW5pbXVtKCkpLGM9dGhpcy5zZXR0aW5ncy5ydGw/dGhpcy5jb29yZGluYXRlcyh0aGlzLm1pbmltdW0oKSk6dGhpcy5jb29yZGluYXRlcyh0aGlzLm1heGltdW0oKSksZD10aGlzLnNldHRpbmdzLnB1bGxEcmFnPy0xKmUueC81OjAsZi54PU1hdGgubWF4KE1hdGgubWluKGYueCxiK2QpLGMrZCkpLHRoaXMuX2RyYWcuc3RhZ2UuY3VycmVudD1mLHRoaXMuYW5pbWF0ZShmLngpKX0sZS5wcm90b3R5cGUub25EcmFnRW5kPWZ1bmN0aW9uKGIpe3ZhciBkPXRoaXMuZGlmZmVyZW5jZSh0aGlzLl9kcmFnLnBvaW50ZXIsdGhpcy5wb2ludGVyKGIpKSxlPXRoaXMuX2RyYWcuc3RhZ2UuY3VycmVudCxmPWQueD4wXnRoaXMuc2V0dGluZ3MucnRsP1wibGVmdFwiOlwicmlnaHRcIjthKGMpLm9mZihcIi5vd2wuY29yZVwiKSx0aGlzLiRlbGVtZW50LnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5ncmFiQ2xhc3MpLCgwIT09ZC54JiZ0aGlzLmlzKFwiZHJhZ2dpbmdcIil8fCF0aGlzLmlzKFwidmFsaWRcIikpJiYodGhpcy5zcGVlZCh0aGlzLnNldHRpbmdzLmRyYWdFbmRTcGVlZHx8dGhpcy5zZXR0aW5ncy5zbWFydFNwZWVkKSx0aGlzLmN1cnJlbnQodGhpcy5jbG9zZXN0KGUueCwwIT09ZC54P2Y6dGhpcy5fZHJhZy5kaXJlY3Rpb24pKSx0aGlzLmludmFsaWRhdGUoXCJwb3NpdGlvblwiKSx0aGlzLnVwZGF0ZSgpLHRoaXMuX2RyYWcuZGlyZWN0aW9uPWYsKE1hdGguYWJzKGQueCk+M3x8KG5ldyBEYXRlKS5nZXRUaW1lKCktdGhpcy5fZHJhZy50aW1lPjMwMCkmJnRoaXMuX2RyYWcudGFyZ2V0Lm9uZShcImNsaWNrLm93bC5jb3JlXCIsZnVuY3Rpb24oKXtyZXR1cm4hMX0pKSx0aGlzLmlzKFwiZHJhZ2dpbmdcIikmJih0aGlzLmxlYXZlKFwiZHJhZ2dpbmdcIiksdGhpcy50cmlnZ2VyKFwiZHJhZ2dlZFwiKSl9LGUucHJvdG90eXBlLmNsb3Nlc3Q9ZnVuY3Rpb24oYixjKXt2YXIgZT0tMSxmPTMwLGc9dGhpcy53aWR0aCgpLGg9dGhpcy5jb29yZGluYXRlcygpO3JldHVybiB0aGlzLnNldHRpbmdzLmZyZWVEcmFnfHxhLmVhY2goaCxhLnByb3h5KGZ1bmN0aW9uKGEsaSl7cmV0dXJuXCJsZWZ0XCI9PT1jJiZiPmktZiYmYjxpK2Y/ZT1hOlwicmlnaHRcIj09PWMmJmI+aS1nLWYmJmI8aS1nK2Y/ZT1hKzE6dGhpcy5vcChiLFwiPFwiLGkpJiZ0aGlzLm9wKGIsXCI+XCIsaFthKzFdIT09ZD9oW2ErMV06aS1nKSYmKGU9XCJsZWZ0XCI9PT1jP2ErMTphKSwtMT09PWV9LHRoaXMpKSx0aGlzLnNldHRpbmdzLmxvb3B8fCh0aGlzLm9wKGIsXCI+XCIsaFt0aGlzLm1pbmltdW0oKV0pP2U9Yj10aGlzLm1pbmltdW0oKTp0aGlzLm9wKGIsXCI8XCIsaFt0aGlzLm1heGltdW0oKV0pJiYoZT1iPXRoaXMubWF4aW11bSgpKSksZX0sZS5wcm90b3R5cGUuYW5pbWF0ZT1mdW5jdGlvbihiKXt2YXIgYz10aGlzLnNwZWVkKCk+MDt0aGlzLmlzKFwiYW5pbWF0aW5nXCIpJiZ0aGlzLm9uVHJhbnNpdGlvbkVuZCgpLGMmJih0aGlzLmVudGVyKFwiYW5pbWF0aW5nXCIpLHRoaXMudHJpZ2dlcihcInRyYW5zbGF0ZVwiKSksYS5zdXBwb3J0LnRyYW5zZm9ybTNkJiZhLnN1cHBvcnQudHJhbnNpdGlvbj90aGlzLiRzdGFnZS5jc3Moe3RyYW5zZm9ybTpcInRyYW5zbGF0ZTNkKFwiK2IrXCJweCwwcHgsMHB4KVwiLHRyYW5zaXRpb246dGhpcy5zcGVlZCgpLzFlMytcInNcIisodGhpcy5zZXR0aW5ncy5zbGlkZVRyYW5zaXRpb24/XCIgXCIrdGhpcy5zZXR0aW5ncy5zbGlkZVRyYW5zaXRpb246XCJcIil9KTpjP3RoaXMuJHN0YWdlLmFuaW1hdGUoe2xlZnQ6YitcInB4XCJ9LHRoaXMuc3BlZWQoKSx0aGlzLnNldHRpbmdzLmZhbGxiYWNrRWFzaW5nLGEucHJveHkodGhpcy5vblRyYW5zaXRpb25FbmQsdGhpcykpOnRoaXMuJHN0YWdlLmNzcyh7bGVmdDpiK1wicHhcIn0pfSxlLnByb3RvdHlwZS5pcz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5fc3RhdGVzLmN1cnJlbnRbYV0mJnRoaXMuX3N0YXRlcy5jdXJyZW50W2FdPjB9LGUucHJvdG90eXBlLmN1cnJlbnQ9ZnVuY3Rpb24oYSl7aWYoYT09PWQpcmV0dXJuIHRoaXMuX2N1cnJlbnQ7aWYoMD09PXRoaXMuX2l0ZW1zLmxlbmd0aClyZXR1cm4gZDtpZihhPXRoaXMubm9ybWFsaXplKGEpLHRoaXMuX2N1cnJlbnQhPT1hKXt2YXIgYj10aGlzLnRyaWdnZXIoXCJjaGFuZ2VcIix7cHJvcGVydHk6e25hbWU6XCJwb3NpdGlvblwiLHZhbHVlOmF9fSk7Yi5kYXRhIT09ZCYmKGE9dGhpcy5ub3JtYWxpemUoYi5kYXRhKSksdGhpcy5fY3VycmVudD1hLHRoaXMuaW52YWxpZGF0ZShcInBvc2l0aW9uXCIpLHRoaXMudHJpZ2dlcihcImNoYW5nZWRcIix7cHJvcGVydHk6e25hbWU6XCJwb3NpdGlvblwiLHZhbHVlOnRoaXMuX2N1cnJlbnR9fSl9cmV0dXJuIHRoaXMuX2N1cnJlbnR9LGUucHJvdG90eXBlLmludmFsaWRhdGU9ZnVuY3Rpb24oYil7cmV0dXJuXCJzdHJpbmdcIj09PWEudHlwZShiKSYmKHRoaXMuX2ludmFsaWRhdGVkW2JdPSEwLHRoaXMuaXMoXCJ2YWxpZFwiKSYmdGhpcy5sZWF2ZShcInZhbGlkXCIpKSxhLm1hcCh0aGlzLl9pbnZhbGlkYXRlZCxmdW5jdGlvbihhLGIpe3JldHVybiBifSl9LGUucHJvdG90eXBlLnJlc2V0PWZ1bmN0aW9uKGEpeyhhPXRoaXMubm9ybWFsaXplKGEpKSE9PWQmJih0aGlzLl9zcGVlZD0wLHRoaXMuX2N1cnJlbnQ9YSx0aGlzLnN1cHByZXNzKFtcInRyYW5zbGF0ZVwiLFwidHJhbnNsYXRlZFwiXSksdGhpcy5hbmltYXRlKHRoaXMuY29vcmRpbmF0ZXMoYSkpLHRoaXMucmVsZWFzZShbXCJ0cmFuc2xhdGVcIixcInRyYW5zbGF0ZWRcIl0pKX0sZS5wcm90b3R5cGUubm9ybWFsaXplPWZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5faXRlbXMubGVuZ3RoLGU9Yj8wOnRoaXMuX2Nsb25lcy5sZW5ndGg7cmV0dXJuIXRoaXMuaXNOdW1lcmljKGEpfHxjPDE/YT1kOihhPDB8fGE+PWMrZSkmJihhPSgoYS1lLzIpJWMrYyklYytlLzIpLGF9LGUucHJvdG90eXBlLnJlbGF0aXZlPWZ1bmN0aW9uKGEpe3JldHVybiBhLT10aGlzLl9jbG9uZXMubGVuZ3RoLzIsdGhpcy5ub3JtYWxpemUoYSwhMCl9LGUucHJvdG90eXBlLm1heGltdW09ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU9dGhpcy5zZXR0aW5ncyxmPXRoaXMuX2Nvb3JkaW5hdGVzLmxlbmd0aDtpZihlLmxvb3ApZj10aGlzLl9jbG9uZXMubGVuZ3RoLzIrdGhpcy5faXRlbXMubGVuZ3RoLTE7ZWxzZSBpZihlLmF1dG9XaWR0aHx8ZS5tZXJnZSl7aWYoYj10aGlzLl9pdGVtcy5sZW5ndGgpZm9yKGM9dGhpcy5faXRlbXNbLS1iXS53aWR0aCgpLGQ9dGhpcy4kZWxlbWVudC53aWR0aCgpO2ItLSYmISgoYys9dGhpcy5faXRlbXNbYl0ud2lkdGgoKSt0aGlzLnNldHRpbmdzLm1hcmdpbik+ZCk7KTtmPWIrMX1lbHNlIGY9ZS5jZW50ZXI/dGhpcy5faXRlbXMubGVuZ3RoLTE6dGhpcy5faXRlbXMubGVuZ3RoLWUuaXRlbXM7cmV0dXJuIGEmJihmLT10aGlzLl9jbG9uZXMubGVuZ3RoLzIpLE1hdGgubWF4KGYsMCl9LGUucHJvdG90eXBlLm1pbmltdW09ZnVuY3Rpb24oYSl7cmV0dXJuIGE/MDp0aGlzLl9jbG9uZXMubGVuZ3RoLzJ9LGUucHJvdG90eXBlLml0ZW1zPWZ1bmN0aW9uKGEpe3JldHVybiBhPT09ZD90aGlzLl9pdGVtcy5zbGljZSgpOihhPXRoaXMubm9ybWFsaXplKGEsITApLHRoaXMuX2l0ZW1zW2FdKX0sZS5wcm90b3R5cGUubWVyZ2Vycz1mdW5jdGlvbihhKXtyZXR1cm4gYT09PWQ/dGhpcy5fbWVyZ2Vycy5zbGljZSgpOihhPXRoaXMubm9ybWFsaXplKGEsITApLHRoaXMuX21lcmdlcnNbYV0pfSxlLnByb3RvdHlwZS5jbG9uZXM9ZnVuY3Rpb24oYil7dmFyIGM9dGhpcy5fY2xvbmVzLmxlbmd0aC8yLGU9Yyt0aGlzLl9pdGVtcy5sZW5ndGgsZj1mdW5jdGlvbihhKXtyZXR1cm4gYSUyPT0wP2UrYS8yOmMtKGErMSkvMn07cmV0dXJuIGI9PT1kP2EubWFwKHRoaXMuX2Nsb25lcyxmdW5jdGlvbihhLGIpe3JldHVybiBmKGIpfSk6YS5tYXAodGhpcy5fY2xvbmVzLGZ1bmN0aW9uKGEsYyl7cmV0dXJuIGE9PT1iP2YoYyk6bnVsbH0pfSxlLnByb3RvdHlwZS5zcGVlZD1mdW5jdGlvbihhKXtyZXR1cm4gYSE9PWQmJih0aGlzLl9zcGVlZD1hKSx0aGlzLl9zcGVlZH0sZS5wcm90b3R5cGUuY29vcmRpbmF0ZXM9ZnVuY3Rpb24oYil7dmFyIGMsZT0xLGY9Yi0xO3JldHVybiBiPT09ZD9hLm1hcCh0aGlzLl9jb29yZGluYXRlcyxhLnByb3h5KGZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMuY29vcmRpbmF0ZXMoYil9LHRoaXMpKToodGhpcy5zZXR0aW5ncy5jZW50ZXI/KHRoaXMuc2V0dGluZ3MucnRsJiYoZT0tMSxmPWIrMSksYz10aGlzLl9jb29yZGluYXRlc1tiXSxjKz0odGhpcy53aWR0aCgpLWMrKHRoaXMuX2Nvb3JkaW5hdGVzW2ZdfHwwKSkvMiplKTpjPXRoaXMuX2Nvb3JkaW5hdGVzW2ZdfHwwLGM9TWF0aC5jZWlsKGMpKX0sZS5wcm90b3R5cGUuZHVyYXRpb249ZnVuY3Rpb24oYSxiLGMpe3JldHVybiAwPT09Yz8wOk1hdGgubWluKE1hdGgubWF4KE1hdGguYWJzKGItYSksMSksNikqTWF0aC5hYnMoY3x8dGhpcy5zZXR0aW5ncy5zbWFydFNwZWVkKX0sZS5wcm90b3R5cGUudG89ZnVuY3Rpb24oYSxiKXt2YXIgYz10aGlzLmN1cnJlbnQoKSxkPW51bGwsZT1hLXRoaXMucmVsYXRpdmUoYyksZj0oZT4wKS0oZTwwKSxnPXRoaXMuX2l0ZW1zLmxlbmd0aCxoPXRoaXMubWluaW11bSgpLGk9dGhpcy5tYXhpbXVtKCk7dGhpcy5zZXR0aW5ncy5sb29wPyghdGhpcy5zZXR0aW5ncy5yZXdpbmQmJk1hdGguYWJzKGUpPmcvMiYmKGUrPS0xKmYqZyksYT1jK2UsKGQ9KChhLWgpJWcrZyklZytoKSE9PWEmJmQtZTw9aSYmZC1lPjAmJihjPWQtZSxhPWQsdGhpcy5yZXNldChjKSkpOnRoaXMuc2V0dGluZ3MucmV3aW5kPyhpKz0xLGE9KGElaStpKSVpKTphPU1hdGgubWF4KGgsTWF0aC5taW4oaSxhKSksdGhpcy5zcGVlZCh0aGlzLmR1cmF0aW9uKGMsYSxiKSksdGhpcy5jdXJyZW50KGEpLHRoaXMuaXNWaXNpYmxlKCkmJnRoaXMudXBkYXRlKCl9LGUucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oYSl7YT1hfHwhMSx0aGlzLnRvKHRoaXMucmVsYXRpdmUodGhpcy5jdXJyZW50KCkpKzEsYSl9LGUucHJvdG90eXBlLnByZXY9ZnVuY3Rpb24oYSl7YT1hfHwhMSx0aGlzLnRvKHRoaXMucmVsYXRpdmUodGhpcy5jdXJyZW50KCkpLTEsYSl9LGUucHJvdG90eXBlLm9uVHJhbnNpdGlvbkVuZD1mdW5jdGlvbihhKXtpZihhIT09ZCYmKGEuc3RvcFByb3BhZ2F0aW9uKCksKGEudGFyZ2V0fHxhLnNyY0VsZW1lbnR8fGEub3JpZ2luYWxUYXJnZXQpIT09dGhpcy4kc3RhZ2UuZ2V0KDApKSlyZXR1cm4hMTt0aGlzLmxlYXZlKFwiYW5pbWF0aW5nXCIpLHRoaXMudHJpZ2dlcihcInRyYW5zbGF0ZWRcIil9LGUucHJvdG90eXBlLnZpZXdwb3J0PWZ1bmN0aW9uKCl7dmFyIGQ7cmV0dXJuIHRoaXMub3B0aW9ucy5yZXNwb25zaXZlQmFzZUVsZW1lbnQhPT1iP2Q9YSh0aGlzLm9wdGlvbnMucmVzcG9uc2l2ZUJhc2VFbGVtZW50KS53aWR0aCgpOmIuaW5uZXJXaWR0aD9kPWIuaW5uZXJXaWR0aDpjLmRvY3VtZW50RWxlbWVudCYmYy5kb2N1bWVudEVsZW1lbnQuY2xpZW50V2lkdGg/ZD1jLmRvY3VtZW50RWxlbWVudC5jbGllbnRXaWR0aDpjb25zb2xlLndhcm4oXCJDYW4gbm90IGRldGVjdCB2aWV3cG9ydCB3aWR0aC5cIiksZH0sZS5wcm90b3R5cGUucmVwbGFjZT1mdW5jdGlvbihiKXt0aGlzLiRzdGFnZS5lbXB0eSgpLHRoaXMuX2l0ZW1zPVtdLGImJihiPWIgaW5zdGFuY2VvZiBqUXVlcnk/YjphKGIpKSx0aGlzLnNldHRpbmdzLm5lc3RlZEl0ZW1TZWxlY3RvciYmKGI9Yi5maW5kKFwiLlwiK3RoaXMuc2V0dGluZ3MubmVzdGVkSXRlbVNlbGVjdG9yKSksYi5maWx0ZXIoZnVuY3Rpb24oKXtyZXR1cm4gMT09PXRoaXMubm9kZVR5cGV9KS5lYWNoKGEucHJveHkoZnVuY3Rpb24oYSxiKXtiPXRoaXMucHJlcGFyZShiKSx0aGlzLiRzdGFnZS5hcHBlbmQoYiksdGhpcy5faXRlbXMucHVzaChiKSx0aGlzLl9tZXJnZXJzLnB1c2goMSpiLmZpbmQoXCJbZGF0YS1tZXJnZV1cIikuYWRkQmFjayhcIltkYXRhLW1lcmdlXVwiKS5hdHRyKFwiZGF0YS1tZXJnZVwiKXx8MSl9LHRoaXMpKSx0aGlzLnJlc2V0KHRoaXMuaXNOdW1lcmljKHRoaXMuc2V0dGluZ3Muc3RhcnRQb3NpdGlvbik/dGhpcy5zZXR0aW5ncy5zdGFydFBvc2l0aW9uOjApLHRoaXMuaW52YWxpZGF0ZShcIml0ZW1zXCIpfSxlLnByb3RvdHlwZS5hZGQ9ZnVuY3Rpb24oYixjKXt2YXIgZT10aGlzLnJlbGF0aXZlKHRoaXMuX2N1cnJlbnQpO2M9Yz09PWQ/dGhpcy5faXRlbXMubGVuZ3RoOnRoaXMubm9ybWFsaXplKGMsITApLGI9YiBpbnN0YW5jZW9mIGpRdWVyeT9iOmEoYiksdGhpcy50cmlnZ2VyKFwiYWRkXCIse2NvbnRlbnQ6Yixwb3NpdGlvbjpjfSksYj10aGlzLnByZXBhcmUoYiksMD09PXRoaXMuX2l0ZW1zLmxlbmd0aHx8Yz09PXRoaXMuX2l0ZW1zLmxlbmd0aD8oMD09PXRoaXMuX2l0ZW1zLmxlbmd0aCYmdGhpcy4kc3RhZ2UuYXBwZW5kKGIpLDAhPT10aGlzLl9pdGVtcy5sZW5ndGgmJnRoaXMuX2l0ZW1zW2MtMV0uYWZ0ZXIoYiksdGhpcy5faXRlbXMucHVzaChiKSx0aGlzLl9tZXJnZXJzLnB1c2goMSpiLmZpbmQoXCJbZGF0YS1tZXJnZV1cIikuYWRkQmFjayhcIltkYXRhLW1lcmdlXVwiKS5hdHRyKFwiZGF0YS1tZXJnZVwiKXx8MSkpOih0aGlzLl9pdGVtc1tjXS5iZWZvcmUoYiksdGhpcy5faXRlbXMuc3BsaWNlKGMsMCxiKSx0aGlzLl9tZXJnZXJzLnNwbGljZShjLDAsMSpiLmZpbmQoXCJbZGF0YS1tZXJnZV1cIikuYWRkQmFjayhcIltkYXRhLW1lcmdlXVwiKS5hdHRyKFwiZGF0YS1tZXJnZVwiKXx8MSkpLHRoaXMuX2l0ZW1zW2VdJiZ0aGlzLnJlc2V0KHRoaXMuX2l0ZW1zW2VdLmluZGV4KCkpLHRoaXMuaW52YWxpZGF0ZShcIml0ZW1zXCIpLHRoaXMudHJpZ2dlcihcImFkZGVkXCIse2NvbnRlbnQ6Yixwb3NpdGlvbjpjfSl9LGUucHJvdG90eXBlLnJlbW92ZT1mdW5jdGlvbihhKXsoYT10aGlzLm5vcm1hbGl6ZShhLCEwKSkhPT1kJiYodGhpcy50cmlnZ2VyKFwicmVtb3ZlXCIse2NvbnRlbnQ6dGhpcy5faXRlbXNbYV0scG9zaXRpb246YX0pLHRoaXMuX2l0ZW1zW2FdLnJlbW92ZSgpLHRoaXMuX2l0ZW1zLnNwbGljZShhLDEpLHRoaXMuX21lcmdlcnMuc3BsaWNlKGEsMSksdGhpcy5pbnZhbGlkYXRlKFwiaXRlbXNcIiksdGhpcy50cmlnZ2VyKFwicmVtb3ZlZFwiLHtjb250ZW50Om51bGwscG9zaXRpb246YX0pKX0sZS5wcm90b3R5cGUucHJlbG9hZEF1dG9XaWR0aEltYWdlcz1mdW5jdGlvbihiKXtiLmVhY2goYS5wcm94eShmdW5jdGlvbihiLGMpe3RoaXMuZW50ZXIoXCJwcmUtbG9hZGluZ1wiKSxjPWEoYyksYShuZXcgSW1hZ2UpLm9uZShcImxvYWRcIixhLnByb3h5KGZ1bmN0aW9uKGEpe2MuYXR0cihcInNyY1wiLGEudGFyZ2V0LnNyYyksYy5jc3MoXCJvcGFjaXR5XCIsMSksdGhpcy5sZWF2ZShcInByZS1sb2FkaW5nXCIpLCF0aGlzLmlzKFwicHJlLWxvYWRpbmdcIikmJiF0aGlzLmlzKFwiaW5pdGlhbGl6aW5nXCIpJiZ0aGlzLnJlZnJlc2goKX0sdGhpcykpLmF0dHIoXCJzcmNcIixjLmF0dHIoXCJzcmNcIil8fGMuYXR0cihcImRhdGEtc3JjXCIpfHxjLmF0dHIoXCJkYXRhLXNyYy1yZXRpbmFcIikpfSx0aGlzKSl9LGUucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt0aGlzLiRlbGVtZW50Lm9mZihcIi5vd2wuY29yZVwiKSx0aGlzLiRzdGFnZS5vZmYoXCIub3dsLmNvcmVcIiksYShjKS5vZmYoXCIub3dsLmNvcmVcIiksITEhPT10aGlzLnNldHRpbmdzLnJlc3BvbnNpdmUmJihiLmNsZWFyVGltZW91dCh0aGlzLnJlc2l6ZVRpbWVyKSx0aGlzLm9mZihiLFwicmVzaXplXCIsdGhpcy5faGFuZGxlcnMub25UaHJvdHRsZWRSZXNpemUpKTtmb3IodmFyIGQgaW4gdGhpcy5fcGx1Z2lucyl0aGlzLl9wbHVnaW5zW2RdLmRlc3Ryb3koKTt0aGlzLiRzdGFnZS5jaGlsZHJlbihcIi5jbG9uZWRcIikucmVtb3ZlKCksdGhpcy4kc3RhZ2UudW53cmFwKCksdGhpcy4kc3RhZ2UuY2hpbGRyZW4oKS5jb250ZW50cygpLnVud3JhcCgpLHRoaXMuJHN0YWdlLmNoaWxkcmVuKCkudW53cmFwKCksdGhpcy4kc3RhZ2UucmVtb3ZlKCksdGhpcy4kZWxlbWVudC5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMucmVmcmVzaENsYXNzKS5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMubG9hZGluZ0NsYXNzKS5yZW1vdmVDbGFzcyh0aGlzLm9wdGlvbnMubG9hZGVkQ2xhc3MpLnJlbW92ZUNsYXNzKHRoaXMub3B0aW9ucy5ydGxDbGFzcykucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmRyYWdDbGFzcykucmVtb3ZlQ2xhc3ModGhpcy5vcHRpb25zLmdyYWJDbGFzcykuYXR0cihcImNsYXNzXCIsdGhpcy4kZWxlbWVudC5hdHRyKFwiY2xhc3NcIikucmVwbGFjZShuZXcgUmVnRXhwKHRoaXMub3B0aW9ucy5yZXNwb25zaXZlQ2xhc3MrXCItXFxcXFMrXFxcXHNcIixcImdcIiksXCJcIikpLnJlbW92ZURhdGEoXCJvd2wuY2Fyb3VzZWxcIil9LGUucHJvdG90eXBlLm9wPWZ1bmN0aW9uKGEsYixjKXt2YXIgZD10aGlzLnNldHRpbmdzLnJ0bDtzd2l0Y2goYil7Y2FzZVwiPFwiOnJldHVybiBkP2E+YzphPGM7Y2FzZVwiPlwiOnJldHVybiBkP2E8YzphPmM7Y2FzZVwiPj1cIjpyZXR1cm4gZD9hPD1jOmE+PWM7Y2FzZVwiPD1cIjpyZXR1cm4gZD9hPj1jOmE8PWN9fSxlLnByb3RvdHlwZS5vbj1mdW5jdGlvbihhLGIsYyxkKXthLmFkZEV2ZW50TGlzdGVuZXI/YS5hZGRFdmVudExpc3RlbmVyKGIsYyxkKTphLmF0dGFjaEV2ZW50JiZhLmF0dGFjaEV2ZW50KFwib25cIitiLGMpfSxlLnByb3RvdHlwZS5vZmY9ZnVuY3Rpb24oYSxiLGMsZCl7YS5yZW1vdmVFdmVudExpc3RlbmVyP2EucmVtb3ZlRXZlbnRMaXN0ZW5lcihiLGMsZCk6YS5kZXRhY2hFdmVudCYmYS5kZXRhY2hFdmVudChcIm9uXCIrYixjKX0sZS5wcm90b3R5cGUudHJpZ2dlcj1mdW5jdGlvbihiLGMsZCxmLGcpe3ZhciBoPXtpdGVtOntjb3VudDp0aGlzLl9pdGVtcy5sZW5ndGgsaW5kZXg6dGhpcy5jdXJyZW50KCl9fSxpPWEuY2FtZWxDYXNlKGEuZ3JlcChbXCJvblwiLGIsZF0sZnVuY3Rpb24oYSl7cmV0dXJuIGF9KS5qb2luKFwiLVwiKS50b0xvd2VyQ2FzZSgpKSxqPWEuRXZlbnQoW2IsXCJvd2xcIixkfHxcImNhcm91c2VsXCJdLmpvaW4oXCIuXCIpLnRvTG93ZXJDYXNlKCksYS5leHRlbmQoe3JlbGF0ZWRUYXJnZXQ6dGhpc30saCxjKSk7cmV0dXJuIHRoaXMuX3N1cHJlc3NbYl18fChhLmVhY2godGhpcy5fcGx1Z2lucyxmdW5jdGlvbihhLGIpe2Iub25UcmlnZ2VyJiZiLm9uVHJpZ2dlcihqKX0pLHRoaXMucmVnaXN0ZXIoe3R5cGU6ZS5UeXBlLkV2ZW50LG5hbWU6Yn0pLHRoaXMuJGVsZW1lbnQudHJpZ2dlcihqKSx0aGlzLnNldHRpbmdzJiZcImZ1bmN0aW9uXCI9PXR5cGVvZiB0aGlzLnNldHRpbmdzW2ldJiZ0aGlzLnNldHRpbmdzW2ldLmNhbGwodGhpcyxqKSksan0sZS5wcm90b3R5cGUuZW50ZXI9ZnVuY3Rpb24oYil7YS5lYWNoKFtiXS5jb25jYXQodGhpcy5fc3RhdGVzLnRhZ3NbYl18fFtdKSxhLnByb3h5KGZ1bmN0aW9uKGEsYil7dGhpcy5fc3RhdGVzLmN1cnJlbnRbYl09PT1kJiYodGhpcy5fc3RhdGVzLmN1cnJlbnRbYl09MCksdGhpcy5fc3RhdGVzLmN1cnJlbnRbYl0rK30sdGhpcykpfSxlLnByb3RvdHlwZS5sZWF2ZT1mdW5jdGlvbihiKXthLmVhY2goW2JdLmNvbmNhdCh0aGlzLl9zdGF0ZXMudGFnc1tiXXx8W10pLGEucHJveHkoZnVuY3Rpb24oYSxiKXt0aGlzLl9zdGF0ZXMuY3VycmVudFtiXS0tfSx0aGlzKSl9LGUucHJvdG90eXBlLnJlZ2lzdGVyPWZ1bmN0aW9uKGIpe2lmKGIudHlwZT09PWUuVHlwZS5FdmVudCl7aWYoYS5ldmVudC5zcGVjaWFsW2IubmFtZV18fChhLmV2ZW50LnNwZWNpYWxbYi5uYW1lXT17fSksIWEuZXZlbnQuc3BlY2lhbFtiLm5hbWVdLm93bCl7dmFyIGM9YS5ldmVudC5zcGVjaWFsW2IubmFtZV0uX2RlZmF1bHQ7YS5ldmVudC5zcGVjaWFsW2IubmFtZV0uX2RlZmF1bHQ9ZnVuY3Rpb24oYSl7cmV0dXJuIWN8fCFjLmFwcGx5fHxhLm5hbWVzcGFjZSYmLTEhPT1hLm5hbWVzcGFjZS5pbmRleE9mKFwib3dsXCIpP2EubmFtZXNwYWNlJiZhLm5hbWVzcGFjZS5pbmRleE9mKFwib3dsXCIpPi0xOmMuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxhLmV2ZW50LnNwZWNpYWxbYi5uYW1lXS5vd2w9ITB9fWVsc2UgYi50eXBlPT09ZS5UeXBlLlN0YXRlJiYodGhpcy5fc3RhdGVzLnRhZ3NbYi5uYW1lXT90aGlzLl9zdGF0ZXMudGFnc1tiLm5hbWVdPXRoaXMuX3N0YXRlcy50YWdzW2IubmFtZV0uY29uY2F0KGIudGFncyk6dGhpcy5fc3RhdGVzLnRhZ3NbYi5uYW1lXT1iLnRhZ3MsdGhpcy5fc3RhdGVzLnRhZ3NbYi5uYW1lXT1hLmdyZXAodGhpcy5fc3RhdGVzLnRhZ3NbYi5uYW1lXSxhLnByb3h5KGZ1bmN0aW9uKGMsZCl7cmV0dXJuIGEuaW5BcnJheShjLHRoaXMuX3N0YXRlcy50YWdzW2IubmFtZV0pPT09ZH0sdGhpcykpKX0sZS5wcm90b3R5cGUuc3VwcHJlc3M9ZnVuY3Rpb24oYil7YS5lYWNoKGIsYS5wcm94eShmdW5jdGlvbihhLGIpe3RoaXMuX3N1cHJlc3NbYl09ITB9LHRoaXMpKX0sZS5wcm90b3R5cGUucmVsZWFzZT1mdW5jdGlvbihiKXthLmVhY2goYixhLnByb3h5KGZ1bmN0aW9uKGEsYil7ZGVsZXRlIHRoaXMuX3N1cHJlc3NbYl19LHRoaXMpKX0sZS5wcm90b3R5cGUucG9pbnRlcj1mdW5jdGlvbihhKXt2YXIgYz17eDpudWxsLHk6bnVsbH07cmV0dXJuIGE9YS5vcmlnaW5hbEV2ZW50fHxhfHxiLmV2ZW50LGE9YS50b3VjaGVzJiZhLnRvdWNoZXMubGVuZ3RoP2EudG91Y2hlc1swXTphLmNoYW5nZWRUb3VjaGVzJiZhLmNoYW5nZWRUb3VjaGVzLmxlbmd0aD9hLmNoYW5nZWRUb3VjaGVzWzBdOmEsYS5wYWdlWD8oYy54PWEucGFnZVgsYy55PWEucGFnZVkpOihjLng9YS5jbGllbnRYLGMueT1hLmNsaWVudFkpLGN9LGUucHJvdG90eXBlLmlzTnVtZXJpYz1mdW5jdGlvbihhKXtyZXR1cm4haXNOYU4ocGFyc2VGbG9hdChhKSl9LGUucHJvdG90eXBlLmRpZmZlcmVuY2U9ZnVuY3Rpb24oYSxiKXtyZXR1cm57eDphLngtYi54LHk6YS55LWIueX19LGEuZm4ub3dsQ2Fyb3VzZWw9ZnVuY3Rpb24oYil7dmFyIGM9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLDEpO3JldHVybiB0aGlzLmVhY2goZnVuY3Rpb24oKXt2YXIgZD1hKHRoaXMpLGY9ZC5kYXRhKFwib3dsLmNhcm91c2VsXCIpO2Z8fChmPW5ldyBlKHRoaXMsXCJvYmplY3RcIj09dHlwZW9mIGImJmIpLGQuZGF0YShcIm93bC5jYXJvdXNlbFwiLGYpLGEuZWFjaChbXCJuZXh0XCIsXCJwcmV2XCIsXCJ0b1wiLFwiZGVzdHJveVwiLFwicmVmcmVzaFwiLFwicmVwbGFjZVwiLFwiYWRkXCIsXCJyZW1vdmVcIl0sZnVuY3Rpb24oYixjKXtmLnJlZ2lzdGVyKHt0eXBlOmUuVHlwZS5FdmVudCxuYW1lOmN9KSxmLiRlbGVtZW50Lm9uKGMrXCIub3dsLmNhcm91c2VsLmNvcmVcIixhLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiZhLnJlbGF0ZWRUYXJnZXQhPT10aGlzJiYodGhpcy5zdXBwcmVzcyhbY10pLGZbY10uYXBwbHkodGhpcyxbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywxKSksdGhpcy5yZWxlYXNlKFtjXSkpfSxmKSl9KSksXCJzdHJpbmdcIj09dHlwZW9mIGImJlwiX1wiIT09Yi5jaGFyQXQoMCkmJmZbYl0uYXBwbHkoZixjKX0pfSxhLmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yPWV9KHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeSx3aW5kb3csZG9jdW1lbnQpLGZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWZ1bmN0aW9uKGIpe3RoaXMuX2NvcmU9Yix0aGlzLl9pbnRlcnZhbD1udWxsLHRoaXMuX3Zpc2libGU9bnVsbCx0aGlzLl9oYW5kbGVycz17XCJpbml0aWFsaXplZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiZ0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9SZWZyZXNoJiZ0aGlzLndhdGNoKCl9LHRoaXMpfSx0aGlzLl9jb3JlLm9wdGlvbnM9YS5leHRlbmQoe30sZS5EZWZhdWx0cyx0aGlzLl9jb3JlLm9wdGlvbnMpLHRoaXMuX2NvcmUuJGVsZW1lbnQub24odGhpcy5faGFuZGxlcnMpfTtlLkRlZmF1bHRzPXthdXRvUmVmcmVzaDohMCxhdXRvUmVmcmVzaEludGVydmFsOjUwMH0sZS5wcm90b3R5cGUud2F0Y2g9ZnVuY3Rpb24oKXt0aGlzLl9pbnRlcnZhbHx8KHRoaXMuX3Zpc2libGU9dGhpcy5fY29yZS5pc1Zpc2libGUoKSx0aGlzLl9pbnRlcnZhbD1iLnNldEludGVydmFsKGEucHJveHkodGhpcy5yZWZyZXNoLHRoaXMpLHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b1JlZnJlc2hJbnRlcnZhbCkpfSxlLnByb3RvdHlwZS5yZWZyZXNoPWZ1bmN0aW9uKCl7dGhpcy5fY29yZS5pc1Zpc2libGUoKSE9PXRoaXMuX3Zpc2libGUmJih0aGlzLl92aXNpYmxlPSF0aGlzLl92aXNpYmxlLHRoaXMuX2NvcmUuJGVsZW1lbnQudG9nZ2xlQ2xhc3MoXCJvd2wtaGlkZGVuXCIsIXRoaXMuX3Zpc2libGUpLHRoaXMuX3Zpc2libGUmJnRoaXMuX2NvcmUuaW52YWxpZGF0ZShcIndpZHRoXCIpJiZ0aGlzLl9jb3JlLnJlZnJlc2goKSl9LGUucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgYSxjO2IuY2xlYXJJbnRlcnZhbCh0aGlzLl9pbnRlcnZhbCk7Zm9yKGEgaW4gdGhpcy5faGFuZGxlcnMpdGhpcy5fY29yZS4kZWxlbWVudC5vZmYoYSx0aGlzLl9oYW5kbGVyc1thXSk7Zm9yKGMgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tjXSYmKHRoaXNbY109bnVsbCl9LGEuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5BdXRvUmVmcmVzaD1lfSh3aW5kb3cuWmVwdG98fHdpbmRvdy5qUXVlcnksd2luZG93LGRvY3VtZW50KSxmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1mdW5jdGlvbihiKXt0aGlzLl9jb3JlPWIsdGhpcy5fbG9hZGVkPVtdLHRoaXMuX2hhbmRsZXJzPXtcImluaXRpYWxpemVkLm93bC5jYXJvdXNlbCBjaGFuZ2Uub3dsLmNhcm91c2VsIHJlc2l6ZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihiKXtpZihiLm5hbWVzcGFjZSYmdGhpcy5fY29yZS5zZXR0aW5ncyYmdGhpcy5fY29yZS5zZXR0aW5ncy5sYXp5TG9hZCYmKGIucHJvcGVydHkmJlwicG9zaXRpb25cIj09Yi5wcm9wZXJ0eS5uYW1lfHxcImluaXRpYWxpemVkXCI9PWIudHlwZSkpe3ZhciBjPXRoaXMuX2NvcmUuc2V0dGluZ3MsZT1jLmNlbnRlciYmTWF0aC5jZWlsKGMuaXRlbXMvMil8fGMuaXRlbXMsZj1jLmNlbnRlciYmLTEqZXx8MCxnPShiLnByb3BlcnR5JiZiLnByb3BlcnR5LnZhbHVlIT09ZD9iLnByb3BlcnR5LnZhbHVlOnRoaXMuX2NvcmUuY3VycmVudCgpKStmLGg9dGhpcy5fY29yZS5jbG9uZXMoKS5sZW5ndGgsaT1hLnByb3h5KGZ1bmN0aW9uKGEsYil7dGhpcy5sb2FkKGIpfSx0aGlzKTtmb3IoYy5sYXp5TG9hZEVhZ2VyPjAmJihlKz1jLmxhenlMb2FkRWFnZXIsYy5sb29wJiYoZy09Yy5sYXp5TG9hZEVhZ2VyLGUrKykpO2YrKzxlOyl0aGlzLmxvYWQoaC8yK3RoaXMuX2NvcmUucmVsYXRpdmUoZykpLGgmJmEuZWFjaCh0aGlzLl9jb3JlLmNsb25lcyh0aGlzLl9jb3JlLnJlbGF0aXZlKGcpKSxpKSxnKyt9fSx0aGlzKX0sdGhpcy5fY29yZS5vcHRpb25zPWEuZXh0ZW5kKHt9LGUuRGVmYXVsdHMsdGhpcy5fY29yZS5vcHRpb25zKSx0aGlzLl9jb3JlLiRlbGVtZW50Lm9uKHRoaXMuX2hhbmRsZXJzKX07ZS5EZWZhdWx0cz17bGF6eUxvYWQ6ITEsbGF6eUxvYWRFYWdlcjowfSxlLnByb3RvdHlwZS5sb2FkPWZ1bmN0aW9uKGMpe3ZhciBkPXRoaXMuX2NvcmUuJHN0YWdlLmNoaWxkcmVuKCkuZXEoYyksZT1kJiZkLmZpbmQoXCIub3dsLWxhenlcIik7IWV8fGEuaW5BcnJheShkLmdldCgwKSx0aGlzLl9sb2FkZWQpPi0xfHwoZS5lYWNoKGEucHJveHkoZnVuY3Rpb24oYyxkKXt2YXIgZSxmPWEoZCksZz1iLmRldmljZVBpeGVsUmF0aW8+MSYmZi5hdHRyKFwiZGF0YS1zcmMtcmV0aW5hXCIpfHxmLmF0dHIoXCJkYXRhLXNyY1wiKXx8Zi5hdHRyKFwiZGF0YS1zcmNzZXRcIik7dGhpcy5fY29yZS50cmlnZ2VyKFwibG9hZFwiLHtlbGVtZW50OmYsdXJsOmd9LFwibGF6eVwiKSxmLmlzKFwiaW1nXCIpP2Yub25lKFwibG9hZC5vd2wubGF6eVwiLGEucHJveHkoZnVuY3Rpb24oKXtmLmNzcyhcIm9wYWNpdHlcIiwxKSx0aGlzLl9jb3JlLnRyaWdnZXIoXCJsb2FkZWRcIix7ZWxlbWVudDpmLHVybDpnfSxcImxhenlcIil9LHRoaXMpKS5hdHRyKFwic3JjXCIsZyk6Zi5pcyhcInNvdXJjZVwiKT9mLm9uZShcImxvYWQub3dsLmxhenlcIixhLnByb3h5KGZ1bmN0aW9uKCl7dGhpcy5fY29yZS50cmlnZ2VyKFwibG9hZGVkXCIse2VsZW1lbnQ6Zix1cmw6Z30sXCJsYXp5XCIpfSx0aGlzKSkuYXR0cihcInNyY3NldFwiLGcpOihlPW5ldyBJbWFnZSxlLm9ubG9hZD1hLnByb3h5KGZ1bmN0aW9uKCl7Zi5jc3Moe1wiYmFja2dyb3VuZC1pbWFnZVwiOid1cmwoXCInK2crJ1wiKScsb3BhY2l0eTpcIjFcIn0pLHRoaXMuX2NvcmUudHJpZ2dlcihcImxvYWRlZFwiLHtlbGVtZW50OmYsdXJsOmd9LFwibGF6eVwiKX0sdGhpcyksZS5zcmM9Zyl9LHRoaXMpKSx0aGlzLl9sb2FkZWQucHVzaChkLmdldCgwKSkpfSxlLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dmFyIGEsYjtmb3IoYSBpbiB0aGlzLmhhbmRsZXJzKXRoaXMuX2NvcmUuJGVsZW1lbnQub2ZmKGEsdGhpcy5oYW5kbGVyc1thXSk7Zm9yKGIgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tiXSYmKHRoaXNbYl09bnVsbCl9LGEuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5MYXp5PWV9KHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeSx3aW5kb3csZG9jdW1lbnQpLGZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWZ1bmN0aW9uKGMpe3RoaXMuX2NvcmU9Yyx0aGlzLl9wcmV2aW91c0hlaWdodD1udWxsLHRoaXMuX2hhbmRsZXJzPXtcImluaXRpYWxpemVkLm93bC5jYXJvdXNlbCByZWZyZXNoZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmdGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0JiZ0aGlzLnVwZGF0ZSgpfSx0aGlzKSxcImNoYW5nZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmdGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0JiZcInBvc2l0aW9uXCI9PT1hLnByb3BlcnR5Lm5hbWUmJnRoaXMudXBkYXRlKCl9LHRoaXMpLFwibG9hZGVkLm93bC5sYXp5XCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmdGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0JiZhLmVsZW1lbnQuY2xvc2VzdChcIi5cIit0aGlzLl9jb3JlLnNldHRpbmdzLml0ZW1DbGFzcykuaW5kZXgoKT09PXRoaXMuX2NvcmUuY3VycmVudCgpJiZ0aGlzLnVwZGF0ZSgpfSx0aGlzKX0sdGhpcy5fY29yZS5vcHRpb25zPWEuZXh0ZW5kKHt9LGUuRGVmYXVsdHMsdGhpcy5fY29yZS5vcHRpb25zKSx0aGlzLl9jb3JlLiRlbGVtZW50Lm9uKHRoaXMuX2hhbmRsZXJzKSx0aGlzLl9pbnRlcnZhbElkPW51bGw7dmFyIGQ9dGhpczthKGIpLm9uKFwibG9hZFwiLGZ1bmN0aW9uKCl7ZC5fY29yZS5zZXR0aW5ncy5hdXRvSGVpZ2h0JiZkLnVwZGF0ZSgpfSksYShiKS5yZXNpemUoZnVuY3Rpb24oKXtkLl9jb3JlLnNldHRpbmdzLmF1dG9IZWlnaHQmJihudWxsIT1kLl9pbnRlcnZhbElkJiZjbGVhclRpbWVvdXQoZC5faW50ZXJ2YWxJZCksZC5faW50ZXJ2YWxJZD1zZXRUaW1lb3V0KGZ1bmN0aW9uKCl7ZC51cGRhdGUoKX0sMjUwKSl9KX07ZS5EZWZhdWx0cz17YXV0b0hlaWdodDohMSxhdXRvSGVpZ2h0Q2xhc3M6XCJvd2wtaGVpZ2h0XCJ9LGUucHJvdG90eXBlLnVwZGF0ZT1mdW5jdGlvbigpe3ZhciBiPXRoaXMuX2NvcmUuX2N1cnJlbnQsYz1iK3RoaXMuX2NvcmUuc2V0dGluZ3MuaXRlbXMsZD10aGlzLl9jb3JlLnNldHRpbmdzLmxhenlMb2FkLGU9dGhpcy5fY29yZS4kc3RhZ2UuY2hpbGRyZW4oKS50b0FycmF5KCkuc2xpY2UoYixjKSxmPVtdLGc9MDthLmVhY2goZSxmdW5jdGlvbihiLGMpe2YucHVzaChhKGMpLmhlaWdodCgpKX0pLGc9TWF0aC5tYXguYXBwbHkobnVsbCxmKSxnPD0xJiZkJiZ0aGlzLl9wcmV2aW91c0hlaWdodCYmKGc9dGhpcy5fcHJldmlvdXNIZWlnaHQpLHRoaXMuX3ByZXZpb3VzSGVpZ2h0PWcsdGhpcy5fY29yZS4kc3RhZ2UucGFyZW50KCkuaGVpZ2h0KGcpLmFkZENsYXNzKHRoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b0hlaWdodENsYXNzKX0sZS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBhLGI7Zm9yKGEgaW4gdGhpcy5faGFuZGxlcnMpdGhpcy5fY29yZS4kZWxlbWVudC5vZmYoYSx0aGlzLl9oYW5kbGVyc1thXSk7Zm9yKGIgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tiXSYmKHRoaXNbYl09bnVsbCl9LGEuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5BdXRvSGVpZ2h0PWV9KHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeSx3aW5kb3csZG9jdW1lbnQpLGZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPWZ1bmN0aW9uKGIpe3RoaXMuX2NvcmU9Yix0aGlzLl92aWRlb3M9e30sdGhpcy5fcGxheWluZz1udWxsLHRoaXMuX2hhbmRsZXJzPXtcImluaXRpYWxpemVkLm93bC5jYXJvdXNlbFwiOmEucHJveHkoZnVuY3Rpb24oYSl7YS5uYW1lc3BhY2UmJnRoaXMuX2NvcmUucmVnaXN0ZXIoe3R5cGU6XCJzdGF0ZVwiLG5hbWU6XCJwbGF5aW5nXCIsdGFnczpbXCJpbnRlcmFjdGluZ1wiXX0pfSx0aGlzKSxcInJlc2l6ZS5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiZ0aGlzLl9jb3JlLnNldHRpbmdzLnZpZGVvJiZ0aGlzLmlzSW5GdWxsU2NyZWVuKCkmJmEucHJldmVudERlZmF1bHQoKX0sdGhpcyksXCJyZWZyZXNoZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmdGhpcy5fY29yZS5pcyhcInJlc2l6aW5nXCIpJiZ0aGlzLl9jb3JlLiRzdGFnZS5maW5kKFwiLmNsb25lZCAub3dsLXZpZGVvLWZyYW1lXCIpLnJlbW92ZSgpfSx0aGlzKSxcImNoYW5nZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmXCJwb3NpdGlvblwiPT09YS5wcm9wZXJ0eS5uYW1lJiZ0aGlzLl9wbGF5aW5nJiZ0aGlzLnN0b3AoKX0sdGhpcyksXCJwcmVwYXJlZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGIpe2lmKGIubmFtZXNwYWNlKXt2YXIgYz1hKGIuY29udGVudCkuZmluZChcIi5vd2wtdmlkZW9cIik7Yy5sZW5ndGgmJihjLmNzcyhcImRpc3BsYXlcIixcIm5vbmVcIiksdGhpcy5mZXRjaChjLGEoYi5jb250ZW50KSkpfX0sdGhpcyl9LHRoaXMuX2NvcmUub3B0aW9ucz1hLmV4dGVuZCh7fSxlLkRlZmF1bHRzLHRoaXMuX2NvcmUub3B0aW9ucyksdGhpcy5fY29yZS4kZWxlbWVudC5vbih0aGlzLl9oYW5kbGVycyksdGhpcy5fY29yZS4kZWxlbWVudC5vbihcImNsaWNrLm93bC52aWRlb1wiLFwiLm93bC12aWRlby1wbGF5LWljb25cIixhLnByb3h5KGZ1bmN0aW9uKGEpe3RoaXMucGxheShhKX0sdGhpcykpfTtlLkRlZmF1bHRzPXt2aWRlbzohMSx2aWRlb0hlaWdodDohMSx2aWRlb1dpZHRoOiExfSxlLnByb3RvdHlwZS5mZXRjaD1mdW5jdGlvbihhLGIpe3ZhciBjPWZ1bmN0aW9uKCl7cmV0dXJuIGEuYXR0cihcImRhdGEtdmltZW8taWRcIik/XCJ2aW1lb1wiOmEuYXR0cihcImRhdGEtdnphYXItaWRcIik/XCJ2emFhclwiOlwieW91dHViZVwifSgpLGQ9YS5hdHRyKFwiZGF0YS12aW1lby1pZFwiKXx8YS5hdHRyKFwiZGF0YS15b3V0dWJlLWlkXCIpfHxhLmF0dHIoXCJkYXRhLXZ6YWFyLWlkXCIpLGU9YS5hdHRyKFwiZGF0YS13aWR0aFwiKXx8dGhpcy5fY29yZS5zZXR0aW5ncy52aWRlb1dpZHRoLGY9YS5hdHRyKFwiZGF0YS1oZWlnaHRcIil8fHRoaXMuX2NvcmUuc2V0dGluZ3MudmlkZW9IZWlnaHQsZz1hLmF0dHIoXCJocmVmXCIpO2lmKCFnKXRocm93IG5ldyBFcnJvcihcIk1pc3NpbmcgdmlkZW8gVVJMLlwiKTtpZihkPWcubWF0Y2goLyhodHRwOnxodHRwczp8KVxcL1xcLyhwbGF5ZXIufHd3dy58YXBwLik/KHZpbWVvXFwuY29tfHlvdXR1KGJlXFwuY29tfFxcLmJlfGJlXFwuZ29vZ2xlYXBpc1xcLmNvbXxiZVxcLW5vY29va2llXFwuY29tKXx2emFhclxcLmNvbSlcXC8odmlkZW9cXC98dmlkZW9zXFwvfGVtYmVkXFwvfGNoYW5uZWxzXFwvLitcXC98Z3JvdXBzXFwvLitcXC98d2F0Y2hcXD92PXx2XFwvKT8oW0EtWmEtejAtOS5fJS1dKikoXFwmXFxTKyk/LyksZFszXS5pbmRleE9mKFwieW91dHVcIik+LTEpYz1cInlvdXR1YmVcIjtlbHNlIGlmKGRbM10uaW5kZXhPZihcInZpbWVvXCIpPi0xKWM9XCJ2aW1lb1wiO2Vsc2V7aWYoIShkWzNdLmluZGV4T2YoXCJ2emFhclwiKT4tMSkpdGhyb3cgbmV3IEVycm9yKFwiVmlkZW8gVVJMIG5vdCBzdXBwb3J0ZWQuXCIpO2M9XCJ2emFhclwifWQ9ZFs2XSx0aGlzLl92aWRlb3NbZ109e3R5cGU6YyxpZDpkLHdpZHRoOmUsaGVpZ2h0OmZ9LGIuYXR0cihcImRhdGEtdmlkZW9cIixnKSx0aGlzLnRodW1ibmFpbChhLHRoaXMuX3ZpZGVvc1tnXSl9LGUucHJvdG90eXBlLnRodW1ibmFpbD1mdW5jdGlvbihiLGMpe3ZhciBkLGUsZixnPWMud2lkdGgmJmMuaGVpZ2h0P1wid2lkdGg6XCIrYy53aWR0aCtcInB4O2hlaWdodDpcIitjLmhlaWdodCtcInB4O1wiOlwiXCIsaD1iLmZpbmQoXCJpbWdcIiksaT1cInNyY1wiLGo9XCJcIixrPXRoaXMuX2NvcmUuc2V0dGluZ3MsbD1mdW5jdGlvbihjKXtlPSc8ZGl2IGNsYXNzPVwib3dsLXZpZGVvLXBsYXktaWNvblwiPjwvZGl2PicsZD1rLmxhenlMb2FkP2EoXCI8ZGl2Lz5cIix7Y2xhc3M6XCJvd2wtdmlkZW8tdG4gXCIraixzcmNUeXBlOmN9KTphKFwiPGRpdi8+XCIse2NsYXNzOlwib3dsLXZpZGVvLXRuXCIsc3R5bGU6XCJvcGFjaXR5OjE7YmFja2dyb3VuZC1pbWFnZTp1cmwoXCIrYytcIilcIn0pLGIuYWZ0ZXIoZCksYi5hZnRlcihlKX07aWYoYi53cmFwKGEoXCI8ZGl2Lz5cIix7Y2xhc3M6XCJvd2wtdmlkZW8td3JhcHBlclwiLHN0eWxlOmd9KSksdGhpcy5fY29yZS5zZXR0aW5ncy5sYXp5TG9hZCYmKGk9XCJkYXRhLXNyY1wiLGo9XCJvd2wtbGF6eVwiKSxoLmxlbmd0aClyZXR1cm4gbChoLmF0dHIoaSkpLGgucmVtb3ZlKCksITE7XCJ5b3V0dWJlXCI9PT1jLnR5cGU/KGY9XCIvL2ltZy55b3V0dWJlLmNvbS92aS9cIitjLmlkK1wiL2hxZGVmYXVsdC5qcGdcIixsKGYpKTpcInZpbWVvXCI9PT1jLnR5cGU/YS5hamF4KHt0eXBlOlwiR0VUXCIsdXJsOlwiLy92aW1lby5jb20vYXBpL3YyL3ZpZGVvL1wiK2MuaWQrXCIuanNvblwiLGpzb25wOlwiY2FsbGJhY2tcIixkYXRhVHlwZTpcImpzb25wXCIsc3VjY2VzczpmdW5jdGlvbihhKXtmPWFbMF0udGh1bWJuYWlsX2xhcmdlLGwoZil9fSk6XCJ2emFhclwiPT09Yy50eXBlJiZhLmFqYXgoe3R5cGU6XCJHRVRcIix1cmw6XCIvL3Z6YWFyLmNvbS9hcGkvdmlkZW9zL1wiK2MuaWQrXCIuanNvblwiLGpzb25wOlwiY2FsbGJhY2tcIixkYXRhVHlwZTpcImpzb25wXCIsc3VjY2VzczpmdW5jdGlvbihhKXtmPWEuZnJhbWVncmFiX3VybCxsKGYpfX0pfSxlLnByb3RvdHlwZS5zdG9wPWZ1bmN0aW9uKCl7dGhpcy5fY29yZS50cmlnZ2VyKFwic3RvcFwiLG51bGwsXCJ2aWRlb1wiKSx0aGlzLl9wbGF5aW5nLmZpbmQoXCIub3dsLXZpZGVvLWZyYW1lXCIpLnJlbW92ZSgpLHRoaXMuX3BsYXlpbmcucmVtb3ZlQ2xhc3MoXCJvd2wtdmlkZW8tcGxheWluZ1wiKSx0aGlzLl9wbGF5aW5nPW51bGwsdGhpcy5fY29yZS5sZWF2ZShcInBsYXlpbmdcIiksdGhpcy5fY29yZS50cmlnZ2VyKFwic3RvcHBlZFwiLG51bGwsXCJ2aWRlb1wiKX0sZS5wcm90b3R5cGUucGxheT1mdW5jdGlvbihiKXt2YXIgYyxkPWEoYi50YXJnZXQpLGU9ZC5jbG9zZXN0KFwiLlwiK3RoaXMuX2NvcmUuc2V0dGluZ3MuaXRlbUNsYXNzKSxmPXRoaXMuX3ZpZGVvc1tlLmF0dHIoXCJkYXRhLXZpZGVvXCIpXSxnPWYud2lkdGh8fFwiMTAwJVwiLGg9Zi5oZWlnaHR8fHRoaXMuX2NvcmUuJHN0YWdlLmhlaWdodCgpO3RoaXMuX3BsYXlpbmd8fCh0aGlzLl9jb3JlLmVudGVyKFwicGxheWluZ1wiKSx0aGlzLl9jb3JlLnRyaWdnZXIoXCJwbGF5XCIsbnVsbCxcInZpZGVvXCIpLGU9dGhpcy5fY29yZS5pdGVtcyh0aGlzLl9jb3JlLnJlbGF0aXZlKGUuaW5kZXgoKSkpLHRoaXMuX2NvcmUucmVzZXQoZS5pbmRleCgpKSxjPWEoJzxpZnJhbWUgZnJhbWVib3JkZXI9XCIwXCIgYWxsb3dmdWxsc2NyZWVuIG1vemFsbG93ZnVsbHNjcmVlbiB3ZWJraXRBbGxvd0Z1bGxTY3JlZW4gPjwvaWZyYW1lPicpLGMuYXR0cihcImhlaWdodFwiLGgpLGMuYXR0cihcIndpZHRoXCIsZyksXCJ5b3V0dWJlXCI9PT1mLnR5cGU/Yy5hdHRyKFwic3JjXCIsXCIvL3d3dy55b3V0dWJlLmNvbS9lbWJlZC9cIitmLmlkK1wiP2F1dG9wbGF5PTEmcmVsPTAmdj1cIitmLmlkKTpcInZpbWVvXCI9PT1mLnR5cGU/Yy5hdHRyKFwic3JjXCIsXCIvL3BsYXllci52aW1lby5jb20vdmlkZW8vXCIrZi5pZCtcIj9hdXRvcGxheT0xXCIpOlwidnphYXJcIj09PWYudHlwZSYmYy5hdHRyKFwic3JjXCIsXCIvL3ZpZXcudnphYXIuY29tL1wiK2YuaWQrXCIvcGxheWVyP2F1dG9wbGF5PXRydWVcIiksYShjKS53cmFwKCc8ZGl2IGNsYXNzPVwib3dsLXZpZGVvLWZyYW1lXCIgLz4nKS5pbnNlcnRBZnRlcihlLmZpbmQoXCIub3dsLXZpZGVvXCIpKSx0aGlzLl9wbGF5aW5nPWUuYWRkQ2xhc3MoXCJvd2wtdmlkZW8tcGxheWluZ1wiKSl9LGUucHJvdG90eXBlLmlzSW5GdWxsU2NyZWVuPWZ1bmN0aW9uKCl7dmFyIGI9Yy5mdWxsc2NyZWVuRWxlbWVudHx8Yy5tb3pGdWxsU2NyZWVuRWxlbWVudHx8Yy53ZWJraXRGdWxsc2NyZWVuRWxlbWVudDtyZXR1cm4gYiYmYShiKS5wYXJlbnQoKS5oYXNDbGFzcyhcIm93bC12aWRlby1mcmFtZVwiKX0sZS5wcm90b3R5cGUuZGVzdHJveT1mdW5jdGlvbigpe3ZhciBhLGI7dGhpcy5fY29yZS4kZWxlbWVudC5vZmYoXCJjbGljay5vd2wudmlkZW9cIik7Zm9yKGEgaW4gdGhpcy5faGFuZGxlcnMpdGhpcy5fY29yZS4kZWxlbWVudC5vZmYoYSx0aGlzLl9oYW5kbGVyc1thXSk7Zm9yKGIgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tiXSYmKHRoaXNbYl09bnVsbCl9LGEuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5WaWRlbz1lfSh3aW5kb3cuWmVwdG98fHdpbmRvdy5qUXVlcnksd2luZG93LGRvY3VtZW50KSxmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1mdW5jdGlvbihiKXt0aGlzLmNvcmU9Yix0aGlzLmNvcmUub3B0aW9ucz1hLmV4dGVuZCh7fSxlLkRlZmF1bHRzLHRoaXMuY29yZS5vcHRpb25zKSx0aGlzLnN3YXBwaW5nPSEwLHRoaXMucHJldmlvdXM9ZCx0aGlzLm5leHQ9ZCx0aGlzLmhhbmRsZXJzPXtcImNoYW5nZS5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiZcInBvc2l0aW9uXCI9PWEucHJvcGVydHkubmFtZSYmKHRoaXMucHJldmlvdXM9dGhpcy5jb3JlLmN1cnJlbnQoKSx0aGlzLm5leHQ9YS5wcm9wZXJ0eS52YWx1ZSl9LHRoaXMpLFwiZHJhZy5vd2wuY2Fyb3VzZWwgZHJhZ2dlZC5vd2wuY2Fyb3VzZWwgdHJhbnNsYXRlZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiYodGhpcy5zd2FwcGluZz1cInRyYW5zbGF0ZWRcIj09YS50eXBlKX0sdGhpcyksXCJ0cmFuc2xhdGUub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmdGhpcy5zd2FwcGluZyYmKHRoaXMuY29yZS5vcHRpb25zLmFuaW1hdGVPdXR8fHRoaXMuY29yZS5vcHRpb25zLmFuaW1hdGVJbikmJnRoaXMuc3dhcCgpfSx0aGlzKX0sdGhpcy5jb3JlLiRlbGVtZW50Lm9uKHRoaXMuaGFuZGxlcnMpfTtlLkRlZmF1bHRzPXthbmltYXRlT3V0OiExLFxuYW5pbWF0ZUluOiExfSxlLnByb3RvdHlwZS5zd2FwPWZ1bmN0aW9uKCl7aWYoMT09PXRoaXMuY29yZS5zZXR0aW5ncy5pdGVtcyYmYS5zdXBwb3J0LmFuaW1hdGlvbiYmYS5zdXBwb3J0LnRyYW5zaXRpb24pe3RoaXMuY29yZS5zcGVlZCgwKTt2YXIgYixjPWEucHJveHkodGhpcy5jbGVhcix0aGlzKSxkPXRoaXMuY29yZS4kc3RhZ2UuY2hpbGRyZW4oKS5lcSh0aGlzLnByZXZpb3VzKSxlPXRoaXMuY29yZS4kc3RhZ2UuY2hpbGRyZW4oKS5lcSh0aGlzLm5leHQpLGY9dGhpcy5jb3JlLnNldHRpbmdzLmFuaW1hdGVJbixnPXRoaXMuY29yZS5zZXR0aW5ncy5hbmltYXRlT3V0O3RoaXMuY29yZS5jdXJyZW50KCkhPT10aGlzLnByZXZpb3VzJiYoZyYmKGI9dGhpcy5jb3JlLmNvb3JkaW5hdGVzKHRoaXMucHJldmlvdXMpLXRoaXMuY29yZS5jb29yZGluYXRlcyh0aGlzLm5leHQpLGQub25lKGEuc3VwcG9ydC5hbmltYXRpb24uZW5kLGMpLmNzcyh7bGVmdDpiK1wicHhcIn0pLmFkZENsYXNzKFwiYW5pbWF0ZWQgb3dsLWFuaW1hdGVkLW91dFwiKS5hZGRDbGFzcyhnKSksZiYmZS5vbmUoYS5zdXBwb3J0LmFuaW1hdGlvbi5lbmQsYykuYWRkQ2xhc3MoXCJhbmltYXRlZCBvd2wtYW5pbWF0ZWQtaW5cIikuYWRkQ2xhc3MoZikpfX0sZS5wcm90b3R5cGUuY2xlYXI9ZnVuY3Rpb24oYil7YShiLnRhcmdldCkuY3NzKHtsZWZ0OlwiXCJ9KS5yZW1vdmVDbGFzcyhcImFuaW1hdGVkIG93bC1hbmltYXRlZC1vdXQgb3dsLWFuaW1hdGVkLWluXCIpLnJlbW92ZUNsYXNzKHRoaXMuY29yZS5zZXR0aW5ncy5hbmltYXRlSW4pLnJlbW92ZUNsYXNzKHRoaXMuY29yZS5zZXR0aW5ncy5hbmltYXRlT3V0KSx0aGlzLmNvcmUub25UcmFuc2l0aW9uRW5kKCl9LGUucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgYSxiO2ZvcihhIGluIHRoaXMuaGFuZGxlcnMpdGhpcy5jb3JlLiRlbGVtZW50Lm9mZihhLHRoaXMuaGFuZGxlcnNbYV0pO2ZvcihiIGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKVwiZnVuY3Rpb25cIiE9dHlwZW9mIHRoaXNbYl0mJih0aGlzW2JdPW51bGwpfSxhLmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuQW5pbWF0ZT1lfSh3aW5kb3cuWmVwdG98fHdpbmRvdy5qUXVlcnksd2luZG93LGRvY3VtZW50KSxmdW5jdGlvbihhLGIsYyxkKXt2YXIgZT1mdW5jdGlvbihiKXt0aGlzLl9jb3JlPWIsdGhpcy5fY2FsbD1udWxsLHRoaXMuX3RpbWU9MCx0aGlzLl90aW1lb3V0PTAsdGhpcy5fcGF1c2VkPSEwLHRoaXMuX2hhbmRsZXJzPXtcImNoYW5nZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmXCJzZXR0aW5nc1wiPT09YS5wcm9wZXJ0eS5uYW1lP3RoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b3BsYXk/dGhpcy5wbGF5KCk6dGhpcy5zdG9wKCk6YS5uYW1lc3BhY2UmJlwicG9zaXRpb25cIj09PWEucHJvcGVydHkubmFtZSYmdGhpcy5fcGF1c2VkJiYodGhpcy5fdGltZT0wKX0sdGhpcyksXCJpbml0aWFsaXplZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiZ0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9wbGF5JiZ0aGlzLnBsYXkoKX0sdGhpcyksXCJwbGF5Lm93bC5hdXRvcGxheVwiOmEucHJveHkoZnVuY3Rpb24oYSxiLGMpe2EubmFtZXNwYWNlJiZ0aGlzLnBsYXkoYixjKX0sdGhpcyksXCJzdG9wLm93bC5hdXRvcGxheVwiOmEucHJveHkoZnVuY3Rpb24oYSl7YS5uYW1lc3BhY2UmJnRoaXMuc3RvcCgpfSx0aGlzKSxcIm1vdXNlb3Zlci5vd2wuYXV0b3BsYXlcIjphLnByb3h5KGZ1bmN0aW9uKCl7dGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvcGxheUhvdmVyUGF1c2UmJnRoaXMuX2NvcmUuaXMoXCJyb3RhdGluZ1wiKSYmdGhpcy5wYXVzZSgpfSx0aGlzKSxcIm1vdXNlbGVhdmUub3dsLmF1dG9wbGF5XCI6YS5wcm94eShmdW5jdGlvbigpe3RoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b3BsYXlIb3ZlclBhdXNlJiZ0aGlzLl9jb3JlLmlzKFwicm90YXRpbmdcIikmJnRoaXMucGxheSgpfSx0aGlzKSxcInRvdWNoc3RhcnQub3dsLmNvcmVcIjphLnByb3h5KGZ1bmN0aW9uKCl7dGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvcGxheUhvdmVyUGF1c2UmJnRoaXMuX2NvcmUuaXMoXCJyb3RhdGluZ1wiKSYmdGhpcy5wYXVzZSgpfSx0aGlzKSxcInRvdWNoZW5kLm93bC5jb3JlXCI6YS5wcm94eShmdW5jdGlvbigpe3RoaXMuX2NvcmUuc2V0dGluZ3MuYXV0b3BsYXlIb3ZlclBhdXNlJiZ0aGlzLnBsYXkoKX0sdGhpcyl9LHRoaXMuX2NvcmUuJGVsZW1lbnQub24odGhpcy5faGFuZGxlcnMpLHRoaXMuX2NvcmUub3B0aW9ucz1hLmV4dGVuZCh7fSxlLkRlZmF1bHRzLHRoaXMuX2NvcmUub3B0aW9ucyl9O2UuRGVmYXVsdHM9e2F1dG9wbGF5OiExLGF1dG9wbGF5VGltZW91dDo1ZTMsYXV0b3BsYXlIb3ZlclBhdXNlOiExLGF1dG9wbGF5U3BlZWQ6ITF9LGUucHJvdG90eXBlLl9uZXh0PWZ1bmN0aW9uKGQpe3RoaXMuX2NhbGw9Yi5zZXRUaW1lb3V0KGEucHJveHkodGhpcy5fbmV4dCx0aGlzLGQpLHRoaXMuX3RpbWVvdXQqKE1hdGgucm91bmQodGhpcy5yZWFkKCkvdGhpcy5fdGltZW91dCkrMSktdGhpcy5yZWFkKCkpLHRoaXMuX2NvcmUuaXMoXCJpbnRlcmFjdGluZ1wiKXx8Yy5oaWRkZW58fHRoaXMuX2NvcmUubmV4dChkfHx0aGlzLl9jb3JlLnNldHRpbmdzLmF1dG9wbGF5U3BlZWQpfSxlLnByb3RvdHlwZS5yZWFkPWZ1bmN0aW9uKCl7cmV0dXJuKG5ldyBEYXRlKS5nZXRUaW1lKCktdGhpcy5fdGltZX0sZS5wcm90b3R5cGUucGxheT1mdW5jdGlvbihjLGQpe3ZhciBlO3RoaXMuX2NvcmUuaXMoXCJyb3RhdGluZ1wiKXx8dGhpcy5fY29yZS5lbnRlcihcInJvdGF0aW5nXCIpLGM9Y3x8dGhpcy5fY29yZS5zZXR0aW5ncy5hdXRvcGxheVRpbWVvdXQsZT1NYXRoLm1pbih0aGlzLl90aW1lJSh0aGlzLl90aW1lb3V0fHxjKSxjKSx0aGlzLl9wYXVzZWQ/KHRoaXMuX3RpbWU9dGhpcy5yZWFkKCksdGhpcy5fcGF1c2VkPSExKTpiLmNsZWFyVGltZW91dCh0aGlzLl9jYWxsKSx0aGlzLl90aW1lKz10aGlzLnJlYWQoKSVjLWUsdGhpcy5fdGltZW91dD1jLHRoaXMuX2NhbGw9Yi5zZXRUaW1lb3V0KGEucHJveHkodGhpcy5fbmV4dCx0aGlzLGQpLGMtZSl9LGUucHJvdG90eXBlLnN0b3A9ZnVuY3Rpb24oKXt0aGlzLl9jb3JlLmlzKFwicm90YXRpbmdcIikmJih0aGlzLl90aW1lPTAsdGhpcy5fcGF1c2VkPSEwLGIuY2xlYXJUaW1lb3V0KHRoaXMuX2NhbGwpLHRoaXMuX2NvcmUubGVhdmUoXCJyb3RhdGluZ1wiKSl9LGUucHJvdG90eXBlLnBhdXNlPWZ1bmN0aW9uKCl7dGhpcy5fY29yZS5pcyhcInJvdGF0aW5nXCIpJiYhdGhpcy5fcGF1c2VkJiYodGhpcy5fdGltZT10aGlzLnJlYWQoKSx0aGlzLl9wYXVzZWQ9ITAsYi5jbGVhclRpbWVvdXQodGhpcy5fY2FsbCkpfSxlLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dmFyIGEsYjt0aGlzLnN0b3AoKTtmb3IoYSBpbiB0aGlzLl9oYW5kbGVycyl0aGlzLl9jb3JlLiRlbGVtZW50Lm9mZihhLHRoaXMuX2hhbmRsZXJzW2FdKTtmb3IoYiBpbiBPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcyh0aGlzKSlcImZ1bmN0aW9uXCIhPXR5cGVvZiB0aGlzW2JdJiYodGhpc1tiXT1udWxsKX0sYS5mbi5vd2xDYXJvdXNlbC5Db25zdHJ1Y3Rvci5QbHVnaW5zLmF1dG9wbGF5PWV9KHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeSx3aW5kb3csZG9jdW1lbnQpLGZ1bmN0aW9uKGEsYixjLGQpe1widXNlIHN0cmljdFwiO3ZhciBlPWZ1bmN0aW9uKGIpe3RoaXMuX2NvcmU9Yix0aGlzLl9pbml0aWFsaXplZD0hMSx0aGlzLl9wYWdlcz1bXSx0aGlzLl9jb250cm9scz17fSx0aGlzLl90ZW1wbGF0ZXM9W10sdGhpcy4kZWxlbWVudD10aGlzLl9jb3JlLiRlbGVtZW50LHRoaXMuX292ZXJyaWRlcz17bmV4dDp0aGlzLl9jb3JlLm5leHQscHJldjp0aGlzLl9jb3JlLnByZXYsdG86dGhpcy5fY29yZS50b30sdGhpcy5faGFuZGxlcnM9e1wicHJlcGFyZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihiKXtiLm5hbWVzcGFjZSYmdGhpcy5fY29yZS5zZXR0aW5ncy5kb3RzRGF0YSYmdGhpcy5fdGVtcGxhdGVzLnB1c2goJzxkaXYgY2xhc3M9XCInK3RoaXMuX2NvcmUuc2V0dGluZ3MuZG90Q2xhc3MrJ1wiPicrYShiLmNvbnRlbnQpLmZpbmQoXCJbZGF0YS1kb3RdXCIpLmFkZEJhY2soXCJbZGF0YS1kb3RdXCIpLmF0dHIoXCJkYXRhLWRvdFwiKStcIjwvZGl2PlwiKX0sdGhpcyksXCJhZGRlZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiZ0aGlzLl9jb3JlLnNldHRpbmdzLmRvdHNEYXRhJiZ0aGlzLl90ZW1wbGF0ZXMuc3BsaWNlKGEucG9zaXRpb24sMCx0aGlzLl90ZW1wbGF0ZXMucG9wKCkpfSx0aGlzKSxcInJlbW92ZS5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiZ0aGlzLl9jb3JlLnNldHRpbmdzLmRvdHNEYXRhJiZ0aGlzLl90ZW1wbGF0ZXMuc3BsaWNlKGEucG9zaXRpb24sMSl9LHRoaXMpLFwiY2hhbmdlZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGEpe2EubmFtZXNwYWNlJiZcInBvc2l0aW9uXCI9PWEucHJvcGVydHkubmFtZSYmdGhpcy5kcmF3KCl9LHRoaXMpLFwiaW5pdGlhbGl6ZWQub3dsLmNhcm91c2VsXCI6YS5wcm94eShmdW5jdGlvbihhKXthLm5hbWVzcGFjZSYmIXRoaXMuX2luaXRpYWxpemVkJiYodGhpcy5fY29yZS50cmlnZ2VyKFwiaW5pdGlhbGl6ZVwiLG51bGwsXCJuYXZpZ2F0aW9uXCIpLHRoaXMuaW5pdGlhbGl6ZSgpLHRoaXMudXBkYXRlKCksdGhpcy5kcmF3KCksdGhpcy5faW5pdGlhbGl6ZWQ9ITAsdGhpcy5fY29yZS50cmlnZ2VyKFwiaW5pdGlhbGl6ZWRcIixudWxsLFwibmF2aWdhdGlvblwiKSl9LHRoaXMpLFwicmVmcmVzaGVkLm93bC5jYXJvdXNlbFwiOmEucHJveHkoZnVuY3Rpb24oYSl7YS5uYW1lc3BhY2UmJnRoaXMuX2luaXRpYWxpemVkJiYodGhpcy5fY29yZS50cmlnZ2VyKFwicmVmcmVzaFwiLG51bGwsXCJuYXZpZ2F0aW9uXCIpLHRoaXMudXBkYXRlKCksdGhpcy5kcmF3KCksdGhpcy5fY29yZS50cmlnZ2VyKFwicmVmcmVzaGVkXCIsbnVsbCxcIm5hdmlnYXRpb25cIikpfSx0aGlzKX0sdGhpcy5fY29yZS5vcHRpb25zPWEuZXh0ZW5kKHt9LGUuRGVmYXVsdHMsdGhpcy5fY29yZS5vcHRpb25zKSx0aGlzLiRlbGVtZW50Lm9uKHRoaXMuX2hhbmRsZXJzKX07ZS5EZWZhdWx0cz17bmF2OiExLG5hdlRleHQ6Wyc8c3BhbiBhcmlhLWxhYmVsPVwiUHJldmlvdXNcIj4mI3gyMDM5Ozwvc3Bhbj4nLCc8c3BhbiBhcmlhLWxhYmVsPVwiTmV4dFwiPiYjeDIwM2E7PC9zcGFuPiddLG5hdlNwZWVkOiExLG5hdkVsZW1lbnQ6J2J1dHRvbiB0eXBlPVwiYnV0dG9uXCIgcm9sZT1cInByZXNlbnRhdGlvblwiJyxuYXZDb250YWluZXI6ITEsbmF2Q29udGFpbmVyQ2xhc3M6XCJvd2wtbmF2XCIsbmF2Q2xhc3M6W1wib3dsLXByZXZcIixcIm93bC1uZXh0XCJdLHNsaWRlQnk6MSxkb3RDbGFzczpcIm93bC1kb3RcIixkb3RzQ2xhc3M6XCJvd2wtZG90c1wiLGRvdHM6ITAsZG90c0VhY2g6ITEsZG90c0RhdGE6ITEsZG90c1NwZWVkOiExLGRvdHNDb250YWluZXI6ITF9LGUucHJvdG90eXBlLmluaXRpYWxpemU9ZnVuY3Rpb24oKXt2YXIgYixjPXRoaXMuX2NvcmUuc2V0dGluZ3M7dGhpcy5fY29udHJvbHMuJHJlbGF0aXZlPShjLm5hdkNvbnRhaW5lcj9hKGMubmF2Q29udGFpbmVyKTphKFwiPGRpdj5cIikuYWRkQ2xhc3MoYy5uYXZDb250YWluZXJDbGFzcykuYXBwZW5kVG8odGhpcy4kZWxlbWVudCkpLmFkZENsYXNzKFwiZGlzYWJsZWRcIiksdGhpcy5fY29udHJvbHMuJHByZXZpb3VzPWEoXCI8XCIrYy5uYXZFbGVtZW50K1wiPlwiKS5hZGRDbGFzcyhjLm5hdkNsYXNzWzBdKS5odG1sKGMubmF2VGV4dFswXSkucHJlcGVuZFRvKHRoaXMuX2NvbnRyb2xzLiRyZWxhdGl2ZSkub24oXCJjbGlja1wiLGEucHJveHkoZnVuY3Rpb24oYSl7dGhpcy5wcmV2KGMubmF2U3BlZWQpfSx0aGlzKSksdGhpcy5fY29udHJvbHMuJG5leHQ9YShcIjxcIitjLm5hdkVsZW1lbnQrXCI+XCIpLmFkZENsYXNzKGMubmF2Q2xhc3NbMV0pLmh0bWwoYy5uYXZUZXh0WzFdKS5hcHBlbmRUbyh0aGlzLl9jb250cm9scy4kcmVsYXRpdmUpLm9uKFwiY2xpY2tcIixhLnByb3h5KGZ1bmN0aW9uKGEpe3RoaXMubmV4dChjLm5hdlNwZWVkKX0sdGhpcykpLGMuZG90c0RhdGF8fCh0aGlzLl90ZW1wbGF0ZXM9W2EoJzxidXR0b24gcm9sZT1cImJ1dHRvblwiPicpLmFkZENsYXNzKGMuZG90Q2xhc3MpLmFwcGVuZChhKFwiPHNwYW4+XCIpKS5wcm9wKFwib3V0ZXJIVE1MXCIpXSksdGhpcy5fY29udHJvbHMuJGFic29sdXRlPShjLmRvdHNDb250YWluZXI/YShjLmRvdHNDb250YWluZXIpOmEoXCI8ZGl2PlwiKS5hZGRDbGFzcyhjLmRvdHNDbGFzcykuYXBwZW5kVG8odGhpcy4kZWxlbWVudCkpLmFkZENsYXNzKFwiZGlzYWJsZWRcIiksdGhpcy5fY29udHJvbHMuJGFic29sdXRlLm9uKFwiY2xpY2tcIixcImJ1dHRvblwiLGEucHJveHkoZnVuY3Rpb24oYil7dmFyIGQ9YShiLnRhcmdldCkucGFyZW50KCkuaXModGhpcy5fY29udHJvbHMuJGFic29sdXRlKT9hKGIudGFyZ2V0KS5pbmRleCgpOmEoYi50YXJnZXQpLnBhcmVudCgpLmluZGV4KCk7Yi5wcmV2ZW50RGVmYXVsdCgpLHRoaXMudG8oZCxjLmRvdHNTcGVlZCl9LHRoaXMpKTtmb3IoYiBpbiB0aGlzLl9vdmVycmlkZXMpdGhpcy5fY29yZVtiXT1hLnByb3h5KHRoaXNbYl0sdGhpcyl9LGUucHJvdG90eXBlLmRlc3Ryb3k9ZnVuY3Rpb24oKXt2YXIgYSxiLGMsZCxlO2U9dGhpcy5fY29yZS5zZXR0aW5ncztmb3IoYSBpbiB0aGlzLl9oYW5kbGVycyl0aGlzLiRlbGVtZW50Lm9mZihhLHRoaXMuX2hhbmRsZXJzW2FdKTtmb3IoYiBpbiB0aGlzLl9jb250cm9scylcIiRyZWxhdGl2ZVwiPT09YiYmZS5uYXZDb250YWluZXI/dGhpcy5fY29udHJvbHNbYl0uaHRtbChcIlwiKTp0aGlzLl9jb250cm9sc1tiXS5yZW1vdmUoKTtmb3IoZCBpbiB0aGlzLm92ZXJpZGVzKXRoaXMuX2NvcmVbZF09dGhpcy5fb3ZlcnJpZGVzW2RdO2ZvcihjIGluIE9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHRoaXMpKVwiZnVuY3Rpb25cIiE9dHlwZW9mIHRoaXNbY10mJih0aGlzW2NdPW51bGwpfSxlLnByb3RvdHlwZS51cGRhdGU9ZnVuY3Rpb24oKXt2YXIgYSxiLGMsZD10aGlzLl9jb3JlLmNsb25lcygpLmxlbmd0aC8yLGU9ZCt0aGlzLl9jb3JlLml0ZW1zKCkubGVuZ3RoLGY9dGhpcy5fY29yZS5tYXhpbXVtKCEwKSxnPXRoaXMuX2NvcmUuc2V0dGluZ3MsaD1nLmNlbnRlcnx8Zy5hdXRvV2lkdGh8fGcuZG90c0RhdGE/MTpnLmRvdHNFYWNofHxnLml0ZW1zO2lmKFwicGFnZVwiIT09Zy5zbGlkZUJ5JiYoZy5zbGlkZUJ5PU1hdGgubWluKGcuc2xpZGVCeSxnLml0ZW1zKSksZy5kb3RzfHxcInBhZ2VcIj09Zy5zbGlkZUJ5KWZvcih0aGlzLl9wYWdlcz1bXSxhPWQsYj0wLGM9MDthPGU7YSsrKXtpZihiPj1ofHwwPT09Yil7aWYodGhpcy5fcGFnZXMucHVzaCh7c3RhcnQ6TWF0aC5taW4oZixhLWQpLGVuZDphLWQraC0xfSksTWF0aC5taW4oZixhLWQpPT09ZilicmVhaztiPTAsKytjfWIrPXRoaXMuX2NvcmUubWVyZ2Vycyh0aGlzLl9jb3JlLnJlbGF0aXZlKGEpKX19LGUucHJvdG90eXBlLmRyYXc9ZnVuY3Rpb24oKXt2YXIgYixjPXRoaXMuX2NvcmUuc2V0dGluZ3MsZD10aGlzLl9jb3JlLml0ZW1zKCkubGVuZ3RoPD1jLml0ZW1zLGU9dGhpcy5fY29yZS5yZWxhdGl2ZSh0aGlzLl9jb3JlLmN1cnJlbnQoKSksZj1jLmxvb3B8fGMucmV3aW5kO3RoaXMuX2NvbnRyb2xzLiRyZWxhdGl2ZS50b2dnbGVDbGFzcyhcImRpc2FibGVkXCIsIWMubmF2fHxkKSxjLm5hdiYmKHRoaXMuX2NvbnRyb2xzLiRwcmV2aW91cy50b2dnbGVDbGFzcyhcImRpc2FibGVkXCIsIWYmJmU8PXRoaXMuX2NvcmUubWluaW11bSghMCkpLHRoaXMuX2NvbnRyb2xzLiRuZXh0LnRvZ2dsZUNsYXNzKFwiZGlzYWJsZWRcIiwhZiYmZT49dGhpcy5fY29yZS5tYXhpbXVtKCEwKSkpLHRoaXMuX2NvbnRyb2xzLiRhYnNvbHV0ZS50b2dnbGVDbGFzcyhcImRpc2FibGVkXCIsIWMuZG90c3x8ZCksYy5kb3RzJiYoYj10aGlzLl9wYWdlcy5sZW5ndGgtdGhpcy5fY29udHJvbHMuJGFic29sdXRlLmNoaWxkcmVuKCkubGVuZ3RoLGMuZG90c0RhdGEmJjAhPT1iP3RoaXMuX2NvbnRyb2xzLiRhYnNvbHV0ZS5odG1sKHRoaXMuX3RlbXBsYXRlcy5qb2luKFwiXCIpKTpiPjA/dGhpcy5fY29udHJvbHMuJGFic29sdXRlLmFwcGVuZChuZXcgQXJyYXkoYisxKS5qb2luKHRoaXMuX3RlbXBsYXRlc1swXSkpOmI8MCYmdGhpcy5fY29udHJvbHMuJGFic29sdXRlLmNoaWxkcmVuKCkuc2xpY2UoYikucmVtb3ZlKCksdGhpcy5fY29udHJvbHMuJGFic29sdXRlLmZpbmQoXCIuYWN0aXZlXCIpLnJlbW92ZUNsYXNzKFwiYWN0aXZlXCIpLHRoaXMuX2NvbnRyb2xzLiRhYnNvbHV0ZS5jaGlsZHJlbigpLmVxKGEuaW5BcnJheSh0aGlzLmN1cnJlbnQoKSx0aGlzLl9wYWdlcykpLmFkZENsYXNzKFwiYWN0aXZlXCIpKX0sZS5wcm90b3R5cGUub25UcmlnZ2VyPWZ1bmN0aW9uKGIpe3ZhciBjPXRoaXMuX2NvcmUuc2V0dGluZ3M7Yi5wYWdlPXtpbmRleDphLmluQXJyYXkodGhpcy5jdXJyZW50KCksdGhpcy5fcGFnZXMpLGNvdW50OnRoaXMuX3BhZ2VzLmxlbmd0aCxzaXplOmMmJihjLmNlbnRlcnx8Yy5hdXRvV2lkdGh8fGMuZG90c0RhdGE/MTpjLmRvdHNFYWNofHxjLml0ZW1zKX19LGUucHJvdG90eXBlLmN1cnJlbnQ9ZnVuY3Rpb24oKXt2YXIgYj10aGlzLl9jb3JlLnJlbGF0aXZlKHRoaXMuX2NvcmUuY3VycmVudCgpKTtyZXR1cm4gYS5ncmVwKHRoaXMuX3BhZ2VzLGEucHJveHkoZnVuY3Rpb24oYSxjKXtyZXR1cm4gYS5zdGFydDw9YiYmYS5lbmQ+PWJ9LHRoaXMpKS5wb3AoKX0sZS5wcm90b3R5cGUuZ2V0UG9zaXRpb249ZnVuY3Rpb24oYil7dmFyIGMsZCxlPXRoaXMuX2NvcmUuc2V0dGluZ3M7cmV0dXJuXCJwYWdlXCI9PWUuc2xpZGVCeT8oYz1hLmluQXJyYXkodGhpcy5jdXJyZW50KCksdGhpcy5fcGFnZXMpLGQ9dGhpcy5fcGFnZXMubGVuZ3RoLGI/KytjOi0tYyxjPXRoaXMuX3BhZ2VzWyhjJWQrZCklZF0uc3RhcnQpOihjPXRoaXMuX2NvcmUucmVsYXRpdmUodGhpcy5fY29yZS5jdXJyZW50KCkpLGQ9dGhpcy5fY29yZS5pdGVtcygpLmxlbmd0aCxiP2MrPWUuc2xpZGVCeTpjLT1lLnNsaWRlQnkpLGN9LGUucHJvdG90eXBlLm5leHQ9ZnVuY3Rpb24oYil7YS5wcm94eSh0aGlzLl9vdmVycmlkZXMudG8sdGhpcy5fY29yZSkodGhpcy5nZXRQb3NpdGlvbighMCksYil9LGUucHJvdG90eXBlLnByZXY9ZnVuY3Rpb24oYil7YS5wcm94eSh0aGlzLl9vdmVycmlkZXMudG8sdGhpcy5fY29yZSkodGhpcy5nZXRQb3NpdGlvbighMSksYil9LGUucHJvdG90eXBlLnRvPWZ1bmN0aW9uKGIsYyxkKXt2YXIgZTshZCYmdGhpcy5fcGFnZXMubGVuZ3RoPyhlPXRoaXMuX3BhZ2VzLmxlbmd0aCxhLnByb3h5KHRoaXMuX292ZXJyaWRlcy50byx0aGlzLl9jb3JlKSh0aGlzLl9wYWdlc1soYiVlK2UpJWVdLnN0YXJ0LGMpKTphLnByb3h5KHRoaXMuX292ZXJyaWRlcy50byx0aGlzLl9jb3JlKShiLGMpfSxhLmZuLm93bENhcm91c2VsLkNvbnN0cnVjdG9yLlBsdWdpbnMuTmF2aWdhdGlvbj1lfSh3aW5kb3cuWmVwdG98fHdpbmRvdy5qUXVlcnksd2luZG93LGRvY3VtZW50KSxmdW5jdGlvbihhLGIsYyxkKXtcInVzZSBzdHJpY3RcIjt2YXIgZT1mdW5jdGlvbihjKXt0aGlzLl9jb3JlPWMsdGhpcy5faGFzaGVzPXt9LHRoaXMuJGVsZW1lbnQ9dGhpcy5fY29yZS4kZWxlbWVudCx0aGlzLl9oYW5kbGVycz17XCJpbml0aWFsaXplZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGMpe2MubmFtZXNwYWNlJiZcIlVSTEhhc2hcIj09PXRoaXMuX2NvcmUuc2V0dGluZ3Muc3RhcnRQb3NpdGlvbiYmYShiKS50cmlnZ2VyKFwiaGFzaGNoYW5nZS5vd2wubmF2aWdhdGlvblwiKX0sdGhpcyksXCJwcmVwYXJlZC5vd2wuY2Fyb3VzZWxcIjphLnByb3h5KGZ1bmN0aW9uKGIpe2lmKGIubmFtZXNwYWNlKXt2YXIgYz1hKGIuY29udGVudCkuZmluZChcIltkYXRhLWhhc2hdXCIpLmFkZEJhY2soXCJbZGF0YS1oYXNoXVwiKS5hdHRyKFwiZGF0YS1oYXNoXCIpO2lmKCFjKXJldHVybjt0aGlzLl9oYXNoZXNbY109Yi5jb250ZW50fX0sdGhpcyksXCJjaGFuZ2VkLm93bC5jYXJvdXNlbFwiOmEucHJveHkoZnVuY3Rpb24oYyl7aWYoYy5uYW1lc3BhY2UmJlwicG9zaXRpb25cIj09PWMucHJvcGVydHkubmFtZSl7dmFyIGQ9dGhpcy5fY29yZS5pdGVtcyh0aGlzLl9jb3JlLnJlbGF0aXZlKHRoaXMuX2NvcmUuY3VycmVudCgpKSksZT1hLm1hcCh0aGlzLl9oYXNoZXMsZnVuY3Rpb24oYSxiKXtyZXR1cm4gYT09PWQ/YjpudWxsfSkuam9pbigpO2lmKCFlfHxiLmxvY2F0aW9uLmhhc2guc2xpY2UoMSk9PT1lKXJldHVybjtiLmxvY2F0aW9uLmhhc2g9ZX19LHRoaXMpfSx0aGlzLl9jb3JlLm9wdGlvbnM9YS5leHRlbmQoe30sZS5EZWZhdWx0cyx0aGlzLl9jb3JlLm9wdGlvbnMpLHRoaXMuJGVsZW1lbnQub24odGhpcy5faGFuZGxlcnMpLGEoYikub24oXCJoYXNoY2hhbmdlLm93bC5uYXZpZ2F0aW9uXCIsYS5wcm94eShmdW5jdGlvbihhKXt2YXIgYz1iLmxvY2F0aW9uLmhhc2guc3Vic3RyaW5nKDEpLGU9dGhpcy5fY29yZS4kc3RhZ2UuY2hpbGRyZW4oKSxmPXRoaXMuX2hhc2hlc1tjXSYmZS5pbmRleCh0aGlzLl9oYXNoZXNbY10pO2YhPT1kJiZmIT09dGhpcy5fY29yZS5jdXJyZW50KCkmJnRoaXMuX2NvcmUudG8odGhpcy5fY29yZS5yZWxhdGl2ZShmKSwhMSwhMCl9LHRoaXMpKX07ZS5EZWZhdWx0cz17VVJMaGFzaExpc3RlbmVyOiExfSxlLnByb3RvdHlwZS5kZXN0cm95PWZ1bmN0aW9uKCl7dmFyIGMsZDthKGIpLm9mZihcImhhc2hjaGFuZ2Uub3dsLm5hdmlnYXRpb25cIik7Zm9yKGMgaW4gdGhpcy5faGFuZGxlcnMpdGhpcy5fY29yZS4kZWxlbWVudC5vZmYoYyx0aGlzLl9oYW5kbGVyc1tjXSk7Zm9yKGQgaW4gT2JqZWN0LmdldE93blByb3BlcnR5TmFtZXModGhpcykpXCJmdW5jdGlvblwiIT10eXBlb2YgdGhpc1tkXSYmKHRoaXNbZF09bnVsbCl9LGEuZm4ub3dsQ2Fyb3VzZWwuQ29uc3RydWN0b3IuUGx1Z2lucy5IYXNoPWV9KHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeSx3aW5kb3csZG9jdW1lbnQpLGZ1bmN0aW9uKGEsYixjLGQpe2Z1bmN0aW9uIGUoYixjKXt2YXIgZT0hMSxmPWIuY2hhckF0KDApLnRvVXBwZXJDYXNlKCkrYi5zbGljZSgxKTtyZXR1cm4gYS5lYWNoKChiK1wiIFwiK2guam9pbihmK1wiIFwiKStmKS5zcGxpdChcIiBcIiksZnVuY3Rpb24oYSxiKXtpZihnW2JdIT09ZClyZXR1cm4gZT0hY3x8YiwhMX0pLGV9ZnVuY3Rpb24gZihhKXtyZXR1cm4gZShhLCEwKX12YXIgZz1hKFwiPHN1cHBvcnQ+XCIpLmdldCgwKS5zdHlsZSxoPVwiV2Via2l0IE1veiBPIG1zXCIuc3BsaXQoXCIgXCIpLGk9e3RyYW5zaXRpb246e2VuZDp7V2Via2l0VHJhbnNpdGlvbjpcIndlYmtpdFRyYW5zaXRpb25FbmRcIixNb3pUcmFuc2l0aW9uOlwidHJhbnNpdGlvbmVuZFwiLE9UcmFuc2l0aW9uOlwib1RyYW5zaXRpb25FbmRcIix0cmFuc2l0aW9uOlwidHJhbnNpdGlvbmVuZFwifX0sYW5pbWF0aW9uOntlbmQ6e1dlYmtpdEFuaW1hdGlvbjpcIndlYmtpdEFuaW1hdGlvbkVuZFwiLE1vekFuaW1hdGlvbjpcImFuaW1hdGlvbmVuZFwiLE9BbmltYXRpb246XCJvQW5pbWF0aW9uRW5kXCIsYW5pbWF0aW9uOlwiYW5pbWF0aW9uZW5kXCJ9fX0saj17Y3NzdHJhbnNmb3JtczpmdW5jdGlvbigpe3JldHVybiEhZShcInRyYW5zZm9ybVwiKX0sY3NzdHJhbnNmb3JtczNkOmZ1bmN0aW9uKCl7cmV0dXJuISFlKFwicGVyc3BlY3RpdmVcIil9LGNzc3RyYW5zaXRpb25zOmZ1bmN0aW9uKCl7cmV0dXJuISFlKFwidHJhbnNpdGlvblwiKX0sY3NzYW5pbWF0aW9uczpmdW5jdGlvbigpe3JldHVybiEhZShcImFuaW1hdGlvblwiKX19O2ouY3NzdHJhbnNpdGlvbnMoKSYmKGEuc3VwcG9ydC50cmFuc2l0aW9uPW5ldyBTdHJpbmcoZihcInRyYW5zaXRpb25cIikpLGEuc3VwcG9ydC50cmFuc2l0aW9uLmVuZD1pLnRyYW5zaXRpb24uZW5kW2Euc3VwcG9ydC50cmFuc2l0aW9uXSksai5jc3NhbmltYXRpb25zKCkmJihhLnN1cHBvcnQuYW5pbWF0aW9uPW5ldyBTdHJpbmcoZihcImFuaW1hdGlvblwiKSksYS5zdXBwb3J0LmFuaW1hdGlvbi5lbmQ9aS5hbmltYXRpb24uZW5kW2Euc3VwcG9ydC5hbmltYXRpb25dKSxqLmNzc3RyYW5zZm9ybXMoKSYmKGEuc3VwcG9ydC50cmFuc2Zvcm09bmV3IFN0cmluZyhmKFwidHJhbnNmb3JtXCIpKSxhLnN1cHBvcnQudHJhbnNmb3JtM2Q9ai5jc3N0cmFuc2Zvcm1zM2QoKSl9KHdpbmRvdy5aZXB0b3x8d2luZG93LmpRdWVyeSx3aW5kb3csZG9jdW1lbnQpO1xuLyohXG4gKiBDaGFydC5qc1xuICogaHR0cDovL2NoYXJ0anMub3JnL1xuICogVmVyc2lvbjogMi43LjNcbiAqXG4gKiBDb3B5cmlnaHQgMjAxOCBDaGFydC5qcyBDb250cmlidXRvcnNcbiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZVxuICogaHR0cHM6Ly9naXRodWIuY29tL2NoYXJ0anMvQ2hhcnQuanMvYmxvYi9tYXN0ZXIvTElDRU5TRS5tZFxuICovXG4hZnVuY3Rpb24odCl7aWYoXCJvYmplY3RcIj09dHlwZW9mIGV4cG9ydHMmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBtb2R1bGUpbW9kdWxlLmV4cG9ydHM9dCgpO2Vsc2UgaWYoXCJmdW5jdGlvblwiPT10eXBlb2YgZGVmaW5lJiZkZWZpbmUuYW1kKWRlZmluZShbXSx0KTtlbHNleyhcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93P3dpbmRvdzpcInVuZGVmaW5lZFwiIT10eXBlb2YgZ2xvYmFsP2dsb2JhbDpcInVuZGVmaW5lZFwiIT10eXBlb2Ygc2VsZj9zZWxmOnRoaXMpLkNoYXJ0PXQoKX19KGZ1bmN0aW9uKCl7cmV0dXJuIGZ1bmN0aW9uIHIobyxzLGwpe2Z1bmN0aW9uIHUoZSx0KXtpZighc1tlXSl7aWYoIW9bZV0pe3ZhciBuPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmU7aWYoIXQmJm4pcmV0dXJuIG4oZSwhMCk7aWYoZClyZXR1cm4gZChlLCEwKTt2YXIgaT1uZXcgRXJyb3IoXCJDYW5ub3QgZmluZCBtb2R1bGUgJ1wiK2UrXCInXCIpO3Rocm93IGkuY29kZT1cIk1PRFVMRV9OT1RfRk9VTkRcIixpfXZhciBhPXNbZV09e2V4cG9ydHM6e319O29bZV1bMF0uY2FsbChhLmV4cG9ydHMsZnVuY3Rpb24odCl7cmV0dXJuIHUob1tlXVsxXVt0XXx8dCl9LGEsYS5leHBvcnRzLHIsbyxzLGwpfXJldHVybiBzW2VdLmV4cG9ydHN9Zm9yKHZhciBkPVwiZnVuY3Rpb25cIj09dHlwZW9mIHJlcXVpcmUmJnJlcXVpcmUsdD0wO3Q8bC5sZW5ndGg7dCsrKXUobFt0XSk7cmV0dXJuIHV9KHsxOltmdW5jdGlvbih0LGUsbil7dmFyIHI9dCg1KTtmdW5jdGlvbiBpKHQpe2lmKHQpe3ZhciBlPVswLDAsMF0sbj0xLGk9dC5tYXRjaCgvXiMoW2EtZkEtRjAtOV17M30pJC9pKTtpZihpKXtpPWlbMV07Zm9yKHZhciBhPTA7YTxlLmxlbmd0aDthKyspZVthXT1wYXJzZUludChpW2FdK2lbYV0sMTYpfWVsc2UgaWYoaT10Lm1hdGNoKC9eIyhbYS1mQS1GMC05XXs2fSkkL2kpKXtpPWlbMV07Zm9yKGE9MDthPGUubGVuZ3RoO2ErKyllW2FdPXBhcnNlSW50KGkuc2xpY2UoMiphLDIqYSsyKSwxNil9ZWxzZSBpZihpPXQubWF0Y2goL15yZ2JhP1xcKFxccyooWystXT9cXGQrKVxccyosXFxzKihbKy1dP1xcZCspXFxzKixcXHMqKFsrLV0/XFxkKylcXHMqKD86LFxccyooWystXT9bXFxkXFwuXSspXFxzKik/XFwpJC9pKSl7Zm9yKGE9MDthPGUubGVuZ3RoO2ErKyllW2FdPXBhcnNlSW50KGlbYSsxXSk7bj1wYXJzZUZsb2F0KGlbNF0pfWVsc2UgaWYoaT10Lm1hdGNoKC9ecmdiYT9cXChcXHMqKFsrLV0/W1xcZFxcLl0rKVxcJVxccyosXFxzKihbKy1dP1tcXGRcXC5dKylcXCVcXHMqLFxccyooWystXT9bXFxkXFwuXSspXFwlXFxzKig/OixcXHMqKFsrLV0/W1xcZFxcLl0rKVxccyopP1xcKSQvaSkpe2ZvcihhPTA7YTxlLmxlbmd0aDthKyspZVthXT1NYXRoLnJvdW5kKDIuNTUqcGFyc2VGbG9hdChpW2ErMV0pKTtuPXBhcnNlRmxvYXQoaVs0XSl9ZWxzZSBpZihpPXQubWF0Y2goLyhcXHcrKS8pKXtpZihcInRyYW5zcGFyZW50XCI9PWlbMV0pcmV0dXJuWzAsMCwwLDBdO2lmKCEoZT1yW2lbMV1dKSlyZXR1cm59Zm9yKGE9MDthPGUubGVuZ3RoO2ErKyllW2FdPWQoZVthXSwwLDI1NSk7cmV0dXJuIG49bnx8MD09bj9kKG4sMCwxKToxLGVbM109bixlfX1mdW5jdGlvbiBhKHQpe2lmKHQpe3ZhciBlPXQubWF0Y2goL15oc2xhP1xcKFxccyooWystXT9cXGQrKSg/OmRlZyk/XFxzKixcXHMqKFsrLV0/W1xcZFxcLl0rKSVcXHMqLFxccyooWystXT9bXFxkXFwuXSspJVxccyooPzosXFxzKihbKy1dP1tcXGRcXC5dKylcXHMqKT9cXCkvKTtpZihlKXt2YXIgbj1wYXJzZUZsb2F0KGVbNF0pO3JldHVybltkKHBhcnNlSW50KGVbMV0pLDAsMzYwKSxkKHBhcnNlRmxvYXQoZVsyXSksMCwxMDApLGQocGFyc2VGbG9hdChlWzNdKSwwLDEwMCksZChpc05hTihuKT8xOm4sMCwxKV19fX1mdW5jdGlvbiBvKHQpe2lmKHQpe3ZhciBlPXQubWF0Y2goL15od2JcXChcXHMqKFsrLV0/XFxkKykoPzpkZWcpP1xccyosXFxzKihbKy1dP1tcXGRcXC5dKyklXFxzKixcXHMqKFsrLV0/W1xcZFxcLl0rKSVcXHMqKD86LFxccyooWystXT9bXFxkXFwuXSspXFxzKik/XFwpLyk7aWYoZSl7dmFyIG49cGFyc2VGbG9hdChlWzRdKTtyZXR1cm5bZChwYXJzZUludChlWzFdKSwwLDM2MCksZChwYXJzZUZsb2F0KGVbMl0pLDAsMTAwKSxkKHBhcnNlRmxvYXQoZVszXSksMCwxMDApLGQoaXNOYU4obik/MTpuLDAsMSldfX19ZnVuY3Rpb24gcyh0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT12b2lkIDAhPT10WzNdP3RbM106MSksXCJyZ2JhKFwiK3RbMF0rXCIsIFwiK3RbMV0rXCIsIFwiK3RbMl0rXCIsIFwiK2UrXCIpXCJ9ZnVuY3Rpb24gbCh0LGUpe3JldHVyblwicmdiYShcIitNYXRoLnJvdW5kKHRbMF0vMjU1KjEwMCkrXCIlLCBcIitNYXRoLnJvdW5kKHRbMV0vMjU1KjEwMCkrXCIlLCBcIitNYXRoLnJvdW5kKHRbMl0vMjU1KjEwMCkrXCIlLCBcIisoZXx8dFszXXx8MSkrXCIpXCJ9ZnVuY3Rpb24gdSh0LGUpe3JldHVybiB2b2lkIDA9PT1lJiYoZT12b2lkIDAhPT10WzNdP3RbM106MSksXCJoc2xhKFwiK3RbMF0rXCIsIFwiK3RbMV0rXCIlLCBcIit0WzJdK1wiJSwgXCIrZStcIilcIn1mdW5jdGlvbiBkKHQsZSxuKXtyZXR1cm4gTWF0aC5taW4oTWF0aC5tYXgoZSx0KSxuKX1mdW5jdGlvbiBoKHQpe3ZhciBlPXQudG9TdHJpbmcoMTYpLnRvVXBwZXJDYXNlKCk7cmV0dXJuIGUubGVuZ3RoPDI/XCIwXCIrZTplfWUuZXhwb3J0cz17Z2V0UmdiYTppLGdldEhzbGE6YSxnZXRSZ2I6ZnVuY3Rpb24odCl7dmFyIGU9aSh0KTtyZXR1cm4gZSYmZS5zbGljZSgwLDMpfSxnZXRIc2w6ZnVuY3Rpb24odCl7dmFyIGU9YSh0KTtyZXR1cm4gZSYmZS5zbGljZSgwLDMpfSxnZXRId2I6byxnZXRBbHBoYTpmdW5jdGlvbih0KXt2YXIgZT1pKHQpO3tpZihlKXJldHVybiBlWzNdO2lmKGU9YSh0KSlyZXR1cm4gZVszXTtpZihlPW8odCkpcmV0dXJuIGVbM119fSxoZXhTdHJpbmc6ZnVuY3Rpb24odCl7cmV0dXJuXCIjXCIraCh0WzBdKStoKHRbMV0pK2godFsyXSl9LHJnYlN0cmluZzpmdW5jdGlvbih0LGUpe2lmKGU8MXx8dFszXSYmdFszXTwxKXJldHVybiBzKHQsZSk7cmV0dXJuXCJyZ2IoXCIrdFswXStcIiwgXCIrdFsxXStcIiwgXCIrdFsyXStcIilcIn0scmdiYVN0cmluZzpzLHBlcmNlbnRTdHJpbmc6ZnVuY3Rpb24odCxlKXtpZihlPDF8fHRbM10mJnRbM108MSlyZXR1cm4gbCh0LGUpO3ZhciBuPU1hdGgucm91bmQodFswXS8yNTUqMTAwKSxpPU1hdGgucm91bmQodFsxXS8yNTUqMTAwKSxhPU1hdGgucm91bmQodFsyXS8yNTUqMTAwKTtyZXR1cm5cInJnYihcIituK1wiJSwgXCIraStcIiUsIFwiK2ErXCIlKVwifSxwZXJjZW50YVN0cmluZzpsLGhzbFN0cmluZzpmdW5jdGlvbih0LGUpe2lmKGU8MXx8dFszXSYmdFszXTwxKXJldHVybiB1KHQsZSk7cmV0dXJuXCJoc2woXCIrdFswXStcIiwgXCIrdFsxXStcIiUsIFwiK3RbMl0rXCIlKVwifSxoc2xhU3RyaW5nOnUsaHdiU3RyaW5nOmZ1bmN0aW9uKHQsZSl7dm9pZCAwPT09ZSYmKGU9dm9pZCAwIT09dFszXT90WzNdOjEpO3JldHVyblwiaHdiKFwiK3RbMF0rXCIsIFwiK3RbMV0rXCIlLCBcIit0WzJdK1wiJVwiKyh2b2lkIDAhPT1lJiYxIT09ZT9cIiwgXCIrZTpcIlwiKStcIilcIn0sa2V5d29yZDpmdW5jdGlvbih0KXtyZXR1cm4gY1t0LnNsaWNlKDAsMyldfX07dmFyIGM9e307Zm9yKHZhciBmIGluIHIpY1tyW2ZdXT1mfSx7NTo1fV0sMjpbZnVuY3Rpb24odCxlLG4pe3ZhciBkPXQoNCksaT10KDEpLG89ZnVuY3Rpb24odCl7cmV0dXJuIHQgaW5zdGFuY2VvZiBvP3Q6dGhpcyBpbnN0YW5jZW9mIG8/KHRoaXMudmFsaWQ9ITEsdGhpcy52YWx1ZXM9e3JnYjpbMCwwLDBdLGhzbDpbMCwwLDBdLGhzdjpbMCwwLDBdLGh3YjpbMCwwLDBdLGNteWs6WzAsMCwwLDBdLGFscGhhOjF9LHZvaWQoXCJzdHJpbmdcIj09dHlwZW9mIHQ/KGU9aS5nZXRSZ2JhKHQpKT90aGlzLnNldFZhbHVlcyhcInJnYlwiLGUpOihlPWkuZ2V0SHNsYSh0KSk/dGhpcy5zZXRWYWx1ZXMoXCJoc2xcIixlKTooZT1pLmdldEh3Yih0KSkmJnRoaXMuc2V0VmFsdWVzKFwiaHdiXCIsZSk6XCJvYmplY3RcIj09dHlwZW9mIHQmJih2b2lkIDAhPT0oZT10KS5yfHx2b2lkIDAhPT1lLnJlZD90aGlzLnNldFZhbHVlcyhcInJnYlwiLGUpOnZvaWQgMCE9PWUubHx8dm9pZCAwIT09ZS5saWdodG5lc3M/dGhpcy5zZXRWYWx1ZXMoXCJoc2xcIixlKTp2b2lkIDAhPT1lLnZ8fHZvaWQgMCE9PWUudmFsdWU/dGhpcy5zZXRWYWx1ZXMoXCJoc3ZcIixlKTp2b2lkIDAhPT1lLnd8fHZvaWQgMCE9PWUud2hpdGVuZXNzP3RoaXMuc2V0VmFsdWVzKFwiaHdiXCIsZSk6dm9pZCAwPT09ZS5jJiZ2b2lkIDA9PT1lLmN5YW58fHRoaXMuc2V0VmFsdWVzKFwiY215a1wiLGUpKSkpOm5ldyBvKHQpO3ZhciBlfTtvLnByb3RvdHlwZT17aXNWYWxpZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnZhbGlkfSxyZ2I6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZXRTcGFjZShcInJnYlwiLGFyZ3VtZW50cyl9LGhzbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLnNldFNwYWNlKFwiaHNsXCIsYXJndW1lbnRzKX0saHN2OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuc2V0U3BhY2UoXCJoc3ZcIixhcmd1bWVudHMpfSxod2I6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZXRTcGFjZShcImh3YlwiLGFyZ3VtZW50cyl9LGNteWs6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zZXRTcGFjZShcImNteWtcIixhcmd1bWVudHMpfSxyZ2JBcnJheTpmdW5jdGlvbigpe3JldHVybiB0aGlzLnZhbHVlcy5yZ2J9LGhzbEFycmF5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWVzLmhzbH0saHN2QXJyYXk6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy52YWx1ZXMuaHN2fSxod2JBcnJheTpmdW5jdGlvbigpe3ZhciB0PXRoaXMudmFsdWVzO3JldHVybiAxIT09dC5hbHBoYT90Lmh3Yi5jb25jYXQoW3QuYWxwaGFdKTp0Lmh3Yn0sY215a0FycmF5OmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMudmFsdWVzLmNteWt9LHJnYmFBcnJheTpmdW5jdGlvbigpe3ZhciB0PXRoaXMudmFsdWVzO3JldHVybiB0LnJnYi5jb25jYXQoW3QuYWxwaGFdKX0saHNsYUFycmF5OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy52YWx1ZXM7cmV0dXJuIHQuaHNsLmNvbmNhdChbdC5hbHBoYV0pfSxhbHBoYTpmdW5jdGlvbih0KXtyZXR1cm4gdm9pZCAwPT09dD90aGlzLnZhbHVlcy5hbHBoYToodGhpcy5zZXRWYWx1ZXMoXCJhbHBoYVwiLHQpLHRoaXMpfSxyZWQ6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc2V0Q2hhbm5lbChcInJnYlwiLDAsdCl9LGdyZWVuOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNldENoYW5uZWwoXCJyZ2JcIiwxLHQpfSxibHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNldENoYW5uZWwoXCJyZ2JcIiwyLHQpfSxodWU6ZnVuY3Rpb24odCl7cmV0dXJuIHQmJih0PSh0JT0zNjApPDA/MzYwK3Q6dCksdGhpcy5zZXRDaGFubmVsKFwiaHNsXCIsMCx0KX0sc2F0dXJhdGlvbjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zZXRDaGFubmVsKFwiaHNsXCIsMSx0KX0sbGlnaHRuZXNzOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNldENoYW5uZWwoXCJoc2xcIiwyLHQpfSxzYXR1cmF0aW9udjpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zZXRDaGFubmVsKFwiaHN2XCIsMSx0KX0sd2hpdGVuZXNzOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNldENoYW5uZWwoXCJod2JcIiwxLHQpfSxibGFja25lc3M6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuc2V0Q2hhbm5lbChcImh3YlwiLDIsdCl9LHZhbHVlOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNldENoYW5uZWwoXCJoc3ZcIiwyLHQpfSxjeWFuOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNldENoYW5uZWwoXCJjbXlrXCIsMCx0KX0sbWFnZW50YTpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zZXRDaGFubmVsKFwiY215a1wiLDEsdCl9LHllbGxvdzpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5zZXRDaGFubmVsKFwiY215a1wiLDIsdCl9LGJsYWNrOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnNldENoYW5uZWwoXCJjbXlrXCIsMyx0KX0saGV4U3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIGkuaGV4U3RyaW5nKHRoaXMudmFsdWVzLnJnYil9LHJnYlN0cmluZzpmdW5jdGlvbigpe3JldHVybiBpLnJnYlN0cmluZyh0aGlzLnZhbHVlcy5yZ2IsdGhpcy52YWx1ZXMuYWxwaGEpfSxyZ2JhU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIGkucmdiYVN0cmluZyh0aGlzLnZhbHVlcy5yZ2IsdGhpcy52YWx1ZXMuYWxwaGEpfSxwZXJjZW50U3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIGkucGVyY2VudFN0cmluZyh0aGlzLnZhbHVlcy5yZ2IsdGhpcy52YWx1ZXMuYWxwaGEpfSxoc2xTdHJpbmc6ZnVuY3Rpb24oKXtyZXR1cm4gaS5oc2xTdHJpbmcodGhpcy52YWx1ZXMuaHNsLHRoaXMudmFsdWVzLmFscGhhKX0saHNsYVN0cmluZzpmdW5jdGlvbigpe3JldHVybiBpLmhzbGFTdHJpbmcodGhpcy52YWx1ZXMuaHNsLHRoaXMudmFsdWVzLmFscGhhKX0saHdiU3RyaW5nOmZ1bmN0aW9uKCl7cmV0dXJuIGkuaHdiU3RyaW5nKHRoaXMudmFsdWVzLmh3Yix0aGlzLnZhbHVlcy5hbHBoYSl9LGtleXdvcmQ6ZnVuY3Rpb24oKXtyZXR1cm4gaS5rZXl3b3JkKHRoaXMudmFsdWVzLnJnYix0aGlzLnZhbHVlcy5hbHBoYSl9LHJnYk51bWJlcjpmdW5jdGlvbigpe3ZhciB0PXRoaXMudmFsdWVzLnJnYjtyZXR1cm4gdFswXTw8MTZ8dFsxXTw8OHx0WzJdfSxsdW1pbm9zaXR5OmZ1bmN0aW9uKCl7Zm9yKHZhciB0PXRoaXMudmFsdWVzLnJnYixlPVtdLG49MDtuPHQubGVuZ3RoO24rKyl7dmFyIGk9dFtuXS8yNTU7ZVtuXT1pPD0uMDM5Mjg/aS8xMi45MjpNYXRoLnBvdygoaSsuMDU1KS8xLjA1NSwyLjQpfXJldHVybi4yMTI2KmVbMF0rLjcxNTIqZVsxXSsuMDcyMiplWzJdfSxjb250cmFzdDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmx1bWlub3NpdHkoKSxuPXQubHVtaW5vc2l0eSgpO3JldHVybiBuPGU/KGUrLjA1KS8obisuMDUpOihuKy4wNSkvKGUrLjA1KX0sbGV2ZWw6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5jb250cmFzdCh0KTtyZXR1cm4gNy4xPD1lP1wiQUFBXCI6NC41PD1lP1wiQUFcIjpcIlwifSxkYXJrOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy52YWx1ZXMucmdiO3JldHVybigyOTkqdFswXSs1ODcqdFsxXSsxMTQqdFsyXSkvMWUzPDEyOH0sbGlnaHQ6ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5kYXJrKCl9LG5lZ2F0ZTpmdW5jdGlvbigpe2Zvcih2YXIgdD1bXSxlPTA7ZTwzO2UrKyl0W2VdPTI1NS10aGlzLnZhbHVlcy5yZ2JbZV07cmV0dXJuIHRoaXMuc2V0VmFsdWVzKFwicmdiXCIsdCksdGhpc30sbGlnaHRlbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnZhbHVlcy5oc2w7cmV0dXJuIGVbMl0rPWVbMl0qdCx0aGlzLnNldFZhbHVlcyhcImhzbFwiLGUpLHRoaXN9LGRhcmtlbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnZhbHVlcy5oc2w7cmV0dXJuIGVbMl0tPWVbMl0qdCx0aGlzLnNldFZhbHVlcyhcImhzbFwiLGUpLHRoaXN9LHNhdHVyYXRlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMudmFsdWVzLmhzbDtyZXR1cm4gZVsxXSs9ZVsxXSp0LHRoaXMuc2V0VmFsdWVzKFwiaHNsXCIsZSksdGhpc30sZGVzYXR1cmF0ZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnZhbHVlcy5oc2w7cmV0dXJuIGVbMV0tPWVbMV0qdCx0aGlzLnNldFZhbHVlcyhcImhzbFwiLGUpLHRoaXN9LHdoaXRlbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnZhbHVlcy5od2I7cmV0dXJuIGVbMV0rPWVbMV0qdCx0aGlzLnNldFZhbHVlcyhcImh3YlwiLGUpLHRoaXN9LGJsYWNrZW46ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy52YWx1ZXMuaHdiO3JldHVybiBlWzJdKz1lWzJdKnQsdGhpcy5zZXRWYWx1ZXMoXCJod2JcIixlKSx0aGlzfSxncmV5c2NhbGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLnZhbHVlcy5yZ2IsZT0uMyp0WzBdKy41OSp0WzFdKy4xMSp0WzJdO3JldHVybiB0aGlzLnNldFZhbHVlcyhcInJnYlwiLFtlLGUsZV0pLHRoaXN9LGNsZWFyZXI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy52YWx1ZXMuYWxwaGE7cmV0dXJuIHRoaXMuc2V0VmFsdWVzKFwiYWxwaGFcIixlLWUqdCksdGhpc30sb3BhcXVlcjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLnZhbHVlcy5hbHBoYTtyZXR1cm4gdGhpcy5zZXRWYWx1ZXMoXCJhbHBoYVwiLGUrZSp0KSx0aGlzfSxyb3RhdGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy52YWx1ZXMuaHNsLG49KGVbMF0rdCklMzYwO3JldHVybiBlWzBdPW48MD8zNjArbjpuLHRoaXMuc2V0VmFsdWVzKFwiaHNsXCIsZSksdGhpc30sbWl4OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcyxpPXQsYT12b2lkIDA9PT1lPy41OmUscj0yKmEtMSxvPW4uYWxwaGEoKS1pLmFscGhhKCkscz0oKHIqbz09LTE/cjoocitvKS8oMStyKm8pKSsxKS8yLGw9MS1zO3JldHVybiB0aGlzLnJnYihzKm4ucmVkKCkrbCppLnJlZCgpLHMqbi5ncmVlbigpK2wqaS5ncmVlbigpLHMqbi5ibHVlKCkrbCppLmJsdWUoKSkuYWxwaGEobi5hbHBoYSgpKmEraS5hbHBoYSgpKigxLWEpKX0sdG9KU09OOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMucmdiKCl9LGNsb25lOmZ1bmN0aW9uKCl7dmFyIHQsZSxuPW5ldyBvLGk9dGhpcy52YWx1ZXMsYT1uLnZhbHVlcztmb3IodmFyIHIgaW4gaSlpLmhhc093blByb3BlcnR5KHIpJiYodD1pW3JdLFwiW29iamVjdCBBcnJheV1cIj09PShlPXt9LnRvU3RyaW5nLmNhbGwodCkpP2Fbcl09dC5zbGljZSgwKTpcIltvYmplY3QgTnVtYmVyXVwiPT09ZT9hW3JdPXQ6Y29uc29sZS5lcnJvcihcInVuZXhwZWN0ZWQgY29sb3IgdmFsdWU6XCIsdCkpO3JldHVybiBufX0sby5wcm90b3R5cGUuc3BhY2VzPXtyZ2I6W1wicmVkXCIsXCJncmVlblwiLFwiYmx1ZVwiXSxoc2w6W1wiaHVlXCIsXCJzYXR1cmF0aW9uXCIsXCJsaWdodG5lc3NcIl0saHN2OltcImh1ZVwiLFwic2F0dXJhdGlvblwiLFwidmFsdWVcIl0saHdiOltcImh1ZVwiLFwid2hpdGVuZXNzXCIsXCJibGFja25lc3NcIl0sY215azpbXCJjeWFuXCIsXCJtYWdlbnRhXCIsXCJ5ZWxsb3dcIixcImJsYWNrXCJdfSxvLnByb3RvdHlwZS5tYXhlcz17cmdiOlsyNTUsMjU1LDI1NV0saHNsOlszNjAsMTAwLDEwMF0saHN2OlszNjAsMTAwLDEwMF0saHdiOlszNjAsMTAwLDEwMF0sY215azpbMTAwLDEwMCwxMDAsMTAwXX0sby5wcm90b3R5cGUuZ2V0VmFsdWVzPWZ1bmN0aW9uKHQpe2Zvcih2YXIgZT10aGlzLnZhbHVlcyxuPXt9LGk9MDtpPHQubGVuZ3RoO2krKyluW3QuY2hhckF0KGkpXT1lW3RdW2ldO3JldHVybiAxIT09ZS5hbHBoYSYmKG4uYT1lLmFscGhhKSxufSxvLnByb3RvdHlwZS5zZXRWYWx1ZXM9ZnVuY3Rpb24odCxlKXt2YXIgbixpLGE9dGhpcy52YWx1ZXMscj10aGlzLnNwYWNlcyxvPXRoaXMubWF4ZXMscz0xO2lmKHRoaXMudmFsaWQ9ITAsXCJhbHBoYVwiPT09dClzPWU7ZWxzZSBpZihlLmxlbmd0aClhW3RdPWUuc2xpY2UoMCx0Lmxlbmd0aCkscz1lW3QubGVuZ3RoXTtlbHNlIGlmKHZvaWQgMCE9PWVbdC5jaGFyQXQoMCldKXtmb3Iobj0wO248dC5sZW5ndGg7bisrKWFbdF1bbl09ZVt0LmNoYXJBdChuKV07cz1lLmF9ZWxzZSBpZih2b2lkIDAhPT1lW3JbdF1bMF1dKXt2YXIgbD1yW3RdO2ZvcihuPTA7bjx0Lmxlbmd0aDtuKyspYVt0XVtuXT1lW2xbbl1dO3M9ZS5hbHBoYX1pZihhLmFscGhhPU1hdGgubWF4KDAsTWF0aC5taW4oMSx2b2lkIDA9PT1zP2EuYWxwaGE6cykpLFwiYWxwaGFcIj09PXQpcmV0dXJuITE7Zm9yKG49MDtuPHQubGVuZ3RoO24rKylpPU1hdGgubWF4KDAsTWF0aC5taW4ob1t0XVtuXSxhW3RdW25dKSksYVt0XVtuXT1NYXRoLnJvdW5kKGkpO2Zvcih2YXIgdSBpbiByKXUhPT10JiYoYVt1XT1kW3RdW3VdKGFbdF0pKTtyZXR1cm4hMH0sby5wcm90b3R5cGUuc2V0U3BhY2U9ZnVuY3Rpb24odCxlKXt2YXIgbj1lWzBdO3JldHVybiB2b2lkIDA9PT1uP3RoaXMuZ2V0VmFsdWVzKHQpOihcIm51bWJlclwiPT10eXBlb2YgbiYmKG49QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSkpLHRoaXMuc2V0VmFsdWVzKHQsbiksdGhpcyl9LG8ucHJvdG90eXBlLnNldENoYW5uZWw9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXMudmFsdWVzW3RdO3JldHVybiB2b2lkIDA9PT1uP2lbZV06KG49PT1pW2VdfHwoaVtlXT1uLHRoaXMuc2V0VmFsdWVzKHQsaSkpLHRoaXMpfSxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiYod2luZG93LkNvbG9yPW8pLGUuZXhwb3J0cz1vfSx7MToxLDQ6NH1dLDM6W2Z1bmN0aW9uKHQsZSxuKXtmdW5jdGlvbiBhKHQpe3ZhciBlLG4saT10WzBdLzI1NSxhPXRbMV0vMjU1LHI9dFsyXS8yNTUsbz1NYXRoLm1pbihpLGEscikscz1NYXRoLm1heChpLGEsciksbD1zLW87cmV0dXJuIHM9PW8/ZT0wOmk9PXM/ZT0oYS1yKS9sOmE9PXM/ZT0yKyhyLWkpL2w6cj09cyYmKGU9NCsoaS1hKS9sKSwoZT1NYXRoLm1pbig2MCplLDM2MCkpPDAmJihlKz0zNjApLG49KG8rcykvMixbZSwxMDAqKHM9PW8/MDpuPD0uNT9sLyhzK28pOmwvKDItcy1vKSksMTAwKm5dfWZ1bmN0aW9uIGkodCl7dmFyIGUsbixpPXRbMF0sYT10WzFdLHI9dFsyXSxvPU1hdGgubWluKGksYSxyKSxzPU1hdGgubWF4KGksYSxyKSxsPXMtbztyZXR1cm4gbj0wPT1zPzA6bC9zKjFlMy8xMCxzPT1vP2U9MDppPT1zP2U9KGEtcikvbDphPT1zP2U9Misoci1pKS9sOnI9PXMmJihlPTQrKGktYSkvbCksKGU9TWF0aC5taW4oNjAqZSwzNjApKTwwJiYoZSs9MzYwKSxbZSxuLHMvMjU1KjFlMy8xMF19ZnVuY3Rpb24gbyh0KXt2YXIgZT10WzBdLG49dFsxXSxpPXRbMl07cmV0dXJuW2EodClbMF0sMTAwKigxLzI1NSpNYXRoLm1pbihlLE1hdGgubWluKG4saSkpKSwxMDAqKGk9MS0xLzI1NSpNYXRoLm1heChlLE1hdGgubWF4KG4saSkpKV19ZnVuY3Rpb24gcyh0KXt2YXIgZSxuPXRbMF0vMjU1LGk9dFsxXS8yNTUsYT10WzJdLzI1NTtyZXR1cm5bMTAwKigoMS1uLShlPU1hdGgubWluKDEtbiwxLWksMS1hKSkpLygxLWUpfHwwKSwxMDAqKCgxLWktZSkvKDEtZSl8fDApLDEwMCooKDEtYS1lKS8oMS1lKXx8MCksMTAwKmVdfWZ1bmN0aW9uIGwodCl7cmV0dXJuIFNbSlNPTi5zdHJpbmdpZnkodCldfWZ1bmN0aW9uIHUodCl7dmFyIGU9dFswXS8yNTUsbj10WzFdLzI1NSxpPXRbMl0vMjU1O3JldHVyblsxMDAqKC40MTI0KihlPS4wNDA0NTxlP01hdGgucG93KChlKy4wNTUpLzEuMDU1LDIuNCk6ZS8xMi45MikrLjM1NzYqKG49LjA0MDQ1PG4/TWF0aC5wb3coKG4rLjA1NSkvMS4wNTUsMi40KTpuLzEyLjkyKSsuMTgwNSooaT0uMDQwNDU8aT9NYXRoLnBvdygoaSsuMDU1KS8xLjA1NSwyLjQpOmkvMTIuOTIpKSwxMDAqKC4yMTI2KmUrLjcxNTIqbisuMDcyMippKSwxMDAqKC4wMTkzKmUrLjExOTIqbisuOTUwNSppKV19ZnVuY3Rpb24gZCh0KXt2YXIgZT11KHQpLG49ZVswXSxpPWVbMV0sYT1lWzJdO3JldHVybiBpLz0xMDAsYS89MTA4Ljg4MyxuPS4wMDg4NTY8KG4vPTk1LjA0Nyk/TWF0aC5wb3cobiwxLzMpOjcuNzg3Km4rMTYvMTE2LFsxMTYqKGk9LjAwODg1NjxpP01hdGgucG93KGksMS8zKTo3Ljc4NyppKzE2LzExNiktMTYsNTAwKihuLWkpLDIwMCooaS0oYT0uMDA4ODU2PGE/TWF0aC5wb3coYSwxLzMpOjcuNzg3KmErMTYvMTE2KSldfWZ1bmN0aW9uIGgodCl7dmFyIGUsbixpLGEscixvPXRbMF0vMzYwLHM9dFsxXS8xMDAsbD10WzJdLzEwMDtpZigwPT1zKXJldHVybltyPTI1NSpsLHIscl07ZT0yKmwtKG49bDwuNT9sKigxK3MpOmwrcy1sKnMpLGE9WzAsMCwwXTtmb3IodmFyIHU9MDt1PDM7dSsrKShpPW8rMS8zKi0odS0xKSk8MCYmaSsrLDE8aSYmaS0tLHI9NippPDE/ZSs2KihuLWUpKmk6MippPDE/bjozKmk8Mj9lKyhuLWUpKigyLzMtaSkqNjplLGFbdV09MjU1KnI7cmV0dXJuIGF9ZnVuY3Rpb24gYyh0KXt2YXIgZT10WzBdLzYwLG49dFsxXS8xMDAsaT10WzJdLzEwMCxhPU1hdGguZmxvb3IoZSklNixyPWUtTWF0aC5mbG9vcihlKSxvPTI1NSppKigxLW4pLHM9MjU1KmkqKDEtbipyKSxsPTI1NSppKigxLW4qKDEtcikpO2kqPTI1NTtzd2l0Y2goYSl7Y2FzZSAwOnJldHVybltpLGwsb107Y2FzZSAxOnJldHVybltzLGksb107Y2FzZSAyOnJldHVybltvLGksbF07Y2FzZSAzOnJldHVybltvLHMsaV07Y2FzZSA0OnJldHVybltsLG8saV07Y2FzZSA1OnJldHVybltpLG8sc119fWZ1bmN0aW9uIGYodCl7dmFyIGUsbixpLGEsbz10WzBdLzM2MCxzPXRbMV0vMTAwLGw9dFsyXS8xMDAsdT1zK2w7c3dpdGNoKDE8dSYmKHMvPXUsbC89dSksaT02Km8tKGU9TWF0aC5mbG9vcig2Km8pKSwwIT0oMSZlKSYmKGk9MS1pKSxhPXMraSooKG49MS1sKS1zKSxlKXtkZWZhdWx0OmNhc2UgNjpjYXNlIDA6cj1uLGc9YSxiPXM7YnJlYWs7Y2FzZSAxOnI9YSxnPW4sYj1zO2JyZWFrO2Nhc2UgMjpyPXMsZz1uLGI9YTticmVhaztjYXNlIDM6cj1zLGc9YSxiPW47YnJlYWs7Y2FzZSA0OnI9YSxnPXMsYj1uO2JyZWFrO2Nhc2UgNTpyPW4sZz1zLGI9YX1yZXR1cm5bMjU1KnIsMjU1KmcsMjU1KmJdfWZ1bmN0aW9uIG0odCl7dmFyIGU9dFswXS8xMDAsbj10WzFdLzEwMCxpPXRbMl0vMTAwLGE9dFszXS8xMDA7cmV0dXJuWzI1NSooMS1NYXRoLm1pbigxLGUqKDEtYSkrYSkpLDI1NSooMS1NYXRoLm1pbigxLG4qKDEtYSkrYSkpLDI1NSooMS1NYXRoLm1pbigxLGkqKDEtYSkrYSkpXX1mdW5jdGlvbiBwKHQpe3ZhciBlLG4saSxhPXRbMF0vMTAwLHI9dFsxXS8xMDAsbz10WzJdLzEwMDtyZXR1cm4gbj0tLjk2ODkqYSsxLjg3NTgqcisuMDQxNSpvLGk9LjA1NTcqYSstLjIwNCpyKzEuMDU3Km8sZT0uMDAzMTMwODwoZT0zLjI0MDYqYSstMS41MzcyKnIrLS40OTg2Km8pPzEuMDU1Kk1hdGgucG93KGUsMS8yLjQpLS4wNTU6ZSo9MTIuOTIsbj0uMDAzMTMwODxuPzEuMDU1Kk1hdGgucG93KG4sMS8yLjQpLS4wNTU6bio9MTIuOTIsaT0uMDAzMTMwODxpPzEuMDU1Kk1hdGgucG93KGksMS8yLjQpLS4wNTU6aSo9MTIuOTIsWzI1NSooZT1NYXRoLm1pbihNYXRoLm1heCgwLGUpLDEpKSwyNTUqKG49TWF0aC5taW4oTWF0aC5tYXgoMCxuKSwxKSksMjU1KihpPU1hdGgubWluKE1hdGgubWF4KDAsaSksMSkpXX1mdW5jdGlvbiB2KHQpe3ZhciBlPXRbMF0sbj10WzFdLGk9dFsyXTtyZXR1cm4gbi89MTAwLGkvPTEwOC44ODMsZT0uMDA4ODU2PChlLz05NS4wNDcpP01hdGgucG93KGUsMS8zKTo3Ljc4NyplKzE2LzExNixbMTE2KihuPS4wMDg4NTY8bj9NYXRoLnBvdyhuLDEvMyk6Ny43ODcqbisxNi8xMTYpLTE2LDUwMCooZS1uKSwyMDAqKG4tKGk9LjAwODg1NjxpP01hdGgucG93KGksMS8zKTo3Ljc4NyppKzE2LzExNikpXX1mdW5jdGlvbiB5KHQpe3ZhciBlLG4saSxhLHI9dFswXSxvPXRbMV0scz10WzJdO3JldHVybiBhPXI8PTg/KG49MTAwKnIvOTAzLjMpLzEwMCo3Ljc4NysxNi8xMTY6KG49MTAwKk1hdGgucG93KChyKzE2KS8xMTYsMyksTWF0aC5wb3cobi8xMDAsMS8zKSksW2U9ZS85NS4wNDc8PS4wMDg4NTY/ZT05NS4wNDcqKG8vNTAwK2EtMTYvMTE2KS83Ljc4Nzo5NS4wNDcqTWF0aC5wb3coby81MDArYSwzKSxuLGk9aS8xMDguODgzPD0uMDA4ODU5P2k9MTA4Ljg4MyooYS1zLzIwMC0xNi8xMTYpLzcuNzg3OjEwOC44ODMqTWF0aC5wb3coYS1zLzIwMCwzKV19ZnVuY3Rpb24geCh0KXt2YXIgZSxuPXRbMF0saT10WzFdLGE9dFsyXTtyZXR1cm4oZT0zNjAqTWF0aC5hdGFuMihhLGkpLzIvTWF0aC5QSSk8MCYmKGUrPTM2MCksW24sTWF0aC5zcXJ0KGkqaSthKmEpLGVdfWZ1bmN0aW9uIF8odCl7cmV0dXJuIHAoeSh0KSl9ZnVuY3Rpb24gayh0KXt2YXIgZSxuPXRbMF0saT10WzFdO3JldHVybiBlPXRbMl0vMzYwKjIqTWF0aC5QSSxbbixpKk1hdGguY29zKGUpLGkqTWF0aC5zaW4oZSldfWZ1bmN0aW9uIHcodCl7cmV0dXJuIE1bdF19ZS5leHBvcnRzPXtyZ2IyaHNsOmEscmdiMmhzdjppLHJnYjJod2I6byxyZ2IyY215azpzLHJnYjJrZXl3b3JkOmwscmdiMnh5ejp1LHJnYjJsYWI6ZCxyZ2IybGNoOmZ1bmN0aW9uKHQpe3JldHVybiB4KGQodCkpfSxoc2wycmdiOmgsaHNsMmhzdjpmdW5jdGlvbih0KXt2YXIgZT10WzBdLG49dFsxXS8xMDAsaT10WzJdLzEwMDtyZXR1cm4gMCE9PWk/W2UsMTAwKigyKihuKj0oaSo9Mik8PTE/aToyLWkpLyhpK24pKSwxMDAqKChpK24pLzIpXTpbMCwwLDBdfSxoc2wyaHdiOmZ1bmN0aW9uKHQpe3JldHVybiBvKGgodCkpfSxoc2wyY215azpmdW5jdGlvbih0KXtyZXR1cm4gcyhoKHQpKX0saHNsMmtleXdvcmQ6ZnVuY3Rpb24odCl7cmV0dXJuIGwoaCh0KSl9LGhzdjJyZ2I6Yyxoc3YyaHNsOmZ1bmN0aW9uKHQpe3ZhciBlLG4saT10WzBdLGE9dFsxXS8xMDAscj10WzJdLzEwMDtyZXR1cm4gZT1hKnIsW2ksMTAwKihlPShlLz0obj0oMi1hKSpyKTw9MT9uOjItbil8fDApLDEwMCoobi89MildfSxoc3YyaHdiOmZ1bmN0aW9uKHQpe3JldHVybiBvKGModCkpfSxoc3YyY215azpmdW5jdGlvbih0KXtyZXR1cm4gcyhjKHQpKX0saHN2MmtleXdvcmQ6ZnVuY3Rpb24odCl7cmV0dXJuIGwoYyh0KSl9LGh3YjJyZ2I6Zixod2IyaHNsOmZ1bmN0aW9uKHQpe3JldHVybiBhKGYodCkpfSxod2IyaHN2OmZ1bmN0aW9uKHQpe3JldHVybiBpKGYodCkpfSxod2IyY215azpmdW5jdGlvbih0KXtyZXR1cm4gcyhmKHQpKX0saHdiMmtleXdvcmQ6ZnVuY3Rpb24odCl7cmV0dXJuIGwoZih0KSl9LGNteWsycmdiOm0sY215azJoc2w6ZnVuY3Rpb24odCl7cmV0dXJuIGEobSh0KSl9LGNteWsyaHN2OmZ1bmN0aW9uKHQpe3JldHVybiBpKG0odCkpfSxjbXlrMmh3YjpmdW5jdGlvbih0KXtyZXR1cm4gbyhtKHQpKX0sY215azJrZXl3b3JkOmZ1bmN0aW9uKHQpe3JldHVybiBsKG0odCkpfSxrZXl3b3JkMnJnYjp3LGtleXdvcmQyaHNsOmZ1bmN0aW9uKHQpe3JldHVybiBhKHcodCkpfSxrZXl3b3JkMmhzdjpmdW5jdGlvbih0KXtyZXR1cm4gaSh3KHQpKX0sa2V5d29yZDJod2I6ZnVuY3Rpb24odCl7cmV0dXJuIG8odyh0KSl9LGtleXdvcmQyY215azpmdW5jdGlvbih0KXtyZXR1cm4gcyh3KHQpKX0sa2V5d29yZDJsYWI6ZnVuY3Rpb24odCl7cmV0dXJuIGQodyh0KSl9LGtleXdvcmQyeHl6OmZ1bmN0aW9uKHQpe3JldHVybiB1KHcodCkpfSx4eXoycmdiOnAseHl6MmxhYjp2LHh5ejJsY2g6ZnVuY3Rpb24odCl7cmV0dXJuIHgodih0KSl9LGxhYjJ4eXo6eSxsYWIycmdiOl8sbGFiMmxjaDp4LGxjaDJsYWI6ayxsY2gyeHl6OmZ1bmN0aW9uKHQpe3JldHVybiB5KGsodCkpfSxsY2gycmdiOmZ1bmN0aW9uKHQpe3JldHVybiBfKGsodCkpfX07dmFyIE09e2FsaWNlYmx1ZTpbMjQwLDI0OCwyNTVdLGFudGlxdWV3aGl0ZTpbMjUwLDIzNSwyMTVdLGFxdWE6WzAsMjU1LDI1NV0sYXF1YW1hcmluZTpbMTI3LDI1NSwyMTJdLGF6dXJlOlsyNDAsMjU1LDI1NV0sYmVpZ2U6WzI0NSwyNDUsMjIwXSxiaXNxdWU6WzI1NSwyMjgsMTk2XSxibGFjazpbMCwwLDBdLGJsYW5jaGVkYWxtb25kOlsyNTUsMjM1LDIwNV0sYmx1ZTpbMCwwLDI1NV0sYmx1ZXZpb2xldDpbMTM4LDQzLDIyNl0sYnJvd246WzE2NSw0Miw0Ml0sYnVybHl3b29kOlsyMjIsMTg0LDEzNV0sY2FkZXRibHVlOls5NSwxNTgsMTYwXSxjaGFydHJldXNlOlsxMjcsMjU1LDBdLGNob2NvbGF0ZTpbMjEwLDEwNSwzMF0sY29yYWw6WzI1NSwxMjcsODBdLGNvcm5mbG93ZXJibHVlOlsxMDAsMTQ5LDIzN10sY29ybnNpbGs6WzI1NSwyNDgsMjIwXSxjcmltc29uOlsyMjAsMjAsNjBdLGN5YW46WzAsMjU1LDI1NV0sZGFya2JsdWU6WzAsMCwxMzldLGRhcmtjeWFuOlswLDEzOSwxMzldLGRhcmtnb2xkZW5yb2Q6WzE4NCwxMzQsMTFdLGRhcmtncmF5OlsxNjksMTY5LDE2OV0sZGFya2dyZWVuOlswLDEwMCwwXSxkYXJrZ3JleTpbMTY5LDE2OSwxNjldLGRhcmtraGFraTpbMTg5LDE4MywxMDddLGRhcmttYWdlbnRhOlsxMzksMCwxMzldLGRhcmtvbGl2ZWdyZWVuOls4NSwxMDcsNDddLGRhcmtvcmFuZ2U6WzI1NSwxNDAsMF0sZGFya29yY2hpZDpbMTUzLDUwLDIwNF0sZGFya3JlZDpbMTM5LDAsMF0sZGFya3NhbG1vbjpbMjMzLDE1MCwxMjJdLGRhcmtzZWFncmVlbjpbMTQzLDE4OCwxNDNdLGRhcmtzbGF0ZWJsdWU6WzcyLDYxLDEzOV0sZGFya3NsYXRlZ3JheTpbNDcsNzksNzldLGRhcmtzbGF0ZWdyZXk6WzQ3LDc5LDc5XSxkYXJrdHVycXVvaXNlOlswLDIwNiwyMDldLGRhcmt2aW9sZXQ6WzE0OCwwLDIxMV0sZGVlcHBpbms6WzI1NSwyMCwxNDddLGRlZXBza3libHVlOlswLDE5MSwyNTVdLGRpbWdyYXk6WzEwNSwxMDUsMTA1XSxkaW1ncmV5OlsxMDUsMTA1LDEwNV0sZG9kZ2VyYmx1ZTpbMzAsMTQ0LDI1NV0sZmlyZWJyaWNrOlsxNzgsMzQsMzRdLGZsb3JhbHdoaXRlOlsyNTUsMjUwLDI0MF0sZm9yZXN0Z3JlZW46WzM0LDEzOSwzNF0sZnVjaHNpYTpbMjU1LDAsMjU1XSxnYWluc2Jvcm86WzIyMCwyMjAsMjIwXSxnaG9zdHdoaXRlOlsyNDgsMjQ4LDI1NV0sZ29sZDpbMjU1LDIxNSwwXSxnb2xkZW5yb2Q6WzIxOCwxNjUsMzJdLGdyYXk6WzEyOCwxMjgsMTI4XSxncmVlbjpbMCwxMjgsMF0sZ3JlZW55ZWxsb3c6WzE3MywyNTUsNDddLGdyZXk6WzEyOCwxMjgsMTI4XSxob25leWRldzpbMjQwLDI1NSwyNDBdLGhvdHBpbms6WzI1NSwxMDUsMTgwXSxpbmRpYW5yZWQ6WzIwNSw5Miw5Ml0saW5kaWdvOls3NSwwLDEzMF0saXZvcnk6WzI1NSwyNTUsMjQwXSxraGFraTpbMjQwLDIzMCwxNDBdLGxhdmVuZGVyOlsyMzAsMjMwLDI1MF0sbGF2ZW5kZXJibHVzaDpbMjU1LDI0MCwyNDVdLGxhd25ncmVlbjpbMTI0LDI1MiwwXSxsZW1vbmNoaWZmb246WzI1NSwyNTAsMjA1XSxsaWdodGJsdWU6WzE3MywyMTYsMjMwXSxsaWdodGNvcmFsOlsyNDAsMTI4LDEyOF0sbGlnaHRjeWFuOlsyMjQsMjU1LDI1NV0sbGlnaHRnb2xkZW5yb2R5ZWxsb3c6WzI1MCwyNTAsMjEwXSxsaWdodGdyYXk6WzIxMSwyMTEsMjExXSxsaWdodGdyZWVuOlsxNDQsMjM4LDE0NF0sbGlnaHRncmV5OlsyMTEsMjExLDIxMV0sbGlnaHRwaW5rOlsyNTUsMTgyLDE5M10sbGlnaHRzYWxtb246WzI1NSwxNjAsMTIyXSxsaWdodHNlYWdyZWVuOlszMiwxNzgsMTcwXSxsaWdodHNreWJsdWU6WzEzNSwyMDYsMjUwXSxsaWdodHNsYXRlZ3JheTpbMTE5LDEzNiwxNTNdLGxpZ2h0c2xhdGVncmV5OlsxMTksMTM2LDE1M10sbGlnaHRzdGVlbGJsdWU6WzE3NiwxOTYsMjIyXSxsaWdodHllbGxvdzpbMjU1LDI1NSwyMjRdLGxpbWU6WzAsMjU1LDBdLGxpbWVncmVlbjpbNTAsMjA1LDUwXSxsaW5lbjpbMjUwLDI0MCwyMzBdLG1hZ2VudGE6WzI1NSwwLDI1NV0sbWFyb29uOlsxMjgsMCwwXSxtZWRpdW1hcXVhbWFyaW5lOlsxMDIsMjA1LDE3MF0sbWVkaXVtYmx1ZTpbMCwwLDIwNV0sbWVkaXVtb3JjaGlkOlsxODYsODUsMjExXSxtZWRpdW1wdXJwbGU6WzE0NywxMTIsMjE5XSxtZWRpdW1zZWFncmVlbjpbNjAsMTc5LDExM10sbWVkaXVtc2xhdGVibHVlOlsxMjMsMTA0LDIzOF0sbWVkaXVtc3ByaW5nZ3JlZW46WzAsMjUwLDE1NF0sbWVkaXVtdHVycXVvaXNlOls3MiwyMDksMjA0XSxtZWRpdW12aW9sZXRyZWQ6WzE5OSwyMSwxMzNdLG1pZG5pZ2h0Ymx1ZTpbMjUsMjUsMTEyXSxtaW50Y3JlYW06WzI0NSwyNTUsMjUwXSxtaXN0eXJvc2U6WzI1NSwyMjgsMjI1XSxtb2NjYXNpbjpbMjU1LDIyOCwxODFdLG5hdmFqb3doaXRlOlsyNTUsMjIyLDE3M10sbmF2eTpbMCwwLDEyOF0sb2xkbGFjZTpbMjUzLDI0NSwyMzBdLG9saXZlOlsxMjgsMTI4LDBdLG9saXZlZHJhYjpbMTA3LDE0MiwzNV0sb3JhbmdlOlsyNTUsMTY1LDBdLG9yYW5nZXJlZDpbMjU1LDY5LDBdLG9yY2hpZDpbMjE4LDExMiwyMTRdLHBhbGVnb2xkZW5yb2Q6WzIzOCwyMzIsMTcwXSxwYWxlZ3JlZW46WzE1MiwyNTEsMTUyXSxwYWxldHVycXVvaXNlOlsxNzUsMjM4LDIzOF0scGFsZXZpb2xldHJlZDpbMjE5LDExMiwxNDddLHBhcGF5YXdoaXA6WzI1NSwyMzksMjEzXSxwZWFjaHB1ZmY6WzI1NSwyMTgsMTg1XSxwZXJ1OlsyMDUsMTMzLDYzXSxwaW5rOlsyNTUsMTkyLDIwM10scGx1bTpbMjIxLDE2MCwyMjFdLHBvd2RlcmJsdWU6WzE3NiwyMjQsMjMwXSxwdXJwbGU6WzEyOCwwLDEyOF0scmViZWNjYXB1cnBsZTpbMTAyLDUxLDE1M10scmVkOlsyNTUsMCwwXSxyb3N5YnJvd246WzE4OCwxNDMsMTQzXSxyb3lhbGJsdWU6WzY1LDEwNSwyMjVdLHNhZGRsZWJyb3duOlsxMzksNjksMTldLHNhbG1vbjpbMjUwLDEyOCwxMTRdLHNhbmR5YnJvd246WzI0NCwxNjQsOTZdLHNlYWdyZWVuOls0NiwxMzksODddLHNlYXNoZWxsOlsyNTUsMjQ1LDIzOF0sc2llbm5hOlsxNjAsODIsNDVdLHNpbHZlcjpbMTkyLDE5MiwxOTJdLHNreWJsdWU6WzEzNSwyMDYsMjM1XSxzbGF0ZWJsdWU6WzEwNiw5MCwyMDVdLHNsYXRlZ3JheTpbMTEyLDEyOCwxNDRdLHNsYXRlZ3JleTpbMTEyLDEyOCwxNDRdLHNub3c6WzI1NSwyNTAsMjUwXSxzcHJpbmdncmVlbjpbMCwyNTUsMTI3XSxzdGVlbGJsdWU6WzcwLDEzMCwxODBdLHRhbjpbMjEwLDE4MCwxNDBdLHRlYWw6WzAsMTI4LDEyOF0sdGhpc3RsZTpbMjE2LDE5MSwyMTZdLHRvbWF0bzpbMjU1LDk5LDcxXSx0dXJxdW9pc2U6WzY0LDIyNCwyMDhdLHZpb2xldDpbMjM4LDEzMCwyMzhdLHdoZWF0OlsyNDUsMjIyLDE3OV0sd2hpdGU6WzI1NSwyNTUsMjU1XSx3aGl0ZXNtb2tlOlsyNDUsMjQ1LDI0NV0seWVsbG93OlsyNTUsMjU1LDBdLHllbGxvd2dyZWVuOlsxNTQsMjA1LDUwXX0sUz17fTtmb3IodmFyIEQgaW4gTSlTW0pTT04uc3RyaW5naWZ5KE1bRF0pXT1EfSx7fV0sNDpbZnVuY3Rpb24odCxlLG4pe3ZhciBhPXQoMykscj1mdW5jdGlvbigpe3JldHVybiBuZXcgdX07Zm9yKHZhciBpIGluIGEpe3JbaStcIlJhd1wiXT1mdW5jdGlvbihlKXtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJuXCJudW1iZXJcIj09dHlwZW9mIHQmJih0PUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cykpLGFbZV0odCl9fShpKTt2YXIgbz0vKFxcdyspMihcXHcrKS8uZXhlYyhpKSxzPW9bMV0sbD1vWzJdOyhyW3NdPXJbc118fHt9KVtsXT1yW2ldPWZ1bmN0aW9uKGkpe3JldHVybiBmdW5jdGlvbih0KXtcIm51bWJlclwiPT10eXBlb2YgdCYmKHQ9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSk7dmFyIGU9YVtpXSh0KTtpZihcInN0cmluZ1wiPT10eXBlb2YgZXx8dm9pZCAwPT09ZSlyZXR1cm4gZTtmb3IodmFyIG49MDtuPGUubGVuZ3RoO24rKyllW25dPU1hdGgucm91bmQoZVtuXSk7cmV0dXJuIGV9fShpKX12YXIgdT1mdW5jdGlvbigpe3RoaXMuY29udnM9e319O3UucHJvdG90eXBlLnJvdXRlU3BhY2U9ZnVuY3Rpb24odCxlKXt2YXIgbj1lWzBdO3JldHVybiB2b2lkIDA9PT1uP3RoaXMuZ2V0VmFsdWVzKHQpOihcIm51bWJlclwiPT10eXBlb2YgbiYmKG49QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoZSkpLHRoaXMuc2V0VmFsdWVzKHQsbikpfSx1LnByb3RvdHlwZS5zZXRWYWx1ZXM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5zcGFjZT10LHRoaXMuY29udnM9e30sdGhpcy5jb252c1t0XT1lLHRoaXN9LHUucHJvdG90eXBlLmdldFZhbHVlcz1mdW5jdGlvbih0KXt2YXIgZT10aGlzLmNvbnZzW3RdO2lmKCFlKXt2YXIgbj10aGlzLnNwYWNlLGk9dGhpcy5jb252c1tuXTtlPXJbbl1bdF0oaSksdGhpcy5jb252c1t0XT1lfXJldHVybiBlfSxbXCJyZ2JcIixcImhzbFwiLFwiaHN2XCIsXCJjbXlrXCIsXCJrZXl3b3JkXCJdLmZvckVhY2goZnVuY3Rpb24oZSl7dS5wcm90b3R5cGVbZV09ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMucm91dGVTcGFjZShlLGFyZ3VtZW50cyl9fSksZS5leHBvcnRzPXJ9LHszOjN9XSw1OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPXthbGljZWJsdWU6WzI0MCwyNDgsMjU1XSxhbnRpcXVld2hpdGU6WzI1MCwyMzUsMjE1XSxhcXVhOlswLDI1NSwyNTVdLGFxdWFtYXJpbmU6WzEyNywyNTUsMjEyXSxhenVyZTpbMjQwLDI1NSwyNTVdLGJlaWdlOlsyNDUsMjQ1LDIyMF0sYmlzcXVlOlsyNTUsMjI4LDE5Nl0sYmxhY2s6WzAsMCwwXSxibGFuY2hlZGFsbW9uZDpbMjU1LDIzNSwyMDVdLGJsdWU6WzAsMCwyNTVdLGJsdWV2aW9sZXQ6WzEzOCw0MywyMjZdLGJyb3duOlsxNjUsNDIsNDJdLGJ1cmx5d29vZDpbMjIyLDE4NCwxMzVdLGNhZGV0Ymx1ZTpbOTUsMTU4LDE2MF0sY2hhcnRyZXVzZTpbMTI3LDI1NSwwXSxjaG9jb2xhdGU6WzIxMCwxMDUsMzBdLGNvcmFsOlsyNTUsMTI3LDgwXSxjb3JuZmxvd2VyYmx1ZTpbMTAwLDE0OSwyMzddLGNvcm5zaWxrOlsyNTUsMjQ4LDIyMF0sY3JpbXNvbjpbMjIwLDIwLDYwXSxjeWFuOlswLDI1NSwyNTVdLGRhcmtibHVlOlswLDAsMTM5XSxkYXJrY3lhbjpbMCwxMzksMTM5XSxkYXJrZ29sZGVucm9kOlsxODQsMTM0LDExXSxkYXJrZ3JheTpbMTY5LDE2OSwxNjldLGRhcmtncmVlbjpbMCwxMDAsMF0sZGFya2dyZXk6WzE2OSwxNjksMTY5XSxkYXJra2hha2k6WzE4OSwxODMsMTA3XSxkYXJrbWFnZW50YTpbMTM5LDAsMTM5XSxkYXJrb2xpdmVncmVlbjpbODUsMTA3LDQ3XSxkYXJrb3JhbmdlOlsyNTUsMTQwLDBdLGRhcmtvcmNoaWQ6WzE1Myw1MCwyMDRdLGRhcmtyZWQ6WzEzOSwwLDBdLGRhcmtzYWxtb246WzIzMywxNTAsMTIyXSxkYXJrc2VhZ3JlZW46WzE0MywxODgsMTQzXSxkYXJrc2xhdGVibHVlOls3Miw2MSwxMzldLGRhcmtzbGF0ZWdyYXk6WzQ3LDc5LDc5XSxkYXJrc2xhdGVncmV5Ols0Nyw3OSw3OV0sZGFya3R1cnF1b2lzZTpbMCwyMDYsMjA5XSxkYXJrdmlvbGV0OlsxNDgsMCwyMTFdLGRlZXBwaW5rOlsyNTUsMjAsMTQ3XSxkZWVwc2t5Ymx1ZTpbMCwxOTEsMjU1XSxkaW1ncmF5OlsxMDUsMTA1LDEwNV0sZGltZ3JleTpbMTA1LDEwNSwxMDVdLGRvZGdlcmJsdWU6WzMwLDE0NCwyNTVdLGZpcmVicmljazpbMTc4LDM0LDM0XSxmbG9yYWx3aGl0ZTpbMjU1LDI1MCwyNDBdLGZvcmVzdGdyZWVuOlszNCwxMzksMzRdLGZ1Y2hzaWE6WzI1NSwwLDI1NV0sZ2FpbnNib3JvOlsyMjAsMjIwLDIyMF0sZ2hvc3R3aGl0ZTpbMjQ4LDI0OCwyNTVdLGdvbGQ6WzI1NSwyMTUsMF0sZ29sZGVucm9kOlsyMTgsMTY1LDMyXSxncmF5OlsxMjgsMTI4LDEyOF0sZ3JlZW46WzAsMTI4LDBdLGdyZWVueWVsbG93OlsxNzMsMjU1LDQ3XSxncmV5OlsxMjgsMTI4LDEyOF0saG9uZXlkZXc6WzI0MCwyNTUsMjQwXSxob3RwaW5rOlsyNTUsMTA1LDE4MF0saW5kaWFucmVkOlsyMDUsOTIsOTJdLGluZGlnbzpbNzUsMCwxMzBdLGl2b3J5OlsyNTUsMjU1LDI0MF0sa2hha2k6WzI0MCwyMzAsMTQwXSxsYXZlbmRlcjpbMjMwLDIzMCwyNTBdLGxhdmVuZGVyYmx1c2g6WzI1NSwyNDAsMjQ1XSxsYXduZ3JlZW46WzEyNCwyNTIsMF0sbGVtb25jaGlmZm9uOlsyNTUsMjUwLDIwNV0sbGlnaHRibHVlOlsxNzMsMjE2LDIzMF0sbGlnaHRjb3JhbDpbMjQwLDEyOCwxMjhdLGxpZ2h0Y3lhbjpbMjI0LDI1NSwyNTVdLGxpZ2h0Z29sZGVucm9keWVsbG93OlsyNTAsMjUwLDIxMF0sbGlnaHRncmF5OlsyMTEsMjExLDIxMV0sbGlnaHRncmVlbjpbMTQ0LDIzOCwxNDRdLGxpZ2h0Z3JleTpbMjExLDIxMSwyMTFdLGxpZ2h0cGluazpbMjU1LDE4MiwxOTNdLGxpZ2h0c2FsbW9uOlsyNTUsMTYwLDEyMl0sbGlnaHRzZWFncmVlbjpbMzIsMTc4LDE3MF0sbGlnaHRza3libHVlOlsxMzUsMjA2LDI1MF0sbGlnaHRzbGF0ZWdyYXk6WzExOSwxMzYsMTUzXSxsaWdodHNsYXRlZ3JleTpbMTE5LDEzNiwxNTNdLGxpZ2h0c3RlZWxibHVlOlsxNzYsMTk2LDIyMl0sbGlnaHR5ZWxsb3c6WzI1NSwyNTUsMjI0XSxsaW1lOlswLDI1NSwwXSxsaW1lZ3JlZW46WzUwLDIwNSw1MF0sbGluZW46WzI1MCwyNDAsMjMwXSxtYWdlbnRhOlsyNTUsMCwyNTVdLG1hcm9vbjpbMTI4LDAsMF0sbWVkaXVtYXF1YW1hcmluZTpbMTAyLDIwNSwxNzBdLG1lZGl1bWJsdWU6WzAsMCwyMDVdLG1lZGl1bW9yY2hpZDpbMTg2LDg1LDIxMV0sbWVkaXVtcHVycGxlOlsxNDcsMTEyLDIxOV0sbWVkaXVtc2VhZ3JlZW46WzYwLDE3OSwxMTNdLG1lZGl1bXNsYXRlYmx1ZTpbMTIzLDEwNCwyMzhdLG1lZGl1bXNwcmluZ2dyZWVuOlswLDI1MCwxNTRdLG1lZGl1bXR1cnF1b2lzZTpbNzIsMjA5LDIwNF0sbWVkaXVtdmlvbGV0cmVkOlsxOTksMjEsMTMzXSxtaWRuaWdodGJsdWU6WzI1LDI1LDExMl0sbWludGNyZWFtOlsyNDUsMjU1LDI1MF0sbWlzdHlyb3NlOlsyNTUsMjI4LDIyNV0sbW9jY2FzaW46WzI1NSwyMjgsMTgxXSxuYXZham93aGl0ZTpbMjU1LDIyMiwxNzNdLG5hdnk6WzAsMCwxMjhdLG9sZGxhY2U6WzI1MywyNDUsMjMwXSxvbGl2ZTpbMTI4LDEyOCwwXSxvbGl2ZWRyYWI6WzEwNywxNDIsMzVdLG9yYW5nZTpbMjU1LDE2NSwwXSxvcmFuZ2VyZWQ6WzI1NSw2OSwwXSxvcmNoaWQ6WzIxOCwxMTIsMjE0XSxwYWxlZ29sZGVucm9kOlsyMzgsMjMyLDE3MF0scGFsZWdyZWVuOlsxNTIsMjUxLDE1Ml0scGFsZXR1cnF1b2lzZTpbMTc1LDIzOCwyMzhdLHBhbGV2aW9sZXRyZWQ6WzIxOSwxMTIsMTQ3XSxwYXBheWF3aGlwOlsyNTUsMjM5LDIxM10scGVhY2hwdWZmOlsyNTUsMjE4LDE4NV0scGVydTpbMjA1LDEzMyw2M10scGluazpbMjU1LDE5MiwyMDNdLHBsdW06WzIyMSwxNjAsMjIxXSxwb3dkZXJibHVlOlsxNzYsMjI0LDIzMF0scHVycGxlOlsxMjgsMCwxMjhdLHJlYmVjY2FwdXJwbGU6WzEwMiw1MSwxNTNdLHJlZDpbMjU1LDAsMF0scm9zeWJyb3duOlsxODgsMTQzLDE0M10scm95YWxibHVlOls2NSwxMDUsMjI1XSxzYWRkbGVicm93bjpbMTM5LDY5LDE5XSxzYWxtb246WzI1MCwxMjgsMTE0XSxzYW5keWJyb3duOlsyNDQsMTY0LDk2XSxzZWFncmVlbjpbNDYsMTM5LDg3XSxzZWFzaGVsbDpbMjU1LDI0NSwyMzhdLHNpZW5uYTpbMTYwLDgyLDQ1XSxzaWx2ZXI6WzE5MiwxOTIsMTkyXSxza3libHVlOlsxMzUsMjA2LDIzNV0sc2xhdGVibHVlOlsxMDYsOTAsMjA1XSxzbGF0ZWdyYXk6WzExMiwxMjgsMTQ0XSxzbGF0ZWdyZXk6WzExMiwxMjgsMTQ0XSxzbm93OlsyNTUsMjUwLDI1MF0sc3ByaW5nZ3JlZW46WzAsMjU1LDEyN10sc3RlZWxibHVlOls3MCwxMzAsMTgwXSx0YW46WzIxMCwxODAsMTQwXSx0ZWFsOlswLDEyOCwxMjhdLHRoaXN0bGU6WzIxNiwxOTEsMjE2XSx0b21hdG86WzI1NSw5OSw3MV0sdHVycXVvaXNlOls2NCwyMjQsMjA4XSx2aW9sZXQ6WzIzOCwxMzAsMjM4XSx3aGVhdDpbMjQ1LDIyMiwxNzldLHdoaXRlOlsyNTUsMjU1LDI1NV0sd2hpdGVzbW9rZTpbMjQ1LDI0NSwyNDVdLHllbGxvdzpbMjU1LDI1NSwwXSx5ZWxsb3dncmVlbjpbMTU0LDIwNSw1MF19fSx7fV0sNjpbZnVuY3Rpb24oRW4sam4sdCl7dmFyIGUsbjtlPXRoaXMsbj1mdW5jdGlvbigpe1widXNlIHN0cmljdFwiO3ZhciB0LGE7ZnVuY3Rpb24gYygpe3JldHVybiB0LmFwcGx5KG51bGwsYXJndW1lbnRzKX1mdW5jdGlvbiBzKHQpe3JldHVybiB0IGluc3RhbmNlb2YgQXJyYXl8fFwiW29iamVjdCBBcnJheV1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX1mdW5jdGlvbiBsKHQpe3JldHVybiBudWxsIT10JiZcIltvYmplY3QgT2JqZWN0XVwiPT09T2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKHQpfWZ1bmN0aW9uIHUodCl7cmV0dXJuIHZvaWQgMD09PXR9ZnVuY3Rpb24gZCh0KXtyZXR1cm5cIm51bWJlclwiPT10eXBlb2YgdHx8XCJbb2JqZWN0IE51bWJlcl1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX1mdW5jdGlvbiBoKHQpe3JldHVybiB0IGluc3RhbmNlb2YgRGF0ZXx8XCJbb2JqZWN0IERhdGVdXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCl9ZnVuY3Rpb24gZih0LGUpe3ZhciBuLGk9W107Zm9yKG49MDtuPHQubGVuZ3RoOysrbilpLnB1c2goZSh0W25dLG4pKTtyZXR1cm4gaX1mdW5jdGlvbiBnKHQsZSl7cmV0dXJuIE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbCh0LGUpfWZ1bmN0aW9uIG0odCxlKXtmb3IodmFyIG4gaW4gZSlnKGUsbikmJih0W25dPWVbbl0pO3JldHVybiBnKGUsXCJ0b1N0cmluZ1wiKSYmKHQudG9TdHJpbmc9ZS50b1N0cmluZyksZyhlLFwidmFsdWVPZlwiKSYmKHQudmFsdWVPZj1lLnZhbHVlT2YpLHR9ZnVuY3Rpb24gcCh0LGUsbixpKXtyZXR1cm4gRGUodCxlLG4saSwhMCkudXRjKCl9ZnVuY3Rpb24gdih0KXtyZXR1cm4gbnVsbD09dC5fcGYmJih0Ll9wZj17ZW1wdHk6ITEsdW51c2VkVG9rZW5zOltdLHVudXNlZElucHV0OltdLG92ZXJmbG93Oi0yLGNoYXJzTGVmdE92ZXI6MCxudWxsSW5wdXQ6ITEsaW52YWxpZE1vbnRoOm51bGwsaW52YWxpZEZvcm1hdDohMSx1c2VySW52YWxpZGF0ZWQ6ITEsaXNvOiExLHBhcnNlZERhdGVQYXJ0czpbXSxtZXJpZGllbTpudWxsLHJmYzI4MjI6ITEsd2Vla2RheU1pc21hdGNoOiExfSksdC5fcGZ9ZnVuY3Rpb24gYih0KXtpZihudWxsPT10Ll9pc1ZhbGlkKXt2YXIgZT12KHQpLG49YS5jYWxsKGUucGFyc2VkRGF0ZVBhcnRzLGZ1bmN0aW9uKHQpe3JldHVybiBudWxsIT10fSksaT0haXNOYU4odC5fZC5nZXRUaW1lKCkpJiZlLm92ZXJmbG93PDAmJiFlLmVtcHR5JiYhZS5pbnZhbGlkTW9udGgmJiFlLmludmFsaWRXZWVrZGF5JiYhZS53ZWVrZGF5TWlzbWF0Y2gmJiFlLm51bGxJbnB1dCYmIWUuaW52YWxpZEZvcm1hdCYmIWUudXNlckludmFsaWRhdGVkJiYoIWUubWVyaWRpZW18fGUubWVyaWRpZW0mJm4pO2lmKHQuX3N0cmljdCYmKGk9aSYmMD09PWUuY2hhcnNMZWZ0T3ZlciYmMD09PWUudW51c2VkVG9rZW5zLmxlbmd0aCYmdm9pZCAwPT09ZS5iaWdIb3VyKSxudWxsIT1PYmplY3QuaXNGcm96ZW4mJk9iamVjdC5pc0Zyb3plbih0KSlyZXR1cm4gaTt0Ll9pc1ZhbGlkPWl9cmV0dXJuIHQuX2lzVmFsaWR9ZnVuY3Rpb24geSh0KXt2YXIgZT1wKE5hTik7cmV0dXJuIG51bGwhPXQ/bSh2KGUpLHQpOnYoZSkudXNlckludmFsaWRhdGVkPSEwLGV9YT1BcnJheS5wcm90b3R5cGUuc29tZT9BcnJheS5wcm90b3R5cGUuc29tZTpmdW5jdGlvbih0KXtmb3IodmFyIGU9T2JqZWN0KHRoaXMpLG49ZS5sZW5ndGg+Pj4wLGk9MDtpPG47aSsrKWlmKGkgaW4gZSYmdC5jYWxsKHRoaXMsZVtpXSxpLGUpKXJldHVybiEwO3JldHVybiExfTt2YXIgcj1jLm1vbWVudFByb3BlcnRpZXM9W107ZnVuY3Rpb24geCh0LGUpe3ZhciBuLGksYTtpZih1KGUuX2lzQU1vbWVudE9iamVjdCl8fCh0Ll9pc0FNb21lbnRPYmplY3Q9ZS5faXNBTW9tZW50T2JqZWN0KSx1KGUuX2kpfHwodC5faT1lLl9pKSx1KGUuX2YpfHwodC5fZj1lLl9mKSx1KGUuX2wpfHwodC5fbD1lLl9sKSx1KGUuX3N0cmljdCl8fCh0Ll9zdHJpY3Q9ZS5fc3RyaWN0KSx1KGUuX3R6bSl8fCh0Ll90em09ZS5fdHptKSx1KGUuX2lzVVRDKXx8KHQuX2lzVVRDPWUuX2lzVVRDKSx1KGUuX29mZnNldCl8fCh0Ll9vZmZzZXQ9ZS5fb2Zmc2V0KSx1KGUuX3BmKXx8KHQuX3BmPXYoZSkpLHUoZS5fbG9jYWxlKXx8KHQuX2xvY2FsZT1lLl9sb2NhbGUpLDA8ci5sZW5ndGgpZm9yKG49MDtuPHIubGVuZ3RoO24rKyl1KGE9ZVtpPXJbbl1dKXx8KHRbaV09YSk7cmV0dXJuIHR9dmFyIGU9ITE7ZnVuY3Rpb24gXyh0KXt4KHRoaXMsdCksdGhpcy5fZD1uZXcgRGF0ZShudWxsIT10Ll9kP3QuX2QuZ2V0VGltZSgpOk5hTiksdGhpcy5pc1ZhbGlkKCl8fCh0aGlzLl9kPW5ldyBEYXRlKE5hTikpLCExPT09ZSYmKGU9ITAsYy51cGRhdGVPZmZzZXQodGhpcyksZT0hMSl9ZnVuY3Rpb24gayh0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIF98fG51bGwhPXQmJm51bGwhPXQuX2lzQU1vbWVudE9iamVjdH1mdW5jdGlvbiB3KHQpe3JldHVybiB0PDA/TWF0aC5jZWlsKHQpfHwwOk1hdGguZmxvb3IodCl9ZnVuY3Rpb24gTSh0KXt2YXIgZT0rdCxuPTA7cmV0dXJuIDAhPT1lJiZpc0Zpbml0ZShlKSYmKG49dyhlKSksbn1mdW5jdGlvbiBvKHQsZSxuKXt2YXIgaSxhPU1hdGgubWluKHQubGVuZ3RoLGUubGVuZ3RoKSxyPU1hdGguYWJzKHQubGVuZ3RoLWUubGVuZ3RoKSxvPTA7Zm9yKGk9MDtpPGE7aSsrKShuJiZ0W2ldIT09ZVtpXXx8IW4mJk0odFtpXSkhPT1NKGVbaV0pKSYmbysrO3JldHVybiBvK3J9ZnVuY3Rpb24gUyh0KXshMT09PWMuc3VwcHJlc3NEZXByZWNhdGlvbldhcm5pbmdzJiZcInVuZGVmaW5lZFwiIT10eXBlb2YgY29uc29sZSYmY29uc29sZS53YXJuJiZjb25zb2xlLndhcm4oXCJEZXByZWNhdGlvbiB3YXJuaW5nOiBcIit0KX1mdW5jdGlvbiBuKGEscil7dmFyIG89ITA7cmV0dXJuIG0oZnVuY3Rpb24oKXtpZihudWxsIT1jLmRlcHJlY2F0aW9uSGFuZGxlciYmYy5kZXByZWNhdGlvbkhhbmRsZXIobnVsbCxhKSxvKXtmb3IodmFyIHQsZT1bXSxuPTA7bjxhcmd1bWVudHMubGVuZ3RoO24rKyl7aWYodD1cIlwiLFwib2JqZWN0XCI9PXR5cGVvZiBhcmd1bWVudHNbbl0pe2Zvcih2YXIgaSBpbiB0Kz1cIlxcbltcIituK1wiXSBcIixhcmd1bWVudHNbMF0pdCs9aStcIjogXCIrYXJndW1lbnRzWzBdW2ldK1wiLCBcIjt0PXQuc2xpY2UoMCwtMil9ZWxzZSB0PWFyZ3VtZW50c1tuXTtlLnB1c2godCl9UyhhK1wiXFxuQXJndW1lbnRzOiBcIitBcnJheS5wcm90b3R5cGUuc2xpY2UuY2FsbChlKS5qb2luKFwiXCIpK1wiXFxuXCIrKG5ldyBFcnJvcikuc3RhY2spLG89ITF9cmV0dXJuIHIuYXBwbHkodGhpcyxhcmd1bWVudHMpfSxyKX12YXIgaSxEPXt9O2Z1bmN0aW9uIEModCxlKXtudWxsIT1jLmRlcHJlY2F0aW9uSGFuZGxlciYmYy5kZXByZWNhdGlvbkhhbmRsZXIodCxlKSxEW3RdfHwoUyhlKSxEW3RdPSEwKX1mdW5jdGlvbiBQKHQpe3JldHVybiB0IGluc3RhbmNlb2YgRnVuY3Rpb258fFwiW29iamVjdCBGdW5jdGlvbl1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX1mdW5jdGlvbiBUKHQsZSl7dmFyIG4saT1tKHt9LHQpO2ZvcihuIGluIGUpZyhlLG4pJiYobCh0W25dKSYmbChlW25dKT8oaVtuXT17fSxtKGlbbl0sdFtuXSksbShpW25dLGVbbl0pKTpudWxsIT1lW25dP2lbbl09ZVtuXTpkZWxldGUgaVtuXSk7Zm9yKG4gaW4gdClnKHQsbikmJiFnKGUsbikmJmwodFtuXSkmJihpW25dPW0oe30saVtuXSkpO3JldHVybiBpfWZ1bmN0aW9uIE8odCl7bnVsbCE9dCYmdGhpcy5zZXQodCl9Yy5zdXBwcmVzc0RlcHJlY2F0aW9uV2FybmluZ3M9ITEsYy5kZXByZWNhdGlvbkhhbmRsZXI9bnVsbCxpPU9iamVjdC5rZXlzP09iamVjdC5rZXlzOmZ1bmN0aW9uKHQpe3ZhciBlLG49W107Zm9yKGUgaW4gdClnKHQsZSkmJm4ucHVzaChlKTtyZXR1cm4gbn07dmFyIEk9e307ZnVuY3Rpb24gQSh0LGUpe3ZhciBuPXQudG9Mb3dlckNhc2UoKTtJW25dPUlbbitcInNcIl09SVtlXT10fWZ1bmN0aW9uIEYodCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQ/SVt0XXx8SVt0LnRvTG93ZXJDYXNlKCldOnZvaWQgMH1mdW5jdGlvbiBSKHQpe3ZhciBlLG4saT17fTtmb3IobiBpbiB0KWcodCxuKSYmKGU9RihuKSkmJihpW2VdPXRbbl0pO3JldHVybiBpfXZhciBMPXt9O2Z1bmN0aW9uIFkodCxlKXtMW3RdPWV9ZnVuY3Rpb24gVyh0LGUsbil7dmFyIGk9XCJcIitNYXRoLmFicyh0KSxhPWUtaS5sZW5ndGg7cmV0dXJuKDA8PXQ/bj9cIitcIjpcIlwiOlwiLVwiKStNYXRoLnBvdygxMCxNYXRoLm1heCgwLGEpKS50b1N0cmluZygpLnN1YnN0cigxKStpfXZhciBOPS8oXFxbW15cXFtdKlxcXSl8KFxcXFwpPyhbSGhdbW0oc3MpP3xNb3xNTT9NP00/fERvfERERG98REQ/RD9EP3xkZGQ/ZD98ZG8/fHdbb3x3XT98V1tvfFddP3xRbz98WVlZWVlZfFlZWVlZfFlZWVl8WVl8Z2coZ2dnPyk/fEdHKEdHRz8pP3xlfEV8YXxBfGhoP3xISD98a2s/fG1tP3xzcz98U3sxLDl9fHh8WHx6ej98Wlo/fC4pL2csej0vKFxcW1teXFxbXSpcXF0pfChcXFxcKT8oTFRTfExUfExMP0w/TD98bHsxLDR9KS9nLFY9e30sSD17fTtmdW5jdGlvbiBCKHQsZSxuLGkpe3ZhciBhPWk7XCJzdHJpbmdcIj09dHlwZW9mIGkmJihhPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXNbaV0oKX0pLHQmJihIW3RdPWEpLGUmJihIW2VbMF1dPWZ1bmN0aW9uKCl7cmV0dXJuIFcoYS5hcHBseSh0aGlzLGFyZ3VtZW50cyksZVsxXSxlWzJdKX0pLG4mJihIW25dPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLm9yZGluYWwoYS5hcHBseSh0aGlzLGFyZ3VtZW50cyksdCl9KX1mdW5jdGlvbiBFKHQsZSl7cmV0dXJuIHQuaXNWYWxpZCgpPyhlPWooZSx0LmxvY2FsZURhdGEoKSksVltlXT1WW2VdfHxmdW5jdGlvbihpKXt2YXIgdCxhLGUscj1pLm1hdGNoKE4pO2Zvcih0PTAsYT1yLmxlbmd0aDt0PGE7dCsrKUhbclt0XV0/clt0XT1IW3JbdF1dOnJbdF09KGU9clt0XSkubWF0Y2goL1xcW1tcXHNcXFNdLyk/ZS5yZXBsYWNlKC9eXFxbfFxcXSQvZyxcIlwiKTplLnJlcGxhY2UoL1xcXFwvZyxcIlwiKTtyZXR1cm4gZnVuY3Rpb24odCl7dmFyIGUsbj1cIlwiO2ZvcihlPTA7ZTxhO2UrKyluKz1QKHJbZV0pP3JbZV0uY2FsbCh0LGkpOnJbZV07cmV0dXJuIG59fShlKSxWW2VdKHQpKTp0LmxvY2FsZURhdGEoKS5pbnZhbGlkRGF0ZSgpfWZ1bmN0aW9uIGoodCxlKXt2YXIgbj01O2Z1bmN0aW9uIGkodCl7cmV0dXJuIGUubG9uZ0RhdGVGb3JtYXQodCl8fHR9Zm9yKHoubGFzdEluZGV4PTA7MDw9biYmei50ZXN0KHQpOyl0PXQucmVwbGFjZSh6LGkpLHoubGFzdEluZGV4PTAsbi09MTtyZXR1cm4gdH12YXIgVT0vXFxkLyxHPS9cXGRcXGQvLHE9L1xcZHszfS8sWj0vXFxkezR9LyxYPS9bKy1dP1xcZHs2fS8sSj0vXFxkXFxkPy8sJD0vXFxkXFxkXFxkXFxkPy8sSz0vXFxkXFxkXFxkXFxkXFxkXFxkPy8sUT0vXFxkezEsM30vLHR0PS9cXGR7MSw0fS8sZXQ9L1srLV0/XFxkezEsNn0vLG50PS9cXGQrLyxpdD0vWystXT9cXGQrLyxhdD0vWnxbKy1dXFxkXFxkOj9cXGRcXGQvZ2kscnQ9L1p8WystXVxcZFxcZCg/Ojo/XFxkXFxkKT8vZ2ksb3Q9L1swLTldezAsMjU2fVsnYS16XFx1MDBBMC1cXHUwNUZGXFx1MDcwMC1cXHVEN0ZGXFx1RjkwMC1cXHVGRENGXFx1RkRGMC1cXHVGRjA3XFx1RkYxMC1cXHVGRkVGXXsxLDI1Nn18W1xcdTA2MDAtXFx1MDZGRlxcL117MSwyNTZ9KFxccyo/W1xcdTA2MDAtXFx1MDZGRl17MSwyNTZ9KXsxLDJ9L2ksc3Q9e307ZnVuY3Rpb24gbHQodCxuLGkpe3N0W3RdPVAobik/bjpmdW5jdGlvbih0LGUpe3JldHVybiB0JiZpP2k6bn19ZnVuY3Rpb24gdXQodCxlKXtyZXR1cm4gZyhzdCx0KT9zdFt0XShlLl9zdHJpY3QsZS5fbG9jYWxlKTpuZXcgUmVnRXhwKGR0KHQucmVwbGFjZShcIlxcXFxcIixcIlwiKS5yZXBsYWNlKC9cXFxcKFxcWyl8XFxcXChcXF0pfFxcWyhbXlxcXVxcW10qKVxcXXxcXFxcKC4pL2csZnVuY3Rpb24odCxlLG4saSxhKXtyZXR1cm4gZXx8bnx8aXx8YX0pKSl9ZnVuY3Rpb24gZHQodCl7cmV0dXJuIHQucmVwbGFjZSgvWy1cXC9cXFxcXiQqKz8uKCl8W1xcXXt9XS9nLFwiXFxcXCQmXCIpfXZhciBodD17fTtmdW5jdGlvbiBjdCh0LG4pe3ZhciBlLGk9bjtmb3IoXCJzdHJpbmdcIj09dHlwZW9mIHQmJih0PVt0XSksZChuKSYmKGk9ZnVuY3Rpb24odCxlKXtlW25dPU0odCl9KSxlPTA7ZTx0Lmxlbmd0aDtlKyspaHRbdFtlXV09aX1mdW5jdGlvbiBmdCh0LGEpe2N0KHQsZnVuY3Rpb24odCxlLG4saSl7bi5fdz1uLl93fHx7fSxhKHQsbi5fdyxuLGkpfSl9dmFyIGd0PTAsbXQ9MSxwdD0yLHZ0PTMsYnQ9NCx5dD01LHh0PTYsX3Q9NyxrdD04O2Z1bmN0aW9uIHd0KHQpe3JldHVybiBNdCh0KT8zNjY6MzY1fWZ1bmN0aW9uIE10KHQpe3JldHVybiB0JTQ9PTAmJnQlMTAwIT0wfHx0JTQwMD09MH1CKFwiWVwiLDAsMCxmdW5jdGlvbigpe3ZhciB0PXRoaXMueWVhcigpO3JldHVybiB0PD05OTk5P1wiXCIrdDpcIitcIit0fSksQigwLFtcIllZXCIsMl0sMCxmdW5jdGlvbigpe3JldHVybiB0aGlzLnllYXIoKSUxMDB9KSxCKDAsW1wiWVlZWVwiLDRdLDAsXCJ5ZWFyXCIpLEIoMCxbXCJZWVlZWVwiLDVdLDAsXCJ5ZWFyXCIpLEIoMCxbXCJZWVlZWVlcIiw2LCEwXSwwLFwieWVhclwiKSxBKFwieWVhclwiLFwieVwiKSxZKFwieWVhclwiLDEpLGx0KFwiWVwiLGl0KSxsdChcIllZXCIsSixHKSxsdChcIllZWVlcIix0dCxaKSxsdChcIllZWVlZXCIsZXQsWCksbHQoXCJZWVlZWVlcIixldCxYKSxjdChbXCJZWVlZWVwiLFwiWVlZWVlZXCJdLGd0KSxjdChcIllZWVlcIixmdW5jdGlvbih0LGUpe2VbZ3RdPTI9PT10Lmxlbmd0aD9jLnBhcnNlVHdvRGlnaXRZZWFyKHQpOk0odCl9KSxjdChcIllZXCIsZnVuY3Rpb24odCxlKXtlW2d0XT1jLnBhcnNlVHdvRGlnaXRZZWFyKHQpfSksY3QoXCJZXCIsZnVuY3Rpb24odCxlKXtlW2d0XT1wYXJzZUludCh0LDEwKX0pLGMucGFyc2VUd29EaWdpdFllYXI9ZnVuY3Rpb24odCl7cmV0dXJuIE0odCkrKDY4PE0odCk/MTkwMDoyZTMpfTt2YXIgU3QsRHQ9Q3QoXCJGdWxsWWVhclwiLCEwKTtmdW5jdGlvbiBDdChlLG4pe3JldHVybiBmdW5jdGlvbih0KXtyZXR1cm4gbnVsbCE9dD8oVHQodGhpcyxlLHQpLGMudXBkYXRlT2Zmc2V0KHRoaXMsbiksdGhpcyk6UHQodGhpcyxlKX19ZnVuY3Rpb24gUHQodCxlKXtyZXR1cm4gdC5pc1ZhbGlkKCk/dC5fZFtcImdldFwiKyh0Ll9pc1VUQz9cIlVUQ1wiOlwiXCIpK2VdKCk6TmFOfWZ1bmN0aW9uIFR0KHQsZSxuKXt0LmlzVmFsaWQoKSYmIWlzTmFOKG4pJiYoXCJGdWxsWWVhclwiPT09ZSYmTXQodC55ZWFyKCkpJiYxPT09dC5tb250aCgpJiYyOT09PXQuZGF0ZSgpP3QuX2RbXCJzZXRcIisodC5faXNVVEM/XCJVVENcIjpcIlwiKStlXShuLHQubW9udGgoKSxPdChuLHQubW9udGgoKSkpOnQuX2RbXCJzZXRcIisodC5faXNVVEM/XCJVVENcIjpcIlwiKStlXShuKSl9ZnVuY3Rpb24gT3QodCxlKXtpZihpc05hTih0KXx8aXNOYU4oZSkpcmV0dXJuIE5hTjt2YXIgbixpPShlJShuPTEyKStuKSVuO3JldHVybiB0Kz0oZS1pKS8xMiwxPT09aT9NdCh0KT8yOToyODozMS1pJTclMn1TdD1BcnJheS5wcm90b3R5cGUuaW5kZXhPZj9BcnJheS5wcm90b3R5cGUuaW5kZXhPZjpmdW5jdGlvbih0KXt2YXIgZTtmb3IoZT0wO2U8dGhpcy5sZW5ndGg7KytlKWlmKHRoaXNbZV09PT10KXJldHVybiBlO3JldHVybi0xfSxCKFwiTVwiLFtcIk1NXCIsMl0sXCJNb1wiLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMubW9udGgoKSsxfSksQihcIk1NTVwiLDAsMCxmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5sb2NhbGVEYXRhKCkubW9udGhzU2hvcnQodGhpcyx0KX0pLEIoXCJNTU1NXCIsMCwwLGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmxvY2FsZURhdGEoKS5tb250aHModGhpcyx0KX0pLEEoXCJtb250aFwiLFwiTVwiKSxZKFwibW9udGhcIiw4KSxsdChcIk1cIixKKSxsdChcIk1NXCIsSixHKSxsdChcIk1NTVwiLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUubW9udGhzU2hvcnRSZWdleCh0KX0pLGx0KFwiTU1NTVwiLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUubW9udGhzUmVnZXgodCl9KSxjdChbXCJNXCIsXCJNTVwiXSxmdW5jdGlvbih0LGUpe2VbbXRdPU0odCktMX0pLGN0KFtcIk1NTVwiLFwiTU1NTVwiXSxmdW5jdGlvbih0LGUsbixpKXt2YXIgYT1uLl9sb2NhbGUubW9udGhzUGFyc2UodCxpLG4uX3N0cmljdCk7bnVsbCE9YT9lW210XT1hOnYobikuaW52YWxpZE1vbnRoPXR9KTt2YXIgSXQ9L0Rbb0RdPyhcXFtbXlxcW1xcXV0qXFxdfFxccykrTU1NTT8vLEF0PVwiSmFudWFyeV9GZWJydWFyeV9NYXJjaF9BcHJpbF9NYXlfSnVuZV9KdWx5X0F1Z3VzdF9TZXB0ZW1iZXJfT2N0b2Jlcl9Ob3ZlbWJlcl9EZWNlbWJlclwiLnNwbGl0KFwiX1wiKTt2YXIgRnQ9XCJKYW5fRmViX01hcl9BcHJfTWF5X0p1bl9KdWxfQXVnX1NlcF9PY3RfTm92X0RlY1wiLnNwbGl0KFwiX1wiKTtmdW5jdGlvbiBSdCh0LGUpe3ZhciBuO2lmKCF0LmlzVmFsaWQoKSlyZXR1cm4gdDtpZihcInN0cmluZ1wiPT10eXBlb2YgZSlpZigvXlxcZCskLy50ZXN0KGUpKWU9TShlKTtlbHNlIGlmKCFkKGU9dC5sb2NhbGVEYXRhKCkubW9udGhzUGFyc2UoZSkpKXJldHVybiB0O3JldHVybiBuPU1hdGgubWluKHQuZGF0ZSgpLE90KHQueWVhcigpLGUpKSx0Ll9kW1wic2V0XCIrKHQuX2lzVVRDP1wiVVRDXCI6XCJcIikrXCJNb250aFwiXShlLG4pLHR9ZnVuY3Rpb24gTHQodCl7cmV0dXJuIG51bGwhPXQ/KFJ0KHRoaXMsdCksYy51cGRhdGVPZmZzZXQodGhpcywhMCksdGhpcyk6UHQodGhpcyxcIk1vbnRoXCIpfXZhciBZdD1vdDt2YXIgV3Q9b3Q7ZnVuY3Rpb24gTnQoKXtmdW5jdGlvbiB0KHQsZSl7cmV0dXJuIGUubGVuZ3RoLXQubGVuZ3RofXZhciBlLG4saT1bXSxhPVtdLHI9W107Zm9yKGU9MDtlPDEyO2UrKyluPXAoWzJlMyxlXSksaS5wdXNoKHRoaXMubW9udGhzU2hvcnQobixcIlwiKSksYS5wdXNoKHRoaXMubW9udGhzKG4sXCJcIikpLHIucHVzaCh0aGlzLm1vbnRocyhuLFwiXCIpKSxyLnB1c2godGhpcy5tb250aHNTaG9ydChuLFwiXCIpKTtmb3IoaS5zb3J0KHQpLGEuc29ydCh0KSxyLnNvcnQodCksZT0wO2U8MTI7ZSsrKWlbZV09ZHQoaVtlXSksYVtlXT1kdChhW2VdKTtmb3IoZT0wO2U8MjQ7ZSsrKXJbZV09ZHQocltlXSk7dGhpcy5fbW9udGhzUmVnZXg9bmV3IFJlZ0V4cChcIl4oXCIrci5qb2luKFwifFwiKStcIilcIixcImlcIiksdGhpcy5fbW9udGhzU2hvcnRSZWdleD10aGlzLl9tb250aHNSZWdleCx0aGlzLl9tb250aHNTdHJpY3RSZWdleD1uZXcgUmVnRXhwKFwiXihcIithLmpvaW4oXCJ8XCIpK1wiKVwiLFwiaVwiKSx0aGlzLl9tb250aHNTaG9ydFN0cmljdFJlZ2V4PW5ldyBSZWdFeHAoXCJeKFwiK2kuam9pbihcInxcIikrXCIpXCIsXCJpXCIpfWZ1bmN0aW9uIHp0KHQpe3ZhciBlPW5ldyBEYXRlKERhdGUuVVRDLmFwcGx5KG51bGwsYXJndW1lbnRzKSk7cmV0dXJuIHQ8MTAwJiYwPD10JiZpc0Zpbml0ZShlLmdldFVUQ0Z1bGxZZWFyKCkpJiZlLnNldFVUQ0Z1bGxZZWFyKHQpLGV9ZnVuY3Rpb24gVnQodCxlLG4pe3ZhciBpPTcrZS1uO3JldHVybi0oKDcrenQodCwwLGkpLmdldFVUQ0RheSgpLWUpJTcpK2ktMX1mdW5jdGlvbiBIdCh0LGUsbixpLGEpe3ZhciByLG8scz0xKzcqKGUtMSkrKDcrbi1pKSU3K1Z0KHQsaSxhKTtyZXR1cm4gbz1zPD0wP3d0KHI9dC0xKStzOnM+d3QodCk/KHI9dCsxLHMtd3QodCkpOihyPXQscykse3llYXI6cixkYXlPZlllYXI6b319ZnVuY3Rpb24gQnQodCxlLG4pe3ZhciBpLGEscj1WdCh0LnllYXIoKSxlLG4pLG89TWF0aC5mbG9vcigodC5kYXlPZlllYXIoKS1yLTEpLzcpKzE7cmV0dXJuIG88MT9pPW8rRXQoYT10LnllYXIoKS0xLGUsbik6bz5FdCh0LnllYXIoKSxlLG4pPyhpPW8tRXQodC55ZWFyKCksZSxuKSxhPXQueWVhcigpKzEpOihhPXQueWVhcigpLGk9bykse3dlZWs6aSx5ZWFyOmF9fWZ1bmN0aW9uIEV0KHQsZSxuKXt2YXIgaT1WdCh0LGUsbiksYT1WdCh0KzEsZSxuKTtyZXR1cm4od3QodCktaSthKS83fUIoXCJ3XCIsW1wid3dcIiwyXSxcIndvXCIsXCJ3ZWVrXCIpLEIoXCJXXCIsW1wiV1dcIiwyXSxcIldvXCIsXCJpc29XZWVrXCIpLEEoXCJ3ZWVrXCIsXCJ3XCIpLEEoXCJpc29XZWVrXCIsXCJXXCIpLFkoXCJ3ZWVrXCIsNSksWShcImlzb1dlZWtcIiw1KSxsdChcIndcIixKKSxsdChcInd3XCIsSixHKSxsdChcIldcIixKKSxsdChcIldXXCIsSixHKSxmdChbXCJ3XCIsXCJ3d1wiLFwiV1wiLFwiV1dcIl0sZnVuY3Rpb24odCxlLG4saSl7ZVtpLnN1YnN0cigwLDEpXT1NKHQpfSk7QihcImRcIiwwLFwiZG9cIixcImRheVwiKSxCKFwiZGRcIiwwLDAsZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLndlZWtkYXlzTWluKHRoaXMsdCl9KSxCKFwiZGRkXCIsMCwwLGZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmxvY2FsZURhdGEoKS53ZWVrZGF5c1Nob3J0KHRoaXMsdCl9KSxCKFwiZGRkZFwiLDAsMCxmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5sb2NhbGVEYXRhKCkud2Vla2RheXModGhpcyx0KX0pLEIoXCJlXCIsMCwwLFwid2Vla2RheVwiKSxCKFwiRVwiLDAsMCxcImlzb1dlZWtkYXlcIiksQShcImRheVwiLFwiZFwiKSxBKFwid2Vla2RheVwiLFwiZVwiKSxBKFwiaXNvV2Vla2RheVwiLFwiRVwiKSxZKFwiZGF5XCIsMTEpLFkoXCJ3ZWVrZGF5XCIsMTEpLFkoXCJpc29XZWVrZGF5XCIsMTEpLGx0KFwiZFwiLEopLGx0KFwiZVwiLEopLGx0KFwiRVwiLEopLGx0KFwiZGRcIixmdW5jdGlvbih0LGUpe3JldHVybiBlLndlZWtkYXlzTWluUmVnZXgodCl9KSxsdChcImRkZFwiLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUud2Vla2RheXNTaG9ydFJlZ2V4KHQpfSksbHQoXCJkZGRkXCIsZnVuY3Rpb24odCxlKXtyZXR1cm4gZS53ZWVrZGF5c1JlZ2V4KHQpfSksZnQoW1wiZGRcIixcImRkZFwiLFwiZGRkZFwiXSxmdW5jdGlvbih0LGUsbixpKXt2YXIgYT1uLl9sb2NhbGUud2Vla2RheXNQYXJzZSh0LGksbi5fc3RyaWN0KTtudWxsIT1hP2UuZD1hOnYobikuaW52YWxpZFdlZWtkYXk9dH0pLGZ0KFtcImRcIixcImVcIixcIkVcIl0sZnVuY3Rpb24odCxlLG4saSl7ZVtpXT1NKHQpfSk7dmFyIGp0PVwiU3VuZGF5X01vbmRheV9UdWVzZGF5X1dlZG5lc2RheV9UaHVyc2RheV9GcmlkYXlfU2F0dXJkYXlcIi5zcGxpdChcIl9cIik7dmFyIFV0PVwiU3VuX01vbl9UdWVfV2VkX1RodV9GcmlfU2F0XCIuc3BsaXQoXCJfXCIpO3ZhciBHdD1cIlN1X01vX1R1X1dlX1RoX0ZyX1NhXCIuc3BsaXQoXCJfXCIpO3ZhciBxdD1vdDt2YXIgWnQ9b3Q7dmFyIFh0PW90O2Z1bmN0aW9uIEp0KCl7ZnVuY3Rpb24gdCh0LGUpe3JldHVybiBlLmxlbmd0aC10Lmxlbmd0aH12YXIgZSxuLGksYSxyLG89W10scz1bXSxsPVtdLHU9W107Zm9yKGU9MDtlPDc7ZSsrKW49cChbMmUzLDFdKS5kYXkoZSksaT10aGlzLndlZWtkYXlzTWluKG4sXCJcIiksYT10aGlzLndlZWtkYXlzU2hvcnQobixcIlwiKSxyPXRoaXMud2Vla2RheXMobixcIlwiKSxvLnB1c2goaSkscy5wdXNoKGEpLGwucHVzaChyKSx1LnB1c2goaSksdS5wdXNoKGEpLHUucHVzaChyKTtmb3Ioby5zb3J0KHQpLHMuc29ydCh0KSxsLnNvcnQodCksdS5zb3J0KHQpLGU9MDtlPDc7ZSsrKXNbZV09ZHQoc1tlXSksbFtlXT1kdChsW2VdKSx1W2VdPWR0KHVbZV0pO3RoaXMuX3dlZWtkYXlzUmVnZXg9bmV3IFJlZ0V4cChcIl4oXCIrdS5qb2luKFwifFwiKStcIilcIixcImlcIiksdGhpcy5fd2Vla2RheXNTaG9ydFJlZ2V4PXRoaXMuX3dlZWtkYXlzUmVnZXgsdGhpcy5fd2Vla2RheXNNaW5SZWdleD10aGlzLl93ZWVrZGF5c1JlZ2V4LHRoaXMuX3dlZWtkYXlzU3RyaWN0UmVnZXg9bmV3IFJlZ0V4cChcIl4oXCIrbC5qb2luKFwifFwiKStcIilcIixcImlcIiksdGhpcy5fd2Vla2RheXNTaG9ydFN0cmljdFJlZ2V4PW5ldyBSZWdFeHAoXCJeKFwiK3Muam9pbihcInxcIikrXCIpXCIsXCJpXCIpLHRoaXMuX3dlZWtkYXlzTWluU3RyaWN0UmVnZXg9bmV3IFJlZ0V4cChcIl4oXCIrby5qb2luKFwifFwiKStcIilcIixcImlcIil9ZnVuY3Rpb24gJHQoKXtyZXR1cm4gdGhpcy5ob3VycygpJTEyfHwxMn1mdW5jdGlvbiBLdCh0LGUpe0IodCwwLDAsZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5sb2NhbGVEYXRhKCkubWVyaWRpZW0odGhpcy5ob3VycygpLHRoaXMubWludXRlcygpLGUpfSl9ZnVuY3Rpb24gUXQodCxlKXtyZXR1cm4gZS5fbWVyaWRpZW1QYXJzZX1CKFwiSFwiLFtcIkhIXCIsMl0sMCxcImhvdXJcIiksQihcImhcIixbXCJoaFwiLDJdLDAsJHQpLEIoXCJrXCIsW1wia2tcIiwyXSwwLGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaG91cnMoKXx8MjR9KSxCKFwiaG1tXCIsMCwwLGZ1bmN0aW9uKCl7cmV0dXJuXCJcIiskdC5hcHBseSh0aGlzKStXKHRoaXMubWludXRlcygpLDIpfSksQihcImhtbXNzXCIsMCwwLGZ1bmN0aW9uKCl7cmV0dXJuXCJcIiskdC5hcHBseSh0aGlzKStXKHRoaXMubWludXRlcygpLDIpK1codGhpcy5zZWNvbmRzKCksMil9KSxCKFwiSG1tXCIsMCwwLGZ1bmN0aW9uKCl7cmV0dXJuXCJcIit0aGlzLmhvdXJzKCkrVyh0aGlzLm1pbnV0ZXMoKSwyKX0pLEIoXCJIbW1zc1wiLDAsMCxmdW5jdGlvbigpe3JldHVyblwiXCIrdGhpcy5ob3VycygpK1codGhpcy5taW51dGVzKCksMikrVyh0aGlzLnNlY29uZHMoKSwyKX0pLEt0KFwiYVwiLCEwKSxLdChcIkFcIiwhMSksQShcImhvdXJcIixcImhcIiksWShcImhvdXJcIiwxMyksbHQoXCJhXCIsUXQpLGx0KFwiQVwiLFF0KSxsdChcIkhcIixKKSxsdChcImhcIixKKSxsdChcImtcIixKKSxsdChcIkhIXCIsSixHKSxsdChcImhoXCIsSixHKSxsdChcImtrXCIsSixHKSxsdChcImhtbVwiLCQpLGx0KFwiaG1tc3NcIixLKSxsdChcIkhtbVwiLCQpLGx0KFwiSG1tc3NcIixLKSxjdChbXCJIXCIsXCJISFwiXSx2dCksY3QoW1wia1wiLFwia2tcIl0sZnVuY3Rpb24odCxlLG4pe3ZhciBpPU0odCk7ZVt2dF09MjQ9PT1pPzA6aX0pLGN0KFtcImFcIixcIkFcIl0sZnVuY3Rpb24odCxlLG4pe24uX2lzUG09bi5fbG9jYWxlLmlzUE0odCksbi5fbWVyaWRpZW09dH0pLGN0KFtcImhcIixcImhoXCJdLGZ1bmN0aW9uKHQsZSxuKXtlW3Z0XT1NKHQpLHYobikuYmlnSG91cj0hMH0pLGN0KFwiaG1tXCIsZnVuY3Rpb24odCxlLG4pe3ZhciBpPXQubGVuZ3RoLTI7ZVt2dF09TSh0LnN1YnN0cigwLGkpKSxlW2J0XT1NKHQuc3Vic3RyKGkpKSx2KG4pLmJpZ0hvdXI9ITB9KSxjdChcImhtbXNzXCIsZnVuY3Rpb24odCxlLG4pe3ZhciBpPXQubGVuZ3RoLTQsYT10Lmxlbmd0aC0yO2VbdnRdPU0odC5zdWJzdHIoMCxpKSksZVtidF09TSh0LnN1YnN0cihpLDIpKSxlW3l0XT1NKHQuc3Vic3RyKGEpKSx2KG4pLmJpZ0hvdXI9ITB9KSxjdChcIkhtbVwiLGZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10Lmxlbmd0aC0yO2VbdnRdPU0odC5zdWJzdHIoMCxpKSksZVtidF09TSh0LnN1YnN0cihpKSl9KSxjdChcIkhtbXNzXCIsZnVuY3Rpb24odCxlLG4pe3ZhciBpPXQubGVuZ3RoLTQsYT10Lmxlbmd0aC0yO2VbdnRdPU0odC5zdWJzdHIoMCxpKSksZVtidF09TSh0LnN1YnN0cihpLDIpKSxlW3l0XT1NKHQuc3Vic3RyKGEpKX0pO3ZhciB0ZSxlZT1DdChcIkhvdXJzXCIsITApLG5lPXtjYWxlbmRhcjp7c2FtZURheTpcIltUb2RheSBhdF0gTFRcIixuZXh0RGF5OlwiW1RvbW9ycm93IGF0XSBMVFwiLG5leHRXZWVrOlwiZGRkZCBbYXRdIExUXCIsbGFzdERheTpcIltZZXN0ZXJkYXkgYXRdIExUXCIsbGFzdFdlZWs6XCJbTGFzdF0gZGRkZCBbYXRdIExUXCIsc2FtZUVsc2U6XCJMXCJ9LGxvbmdEYXRlRm9ybWF0OntMVFM6XCJoOm1tOnNzIEFcIixMVDpcImg6bW0gQVwiLEw6XCJNTS9ERC9ZWVlZXCIsTEw6XCJNTU1NIEQsIFlZWVlcIixMTEw6XCJNTU1NIEQsIFlZWVkgaDptbSBBXCIsTExMTDpcImRkZGQsIE1NTU0gRCwgWVlZWSBoOm1tIEFcIn0saW52YWxpZERhdGU6XCJJbnZhbGlkIGRhdGVcIixvcmRpbmFsOlwiJWRcIixkYXlPZk1vbnRoT3JkaW5hbFBhcnNlOi9cXGR7MSwyfS8scmVsYXRpdmVUaW1lOntmdXR1cmU6XCJpbiAlc1wiLHBhc3Q6XCIlcyBhZ29cIixzOlwiYSBmZXcgc2Vjb25kc1wiLHNzOlwiJWQgc2Vjb25kc1wiLG06XCJhIG1pbnV0ZVwiLG1tOlwiJWQgbWludXRlc1wiLGg6XCJhbiBob3VyXCIsaGg6XCIlZCBob3Vyc1wiLGQ6XCJhIGRheVwiLGRkOlwiJWQgZGF5c1wiLE06XCJhIG1vbnRoXCIsTU06XCIlZCBtb250aHNcIix5OlwiYSB5ZWFyXCIseXk6XCIlZCB5ZWFyc1wifSxtb250aHM6QXQsbW9udGhzU2hvcnQ6RnQsd2Vlazp7ZG93OjAsZG95OjZ9LHdlZWtkYXlzOmp0LHdlZWtkYXlzTWluOkd0LHdlZWtkYXlzU2hvcnQ6VXQsbWVyaWRpZW1QYXJzZTovW2FwXVxcLj9tP1xcLj8vaX0saWU9e30sYWU9e307ZnVuY3Rpb24gcmUodCl7cmV0dXJuIHQ/dC50b0xvd2VyQ2FzZSgpLnJlcGxhY2UoXCJfXCIsXCItXCIpOnR9ZnVuY3Rpb24gb2UodCl7dmFyIGU9bnVsbDtpZighaWVbdF0mJnZvaWQgMCE9PWpuJiZqbiYmam4uZXhwb3J0cyl0cnl7ZT10ZS5fYWJicixFbihcIi4vbG9jYWxlL1wiK3QpLHNlKGUpfWNhdGNoKHQpe31yZXR1cm4gaWVbdF19ZnVuY3Rpb24gc2UodCxlKXt2YXIgbjtyZXR1cm4gdCYmKChuPXUoZSk/dWUodCk6bGUodCxlKSk/dGU9bjpcInVuZGVmaW5lZFwiIT10eXBlb2YgY29uc29sZSYmY29uc29sZS53YXJuJiZjb25zb2xlLndhcm4oXCJMb2NhbGUgXCIrdCtcIiBub3QgZm91bmQuIERpZCB5b3UgZm9yZ2V0IHRvIGxvYWQgaXQ/XCIpKSx0ZS5fYWJicn1mdW5jdGlvbiBsZSh0LGUpe2lmKG51bGw9PT1lKXJldHVybiBkZWxldGUgaWVbdF0sbnVsbDt2YXIgbixpPW5lO2lmKGUuYWJicj10LG51bGwhPWllW3RdKUMoXCJkZWZpbmVMb2NhbGVPdmVycmlkZVwiLFwidXNlIG1vbWVudC51cGRhdGVMb2NhbGUobG9jYWxlTmFtZSwgY29uZmlnKSB0byBjaGFuZ2UgYW4gZXhpc3RpbmcgbG9jYWxlLiBtb21lbnQuZGVmaW5lTG9jYWxlKGxvY2FsZU5hbWUsIGNvbmZpZykgc2hvdWxkIG9ubHkgYmUgdXNlZCBmb3IgY3JlYXRpbmcgYSBuZXcgbG9jYWxlIFNlZSBodHRwOi8vbW9tZW50anMuY29tL2d1aWRlcy8jL3dhcm5pbmdzL2RlZmluZS1sb2NhbGUvIGZvciBtb3JlIGluZm8uXCIpLGk9aWVbdF0uX2NvbmZpZztlbHNlIGlmKG51bGwhPWUucGFyZW50TG9jYWxlKWlmKG51bGwhPWllW2UucGFyZW50TG9jYWxlXSlpPWllW2UucGFyZW50TG9jYWxlXS5fY29uZmlnO2Vsc2V7aWYobnVsbD09KG49b2UoZS5wYXJlbnRMb2NhbGUpKSlyZXR1cm4gYWVbZS5wYXJlbnRMb2NhbGVdfHwoYWVbZS5wYXJlbnRMb2NhbGVdPVtdKSxhZVtlLnBhcmVudExvY2FsZV0ucHVzaCh7bmFtZTp0LGNvbmZpZzplfSksbnVsbDtpPW4uX2NvbmZpZ31yZXR1cm4gaWVbdF09bmV3IE8oVChpLGUpKSxhZVt0XSYmYWVbdF0uZm9yRWFjaChmdW5jdGlvbih0KXtsZSh0Lm5hbWUsdC5jb25maWcpfSksc2UodCksaWVbdF19ZnVuY3Rpb24gdWUodCl7dmFyIGU7aWYodCYmdC5fbG9jYWxlJiZ0Ll9sb2NhbGUuX2FiYnImJih0PXQuX2xvY2FsZS5fYWJiciksIXQpcmV0dXJuIHRlO2lmKCFzKHQpKXtpZihlPW9lKHQpKXJldHVybiBlO3Q9W3RdfXJldHVybiBmdW5jdGlvbih0KXtmb3IodmFyIGUsbixpLGEscj0wO3I8dC5sZW5ndGg7KXtmb3IoZT0oYT1yZSh0W3JdKS5zcGxpdChcIi1cIikpLmxlbmd0aCxuPShuPXJlKHRbcisxXSkpP24uc3BsaXQoXCItXCIpOm51bGw7MDxlOyl7aWYoaT1vZShhLnNsaWNlKDAsZSkuam9pbihcIi1cIikpKXJldHVybiBpO2lmKG4mJm4ubGVuZ3RoPj1lJiZvKGEsbiwhMCk+PWUtMSlicmVhaztlLS19cisrfXJldHVybiB0ZX0odCl9ZnVuY3Rpb24gZGUodCl7dmFyIGUsbj10Ll9hO3JldHVybiBuJiYtMj09PXYodCkub3ZlcmZsb3cmJihlPW5bbXRdPDB8fDExPG5bbXRdP210Om5bcHRdPDF8fG5bcHRdPk90KG5bZ3RdLG5bbXRdKT9wdDpuW3Z0XTwwfHwyNDxuW3Z0XXx8MjQ9PT1uW3Z0XSYmKDAhPT1uW2J0XXx8MCE9PW5beXRdfHwwIT09blt4dF0pP3Z0Om5bYnRdPDB8fDU5PG5bYnRdP2J0Om5beXRdPDB8fDU5PG5beXRdP3l0Om5beHRdPDB8fDk5OTxuW3h0XT94dDotMSx2KHQpLl9vdmVyZmxvd0RheU9mWWVhciYmKGU8Z3R8fHB0PGUpJiYoZT1wdCksdih0KS5fb3ZlcmZsb3dXZWVrcyYmLTE9PT1lJiYoZT1fdCksdih0KS5fb3ZlcmZsb3dXZWVrZGF5JiYtMT09PWUmJihlPWt0KSx2KHQpLm92ZXJmbG93PWUpLHR9ZnVuY3Rpb24gaGUodCxlLG4pe3JldHVybiBudWxsIT10P3Q6bnVsbCE9ZT9lOm59ZnVuY3Rpb24gY2UodCl7dmFyIGUsbixpLGEscixvPVtdO2lmKCF0Ll9kKXt2YXIgcyxsO2ZvcihzPXQsbD1uZXcgRGF0ZShjLm5vdygpKSxpPXMuX3VzZVVUQz9bbC5nZXRVVENGdWxsWWVhcigpLGwuZ2V0VVRDTW9udGgoKSxsLmdldFVUQ0RhdGUoKV06W2wuZ2V0RnVsbFllYXIoKSxsLmdldE1vbnRoKCksbC5nZXREYXRlKCldLHQuX3cmJm51bGw9PXQuX2FbcHRdJiZudWxsPT10Ll9hW210XSYmZnVuY3Rpb24odCl7dmFyIGUsbixpLGEscixvLHMsbDtpZihudWxsIT0oZT10Ll93KS5HR3x8bnVsbCE9ZS5XfHxudWxsIT1lLkUpcj0xLG89NCxuPWhlKGUuR0csdC5fYVtndF0sQnQoQ2UoKSwxLDQpLnllYXIpLGk9aGUoZS5XLDEpLCgoYT1oZShlLkUsMSkpPDF8fDc8YSkmJihsPSEwKTtlbHNle3I9dC5fbG9jYWxlLl93ZWVrLmRvdyxvPXQuX2xvY2FsZS5fd2Vlay5kb3k7dmFyIHU9QnQoQ2UoKSxyLG8pO249aGUoZS5nZyx0Ll9hW2d0XSx1LnllYXIpLGk9aGUoZS53LHUud2VlayksbnVsbCE9ZS5kPygoYT1lLmQpPDB8fDY8YSkmJihsPSEwKTpudWxsIT1lLmU/KGE9ZS5lK3IsKGUuZTwwfHw2PGUuZSkmJihsPSEwKSk6YT1yfWk8MXx8aT5FdChuLHIsbyk/dih0KS5fb3ZlcmZsb3dXZWVrcz0hMDpudWxsIT1sP3YodCkuX292ZXJmbG93V2Vla2RheT0hMDoocz1IdChuLGksYSxyLG8pLHQuX2FbZ3RdPXMueWVhcix0Ll9kYXlPZlllYXI9cy5kYXlPZlllYXIpfSh0KSxudWxsIT10Ll9kYXlPZlllYXImJihyPWhlKHQuX2FbZ3RdLGlbZ3RdKSwodC5fZGF5T2ZZZWFyPnd0KHIpfHwwPT09dC5fZGF5T2ZZZWFyKSYmKHYodCkuX292ZXJmbG93RGF5T2ZZZWFyPSEwKSxuPXp0KHIsMCx0Ll9kYXlPZlllYXIpLHQuX2FbbXRdPW4uZ2V0VVRDTW9udGgoKSx0Ll9hW3B0XT1uLmdldFVUQ0RhdGUoKSksZT0wO2U8MyYmbnVsbD09dC5fYVtlXTsrK2UpdC5fYVtlXT1vW2VdPWlbZV07Zm9yKDtlPDc7ZSsrKXQuX2FbZV09b1tlXT1udWxsPT10Ll9hW2VdPzI9PT1lPzE6MDp0Ll9hW2VdOzI0PT09dC5fYVt2dF0mJjA9PT10Ll9hW2J0XSYmMD09PXQuX2FbeXRdJiYwPT09dC5fYVt4dF0mJih0Ll9uZXh0RGF5PSEwLHQuX2FbdnRdPTApLHQuX2Q9KHQuX3VzZVVUQz96dDpmdW5jdGlvbih0LGUsbixpLGEscixvKXt2YXIgcz1uZXcgRGF0ZSh0LGUsbixpLGEscixvKTtyZXR1cm4gdDwxMDAmJjA8PXQmJmlzRmluaXRlKHMuZ2V0RnVsbFllYXIoKSkmJnMuc2V0RnVsbFllYXIodCksc30pLmFwcGx5KG51bGwsbyksYT10Ll91c2VVVEM/dC5fZC5nZXRVVENEYXkoKTp0Ll9kLmdldERheSgpLG51bGwhPXQuX3R6bSYmdC5fZC5zZXRVVENNaW51dGVzKHQuX2QuZ2V0VVRDTWludXRlcygpLXQuX3R6bSksdC5fbmV4dERheSYmKHQuX2FbdnRdPTI0KSx0Ll93JiZ2b2lkIDAhPT10Ll93LmQmJnQuX3cuZCE9PWEmJih2KHQpLndlZWtkYXlNaXNtYXRjaD0hMCl9fXZhciBmZT0vXlxccyooKD86WystXVxcZHs2fXxcXGR7NH0pLSg/OlxcZFxcZC1cXGRcXGR8V1xcZFxcZC1cXGR8V1xcZFxcZHxcXGRcXGRcXGR8XFxkXFxkKSkoPzooVHwgKShcXGRcXGQoPzo6XFxkXFxkKD86OlxcZFxcZCg/OlsuLF1cXGQrKT8pPyk/KShbXFwrXFwtXVxcZFxcZCg/Ojo/XFxkXFxkKT98XFxzKlopPyk/JC8sZ2U9L15cXHMqKCg/OlsrLV1cXGR7Nn18XFxkezR9KSg/OlxcZFxcZFxcZFxcZHxXXFxkXFxkXFxkfFdcXGRcXGR8XFxkXFxkXFxkfFxcZFxcZCkpKD86KFR8ICkoXFxkXFxkKD86XFxkXFxkKD86XFxkXFxkKD86Wy4sXVxcZCspPyk/KT8pKFtcXCtcXC1dXFxkXFxkKD86Oj9cXGRcXGQpP3xcXHMqWik/KT8kLyxtZT0vWnxbKy1dXFxkXFxkKD86Oj9cXGRcXGQpPy8scGU9W1tcIllZWVlZWS1NTS1ERFwiLC9bKy1dXFxkezZ9LVxcZFxcZC1cXGRcXGQvXSxbXCJZWVlZLU1NLUREXCIsL1xcZHs0fS1cXGRcXGQtXFxkXFxkL10sW1wiR0dHRy1bV11XVy1FXCIsL1xcZHs0fS1XXFxkXFxkLVxcZC9dLFtcIkdHR0ctW1ddV1dcIiwvXFxkezR9LVdcXGRcXGQvLCExXSxbXCJZWVlZLURERFwiLC9cXGR7NH0tXFxkezN9L10sW1wiWVlZWS1NTVwiLC9cXGR7NH0tXFxkXFxkLywhMV0sW1wiWVlZWVlZTU1ERFwiLC9bKy1dXFxkezEwfS9dLFtcIllZWVlNTUREXCIsL1xcZHs4fS9dLFtcIkdHR0dbV11XV0VcIiwvXFxkezR9V1xcZHszfS9dLFtcIkdHR0dbV11XV1wiLC9cXGR7NH1XXFxkezJ9LywhMV0sW1wiWVlZWURERFwiLC9cXGR7N30vXV0sdmU9W1tcIkhIOm1tOnNzLlNTU1NcIiwvXFxkXFxkOlxcZFxcZDpcXGRcXGRcXC5cXGQrL10sW1wiSEg6bW06c3MsU1NTU1wiLC9cXGRcXGQ6XFxkXFxkOlxcZFxcZCxcXGQrL10sW1wiSEg6bW06c3NcIiwvXFxkXFxkOlxcZFxcZDpcXGRcXGQvXSxbXCJISDptbVwiLC9cXGRcXGQ6XFxkXFxkL10sW1wiSEhtbXNzLlNTU1NcIiwvXFxkXFxkXFxkXFxkXFxkXFxkXFwuXFxkKy9dLFtcIkhIbW1zcyxTU1NTXCIsL1xcZFxcZFxcZFxcZFxcZFxcZCxcXGQrL10sW1wiSEhtbXNzXCIsL1xcZFxcZFxcZFxcZFxcZFxcZC9dLFtcIkhIbW1cIiwvXFxkXFxkXFxkXFxkL10sW1wiSEhcIiwvXFxkXFxkL11dLGJlPS9eXFwvP0RhdGVcXCgoXFwtP1xcZCspL2k7ZnVuY3Rpb24geWUodCl7dmFyIGUsbixpLGEscixvLHM9dC5faSxsPWZlLmV4ZWMocyl8fGdlLmV4ZWMocyk7aWYobCl7Zm9yKHYodCkuaXNvPSEwLGU9MCxuPXBlLmxlbmd0aDtlPG47ZSsrKWlmKHBlW2VdWzFdLmV4ZWMobFsxXSkpe2E9cGVbZV1bMF0saT0hMSE9PXBlW2VdWzJdO2JyZWFrfWlmKG51bGw9PWEpcmV0dXJuIHZvaWQodC5faXNWYWxpZD0hMSk7aWYobFszXSl7Zm9yKGU9MCxuPXZlLmxlbmd0aDtlPG47ZSsrKWlmKHZlW2VdWzFdLmV4ZWMobFszXSkpe3I9KGxbMl18fFwiIFwiKSt2ZVtlXVswXTticmVha31pZihudWxsPT1yKXJldHVybiB2b2lkKHQuX2lzVmFsaWQ9ITEpfWlmKCFpJiZudWxsIT1yKXJldHVybiB2b2lkKHQuX2lzVmFsaWQ9ITEpO2lmKGxbNF0pe2lmKCFtZS5leGVjKGxbNF0pKXJldHVybiB2b2lkKHQuX2lzVmFsaWQ9ITEpO289XCJaXCJ9dC5fZj1hKyhyfHxcIlwiKSsob3x8XCJcIiksTWUodCl9ZWxzZSB0Ll9pc1ZhbGlkPSExfXZhciB4ZT0vXig/OihNb258VHVlfFdlZHxUaHV8RnJpfFNhdHxTdW4pLD9cXHMpPyhcXGR7MSwyfSlcXHMoSmFufEZlYnxNYXJ8QXByfE1heXxKdW58SnVsfEF1Z3xTZXB8T2N0fE5vdnxEZWMpXFxzKFxcZHsyLDR9KVxccyhcXGRcXGQpOihcXGRcXGQpKD86OihcXGRcXGQpKT9cXHMoPzooVVR8R01UfFtFQ01QXVtTRF1UKXwoW1p6XSl8KFsrLV1cXGR7NH0pKSQvO2Z1bmN0aW9uIF9lKHQsZSxuLGksYSxyKXt2YXIgbz1bZnVuY3Rpb24odCl7dmFyIGU9cGFyc2VJbnQodCwxMCk7e2lmKGU8PTQ5KXJldHVybiAyZTMrZTtpZihlPD05OTkpcmV0dXJuIDE5MDArZX1yZXR1cm4gZX0odCksRnQuaW5kZXhPZihlKSxwYXJzZUludChuLDEwKSxwYXJzZUludChpLDEwKSxwYXJzZUludChhLDEwKV07cmV0dXJuIHImJm8ucHVzaChwYXJzZUludChyLDEwKSksb312YXIga2U9e1VUOjAsR01UOjAsRURUOi0yNDAsRVNUOi0zMDAsQ0RUOi0zMDAsQ1NUOi0zNjAsTURUOi0zNjAsTVNUOi00MjAsUERUOi00MjAsUFNUOi00ODB9O2Z1bmN0aW9uIHdlKHQpe3ZhciBlLG4saSxhPXhlLmV4ZWModC5faS5yZXBsYWNlKC9cXChbXildKlxcKXxbXFxuXFx0XS9nLFwiIFwiKS5yZXBsYWNlKC8oXFxzXFxzKykvZyxcIiBcIikucmVwbGFjZSgvXlxcc1xccyovLFwiXCIpLnJlcGxhY2UoL1xcc1xccyokLyxcIlwiKSk7aWYoYSl7dmFyIHI9X2UoYVs0XSxhWzNdLGFbMl0sYVs1XSxhWzZdLGFbN10pO2lmKGU9YVsxXSxuPXIsaT10LGUmJlV0LmluZGV4T2YoZSkhPT1uZXcgRGF0ZShuWzBdLG5bMV0sblsyXSkuZ2V0RGF5KCkmJih2KGkpLndlZWtkYXlNaXNtYXRjaD0hMCwhKGkuX2lzVmFsaWQ9ITEpKSlyZXR1cm47dC5fYT1yLHQuX3R6bT1mdW5jdGlvbih0LGUsbil7aWYodClyZXR1cm4ga2VbdF07aWYoZSlyZXR1cm4gMDt2YXIgaT1wYXJzZUludChuLDEwKSxhPWklMTAwO3JldHVybihpLWEpLzEwMCo2MCthfShhWzhdLGFbOV0sYVsxMF0pLHQuX2Q9enQuYXBwbHkobnVsbCx0Ll9hKSx0Ll9kLnNldFVUQ01pbnV0ZXModC5fZC5nZXRVVENNaW51dGVzKCktdC5fdHptKSx2KHQpLnJmYzI4MjI9ITB9ZWxzZSB0Ll9pc1ZhbGlkPSExfWZ1bmN0aW9uIE1lKHQpe2lmKHQuX2YhPT1jLklTT184NjAxKWlmKHQuX2YhPT1jLlJGQ18yODIyKXt0Ll9hPVtdLHYodCkuZW1wdHk9ITA7dmFyIGUsbixpLGEscixvLHMsbCx1PVwiXCIrdC5faSxkPXUubGVuZ3RoLGg9MDtmb3IoaT1qKHQuX2YsdC5fbG9jYWxlKS5tYXRjaChOKXx8W10sZT0wO2U8aS5sZW5ndGg7ZSsrKWE9aVtlXSwobj0odS5tYXRjaCh1dChhLHQpKXx8W10pWzBdKSYmKDA8KHI9dS5zdWJzdHIoMCx1LmluZGV4T2YobikpKS5sZW5ndGgmJnYodCkudW51c2VkSW5wdXQucHVzaChyKSx1PXUuc2xpY2UodS5pbmRleE9mKG4pK24ubGVuZ3RoKSxoKz1uLmxlbmd0aCksSFthXT8obj92KHQpLmVtcHR5PSExOnYodCkudW51c2VkVG9rZW5zLnB1c2goYSksbz1hLGw9dCxudWxsIT0ocz1uKSYmZyhodCxvKSYmaHRbb10ocyxsLl9hLGwsbykpOnQuX3N0cmljdCYmIW4mJnYodCkudW51c2VkVG9rZW5zLnB1c2goYSk7dih0KS5jaGFyc0xlZnRPdmVyPWQtaCwwPHUubGVuZ3RoJiZ2KHQpLnVudXNlZElucHV0LnB1c2godSksdC5fYVt2dF08PTEyJiYhMD09PXYodCkuYmlnSG91ciYmMDx0Ll9hW3Z0XSYmKHYodCkuYmlnSG91cj12b2lkIDApLHYodCkucGFyc2VkRGF0ZVBhcnRzPXQuX2Euc2xpY2UoMCksdih0KS5tZXJpZGllbT10Ll9tZXJpZGllbSx0Ll9hW3Z0XT1mdW5jdGlvbih0LGUsbil7dmFyIGk7aWYobnVsbD09bilyZXR1cm4gZTtyZXR1cm4gbnVsbCE9dC5tZXJpZGllbUhvdXI/dC5tZXJpZGllbUhvdXIoZSxuKToobnVsbCE9dC5pc1BNJiYoKGk9dC5pc1BNKG4pKSYmZTwxMiYmKGUrPTEyKSxpfHwxMiE9PWV8fChlPTApKSxlKX0odC5fbG9jYWxlLHQuX2FbdnRdLHQuX21lcmlkaWVtKSxjZSh0KSxkZSh0KX1lbHNlIHdlKHQpO2Vsc2UgeWUodCl9ZnVuY3Rpb24gU2UodCl7dmFyIGUsbixpLGEscj10Ll9pLG89dC5fZjtyZXR1cm4gdC5fbG9jYWxlPXQuX2xvY2FsZXx8dWUodC5fbCksbnVsbD09PXJ8fHZvaWQgMD09PW8mJlwiXCI9PT1yP3koe251bGxJbnB1dDohMH0pOihcInN0cmluZ1wiPT10eXBlb2YgciYmKHQuX2k9cj10Ll9sb2NhbGUucHJlcGFyc2UocikpLGsocik/bmV3IF8oZGUocikpOihoKHIpP3QuX2Q9cjpzKG8pP2Z1bmN0aW9uKHQpe3ZhciBlLG4saSxhLHI7aWYoMD09PXQuX2YubGVuZ3RoKXJldHVybiB2KHQpLmludmFsaWRGb3JtYXQ9ITAsdC5fZD1uZXcgRGF0ZShOYU4pO2ZvcihhPTA7YTx0Ll9mLmxlbmd0aDthKyspcj0wLGU9eCh7fSx0KSxudWxsIT10Ll91c2VVVEMmJihlLl91c2VVVEM9dC5fdXNlVVRDKSxlLl9mPXQuX2ZbYV0sTWUoZSksYihlKSYmKHIrPXYoZSkuY2hhcnNMZWZ0T3ZlcixyKz0xMCp2KGUpLnVudXNlZFRva2Vucy5sZW5ndGgsdihlKS5zY29yZT1yLChudWxsPT1pfHxyPGkpJiYoaT1yLG49ZSkpO20odCxufHxlKX0odCk6bz9NZSh0KTp1KG49KGU9dCkuX2kpP2UuX2Q9bmV3IERhdGUoYy5ub3coKSk6aChuKT9lLl9kPW5ldyBEYXRlKG4udmFsdWVPZigpKTpcInN0cmluZ1wiPT10eXBlb2Ygbj8oaT1lLG51bGw9PT0oYT1iZS5leGVjKGkuX2kpKT8oeWUoaSksITE9PT1pLl9pc1ZhbGlkJiYoZGVsZXRlIGkuX2lzVmFsaWQsd2UoaSksITE9PT1pLl9pc1ZhbGlkJiYoZGVsZXRlIGkuX2lzVmFsaWQsYy5jcmVhdGVGcm9tSW5wdXRGYWxsYmFjayhpKSkpKTppLl9kPW5ldyBEYXRlKCthWzFdKSk6cyhuKT8oZS5fYT1mKG4uc2xpY2UoMCksZnVuY3Rpb24odCl7cmV0dXJuIHBhcnNlSW50KHQsMTApfSksY2UoZSkpOmwobik/ZnVuY3Rpb24odCl7aWYoIXQuX2Qpe3ZhciBlPVIodC5faSk7dC5fYT1mKFtlLnllYXIsZS5tb250aCxlLmRheXx8ZS5kYXRlLGUuaG91cixlLm1pbnV0ZSxlLnNlY29uZCxlLm1pbGxpc2Vjb25kXSxmdW5jdGlvbih0KXtyZXR1cm4gdCYmcGFyc2VJbnQodCwxMCl9KSxjZSh0KX19KGUpOmQobik/ZS5fZD1uZXcgRGF0ZShuKTpjLmNyZWF0ZUZyb21JbnB1dEZhbGxiYWNrKGUpLGIodCl8fCh0Ll9kPW51bGwpLHQpKX1mdW5jdGlvbiBEZSh0LGUsbixpLGEpe3ZhciByLG89e307cmV0dXJuITAhPT1uJiYhMSE9PW58fChpPW4sbj12b2lkIDApLChsKHQpJiZmdW5jdGlvbih0KXtpZihPYmplY3QuZ2V0T3duUHJvcGVydHlOYW1lcylyZXR1cm4gMD09PU9iamVjdC5nZXRPd25Qcm9wZXJ0eU5hbWVzKHQpLmxlbmd0aDt2YXIgZTtmb3IoZSBpbiB0KWlmKHQuaGFzT3duUHJvcGVydHkoZSkpcmV0dXJuITE7cmV0dXJuITB9KHQpfHxzKHQpJiYwPT09dC5sZW5ndGgpJiYodD12b2lkIDApLG8uX2lzQU1vbWVudE9iamVjdD0hMCxvLl91c2VVVEM9by5faXNVVEM9YSxvLl9sPW4sby5faT10LG8uX2Y9ZSxvLl9zdHJpY3Q9aSwocj1uZXcgXyhkZShTZShvKSkpKS5fbmV4dERheSYmKHIuYWRkKDEsXCJkXCIpLHIuX25leHREYXk9dm9pZCAwKSxyfWZ1bmN0aW9uIENlKHQsZSxuLGkpe3JldHVybiBEZSh0LGUsbixpLCExKX1jLmNyZWF0ZUZyb21JbnB1dEZhbGxiYWNrPW4oXCJ2YWx1ZSBwcm92aWRlZCBpcyBub3QgaW4gYSByZWNvZ25pemVkIFJGQzI4MjIgb3IgSVNPIGZvcm1hdC4gbW9tZW50IGNvbnN0cnVjdGlvbiBmYWxscyBiYWNrIHRvIGpzIERhdGUoKSwgd2hpY2ggaXMgbm90IHJlbGlhYmxlIGFjcm9zcyBhbGwgYnJvd3NlcnMgYW5kIHZlcnNpb25zLiBOb24gUkZDMjgyMi9JU08gZGF0ZSBmb3JtYXRzIGFyZSBkaXNjb3VyYWdlZCBhbmQgd2lsbCBiZSByZW1vdmVkIGluIGFuIHVwY29taW5nIG1ham9yIHJlbGVhc2UuIFBsZWFzZSByZWZlciB0byBodHRwOi8vbW9tZW50anMuY29tL2d1aWRlcy8jL3dhcm5pbmdzL2pzLWRhdGUvIGZvciBtb3JlIGluZm8uXCIsZnVuY3Rpb24odCl7dC5fZD1uZXcgRGF0ZSh0Ll9pKyh0Ll91c2VVVEM/XCIgVVRDXCI6XCJcIikpfSksYy5JU09fODYwMT1mdW5jdGlvbigpe30sYy5SRkNfMjgyMj1mdW5jdGlvbigpe307dmFyIFBlPW4oXCJtb21lbnQoKS5taW4gaXMgZGVwcmVjYXRlZCwgdXNlIG1vbWVudC5tYXggaW5zdGVhZC4gaHR0cDovL21vbWVudGpzLmNvbS9ndWlkZXMvIy93YXJuaW5ncy9taW4tbWF4L1wiLGZ1bmN0aW9uKCl7dmFyIHQ9Q2UuYXBwbHkobnVsbCxhcmd1bWVudHMpO3JldHVybiB0aGlzLmlzVmFsaWQoKSYmdC5pc1ZhbGlkKCk/dDx0aGlzP3RoaXM6dDp5KCl9KSxUZT1uKFwibW9tZW50KCkubWF4IGlzIGRlcHJlY2F0ZWQsIHVzZSBtb21lbnQubWluIGluc3RlYWQuIGh0dHA6Ly9tb21lbnRqcy5jb20vZ3VpZGVzLyMvd2FybmluZ3MvbWluLW1heC9cIixmdW5jdGlvbigpe3ZhciB0PUNlLmFwcGx5KG51bGwsYXJndW1lbnRzKTtyZXR1cm4gdGhpcy5pc1ZhbGlkKCkmJnQuaXNWYWxpZCgpP3RoaXM8dD90aGlzOnQ6eSgpfSk7ZnVuY3Rpb24gT2UodCxlKXt2YXIgbixpO2lmKDE9PT1lLmxlbmd0aCYmcyhlWzBdKSYmKGU9ZVswXSksIWUubGVuZ3RoKXJldHVybiBDZSgpO2ZvcihuPWVbMF0saT0xO2k8ZS5sZW5ndGg7KytpKWVbaV0uaXNWYWxpZCgpJiYhZVtpXVt0XShuKXx8KG49ZVtpXSk7cmV0dXJuIG59dmFyIEllPVtcInllYXJcIixcInF1YXJ0ZXJcIixcIm1vbnRoXCIsXCJ3ZWVrXCIsXCJkYXlcIixcImhvdXJcIixcIm1pbnV0ZVwiLFwic2Vjb25kXCIsXCJtaWxsaXNlY29uZFwiXTtmdW5jdGlvbiBBZSh0KXt2YXIgZT1SKHQpLG49ZS55ZWFyfHwwLGk9ZS5xdWFydGVyfHwwLGE9ZS5tb250aHx8MCxyPWUud2Vla3x8MCxvPWUuZGF5fHwwLHM9ZS5ob3VyfHwwLGw9ZS5taW51dGV8fDAsdT1lLnNlY29uZHx8MCxkPWUubWlsbGlzZWNvbmR8fDA7dGhpcy5faXNWYWxpZD1mdW5jdGlvbih0KXtmb3IodmFyIGUgaW4gdClpZigtMT09PVN0LmNhbGwoSWUsZSl8fG51bGwhPXRbZV0mJmlzTmFOKHRbZV0pKXJldHVybiExO2Zvcih2YXIgbj0hMSxpPTA7aTxJZS5sZW5ndGg7KytpKWlmKHRbSWVbaV1dKXtpZihuKXJldHVybiExO3BhcnNlRmxvYXQodFtJZVtpXV0pIT09TSh0W0llW2ldXSkmJihuPSEwKX1yZXR1cm4hMH0oZSksdGhpcy5fbWlsbGlzZWNvbmRzPStkKzFlMyp1KzZlNCpsKzFlMypzKjYwKjYwLHRoaXMuX2RheXM9K28rNypyLHRoaXMuX21vbnRocz0rYSszKmkrMTIqbix0aGlzLl9kYXRhPXt9LHRoaXMuX2xvY2FsZT11ZSgpLHRoaXMuX2J1YmJsZSgpfWZ1bmN0aW9uIEZlKHQpe3JldHVybiB0IGluc3RhbmNlb2YgQWV9ZnVuY3Rpb24gUmUodCl7cmV0dXJuIHQ8MD8tMSpNYXRoLnJvdW5kKC0xKnQpOk1hdGgucm91bmQodCl9ZnVuY3Rpb24gTGUodCxuKXtCKHQsMCwwLGZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy51dGNPZmZzZXQoKSxlPVwiK1wiO3JldHVybiB0PDAmJih0PS10LGU9XCItXCIpLGUrVyh+fih0LzYwKSwyKStuK1cofn50JTYwLDIpfSl9TGUoXCJaXCIsXCI6XCIpLExlKFwiWlpcIixcIlwiKSxsdChcIlpcIixydCksbHQoXCJaWlwiLHJ0KSxjdChbXCJaXCIsXCJaWlwiXSxmdW5jdGlvbih0LGUsbil7bi5fdXNlVVRDPSEwLG4uX3R6bT1XZShydCx0KX0pO3ZhciBZZT0vKFtcXCtcXC1dfFxcZFxcZCkvZ2k7ZnVuY3Rpb24gV2UodCxlKXt2YXIgbj0oZXx8XCJcIikubWF0Y2godCk7aWYobnVsbD09PW4pcmV0dXJuIG51bGw7dmFyIGk9KChuW24ubGVuZ3RoLTFdfHxbXSkrXCJcIikubWF0Y2goWWUpfHxbXCItXCIsMCwwXSxhPTYwKmlbMV0rTShpWzJdKTtyZXR1cm4gMD09PWE/MDpcIitcIj09PWlbMF0/YTotYX1mdW5jdGlvbiBOZSh0LGUpe3ZhciBuLGk7cmV0dXJuIGUuX2lzVVRDPyhuPWUuY2xvbmUoKSxpPShrKHQpfHxoKHQpP3QudmFsdWVPZigpOkNlKHQpLnZhbHVlT2YoKSktbi52YWx1ZU9mKCksbi5fZC5zZXRUaW1lKG4uX2QudmFsdWVPZigpK2kpLGMudXBkYXRlT2Zmc2V0KG4sITEpLG4pOkNlKHQpLmxvY2FsKCl9ZnVuY3Rpb24gemUodCl7cmV0dXJuIDE1Ki1NYXRoLnJvdW5kKHQuX2QuZ2V0VGltZXpvbmVPZmZzZXQoKS8xNSl9ZnVuY3Rpb24gVmUoKXtyZXR1cm4hIXRoaXMuaXNWYWxpZCgpJiYodGhpcy5faXNVVEMmJjA9PT10aGlzLl9vZmZzZXQpfWMudXBkYXRlT2Zmc2V0PWZ1bmN0aW9uKCl7fTt2YXIgSGU9L14oXFwtfFxcKyk/KD86KFxcZCopWy4gXSk/KFxcZCspXFw6KFxcZCspKD86XFw6KFxcZCspKFxcLlxcZCopPyk/JC8sQmU9L14oLXxcXCspP1AoPzooWy0rXT9bMC05LC5dKilZKT8oPzooWy0rXT9bMC05LC5dKilNKT8oPzooWy0rXT9bMC05LC5dKilXKT8oPzooWy0rXT9bMC05LC5dKilEKT8oPzpUKD86KFstK10/WzAtOSwuXSopSCk/KD86KFstK10/WzAtOSwuXSopTSk/KD86KFstK10/WzAtOSwuXSopUyk/KT8kLztmdW5jdGlvbiBFZSh0LGUpe3ZhciBuLGksYSxyPXQsbz1udWxsO3JldHVybiBGZSh0KT9yPXttczp0Ll9taWxsaXNlY29uZHMsZDp0Ll9kYXlzLE06dC5fbW9udGhzfTpkKHQpPyhyPXt9LGU/cltlXT10OnIubWlsbGlzZWNvbmRzPXQpOihvPUhlLmV4ZWModCkpPyhuPVwiLVwiPT09b1sxXT8tMToxLHI9e3k6MCxkOk0ob1twdF0pKm4saDpNKG9bdnRdKSpuLG06TShvW2J0XSkqbixzOk0ob1t5dF0pKm4sbXM6TShSZSgxZTMqb1t4dF0pKSpufSk6KG89QmUuZXhlYyh0KSk/KG49XCItXCI9PT1vWzFdPy0xOihvWzFdLDEpLHI9e3k6amUob1syXSxuKSxNOmplKG9bM10sbiksdzpqZShvWzRdLG4pLGQ6amUob1s1XSxuKSxoOmplKG9bNl0sbiksbTpqZShvWzddLG4pLHM6amUob1s4XSxuKX0pOm51bGw9PXI/cj17fTpcIm9iamVjdFwiPT10eXBlb2YgciYmKFwiZnJvbVwiaW4gcnx8XCJ0b1wiaW4gcikmJihhPWZ1bmN0aW9uKHQsZSl7dmFyIG47aWYoIXQuaXNWYWxpZCgpfHwhZS5pc1ZhbGlkKCkpcmV0dXJue21pbGxpc2Vjb25kczowLG1vbnRoczowfTtlPU5lKGUsdCksdC5pc0JlZm9yZShlKT9uPVVlKHQsZSk6KChuPVVlKGUsdCkpLm1pbGxpc2Vjb25kcz0tbi5taWxsaXNlY29uZHMsbi5tb250aHM9LW4ubW9udGhzKTtyZXR1cm4gbn0oQ2Uoci5mcm9tKSxDZShyLnRvKSksKHI9e30pLm1zPWEubWlsbGlzZWNvbmRzLHIuTT1hLm1vbnRocyksaT1uZXcgQWUociksRmUodCkmJmcodCxcIl9sb2NhbGVcIikmJihpLl9sb2NhbGU9dC5fbG9jYWxlKSxpfWZ1bmN0aW9uIGplKHQsZSl7dmFyIG49dCYmcGFyc2VGbG9hdCh0LnJlcGxhY2UoXCIsXCIsXCIuXCIpKTtyZXR1cm4oaXNOYU4obik/MDpuKSplfWZ1bmN0aW9uIFVlKHQsZSl7dmFyIG49e21pbGxpc2Vjb25kczowLG1vbnRoczowfTtyZXR1cm4gbi5tb250aHM9ZS5tb250aCgpLXQubW9udGgoKSsxMiooZS55ZWFyKCktdC55ZWFyKCkpLHQuY2xvbmUoKS5hZGQobi5tb250aHMsXCJNXCIpLmlzQWZ0ZXIoZSkmJi0tbi5tb250aHMsbi5taWxsaXNlY29uZHM9K2UtK3QuY2xvbmUoKS5hZGQobi5tb250aHMsXCJNXCIpLG59ZnVuY3Rpb24gR2UoaSxhKXtyZXR1cm4gZnVuY3Rpb24odCxlKXt2YXIgbjtyZXR1cm4gbnVsbD09PWV8fGlzTmFOKCtlKXx8KEMoYSxcIm1vbWVudCgpLlwiK2ErXCIocGVyaW9kLCBudW1iZXIpIGlzIGRlcHJlY2F0ZWQuIFBsZWFzZSB1c2UgbW9tZW50KCkuXCIrYStcIihudW1iZXIsIHBlcmlvZCkuIFNlZSBodHRwOi8vbW9tZW50anMuY29tL2d1aWRlcy8jL3dhcm5pbmdzL2FkZC1pbnZlcnRlZC1wYXJhbS8gZm9yIG1vcmUgaW5mby5cIiksbj10LHQ9ZSxlPW4pLHFlKHRoaXMsRWUodD1cInN0cmluZ1wiPT10eXBlb2YgdD8rdDp0LGUpLGkpLHRoaXN9fWZ1bmN0aW9uIHFlKHQsZSxuLGkpe3ZhciBhPWUuX21pbGxpc2Vjb25kcyxyPVJlKGUuX2RheXMpLG89UmUoZS5fbW9udGhzKTt0LmlzVmFsaWQoKSYmKGk9bnVsbD09aXx8aSxvJiZSdCh0LFB0KHQsXCJNb250aFwiKStvKm4pLHImJlR0KHQsXCJEYXRlXCIsUHQodCxcIkRhdGVcIikrcipuKSxhJiZ0Ll9kLnNldFRpbWUodC5fZC52YWx1ZU9mKCkrYSpuKSxpJiZjLnVwZGF0ZU9mZnNldCh0LHJ8fG8pKX1FZS5mbj1BZS5wcm90b3R5cGUsRWUuaW52YWxpZD1mdW5jdGlvbigpe3JldHVybiBFZShOYU4pfTt2YXIgWmU9R2UoMSxcImFkZFwiKSxYZT1HZSgtMSxcInN1YnRyYWN0XCIpO2Z1bmN0aW9uIEplKHQsZSl7dmFyIG49MTIqKGUueWVhcigpLXQueWVhcigpKSsoZS5tb250aCgpLXQubW9udGgoKSksaT10LmNsb25lKCkuYWRkKG4sXCJtb250aHNcIik7cmV0dXJuLShuKyhlLWk8MD8oZS1pKS8oaS10LmNsb25lKCkuYWRkKG4tMSxcIm1vbnRoc1wiKSk6KGUtaSkvKHQuY2xvbmUoKS5hZGQobisxLFwibW9udGhzXCIpLWkpKSl8fDB9ZnVuY3Rpb24gJGUodCl7dmFyIGU7cmV0dXJuIHZvaWQgMD09PXQ/dGhpcy5fbG9jYWxlLl9hYmJyOihudWxsIT0oZT11ZSh0KSkmJih0aGlzLl9sb2NhbGU9ZSksdGhpcyl9Yy5kZWZhdWx0Rm9ybWF0PVwiWVlZWS1NTS1ERFRISDptbTpzc1pcIixjLmRlZmF1bHRGb3JtYXRVdGM9XCJZWVlZLU1NLUREVEhIOm1tOnNzW1pdXCI7dmFyIEtlPW4oXCJtb21lbnQoKS5sYW5nKCkgaXMgZGVwcmVjYXRlZC4gSW5zdGVhZCwgdXNlIG1vbWVudCgpLmxvY2FsZURhdGEoKSB0byBnZXQgdGhlIGxhbmd1YWdlIGNvbmZpZ3VyYXRpb24uIFVzZSBtb21lbnQoKS5sb2NhbGUoKSB0byBjaGFuZ2UgbGFuZ3VhZ2VzLlwiLGZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT10P3RoaXMubG9jYWxlRGF0YSgpOnRoaXMubG9jYWxlKHQpfSk7ZnVuY3Rpb24gUWUoKXtyZXR1cm4gdGhpcy5fbG9jYWxlfWZ1bmN0aW9uIHRuKHQsZSl7QigwLFt0LHQubGVuZ3RoXSwwLGUpfWZ1bmN0aW9uIGVuKHQsZSxuLGksYSl7dmFyIHI7cmV0dXJuIG51bGw9PXQ/QnQodGhpcyxpLGEpLnllYXI6KChyPUV0KHQsaSxhKSk8ZSYmKGU9ciksZnVuY3Rpb24odCxlLG4saSxhKXt2YXIgcj1IdCh0LGUsbixpLGEpLG89enQoci55ZWFyLDAsci5kYXlPZlllYXIpO3JldHVybiB0aGlzLnllYXIoby5nZXRVVENGdWxsWWVhcigpKSx0aGlzLm1vbnRoKG8uZ2V0VVRDTW9udGgoKSksdGhpcy5kYXRlKG8uZ2V0VVRDRGF0ZSgpKSx0aGlzfS5jYWxsKHRoaXMsdCxlLG4saSxhKSl9QigwLFtcImdnXCIsMl0sMCxmdW5jdGlvbigpe3JldHVybiB0aGlzLndlZWtZZWFyKCklMTAwfSksQigwLFtcIkdHXCIsMl0sMCxmdW5jdGlvbigpe3JldHVybiB0aGlzLmlzb1dlZWtZZWFyKCklMTAwfSksdG4oXCJnZ2dnXCIsXCJ3ZWVrWWVhclwiKSx0bihcImdnZ2dnXCIsXCJ3ZWVrWWVhclwiKSx0bihcIkdHR0dcIixcImlzb1dlZWtZZWFyXCIpLHRuKFwiR0dHR0dcIixcImlzb1dlZWtZZWFyXCIpLEEoXCJ3ZWVrWWVhclwiLFwiZ2dcIiksQShcImlzb1dlZWtZZWFyXCIsXCJHR1wiKSxZKFwid2Vla1llYXJcIiwxKSxZKFwiaXNvV2Vla1llYXJcIiwxKSxsdChcIkdcIixpdCksbHQoXCJnXCIsaXQpLGx0KFwiR0dcIixKLEcpLGx0KFwiZ2dcIixKLEcpLGx0KFwiR0dHR1wiLHR0LFopLGx0KFwiZ2dnZ1wiLHR0LFopLGx0KFwiR0dHR0dcIixldCxYKSxsdChcImdnZ2dnXCIsZXQsWCksZnQoW1wiZ2dnZ1wiLFwiZ2dnZ2dcIixcIkdHR0dcIixcIkdHR0dHXCJdLGZ1bmN0aW9uKHQsZSxuLGkpe2VbaS5zdWJzdHIoMCwyKV09TSh0KX0pLGZ0KFtcImdnXCIsXCJHR1wiXSxmdW5jdGlvbih0LGUsbixpKXtlW2ldPWMucGFyc2VUd29EaWdpdFllYXIodCl9KSxCKFwiUVwiLDAsXCJRb1wiLFwicXVhcnRlclwiKSxBKFwicXVhcnRlclwiLFwiUVwiKSxZKFwicXVhcnRlclwiLDcpLGx0KFwiUVwiLFUpLGN0KFwiUVwiLGZ1bmN0aW9uKHQsZSl7ZVttdF09MyooTSh0KS0xKX0pLEIoXCJEXCIsW1wiRERcIiwyXSxcIkRvXCIsXCJkYXRlXCIpLEEoXCJkYXRlXCIsXCJEXCIpLFkoXCJkYXRlXCIsOSksbHQoXCJEXCIsSiksbHQoXCJERFwiLEosRyksbHQoXCJEb1wiLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQ/ZS5fZGF5T2ZNb250aE9yZGluYWxQYXJzZXx8ZS5fb3JkaW5hbFBhcnNlOmUuX2RheU9mTW9udGhPcmRpbmFsUGFyc2VMZW5pZW50fSksY3QoW1wiRFwiLFwiRERcIl0scHQpLGN0KFwiRG9cIixmdW5jdGlvbih0LGUpe2VbcHRdPU0odC5tYXRjaChKKVswXSl9KTt2YXIgbm49Q3QoXCJEYXRlXCIsITApO0IoXCJERERcIixbXCJEREREXCIsM10sXCJERERvXCIsXCJkYXlPZlllYXJcIiksQShcImRheU9mWWVhclwiLFwiREREXCIpLFkoXCJkYXlPZlllYXJcIiw0KSxsdChcIkRERFwiLFEpLGx0KFwiRERERFwiLHEpLGN0KFtcIkRERFwiLFwiRERERFwiXSxmdW5jdGlvbih0LGUsbil7bi5fZGF5T2ZZZWFyPU0odCl9KSxCKFwibVwiLFtcIm1tXCIsMl0sMCxcIm1pbnV0ZVwiKSxBKFwibWludXRlXCIsXCJtXCIpLFkoXCJtaW51dGVcIiwxNCksbHQoXCJtXCIsSiksbHQoXCJtbVwiLEosRyksY3QoW1wibVwiLFwibW1cIl0sYnQpO3ZhciBhbj1DdChcIk1pbnV0ZXNcIiwhMSk7QihcInNcIixbXCJzc1wiLDJdLDAsXCJzZWNvbmRcIiksQShcInNlY29uZFwiLFwic1wiKSxZKFwic2Vjb25kXCIsMTUpLGx0KFwic1wiLEopLGx0KFwic3NcIixKLEcpLGN0KFtcInNcIixcInNzXCJdLHl0KTt2YXIgcm4sb249Q3QoXCJTZWNvbmRzXCIsITEpO2ZvcihCKFwiU1wiLDAsMCxmdW5jdGlvbigpe3JldHVybn5+KHRoaXMubWlsbGlzZWNvbmQoKS8xMDApfSksQigwLFtcIlNTXCIsMl0sMCxmdW5jdGlvbigpe3JldHVybn5+KHRoaXMubWlsbGlzZWNvbmQoKS8xMCl9KSxCKDAsW1wiU1NTXCIsM10sMCxcIm1pbGxpc2Vjb25kXCIpLEIoMCxbXCJTU1NTXCIsNF0sMCxmdW5jdGlvbigpe3JldHVybiAxMCp0aGlzLm1pbGxpc2Vjb25kKCl9KSxCKDAsW1wiU1NTU1NcIiw1XSwwLGZ1bmN0aW9uKCl7cmV0dXJuIDEwMCp0aGlzLm1pbGxpc2Vjb25kKCl9KSxCKDAsW1wiU1NTU1NTXCIsNl0sMCxmdW5jdGlvbigpe3JldHVybiAxZTMqdGhpcy5taWxsaXNlY29uZCgpfSksQigwLFtcIlNTU1NTU1NcIiw3XSwwLGZ1bmN0aW9uKCl7cmV0dXJuIDFlNCp0aGlzLm1pbGxpc2Vjb25kKCl9KSxCKDAsW1wiU1NTU1NTU1NcIiw4XSwwLGZ1bmN0aW9uKCl7cmV0dXJuIDFlNSp0aGlzLm1pbGxpc2Vjb25kKCl9KSxCKDAsW1wiU1NTU1NTU1NTXCIsOV0sMCxmdW5jdGlvbigpe3JldHVybiAxZTYqdGhpcy5taWxsaXNlY29uZCgpfSksQShcIm1pbGxpc2Vjb25kXCIsXCJtc1wiKSxZKFwibWlsbGlzZWNvbmRcIiwxNiksbHQoXCJTXCIsUSxVKSxsdChcIlNTXCIsUSxHKSxsdChcIlNTU1wiLFEscSkscm49XCJTU1NTXCI7cm4ubGVuZ3RoPD05O3JuKz1cIlNcIilsdChybixudCk7ZnVuY3Rpb24gc24odCxlKXtlW3h0XT1NKDFlMyooXCIwLlwiK3QpKX1mb3Iocm49XCJTXCI7cm4ubGVuZ3RoPD05O3JuKz1cIlNcIiljdChybixzbik7dmFyIGxuPUN0KFwiTWlsbGlzZWNvbmRzXCIsITEpO0IoXCJ6XCIsMCwwLFwiem9uZUFiYnJcIiksQihcInp6XCIsMCwwLFwiem9uZU5hbWVcIik7dmFyIHVuPV8ucHJvdG90eXBlO2Z1bmN0aW9uIGRuKHQpe3JldHVybiB0fXVuLmFkZD1aZSx1bi5jYWxlbmRhcj1mdW5jdGlvbih0LGUpe3ZhciBuPXR8fENlKCksaT1OZShuLHRoaXMpLnN0YXJ0T2YoXCJkYXlcIiksYT1jLmNhbGVuZGFyRm9ybWF0KHRoaXMsaSl8fFwic2FtZUVsc2VcIixyPWUmJihQKGVbYV0pP2VbYV0uY2FsbCh0aGlzLG4pOmVbYV0pO3JldHVybiB0aGlzLmZvcm1hdChyfHx0aGlzLmxvY2FsZURhdGEoKS5jYWxlbmRhcihhLHRoaXMsQ2UobikpKX0sdW4uY2xvbmU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IF8odGhpcyl9LHVuLmRpZmY9ZnVuY3Rpb24odCxlLG4pe3ZhciBpLGEscjtpZighdGhpcy5pc1ZhbGlkKCkpcmV0dXJuIE5hTjtpZighKGk9TmUodCx0aGlzKSkuaXNWYWxpZCgpKXJldHVybiBOYU47c3dpdGNoKGE9NmU0KihpLnV0Y09mZnNldCgpLXRoaXMudXRjT2Zmc2V0KCkpLGU9RihlKSl7Y2FzZVwieWVhclwiOnI9SmUodGhpcyxpKS8xMjticmVhaztjYXNlXCJtb250aFwiOnI9SmUodGhpcyxpKTticmVhaztjYXNlXCJxdWFydGVyXCI6cj1KZSh0aGlzLGkpLzM7YnJlYWs7Y2FzZVwic2Vjb25kXCI6cj0odGhpcy1pKS8xZTM7YnJlYWs7Y2FzZVwibWludXRlXCI6cj0odGhpcy1pKS82ZTQ7YnJlYWs7Y2FzZVwiaG91clwiOnI9KHRoaXMtaSkvMzZlNTticmVhaztjYXNlXCJkYXlcIjpyPSh0aGlzLWktYSkvODY0ZTU7YnJlYWs7Y2FzZVwid2Vla1wiOnI9KHRoaXMtaS1hKS82MDQ4ZTU7YnJlYWs7ZGVmYXVsdDpyPXRoaXMtaX1yZXR1cm4gbj9yOncocil9LHVuLmVuZE9mPWZ1bmN0aW9uKHQpe3JldHVybiB2b2lkIDA9PT0odD1GKHQpKXx8XCJtaWxsaXNlY29uZFwiPT09dD90aGlzOihcImRhdGVcIj09PXQmJih0PVwiZGF5XCIpLHRoaXMuc3RhcnRPZih0KS5hZGQoMSxcImlzb1dlZWtcIj09PXQ/XCJ3ZWVrXCI6dCkuc3VidHJhY3QoMSxcIm1zXCIpKX0sdW4uZm9ybWF0PWZ1bmN0aW9uKHQpe3R8fCh0PXRoaXMuaXNVdGMoKT9jLmRlZmF1bHRGb3JtYXRVdGM6Yy5kZWZhdWx0Rm9ybWF0KTt2YXIgZT1FKHRoaXMsdCk7cmV0dXJuIHRoaXMubG9jYWxlRGF0YSgpLnBvc3Rmb3JtYXQoZSl9LHVuLmZyb209ZnVuY3Rpb24odCxlKXtyZXR1cm4gdGhpcy5pc1ZhbGlkKCkmJihrKHQpJiZ0LmlzVmFsaWQoKXx8Q2UodCkuaXNWYWxpZCgpKT9FZSh7dG86dGhpcyxmcm9tOnR9KS5sb2NhbGUodGhpcy5sb2NhbGUoKSkuaHVtYW5pemUoIWUpOnRoaXMubG9jYWxlRGF0YSgpLmludmFsaWREYXRlKCl9LHVuLmZyb21Ob3c9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZnJvbShDZSgpLHQpfSx1bi50bz1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmlzVmFsaWQoKSYmKGsodCkmJnQuaXNWYWxpZCgpfHxDZSh0KS5pc1ZhbGlkKCkpP0VlKHtmcm9tOnRoaXMsdG86dH0pLmxvY2FsZSh0aGlzLmxvY2FsZSgpKS5odW1hbml6ZSghZSk6dGhpcy5sb2NhbGVEYXRhKCkuaW52YWxpZERhdGUoKX0sdW4udG9Ob3c9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMudG8oQ2UoKSx0KX0sdW4uZ2V0PWZ1bmN0aW9uKHQpe3JldHVybiBQKHRoaXNbdD1GKHQpXSk/dGhpc1t0XSgpOnRoaXN9LHVuLmludmFsaWRBdD1mdW5jdGlvbigpe3JldHVybiB2KHRoaXMpLm92ZXJmbG93fSx1bi5pc0FmdGVyPWZ1bmN0aW9uKHQsZSl7dmFyIG49ayh0KT90OkNlKHQpO3JldHVybiEoIXRoaXMuaXNWYWxpZCgpfHwhbi5pc1ZhbGlkKCkpJiYoXCJtaWxsaXNlY29uZFwiPT09KGU9Rih1KGUpP1wibWlsbGlzZWNvbmRcIjplKSk/dGhpcy52YWx1ZU9mKCk+bi52YWx1ZU9mKCk6bi52YWx1ZU9mKCk8dGhpcy5jbG9uZSgpLnN0YXJ0T2YoZSkudmFsdWVPZigpKX0sdW4uaXNCZWZvcmU9ZnVuY3Rpb24odCxlKXt2YXIgbj1rKHQpP3Q6Q2UodCk7cmV0dXJuISghdGhpcy5pc1ZhbGlkKCl8fCFuLmlzVmFsaWQoKSkmJihcIm1pbGxpc2Vjb25kXCI9PT0oZT1GKHUoZSk/XCJtaWxsaXNlY29uZFwiOmUpKT90aGlzLnZhbHVlT2YoKTxuLnZhbHVlT2YoKTp0aGlzLmNsb25lKCkuZW5kT2YoZSkudmFsdWVPZigpPG4udmFsdWVPZigpKX0sdW4uaXNCZXR3ZWVuPWZ1bmN0aW9uKHQsZSxuLGkpe3JldHVybihcIihcIj09PShpPWl8fFwiKClcIilbMF0/dGhpcy5pc0FmdGVyKHQsbik6IXRoaXMuaXNCZWZvcmUodCxuKSkmJihcIilcIj09PWlbMV0/dGhpcy5pc0JlZm9yZShlLG4pOiF0aGlzLmlzQWZ0ZXIoZSxuKSl9LHVuLmlzU2FtZT1mdW5jdGlvbih0LGUpe3ZhciBuLGk9ayh0KT90OkNlKHQpO3JldHVybiEoIXRoaXMuaXNWYWxpZCgpfHwhaS5pc1ZhbGlkKCkpJiYoXCJtaWxsaXNlY29uZFwiPT09KGU9RihlfHxcIm1pbGxpc2Vjb25kXCIpKT90aGlzLnZhbHVlT2YoKT09PWkudmFsdWVPZigpOihuPWkudmFsdWVPZigpLHRoaXMuY2xvbmUoKS5zdGFydE9mKGUpLnZhbHVlT2YoKTw9biYmbjw9dGhpcy5jbG9uZSgpLmVuZE9mKGUpLnZhbHVlT2YoKSkpfSx1bi5pc1NhbWVPckFmdGVyPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuaXNTYW1lKHQsZSl8fHRoaXMuaXNBZnRlcih0LGUpfSx1bi5pc1NhbWVPckJlZm9yZT1mdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmlzU2FtZSh0LGUpfHx0aGlzLmlzQmVmb3JlKHQsZSl9LHVuLmlzVmFsaWQ9ZnVuY3Rpb24oKXtyZXR1cm4gYih0aGlzKX0sdW4ubGFuZz1LZSx1bi5sb2NhbGU9JGUsdW4ubG9jYWxlRGF0YT1RZSx1bi5tYXg9VGUsdW4ubWluPVBlLHVuLnBhcnNpbmdGbGFncz1mdW5jdGlvbigpe3JldHVybiBtKHt9LHYodGhpcykpfSx1bi5zZXQ9ZnVuY3Rpb24odCxlKXtpZihcIm9iamVjdFwiPT10eXBlb2YgdClmb3IodmFyIG49ZnVuY3Rpb24odCl7dmFyIGU9W107Zm9yKHZhciBuIGluIHQpZS5wdXNoKHt1bml0Om4scHJpb3JpdHk6TFtuXX0pO3JldHVybiBlLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gdC5wcmlvcml0eS1lLnByaW9yaXR5fSksZX0odD1SKHQpKSxpPTA7aTxuLmxlbmd0aDtpKyspdGhpc1tuW2ldLnVuaXRdKHRbbltpXS51bml0XSk7ZWxzZSBpZihQKHRoaXNbdD1GKHQpXSkpcmV0dXJuIHRoaXNbdF0oZSk7cmV0dXJuIHRoaXN9LHVuLnN0YXJ0T2Y9ZnVuY3Rpb24odCl7c3dpdGNoKHQ9Rih0KSl7Y2FzZVwieWVhclwiOnRoaXMubW9udGgoMCk7Y2FzZVwicXVhcnRlclwiOmNhc2VcIm1vbnRoXCI6dGhpcy5kYXRlKDEpO2Nhc2VcIndlZWtcIjpjYXNlXCJpc29XZWVrXCI6Y2FzZVwiZGF5XCI6Y2FzZVwiZGF0ZVwiOnRoaXMuaG91cnMoMCk7Y2FzZVwiaG91clwiOnRoaXMubWludXRlcygwKTtjYXNlXCJtaW51dGVcIjp0aGlzLnNlY29uZHMoMCk7Y2FzZVwic2Vjb25kXCI6dGhpcy5taWxsaXNlY29uZHMoMCl9cmV0dXJuXCJ3ZWVrXCI9PT10JiZ0aGlzLndlZWtkYXkoMCksXCJpc29XZWVrXCI9PT10JiZ0aGlzLmlzb1dlZWtkYXkoMSksXCJxdWFydGVyXCI9PT10JiZ0aGlzLm1vbnRoKDMqTWF0aC5mbG9vcih0aGlzLm1vbnRoKCkvMykpLHRoaXN9LHVuLnN1YnRyYWN0PVhlLHVuLnRvQXJyYXk9ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVyblt0LnllYXIoKSx0Lm1vbnRoKCksdC5kYXRlKCksdC5ob3VyKCksdC5taW51dGUoKSx0LnNlY29uZCgpLHQubWlsbGlzZWNvbmQoKV19LHVuLnRvT2JqZWN0PWZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztyZXR1cm57eWVhcnM6dC55ZWFyKCksbW9udGhzOnQubW9udGgoKSxkYXRlOnQuZGF0ZSgpLGhvdXJzOnQuaG91cnMoKSxtaW51dGVzOnQubWludXRlcygpLHNlY29uZHM6dC5zZWNvbmRzKCksbWlsbGlzZWNvbmRzOnQubWlsbGlzZWNvbmRzKCl9fSx1bi50b0RhdGU9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IERhdGUodGhpcy52YWx1ZU9mKCkpfSx1bi50b0lTT1N0cmluZz1mdW5jdGlvbih0KXtpZighdGhpcy5pc1ZhbGlkKCkpcmV0dXJuIG51bGw7dmFyIGU9ITAhPT10LG49ZT90aGlzLmNsb25lKCkudXRjKCk6dGhpcztyZXR1cm4gbi55ZWFyKCk8MHx8OTk5OTxuLnllYXIoKT9FKG4sZT9cIllZWVlZWS1NTS1ERFtUXUhIOm1tOnNzLlNTU1taXVwiOlwiWVlZWVlZLU1NLUREW1RdSEg6bW06c3MuU1NTWlwiKTpQKERhdGUucHJvdG90eXBlLnRvSVNPU3RyaW5nKT9lP3RoaXMudG9EYXRlKCkudG9JU09TdHJpbmcoKTpuZXcgRGF0ZSh0aGlzLnZhbHVlT2YoKSs2MCp0aGlzLnV0Y09mZnNldCgpKjFlMykudG9JU09TdHJpbmcoKS5yZXBsYWNlKFwiWlwiLEUobixcIlpcIikpOkUobixlP1wiWVlZWS1NTS1ERFtUXUhIOm1tOnNzLlNTU1taXVwiOlwiWVlZWS1NTS1ERFtUXUhIOm1tOnNzLlNTU1pcIil9LHVuLmluc3BlY3Q9ZnVuY3Rpb24oKXtpZighdGhpcy5pc1ZhbGlkKCkpcmV0dXJuXCJtb21lbnQuaW52YWxpZCgvKiBcIit0aGlzLl9pK1wiICovKVwiO3ZhciB0PVwibW9tZW50XCIsZT1cIlwiO3RoaXMuaXNMb2NhbCgpfHwodD0wPT09dGhpcy51dGNPZmZzZXQoKT9cIm1vbWVudC51dGNcIjpcIm1vbWVudC5wYXJzZVpvbmVcIixlPVwiWlwiKTt2YXIgbj1cIltcIit0KycoXCJdJyxpPTA8PXRoaXMueWVhcigpJiZ0aGlzLnllYXIoKTw9OTk5OT9cIllZWVlcIjpcIllZWVlZWVwiLGE9ZSsnW1wiKV0nO3JldHVybiB0aGlzLmZvcm1hdChuK2krXCItTU0tRERbVF1ISDptbTpzcy5TU1NcIithKX0sdW4udG9KU09OPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaXNWYWxpZCgpP3RoaXMudG9JU09TdHJpbmcoKTpudWxsfSx1bi50b1N0cmluZz1mdW5jdGlvbigpe3JldHVybiB0aGlzLmNsb25lKCkubG9jYWxlKFwiZW5cIikuZm9ybWF0KFwiZGRkIE1NTSBERCBZWVlZIEhIOm1tOnNzIFtHTVRdWlpcIil9LHVuLnVuaXg9ZnVuY3Rpb24oKXtyZXR1cm4gTWF0aC5mbG9vcih0aGlzLnZhbHVlT2YoKS8xZTMpfSx1bi52YWx1ZU9mPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2QudmFsdWVPZigpLTZlNCoodGhpcy5fb2Zmc2V0fHwwKX0sdW4uY3JlYXRpb25EYXRhPWZ1bmN0aW9uKCl7cmV0dXJue2lucHV0OnRoaXMuX2ksZm9ybWF0OnRoaXMuX2YsbG9jYWxlOnRoaXMuX2xvY2FsZSxpc1VUQzp0aGlzLl9pc1VUQyxzdHJpY3Q6dGhpcy5fc3RyaWN0fX0sdW4ueWVhcj1EdCx1bi5pc0xlYXBZZWFyPWZ1bmN0aW9uKCl7cmV0dXJuIE10KHRoaXMueWVhcigpKX0sdW4ud2Vla1llYXI9ZnVuY3Rpb24odCl7cmV0dXJuIGVuLmNhbGwodGhpcyx0LHRoaXMud2VlaygpLHRoaXMud2Vla2RheSgpLHRoaXMubG9jYWxlRGF0YSgpLl93ZWVrLmRvdyx0aGlzLmxvY2FsZURhdGEoKS5fd2Vlay5kb3kpfSx1bi5pc29XZWVrWWVhcj1mdW5jdGlvbih0KXtyZXR1cm4gZW4uY2FsbCh0aGlzLHQsdGhpcy5pc29XZWVrKCksdGhpcy5pc29XZWVrZGF5KCksMSw0KX0sdW4ucXVhcnRlcj11bi5xdWFydGVycz1mdW5jdGlvbih0KXtyZXR1cm4gbnVsbD09dD9NYXRoLmNlaWwoKHRoaXMubW9udGgoKSsxKS8zKTp0aGlzLm1vbnRoKDMqKHQtMSkrdGhpcy5tb250aCgpJTMpfSx1bi5tb250aD1MdCx1bi5kYXlzSW5Nb250aD1mdW5jdGlvbigpe3JldHVybiBPdCh0aGlzLnllYXIoKSx0aGlzLm1vbnRoKCkpfSx1bi53ZWVrPXVuLndlZWtzPWZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMubG9jYWxlRGF0YSgpLndlZWsodGhpcyk7cmV0dXJuIG51bGw9PXQ/ZTp0aGlzLmFkZCg3Kih0LWUpLFwiZFwiKX0sdW4uaXNvV2Vlaz11bi5pc29XZWVrcz1mdW5jdGlvbih0KXt2YXIgZT1CdCh0aGlzLDEsNCkud2VlaztyZXR1cm4gbnVsbD09dD9lOnRoaXMuYWRkKDcqKHQtZSksXCJkXCIpfSx1bi53ZWVrc0luWWVhcj1mdW5jdGlvbigpe3ZhciB0PXRoaXMubG9jYWxlRGF0YSgpLl93ZWVrO3JldHVybiBFdCh0aGlzLnllYXIoKSx0LmRvdyx0LmRveSl9LHVuLmlzb1dlZWtzSW5ZZWFyPWZ1bmN0aW9uKCl7cmV0dXJuIEV0KHRoaXMueWVhcigpLDEsNCl9LHVuLmRhdGU9bm4sdW4uZGF5PXVuLmRheXM9ZnVuY3Rpb24odCl7aWYoIXRoaXMuaXNWYWxpZCgpKXJldHVybiBudWxsIT10P3RoaXM6TmFOO3ZhciBlLG4saT10aGlzLl9pc1VUQz90aGlzLl9kLmdldFVUQ0RheSgpOnRoaXMuX2QuZ2V0RGF5KCk7cmV0dXJuIG51bGwhPXQ/KGU9dCxuPXRoaXMubG9jYWxlRGF0YSgpLHQ9XCJzdHJpbmdcIiE9dHlwZW9mIGU/ZTppc05hTihlKT9cIm51bWJlclwiPT10eXBlb2YoZT1uLndlZWtkYXlzUGFyc2UoZSkpP2U6bnVsbDpwYXJzZUludChlLDEwKSx0aGlzLmFkZCh0LWksXCJkXCIpKTppfSx1bi53ZWVrZGF5PWZ1bmN0aW9uKHQpe2lmKCF0aGlzLmlzVmFsaWQoKSlyZXR1cm4gbnVsbCE9dD90aGlzOk5hTjt2YXIgZT0odGhpcy5kYXkoKSs3LXRoaXMubG9jYWxlRGF0YSgpLl93ZWVrLmRvdyklNztyZXR1cm4gbnVsbD09dD9lOnRoaXMuYWRkKHQtZSxcImRcIil9LHVuLmlzb1dlZWtkYXk9ZnVuY3Rpb24odCl7aWYoIXRoaXMuaXNWYWxpZCgpKXJldHVybiBudWxsIT10P3RoaXM6TmFOO2lmKG51bGw9PXQpcmV0dXJuIHRoaXMuZGF5KCl8fDc7dmFyIGUsbixpPShlPXQsbj10aGlzLmxvY2FsZURhdGEoKSxcInN0cmluZ1wiPT10eXBlb2YgZT9uLndlZWtkYXlzUGFyc2UoZSklN3x8Nzppc05hTihlKT9udWxsOmUpO3JldHVybiB0aGlzLmRheSh0aGlzLmRheSgpJTc/aTppLTcpfSx1bi5kYXlPZlllYXI9ZnVuY3Rpb24odCl7dmFyIGU9TWF0aC5yb3VuZCgodGhpcy5jbG9uZSgpLnN0YXJ0T2YoXCJkYXlcIiktdGhpcy5jbG9uZSgpLnN0YXJ0T2YoXCJ5ZWFyXCIpKS84NjRlNSkrMTtyZXR1cm4gbnVsbD09dD9lOnRoaXMuYWRkKHQtZSxcImRcIil9LHVuLmhvdXI9dW4uaG91cnM9ZWUsdW4ubWludXRlPXVuLm1pbnV0ZXM9YW4sdW4uc2Vjb25kPXVuLnNlY29uZHM9b24sdW4ubWlsbGlzZWNvbmQ9dW4ubWlsbGlzZWNvbmRzPWxuLHVuLnV0Y09mZnNldD1mdW5jdGlvbih0LGUsbil7dmFyIGksYT10aGlzLl9vZmZzZXR8fDA7aWYoIXRoaXMuaXNWYWxpZCgpKXJldHVybiBudWxsIT10P3RoaXM6TmFOO2lmKG51bGw9PXQpcmV0dXJuIHRoaXMuX2lzVVRDP2E6emUodGhpcyk7aWYoXCJzdHJpbmdcIj09dHlwZW9mIHQpe2lmKG51bGw9PT0odD1XZShydCx0KSkpcmV0dXJuIHRoaXN9ZWxzZSBNYXRoLmFicyh0KTwxNiYmIW4mJih0Kj02MCk7cmV0dXJuIXRoaXMuX2lzVVRDJiZlJiYoaT16ZSh0aGlzKSksdGhpcy5fb2Zmc2V0PXQsdGhpcy5faXNVVEM9ITAsbnVsbCE9aSYmdGhpcy5hZGQoaSxcIm1cIiksYSE9PXQmJighZXx8dGhpcy5fY2hhbmdlSW5Qcm9ncmVzcz9xZSh0aGlzLEVlKHQtYSxcIm1cIiksMSwhMSk6dGhpcy5fY2hhbmdlSW5Qcm9ncmVzc3x8KHRoaXMuX2NoYW5nZUluUHJvZ3Jlc3M9ITAsYy51cGRhdGVPZmZzZXQodGhpcywhMCksdGhpcy5fY2hhbmdlSW5Qcm9ncmVzcz1udWxsKSksdGhpc30sdW4udXRjPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLnV0Y09mZnNldCgwLHQpfSx1bi5sb2NhbD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5faXNVVEMmJih0aGlzLnV0Y09mZnNldCgwLHQpLHRoaXMuX2lzVVRDPSExLHQmJnRoaXMuc3VidHJhY3QoemUodGhpcyksXCJtXCIpKSx0aGlzfSx1bi5wYXJzZVpvbmU9ZnVuY3Rpb24oKXtpZihudWxsIT10aGlzLl90em0pdGhpcy51dGNPZmZzZXQodGhpcy5fdHptLCExLCEwKTtlbHNlIGlmKFwic3RyaW5nXCI9PXR5cGVvZiB0aGlzLl9pKXt2YXIgdD1XZShhdCx0aGlzLl9pKTtudWxsIT10P3RoaXMudXRjT2Zmc2V0KHQpOnRoaXMudXRjT2Zmc2V0KDAsITApfXJldHVybiB0aGlzfSx1bi5oYXNBbGlnbmVkSG91ck9mZnNldD1mdW5jdGlvbih0KXtyZXR1cm4hIXRoaXMuaXNWYWxpZCgpJiYodD10P0NlKHQpLnV0Y09mZnNldCgpOjAsKHRoaXMudXRjT2Zmc2V0KCktdCklNjA9PTApfSx1bi5pc0RTVD1mdW5jdGlvbigpe3JldHVybiB0aGlzLnV0Y09mZnNldCgpPnRoaXMuY2xvbmUoKS5tb250aCgwKS51dGNPZmZzZXQoKXx8dGhpcy51dGNPZmZzZXQoKT50aGlzLmNsb25lKCkubW9udGgoNSkudXRjT2Zmc2V0KCl9LHVuLmlzTG9jYWw9ZnVuY3Rpb24oKXtyZXR1cm4hIXRoaXMuaXNWYWxpZCgpJiYhdGhpcy5faXNVVEN9LHVuLmlzVXRjT2Zmc2V0PWZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLmlzVmFsaWQoKSYmdGhpcy5faXNVVEN9LHVuLmlzVXRjPVZlLHVuLmlzVVRDPVZlLHVuLnpvbmVBYmJyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzVVRDP1wiVVRDXCI6XCJcIn0sdW4uem9uZU5hbWU9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5faXNVVEM/XCJDb29yZGluYXRlZCBVbml2ZXJzYWwgVGltZVwiOlwiXCJ9LHVuLmRhdGVzPW4oXCJkYXRlcyBhY2Nlc3NvciBpcyBkZXByZWNhdGVkLiBVc2UgZGF0ZSBpbnN0ZWFkLlwiLG5uKSx1bi5tb250aHM9bihcIm1vbnRocyBhY2Nlc3NvciBpcyBkZXByZWNhdGVkLiBVc2UgbW9udGggaW5zdGVhZFwiLEx0KSx1bi55ZWFycz1uKFwieWVhcnMgYWNjZXNzb3IgaXMgZGVwcmVjYXRlZC4gVXNlIHllYXIgaW5zdGVhZFwiLER0KSx1bi56b25lPW4oXCJtb21lbnQoKS56b25lIGlzIGRlcHJlY2F0ZWQsIHVzZSBtb21lbnQoKS51dGNPZmZzZXQgaW5zdGVhZC4gaHR0cDovL21vbWVudGpzLmNvbS9ndWlkZXMvIy93YXJuaW5ncy96b25lL1wiLGZ1bmN0aW9uKHQsZSl7cmV0dXJuIG51bGwhPXQ/KFwic3RyaW5nXCIhPXR5cGVvZiB0JiYodD0tdCksdGhpcy51dGNPZmZzZXQodCxlKSx0aGlzKTotdGhpcy51dGNPZmZzZXQoKX0pLHVuLmlzRFNUU2hpZnRlZD1uKFwiaXNEU1RTaGlmdGVkIGlzIGRlcHJlY2F0ZWQuIFNlZSBodHRwOi8vbW9tZW50anMuY29tL2d1aWRlcy8jL3dhcm5pbmdzL2RzdC1zaGlmdGVkLyBmb3IgbW9yZSBpbmZvcm1hdGlvblwiLGZ1bmN0aW9uKCl7aWYoIXUodGhpcy5faXNEU1RTaGlmdGVkKSlyZXR1cm4gdGhpcy5faXNEU1RTaGlmdGVkO3ZhciB0PXt9O2lmKHgodCx0aGlzKSwodD1TZSh0KSkuX2Epe3ZhciBlPXQuX2lzVVRDP3AodC5fYSk6Q2UodC5fYSk7dGhpcy5faXNEU1RTaGlmdGVkPXRoaXMuaXNWYWxpZCgpJiYwPG8odC5fYSxlLnRvQXJyYXkoKSl9ZWxzZSB0aGlzLl9pc0RTVFNoaWZ0ZWQ9ITE7cmV0dXJuIHRoaXMuX2lzRFNUU2hpZnRlZH0pO3ZhciBobj1PLnByb3RvdHlwZTtmdW5jdGlvbiBjbih0LGUsbixpKXt2YXIgYT11ZSgpLHI9cCgpLnNldChpLGUpO3JldHVybiBhW25dKHIsdCl9ZnVuY3Rpb24gZm4odCxlLG4pe2lmKGQodCkmJihlPXQsdD12b2lkIDApLHQ9dHx8XCJcIixudWxsIT1lKXJldHVybiBjbih0LGUsbixcIm1vbnRoXCIpO3ZhciBpLGE9W107Zm9yKGk9MDtpPDEyO2krKylhW2ldPWNuKHQsaSxuLFwibW9udGhcIik7cmV0dXJuIGF9ZnVuY3Rpb24gZ24odCxlLG4saSl7ZT0oXCJib29sZWFuXCI9PXR5cGVvZiB0P2QoZSkmJihuPWUsZT12b2lkIDApOihlPXQsdD0hMSxkKG49ZSkmJihuPWUsZT12b2lkIDApKSxlfHxcIlwiKTt2YXIgYSxyPXVlKCksbz10P3IuX3dlZWsuZG93OjA7aWYobnVsbCE9bilyZXR1cm4gY24oZSwobitvKSU3LGksXCJkYXlcIik7dmFyIHM9W107Zm9yKGE9MDthPDc7YSsrKXNbYV09Y24oZSwoYStvKSU3LGksXCJkYXlcIik7cmV0dXJuIHN9aG4uY2FsZW5kYXI9ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXMuX2NhbGVuZGFyW3RdfHx0aGlzLl9jYWxlbmRhci5zYW1lRWxzZTtyZXR1cm4gUChpKT9pLmNhbGwoZSxuKTppfSxobi5sb25nRGF0ZUZvcm1hdD1mdW5jdGlvbih0KXt2YXIgZT10aGlzLl9sb25nRGF0ZUZvcm1hdFt0XSxuPXRoaXMuX2xvbmdEYXRlRm9ybWF0W3QudG9VcHBlckNhc2UoKV07cmV0dXJuIGV8fCFuP2U6KHRoaXMuX2xvbmdEYXRlRm9ybWF0W3RdPW4ucmVwbGFjZSgvTU1NTXxNTXxERHxkZGRkL2csZnVuY3Rpb24odCl7cmV0dXJuIHQuc2xpY2UoMSl9KSx0aGlzLl9sb25nRGF0ZUZvcm1hdFt0XSl9LGhuLmludmFsaWREYXRlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2ludmFsaWREYXRlfSxobi5vcmRpbmFsPWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9vcmRpbmFsLnJlcGxhY2UoXCIlZFwiLHQpfSxobi5wcmVwYXJzZT1kbixobi5wb3N0Zm9ybWF0PWRuLGhuLnJlbGF0aXZlVGltZT1mdW5jdGlvbih0LGUsbixpKXt2YXIgYT10aGlzLl9yZWxhdGl2ZVRpbWVbbl07cmV0dXJuIFAoYSk/YSh0LGUsbixpKTphLnJlcGxhY2UoLyVkL2ksdCl9LGhuLnBhc3RGdXR1cmU9ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl9yZWxhdGl2ZVRpbWVbMDx0P1wiZnV0dXJlXCI6XCJwYXN0XCJdO3JldHVybiBQKG4pP24oZSk6bi5yZXBsYWNlKC8lcy9pLGUpfSxobi5zZXQ9ZnVuY3Rpb24odCl7dmFyIGUsbjtmb3IobiBpbiB0KVAoZT10W25dKT90aGlzW25dPWU6dGhpc1tcIl9cIituXT1lO3RoaXMuX2NvbmZpZz10LHRoaXMuX2RheU9mTW9udGhPcmRpbmFsUGFyc2VMZW5pZW50PW5ldyBSZWdFeHAoKHRoaXMuX2RheU9mTW9udGhPcmRpbmFsUGFyc2Uuc291cmNlfHx0aGlzLl9vcmRpbmFsUGFyc2Uuc291cmNlKStcInxcIisvXFxkezEsMn0vLnNvdXJjZSl9LGhuLm1vbnRocz1mdW5jdGlvbih0LGUpe3JldHVybiB0P3ModGhpcy5fbW9udGhzKT90aGlzLl9tb250aHNbdC5tb250aCgpXTp0aGlzLl9tb250aHNbKHRoaXMuX21vbnRocy5pc0Zvcm1hdHx8SXQpLnRlc3QoZSk/XCJmb3JtYXRcIjpcInN0YW5kYWxvbmVcIl1bdC5tb250aCgpXTpzKHRoaXMuX21vbnRocyk/dGhpcy5fbW9udGhzOnRoaXMuX21vbnRocy5zdGFuZGFsb25lfSxobi5tb250aHNTaG9ydD1mdW5jdGlvbih0LGUpe3JldHVybiB0P3ModGhpcy5fbW9udGhzU2hvcnQpP3RoaXMuX21vbnRoc1Nob3J0W3QubW9udGgoKV06dGhpcy5fbW9udGhzU2hvcnRbSXQudGVzdChlKT9cImZvcm1hdFwiOlwic3RhbmRhbG9uZVwiXVt0Lm1vbnRoKCldOnModGhpcy5fbW9udGhzU2hvcnQpP3RoaXMuX21vbnRoc1Nob3J0OnRoaXMuX21vbnRoc1Nob3J0LnN0YW5kYWxvbmV9LGhuLm1vbnRoc1BhcnNlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxhLHI7aWYodGhpcy5fbW9udGhzUGFyc2VFeGFjdClyZXR1cm4gZnVuY3Rpb24odCxlLG4pe3ZhciBpLGEscixvPXQudG9Mb2NhbGVMb3dlckNhc2UoKTtpZighdGhpcy5fbW9udGhzUGFyc2UpZm9yKHRoaXMuX21vbnRoc1BhcnNlPVtdLHRoaXMuX2xvbmdNb250aHNQYXJzZT1bXSx0aGlzLl9zaG9ydE1vbnRoc1BhcnNlPVtdLGk9MDtpPDEyOysraSlyPXAoWzJlMyxpXSksdGhpcy5fc2hvcnRNb250aHNQYXJzZVtpXT10aGlzLm1vbnRoc1Nob3J0KHIsXCJcIikudG9Mb2NhbGVMb3dlckNhc2UoKSx0aGlzLl9sb25nTW9udGhzUGFyc2VbaV09dGhpcy5tb250aHMocixcIlwiKS50b0xvY2FsZUxvd2VyQ2FzZSgpO3JldHVybiBuP1wiTU1NXCI9PT1lPy0xIT09KGE9U3QuY2FsbCh0aGlzLl9zaG9ydE1vbnRoc1BhcnNlLG8pKT9hOm51bGw6LTEhPT0oYT1TdC5jYWxsKHRoaXMuX2xvbmdNb250aHNQYXJzZSxvKSk/YTpudWxsOlwiTU1NXCI9PT1lPy0xIT09KGE9U3QuY2FsbCh0aGlzLl9zaG9ydE1vbnRoc1BhcnNlLG8pKT9hOi0xIT09KGE9U3QuY2FsbCh0aGlzLl9sb25nTW9udGhzUGFyc2UsbykpP2E6bnVsbDotMSE9PShhPVN0LmNhbGwodGhpcy5fbG9uZ01vbnRoc1BhcnNlLG8pKT9hOi0xIT09KGE9U3QuY2FsbCh0aGlzLl9zaG9ydE1vbnRoc1BhcnNlLG8pKT9hOm51bGx9LmNhbGwodGhpcyx0LGUsbik7Zm9yKHRoaXMuX21vbnRoc1BhcnNlfHwodGhpcy5fbW9udGhzUGFyc2U9W10sdGhpcy5fbG9uZ01vbnRoc1BhcnNlPVtdLHRoaXMuX3Nob3J0TW9udGhzUGFyc2U9W10pLGk9MDtpPDEyO2krKyl7aWYoYT1wKFsyZTMsaV0pLG4mJiF0aGlzLl9sb25nTW9udGhzUGFyc2VbaV0mJih0aGlzLl9sb25nTW9udGhzUGFyc2VbaV09bmV3IFJlZ0V4cChcIl5cIit0aGlzLm1vbnRocyhhLFwiXCIpLnJlcGxhY2UoXCIuXCIsXCJcIikrXCIkXCIsXCJpXCIpLHRoaXMuX3Nob3J0TW9udGhzUGFyc2VbaV09bmV3IFJlZ0V4cChcIl5cIit0aGlzLm1vbnRoc1Nob3J0KGEsXCJcIikucmVwbGFjZShcIi5cIixcIlwiKStcIiRcIixcImlcIikpLG58fHRoaXMuX21vbnRoc1BhcnNlW2ldfHwocj1cIl5cIit0aGlzLm1vbnRocyhhLFwiXCIpK1wifF5cIit0aGlzLm1vbnRoc1Nob3J0KGEsXCJcIiksdGhpcy5fbW9udGhzUGFyc2VbaV09bmV3IFJlZ0V4cChyLnJlcGxhY2UoXCIuXCIsXCJcIiksXCJpXCIpKSxuJiZcIk1NTU1cIj09PWUmJnRoaXMuX2xvbmdNb250aHNQYXJzZVtpXS50ZXN0KHQpKXJldHVybiBpO2lmKG4mJlwiTU1NXCI9PT1lJiZ0aGlzLl9zaG9ydE1vbnRoc1BhcnNlW2ldLnRlc3QodCkpcmV0dXJuIGk7aWYoIW4mJnRoaXMuX21vbnRoc1BhcnNlW2ldLnRlc3QodCkpcmV0dXJuIGl9fSxobi5tb250aHNSZWdleD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fbW9udGhzUGFyc2VFeGFjdD8oZyh0aGlzLFwiX21vbnRoc1JlZ2V4XCIpfHxOdC5jYWxsKHRoaXMpLHQ/dGhpcy5fbW9udGhzU3RyaWN0UmVnZXg6dGhpcy5fbW9udGhzUmVnZXgpOihnKHRoaXMsXCJfbW9udGhzUmVnZXhcIil8fCh0aGlzLl9tb250aHNSZWdleD1XdCksdGhpcy5fbW9udGhzU3RyaWN0UmVnZXgmJnQ/dGhpcy5fbW9udGhzU3RyaWN0UmVnZXg6dGhpcy5fbW9udGhzUmVnZXgpfSxobi5tb250aHNTaG9ydFJlZ2V4PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl9tb250aHNQYXJzZUV4YWN0PyhnKHRoaXMsXCJfbW9udGhzUmVnZXhcIil8fE50LmNhbGwodGhpcyksdD90aGlzLl9tb250aHNTaG9ydFN0cmljdFJlZ2V4OnRoaXMuX21vbnRoc1Nob3J0UmVnZXgpOihnKHRoaXMsXCJfbW9udGhzU2hvcnRSZWdleFwiKXx8KHRoaXMuX21vbnRoc1Nob3J0UmVnZXg9WXQpLHRoaXMuX21vbnRoc1Nob3J0U3RyaWN0UmVnZXgmJnQ/dGhpcy5fbW9udGhzU2hvcnRTdHJpY3RSZWdleDp0aGlzLl9tb250aHNTaG9ydFJlZ2V4KX0saG4ud2Vlaz1mdW5jdGlvbih0KXtyZXR1cm4gQnQodCx0aGlzLl93ZWVrLmRvdyx0aGlzLl93ZWVrLmRveSkud2Vla30saG4uZmlyc3REYXlPZlllYXI9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fd2Vlay5kb3l9LGhuLmZpcnN0RGF5T2ZXZWVrPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX3dlZWsuZG93fSxobi53ZWVrZGF5cz1mdW5jdGlvbih0LGUpe3JldHVybiB0P3ModGhpcy5fd2Vla2RheXMpP3RoaXMuX3dlZWtkYXlzW3QuZGF5KCldOnRoaXMuX3dlZWtkYXlzW3RoaXMuX3dlZWtkYXlzLmlzRm9ybWF0LnRlc3QoZSk/XCJmb3JtYXRcIjpcInN0YW5kYWxvbmVcIl1bdC5kYXkoKV06cyh0aGlzLl93ZWVrZGF5cyk/dGhpcy5fd2Vla2RheXM6dGhpcy5fd2Vla2RheXMuc3RhbmRhbG9uZX0saG4ud2Vla2RheXNNaW49ZnVuY3Rpb24odCl7cmV0dXJuIHQ/dGhpcy5fd2Vla2RheXNNaW5bdC5kYXkoKV06dGhpcy5fd2Vla2RheXNNaW59LGhuLndlZWtkYXlzU2hvcnQ9ZnVuY3Rpb24odCl7cmV0dXJuIHQ/dGhpcy5fd2Vla2RheXNTaG9ydFt0LmRheSgpXTp0aGlzLl93ZWVrZGF5c1Nob3J0fSxobi53ZWVrZGF5c1BhcnNlPWZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxhLHI7aWYodGhpcy5fd2Vla2RheXNQYXJzZUV4YWN0KXJldHVybiBmdW5jdGlvbih0LGUsbil7dmFyIGksYSxyLG89dC50b0xvY2FsZUxvd2VyQ2FzZSgpO2lmKCF0aGlzLl93ZWVrZGF5c1BhcnNlKWZvcih0aGlzLl93ZWVrZGF5c1BhcnNlPVtdLHRoaXMuX3Nob3J0V2Vla2RheXNQYXJzZT1bXSx0aGlzLl9taW5XZWVrZGF5c1BhcnNlPVtdLGk9MDtpPDc7KytpKXI9cChbMmUzLDFdKS5kYXkoaSksdGhpcy5fbWluV2Vla2RheXNQYXJzZVtpXT10aGlzLndlZWtkYXlzTWluKHIsXCJcIikudG9Mb2NhbGVMb3dlckNhc2UoKSx0aGlzLl9zaG9ydFdlZWtkYXlzUGFyc2VbaV09dGhpcy53ZWVrZGF5c1Nob3J0KHIsXCJcIikudG9Mb2NhbGVMb3dlckNhc2UoKSx0aGlzLl93ZWVrZGF5c1BhcnNlW2ldPXRoaXMud2Vla2RheXMocixcIlwiKS50b0xvY2FsZUxvd2VyQ2FzZSgpO3JldHVybiBuP1wiZGRkZFwiPT09ZT8tMSE9PShhPVN0LmNhbGwodGhpcy5fd2Vla2RheXNQYXJzZSxvKSk/YTpudWxsOlwiZGRkXCI9PT1lPy0xIT09KGE9U3QuY2FsbCh0aGlzLl9zaG9ydFdlZWtkYXlzUGFyc2UsbykpP2E6bnVsbDotMSE9PShhPVN0LmNhbGwodGhpcy5fbWluV2Vla2RheXNQYXJzZSxvKSk/YTpudWxsOlwiZGRkZFwiPT09ZT8tMSE9PShhPVN0LmNhbGwodGhpcy5fd2Vla2RheXNQYXJzZSxvKSk/YTotMSE9PShhPVN0LmNhbGwodGhpcy5fc2hvcnRXZWVrZGF5c1BhcnNlLG8pKT9hOi0xIT09KGE9U3QuY2FsbCh0aGlzLl9taW5XZWVrZGF5c1BhcnNlLG8pKT9hOm51bGw6XCJkZGRcIj09PWU/LTEhPT0oYT1TdC5jYWxsKHRoaXMuX3Nob3J0V2Vla2RheXNQYXJzZSxvKSk/YTotMSE9PShhPVN0LmNhbGwodGhpcy5fd2Vla2RheXNQYXJzZSxvKSk/YTotMSE9PShhPVN0LmNhbGwodGhpcy5fbWluV2Vla2RheXNQYXJzZSxvKSk/YTpudWxsOi0xIT09KGE9U3QuY2FsbCh0aGlzLl9taW5XZWVrZGF5c1BhcnNlLG8pKT9hOi0xIT09KGE9U3QuY2FsbCh0aGlzLl93ZWVrZGF5c1BhcnNlLG8pKT9hOi0xIT09KGE9U3QuY2FsbCh0aGlzLl9zaG9ydFdlZWtkYXlzUGFyc2UsbykpP2E6bnVsbH0uY2FsbCh0aGlzLHQsZSxuKTtmb3IodGhpcy5fd2Vla2RheXNQYXJzZXx8KHRoaXMuX3dlZWtkYXlzUGFyc2U9W10sdGhpcy5fbWluV2Vla2RheXNQYXJzZT1bXSx0aGlzLl9zaG9ydFdlZWtkYXlzUGFyc2U9W10sdGhpcy5fZnVsbFdlZWtkYXlzUGFyc2U9W10pLGk9MDtpPDc7aSsrKXtpZihhPXAoWzJlMywxXSkuZGF5KGkpLG4mJiF0aGlzLl9mdWxsV2Vla2RheXNQYXJzZVtpXSYmKHRoaXMuX2Z1bGxXZWVrZGF5c1BhcnNlW2ldPW5ldyBSZWdFeHAoXCJeXCIrdGhpcy53ZWVrZGF5cyhhLFwiXCIpLnJlcGxhY2UoXCIuXCIsXCJcXFxcLj9cIikrXCIkXCIsXCJpXCIpLHRoaXMuX3Nob3J0V2Vla2RheXNQYXJzZVtpXT1uZXcgUmVnRXhwKFwiXlwiK3RoaXMud2Vla2RheXNTaG9ydChhLFwiXCIpLnJlcGxhY2UoXCIuXCIsXCJcXFxcLj9cIikrXCIkXCIsXCJpXCIpLHRoaXMuX21pbldlZWtkYXlzUGFyc2VbaV09bmV3IFJlZ0V4cChcIl5cIit0aGlzLndlZWtkYXlzTWluKGEsXCJcIikucmVwbGFjZShcIi5cIixcIlxcXFwuP1wiKStcIiRcIixcImlcIikpLHRoaXMuX3dlZWtkYXlzUGFyc2VbaV18fChyPVwiXlwiK3RoaXMud2Vla2RheXMoYSxcIlwiKStcInxeXCIrdGhpcy53ZWVrZGF5c1Nob3J0KGEsXCJcIikrXCJ8XlwiK3RoaXMud2Vla2RheXNNaW4oYSxcIlwiKSx0aGlzLl93ZWVrZGF5c1BhcnNlW2ldPW5ldyBSZWdFeHAoci5yZXBsYWNlKFwiLlwiLFwiXCIpLFwiaVwiKSksbiYmXCJkZGRkXCI9PT1lJiZ0aGlzLl9mdWxsV2Vla2RheXNQYXJzZVtpXS50ZXN0KHQpKXJldHVybiBpO2lmKG4mJlwiZGRkXCI9PT1lJiZ0aGlzLl9zaG9ydFdlZWtkYXlzUGFyc2VbaV0udGVzdCh0KSlyZXR1cm4gaTtpZihuJiZcImRkXCI9PT1lJiZ0aGlzLl9taW5XZWVrZGF5c1BhcnNlW2ldLnRlc3QodCkpcmV0dXJuIGk7aWYoIW4mJnRoaXMuX3dlZWtkYXlzUGFyc2VbaV0udGVzdCh0KSlyZXR1cm4gaX19LGhuLndlZWtkYXlzUmVnZXg9ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuX3dlZWtkYXlzUGFyc2VFeGFjdD8oZyh0aGlzLFwiX3dlZWtkYXlzUmVnZXhcIil8fEp0LmNhbGwodGhpcyksdD90aGlzLl93ZWVrZGF5c1N0cmljdFJlZ2V4OnRoaXMuX3dlZWtkYXlzUmVnZXgpOihnKHRoaXMsXCJfd2Vla2RheXNSZWdleFwiKXx8KHRoaXMuX3dlZWtkYXlzUmVnZXg9cXQpLHRoaXMuX3dlZWtkYXlzU3RyaWN0UmVnZXgmJnQ/dGhpcy5fd2Vla2RheXNTdHJpY3RSZWdleDp0aGlzLl93ZWVrZGF5c1JlZ2V4KX0saG4ud2Vla2RheXNTaG9ydFJlZ2V4PWZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLl93ZWVrZGF5c1BhcnNlRXhhY3Q/KGcodGhpcyxcIl93ZWVrZGF5c1JlZ2V4XCIpfHxKdC5jYWxsKHRoaXMpLHQ/dGhpcy5fd2Vla2RheXNTaG9ydFN0cmljdFJlZ2V4OnRoaXMuX3dlZWtkYXlzU2hvcnRSZWdleCk6KGcodGhpcyxcIl93ZWVrZGF5c1Nob3J0UmVnZXhcIil8fCh0aGlzLl93ZWVrZGF5c1Nob3J0UmVnZXg9WnQpLHRoaXMuX3dlZWtkYXlzU2hvcnRTdHJpY3RSZWdleCYmdD90aGlzLl93ZWVrZGF5c1Nob3J0U3RyaWN0UmVnZXg6dGhpcy5fd2Vla2RheXNTaG9ydFJlZ2V4KX0saG4ud2Vla2RheXNNaW5SZWdleD1mdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5fd2Vla2RheXNQYXJzZUV4YWN0PyhnKHRoaXMsXCJfd2Vla2RheXNSZWdleFwiKXx8SnQuY2FsbCh0aGlzKSx0P3RoaXMuX3dlZWtkYXlzTWluU3RyaWN0UmVnZXg6dGhpcy5fd2Vla2RheXNNaW5SZWdleCk6KGcodGhpcyxcIl93ZWVrZGF5c01pblJlZ2V4XCIpfHwodGhpcy5fd2Vla2RheXNNaW5SZWdleD1YdCksdGhpcy5fd2Vla2RheXNNaW5TdHJpY3RSZWdleCYmdD90aGlzLl93ZWVrZGF5c01pblN0cmljdFJlZ2V4OnRoaXMuX3dlZWtkYXlzTWluUmVnZXgpfSxobi5pc1BNPWZ1bmN0aW9uKHQpe3JldHVyblwicFwiPT09KHQrXCJcIikudG9Mb3dlckNhc2UoKS5jaGFyQXQoMCl9LGhuLm1lcmlkaWVtPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gMTE8dD9uP1wicG1cIjpcIlBNXCI6bj9cImFtXCI6XCJBTVwifSxzZShcImVuXCIse2RheU9mTW9udGhPcmRpbmFsUGFyc2U6L1xcZHsxLDJ9KHRofHN0fG5kfHJkKS8sb3JkaW5hbDpmdW5jdGlvbih0KXt2YXIgZT10JTEwO3JldHVybiB0KygxPT09TSh0JTEwMC8xMCk/XCJ0aFwiOjE9PT1lP1wic3RcIjoyPT09ZT9cIm5kXCI6Mz09PWU/XCJyZFwiOlwidGhcIil9fSksYy5sYW5nPW4oXCJtb21lbnQubGFuZyBpcyBkZXByZWNhdGVkLiBVc2UgbW9tZW50LmxvY2FsZSBpbnN0ZWFkLlwiLHNlKSxjLmxhbmdEYXRhPW4oXCJtb21lbnQubGFuZ0RhdGEgaXMgZGVwcmVjYXRlZC4gVXNlIG1vbWVudC5sb2NhbGVEYXRhIGluc3RlYWQuXCIsdWUpO3ZhciBtbj1NYXRoLmFicztmdW5jdGlvbiBwbih0LGUsbixpKXt2YXIgYT1FZShlLG4pO3JldHVybiB0Ll9taWxsaXNlY29uZHMrPWkqYS5fbWlsbGlzZWNvbmRzLHQuX2RheXMrPWkqYS5fZGF5cyx0Ll9tb250aHMrPWkqYS5fbW9udGhzLHQuX2J1YmJsZSgpfWZ1bmN0aW9uIHZuKHQpe3JldHVybiB0PDA/TWF0aC5mbG9vcih0KTpNYXRoLmNlaWwodCl9ZnVuY3Rpb24gYm4odCl7cmV0dXJuIDQ4MDAqdC8xNDYwOTd9ZnVuY3Rpb24geW4odCl7cmV0dXJuIDE0NjA5Nyp0LzQ4MDB9ZnVuY3Rpb24geG4odCl7cmV0dXJuIGZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYXModCl9fXZhciBfbj14bihcIm1zXCIpLGtuPXhuKFwic1wiKSx3bj14bihcIm1cIiksTW49eG4oXCJoXCIpLFNuPXhuKFwiZFwiKSxEbj14bihcIndcIiksQ249eG4oXCJNXCIpLFBuPXhuKFwieVwiKTtmdW5jdGlvbiBUbih0KXtyZXR1cm4gZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc1ZhbGlkKCk/dGhpcy5fZGF0YVt0XTpOYU59fXZhciBPbj1UbihcIm1pbGxpc2Vjb25kc1wiKSxJbj1UbihcInNlY29uZHNcIiksQW49VG4oXCJtaW51dGVzXCIpLEZuPVRuKFwiaG91cnNcIiksUm49VG4oXCJkYXlzXCIpLExuPVRuKFwibW9udGhzXCIpLFluPVRuKFwieWVhcnNcIik7dmFyIFduPU1hdGgucm91bmQsTm49e3NzOjQ0LHM6NDUsbTo0NSxoOjIyLGQ6MjYsTToxMX07dmFyIHpuPU1hdGguYWJzO2Z1bmN0aW9uIFZuKHQpe3JldHVybigwPHQpLSh0PDApfHwrdH1mdW5jdGlvbiBIbigpe2lmKCF0aGlzLmlzVmFsaWQoKSlyZXR1cm4gdGhpcy5sb2NhbGVEYXRhKCkuaW52YWxpZERhdGUoKTt2YXIgdCxlLG49em4odGhpcy5fbWlsbGlzZWNvbmRzKS8xZTMsaT16bih0aGlzLl9kYXlzKSxhPXpuKHRoaXMuX21vbnRocyk7ZT13KCh0PXcobi82MCkpLzYwKSxuJT02MCx0JT02MDt2YXIgcj13KGEvMTIpLG89YSU9MTIscz1pLGw9ZSx1PXQsZD1uP24udG9GaXhlZCgzKS5yZXBsYWNlKC9cXC4/MCskLyxcIlwiKTpcIlwiLGg9dGhpcy5hc1NlY29uZHMoKTtpZighaClyZXR1cm5cIlAwRFwiO3ZhciBjPWg8MD9cIi1cIjpcIlwiLGY9Vm4odGhpcy5fbW9udGhzKSE9PVZuKGgpP1wiLVwiOlwiXCIsZz1Wbih0aGlzLl9kYXlzKSE9PVZuKGgpP1wiLVwiOlwiXCIsbT1Wbih0aGlzLl9taWxsaXNlY29uZHMpIT09Vm4oaCk/XCItXCI6XCJcIjtyZXR1cm4gYytcIlBcIisocj9mK3IrXCJZXCI6XCJcIikrKG8/ZitvK1wiTVwiOlwiXCIpKyhzP2crcytcIkRcIjpcIlwiKSsobHx8dXx8ZD9cIlRcIjpcIlwiKSsobD9tK2wrXCJIXCI6XCJcIikrKHU/bSt1K1wiTVwiOlwiXCIpKyhkP20rZCtcIlNcIjpcIlwiKX12YXIgQm49QWUucHJvdG90eXBlO3JldHVybiBCbi5pc1ZhbGlkPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX2lzVmFsaWR9LEJuLmFicz1mdW5jdGlvbigpe3ZhciB0PXRoaXMuX2RhdGE7cmV0dXJuIHRoaXMuX21pbGxpc2Vjb25kcz1tbih0aGlzLl9taWxsaXNlY29uZHMpLHRoaXMuX2RheXM9bW4odGhpcy5fZGF5cyksdGhpcy5fbW9udGhzPW1uKHRoaXMuX21vbnRocyksdC5taWxsaXNlY29uZHM9bW4odC5taWxsaXNlY29uZHMpLHQuc2Vjb25kcz1tbih0LnNlY29uZHMpLHQubWludXRlcz1tbih0Lm1pbnV0ZXMpLHQuaG91cnM9bW4odC5ob3VycyksdC5tb250aHM9bW4odC5tb250aHMpLHQueWVhcnM9bW4odC55ZWFycyksdGhpc30sQm4uYWRkPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHBuKHRoaXMsdCxlLDEpfSxCbi5zdWJ0cmFjdD1mdW5jdGlvbih0LGUpe3JldHVybiBwbih0aGlzLHQsZSwtMSl9LEJuLmFzPWZ1bmN0aW9uKHQpe2lmKCF0aGlzLmlzVmFsaWQoKSlyZXR1cm4gTmFOO3ZhciBlLG4saT10aGlzLl9taWxsaXNlY29uZHM7aWYoXCJtb250aFwiPT09KHQ9Rih0KSl8fFwieWVhclwiPT09dClyZXR1cm4gZT10aGlzLl9kYXlzK2kvODY0ZTUsbj10aGlzLl9tb250aHMrYm4oZSksXCJtb250aFwiPT09dD9uOm4vMTI7c3dpdGNoKGU9dGhpcy5fZGF5cytNYXRoLnJvdW5kKHluKHRoaXMuX21vbnRocykpLHQpe2Nhc2VcIndlZWtcIjpyZXR1cm4gZS83K2kvNjA0OGU1O2Nhc2VcImRheVwiOnJldHVybiBlK2kvODY0ZTU7Y2FzZVwiaG91clwiOnJldHVybiAyNCplK2kvMzZlNTtjYXNlXCJtaW51dGVcIjpyZXR1cm4gMTQ0MCplK2kvNmU0O2Nhc2VcInNlY29uZFwiOnJldHVybiA4NjQwMCplK2kvMWUzO2Nhc2VcIm1pbGxpc2Vjb25kXCI6cmV0dXJuIE1hdGguZmxvb3IoODY0ZTUqZSkraTtkZWZhdWx0OnRocm93IG5ldyBFcnJvcihcIlVua25vd24gdW5pdCBcIit0KX19LEJuLmFzTWlsbGlzZWNvbmRzPV9uLEJuLmFzU2Vjb25kcz1rbixCbi5hc01pbnV0ZXM9d24sQm4uYXNIb3Vycz1NbixCbi5hc0RheXM9U24sQm4uYXNXZWVrcz1EbixCbi5hc01vbnRocz1DbixCbi5hc1llYXJzPVBuLEJuLnZhbHVlT2Y9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc1ZhbGlkKCk/dGhpcy5fbWlsbGlzZWNvbmRzKzg2NGU1KnRoaXMuX2RheXMrdGhpcy5fbW9udGhzJTEyKjI1OTJlNiszMTUzNmU2Kk0odGhpcy5fbW9udGhzLzEyKTpOYU59LEJuLl9idWJibGU9ZnVuY3Rpb24oKXt2YXIgdCxlLG4saSxhLHI9dGhpcy5fbWlsbGlzZWNvbmRzLG89dGhpcy5fZGF5cyxzPXRoaXMuX21vbnRocyxsPXRoaXMuX2RhdGE7cmV0dXJuIDA8PXImJjA8PW8mJjA8PXN8fHI8PTAmJm88PTAmJnM8PTB8fChyKz04NjRlNSp2bih5bihzKStvKSxzPW89MCksbC5taWxsaXNlY29uZHM9ciUxZTMsdD13KHIvMWUzKSxsLnNlY29uZHM9dCU2MCxlPXcodC82MCksbC5taW51dGVzPWUlNjAsbj13KGUvNjApLGwuaG91cnM9biUyNCxzKz1hPXcoYm4obys9dyhuLzI0KSkpLG8tPXZuKHluKGEpKSxpPXcocy8xMikscyU9MTIsbC5kYXlzPW8sbC5tb250aHM9cyxsLnllYXJzPWksdGhpc30sQm4uY2xvbmU9ZnVuY3Rpb24oKXtyZXR1cm4gRWUodGhpcyl9LEJuLmdldD1mdW5jdGlvbih0KXtyZXR1cm4gdD1GKHQpLHRoaXMuaXNWYWxpZCgpP3RoaXNbdCtcInNcIl0oKTpOYU59LEJuLm1pbGxpc2Vjb25kcz1PbixCbi5zZWNvbmRzPUluLEJuLm1pbnV0ZXM9QW4sQm4uaG91cnM9Rm4sQm4uZGF5cz1SbixCbi53ZWVrcz1mdW5jdGlvbigpe3JldHVybiB3KHRoaXMuZGF5cygpLzcpfSxCbi5tb250aHM9TG4sQm4ueWVhcnM9WW4sQm4uaHVtYW5pemU9ZnVuY3Rpb24odCl7aWYoIXRoaXMuaXNWYWxpZCgpKXJldHVybiB0aGlzLmxvY2FsZURhdGEoKS5pbnZhbGlkRGF0ZSgpO3ZhciBlLG4saSxhLHIsbyxzLGwsdSxkLGgsYz10aGlzLmxvY2FsZURhdGEoKSxmPShuPSF0LGk9YyxhPUVlKGU9dGhpcykuYWJzKCkscj1XbihhLmFzKFwic1wiKSksbz1XbihhLmFzKFwibVwiKSkscz1XbihhLmFzKFwiaFwiKSksbD1XbihhLmFzKFwiZFwiKSksdT1XbihhLmFzKFwiTVwiKSksZD1XbihhLmFzKFwieVwiKSksKGg9cjw9Tm4uc3MmJltcInNcIixyXXx8cjxObi5zJiZbXCJzc1wiLHJdfHxvPD0xJiZbXCJtXCJdfHxvPE5uLm0mJltcIm1tXCIsb118fHM8PTEmJltcImhcIl18fHM8Tm4uaCYmW1wiaGhcIixzXXx8bDw9MSYmW1wiZFwiXXx8bDxObi5kJiZbXCJkZFwiLGxdfHx1PD0xJiZbXCJNXCJdfHx1PE5uLk0mJltcIk1NXCIsdV18fGQ8PTEmJltcInlcIl18fFtcInl5XCIsZF0pWzJdPW4saFszXT0wPCtlLGhbNF09aSxmdW5jdGlvbih0LGUsbixpLGEpe3JldHVybiBhLnJlbGF0aXZlVGltZShlfHwxLCEhbix0LGkpfS5hcHBseShudWxsLGgpKTtyZXR1cm4gdCYmKGY9Yy5wYXN0RnV0dXJlKCt0aGlzLGYpKSxjLnBvc3Rmb3JtYXQoZil9LEJuLnRvSVNPU3RyaW5nPUhuLEJuLnRvU3RyaW5nPUhuLEJuLnRvSlNPTj1IbixCbi5sb2NhbGU9JGUsQm4ubG9jYWxlRGF0YT1RZSxCbi50b0lzb1N0cmluZz1uKFwidG9Jc29TdHJpbmcoKSBpcyBkZXByZWNhdGVkLiBQbGVhc2UgdXNlIHRvSVNPU3RyaW5nKCkgaW5zdGVhZCAobm90aWNlIHRoZSBjYXBpdGFscylcIixIbiksQm4ubGFuZz1LZSxCKFwiWFwiLDAsMCxcInVuaXhcIiksQihcInhcIiwwLDAsXCJ2YWx1ZU9mXCIpLGx0KFwieFwiLGl0KSxsdChcIlhcIiwvWystXT9cXGQrKFxcLlxcZHsxLDN9KT8vKSxjdChcIlhcIixmdW5jdGlvbih0LGUsbil7bi5fZD1uZXcgRGF0ZSgxZTMqcGFyc2VGbG9hdCh0LDEwKSl9KSxjdChcInhcIixmdW5jdGlvbih0LGUsbil7bi5fZD1uZXcgRGF0ZShNKHQpKX0pLGMudmVyc2lvbj1cIjIuMjIuMlwiLHQ9Q2UsYy5mbj11bixjLm1pbj1mdW5jdGlvbigpe3JldHVybiBPZShcImlzQmVmb3JlXCIsW10uc2xpY2UuY2FsbChhcmd1bWVudHMsMCkpfSxjLm1heD1mdW5jdGlvbigpe3JldHVybiBPZShcImlzQWZ0ZXJcIixbXS5zbGljZS5jYWxsKGFyZ3VtZW50cywwKSl9LGMubm93PWZ1bmN0aW9uKCl7cmV0dXJuIERhdGUubm93P0RhdGUubm93KCk6K25ldyBEYXRlfSxjLnV0Yz1wLGMudW5peD1mdW5jdGlvbih0KXtyZXR1cm4gQ2UoMWUzKnQpfSxjLm1vbnRocz1mdW5jdGlvbih0LGUpe3JldHVybiBmbih0LGUsXCJtb250aHNcIil9LGMuaXNEYXRlPWgsYy5sb2NhbGU9c2UsYy5pbnZhbGlkPXksYy5kdXJhdGlvbj1FZSxjLmlzTW9tZW50PWssYy53ZWVrZGF5cz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIGduKHQsZSxuLFwid2Vla2RheXNcIil9LGMucGFyc2Vab25lPWZ1bmN0aW9uKCl7cmV0dXJuIENlLmFwcGx5KG51bGwsYXJndW1lbnRzKS5wYXJzZVpvbmUoKX0sYy5sb2NhbGVEYXRhPXVlLGMuaXNEdXJhdGlvbj1GZSxjLm1vbnRoc1Nob3J0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGZuKHQsZSxcIm1vbnRoc1Nob3J0XCIpfSxjLndlZWtkYXlzTWluPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gZ24odCxlLG4sXCJ3ZWVrZGF5c01pblwiKX0sYy5kZWZpbmVMb2NhbGU9bGUsYy51cGRhdGVMb2NhbGU9ZnVuY3Rpb24odCxlKXtpZihudWxsIT1lKXt2YXIgbixpLGE9bmU7bnVsbCE9KGk9b2UodCkpJiYoYT1pLl9jb25maWcpLChuPW5ldyBPKGU9VChhLGUpKSkucGFyZW50TG9jYWxlPWllW3RdLGllW3RdPW4sc2UodCl9ZWxzZSBudWxsIT1pZVt0XSYmKG51bGwhPWllW3RdLnBhcmVudExvY2FsZT9pZVt0XT1pZVt0XS5wYXJlbnRMb2NhbGU6bnVsbCE9aWVbdF0mJmRlbGV0ZSBpZVt0XSk7cmV0dXJuIGllW3RdfSxjLmxvY2FsZXM9ZnVuY3Rpb24oKXtyZXR1cm4gaShpZSl9LGMud2Vla2RheXNTaG9ydD1mdW5jdGlvbih0LGUsbil7cmV0dXJuIGduKHQsZSxuLFwid2Vla2RheXNTaG9ydFwiKX0sYy5ub3JtYWxpemVVbml0cz1GLGMucmVsYXRpdmVUaW1lUm91bmRpbmc9ZnVuY3Rpb24odCl7cmV0dXJuIHZvaWQgMD09PXQ/V246XCJmdW5jdGlvblwiPT10eXBlb2YgdCYmKFduPXQsITApfSxjLnJlbGF0aXZlVGltZVRocmVzaG9sZD1mdW5jdGlvbih0LGUpe3JldHVybiB2b2lkIDAhPT1Oblt0XSYmKHZvaWQgMD09PWU/Tm5bdF06KE5uW3RdPWUsXCJzXCI9PT10JiYoTm4uc3M9ZS0xKSwhMCkpfSxjLmNhbGVuZGFyRm9ybWF0PWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5kaWZmKGUsXCJkYXlzXCIsITApO3JldHVybiBuPC02P1wic2FtZUVsc2VcIjpuPC0xP1wibGFzdFdlZWtcIjpuPDA/XCJsYXN0RGF5XCI6bjwxP1wic2FtZURheVwiOm48Mj9cIm5leHREYXlcIjpuPDc/XCJuZXh0V2Vla1wiOlwic2FtZUVsc2VcIn0sYy5wcm90b3R5cGU9dW4sYy5IVE1MNV9GTVQ9e0RBVEVUSU1FX0xPQ0FMOlwiWVlZWS1NTS1ERFRISDptbVwiLERBVEVUSU1FX0xPQ0FMX1NFQ09ORFM6XCJZWVlZLU1NLUREVEhIOm1tOnNzXCIsREFURVRJTUVfTE9DQUxfTVM6XCJZWVlZLU1NLUREVEhIOm1tOnNzLlNTU1wiLERBVEU6XCJZWVlZLU1NLUREXCIsVElNRTpcIkhIOm1tXCIsVElNRV9TRUNPTkRTOlwiSEg6bW06c3NcIixUSU1FX01TOlwiSEg6bW06c3MuU1NTXCIsV0VFSzpcIllZWVktW1ddV1dcIixNT05USDpcIllZWVktTU1cIn0sY30sXCJvYmplY3RcIj09dHlwZW9mIHQmJnZvaWQgMCE9PWpuP2puLmV4cG9ydHM9bigpOmUubW9tZW50PW4oKX0se31dLDc6W2Z1bmN0aW9uKHQsZSxuKXt2YXIgaT10KDMwKSgpO2kuaGVscGVycz10KDQ2KSx0KDI4KShpKSxpLkFuaW1hdGlvbj10KDIyKSxpLmFuaW1hdGlvblNlcnZpY2U9dCgyMyksaS5kZWZhdWx0cz10KDI2KSxpLkVsZW1lbnQ9dCgyNyksaS5lbGVtZW50cz10KDQxKSxpLkludGVyYWN0aW9uPXQoMjkpLGkubGF5b3V0cz10KDMxKSxpLnBsYXRmb3JtPXQoNDkpLGkucGx1Z2lucz10KDMyKSxpLlNjYWxlPXQoMzMpLGkuc2NhbGVTZXJ2aWNlPXQoMzQpLGkuVGlja3M9dCgzNSksaS5Ub29sdGlwPXQoMzYpLHQoMjQpKGkpLHQoMjUpKGkpLHQoNTYpKGkpLHQoNTQpKGkpLHQoNTUpKGkpLHQoNTcpKGkpLHQoNTgpKGkpLHQoNTkpKGkpLHQoMTUpKGkpLHQoMTYpKGkpLHQoMTcpKGkpLHQoMTgpKGkpLHQoMTkpKGkpLHQoMjApKGkpLHQoMjEpKGkpLHQoOCkoaSksdCg5KShpKSx0KDEwKShpKSx0KDExKShpKSx0KDEyKShpKSx0KDEzKShpKSx0KDE0KShpKTt2YXIgYT10KDUwKTtmb3IodmFyIHIgaW4gYSlhLmhhc093blByb3BlcnR5KHIpJiZpLnBsdWdpbnMucmVnaXN0ZXIoYVtyXSk7aS5wbGF0Zm9ybS5pbml0aWFsaXplKCksZS5leHBvcnRzPWksXCJ1bmRlZmluZWRcIiE9dHlwZW9mIHdpbmRvdyYmKHdpbmRvdy5DaGFydD1pKSxpLkxlZ2VuZD1hLmxlZ2VuZC5fZWxlbWVudCxpLlRpdGxlPWEudGl0bGUuX2VsZW1lbnQsaS5wbHVnaW5TZXJ2aWNlPWkucGx1Z2lucyxpLlBsdWdpbkJhc2U9aS5FbGVtZW50LmV4dGVuZCh7fSksaS5jYW52YXNIZWxwZXJzPWkuaGVscGVycy5jYW52YXMsaS5sYXlvdXRTZXJ2aWNlPWkubGF5b3V0c30sezEwOjEwLDExOjExLDEyOjEyLDEzOjEzLDE0OjE0LDE1OjE1LDE2OjE2LDE3OjE3LDE4OjE4LDE5OjE5LDIwOjIwLDIxOjIxLDIyOjIyLDIzOjIzLDI0OjI0LDI1OjI1LDI2OjI2LDI3OjI3LDI4OjI4LDI5OjI5LDMwOjMwLDMxOjMxLDMyOjMyLDMzOjMzLDM0OjM0LDM1OjM1LDM2OjM2LDQxOjQxLDQ2OjQ2LDQ5OjQ5LDUwOjUwLDU0OjU0LDU1OjU1LDU2OjU2LDU3OjU3LDU4OjU4LDU5OjU5LDg6OCw5Ojl9XSw4OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPWZ1bmN0aW9uKG4pe24uQmFyPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIGUudHlwZT1cImJhclwiLG5ldyBuKHQsZSl9fX0se31dLDk6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtlLmV4cG9ydHM9ZnVuY3Rpb24obil7bi5CdWJibGU9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZS50eXBlPVwiYnViYmxlXCIsbmV3IG4odCxlKX19fSx7fV0sMTA6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtlLmV4cG9ydHM9ZnVuY3Rpb24obil7bi5Eb3VnaG51dD1mdW5jdGlvbih0LGUpe3JldHVybiBlLnR5cGU9XCJkb3VnaG51dFwiLG5ldyBuKHQsZSl9fX0se31dLDExOltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPWZ1bmN0aW9uKG4pe24uTGluZT1mdW5jdGlvbih0LGUpe3JldHVybiBlLnR5cGU9XCJsaW5lXCIsbmV3IG4odCxlKX19fSx7fV0sMTI6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtlLmV4cG9ydHM9ZnVuY3Rpb24obil7bi5Qb2xhckFyZWE9ZnVuY3Rpb24odCxlKXtyZXR1cm4gZS50eXBlPVwicG9sYXJBcmVhXCIsbmV3IG4odCxlKX19fSx7fV0sMTM6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtlLmV4cG9ydHM9ZnVuY3Rpb24obil7bi5SYWRhcj1mdW5jdGlvbih0LGUpe3JldHVybiBlLnR5cGU9XCJyYWRhclwiLG5ldyBuKHQsZSl9fX0se31dLDE0OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7ZS5leHBvcnRzPWZ1bmN0aW9uKG4pe24uU2NhdHRlcj1mdW5jdGlvbih0LGUpe3JldHVybiBlLnR5cGU9XCJzY2F0dGVyXCIsbmV3IG4odCxlKX19fSx7fV0sMTU6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT10KDI2KSxhPXQoNDEpLFM9dCg0Nik7aS5fc2V0KFwiYmFyXCIse2hvdmVyOnttb2RlOlwibGFiZWxcIn0sc2NhbGVzOnt4QXhlczpbe3R5cGU6XCJjYXRlZ29yeVwiLGNhdGVnb3J5UGVyY2VudGFnZTouOCxiYXJQZXJjZW50YWdlOi45LG9mZnNldDohMCxncmlkTGluZXM6e29mZnNldEdyaWRMaW5lczohMH19XSx5QXhlczpbe3R5cGU6XCJsaW5lYXJcIn1dfX0pLGkuX3NldChcImhvcml6b250YWxCYXJcIix7aG92ZXI6e21vZGU6XCJpbmRleFwiLGF4aXM6XCJ5XCJ9LHNjYWxlczp7eEF4ZXM6W3t0eXBlOlwibGluZWFyXCIscG9zaXRpb246XCJib3R0b21cIn1dLHlBeGVzOlt7cG9zaXRpb246XCJsZWZ0XCIsdHlwZTpcImNhdGVnb3J5XCIsY2F0ZWdvcnlQZXJjZW50YWdlOi44LGJhclBlcmNlbnRhZ2U6Ljksb2Zmc2V0OiEwLGdyaWRMaW5lczp7b2Zmc2V0R3JpZExpbmVzOiEwfX1dfSxlbGVtZW50czp7cmVjdGFuZ2xlOntib3JkZXJTa2lwcGVkOlwibGVmdFwifX0sdG9vbHRpcHM6e2NhbGxiYWNrczp7dGl0bGU6ZnVuY3Rpb24odCxlKXt2YXIgbj1cIlwiO3JldHVybiAwPHQubGVuZ3RoJiYodFswXS55TGFiZWw/bj10WzBdLnlMYWJlbDowPGUubGFiZWxzLmxlbmd0aCYmdFswXS5pbmRleDxlLmxhYmVscy5sZW5ndGgmJihuPWUubGFiZWxzW3RbMF0uaW5kZXhdKSksbn0sbGFiZWw6ZnVuY3Rpb24odCxlKXtyZXR1cm4oZS5kYXRhc2V0c1t0LmRhdGFzZXRJbmRleF0ubGFiZWx8fFwiXCIpK1wiOiBcIit0LnhMYWJlbH19LG1vZGU6XCJpbmRleFwiLGF4aXM6XCJ5XCJ9fSksZS5leHBvcnRzPWZ1bmN0aW9uKGUpe2UuY29udHJvbGxlcnMuYmFyPWUuRGF0YXNldENvbnRyb2xsZXIuZXh0ZW5kKHtkYXRhRWxlbWVudFR5cGU6YS5SZWN0YW5nbGUsaW5pdGlhbGl6ZTpmdW5jdGlvbigpe3ZhciB0O2UuRGF0YXNldENvbnRyb2xsZXIucHJvdG90eXBlLmluaXRpYWxpemUuYXBwbHkodGhpcyxhcmd1bWVudHMpLCh0PXRoaXMuZ2V0TWV0YSgpKS5zdGFjaz10aGlzLmdldERhdGFzZXQoKS5zdGFjayx0LmJhcj0hMH0sdXBkYXRlOmZ1bmN0aW9uKHQpe3ZhciBlLG4saT10aGlzLmdldE1ldGEoKS5kYXRhO2Zvcih0aGlzLl9ydWxlcj10aGlzLmdldFJ1bGVyKCksZT0wLG49aS5sZW5ndGg7ZTxuOysrZSl0aGlzLnVwZGF0ZUVsZW1lbnQoaVtlXSxlLHQpfSx1cGRhdGVFbGVtZW50OmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzLGE9aS5jaGFydCxyPWkuZ2V0TWV0YSgpLG89aS5nZXREYXRhc2V0KCkscz10LmN1c3RvbXx8e30sbD1hLm9wdGlvbnMuZWxlbWVudHMucmVjdGFuZ2xlO3QuX3hTY2FsZT1pLmdldFNjYWxlRm9ySWQoci54QXhpc0lEKSx0Ll95U2NhbGU9aS5nZXRTY2FsZUZvcklkKHIueUF4aXNJRCksdC5fZGF0YXNldEluZGV4PWkuaW5kZXgsdC5faW5kZXg9ZSx0Ll9tb2RlbD17ZGF0YXNldExhYmVsOm8ubGFiZWwsbGFiZWw6YS5kYXRhLmxhYmVsc1tlXSxib3JkZXJTa2lwcGVkOnMuYm9yZGVyU2tpcHBlZD9zLmJvcmRlclNraXBwZWQ6bC5ib3JkZXJTa2lwcGVkLGJhY2tncm91bmRDb2xvcjpzLmJhY2tncm91bmRDb2xvcj9zLmJhY2tncm91bmRDb2xvcjpTLnZhbHVlQXRJbmRleE9yRGVmYXVsdChvLmJhY2tncm91bmRDb2xvcixlLGwuYmFja2dyb3VuZENvbG9yKSxib3JkZXJDb2xvcjpzLmJvcmRlckNvbG9yP3MuYm9yZGVyQ29sb3I6Uy52YWx1ZUF0SW5kZXhPckRlZmF1bHQoby5ib3JkZXJDb2xvcixlLGwuYm9yZGVyQ29sb3IpLGJvcmRlcldpZHRoOnMuYm9yZGVyV2lkdGg/cy5ib3JkZXJXaWR0aDpTLnZhbHVlQXRJbmRleE9yRGVmYXVsdChvLmJvcmRlcldpZHRoLGUsbC5ib3JkZXJXaWR0aCl9LGkudXBkYXRlRWxlbWVudEdlb21ldHJ5KHQsZSxuKSx0LnBpdm90KCl9LHVwZGF0ZUVsZW1lbnRHZW9tZXRyeTpmdW5jdGlvbih0LGUsbil7dmFyIGk9dGhpcyxhPXQuX21vZGVsLHI9aS5nZXRWYWx1ZVNjYWxlKCksbz1yLmdldEJhc2VQaXhlbCgpLHM9ci5pc0hvcml6b250YWwoKSxsPWkuX3J1bGVyfHxpLmdldFJ1bGVyKCksdT1pLmNhbGN1bGF0ZUJhclZhbHVlUGl4ZWxzKGkuaW5kZXgsZSksZD1pLmNhbGN1bGF0ZUJhckluZGV4UGl4ZWxzKGkuaW5kZXgsZSxsKTthLmhvcml6b250YWw9cyxhLmJhc2U9bj9vOnUuYmFzZSxhLng9cz9uP286dS5oZWFkOmQuY2VudGVyLGEueT1zP2QuY2VudGVyOm4/bzp1LmhlYWQsYS5oZWlnaHQ9cz9kLnNpemU6dm9pZCAwLGEud2lkdGg9cz92b2lkIDA6ZC5zaXplfSxnZXRWYWx1ZVNjYWxlSWQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRNZXRhKCkueUF4aXNJRH0sZ2V0SW5kZXhTY2FsZUlkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0TWV0YSgpLnhBeGlzSUR9LGdldFZhbHVlU2NhbGU6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRTY2FsZUZvcklkKHRoaXMuZ2V0VmFsdWVTY2FsZUlkKCkpfSxnZXRJbmRleFNjYWxlOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0U2NhbGVGb3JJZCh0aGlzLmdldEluZGV4U2NhbGVJZCgpKX0sX2dldFN0YWNrczpmdW5jdGlvbih0KXt2YXIgZSxuLGk9dGhpcy5jaGFydCxhPXRoaXMuZ2V0SW5kZXhTY2FsZSgpLm9wdGlvbnMuc3RhY2tlZCxyPXZvaWQgMD09PXQ/aS5kYXRhLmRhdGFzZXRzLmxlbmd0aDp0KzEsbz1bXTtmb3IoZT0wO2U8cjsrK2UpKG49aS5nZXREYXRhc2V0TWV0YShlKSkuYmFyJiZpLmlzRGF0YXNldFZpc2libGUoZSkmJighMT09PWF8fCEwPT09YSYmLTE9PT1vLmluZGV4T2Yobi5zdGFjayl8fHZvaWQgMD09PWEmJih2b2lkIDA9PT1uLnN0YWNrfHwtMT09PW8uaW5kZXhPZihuLnN0YWNrKSkpJiZvLnB1c2gobi5zdGFjayk7cmV0dXJuIG99LGdldFN0YWNrQ291bnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fZ2V0U3RhY2tzKCkubGVuZ3RofSxnZXRTdGFja0luZGV4OmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5fZ2V0U3RhY2tzKHQpLGk9dm9pZCAwIT09ZT9uLmluZGV4T2YoZSk6LTE7cmV0dXJuLTE9PT1pP24ubGVuZ3RoLTE6aX0sZ2V0UnVsZXI6ZnVuY3Rpb24oKXt2YXIgdCxlLG49dGhpcy5nZXRJbmRleFNjYWxlKCksaT10aGlzLmdldFN0YWNrQ291bnQoKSxhPXRoaXMuaW5kZXgscj1uLmlzSG9yaXpvbnRhbCgpLG89cj9uLmxlZnQ6bi50b3Ascz1vKyhyP24ud2lkdGg6bi5oZWlnaHQpLGw9W107Zm9yKHQ9MCxlPXRoaXMuZ2V0TWV0YSgpLmRhdGEubGVuZ3RoO3Q8ZTsrK3QpbC5wdXNoKG4uZ2V0UGl4ZWxGb3JWYWx1ZShudWxsLHQsYSkpO3JldHVybnttaW46Uy5pc051bGxPclVuZGVmKG4ub3B0aW9ucy5iYXJUaGlja25lc3MpP2Z1bmN0aW9uKHQsZSl7dmFyIG4saSxhLHIsbz10LmlzSG9yaXpvbnRhbCgpP3Qud2lkdGg6dC5oZWlnaHQscz10LmdldFRpY2tzKCk7Zm9yKGE9MSxyPWUubGVuZ3RoO2E8cjsrK2Epbz1NYXRoLm1pbihvLGVbYV0tZVthLTFdKTtmb3IoYT0wLHI9cy5sZW5ndGg7YTxyOysrYSlpPXQuZ2V0UGl4ZWxGb3JUaWNrKGEpLG89MDxhP01hdGgubWluKG8saS1uKTpvLG49aTtyZXR1cm4gb30obixsKTotMSxwaXhlbHM6bCxzdGFydDpvLGVuZDpzLHN0YWNrQ291bnQ6aSxzY2FsZTpufX0sY2FsY3VsYXRlQmFyVmFsdWVQaXhlbHM6ZnVuY3Rpb24odCxlKXt2YXIgbixpLGEscixvLHMsbD10aGlzLmNoYXJ0LHU9dGhpcy5nZXRNZXRhKCksZD10aGlzLmdldFZhbHVlU2NhbGUoKSxoPWwuZGF0YS5kYXRhc2V0cyxjPWQuZ2V0UmlnaHRWYWx1ZShoW3RdLmRhdGFbZV0pLGY9ZC5vcHRpb25zLnN0YWNrZWQsZz11LnN0YWNrLG09MDtpZihmfHx2b2lkIDA9PT1mJiZ2b2lkIDAhPT1nKWZvcihuPTA7bjx0OysrbikoaT1sLmdldERhdGFzZXRNZXRhKG4pKS5iYXImJmkuc3RhY2s9PT1nJiZpLmNvbnRyb2xsZXIuZ2V0VmFsdWVTY2FsZUlkKCk9PT1kLmlkJiZsLmlzRGF0YXNldFZpc2libGUobikmJihhPWQuZ2V0UmlnaHRWYWx1ZShoW25dLmRhdGFbZV0pLChjPDAmJmE8MHx8MDw9YyYmMDxhKSYmKG0rPWEpKTtyZXR1cm4gcj1kLmdldFBpeGVsRm9yVmFsdWUobSkse3NpemU6cz0oKG89ZC5nZXRQaXhlbEZvclZhbHVlKG0rYykpLXIpLzIsYmFzZTpyLGhlYWQ6byxjZW50ZXI6bytzLzJ9fSxjYWxjdWxhdGVCYXJJbmRleFBpeGVsczpmdW5jdGlvbih0LGUsbil7dmFyIGksYSxyLG8scyxsLHUsZCxoLGMsZixnLG0scCx2LGIseSx4PW4uc2NhbGUub3B0aW9ucyxfPVwiZmxleFwiPT09eC5iYXJUaGlja25lc3M/KGg9ZSxmPXgsbT0oYz1uKS5waXhlbHMscD1tW2hdLHY9MDxoP21baC0xXTpudWxsLGI9aDxtLmxlbmd0aC0xP21baCsxXTpudWxsLHk9Zi5jYXRlZ29yeVBlcmNlbnRhZ2UsbnVsbD09PXYmJih2PXAtKG51bGw9PT1iP2MuZW5kLXA6Yi1wKSksbnVsbD09PWImJihiPXArcC12KSxnPXAtKHAtdikvMip5LHtjaHVuazooYi12KS8yKnkvYy5zdGFja0NvdW50LHJhdGlvOmYuYmFyUGVyY2VudGFnZSxzdGFydDpnfSk6KGk9ZSxhPW4sbD0ocj14KS5iYXJUaGlja25lc3MsdT1hLnN0YWNrQ291bnQsZD1hLnBpeGVsc1tpXSxzPVMuaXNOdWxsT3JVbmRlZihsKT8obz1hLm1pbipyLmNhdGVnb3J5UGVyY2VudGFnZSxyLmJhclBlcmNlbnRhZ2UpOihvPWwqdSwxKSx7Y2h1bms6by91LHJhdGlvOnMsc3RhcnQ6ZC1vLzJ9KSxrPXRoaXMuZ2V0U3RhY2tJbmRleCh0LHRoaXMuZ2V0TWV0YSgpLnN0YWNrKSx3PV8uc3RhcnQrXy5jaHVuayprK18uY2h1bmsvMixNPU1hdGgubWluKFMudmFsdWVPckRlZmF1bHQoeC5tYXhCYXJUaGlja25lc3MsMS8wKSxfLmNodW5rKl8ucmF0aW8pO3JldHVybntiYXNlOnctTS8yLGhlYWQ6dytNLzIsY2VudGVyOncsc2l6ZTpNfX0sZHJhdzpmdW5jdGlvbigpe3ZhciB0PXRoaXMuY2hhcnQsZT10aGlzLmdldFZhbHVlU2NhbGUoKSxuPXRoaXMuZ2V0TWV0YSgpLmRhdGEsaT10aGlzLmdldERhdGFzZXQoKSxhPW4ubGVuZ3RoLHI9MDtmb3IoUy5jYW52YXMuY2xpcEFyZWEodC5jdHgsdC5jaGFydEFyZWEpO3I8YTsrK3IpaXNOYU4oZS5nZXRSaWdodFZhbHVlKGkuZGF0YVtyXSkpfHxuW3JdLmRyYXcoKTtTLmNhbnZhcy51bmNsaXBBcmVhKHQuY3R4KX19KSxlLmNvbnRyb2xsZXJzLmhvcml6b250YWxCYXI9ZS5jb250cm9sbGVycy5iYXIuZXh0ZW5kKHtnZXRWYWx1ZVNjYWxlSWQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5nZXRNZXRhKCkueEF4aXNJRH0sZ2V0SW5kZXhTY2FsZUlkOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZ2V0TWV0YSgpLnlBeGlzSUR9fSl9fSx7MjY6MjYsNDE6NDEsNDY6NDZ9XSwxNjpbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPXQoMjYpLGE9dCg0MSksZz10KDQ2KTtpLl9zZXQoXCJidWJibGVcIix7aG92ZXI6e21vZGU6XCJzaW5nbGVcIn0sc2NhbGVzOnt4QXhlczpbe3R5cGU6XCJsaW5lYXJcIixwb3NpdGlvbjpcImJvdHRvbVwiLGlkOlwieC1heGlzLTBcIn1dLHlBeGVzOlt7dHlwZTpcImxpbmVhclwiLHBvc2l0aW9uOlwibGVmdFwiLGlkOlwieS1heGlzLTBcIn1dfSx0b29sdGlwczp7Y2FsbGJhY2tzOnt0aXRsZTpmdW5jdGlvbigpe3JldHVyblwiXCJ9LGxhYmVsOmZ1bmN0aW9uKHQsZSl7dmFyIG49ZS5kYXRhc2V0c1t0LmRhdGFzZXRJbmRleF0ubGFiZWx8fFwiXCIsaT1lLmRhdGFzZXRzW3QuZGF0YXNldEluZGV4XS5kYXRhW3QuaW5kZXhdO3JldHVybiBuK1wiOiAoXCIrdC54TGFiZWwrXCIsIFwiK3QueUxhYmVsK1wiLCBcIitpLnIrXCIpXCJ9fX19KSxlLmV4cG9ydHM9ZnVuY3Rpb24odCl7dC5jb250cm9sbGVycy5idWJibGU9dC5EYXRhc2V0Q29udHJvbGxlci5leHRlbmQoe2RhdGFFbGVtZW50VHlwZTphLlBvaW50LHVwZGF0ZTpmdW5jdGlvbihuKXt2YXIgaT10aGlzLHQ9aS5nZXRNZXRhKCkuZGF0YTtnLmVhY2godCxmdW5jdGlvbih0LGUpe2kudXBkYXRlRWxlbWVudCh0LGUsbil9KX0sdXBkYXRlRWxlbWVudDpmdW5jdGlvbih0LGUsbil7dmFyIGk9dGhpcyxhPWkuZ2V0TWV0YSgpLHI9dC5jdXN0b218fHt9LG89aS5nZXRTY2FsZUZvcklkKGEueEF4aXNJRCkscz1pLmdldFNjYWxlRm9ySWQoYS55QXhpc0lEKSxsPWkuX3Jlc29sdmVFbGVtZW50T3B0aW9ucyh0LGUpLHU9aS5nZXREYXRhc2V0KCkuZGF0YVtlXSxkPWkuaW5kZXgsaD1uP28uZ2V0UGl4ZWxGb3JEZWNpbWFsKC41KTpvLmdldFBpeGVsRm9yVmFsdWUoXCJvYmplY3RcIj09dHlwZW9mIHU/dTpOYU4sZSxkKSxjPW4/cy5nZXRCYXNlUGl4ZWwoKTpzLmdldFBpeGVsRm9yVmFsdWUodSxlLGQpO3QuX3hTY2FsZT1vLHQuX3lTY2FsZT1zLHQuX29wdGlvbnM9bCx0Ll9kYXRhc2V0SW5kZXg9ZCx0Ll9pbmRleD1lLHQuX21vZGVsPXtiYWNrZ3JvdW5kQ29sb3I6bC5iYWNrZ3JvdW5kQ29sb3IsYm9yZGVyQ29sb3I6bC5ib3JkZXJDb2xvcixib3JkZXJXaWR0aDpsLmJvcmRlcldpZHRoLGhpdFJhZGl1czpsLmhpdFJhZGl1cyxwb2ludFN0eWxlOmwucG9pbnRTdHlsZSxyb3RhdGlvbjpsLnJvdGF0aW9uLHJhZGl1czpuPzA6bC5yYWRpdXMsc2tpcDpyLnNraXB8fGlzTmFOKGgpfHxpc05hTihjKSx4OmgseTpjfSx0LnBpdm90KCl9LHNldEhvdmVyU3R5bGU6ZnVuY3Rpb24odCl7dmFyIGU9dC5fbW9kZWwsbj10Ll9vcHRpb25zO3QuJHByZXZpb3VzU3R5bGU9e2JhY2tncm91bmRDb2xvcjplLmJhY2tncm91bmRDb2xvcixib3JkZXJDb2xvcjplLmJvcmRlckNvbG9yLGJvcmRlcldpZHRoOmUuYm9yZGVyV2lkdGgscmFkaXVzOmUucmFkaXVzfSxlLmJhY2tncm91bmRDb2xvcj1nLnZhbHVlT3JEZWZhdWx0KG4uaG92ZXJCYWNrZ3JvdW5kQ29sb3IsZy5nZXRIb3ZlckNvbG9yKG4uYmFja2dyb3VuZENvbG9yKSksZS5ib3JkZXJDb2xvcj1nLnZhbHVlT3JEZWZhdWx0KG4uaG92ZXJCb3JkZXJDb2xvcixnLmdldEhvdmVyQ29sb3Iobi5ib3JkZXJDb2xvcikpLGUuYm9yZGVyV2lkdGg9Zy52YWx1ZU9yRGVmYXVsdChuLmhvdmVyQm9yZGVyV2lkdGgsbi5ib3JkZXJXaWR0aCksZS5yYWRpdXM9bi5yYWRpdXMrbi5ob3ZlclJhZGl1c30sX3Jlc29sdmVFbGVtZW50T3B0aW9uczpmdW5jdGlvbih0LGUpe3ZhciBuLGksYSxyPXRoaXMuY2hhcnQsbz1yLmRhdGEuZGF0YXNldHNbdGhpcy5pbmRleF0scz10LmN1c3RvbXx8e30sbD1yLm9wdGlvbnMuZWxlbWVudHMucG9pbnQsdT1nLm9wdGlvbnMucmVzb2x2ZSxkPW8uZGF0YVtlXSxoPXt9LGM9e2NoYXJ0OnIsZGF0YUluZGV4OmUsZGF0YXNldDpvLGRhdGFzZXRJbmRleDp0aGlzLmluZGV4fSxmPVtcImJhY2tncm91bmRDb2xvclwiLFwiYm9yZGVyQ29sb3JcIixcImJvcmRlcldpZHRoXCIsXCJob3ZlckJhY2tncm91bmRDb2xvclwiLFwiaG92ZXJCb3JkZXJDb2xvclwiLFwiaG92ZXJCb3JkZXJXaWR0aFwiLFwiaG92ZXJSYWRpdXNcIixcImhpdFJhZGl1c1wiLFwicG9pbnRTdHlsZVwiLFwicm90YXRpb25cIl07Zm9yKG49MCxpPWYubGVuZ3RoO248aTsrK24paFthPWZbbl1dPXUoW3NbYV0sb1thXSxsW2FdXSxjLGUpO3JldHVybiBoLnJhZGl1cz11KFtzLnJhZGl1cyxkP2Qucjp2b2lkIDAsby5yYWRpdXMsbC5yYWRpdXNdLGMsZSksaH19KX19LHsyNjoyNiw0MTo0MSw0Njo0Nn1dLDE3OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9dCgyNiksYT10KDQxKSxPPXQoNDYpO2kuX3NldChcImRvdWdobnV0XCIse2FuaW1hdGlvbjp7YW5pbWF0ZVJvdGF0ZTohMCxhbmltYXRlU2NhbGU6ITF9LGhvdmVyOnttb2RlOlwic2luZ2xlXCJ9LGxlZ2VuZENhbGxiYWNrOmZ1bmN0aW9uKHQpe3ZhciBlPVtdO2UucHVzaCgnPHVsIGNsYXNzPVwiJyt0LmlkKyctbGVnZW5kXCI+Jyk7dmFyIG49dC5kYXRhLGk9bi5kYXRhc2V0cyxhPW4ubGFiZWxzO2lmKGkubGVuZ3RoKWZvcih2YXIgcj0wO3I8aVswXS5kYXRhLmxlbmd0aDsrK3IpZS5wdXNoKCc8bGk+PHNwYW4gc3R5bGU9XCJiYWNrZ3JvdW5kLWNvbG9yOicraVswXS5iYWNrZ3JvdW5kQ29sb3Jbcl0rJ1wiPjwvc3Bhbj4nKSxhW3JdJiZlLnB1c2goYVtyXSksZS5wdXNoKFwiPC9saT5cIik7cmV0dXJuIGUucHVzaChcIjwvdWw+XCIpLGUuam9pbihcIlwiKX0sbGVnZW5kOntsYWJlbHM6e2dlbmVyYXRlTGFiZWxzOmZ1bmN0aW9uKGwpe3ZhciB1PWwuZGF0YTtyZXR1cm4gdS5sYWJlbHMubGVuZ3RoJiZ1LmRhdGFzZXRzLmxlbmd0aD91LmxhYmVscy5tYXAoZnVuY3Rpb24odCxlKXt2YXIgbj1sLmdldERhdGFzZXRNZXRhKDApLGk9dS5kYXRhc2V0c1swXSxhPW4uZGF0YVtlXSxyPWEmJmEuY3VzdG9tfHx7fSxvPU8udmFsdWVBdEluZGV4T3JEZWZhdWx0LHM9bC5vcHRpb25zLmVsZW1lbnRzLmFyYztyZXR1cm57dGV4dDp0LGZpbGxTdHlsZTpyLmJhY2tncm91bmRDb2xvcj9yLmJhY2tncm91bmRDb2xvcjpvKGkuYmFja2dyb3VuZENvbG9yLGUscy5iYWNrZ3JvdW5kQ29sb3IpLHN0cm9rZVN0eWxlOnIuYm9yZGVyQ29sb3I/ci5ib3JkZXJDb2xvcjpvKGkuYm9yZGVyQ29sb3IsZSxzLmJvcmRlckNvbG9yKSxsaW5lV2lkdGg6ci5ib3JkZXJXaWR0aD9yLmJvcmRlcldpZHRoOm8oaS5ib3JkZXJXaWR0aCxlLHMuYm9yZGVyV2lkdGgpLGhpZGRlbjppc05hTihpLmRhdGFbZV0pfHxuLmRhdGFbZV0uaGlkZGVuLGluZGV4OmV9fSk6W119fSxvbkNsaWNrOmZ1bmN0aW9uKHQsZSl7dmFyIG4saSxhLHI9ZS5pbmRleCxvPXRoaXMuY2hhcnQ7Zm9yKG49MCxpPShvLmRhdGEuZGF0YXNldHN8fFtdKS5sZW5ndGg7bjxpOysrbikoYT1vLmdldERhdGFzZXRNZXRhKG4pKS5kYXRhW3JdJiYoYS5kYXRhW3JdLmhpZGRlbj0hYS5kYXRhW3JdLmhpZGRlbik7by51cGRhdGUoKX19LGN1dG91dFBlcmNlbnRhZ2U6NTAscm90YXRpb246LS41Kk1hdGguUEksY2lyY3VtZmVyZW5jZToyKk1hdGguUEksdG9vbHRpcHM6e2NhbGxiYWNrczp7dGl0bGU6ZnVuY3Rpb24oKXtyZXR1cm5cIlwifSxsYWJlbDpmdW5jdGlvbih0LGUpe3ZhciBuPWUubGFiZWxzW3QuaW5kZXhdLGk9XCI6IFwiK2UuZGF0YXNldHNbdC5kYXRhc2V0SW5kZXhdLmRhdGFbdC5pbmRleF07cmV0dXJuIE8uaXNBcnJheShuKT8obj1uLnNsaWNlKCkpWzBdKz1pOm4rPWksbn19fX0pLGkuX3NldChcInBpZVwiLE8uY2xvbmUoaS5kb3VnaG51dCkpLGkuX3NldChcInBpZVwiLHtjdXRvdXRQZXJjZW50YWdlOjB9KSxlLmV4cG9ydHM9ZnVuY3Rpb24odCl7dC5jb250cm9sbGVycy5kb3VnaG51dD10LmNvbnRyb2xsZXJzLnBpZT10LkRhdGFzZXRDb250cm9sbGVyLmV4dGVuZCh7ZGF0YUVsZW1lbnRUeXBlOmEuQXJjLGxpbmtTY2FsZXM6Ty5ub29wLGdldFJpbmdJbmRleDpmdW5jdGlvbih0KXtmb3IodmFyIGU9MCxuPTA7bjx0Oysrbil0aGlzLmNoYXJ0LmlzRGF0YXNldFZpc2libGUobikmJisrZTtyZXR1cm4gZX0sdXBkYXRlOmZ1bmN0aW9uKG4pe3ZhciBpPXRoaXMsdD1pLmNoYXJ0LGU9dC5jaGFydEFyZWEsYT10Lm9wdGlvbnMscj1hLmVsZW1lbnRzLmFyYyxvPWUucmlnaHQtZS5sZWZ0LXIuYm9yZGVyV2lkdGgscz1lLmJvdHRvbS1lLnRvcC1yLmJvcmRlcldpZHRoLGw9TWF0aC5taW4obyxzKSx1PXt4OjAseTowfSxkPWkuZ2V0TWV0YSgpLGg9YS5jdXRvdXRQZXJjZW50YWdlLGM9YS5jaXJjdW1mZXJlbmNlO2lmKGM8MipNYXRoLlBJKXt2YXIgZj1hLnJvdGF0aW9uJSgyKk1hdGguUEkpLGc9KGYrPTIqTWF0aC5QSSooZj49TWF0aC5QST8tMTpmPC1NYXRoLlBJPzE6MCkpK2MsbT1NYXRoLmNvcyhmKSxwPU1hdGguc2luKGYpLHY9TWF0aC5jb3MoZyksYj1NYXRoLnNpbihnKSx5PWY8PTAmJjA8PWd8fGY8PTIqTWF0aC5QSSYmMipNYXRoLlBJPD1nLHg9Zjw9LjUqTWF0aC5QSSYmLjUqTWF0aC5QSTw9Z3x8Zjw9Mi41Kk1hdGguUEkmJjIuNSpNYXRoLlBJPD1nLF89Zjw9LU1hdGguUEkmJi1NYXRoLlBJPD1nfHxmPD1NYXRoLlBJJiZNYXRoLlBJPD1nLGs9Zjw9LjUqLU1hdGguUEkmJi41Ki1NYXRoLlBJPD1nfHxmPD0xLjUqTWF0aC5QSSYmMS41Kk1hdGguUEk8PWcsdz1oLzEwMCxNPV8/LTE6TWF0aC5taW4obSoobTwwPzE6dyksdioodjwwPzE6dykpLFM9az8tMTpNYXRoLm1pbihwKihwPDA/MTp3KSxiKihiPDA/MTp3KSksRD15PzE6TWF0aC5tYXgobSooMDxtPzE6dyksdiooMDx2PzE6dykpLEM9eD8xOk1hdGgubWF4KHAqKDA8cD8xOncpLGIqKDA8Yj8xOncpKSxQPS41KihELU0pLFQ9LjUqKEMtUyk7bD1NYXRoLm1pbihvL1Ascy9UKSx1PXt4Oi0uNSooRCtNKSx5Oi0uNSooQytTKX19dC5ib3JkZXJXaWR0aD1pLmdldE1heEJvcmRlcldpZHRoKGQuZGF0YSksdC5vdXRlclJhZGl1cz1NYXRoLm1heCgobC10LmJvcmRlcldpZHRoKS8yLDApLHQuaW5uZXJSYWRpdXM9TWF0aC5tYXgoaD90Lm91dGVyUmFkaXVzLzEwMCpoOjAsMCksdC5yYWRpdXNMZW5ndGg9KHQub3V0ZXJSYWRpdXMtdC5pbm5lclJhZGl1cykvdC5nZXRWaXNpYmxlRGF0YXNldENvdW50KCksdC5vZmZzZXRYPXUueCp0Lm91dGVyUmFkaXVzLHQub2Zmc2V0WT11LnkqdC5vdXRlclJhZGl1cyxkLnRvdGFsPWkuY2FsY3VsYXRlVG90YWwoKSxpLm91dGVyUmFkaXVzPXQub3V0ZXJSYWRpdXMtdC5yYWRpdXNMZW5ndGgqaS5nZXRSaW5nSW5kZXgoaS5pbmRleCksaS5pbm5lclJhZGl1cz1NYXRoLm1heChpLm91dGVyUmFkaXVzLXQucmFkaXVzTGVuZ3RoLDApLE8uZWFjaChkLmRhdGEsZnVuY3Rpb24odCxlKXtpLnVwZGF0ZUVsZW1lbnQodCxlLG4pfSl9LHVwZGF0ZUVsZW1lbnQ6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXMsYT1pLmNoYXJ0LHI9YS5jaGFydEFyZWEsbz1hLm9wdGlvbnMscz1vLmFuaW1hdGlvbixsPShyLmxlZnQrci5yaWdodCkvMix1PShyLnRvcCtyLmJvdHRvbSkvMixkPW8ucm90YXRpb24saD1vLnJvdGF0aW9uLGM9aS5nZXREYXRhc2V0KCksZj1uJiZzLmFuaW1hdGVSb3RhdGU/MDp0LmhpZGRlbj8wOmkuY2FsY3VsYXRlQ2lyY3VtZmVyZW5jZShjLmRhdGFbZV0pKihvLmNpcmN1bWZlcmVuY2UvKDIqTWF0aC5QSSkpLGc9biYmcy5hbmltYXRlU2NhbGU/MDppLmlubmVyUmFkaXVzLG09biYmcy5hbmltYXRlU2NhbGU/MDppLm91dGVyUmFkaXVzLHA9Ty52YWx1ZUF0SW5kZXhPckRlZmF1bHQ7Ty5leHRlbmQodCx7X2RhdGFzZXRJbmRleDppLmluZGV4LF9pbmRleDplLF9tb2RlbDp7eDpsK2Eub2Zmc2V0WCx5OnUrYS5vZmZzZXRZLHN0YXJ0QW5nbGU6ZCxlbmRBbmdsZTpoLGNpcmN1bWZlcmVuY2U6ZixvdXRlclJhZGl1czptLGlubmVyUmFkaXVzOmcsbGFiZWw6cChjLmxhYmVsLGUsYS5kYXRhLmxhYmVsc1tlXSl9fSk7dmFyIHY9dC5fbW9kZWwsYj10LmN1c3RvbXx8e30seT1PLnZhbHVlQXRJbmRleE9yRGVmYXVsdCx4PXRoaXMuY2hhcnQub3B0aW9ucy5lbGVtZW50cy5hcmM7di5iYWNrZ3JvdW5kQ29sb3I9Yi5iYWNrZ3JvdW5kQ29sb3I/Yi5iYWNrZ3JvdW5kQ29sb3I6eShjLmJhY2tncm91bmRDb2xvcixlLHguYmFja2dyb3VuZENvbG9yKSx2LmJvcmRlckNvbG9yPWIuYm9yZGVyQ29sb3I/Yi5ib3JkZXJDb2xvcjp5KGMuYm9yZGVyQ29sb3IsZSx4LmJvcmRlckNvbG9yKSx2LmJvcmRlcldpZHRoPWIuYm9yZGVyV2lkdGg/Yi5ib3JkZXJXaWR0aDp5KGMuYm9yZGVyV2lkdGgsZSx4LmJvcmRlcldpZHRoKSxuJiZzLmFuaW1hdGVSb3RhdGV8fCh2LnN0YXJ0QW5nbGU9MD09PWU/by5yb3RhdGlvbjppLmdldE1ldGEoKS5kYXRhW2UtMV0uX21vZGVsLmVuZEFuZ2xlLHYuZW5kQW5nbGU9di5zdGFydEFuZ2xlK3YuY2lyY3VtZmVyZW5jZSksdC5waXZvdCgpfSxjYWxjdWxhdGVUb3RhbDpmdW5jdGlvbigpe3ZhciBuLGk9dGhpcy5nZXREYXRhc2V0KCksdD10aGlzLmdldE1ldGEoKSxhPTA7cmV0dXJuIE8uZWFjaCh0LmRhdGEsZnVuY3Rpb24odCxlKXtuPWkuZGF0YVtlXSxpc05hTihuKXx8dC5oaWRkZW58fChhKz1NYXRoLmFicyhuKSl9KSxhfSxjYWxjdWxhdGVDaXJjdW1mZXJlbmNlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZ2V0TWV0YSgpLnRvdGFsO3JldHVybiAwPGUmJiFpc05hTih0KT8yKk1hdGguUEkqKE1hdGguYWJzKHQpL2UpOjB9LGdldE1heEJvcmRlcldpZHRoOmZ1bmN0aW9uKHQpe2Zvcih2YXIgZSxuLGk9MCxhPXRoaXMuaW5kZXgscj10Lmxlbmd0aCxvPTA7bzxyO28rKylpPShpPWk8KGU9dFtvXS5fbW9kZWw/dFtvXS5fbW9kZWwuYm9yZGVyV2lkdGg6MCk/ZTppKTwobj10W29dLl9jaGFydD90W29dLl9jaGFydC5jb25maWcuZGF0YS5kYXRhc2V0c1thXS5ob3ZlckJvcmRlcldpZHRoOjApP246aTtyZXR1cm4gaX19KX19LHsyNjoyNiw0MTo0MSw0Njo0Nn1dLDE4OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9dCgyNiksYT10KDQxKSxnPXQoNDYpO2kuX3NldChcImxpbmVcIix7c2hvd0xpbmVzOiEwLHNwYW5HYXBzOiExLGhvdmVyOnttb2RlOlwibGFiZWxcIn0sc2NhbGVzOnt4QXhlczpbe3R5cGU6XCJjYXRlZ29yeVwiLGlkOlwieC1heGlzLTBcIn1dLHlBeGVzOlt7dHlwZTpcImxpbmVhclwiLGlkOlwieS1heGlzLTBcIn1dfX0pLGUuZXhwb3J0cz1mdW5jdGlvbih0KXtmdW5jdGlvbiBmKHQsZSl7cmV0dXJuIGcudmFsdWVPckRlZmF1bHQodC5zaG93TGluZSxlLnNob3dMaW5lcyl9dC5jb250cm9sbGVycy5saW5lPXQuRGF0YXNldENvbnRyb2xsZXIuZXh0ZW5kKHtkYXRhc2V0RWxlbWVudFR5cGU6YS5MaW5lLGRhdGFFbGVtZW50VHlwZTphLlBvaW50LHVwZGF0ZTpmdW5jdGlvbih0KXt2YXIgZSxuLGksYT10aGlzLHI9YS5nZXRNZXRhKCksbz1yLmRhdGFzZXQscz1yLmRhdGF8fFtdLGw9YS5jaGFydC5vcHRpb25zLHU9bC5lbGVtZW50cy5saW5lLGQ9YS5nZXRTY2FsZUZvcklkKHIueUF4aXNJRCksaD1hLmdldERhdGFzZXQoKSxjPWYoaCxsKTtmb3IoYyYmKGk9by5jdXN0b218fHt9LHZvaWQgMCE9PWgudGVuc2lvbiYmdm9pZCAwPT09aC5saW5lVGVuc2lvbiYmKGgubGluZVRlbnNpb249aC50ZW5zaW9uKSxvLl9zY2FsZT1kLG8uX2RhdGFzZXRJbmRleD1hLmluZGV4LG8uX2NoaWxkcmVuPXMsby5fbW9kZWw9e3NwYW5HYXBzOmguc3BhbkdhcHM/aC5zcGFuR2FwczpsLnNwYW5HYXBzLHRlbnNpb246aS50ZW5zaW9uP2kudGVuc2lvbjpnLnZhbHVlT3JEZWZhdWx0KGgubGluZVRlbnNpb24sdS50ZW5zaW9uKSxiYWNrZ3JvdW5kQ29sb3I6aS5iYWNrZ3JvdW5kQ29sb3I/aS5iYWNrZ3JvdW5kQ29sb3I6aC5iYWNrZ3JvdW5kQ29sb3J8fHUuYmFja2dyb3VuZENvbG9yLGJvcmRlcldpZHRoOmkuYm9yZGVyV2lkdGg/aS5ib3JkZXJXaWR0aDpoLmJvcmRlcldpZHRofHx1LmJvcmRlcldpZHRoLGJvcmRlckNvbG9yOmkuYm9yZGVyQ29sb3I/aS5ib3JkZXJDb2xvcjpoLmJvcmRlckNvbG9yfHx1LmJvcmRlckNvbG9yLGJvcmRlckNhcFN0eWxlOmkuYm9yZGVyQ2FwU3R5bGU/aS5ib3JkZXJDYXBTdHlsZTpoLmJvcmRlckNhcFN0eWxlfHx1LmJvcmRlckNhcFN0eWxlLGJvcmRlckRhc2g6aS5ib3JkZXJEYXNoP2kuYm9yZGVyRGFzaDpoLmJvcmRlckRhc2h8fHUuYm9yZGVyRGFzaCxib3JkZXJEYXNoT2Zmc2V0OmkuYm9yZGVyRGFzaE9mZnNldD9pLmJvcmRlckRhc2hPZmZzZXQ6aC5ib3JkZXJEYXNoT2Zmc2V0fHx1LmJvcmRlckRhc2hPZmZzZXQsYm9yZGVySm9pblN0eWxlOmkuYm9yZGVySm9pblN0eWxlP2kuYm9yZGVySm9pblN0eWxlOmguYm9yZGVySm9pblN0eWxlfHx1LmJvcmRlckpvaW5TdHlsZSxmaWxsOmkuZmlsbD9pLmZpbGw6dm9pZCAwIT09aC5maWxsP2guZmlsbDp1LmZpbGwsc3RlcHBlZExpbmU6aS5zdGVwcGVkTGluZT9pLnN0ZXBwZWRMaW5lOmcudmFsdWVPckRlZmF1bHQoaC5zdGVwcGVkTGluZSx1LnN0ZXBwZWQpLGN1YmljSW50ZXJwb2xhdGlvbk1vZGU6aS5jdWJpY0ludGVycG9sYXRpb25Nb2RlP2kuY3ViaWNJbnRlcnBvbGF0aW9uTW9kZTpnLnZhbHVlT3JEZWZhdWx0KGguY3ViaWNJbnRlcnBvbGF0aW9uTW9kZSx1LmN1YmljSW50ZXJwb2xhdGlvbk1vZGUpfSxvLnBpdm90KCkpLGU9MCxuPXMubGVuZ3RoO2U8bjsrK2UpYS51cGRhdGVFbGVtZW50KHNbZV0sZSx0KTtmb3IoYyYmMCE9PW8uX21vZGVsLnRlbnNpb24mJmEudXBkYXRlQmV6aWVyQ29udHJvbFBvaW50cygpLGU9MCxuPXMubGVuZ3RoO2U8bjsrK2Upc1tlXS5waXZvdCgpfSxnZXRQb2ludEJhY2tncm91bmRDb2xvcjpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuY2hhcnQub3B0aW9ucy5lbGVtZW50cy5wb2ludC5iYWNrZ3JvdW5kQ29sb3IsaT10aGlzLmdldERhdGFzZXQoKSxhPXQuY3VzdG9tfHx7fTtyZXR1cm4gYS5iYWNrZ3JvdW5kQ29sb3I/bj1hLmJhY2tncm91bmRDb2xvcjppLnBvaW50QmFja2dyb3VuZENvbG9yP249Zy52YWx1ZUF0SW5kZXhPckRlZmF1bHQoaS5wb2ludEJhY2tncm91bmRDb2xvcixlLG4pOmkuYmFja2dyb3VuZENvbG9yJiYobj1pLmJhY2tncm91bmRDb2xvciksbn0sZ2V0UG9pbnRCb3JkZXJDb2xvcjpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuY2hhcnQub3B0aW9ucy5lbGVtZW50cy5wb2ludC5ib3JkZXJDb2xvcixpPXRoaXMuZ2V0RGF0YXNldCgpLGE9dC5jdXN0b218fHt9O3JldHVybiBhLmJvcmRlckNvbG9yP249YS5ib3JkZXJDb2xvcjppLnBvaW50Qm9yZGVyQ29sb3I/bj1nLnZhbHVlQXRJbmRleE9yRGVmYXVsdChpLnBvaW50Qm9yZGVyQ29sb3IsZSxuKTppLmJvcmRlckNvbG9yJiYobj1pLmJvcmRlckNvbG9yKSxufSxnZXRQb2ludEJvcmRlcldpZHRoOmZ1bmN0aW9uKHQsZSl7dmFyIG49dGhpcy5jaGFydC5vcHRpb25zLmVsZW1lbnRzLnBvaW50LmJvcmRlcldpZHRoLGk9dGhpcy5nZXREYXRhc2V0KCksYT10LmN1c3RvbXx8e307cmV0dXJuIGlzTmFOKGEuYm9yZGVyV2lkdGgpPyFpc05hTihpLnBvaW50Qm9yZGVyV2lkdGgpfHxnLmlzQXJyYXkoaS5wb2ludEJvcmRlcldpZHRoKT9uPWcudmFsdWVBdEluZGV4T3JEZWZhdWx0KGkucG9pbnRCb3JkZXJXaWR0aCxlLG4pOmlzTmFOKGkuYm9yZGVyV2lkdGgpfHwobj1pLmJvcmRlcldpZHRoKTpuPWEuYm9yZGVyV2lkdGgsbn0sZ2V0UG9pbnRSb3RhdGlvbjpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuY2hhcnQub3B0aW9ucy5lbGVtZW50cy5wb2ludC5yb3RhdGlvbixpPXRoaXMuZ2V0RGF0YXNldCgpLGE9dC5jdXN0b218fHt9O3JldHVybiBpc05hTihhLnJvdGF0aW9uKT9pc05hTihpLnBvaW50Um90YXRpb24pJiYhZy5pc0FycmF5KGkucG9pbnRSb3RhdGlvbil8fChuPWcudmFsdWVBdEluZGV4T3JEZWZhdWx0KGkucG9pbnRSb3RhdGlvbixlLG4pKTpuPWEucm90YXRpb24sbn0sdXBkYXRlRWxlbWVudDpmdW5jdGlvbih0LGUsbil7dmFyIGksYSxyPXRoaXMsbz1yLmdldE1ldGEoKSxzPXQuY3VzdG9tfHx7fSxsPXIuZ2V0RGF0YXNldCgpLHU9ci5pbmRleCxkPWwuZGF0YVtlXSxoPXIuZ2V0U2NhbGVGb3JJZChvLnlBeGlzSUQpLGM9ci5nZXRTY2FsZUZvcklkKG8ueEF4aXNJRCksZj1yLmNoYXJ0Lm9wdGlvbnMuZWxlbWVudHMucG9pbnQ7dm9pZCAwIT09bC5yYWRpdXMmJnZvaWQgMD09PWwucG9pbnRSYWRpdXMmJihsLnBvaW50UmFkaXVzPWwucmFkaXVzKSx2b2lkIDAhPT1sLmhpdFJhZGl1cyYmdm9pZCAwPT09bC5wb2ludEhpdFJhZGl1cyYmKGwucG9pbnRIaXRSYWRpdXM9bC5oaXRSYWRpdXMpLGk9Yy5nZXRQaXhlbEZvclZhbHVlKFwib2JqZWN0XCI9PXR5cGVvZiBkP2Q6TmFOLGUsdSksYT1uP2guZ2V0QmFzZVBpeGVsKCk6ci5jYWxjdWxhdGVQb2ludFkoZCxlLHUpLHQuX3hTY2FsZT1jLHQuX3lTY2FsZT1oLHQuX2RhdGFzZXRJbmRleD11LHQuX2luZGV4PWUsdC5fbW9kZWw9e3g6aSx5OmEsc2tpcDpzLnNraXB8fGlzTmFOKGkpfHxpc05hTihhKSxyYWRpdXM6cy5yYWRpdXN8fGcudmFsdWVBdEluZGV4T3JEZWZhdWx0KGwucG9pbnRSYWRpdXMsZSxmLnJhZGl1cykscG9pbnRTdHlsZTpzLnBvaW50U3R5bGV8fGcudmFsdWVBdEluZGV4T3JEZWZhdWx0KGwucG9pbnRTdHlsZSxlLGYucG9pbnRTdHlsZSkscm90YXRpb246ci5nZXRQb2ludFJvdGF0aW9uKHQsZSksYmFja2dyb3VuZENvbG9yOnIuZ2V0UG9pbnRCYWNrZ3JvdW5kQ29sb3IodCxlKSxib3JkZXJDb2xvcjpyLmdldFBvaW50Qm9yZGVyQ29sb3IodCxlKSxib3JkZXJXaWR0aDpyLmdldFBvaW50Qm9yZGVyV2lkdGgodCxlKSx0ZW5zaW9uOm8uZGF0YXNldC5fbW9kZWw/by5kYXRhc2V0Ll9tb2RlbC50ZW5zaW9uOjAsc3RlcHBlZExpbmU6ISFvLmRhdGFzZXQuX21vZGVsJiZvLmRhdGFzZXQuX21vZGVsLnN0ZXBwZWRMaW5lLGhpdFJhZGl1czpzLmhpdFJhZGl1c3x8Zy52YWx1ZUF0SW5kZXhPckRlZmF1bHQobC5wb2ludEhpdFJhZGl1cyxlLGYuaGl0UmFkaXVzKX19LGNhbGN1bGF0ZVBvaW50WTpmdW5jdGlvbih0LGUsbil7dmFyIGksYSxyLG89dGhpcy5jaGFydCxzPXRoaXMuZ2V0TWV0YSgpLGw9dGhpcy5nZXRTY2FsZUZvcklkKHMueUF4aXNJRCksdT0wLGQ9MDtpZihsLm9wdGlvbnMuc3RhY2tlZCl7Zm9yKGk9MDtpPG47aSsrKWlmKGE9by5kYXRhLmRhdGFzZXRzW2ldLFwibGluZVwiPT09KHI9by5nZXREYXRhc2V0TWV0YShpKSkudHlwZSYmci55QXhpc0lEPT09bC5pZCYmby5pc0RhdGFzZXRWaXNpYmxlKGkpKXt2YXIgaD1OdW1iZXIobC5nZXRSaWdodFZhbHVlKGEuZGF0YVtlXSkpO2g8MD9kKz1ofHwwOnUrPWh8fDB9dmFyIGM9TnVtYmVyKGwuZ2V0UmlnaHRWYWx1ZSh0KSk7cmV0dXJuIGM8MD9sLmdldFBpeGVsRm9yVmFsdWUoZCtjKTpsLmdldFBpeGVsRm9yVmFsdWUodStjKX1yZXR1cm4gbC5nZXRQaXhlbEZvclZhbHVlKHQpfSx1cGRhdGVCZXppZXJDb250cm9sUG9pbnRzOmZ1bmN0aW9uKCl7dmFyIHQsZSxuLGksYT10aGlzLmdldE1ldGEoKSxyPXRoaXMuY2hhcnQuY2hhcnRBcmVhLG89YS5kYXRhfHxbXTtmdW5jdGlvbiBzKHQsZSxuKXtyZXR1cm4gTWF0aC5tYXgoTWF0aC5taW4odCxuKSxlKX1pZihhLmRhdGFzZXQuX21vZGVsLnNwYW5HYXBzJiYobz1vLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4hdC5fbW9kZWwuc2tpcH0pKSxcIm1vbm90b25lXCI9PT1hLmRhdGFzZXQuX21vZGVsLmN1YmljSW50ZXJwb2xhdGlvbk1vZGUpZy5zcGxpbmVDdXJ2ZU1vbm90b25lKG8pO2Vsc2UgZm9yKHQ9MCxlPW8ubGVuZ3RoO3Q8ZTsrK3Qpbj1vW3RdLl9tb2RlbCxpPWcuc3BsaW5lQ3VydmUoZy5wcmV2aW91c0l0ZW0obyx0KS5fbW9kZWwsbixnLm5leHRJdGVtKG8sdCkuX21vZGVsLGEuZGF0YXNldC5fbW9kZWwudGVuc2lvbiksbi5jb250cm9sUG9pbnRQcmV2aW91c1g9aS5wcmV2aW91cy54LG4uY29udHJvbFBvaW50UHJldmlvdXNZPWkucHJldmlvdXMueSxuLmNvbnRyb2xQb2ludE5leHRYPWkubmV4dC54LG4uY29udHJvbFBvaW50TmV4dFk9aS5uZXh0Lnk7aWYodGhpcy5jaGFydC5vcHRpb25zLmVsZW1lbnRzLmxpbmUuY2FwQmV6aWVyUG9pbnRzKWZvcih0PTAsZT1vLmxlbmd0aDt0PGU7Kyt0KShuPW9bdF0uX21vZGVsKS5jb250cm9sUG9pbnRQcmV2aW91c1g9cyhuLmNvbnRyb2xQb2ludFByZXZpb3VzWCxyLmxlZnQsci5yaWdodCksbi5jb250cm9sUG9pbnRQcmV2aW91c1k9cyhuLmNvbnRyb2xQb2ludFByZXZpb3VzWSxyLnRvcCxyLmJvdHRvbSksbi5jb250cm9sUG9pbnROZXh0WD1zKG4uY29udHJvbFBvaW50TmV4dFgsci5sZWZ0LHIucmlnaHQpLG4uY29udHJvbFBvaW50TmV4dFk9cyhuLmNvbnRyb2xQb2ludE5leHRZLHIudG9wLHIuYm90dG9tKX0sZHJhdzpmdW5jdGlvbigpe3ZhciB0LGU9dGhpcy5jaGFydCxuPXRoaXMuZ2V0TWV0YSgpLGk9bi5kYXRhfHxbXSxhPWUuY2hhcnRBcmVhLHI9aS5sZW5ndGgsbz0wO2ZvcihmKHRoaXMuZ2V0RGF0YXNldCgpLGUub3B0aW9ucykmJih0PShuLmRhdGFzZXQuX21vZGVsLmJvcmRlcldpZHRofHwwKS8yLGcuY2FudmFzLmNsaXBBcmVhKGUuY3R4LHtsZWZ0OmEubGVmdCxyaWdodDphLnJpZ2h0LHRvcDphLnRvcC10LGJvdHRvbTphLmJvdHRvbSt0fSksbi5kYXRhc2V0LmRyYXcoKSxnLmNhbnZhcy51bmNsaXBBcmVhKGUuY3R4KSk7bzxyOysrbylpW29dLmRyYXcoYSl9LHNldEhvdmVyU3R5bGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5jaGFydC5kYXRhLmRhdGFzZXRzW3QuX2RhdGFzZXRJbmRleF0sbj10Ll9pbmRleCxpPXQuY3VzdG9tfHx7fSxhPXQuX21vZGVsO3QuJHByZXZpb3VzU3R5bGU9e2JhY2tncm91bmRDb2xvcjphLmJhY2tncm91bmRDb2xvcixib3JkZXJDb2xvcjphLmJvcmRlckNvbG9yLGJvcmRlcldpZHRoOmEuYm9yZGVyV2lkdGgscmFkaXVzOmEucmFkaXVzfSxhLmJhY2tncm91bmRDb2xvcj1pLmhvdmVyQmFja2dyb3VuZENvbG9yfHxnLnZhbHVlQXRJbmRleE9yRGVmYXVsdChlLnBvaW50SG92ZXJCYWNrZ3JvdW5kQ29sb3IsbixnLmdldEhvdmVyQ29sb3IoYS5iYWNrZ3JvdW5kQ29sb3IpKSxhLmJvcmRlckNvbG9yPWkuaG92ZXJCb3JkZXJDb2xvcnx8Zy52YWx1ZUF0SW5kZXhPckRlZmF1bHQoZS5wb2ludEhvdmVyQm9yZGVyQ29sb3IsbixnLmdldEhvdmVyQ29sb3IoYS5ib3JkZXJDb2xvcikpLGEuYm9yZGVyV2lkdGg9aS5ob3ZlckJvcmRlcldpZHRofHxnLnZhbHVlQXRJbmRleE9yRGVmYXVsdChlLnBvaW50SG92ZXJCb3JkZXJXaWR0aCxuLGEuYm9yZGVyV2lkdGgpLGEucmFkaXVzPWkuaG92ZXJSYWRpdXN8fGcudmFsdWVBdEluZGV4T3JEZWZhdWx0KGUucG9pbnRIb3ZlclJhZGl1cyxuLHRoaXMuY2hhcnQub3B0aW9ucy5lbGVtZW50cy5wb2ludC5ob3ZlclJhZGl1cyl9fSl9fSx7MjY6MjYsNDE6NDEsNDY6NDZ9XSwxOTpbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPXQoMjYpLGE9dCg0MSksXz10KDQ2KTtpLl9zZXQoXCJwb2xhckFyZWFcIix7c2NhbGU6e3R5cGU6XCJyYWRpYWxMaW5lYXJcIixhbmdsZUxpbmVzOntkaXNwbGF5OiExfSxncmlkTGluZXM6e2NpcmN1bGFyOiEwfSxwb2ludExhYmVsczp7ZGlzcGxheTohMX0sdGlja3M6e2JlZ2luQXRaZXJvOiEwfX0sYW5pbWF0aW9uOnthbmltYXRlUm90YXRlOiEwLGFuaW1hdGVTY2FsZTohMH0sc3RhcnRBbmdsZTotLjUqTWF0aC5QSSxsZWdlbmRDYWxsYmFjazpmdW5jdGlvbih0KXt2YXIgZT1bXTtlLnB1c2goJzx1bCBjbGFzcz1cIicrdC5pZCsnLWxlZ2VuZFwiPicpO3ZhciBuPXQuZGF0YSxpPW4uZGF0YXNldHMsYT1uLmxhYmVscztpZihpLmxlbmd0aClmb3IodmFyIHI9MDtyPGlbMF0uZGF0YS5sZW5ndGg7KytyKWUucHVzaCgnPGxpPjxzcGFuIHN0eWxlPVwiYmFja2dyb3VuZC1jb2xvcjonK2lbMF0uYmFja2dyb3VuZENvbG9yW3JdKydcIj48L3NwYW4+JyksYVtyXSYmZS5wdXNoKGFbcl0pLGUucHVzaChcIjwvbGk+XCIpO3JldHVybiBlLnB1c2goXCI8L3VsPlwiKSxlLmpvaW4oXCJcIil9LGxlZ2VuZDp7bGFiZWxzOntnZW5lcmF0ZUxhYmVsczpmdW5jdGlvbihzKXt2YXIgbD1zLmRhdGE7cmV0dXJuIGwubGFiZWxzLmxlbmd0aCYmbC5kYXRhc2V0cy5sZW5ndGg/bC5sYWJlbHMubWFwKGZ1bmN0aW9uKHQsZSl7dmFyIG49cy5nZXREYXRhc2V0TWV0YSgwKSxpPWwuZGF0YXNldHNbMF0sYT1uLmRhdGFbZV0uY3VzdG9tfHx7fSxyPV8udmFsdWVBdEluZGV4T3JEZWZhdWx0LG89cy5vcHRpb25zLmVsZW1lbnRzLmFyYztyZXR1cm57dGV4dDp0LGZpbGxTdHlsZTphLmJhY2tncm91bmRDb2xvcj9hLmJhY2tncm91bmRDb2xvcjpyKGkuYmFja2dyb3VuZENvbG9yLGUsby5iYWNrZ3JvdW5kQ29sb3IpLHN0cm9rZVN0eWxlOmEuYm9yZGVyQ29sb3I/YS5ib3JkZXJDb2xvcjpyKGkuYm9yZGVyQ29sb3IsZSxvLmJvcmRlckNvbG9yKSxsaW5lV2lkdGg6YS5ib3JkZXJXaWR0aD9hLmJvcmRlcldpZHRoOnIoaS5ib3JkZXJXaWR0aCxlLG8uYm9yZGVyV2lkdGgpLGhpZGRlbjppc05hTihpLmRhdGFbZV0pfHxuLmRhdGFbZV0uaGlkZGVuLGluZGV4OmV9fSk6W119fSxvbkNsaWNrOmZ1bmN0aW9uKHQsZSl7dmFyIG4saSxhLHI9ZS5pbmRleCxvPXRoaXMuY2hhcnQ7Zm9yKG49MCxpPShvLmRhdGEuZGF0YXNldHN8fFtdKS5sZW5ndGg7bjxpOysrbikoYT1vLmdldERhdGFzZXRNZXRhKG4pKS5kYXRhW3JdLmhpZGRlbj0hYS5kYXRhW3JdLmhpZGRlbjtvLnVwZGF0ZSgpfX0sdG9vbHRpcHM6e2NhbGxiYWNrczp7dGl0bGU6ZnVuY3Rpb24oKXtyZXR1cm5cIlwifSxsYWJlbDpmdW5jdGlvbih0LGUpe3JldHVybiBlLmxhYmVsc1t0LmluZGV4XStcIjogXCIrdC55TGFiZWx9fX19KSxlLmV4cG9ydHM9ZnVuY3Rpb24odCl7dC5jb250cm9sbGVycy5wb2xhckFyZWE9dC5EYXRhc2V0Q29udHJvbGxlci5leHRlbmQoe2RhdGFFbGVtZW50VHlwZTphLkFyYyxsaW5rU2NhbGVzOl8ubm9vcCx1cGRhdGU6ZnVuY3Rpb24obil7dmFyIHQsZSxpLGE9dGhpcyxyPWEuZ2V0RGF0YXNldCgpLG89YS5nZXRNZXRhKCkscz1hLmNoYXJ0Lm9wdGlvbnMuc3RhcnRBbmdsZXx8MCxsPWEuX3N0YXJ0cz1bXSx1PWEuX2FuZ2xlcz1bXTtmb3IoYS5fdXBkYXRlUmFkaXVzKCksby5jb3VudD1hLmNvdW50VmlzaWJsZUVsZW1lbnRzKCksdD0wLGU9ci5kYXRhLmxlbmd0aDt0PGU7dCsrKWxbdF09cyxpPWEuX2NvbXB1dGVBbmdsZSh0KSxzKz11W3RdPWk7Xy5lYWNoKG8uZGF0YSxmdW5jdGlvbih0LGUpe2EudXBkYXRlRWxlbWVudCh0LGUsbil9KX0sX3VwZGF0ZVJhZGl1czpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10LmNoYXJ0LG49ZS5jaGFydEFyZWEsaT1lLm9wdGlvbnMsYT1pLmVsZW1lbnRzLmFyYyxyPU1hdGgubWluKG4ucmlnaHQtbi5sZWZ0LG4uYm90dG9tLW4udG9wKTtlLm91dGVyUmFkaXVzPU1hdGgubWF4KChyLWEuYm9yZGVyV2lkdGgvMikvMiwwKSxlLmlubmVyUmFkaXVzPU1hdGgubWF4KGkuY3V0b3V0UGVyY2VudGFnZT9lLm91dGVyUmFkaXVzLzEwMCppLmN1dG91dFBlcmNlbnRhZ2U6MSwwKSxlLnJhZGl1c0xlbmd0aD0oZS5vdXRlclJhZGl1cy1lLmlubmVyUmFkaXVzKS9lLmdldFZpc2libGVEYXRhc2V0Q291bnQoKSx0Lm91dGVyUmFkaXVzPWUub3V0ZXJSYWRpdXMtZS5yYWRpdXNMZW5ndGgqdC5pbmRleCx0LmlubmVyUmFkaXVzPXQub3V0ZXJSYWRpdXMtZS5yYWRpdXNMZW5ndGh9LHVwZGF0ZUVsZW1lbnQ6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXMsYT1pLmNoYXJ0LHI9aS5nZXREYXRhc2V0KCksbz1hLm9wdGlvbnMscz1vLmFuaW1hdGlvbixsPWEuc2NhbGUsdT1hLmRhdGEubGFiZWxzLGQ9bC54Q2VudGVyLGg9bC55Q2VudGVyLGM9by5zdGFydEFuZ2xlLGY9dC5oaWRkZW4/MDpsLmdldERpc3RhbmNlRnJvbUNlbnRlckZvclZhbHVlKHIuZGF0YVtlXSksZz1pLl9zdGFydHNbZV0sbT1nKyh0LmhpZGRlbj8wOmkuX2FuZ2xlc1tlXSkscD1zLmFuaW1hdGVTY2FsZT8wOmwuZ2V0RGlzdGFuY2VGcm9tQ2VudGVyRm9yVmFsdWUoci5kYXRhW2VdKTtfLmV4dGVuZCh0LHtfZGF0YXNldEluZGV4OmkuaW5kZXgsX2luZGV4OmUsX3NjYWxlOmwsX21vZGVsOnt4OmQseTpoLGlubmVyUmFkaXVzOjAsb3V0ZXJSYWRpdXM6bj9wOmYsc3RhcnRBbmdsZTpuJiZzLmFuaW1hdGVSb3RhdGU/YzpnLGVuZEFuZ2xlOm4mJnMuYW5pbWF0ZVJvdGF0ZT9jOm0sbGFiZWw6Xy52YWx1ZUF0SW5kZXhPckRlZmF1bHQodSxlLHVbZV0pfX0pO3ZhciB2PXRoaXMuY2hhcnQub3B0aW9ucy5lbGVtZW50cy5hcmMsYj10LmN1c3RvbXx8e30seT1fLnZhbHVlQXRJbmRleE9yRGVmYXVsdCx4PXQuX21vZGVsO3guYmFja2dyb3VuZENvbG9yPWIuYmFja2dyb3VuZENvbG9yP2IuYmFja2dyb3VuZENvbG9yOnkoci5iYWNrZ3JvdW5kQ29sb3IsZSx2LmJhY2tncm91bmRDb2xvcikseC5ib3JkZXJDb2xvcj1iLmJvcmRlckNvbG9yP2IuYm9yZGVyQ29sb3I6eShyLmJvcmRlckNvbG9yLGUsdi5ib3JkZXJDb2xvcikseC5ib3JkZXJXaWR0aD1iLmJvcmRlcldpZHRoP2IuYm9yZGVyV2lkdGg6eShyLmJvcmRlcldpZHRoLGUsdi5ib3JkZXJXaWR0aCksdC5waXZvdCgpfSxjb3VudFZpc2libGVFbGVtZW50czpmdW5jdGlvbigpe3ZhciBuPXRoaXMuZ2V0RGF0YXNldCgpLHQ9dGhpcy5nZXRNZXRhKCksaT0wO3JldHVybiBfLmVhY2godC5kYXRhLGZ1bmN0aW9uKHQsZSl7aXNOYU4obi5kYXRhW2VdKXx8dC5oaWRkZW58fGkrK30pLGl9LF9jb21wdXRlQW5nbGU6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPXRoaXMuZ2V0TWV0YSgpLmNvdW50LGk9ZS5nZXREYXRhc2V0KCksYT1lLmdldE1ldGEoKTtpZihpc05hTihpLmRhdGFbdF0pfHxhLmRhdGFbdF0uaGlkZGVuKXJldHVybiAwO3ZhciByPXtjaGFydDplLmNoYXJ0LGRhdGFJbmRleDp0LGRhdGFzZXQ6aSxkYXRhc2V0SW5kZXg6ZS5pbmRleH07cmV0dXJuIF8ub3B0aW9ucy5yZXNvbHZlKFtlLmNoYXJ0Lm9wdGlvbnMuZWxlbWVudHMuYXJjLmFuZ2xlLDIqTWF0aC5QSS9uXSxyLHQpfX0pfX0sezI2OjI2LDQxOjQxLDQ2OjQ2fV0sMjA6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT10KDI2KSxhPXQoNDEpLHU9dCg0Nik7aS5fc2V0KFwicmFkYXJcIix7c2NhbGU6e3R5cGU6XCJyYWRpYWxMaW5lYXJcIn0sZWxlbWVudHM6e2xpbmU6e3RlbnNpb246MH19fSksZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3QuY29udHJvbGxlcnMucmFkYXI9dC5EYXRhc2V0Q29udHJvbGxlci5leHRlbmQoe2RhdGFzZXRFbGVtZW50VHlwZTphLkxpbmUsZGF0YUVsZW1lbnRUeXBlOmEuUG9pbnQsbGlua1NjYWxlczp1Lm5vb3AsdXBkYXRlOmZ1bmN0aW9uKG4pe3ZhciBpPXRoaXMsdD1pLmdldE1ldGEoKSxlPXQuZGF0YXNldCxhPXQuZGF0YSxyPWUuY3VzdG9tfHx7fSxvPWkuZ2V0RGF0YXNldCgpLHM9aS5jaGFydC5vcHRpb25zLmVsZW1lbnRzLmxpbmUsbD1pLmNoYXJ0LnNjYWxlO3ZvaWQgMCE9PW8udGVuc2lvbiYmdm9pZCAwPT09by5saW5lVGVuc2lvbiYmKG8ubGluZVRlbnNpb249by50ZW5zaW9uKSx1LmV4dGVuZCh0LmRhdGFzZXQse19kYXRhc2V0SW5kZXg6aS5pbmRleCxfc2NhbGU6bCxfY2hpbGRyZW46YSxfbG9vcDohMCxfbW9kZWw6e3RlbnNpb246ci50ZW5zaW9uP3IudGVuc2lvbjp1LnZhbHVlT3JEZWZhdWx0KG8ubGluZVRlbnNpb24scy50ZW5zaW9uKSxiYWNrZ3JvdW5kQ29sb3I6ci5iYWNrZ3JvdW5kQ29sb3I/ci5iYWNrZ3JvdW5kQ29sb3I6by5iYWNrZ3JvdW5kQ29sb3J8fHMuYmFja2dyb3VuZENvbG9yLGJvcmRlcldpZHRoOnIuYm9yZGVyV2lkdGg/ci5ib3JkZXJXaWR0aDpvLmJvcmRlcldpZHRofHxzLmJvcmRlcldpZHRoLGJvcmRlckNvbG9yOnIuYm9yZGVyQ29sb3I/ci5ib3JkZXJDb2xvcjpvLmJvcmRlckNvbG9yfHxzLmJvcmRlckNvbG9yLGZpbGw6ci5maWxsP3IuZmlsbDp2b2lkIDAhPT1vLmZpbGw/by5maWxsOnMuZmlsbCxib3JkZXJDYXBTdHlsZTpyLmJvcmRlckNhcFN0eWxlP3IuYm9yZGVyQ2FwU3R5bGU6by5ib3JkZXJDYXBTdHlsZXx8cy5ib3JkZXJDYXBTdHlsZSxib3JkZXJEYXNoOnIuYm9yZGVyRGFzaD9yLmJvcmRlckRhc2g6by5ib3JkZXJEYXNofHxzLmJvcmRlckRhc2gsYm9yZGVyRGFzaE9mZnNldDpyLmJvcmRlckRhc2hPZmZzZXQ/ci5ib3JkZXJEYXNoT2Zmc2V0Om8uYm9yZGVyRGFzaE9mZnNldHx8cy5ib3JkZXJEYXNoT2Zmc2V0LGJvcmRlckpvaW5TdHlsZTpyLmJvcmRlckpvaW5TdHlsZT9yLmJvcmRlckpvaW5TdHlsZTpvLmJvcmRlckpvaW5TdHlsZXx8cy5ib3JkZXJKb2luU3R5bGV9fSksdC5kYXRhc2V0LnBpdm90KCksdS5lYWNoKGEsZnVuY3Rpb24odCxlKXtpLnVwZGF0ZUVsZW1lbnQodCxlLG4pfSxpKSxpLnVwZGF0ZUJlemllckNvbnRyb2xQb2ludHMoKX0sdXBkYXRlRWxlbWVudDpmdW5jdGlvbih0LGUsbil7dmFyIGk9dGhpcyxhPXQuY3VzdG9tfHx7fSxyPWkuZ2V0RGF0YXNldCgpLG89aS5jaGFydC5zY2FsZSxzPWkuY2hhcnQub3B0aW9ucy5lbGVtZW50cy5wb2ludCxsPW8uZ2V0UG9pbnRQb3NpdGlvbkZvclZhbHVlKGUsci5kYXRhW2VdKTt2b2lkIDAhPT1yLnJhZGl1cyYmdm9pZCAwPT09ci5wb2ludFJhZGl1cyYmKHIucG9pbnRSYWRpdXM9ci5yYWRpdXMpLHZvaWQgMCE9PXIuaGl0UmFkaXVzJiZ2b2lkIDA9PT1yLnBvaW50SGl0UmFkaXVzJiYoci5wb2ludEhpdFJhZGl1cz1yLmhpdFJhZGl1cyksdS5leHRlbmQodCx7X2RhdGFzZXRJbmRleDppLmluZGV4LF9pbmRleDplLF9zY2FsZTpvLF9tb2RlbDp7eDpuP28ueENlbnRlcjpsLngseTpuP28ueUNlbnRlcjpsLnksdGVuc2lvbjphLnRlbnNpb24/YS50ZW5zaW9uOnUudmFsdWVPckRlZmF1bHQoci5saW5lVGVuc2lvbixpLmNoYXJ0Lm9wdGlvbnMuZWxlbWVudHMubGluZS50ZW5zaW9uKSxyYWRpdXM6YS5yYWRpdXM/YS5yYWRpdXM6dS52YWx1ZUF0SW5kZXhPckRlZmF1bHQoci5wb2ludFJhZGl1cyxlLHMucmFkaXVzKSxiYWNrZ3JvdW5kQ29sb3I6YS5iYWNrZ3JvdW5kQ29sb3I/YS5iYWNrZ3JvdW5kQ29sb3I6dS52YWx1ZUF0SW5kZXhPckRlZmF1bHQoci5wb2ludEJhY2tncm91bmRDb2xvcixlLHMuYmFja2dyb3VuZENvbG9yKSxib3JkZXJDb2xvcjphLmJvcmRlckNvbG9yP2EuYm9yZGVyQ29sb3I6dS52YWx1ZUF0SW5kZXhPckRlZmF1bHQoci5wb2ludEJvcmRlckNvbG9yLGUscy5ib3JkZXJDb2xvciksYm9yZGVyV2lkdGg6YS5ib3JkZXJXaWR0aD9hLmJvcmRlcldpZHRoOnUudmFsdWVBdEluZGV4T3JEZWZhdWx0KHIucG9pbnRCb3JkZXJXaWR0aCxlLHMuYm9yZGVyV2lkdGgpLHBvaW50U3R5bGU6YS5wb2ludFN0eWxlP2EucG9pbnRTdHlsZTp1LnZhbHVlQXRJbmRleE9yRGVmYXVsdChyLnBvaW50U3R5bGUsZSxzLnBvaW50U3R5bGUpLHJvdGF0aW9uOmEucm90YXRpb24/YS5yb3RhdGlvbjp1LnZhbHVlQXRJbmRleE9yRGVmYXVsdChyLnBvaW50Um90YXRpb24sZSxzLnJvdGF0aW9uKSxoaXRSYWRpdXM6YS5oaXRSYWRpdXM/YS5oaXRSYWRpdXM6dS52YWx1ZUF0SW5kZXhPckRlZmF1bHQoci5wb2ludEhpdFJhZGl1cyxlLHMuaGl0UmFkaXVzKX19KSx0Ll9tb2RlbC5za2lwPWEuc2tpcD9hLnNraXA6aXNOYU4odC5fbW9kZWwueCl8fGlzTmFOKHQuX21vZGVsLnkpfSx1cGRhdGVCZXppZXJDb250cm9sUG9pbnRzOmZ1bmN0aW9uKCl7dmFyIGE9dGhpcy5jaGFydC5jaGFydEFyZWEscj10aGlzLmdldE1ldGEoKTt1LmVhY2goci5kYXRhLGZ1bmN0aW9uKHQsZSl7dmFyIG49dC5fbW9kZWwsaT11LnNwbGluZUN1cnZlKHUucHJldmlvdXNJdGVtKHIuZGF0YSxlLCEwKS5fbW9kZWwsbix1Lm5leHRJdGVtKHIuZGF0YSxlLCEwKS5fbW9kZWwsbi50ZW5zaW9uKTtuLmNvbnRyb2xQb2ludFByZXZpb3VzWD1NYXRoLm1heChNYXRoLm1pbihpLnByZXZpb3VzLngsYS5yaWdodCksYS5sZWZ0KSxuLmNvbnRyb2xQb2ludFByZXZpb3VzWT1NYXRoLm1heChNYXRoLm1pbihpLnByZXZpb3VzLnksYS5ib3R0b20pLGEudG9wKSxuLmNvbnRyb2xQb2ludE5leHRYPU1hdGgubWF4KE1hdGgubWluKGkubmV4dC54LGEucmlnaHQpLGEubGVmdCksbi5jb250cm9sUG9pbnROZXh0WT1NYXRoLm1heChNYXRoLm1pbihpLm5leHQueSxhLmJvdHRvbSksYS50b3ApLHQucGl2b3QoKX0pfSxzZXRIb3ZlclN0eWxlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY2hhcnQuZGF0YS5kYXRhc2V0c1t0Ll9kYXRhc2V0SW5kZXhdLG49dC5jdXN0b218fHt9LGk9dC5faW5kZXgsYT10Ll9tb2RlbDt0LiRwcmV2aW91c1N0eWxlPXtiYWNrZ3JvdW5kQ29sb3I6YS5iYWNrZ3JvdW5kQ29sb3IsYm9yZGVyQ29sb3I6YS5ib3JkZXJDb2xvcixib3JkZXJXaWR0aDphLmJvcmRlcldpZHRoLHJhZGl1czphLnJhZGl1c30sYS5yYWRpdXM9bi5ob3ZlclJhZGl1cz9uLmhvdmVyUmFkaXVzOnUudmFsdWVBdEluZGV4T3JEZWZhdWx0KGUucG9pbnRIb3ZlclJhZGl1cyxpLHRoaXMuY2hhcnQub3B0aW9ucy5lbGVtZW50cy5wb2ludC5ob3ZlclJhZGl1cyksYS5iYWNrZ3JvdW5kQ29sb3I9bi5ob3ZlckJhY2tncm91bmRDb2xvcj9uLmhvdmVyQmFja2dyb3VuZENvbG9yOnUudmFsdWVBdEluZGV4T3JEZWZhdWx0KGUucG9pbnRIb3ZlckJhY2tncm91bmRDb2xvcixpLHUuZ2V0SG92ZXJDb2xvcihhLmJhY2tncm91bmRDb2xvcikpLGEuYm9yZGVyQ29sb3I9bi5ob3ZlckJvcmRlckNvbG9yP24uaG92ZXJCb3JkZXJDb2xvcjp1LnZhbHVlQXRJbmRleE9yRGVmYXVsdChlLnBvaW50SG92ZXJCb3JkZXJDb2xvcixpLHUuZ2V0SG92ZXJDb2xvcihhLmJvcmRlckNvbG9yKSksYS5ib3JkZXJXaWR0aD1uLmhvdmVyQm9yZGVyV2lkdGg/bi5ob3ZlckJvcmRlcldpZHRoOnUudmFsdWVBdEluZGV4T3JEZWZhdWx0KGUucG9pbnRIb3ZlckJvcmRlcldpZHRoLGksYS5ib3JkZXJXaWR0aCl9fSl9fSx7MjY6MjYsNDE6NDEsNDY6NDZ9XSwyMTpbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3QoMjYpLl9zZXQoXCJzY2F0dGVyXCIse2hvdmVyOnttb2RlOlwic2luZ2xlXCJ9LHNjYWxlczp7eEF4ZXM6W3tpZDpcIngtYXhpcy0xXCIsdHlwZTpcImxpbmVhclwiLHBvc2l0aW9uOlwiYm90dG9tXCJ9XSx5QXhlczpbe2lkOlwieS1heGlzLTFcIix0eXBlOlwibGluZWFyXCIscG9zaXRpb246XCJsZWZ0XCJ9XX0sc2hvd0xpbmVzOiExLHRvb2x0aXBzOntjYWxsYmFja3M6e3RpdGxlOmZ1bmN0aW9uKCl7cmV0dXJuXCJcIn0sbGFiZWw6ZnVuY3Rpb24odCl7cmV0dXJuXCIoXCIrdC54TGFiZWwrXCIsIFwiK3QueUxhYmVsK1wiKVwifX19fSksZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3QuY29udHJvbGxlcnMuc2NhdHRlcj10LmNvbnRyb2xsZXJzLmxpbmV9fSx7MjY6MjZ9XSwyMjpbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPXQoMjcpO249ZS5leHBvcnRzPWkuZXh0ZW5kKHtjaGFydDpudWxsLGN1cnJlbnRTdGVwOjAsbnVtU3RlcHM6NjAsZWFzaW5nOlwiXCIscmVuZGVyOm51bGwsb25BbmltYXRpb25Qcm9ncmVzczpudWxsLG9uQW5pbWF0aW9uQ29tcGxldGU6bnVsbH0pO09iamVjdC5kZWZpbmVQcm9wZXJ0eShuLnByb3RvdHlwZSxcImFuaW1hdGlvbk9iamVjdFwiLHtnZXQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpc319KSxPYmplY3QuZGVmaW5lUHJvcGVydHkobi5wcm90b3R5cGUsXCJjaGFydEluc3RhbmNlXCIse2dldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNoYXJ0fSxzZXQ6ZnVuY3Rpb24odCl7dGhpcy5jaGFydD10fX0pfSx7Mjc6Mjd9XSwyMzpbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPXQoMjYpLHI9dCg0Nik7aS5fc2V0KFwiZ2xvYmFsXCIse2FuaW1hdGlvbjp7ZHVyYXRpb246MWUzLGVhc2luZzpcImVhc2VPdXRRdWFydFwiLG9uUHJvZ3Jlc3M6ci5ub29wLG9uQ29tcGxldGU6ci5ub29wfX0pLGUuZXhwb3J0cz17ZnJhbWVEdXJhdGlvbjoxNyxhbmltYXRpb25zOltdLGRyb3BGcmFtZXM6MCxyZXF1ZXN0Om51bGwsYWRkQW5pbWF0aW9uOmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBhLHIsbz10aGlzLmFuaW1hdGlvbnM7Zm9yKGUuY2hhcnQ9dCxpfHwodC5hbmltYXRpbmc9ITApLGE9MCxyPW8ubGVuZ3RoO2E8cjsrK2EpaWYob1thXS5jaGFydD09PXQpcmV0dXJuIHZvaWQob1thXT1lKTtvLnB1c2goZSksMT09PW8ubGVuZ3RoJiZ0aGlzLnJlcXVlc3RBbmltYXRpb25GcmFtZSgpfSxjYW5jZWxBbmltYXRpb246ZnVuY3Rpb24oZSl7dmFyIHQ9ci5maW5kSW5kZXgodGhpcy5hbmltYXRpb25zLGZ1bmN0aW9uKHQpe3JldHVybiB0LmNoYXJ0PT09ZX0pOy0xIT09dCYmKHRoaXMuYW5pbWF0aW9ucy5zcGxpY2UodCwxKSxlLmFuaW1hdGluZz0hMSl9LHJlcXVlc3RBbmltYXRpb25GcmFtZTpmdW5jdGlvbigpe3ZhciB0PXRoaXM7bnVsbD09PXQucmVxdWVzdCYmKHQucmVxdWVzdD1yLnJlcXVlc3RBbmltRnJhbWUuY2FsbCh3aW5kb3csZnVuY3Rpb24oKXt0LnJlcXVlc3Q9bnVsbCx0LnN0YXJ0RGlnZXN0KCl9KSl9LHN0YXJ0RGlnZXN0OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPURhdGUubm93KCksbj0wOzE8dC5kcm9wRnJhbWVzJiYobj1NYXRoLmZsb29yKHQuZHJvcEZyYW1lcyksdC5kcm9wRnJhbWVzPXQuZHJvcEZyYW1lcyUxKSx0LmFkdmFuY2UoMStuKTt2YXIgaT1EYXRlLm5vdygpO3QuZHJvcEZyYW1lcys9KGktZSkvdC5mcmFtZUR1cmF0aW9uLDA8dC5hbmltYXRpb25zLmxlbmd0aCYmdC5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKX0sYWR2YW5jZTpmdW5jdGlvbih0KXtmb3IodmFyIGUsbixpPXRoaXMuYW5pbWF0aW9ucyxhPTA7YTxpLmxlbmd0aDspbj0oZT1pW2FdKS5jaGFydCxlLmN1cnJlbnRTdGVwPShlLmN1cnJlbnRTdGVwfHwwKSt0LGUuY3VycmVudFN0ZXA9TWF0aC5taW4oZS5jdXJyZW50U3RlcCxlLm51bVN0ZXBzKSxyLmNhbGxiYWNrKGUucmVuZGVyLFtuLGVdLG4pLHIuY2FsbGJhY2soZS5vbkFuaW1hdGlvblByb2dyZXNzLFtlXSxuKSxlLmN1cnJlbnRTdGVwPj1lLm51bVN0ZXBzPyhyLmNhbGxiYWNrKGUub25BbmltYXRpb25Db21wbGV0ZSxbZV0sbiksbi5hbmltYXRpbmc9ITEsaS5zcGxpY2UoYSwxKSk6KythfX19LHsyNjoyNiw0Njo0Nn1dLDI0OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHM9dCgyMiksbD10KDIzKSxoPXQoMjYpLGM9dCg0NiksYT10KDI5KSxyPXQoMzEpLGY9dCg0OSksZz10KDMyKSxtPXQoMzQpLGk9dCgzNik7ZS5leHBvcnRzPWZ1bmN0aW9uKHUpe2Z1bmN0aW9uIGQodCl7cmV0dXJuXCJ0b3BcIj09PXR8fFwiYm90dG9tXCI9PT10fXUudHlwZXM9e30sdS5pbnN0YW5jZXM9e30sdS5jb250cm9sbGVycz17fSxjLmV4dGVuZCh1LnByb3RvdHlwZSx7Y29uc3RydWN0OmZ1bmN0aW9uKHQsZSl7dmFyIG4saSxhPXRoaXM7KGk9KG49KG49ZSl8fHt9KS5kYXRhPW4uZGF0YXx8e30pLmRhdGFzZXRzPWkuZGF0YXNldHN8fFtdLGkubGFiZWxzPWkubGFiZWxzfHxbXSxuLm9wdGlvbnM9Yy5jb25maWdNZXJnZShoLmdsb2JhbCxoW24udHlwZV0sbi5vcHRpb25zfHx7fSksZT1uO3ZhciByPWYuYWNxdWlyZUNvbnRleHQodCxlKSxvPXImJnIuY2FudmFzLHM9byYmby5oZWlnaHQsbD1vJiZvLndpZHRoO2EuaWQ9Yy51aWQoKSxhLmN0eD1yLGEuY2FudmFzPW8sYS5jb25maWc9ZSxhLndpZHRoPWwsYS5oZWlnaHQ9cyxhLmFzcGVjdFJhdGlvPXM/bC9zOm51bGwsYS5vcHRpb25zPWUub3B0aW9ucyxhLl9idWZmZXJlZFJlbmRlcj0hMSwoYS5jaGFydD1hKS5jb250cm9sbGVyPWEsdS5pbnN0YW5jZXNbYS5pZF09YSxPYmplY3QuZGVmaW5lUHJvcGVydHkoYSxcImRhdGFcIix7Z2V0OmZ1bmN0aW9uKCl7cmV0dXJuIGEuY29uZmlnLmRhdGF9LHNldDpmdW5jdGlvbih0KXthLmNvbmZpZy5kYXRhPXR9fSksciYmbz8oYS5pbml0aWFsaXplKCksYS51cGRhdGUoKSk6Y29uc29sZS5lcnJvcihcIkZhaWxlZCB0byBjcmVhdGUgY2hhcnQ6IGNhbid0IGFjcXVpcmUgY29udGV4dCBmcm9tIHRoZSBnaXZlbiBpdGVtXCIpfSxpbml0aWFsaXplOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcztyZXR1cm4gZy5ub3RpZnkodCxcImJlZm9yZUluaXRcIiksYy5yZXRpbmFTY2FsZSh0LHQub3B0aW9ucy5kZXZpY2VQaXhlbFJhdGlvKSx0LmJpbmRFdmVudHMoKSx0Lm9wdGlvbnMucmVzcG9uc2l2ZSYmdC5yZXNpemUoITApLHQuZW5zdXJlU2NhbGVzSGF2ZUlEcygpLHQuYnVpbGRPclVwZGF0ZVNjYWxlcygpLHQuaW5pdFRvb2xUaXAoKSxnLm5vdGlmeSh0LFwiYWZ0ZXJJbml0XCIpLHR9LGNsZWFyOmZ1bmN0aW9uKCl7cmV0dXJuIGMuY2FudmFzLmNsZWFyKHRoaXMpLHRoaXN9LHN0b3A6ZnVuY3Rpb24oKXtyZXR1cm4gbC5jYW5jZWxBbmltYXRpb24odGhpcyksdGhpc30scmVzaXplOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLm9wdGlvbnMsaT1lLmNhbnZhcyxhPW4ubWFpbnRhaW5Bc3BlY3RSYXRpbyYmZS5hc3BlY3RSYXRpb3x8bnVsbCxyPU1hdGgubWF4KDAsTWF0aC5mbG9vcihjLmdldE1heGltdW1XaWR0aChpKSkpLG89TWF0aC5tYXgoMCxNYXRoLmZsb29yKGE/ci9hOmMuZ2V0TWF4aW11bUhlaWdodChpKSkpO2lmKChlLndpZHRoIT09cnx8ZS5oZWlnaHQhPT1vKSYmKGkud2lkdGg9ZS53aWR0aD1yLGkuaGVpZ2h0PWUuaGVpZ2h0PW8saS5zdHlsZS53aWR0aD1yK1wicHhcIixpLnN0eWxlLmhlaWdodD1vK1wicHhcIixjLnJldGluYVNjYWxlKGUsbi5kZXZpY2VQaXhlbFJhdGlvKSwhdCkpe3ZhciBzPXt3aWR0aDpyLGhlaWdodDpvfTtnLm5vdGlmeShlLFwicmVzaXplXCIsW3NdKSxlLm9wdGlvbnMub25SZXNpemUmJmUub3B0aW9ucy5vblJlc2l6ZShlLHMpLGUuc3RvcCgpLGUudXBkYXRlKHtkdXJhdGlvbjplLm9wdGlvbnMucmVzcG9uc2l2ZUFuaW1hdGlvbkR1cmF0aW9ufSl9fSxlbnN1cmVTY2FsZXNIYXZlSURzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zLGU9dC5zY2FsZXN8fHt9LG49dC5zY2FsZTtjLmVhY2goZS54QXhlcyxmdW5jdGlvbih0LGUpe3QuaWQ9dC5pZHx8XCJ4LWF4aXMtXCIrZX0pLGMuZWFjaChlLnlBeGVzLGZ1bmN0aW9uKHQsZSl7dC5pZD10LmlkfHxcInktYXhpcy1cIitlfSksbiYmKG4uaWQ9bi5pZHx8XCJzY2FsZVwiKX0sYnVpbGRPclVwZGF0ZVNjYWxlczpmdW5jdGlvbigpe3ZhciBvPXRoaXMsdD1vLm9wdGlvbnMscz1vLnNjYWxlc3x8e30sZT1bXSxsPU9iamVjdC5rZXlzKHMpLnJlZHVjZShmdW5jdGlvbih0LGUpe3JldHVybiB0W2VdPSExLHR9LHt9KTt0LnNjYWxlcyYmKGU9ZS5jb25jYXQoKHQuc2NhbGVzLnhBeGVzfHxbXSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybntvcHRpb25zOnQsZHR5cGU6XCJjYXRlZ29yeVwiLGRwb3NpdGlvbjpcImJvdHRvbVwifX0pLCh0LnNjYWxlcy55QXhlc3x8W10pLm1hcChmdW5jdGlvbih0KXtyZXR1cm57b3B0aW9uczp0LGR0eXBlOlwibGluZWFyXCIsZHBvc2l0aW9uOlwibGVmdFwifX0pKSksdC5zY2FsZSYmZS5wdXNoKHtvcHRpb25zOnQuc2NhbGUsZHR5cGU6XCJyYWRpYWxMaW5lYXJcIixpc0RlZmF1bHQ6ITAsZHBvc2l0aW9uOlwiY2hhcnRBcmVhXCJ9KSxjLmVhY2goZSxmdW5jdGlvbih0KXt2YXIgZT10Lm9wdGlvbnMsbj1lLmlkLGk9Yy52YWx1ZU9yRGVmYXVsdChlLnR5cGUsdC5kdHlwZSk7ZChlLnBvc2l0aW9uKSE9PWQodC5kcG9zaXRpb24pJiYoZS5wb3NpdGlvbj10LmRwb3NpdGlvbiksbFtuXT0hMDt2YXIgYT1udWxsO2lmKG4gaW4gcyYmc1tuXS50eXBlPT09aSkoYT1zW25dKS5vcHRpb25zPWUsYS5jdHg9by5jdHgsYS5jaGFydD1vO2Vsc2V7dmFyIHI9bS5nZXRTY2FsZUNvbnN0cnVjdG9yKGkpO2lmKCFyKXJldHVybjthPW5ldyByKHtpZDpuLHR5cGU6aSxvcHRpb25zOmUsY3R4Om8uY3R4LGNoYXJ0Om99KSxzW2EuaWRdPWF9YS5tZXJnZVRpY2tzT3B0aW9ucygpLHQuaXNEZWZhdWx0JiYoby5zY2FsZT1hKX0pLGMuZWFjaChsLGZ1bmN0aW9uKHQsZSl7dHx8ZGVsZXRlIHNbZV19KSxvLnNjYWxlcz1zLG0uYWRkU2NhbGVzVG9MYXlvdXQodGhpcyl9LGJ1aWxkT3JVcGRhdGVDb250cm9sbGVyczpmdW5jdGlvbigpe3ZhciByPXRoaXMsbz1bXSxzPVtdO3JldHVybiBjLmVhY2goci5kYXRhLmRhdGFzZXRzLGZ1bmN0aW9uKHQsZSl7dmFyIG49ci5nZXREYXRhc2V0TWV0YShlKSxpPXQudHlwZXx8ci5jb25maWcudHlwZTtpZihuLnR5cGUmJm4udHlwZSE9PWkmJihyLmRlc3Ryb3lEYXRhc2V0TWV0YShlKSxuPXIuZ2V0RGF0YXNldE1ldGEoZSkpLG4udHlwZT1pLG8ucHVzaChuLnR5cGUpLG4uY29udHJvbGxlciluLmNvbnRyb2xsZXIudXBkYXRlSW5kZXgoZSksbi5jb250cm9sbGVyLmxpbmtTY2FsZXMoKTtlbHNle3ZhciBhPXUuY29udHJvbGxlcnNbbi50eXBlXTtpZih2b2lkIDA9PT1hKXRocm93IG5ldyBFcnJvcignXCInK24udHlwZSsnXCIgaXMgbm90IGEgY2hhcnQgdHlwZS4nKTtuLmNvbnRyb2xsZXI9bmV3IGEocixlKSxzLnB1c2gobi5jb250cm9sbGVyKX19LHIpLHN9LHJlc2V0RWxlbWVudHM6ZnVuY3Rpb24oKXt2YXIgbj10aGlzO2MuZWFjaChuLmRhdGEuZGF0YXNldHMsZnVuY3Rpb24odCxlKXtuLmdldERhdGFzZXRNZXRhKGUpLmNvbnRyb2xsZXIucmVzZXQoKX0sbil9LHJlc2V0OmZ1bmN0aW9uKCl7dGhpcy5yZXNldEVsZW1lbnRzKCksdGhpcy50b29sdGlwLmluaXRpYWxpemUoKX0sdXBkYXRlOmZ1bmN0aW9uKHQpe3ZhciBlLG4saT10aGlzO2lmKHQmJlwib2JqZWN0XCI9PXR5cGVvZiB0fHwodD17ZHVyYXRpb246dCxsYXp5OmFyZ3VtZW50c1sxXX0pLG49KGU9aSkub3B0aW9ucyxjLmVhY2goZS5zY2FsZXMsZnVuY3Rpb24odCl7ci5yZW1vdmVCb3goZSx0KX0pLG49Yy5jb25maWdNZXJnZSh1LmRlZmF1bHRzLmdsb2JhbCx1LmRlZmF1bHRzW2UuY29uZmlnLnR5cGVdLG4pLGUub3B0aW9ucz1lLmNvbmZpZy5vcHRpb25zPW4sZS5lbnN1cmVTY2FsZXNIYXZlSURzKCksZS5idWlsZE9yVXBkYXRlU2NhbGVzKCksZS50b29sdGlwLl9vcHRpb25zPW4udG9vbHRpcHMsZS50b29sdGlwLmluaXRpYWxpemUoKSxnLl9pbnZhbGlkYXRlKGkpLCExIT09Zy5ub3RpZnkoaSxcImJlZm9yZVVwZGF0ZVwiKSl7aS50b29sdGlwLl9kYXRhPWkuZGF0YTt2YXIgYT1pLmJ1aWxkT3JVcGRhdGVDb250cm9sbGVycygpO2MuZWFjaChpLmRhdGEuZGF0YXNldHMsZnVuY3Rpb24odCxlKXtpLmdldERhdGFzZXRNZXRhKGUpLmNvbnRyb2xsZXIuYnVpbGRPclVwZGF0ZUVsZW1lbnRzKCl9LGkpLGkudXBkYXRlTGF5b3V0KCksaS5vcHRpb25zLmFuaW1hdGlvbiYmaS5vcHRpb25zLmFuaW1hdGlvbi5kdXJhdGlvbiYmYy5lYWNoKGEsZnVuY3Rpb24odCl7dC5yZXNldCgpfSksaS51cGRhdGVEYXRhc2V0cygpLGkudG9vbHRpcC5pbml0aWFsaXplKCksaS5sYXN0QWN0aXZlPVtdLGcubm90aWZ5KGksXCJhZnRlclVwZGF0ZVwiKSxpLl9idWZmZXJlZFJlbmRlcj9pLl9idWZmZXJlZFJlcXVlc3Q9e2R1cmF0aW9uOnQuZHVyYXRpb24sZWFzaW5nOnQuZWFzaW5nLGxhenk6dC5sYXp5fTppLnJlbmRlcih0KX19LHVwZGF0ZUxheW91dDpmdW5jdGlvbigpeyExIT09Zy5ub3RpZnkodGhpcyxcImJlZm9yZUxheW91dFwiKSYmKHIudXBkYXRlKHRoaXMsdGhpcy53aWR0aCx0aGlzLmhlaWdodCksZy5ub3RpZnkodGhpcyxcImFmdGVyU2NhbGVVcGRhdGVcIiksZy5ub3RpZnkodGhpcyxcImFmdGVyTGF5b3V0XCIpKX0sdXBkYXRlRGF0YXNldHM6ZnVuY3Rpb24oKXtpZighMSE9PWcubm90aWZ5KHRoaXMsXCJiZWZvcmVEYXRhc2V0c1VwZGF0ZVwiKSl7Zm9yKHZhciB0PTAsZT10aGlzLmRhdGEuZGF0YXNldHMubGVuZ3RoO3Q8ZTsrK3QpdGhpcy51cGRhdGVEYXRhc2V0KHQpO2cubm90aWZ5KHRoaXMsXCJhZnRlckRhdGFzZXRzVXBkYXRlXCIpfX0sdXBkYXRlRGF0YXNldDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldERhdGFzZXRNZXRhKHQpLG49e21ldGE6ZSxpbmRleDp0fTshMSE9PWcubm90aWZ5KHRoaXMsXCJiZWZvcmVEYXRhc2V0VXBkYXRlXCIsW25dKSYmKGUuY29udHJvbGxlci51cGRhdGUoKSxnLm5vdGlmeSh0aGlzLFwiYWZ0ZXJEYXRhc2V0VXBkYXRlXCIsW25dKSl9LHJlbmRlcjpmdW5jdGlvbih0KXt2YXIgZT10aGlzO3QmJlwib2JqZWN0XCI9PXR5cGVvZiB0fHwodD17ZHVyYXRpb246dCxsYXp5OmFyZ3VtZW50c1sxXX0pO3ZhciBuPXQuZHVyYXRpb24saT10Lmxhenk7aWYoITEhPT1nLm5vdGlmeShlLFwiYmVmb3JlUmVuZGVyXCIpKXt2YXIgYT1lLm9wdGlvbnMuYW5pbWF0aW9uLHI9ZnVuY3Rpb24odCl7Zy5ub3RpZnkoZSxcImFmdGVyUmVuZGVyXCIpLGMuY2FsbGJhY2soYSYmYS5vbkNvbXBsZXRlLFt0XSxlKX07aWYoYSYmKHZvaWQgMCE9PW4mJjAhPT1ufHx2b2lkIDA9PT1uJiYwIT09YS5kdXJhdGlvbikpe3ZhciBvPW5ldyBzKHtudW1TdGVwczoobnx8YS5kdXJhdGlvbikvMTYuNjYsZWFzaW5nOnQuZWFzaW5nfHxhLmVhc2luZyxyZW5kZXI6ZnVuY3Rpb24odCxlKXt2YXIgbj1jLmVhc2luZy5lZmZlY3RzW2UuZWFzaW5nXSxpPWUuY3VycmVudFN0ZXAsYT1pL2UubnVtU3RlcHM7dC5kcmF3KG4oYSksYSxpKX0sb25BbmltYXRpb25Qcm9ncmVzczphLm9uUHJvZ3Jlc3Msb25BbmltYXRpb25Db21wbGV0ZTpyfSk7bC5hZGRBbmltYXRpb24oZSxvLG4saSl9ZWxzZSBlLmRyYXcoKSxyKG5ldyBzKHtudW1TdGVwczowLGNoYXJ0OmV9KSk7cmV0dXJuIGV9fSxkcmF3OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7ZS5jbGVhcigpLGMuaXNOdWxsT3JVbmRlZih0KSYmKHQ9MSksZS50cmFuc2l0aW9uKHQpLGUud2lkdGg8PTB8fGUuaGVpZ2h0PD0wfHwhMSE9PWcubm90aWZ5KGUsXCJiZWZvcmVEcmF3XCIsW3RdKSYmKGMuZWFjaChlLmJveGVzLGZ1bmN0aW9uKHQpe3QuZHJhdyhlLmNoYXJ0QXJlYSl9LGUpLGUuc2NhbGUmJmUuc2NhbGUuZHJhdygpLGUuZHJhd0RhdGFzZXRzKHQpLGUuX2RyYXdUb29sdGlwKHQpLGcubm90aWZ5KGUsXCJhZnRlckRyYXdcIixbdF0pKX0sdHJhbnNpdGlvbjpmdW5jdGlvbih0KXtmb3IodmFyIGU9MCxuPSh0aGlzLmRhdGEuZGF0YXNldHN8fFtdKS5sZW5ndGg7ZTxuOysrZSl0aGlzLmlzRGF0YXNldFZpc2libGUoZSkmJnRoaXMuZ2V0RGF0YXNldE1ldGEoZSkuY29udHJvbGxlci50cmFuc2l0aW9uKHQpO3RoaXMudG9vbHRpcC50cmFuc2l0aW9uKHQpfSxkcmF3RGF0YXNldHM6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcztpZighMSE9PWcubm90aWZ5KGUsXCJiZWZvcmVEYXRhc2V0c0RyYXdcIixbdF0pKXtmb3IodmFyIG49KGUuZGF0YS5kYXRhc2V0c3x8W10pLmxlbmd0aC0xOzA8PW47LS1uKWUuaXNEYXRhc2V0VmlzaWJsZShuKSYmZS5kcmF3RGF0YXNldChuLHQpO2cubm90aWZ5KGUsXCJhZnRlckRhdGFzZXRzRHJhd1wiLFt0XSl9fSxkcmF3RGF0YXNldDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZ2V0RGF0YXNldE1ldGEodCksaT17bWV0YTpuLGluZGV4OnQsZWFzaW5nVmFsdWU6ZX07ITEhPT1nLm5vdGlmeSh0aGlzLFwiYmVmb3JlRGF0YXNldERyYXdcIixbaV0pJiYobi5jb250cm9sbGVyLmRyYXcoZSksZy5ub3RpZnkodGhpcyxcImFmdGVyRGF0YXNldERyYXdcIixbaV0pKX0sX2RyYXdUb29sdGlwOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMudG9vbHRpcCxuPXt0b29sdGlwOmUsZWFzaW5nVmFsdWU6dH07ITEhPT1nLm5vdGlmeSh0aGlzLFwiYmVmb3JlVG9vbHRpcERyYXdcIixbbl0pJiYoZS5kcmF3KCksZy5ub3RpZnkodGhpcyxcImFmdGVyVG9vbHRpcERyYXdcIixbbl0pKX0sZ2V0RWxlbWVudEF0RXZlbnQ6ZnVuY3Rpb24odCl7cmV0dXJuIGEubW9kZXMuc2luZ2xlKHRoaXMsdCl9LGdldEVsZW1lbnRzQXRFdmVudDpmdW5jdGlvbih0KXtyZXR1cm4gYS5tb2Rlcy5sYWJlbCh0aGlzLHQse2ludGVyc2VjdDohMH0pfSxnZXRFbGVtZW50c0F0WEF4aXM6ZnVuY3Rpb24odCl7cmV0dXJuIGEubW9kZXNbXCJ4LWF4aXNcIl0odGhpcyx0LHtpbnRlcnNlY3Q6ITB9KX0sZ2V0RWxlbWVudHNBdEV2ZW50Rm9yTW9kZTpmdW5jdGlvbih0LGUsbil7dmFyIGk9YS5tb2Rlc1tlXTtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBpP2kodGhpcyx0LG4pOltdfSxnZXREYXRhc2V0QXRFdmVudDpmdW5jdGlvbih0KXtyZXR1cm4gYS5tb2Rlcy5kYXRhc2V0KHRoaXMsdCx7aW50ZXJzZWN0OiEwfSl9LGdldERhdGFzZXRNZXRhOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZGF0YS5kYXRhc2V0c1t0XTtlLl9tZXRhfHwoZS5fbWV0YT17fSk7dmFyIG49ZS5fbWV0YVt0aGlzLmlkXTtyZXR1cm4gbnx8KG49ZS5fbWV0YVt0aGlzLmlkXT17dHlwZTpudWxsLGRhdGE6W10sZGF0YXNldDpudWxsLGNvbnRyb2xsZXI6bnVsbCxoaWRkZW46bnVsbCx4QXhpc0lEOm51bGwseUF4aXNJRDpudWxsfSksbn0sZ2V0VmlzaWJsZURhdGFzZXRDb3VudDpmdW5jdGlvbigpe2Zvcih2YXIgdD0wLGU9MCxuPXRoaXMuZGF0YS5kYXRhc2V0cy5sZW5ndGg7ZTxuOysrZSl0aGlzLmlzRGF0YXNldFZpc2libGUoZSkmJnQrKztyZXR1cm4gdH0saXNEYXRhc2V0VmlzaWJsZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldERhdGFzZXRNZXRhKHQpO3JldHVyblwiYm9vbGVhblwiPT10eXBlb2YgZS5oaWRkZW4/IWUuaGlkZGVuOiF0aGlzLmRhdGEuZGF0YXNldHNbdF0uaGlkZGVufSxnZW5lcmF0ZUxlZ2VuZDpmdW5jdGlvbigpe3JldHVybiB0aGlzLm9wdGlvbnMubGVnZW5kQ2FsbGJhY2sodGhpcyl9LGRlc3Ryb3lEYXRhc2V0TWV0YTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmlkLG49dGhpcy5kYXRhLmRhdGFzZXRzW3RdLGk9bi5fbWV0YSYmbi5fbWV0YVtlXTtpJiYoaS5jb250cm9sbGVyLmRlc3Ryb3koKSxkZWxldGUgbi5fbWV0YVtlXSl9LGRlc3Ryb3k6ZnVuY3Rpb24oKXt2YXIgdCxlLG49dGhpcyxpPW4uY2FudmFzO2ZvcihuLnN0b3AoKSx0PTAsZT1uLmRhdGEuZGF0YXNldHMubGVuZ3RoO3Q8ZTsrK3Qpbi5kZXN0cm95RGF0YXNldE1ldGEodCk7aSYmKG4udW5iaW5kRXZlbnRzKCksYy5jYW52YXMuY2xlYXIobiksZi5yZWxlYXNlQ29udGV4dChuLmN0eCksbi5jYW52YXM9bnVsbCxuLmN0eD1udWxsKSxnLm5vdGlmeShuLFwiZGVzdHJveVwiKSxkZWxldGUgdS5pbnN0YW5jZXNbbi5pZF19LHRvQmFzZTY0SW1hZ2U6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jYW52YXMudG9EYXRhVVJMLmFwcGx5KHRoaXMuY2FudmFzLGFyZ3VtZW50cyl9LGluaXRUb29sVGlwOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0LnRvb2x0aXA9bmV3IGkoe19jaGFydDp0LF9jaGFydEluc3RhbmNlOnQsX2RhdGE6dC5kYXRhLF9vcHRpb25zOnQub3B0aW9ucy50b29sdGlwc30sdCl9LGJpbmRFdmVudHM6ZnVuY3Rpb24oKXt2YXIgZT10aGlzLG49ZS5fbGlzdGVuZXJzPXt9LGk9ZnVuY3Rpb24oKXtlLmV2ZW50SGFuZGxlci5hcHBseShlLGFyZ3VtZW50cyl9O2MuZWFjaChlLm9wdGlvbnMuZXZlbnRzLGZ1bmN0aW9uKHQpe2YuYWRkRXZlbnRMaXN0ZW5lcihlLHQsaSksblt0XT1pfSksZS5vcHRpb25zLnJlc3BvbnNpdmUmJihpPWZ1bmN0aW9uKCl7ZS5yZXNpemUoKX0sZi5hZGRFdmVudExpc3RlbmVyKGUsXCJyZXNpemVcIixpKSxuLnJlc2l6ZT1pKX0sdW5iaW5kRXZlbnRzOmZ1bmN0aW9uKCl7dmFyIG49dGhpcyx0PW4uX2xpc3RlbmVyczt0JiYoZGVsZXRlIG4uX2xpc3RlbmVycyxjLmVhY2godCxmdW5jdGlvbih0LGUpe2YucmVtb3ZlRXZlbnRMaXN0ZW5lcihuLGUsdCl9KSl9LHVwZGF0ZUhvdmVyU3R5bGU6ZnVuY3Rpb24odCxlLG4pe3ZhciBpLGEscixvPW4/XCJzZXRIb3ZlclN0eWxlXCI6XCJyZW1vdmVIb3ZlclN0eWxlXCI7Zm9yKGE9MCxyPXQubGVuZ3RoO2E8cjsrK2EpKGk9dFthXSkmJnRoaXMuZ2V0RGF0YXNldE1ldGEoaS5fZGF0YXNldEluZGV4KS5jb250cm9sbGVyW29dKGkpfSxldmVudEhhbmRsZXI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUudG9vbHRpcDtpZighMSE9PWcubm90aWZ5KGUsXCJiZWZvcmVFdmVudFwiLFt0XSkpe2UuX2J1ZmZlcmVkUmVuZGVyPSEwLGUuX2J1ZmZlcmVkUmVxdWVzdD1udWxsO3ZhciBpPWUuaGFuZGxlRXZlbnQodCk7biYmKGk9bi5fc3RhcnQ/bi5oYW5kbGVFdmVudCh0KTppfG4uaGFuZGxlRXZlbnQodCkpLGcubm90aWZ5KGUsXCJhZnRlckV2ZW50XCIsW3RdKTt2YXIgYT1lLl9idWZmZXJlZFJlcXVlc3Q7cmV0dXJuIGE/ZS5yZW5kZXIoYSk6aSYmIWUuYW5pbWF0aW5nJiYoZS5zdG9wKCksZS5yZW5kZXIoe2R1cmF0aW9uOmUub3B0aW9ucy5ob3Zlci5hbmltYXRpb25EdXJhdGlvbixsYXp5OiEwfSkpLGUuX2J1ZmZlcmVkUmVuZGVyPSExLGUuX2J1ZmZlcmVkUmVxdWVzdD1udWxsLGV9fSxoYW5kbGVFdmVudDpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMsaT1uLm9wdGlvbnN8fHt9LGE9aS5ob3ZlcjtyZXR1cm4gbi5sYXN0QWN0aXZlPW4ubGFzdEFjdGl2ZXx8W10sXCJtb3VzZW91dFwiPT09dC50eXBlP24uYWN0aXZlPVtdOm4uYWN0aXZlPW4uZ2V0RWxlbWVudHNBdEV2ZW50Rm9yTW9kZSh0LGEubW9kZSxhKSxjLmNhbGxiYWNrKGkub25Ib3Zlcnx8aS5ob3Zlci5vbkhvdmVyLFt0Lm5hdGl2ZSxuLmFjdGl2ZV0sbiksXCJtb3VzZXVwXCIhPT10LnR5cGUmJlwiY2xpY2tcIiE9PXQudHlwZXx8aS5vbkNsaWNrJiZpLm9uQ2xpY2suY2FsbChuLHQubmF0aXZlLG4uYWN0aXZlKSxuLmxhc3RBY3RpdmUubGVuZ3RoJiZuLnVwZGF0ZUhvdmVyU3R5bGUobi5sYXN0QWN0aXZlLGEubW9kZSwhMSksbi5hY3RpdmUubGVuZ3RoJiZhLm1vZGUmJm4udXBkYXRlSG92ZXJTdHlsZShuLmFjdGl2ZSxhLm1vZGUsITApLGU9IWMuYXJyYXlFcXVhbHMobi5hY3RpdmUsbi5sYXN0QWN0aXZlKSxuLmxhc3RBY3RpdmU9bi5hY3RpdmUsZX19KSx1LkNvbnRyb2xsZXI9dX19LHsyMjoyMiwyMzoyMywyNjoyNiwyOToyOSwzMTozMSwzMjozMiwzNDozNCwzNjozNiw0Njo0Niw0OTo0OX1dLDI1OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIHM9dCg0Nik7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciByPVtcInB1c2hcIixcInBvcFwiLFwic2hpZnRcIixcInNwbGljZVwiLFwidW5zaGlmdFwiXTtmdW5jdGlvbiBvKGUsdCl7dmFyIG49ZS5fY2hhcnRqcztpZihuKXt2YXIgaT1uLmxpc3RlbmVycyxhPWkuaW5kZXhPZih0KTstMSE9PWEmJmkuc3BsaWNlKGEsMSksMDxpLmxlbmd0aHx8KHIuZm9yRWFjaChmdW5jdGlvbih0KXtkZWxldGUgZVt0XX0pLGRlbGV0ZSBlLl9jaGFydGpzKX19dC5EYXRhc2V0Q29udHJvbGxlcj1mdW5jdGlvbih0LGUpe3RoaXMuaW5pdGlhbGl6ZSh0LGUpfSxzLmV4dGVuZCh0LkRhdGFzZXRDb250cm9sbGVyLnByb3RvdHlwZSx7ZGF0YXNldEVsZW1lbnRUeXBlOm51bGwsZGF0YUVsZW1lbnRUeXBlOm51bGwsaW5pdGlhbGl6ZTpmdW5jdGlvbih0LGUpe3RoaXMuY2hhcnQ9dCx0aGlzLmluZGV4PWUsdGhpcy5saW5rU2NhbGVzKCksdGhpcy5hZGRFbGVtZW50cygpfSx1cGRhdGVJbmRleDpmdW5jdGlvbih0KXt0aGlzLmluZGV4PXR9LGxpbmtTY2FsZXM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5nZXRNZXRhKCksbj10LmdldERhdGFzZXQoKTtudWxsIT09ZS54QXhpc0lEJiZlLnhBeGlzSUQgaW4gdC5jaGFydC5zY2FsZXN8fChlLnhBeGlzSUQ9bi54QXhpc0lEfHx0LmNoYXJ0Lm9wdGlvbnMuc2NhbGVzLnhBeGVzWzBdLmlkKSxudWxsIT09ZS55QXhpc0lEJiZlLnlBeGlzSUQgaW4gdC5jaGFydC5zY2FsZXN8fChlLnlBeGlzSUQ9bi55QXhpc0lEfHx0LmNoYXJ0Lm9wdGlvbnMuc2NhbGVzLnlBeGVzWzBdLmlkKX0sZ2V0RGF0YXNldDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmNoYXJ0LmRhdGEuZGF0YXNldHNbdGhpcy5pbmRleF19LGdldE1ldGE6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5jaGFydC5nZXREYXRhc2V0TWV0YSh0aGlzLmluZGV4KX0sZ2V0U2NhbGVGb3JJZDpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5jaGFydC5zY2FsZXNbdF19LHJlc2V0OmZ1bmN0aW9uKCl7dGhpcy51cGRhdGUoITApfSxkZXN0cm95OmZ1bmN0aW9uKCl7dGhpcy5fZGF0YSYmbyh0aGlzLl9kYXRhLHRoaXMpfSxjcmVhdGVNZXRhRGF0YXNldDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZGF0YXNldEVsZW1lbnRUeXBlO3JldHVybiB0JiZuZXcgdCh7X2NoYXJ0OnRoaXMuY2hhcnQsX2RhdGFzZXRJbmRleDp0aGlzLmluZGV4fSl9LGNyZWF0ZU1ldGFEYXRhOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuZGF0YUVsZW1lbnRUeXBlO3JldHVybiBlJiZuZXcgZSh7X2NoYXJ0OnRoaXMuY2hhcnQsX2RhdGFzZXRJbmRleDp0aGlzLmluZGV4LF9pbmRleDp0fSl9LGFkZEVsZW1lbnRzOmZ1bmN0aW9uKCl7dmFyIHQsZSxuPXRoaXMuZ2V0TWV0YSgpLGk9dGhpcy5nZXREYXRhc2V0KCkuZGF0YXx8W10sYT1uLmRhdGE7Zm9yKHQ9MCxlPWkubGVuZ3RoO3Q8ZTsrK3QpYVt0XT1hW3RdfHx0aGlzLmNyZWF0ZU1ldGFEYXRhKHQpO24uZGF0YXNldD1uLmRhdGFzZXR8fHRoaXMuY3JlYXRlTWV0YURhdGFzZXQoKX0sYWRkRWxlbWVudEFuZFJlc2V0OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY3JlYXRlTWV0YURhdGEodCk7dGhpcy5nZXRNZXRhKCkuZGF0YS5zcGxpY2UodCwwLGUpLHRoaXMudXBkYXRlRWxlbWVudChlLHQsITApfSxidWlsZE9yVXBkYXRlRWxlbWVudHM6ZnVuY3Rpb24oKXt2YXIgYSx0LGU9dGhpcyxuPWUuZ2V0RGF0YXNldCgpLGk9bi5kYXRhfHwobi5kYXRhPVtdKTtlLl9kYXRhIT09aSYmKGUuX2RhdGEmJm8oZS5fZGF0YSxlKSx0PWUsKGE9aSkuX2NoYXJ0anM/YS5fY2hhcnRqcy5saXN0ZW5lcnMucHVzaCh0KTooT2JqZWN0LmRlZmluZVByb3BlcnR5KGEsXCJfY2hhcnRqc1wiLHtjb25maWd1cmFibGU6ITAsZW51bWVyYWJsZTohMSx2YWx1ZTp7bGlzdGVuZXJzOlt0XX19KSxyLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIG49XCJvbkRhdGFcIit0LmNoYXJBdCgwKS50b1VwcGVyQ2FzZSgpK3Quc2xpY2UoMSksaT1hW3RdO09iamVjdC5kZWZpbmVQcm9wZXJ0eShhLHQse2NvbmZpZ3VyYWJsZTohMCxlbnVtZXJhYmxlOiExLHZhbHVlOmZ1bmN0aW9uKCl7dmFyIGU9QXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzKSx0PWkuYXBwbHkodGhpcyxlKTtyZXR1cm4gcy5lYWNoKGEuX2NoYXJ0anMubGlzdGVuZXJzLGZ1bmN0aW9uKHQpe1wiZnVuY3Rpb25cIj09dHlwZW9mIHRbbl0mJnRbbl0uYXBwbHkodCxlKX0pLHR9fSl9KSksZS5fZGF0YT1pKSxlLnJlc3luY0VsZW1lbnRzKCl9LHVwZGF0ZTpzLm5vb3AsdHJhbnNpdGlvbjpmdW5jdGlvbih0KXtmb3IodmFyIGU9dGhpcy5nZXRNZXRhKCksbj1lLmRhdGF8fFtdLGk9bi5sZW5ndGgsYT0wO2E8aTsrK2EpblthXS50cmFuc2l0aW9uKHQpO2UuZGF0YXNldCYmZS5kYXRhc2V0LnRyYW5zaXRpb24odCl9LGRyYXc6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLmdldE1ldGEoKSxlPXQuZGF0YXx8W10sbj1lLmxlbmd0aCxpPTA7Zm9yKHQuZGF0YXNldCYmdC5kYXRhc2V0LmRyYXcoKTtpPG47KytpKWVbaV0uZHJhdygpfSxyZW1vdmVIb3ZlclN0eWxlOmZ1bmN0aW9uKHQpe3MubWVyZ2UodC5fbW9kZWwsdC4kcHJldmlvdXNTdHlsZXx8e30pLGRlbGV0ZSB0LiRwcmV2aW91c1N0eWxlfSxzZXRIb3ZlclN0eWxlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuY2hhcnQuZGF0YS5kYXRhc2V0c1t0Ll9kYXRhc2V0SW5kZXhdLG49dC5faW5kZXgsaT10LmN1c3RvbXx8e30sYT1zLnZhbHVlQXRJbmRleE9yRGVmYXVsdCxyPXMuZ2V0SG92ZXJDb2xvcixvPXQuX21vZGVsO3QuJHByZXZpb3VzU3R5bGU9e2JhY2tncm91bmRDb2xvcjpvLmJhY2tncm91bmRDb2xvcixib3JkZXJDb2xvcjpvLmJvcmRlckNvbG9yLGJvcmRlcldpZHRoOm8uYm9yZGVyV2lkdGh9LG8uYmFja2dyb3VuZENvbG9yPWkuaG92ZXJCYWNrZ3JvdW5kQ29sb3I/aS5ob3ZlckJhY2tncm91bmRDb2xvcjphKGUuaG92ZXJCYWNrZ3JvdW5kQ29sb3IsbixyKG8uYmFja2dyb3VuZENvbG9yKSksby5ib3JkZXJDb2xvcj1pLmhvdmVyQm9yZGVyQ29sb3I/aS5ob3ZlckJvcmRlckNvbG9yOmEoZS5ob3ZlckJvcmRlckNvbG9yLG4scihvLmJvcmRlckNvbG9yKSksby5ib3JkZXJXaWR0aD1pLmhvdmVyQm9yZGVyV2lkdGg/aS5ob3ZlckJvcmRlcldpZHRoOmEoZS5ob3ZlckJvcmRlcldpZHRoLG4sby5ib3JkZXJXaWR0aCl9LHJlc3luY0VsZW1lbnRzOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5nZXRNZXRhKCksZT10aGlzLmdldERhdGFzZXQoKS5kYXRhLG49dC5kYXRhLmxlbmd0aCxpPWUubGVuZ3RoO2k8bj90LmRhdGEuc3BsaWNlKGksbi1pKTpuPGkmJnRoaXMuaW5zZXJ0RWxlbWVudHMobixpLW4pfSxpbnNlcnRFbGVtZW50czpmdW5jdGlvbih0LGUpe2Zvcih2YXIgbj0wO248ZTsrK24pdGhpcy5hZGRFbGVtZW50QW5kUmVzZXQodCtuKX0sb25EYXRhUHVzaDpmdW5jdGlvbigpe3RoaXMuaW5zZXJ0RWxlbWVudHModGhpcy5nZXREYXRhc2V0KCkuZGF0YS5sZW5ndGgtMSxhcmd1bWVudHMubGVuZ3RoKX0sb25EYXRhUG9wOmZ1bmN0aW9uKCl7dGhpcy5nZXRNZXRhKCkuZGF0YS5wb3AoKX0sb25EYXRhU2hpZnQ6ZnVuY3Rpb24oKXt0aGlzLmdldE1ldGEoKS5kYXRhLnNoaWZ0KCl9LG9uRGF0YVNwbGljZTpmdW5jdGlvbih0LGUpe3RoaXMuZ2V0TWV0YSgpLmRhdGEuc3BsaWNlKHQsZSksdGhpcy5pbnNlcnRFbGVtZW50cyh0LGFyZ3VtZW50cy5sZW5ndGgtMil9LG9uRGF0YVVuc2hpZnQ6ZnVuY3Rpb24oKXt0aGlzLmluc2VydEVsZW1lbnRzKDAsYXJndW1lbnRzLmxlbmd0aCl9fSksdC5EYXRhc2V0Q29udHJvbGxlci5leHRlbmQ9cy5pbmhlcml0c319LHs0Njo0Nn1dLDI2OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9dCg0Nik7ZS5leHBvcnRzPXtfc2V0OmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGkubWVyZ2UodGhpc1t0XXx8KHRoaXNbdF09e30pLGUpfX19LHs0Njo0Nn1dLDI3OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGc9dCgyKSxpPXQoNDYpO3ZhciBhPWZ1bmN0aW9uKHQpe2kuZXh0ZW5kKHRoaXMsdCksdGhpcy5pbml0aWFsaXplLmFwcGx5KHRoaXMsYXJndW1lbnRzKX07aS5leHRlbmQoYS5wcm90b3R5cGUse2luaXRpYWxpemU6ZnVuY3Rpb24oKXt0aGlzLmhpZGRlbj0hMX0scGl2b3Q6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3JldHVybiB0Ll92aWV3fHwodC5fdmlldz1pLmNsb25lKHQuX21vZGVsKSksdC5fc3RhcnQ9e30sdH0sdHJhbnNpdGlvbjpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5fbW9kZWwsaT1lLl9zdGFydCxhPWUuX3ZpZXc7cmV0dXJuIG4mJjEhPT10PyhhfHwoYT1lLl92aWV3PXt9KSxpfHwoaT1lLl9zdGFydD17fSksZnVuY3Rpb24odCxlLG4saSl7dmFyIGEscixvLHMsbCx1LGQsaCxjLGY9T2JqZWN0LmtleXMobik7Zm9yKGE9MCxyPWYubGVuZ3RoO2E8cjsrK2EpaWYodT1uW289ZlthXV0sZS5oYXNPd25Qcm9wZXJ0eShvKXx8KGVbb109dSksKHM9ZVtvXSkhPT11JiZcIl9cIiE9PW9bMF0pe2lmKHQuaGFzT3duUHJvcGVydHkobyl8fCh0W29dPXMpLChkPXR5cGVvZiB1KT09dHlwZW9mKGw9dFtvXSkpaWYoXCJzdHJpbmdcIj09PWQpe2lmKChoPWcobCkpLnZhbGlkJiYoYz1nKHUpKS52YWxpZCl7ZVtvXT1jLm1peChoLGkpLnJnYlN0cmluZygpO2NvbnRpbnVlfX1lbHNlIGlmKFwibnVtYmVyXCI9PT1kJiZpc0Zpbml0ZShsKSYmaXNGaW5pdGUodSkpe2Vbb109bCsodS1sKSppO2NvbnRpbnVlfWVbb109dX19KGksYSxuLHQpKTooZS5fdmlldz1uLGUuX3N0YXJ0PW51bGwpLGV9LHRvb2x0aXBQb3NpdGlvbjpmdW5jdGlvbigpe3JldHVybnt4OnRoaXMuX21vZGVsLngseTp0aGlzLl9tb2RlbC55fX0saGFzVmFsdWU6ZnVuY3Rpb24oKXtyZXR1cm4gaS5pc051bWJlcih0aGlzLl9tb2RlbC54KSYmaS5pc051bWJlcih0aGlzLl9tb2RlbC55KX19KSxhLmV4dGVuZD1pLmluaGVyaXRzLGUuZXhwb3J0cz1hfSx7MjoyLDQ2OjQ2fV0sMjg6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT10KDIpLGE9dCgyNiksZz10KDQ2KSxsPXQoMzQpO2UuZXhwb3J0cz1mdW5jdGlvbigpe2Z1bmN0aW9uIGQodCxlLG4pe3ZhciBpO3JldHVyblwic3RyaW5nXCI9PXR5cGVvZiB0PyhpPXBhcnNlSW50KHQsMTApLC0xIT09dC5pbmRleE9mKFwiJVwiKSYmKGk9aS8xMDAqZS5wYXJlbnROb2RlW25dKSk6aT10LGl9ZnVuY3Rpb24gaCh0KXtyZXR1cm4gbnVsbCE9dCYmXCJub25lXCIhPT10fWZ1bmN0aW9uIGUodCxlLG4pe3ZhciBpPWRvY3VtZW50LmRlZmF1bHRWaWV3LGE9Zy5fZ2V0UGFyZW50Tm9kZSh0KSxyPWkuZ2V0Q29tcHV0ZWRTdHlsZSh0KVtlXSxvPWkuZ2V0Q29tcHV0ZWRTdHlsZShhKVtlXSxzPWgociksbD1oKG8pLHU9TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZO3JldHVybiBzfHxsP01hdGgubWluKHM/ZChyLHQsbik6dSxsP2QobyxhLG4pOnUpOlwibm9uZVwifWcuY29uZmlnTWVyZ2U9ZnVuY3Rpb24oKXtyZXR1cm4gZy5tZXJnZShnLmNsb25lKGFyZ3VtZW50c1swXSksW10uc2xpY2UuY2FsbChhcmd1bWVudHMsMSkse21lcmdlcjpmdW5jdGlvbih0LGUsbixpKXt2YXIgYT1lW3RdfHx7fSxyPW5bdF07XCJzY2FsZXNcIj09PXQ/ZVt0XT1nLnNjYWxlTWVyZ2UoYSxyKTpcInNjYWxlXCI9PT10P2VbdF09Zy5tZXJnZShhLFtsLmdldFNjYWxlRGVmYXVsdHMoci50eXBlKSxyXSk6Zy5fbWVyZ2VyKHQsZSxuLGkpfX0pfSxnLnNjYWxlTWVyZ2U9ZnVuY3Rpb24oKXtyZXR1cm4gZy5tZXJnZShnLmNsb25lKGFyZ3VtZW50c1swXSksW10uc2xpY2UuY2FsbChhcmd1bWVudHMsMSkse21lcmdlcjpmdW5jdGlvbih0LGUsbixpKXtpZihcInhBeGVzXCI9PT10fHxcInlBeGVzXCI9PT10KXt2YXIgYSxyLG8scz1uW3RdLmxlbmd0aDtmb3IoZVt0XXx8KGVbdF09W10pLGE9MDthPHM7KythKW89blt0XVthXSxyPWcudmFsdWVPckRlZmF1bHQoby50eXBlLFwieEF4ZXNcIj09PXQ/XCJjYXRlZ29yeVwiOlwibGluZWFyXCIpLGE+PWVbdF0ubGVuZ3RoJiZlW3RdLnB1c2goe30pLCFlW3RdW2FdLnR5cGV8fG8udHlwZSYmby50eXBlIT09ZVt0XVthXS50eXBlP2cubWVyZ2UoZVt0XVthXSxbbC5nZXRTY2FsZURlZmF1bHRzKHIpLG9dKTpnLm1lcmdlKGVbdF1bYV0sbyl9ZWxzZSBnLl9tZXJnZXIodCxlLG4saSl9fSl9LGcud2hlcmU9ZnVuY3Rpb24odCxlKXtpZihnLmlzQXJyYXkodCkmJkFycmF5LnByb3RvdHlwZS5maWx0ZXIpcmV0dXJuIHQuZmlsdGVyKGUpO3ZhciBuPVtdO3JldHVybiBnLmVhY2godCxmdW5jdGlvbih0KXtlKHQpJiZuLnB1c2godCl9KSxufSxnLmZpbmRJbmRleD1BcnJheS5wcm90b3R5cGUuZmluZEluZGV4P2Z1bmN0aW9uKHQsZSxuKXtyZXR1cm4gdC5maW5kSW5kZXgoZSxuKX06ZnVuY3Rpb24odCxlLG4pe249dm9pZCAwPT09bj90Om47Zm9yKHZhciBpPTAsYT10Lmxlbmd0aDtpPGE7KytpKWlmKGUuY2FsbChuLHRbaV0saSx0KSlyZXR1cm4gaTtyZXR1cm4tMX0sZy5maW5kTmV4dFdoZXJlPWZ1bmN0aW9uKHQsZSxuKXtnLmlzTnVsbE9yVW5kZWYobikmJihuPS0xKTtmb3IodmFyIGk9bisxO2k8dC5sZW5ndGg7aSsrKXt2YXIgYT10W2ldO2lmKGUoYSkpcmV0dXJuIGF9fSxnLmZpbmRQcmV2aW91c1doZXJlPWZ1bmN0aW9uKHQsZSxuKXtnLmlzTnVsbE9yVW5kZWYobikmJihuPXQubGVuZ3RoKTtmb3IodmFyIGk9bi0xOzA8PWk7aS0tKXt2YXIgYT10W2ldO2lmKGUoYSkpcmV0dXJuIGF9fSxnLmlzTnVtYmVyPWZ1bmN0aW9uKHQpe3JldHVybiFpc05hTihwYXJzZUZsb2F0KHQpKSYmaXNGaW5pdGUodCl9LGcuYWxtb3N0RXF1YWxzPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4gTWF0aC5hYnModC1lKTxufSxnLmFsbW9zdFdob2xlPWZ1bmN0aW9uKHQsZSl7dmFyIG49TWF0aC5yb3VuZCh0KTtyZXR1cm4gbi1lPHQmJnQ8bitlfSxnLm1heD1mdW5jdGlvbih0KXtyZXR1cm4gdC5yZWR1Y2UoZnVuY3Rpb24odCxlKXtyZXR1cm4gaXNOYU4oZSk/dDpNYXRoLm1heCh0LGUpfSxOdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFkpfSxnLm1pbj1mdW5jdGlvbih0KXtyZXR1cm4gdC5yZWR1Y2UoZnVuY3Rpb24odCxlKXtyZXR1cm4gaXNOYU4oZSk/dDpNYXRoLm1pbih0LGUpfSxOdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFkpfSxnLnNpZ249TWF0aC5zaWduP2Z1bmN0aW9uKHQpe3JldHVybiBNYXRoLnNpZ24odCl9OmZ1bmN0aW9uKHQpe3JldHVybiAwPT09KHQ9K3QpfHxpc05hTih0KT90OjA8dD8xOi0xfSxnLmxvZzEwPU1hdGgubG9nMTA/ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGgubG9nMTAodCl9OmZ1bmN0aW9uKHQpe3ZhciBlPU1hdGgubG9nKHQpKk1hdGguTE9HMTBFLG49TWF0aC5yb3VuZChlKTtyZXR1cm4gdD09PU1hdGgucG93KDEwLG4pP246ZX0sZy50b1JhZGlhbnM9ZnVuY3Rpb24odCl7cmV0dXJuIHQqKE1hdGguUEkvMTgwKX0sZy50b0RlZ3JlZXM9ZnVuY3Rpb24odCl7cmV0dXJuIHQqKDE4MC9NYXRoLlBJKX0sZy5nZXRBbmdsZUZyb21Qb2ludD1mdW5jdGlvbih0LGUpe3ZhciBuPWUueC10LngsaT1lLnktdC55LGE9TWF0aC5zcXJ0KG4qbitpKmkpLHI9TWF0aC5hdGFuMihpLG4pO3JldHVybiByPC0uNSpNYXRoLlBJJiYocis9MipNYXRoLlBJKSx7YW5nbGU6cixkaXN0YW5jZTphfX0sZy5kaXN0YW5jZUJldHdlZW5Qb2ludHM9ZnVuY3Rpb24odCxlKXtyZXR1cm4gTWF0aC5zcXJ0KE1hdGgucG93KGUueC10LngsMikrTWF0aC5wb3coZS55LXQueSwyKSl9LGcuYWxpYXNQaXhlbD1mdW5jdGlvbih0KXtyZXR1cm4gdCUyPT0wPzA6LjV9LGcuc3BsaW5lQ3VydmU9ZnVuY3Rpb24odCxlLG4saSl7dmFyIGE9dC5za2lwP2U6dCxyPWUsbz1uLnNraXA/ZTpuLHM9TWF0aC5zcXJ0KE1hdGgucG93KHIueC1hLngsMikrTWF0aC5wb3coci55LWEueSwyKSksbD1NYXRoLnNxcnQoTWF0aC5wb3coby54LXIueCwyKStNYXRoLnBvdyhvLnktci55LDIpKSx1PXMvKHMrbCksZD1sLyhzK2wpLGg9aSoodT1pc05hTih1KT8wOnUpLGM9aSooZD1pc05hTihkKT8wOmQpO3JldHVybntwcmV2aW91czp7eDpyLngtaCooby54LWEueCkseTpyLnktaCooby55LWEueSl9LG5leHQ6e3g6ci54K2MqKG8ueC1hLngpLHk6ci55K2MqKG8ueS1hLnkpfX19LGcuRVBTSUxPTj1OdW1iZXIuRVBTSUxPTnx8MWUtMTQsZy5zcGxpbmVDdXJ2ZU1vbm90b25lPWZ1bmN0aW9uKHQpe3ZhciBlLG4saSxhLHIsbyxzLGwsdSxkPSh0fHxbXSkubWFwKGZ1bmN0aW9uKHQpe3JldHVybnttb2RlbDp0Ll9tb2RlbCxkZWx0YUs6MCxtSzowfX0pLGg9ZC5sZW5ndGg7Zm9yKGU9MDtlPGg7KytlKWlmKCEoaT1kW2VdKS5tb2RlbC5za2lwKXtpZihuPTA8ZT9kW2UtMV06bnVsbCwoYT1lPGgtMT9kW2UrMV06bnVsbCkmJiFhLm1vZGVsLnNraXApe3ZhciBjPWEubW9kZWwueC1pLm1vZGVsLng7aS5kZWx0YUs9MCE9PWM/KGEubW9kZWwueS1pLm1vZGVsLnkpL2M6MH0hbnx8bi5tb2RlbC5za2lwP2kubUs9aS5kZWx0YUs6IWF8fGEubW9kZWwuc2tpcD9pLm1LPW4uZGVsdGFLOnRoaXMuc2lnbihuLmRlbHRhSykhPT10aGlzLnNpZ24oaS5kZWx0YUspP2kubUs9MDppLm1LPShuLmRlbHRhSytpLmRlbHRhSykvMn1mb3IoZT0wO2U8aC0xOysrZSlpPWRbZV0sYT1kW2UrMV0saS5tb2RlbC5za2lwfHxhLm1vZGVsLnNraXB8fChnLmFsbW9zdEVxdWFscyhpLmRlbHRhSywwLHRoaXMuRVBTSUxPTik/aS5tSz1hLm1LPTA6KHI9aS5tSy9pLmRlbHRhSyxvPWEubUsvaS5kZWx0YUssKGw9TWF0aC5wb3cociwyKStNYXRoLnBvdyhvLDIpKTw9OXx8KHM9My9NYXRoLnNxcnQobCksaS5tSz1yKnMqaS5kZWx0YUssYS5tSz1vKnMqaS5kZWx0YUspKSk7Zm9yKGU9MDtlPGg7KytlKShpPWRbZV0pLm1vZGVsLnNraXB8fChuPTA8ZT9kW2UtMV06bnVsbCxhPWU8aC0xP2RbZSsxXTpudWxsLG4mJiFuLm1vZGVsLnNraXAmJih1PShpLm1vZGVsLngtbi5tb2RlbC54KS8zLGkubW9kZWwuY29udHJvbFBvaW50UHJldmlvdXNYPWkubW9kZWwueC11LGkubW9kZWwuY29udHJvbFBvaW50UHJldmlvdXNZPWkubW9kZWwueS11KmkubUspLGEmJiFhLm1vZGVsLnNraXAmJih1PShhLm1vZGVsLngtaS5tb2RlbC54KS8zLGkubW9kZWwuY29udHJvbFBvaW50TmV4dFg9aS5tb2RlbC54K3UsaS5tb2RlbC5jb250cm9sUG9pbnROZXh0WT1pLm1vZGVsLnkrdSppLm1LKSl9LGcubmV4dEl0ZW09ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuP2U+PXQubGVuZ3RoLTE/dFswXTp0W2UrMV06ZT49dC5sZW5ndGgtMT90W3QubGVuZ3RoLTFdOnRbZSsxXX0sZy5wcmV2aW91c0l0ZW09ZnVuY3Rpb24odCxlLG4pe3JldHVybiBuP2U8PTA/dFt0Lmxlbmd0aC0xXTp0W2UtMV06ZTw9MD90WzBdOnRbZS0xXX0sZy5uaWNlTnVtPWZ1bmN0aW9uKHQsZSl7dmFyIG49TWF0aC5mbG9vcihnLmxvZzEwKHQpKSxpPXQvTWF0aC5wb3coMTAsbik7cmV0dXJuKGU/aTwxLjU/MTppPDM/MjppPDc/NToxMDppPD0xPzE6aTw9Mj8yOmk8PTU/NToxMCkqTWF0aC5wb3coMTAsbil9LGcucmVxdWVzdEFuaW1GcmFtZT1cInVuZGVmaW5lZFwiPT10eXBlb2Ygd2luZG93P2Z1bmN0aW9uKHQpe3QoKX06d2luZG93LnJlcXVlc3RBbmltYXRpb25GcmFtZXx8d2luZG93LndlYmtpdFJlcXVlc3RBbmltYXRpb25GcmFtZXx8d2luZG93Lm1velJlcXVlc3RBbmltYXRpb25GcmFtZXx8d2luZG93Lm9SZXF1ZXN0QW5pbWF0aW9uRnJhbWV8fHdpbmRvdy5tc1JlcXVlc3RBbmltYXRpb25GcmFtZXx8ZnVuY3Rpb24odCl7cmV0dXJuIHdpbmRvdy5zZXRUaW1lb3V0KHQsMWUzLzYwKX0sZy5nZXRSZWxhdGl2ZVBvc2l0aW9uPWZ1bmN0aW9uKHQsZSl7dmFyIG4saSxhPXQub3JpZ2luYWxFdmVudHx8dCxyPXQudGFyZ2V0fHx0LnNyY0VsZW1lbnQsbz1yLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLHM9YS50b3VjaGVzO2k9cyYmMDxzLmxlbmd0aD8obj1zWzBdLmNsaWVudFgsc1swXS5jbGllbnRZKToobj1hLmNsaWVudFgsYS5jbGllbnRZKTt2YXIgbD1wYXJzZUZsb2F0KGcuZ2V0U3R5bGUocixcInBhZGRpbmctbGVmdFwiKSksdT1wYXJzZUZsb2F0KGcuZ2V0U3R5bGUocixcInBhZGRpbmctdG9wXCIpKSxkPXBhcnNlRmxvYXQoZy5nZXRTdHlsZShyLFwicGFkZGluZy1yaWdodFwiKSksaD1wYXJzZUZsb2F0KGcuZ2V0U3R5bGUocixcInBhZGRpbmctYm90dG9tXCIpKSxjPW8ucmlnaHQtby5sZWZ0LWwtZCxmPW8uYm90dG9tLW8udG9wLXUtaDtyZXR1cm57eDpuPU1hdGgucm91bmQoKG4tby5sZWZ0LWwpL2Mqci53aWR0aC9lLmN1cnJlbnREZXZpY2VQaXhlbFJhdGlvKSx5Omk9TWF0aC5yb3VuZCgoaS1vLnRvcC11KS9mKnIuaGVpZ2h0L2UuY3VycmVudERldmljZVBpeGVsUmF0aW8pfX0sZy5nZXRDb25zdHJhaW50V2lkdGg9ZnVuY3Rpb24odCl7cmV0dXJuIGUodCxcIm1heC13aWR0aFwiLFwiY2xpZW50V2lkdGhcIil9LGcuZ2V0Q29uc3RyYWludEhlaWdodD1mdW5jdGlvbih0KXtyZXR1cm4gZSh0LFwibWF4LWhlaWdodFwiLFwiY2xpZW50SGVpZ2h0XCIpfSxnLl9jYWxjdWxhdGVQYWRkaW5nPWZ1bmN0aW9uKHQsZSxuKXtyZXR1cm4tMTwoZT1nLmdldFN0eWxlKHQsZSkpLmluZGV4T2YoXCIlXCIpP24vcGFyc2VJbnQoZSwxMCk6cGFyc2VJbnQoZSwxMCl9LGcuX2dldFBhcmVudE5vZGU9ZnVuY3Rpb24odCl7dmFyIGU9dC5wYXJlbnROb2RlO3JldHVybiBlJiZlLmhvc3QmJihlPWUuaG9zdCksZX0sZy5nZXRNYXhpbXVtV2lkdGg9ZnVuY3Rpb24odCl7dmFyIGU9Zy5fZ2V0UGFyZW50Tm9kZSh0KTtpZighZSlyZXR1cm4gdC5jbGllbnRXaWR0aDt2YXIgbj1lLmNsaWVudFdpZHRoLGk9bi1nLl9jYWxjdWxhdGVQYWRkaW5nKGUsXCJwYWRkaW5nLWxlZnRcIixuKS1nLl9jYWxjdWxhdGVQYWRkaW5nKGUsXCJwYWRkaW5nLXJpZ2h0XCIsbiksYT1nLmdldENvbnN0cmFpbnRXaWR0aCh0KTtyZXR1cm4gaXNOYU4oYSk/aTpNYXRoLm1pbihpLGEpfSxnLmdldE1heGltdW1IZWlnaHQ9ZnVuY3Rpb24odCl7dmFyIGU9Zy5fZ2V0UGFyZW50Tm9kZSh0KTtpZighZSlyZXR1cm4gdC5jbGllbnRIZWlnaHQ7dmFyIG49ZS5jbGllbnRIZWlnaHQsaT1uLWcuX2NhbGN1bGF0ZVBhZGRpbmcoZSxcInBhZGRpbmctdG9wXCIsbiktZy5fY2FsY3VsYXRlUGFkZGluZyhlLFwicGFkZGluZy1ib3R0b21cIixuKSxhPWcuZ2V0Q29uc3RyYWludEhlaWdodCh0KTtyZXR1cm4gaXNOYU4oYSk/aTpNYXRoLm1pbihpLGEpfSxnLmdldFN0eWxlPWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHQuY3VycmVudFN0eWxlP3QuY3VycmVudFN0eWxlW2VdOmRvY3VtZW50LmRlZmF1bHRWaWV3LmdldENvbXB1dGVkU3R5bGUodCxudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKGUpfSxnLnJldGluYVNjYWxlPWZ1bmN0aW9uKHQsZSl7dmFyIG49dC5jdXJyZW50RGV2aWNlUGl4ZWxSYXRpbz1lfHxcInVuZGVmaW5lZFwiIT10eXBlb2Ygd2luZG93JiZ3aW5kb3cuZGV2aWNlUGl4ZWxSYXRpb3x8MTtpZigxIT09bil7dmFyIGk9dC5jYW52YXMsYT10LmhlaWdodCxyPXQud2lkdGg7aS5oZWlnaHQ9YSpuLGkud2lkdGg9cipuLHQuY3R4LnNjYWxlKG4sbiksaS5zdHlsZS5oZWlnaHR8fGkuc3R5bGUud2lkdGh8fChpLnN0eWxlLmhlaWdodD1hK1wicHhcIixpLnN0eWxlLndpZHRoPXIrXCJweFwiKX19LGcuZm9udFN0cmluZz1mdW5jdGlvbih0LGUsbil7cmV0dXJuIGUrXCIgXCIrdCtcInB4IFwiK259LGcubG9uZ2VzdFRleHQ9ZnVuY3Rpb24oZSx0LG4saSl7dmFyIGE9KGk9aXx8e30pLmRhdGE9aS5kYXRhfHx7fSxyPWkuZ2FyYmFnZUNvbGxlY3Q9aS5nYXJiYWdlQ29sbGVjdHx8W107aS5mb250IT09dCYmKGE9aS5kYXRhPXt9LHI9aS5nYXJiYWdlQ29sbGVjdD1bXSxpLmZvbnQ9dCksZS5mb250PXQ7dmFyIG89MDtnLmVhY2gobixmdW5jdGlvbih0KXtudWxsIT10JiYhMCE9PWcuaXNBcnJheSh0KT9vPWcubWVhc3VyZVRleHQoZSxhLHIsbyx0KTpnLmlzQXJyYXkodCkmJmcuZWFjaCh0LGZ1bmN0aW9uKHQpe251bGw9PXR8fGcuaXNBcnJheSh0KXx8KG89Zy5tZWFzdXJlVGV4dChlLGEscixvLHQpKX0pfSk7dmFyIHM9ci5sZW5ndGgvMjtpZihzPm4ubGVuZ3RoKXtmb3IodmFyIGw9MDtsPHM7bCsrKWRlbGV0ZSBhW3JbbF1dO3Iuc3BsaWNlKDAscyl9cmV0dXJuIG99LGcubWVhc3VyZVRleHQ9ZnVuY3Rpb24odCxlLG4saSxhKXt2YXIgcj1lW2FdO3JldHVybiByfHwocj1lW2FdPXQubWVhc3VyZVRleHQoYSkud2lkdGgsbi5wdXNoKGEpKSxpPHImJihpPXIpLGl9LGcubnVtYmVyT2ZMYWJlbExpbmVzPWZ1bmN0aW9uKHQpe3ZhciBlPTE7cmV0dXJuIGcuZWFjaCh0LGZ1bmN0aW9uKHQpe2cuaXNBcnJheSh0KSYmdC5sZW5ndGg+ZSYmKGU9dC5sZW5ndGgpfSksZX0sZy5jb2xvcj1pP2Z1bmN0aW9uKHQpe3JldHVybiB0IGluc3RhbmNlb2YgQ2FudmFzR3JhZGllbnQmJih0PWEuZ2xvYmFsLmRlZmF1bHRDb2xvciksaSh0KX06ZnVuY3Rpb24odCl7cmV0dXJuIGNvbnNvbGUuZXJyb3IoXCJDb2xvci5qcyBub3QgZm91bmQhXCIpLHR9LGcuZ2V0SG92ZXJDb2xvcj1mdW5jdGlvbih0KXtyZXR1cm4gdCBpbnN0YW5jZW9mIENhbnZhc1BhdHRlcm4/dDpnLmNvbG9yKHQpLnNhdHVyYXRlKC41KS5kYXJrZW4oLjEpLnJnYlN0cmluZygpfX19LHsyOjIsMjY6MjYsMzQ6MzQsNDY6NDZ9XSwyOTpbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPXQoNDYpO2Z1bmN0aW9uIHModCxlKXtyZXR1cm4gdC5uYXRpdmU/e3g6dC54LHk6dC55fTppLmdldFJlbGF0aXZlUG9zaXRpb24odCxlKX1mdW5jdGlvbiBsKHQsZSl7dmFyIG4saSxhLHIsbztmb3IoaT0wLHI9dC5kYXRhLmRhdGFzZXRzLmxlbmd0aDtpPHI7KytpKWlmKHQuaXNEYXRhc2V0VmlzaWJsZShpKSlmb3IoYT0wLG89KG49dC5nZXREYXRhc2V0TWV0YShpKSkuZGF0YS5sZW5ndGg7YTxvOysrYSl7dmFyIHM9bi5kYXRhW2FdO3MuX3ZpZXcuc2tpcHx8ZShzKX19ZnVuY3Rpb24gdSh0LGUpe3ZhciBuPVtdO3JldHVybiBsKHQsZnVuY3Rpb24odCl7dC5pblJhbmdlKGUueCxlLnkpJiZuLnB1c2godCl9KSxufWZ1bmN0aW9uIGQodCxpLGEscil7dmFyIG89TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLHM9W107cmV0dXJuIGwodCxmdW5jdGlvbih0KXtpZighYXx8dC5pblJhbmdlKGkueCxpLnkpKXt2YXIgZT10LmdldENlbnRlclBvaW50KCksbj1yKGksZSk7bjxvPyhzPVt0XSxvPW4pOm49PT1vJiZzLnB1c2godCl9fSksc31mdW5jdGlvbiBoKHQpe3ZhciBhPS0xIT09dC5pbmRleE9mKFwieFwiKSxyPS0xIT09dC5pbmRleE9mKFwieVwiKTtyZXR1cm4gZnVuY3Rpb24odCxlKXt2YXIgbj1hP01hdGguYWJzKHQueC1lLngpOjAsaT1yP01hdGguYWJzKHQueS1lLnkpOjA7cmV0dXJuIE1hdGguc3FydChNYXRoLnBvdyhuLDIpK01hdGgucG93KGksMikpfX1mdW5jdGlvbiBhKGksdCxlKXt2YXIgbj1zKHQsaSk7ZS5heGlzPWUuYXhpc3x8XCJ4XCI7dmFyIGE9aChlLmF4aXMpLHI9ZS5pbnRlcnNlY3Q/dShpLG4pOmQoaSxuLCExLGEpLG89W107cmV0dXJuIHIubGVuZ3RoPyhpLmRhdGEuZGF0YXNldHMuZm9yRWFjaChmdW5jdGlvbih0LGUpe2lmKGkuaXNEYXRhc2V0VmlzaWJsZShlKSl7dmFyIG49aS5nZXREYXRhc2V0TWV0YShlKS5kYXRhW3JbMF0uX2luZGV4XTtuJiYhbi5fdmlldy5za2lwJiZvLnB1c2gobil9fSksbyk6W119ZS5leHBvcnRzPXttb2Rlczp7c2luZ2xlOmZ1bmN0aW9uKHQsZSl7dmFyIG49cyhlLHQpLGk9W107cmV0dXJuIGwodCxmdW5jdGlvbih0KXtpZih0LmluUmFuZ2Uobi54LG4ueSkpcmV0dXJuIGkucHVzaCh0KSxpfSksaS5zbGljZSgwLDEpfSxsYWJlbDphLGluZGV4OmEsZGF0YXNldDpmdW5jdGlvbih0LGUsbil7dmFyIGk9cyhlLHQpO24uYXhpcz1uLmF4aXN8fFwieHlcIjt2YXIgYT1oKG4uYXhpcykscj1uLmludGVyc2VjdD91KHQsaSk6ZCh0LGksITEsYSk7cmV0dXJuIDA8ci5sZW5ndGgmJihyPXQuZ2V0RGF0YXNldE1ldGEoclswXS5fZGF0YXNldEluZGV4KS5kYXRhKSxyfSxcIngtYXhpc1wiOmZ1bmN0aW9uKHQsZSl7cmV0dXJuIGEodCxlLHtpbnRlcnNlY3Q6ITF9KX0scG9pbnQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdSh0LHMoZSx0KSl9LG5lYXJlc3Q6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXMoZSx0KTtuLmF4aXM9bi5heGlzfHxcInh5XCI7dmFyIGE9aChuLmF4aXMpLHI9ZCh0LGksbi5pbnRlcnNlY3QsYSk7cmV0dXJuIDE8ci5sZW5ndGgmJnIuc29ydChmdW5jdGlvbih0LGUpe3ZhciBuPXQuZ2V0QXJlYSgpLWUuZ2V0QXJlYSgpO3JldHVybiAwPT09biYmKG49dC5fZGF0YXNldEluZGV4LWUuX2RhdGFzZXRJbmRleCksbn0pLHIuc2xpY2UoMCwxKX0seDpmdW5jdGlvbih0LGUsbil7dmFyIGk9cyhlLHQpLGE9W10scj0hMTtyZXR1cm4gbCh0LGZ1bmN0aW9uKHQpe3QuaW5YUmFuZ2UoaS54KSYmYS5wdXNoKHQpLHQuaW5SYW5nZShpLngsaS55KSYmKHI9ITApfSksbi5pbnRlcnNlY3QmJiFyJiYoYT1bXSksYX0seTpmdW5jdGlvbih0LGUsbil7dmFyIGk9cyhlLHQpLGE9W10scj0hMTtyZXR1cm4gbCh0LGZ1bmN0aW9uKHQpe3QuaW5ZUmFuZ2UoaS55KSYmYS5wdXNoKHQpLHQuaW5SYW5nZShpLngsaS55KSYmKHI9ITApfSksbi5pbnRlcnNlY3QmJiFyJiYoYT1bXSksYX19fX0sezQ2OjQ2fV0sMzA6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt0KDI2KS5fc2V0KFwiZ2xvYmFsXCIse3Jlc3BvbnNpdmU6ITAscmVzcG9uc2l2ZUFuaW1hdGlvbkR1cmF0aW9uOjAsbWFpbnRhaW5Bc3BlY3RSYXRpbzohMCxldmVudHM6W1wibW91c2Vtb3ZlXCIsXCJtb3VzZW91dFwiLFwiY2xpY2tcIixcInRvdWNoc3RhcnRcIixcInRvdWNobW92ZVwiXSxob3Zlcjp7b25Ib3ZlcjpudWxsLG1vZGU6XCJuZWFyZXN0XCIsaW50ZXJzZWN0OiEwLGFuaW1hdGlvbkR1cmF0aW9uOjQwMH0sb25DbGljazpudWxsLGRlZmF1bHRDb2xvcjpcInJnYmEoMCwwLDAsMC4xKVwiLGRlZmF1bHRGb250Q29sb3I6XCIjNjY2XCIsZGVmYXVsdEZvbnRGYW1pbHk6XCInSGVsdmV0aWNhIE5ldWUnLCAnSGVsdmV0aWNhJywgJ0FyaWFsJywgc2Fucy1zZXJpZlwiLGRlZmF1bHRGb250U2l6ZToxMixkZWZhdWx0Rm9udFN0eWxlOlwibm9ybWFsXCIsc2hvd0xpbmVzOiEwLGVsZW1lbnRzOnt9LGxheW91dDp7cGFkZGluZzp7dG9wOjAscmlnaHQ6MCxib3R0b206MCxsZWZ0OjB9fX0pLGUuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciB0PWZ1bmN0aW9uKHQsZSl7cmV0dXJuIHRoaXMuY29uc3RydWN0KHQsZSksdGhpc307cmV0dXJuIHQuQ2hhcnQ9dH19LHsyNjoyNn1dLDMxOltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIE49dCg0Nik7ZnVuY3Rpb24geih0LGUpe3JldHVybiBOLndoZXJlKHQsZnVuY3Rpb24odCl7cmV0dXJuIHQucG9zaXRpb249PT1lfSl9ZnVuY3Rpb24gVih0LGEpe3QuZm9yRWFjaChmdW5jdGlvbih0LGUpe3JldHVybiB0Ll90bXBJbmRleF89ZSx0fSksdC5zb3J0KGZ1bmN0aW9uKHQsZSl7dmFyIG49YT9lOnQsaT1hP3Q6ZTtyZXR1cm4gbi53ZWlnaHQ9PT1pLndlaWdodD9uLl90bXBJbmRleF8taS5fdG1wSW5kZXhfOm4ud2VpZ2h0LWkud2VpZ2h0fSksdC5mb3JFYWNoKGZ1bmN0aW9uKHQpe2RlbGV0ZSB0Ll90bXBJbmRleF99KX1lLmV4cG9ydHM9e2RlZmF1bHRzOnt9LGFkZEJveDpmdW5jdGlvbih0LGUpe3QuYm94ZXN8fCh0LmJveGVzPVtdKSxlLmZ1bGxXaWR0aD1lLmZ1bGxXaWR0aHx8ITEsZS5wb3NpdGlvbj1lLnBvc2l0aW9ufHxcInRvcFwiLGUud2VpZ2h0PWUud2VpZ2h0fHwwLHQuYm94ZXMucHVzaChlKX0scmVtb3ZlQm94OmZ1bmN0aW9uKHQsZSl7dmFyIG49dC5ib3hlcz90LmJveGVzLmluZGV4T2YoZSk6LTE7LTEhPT1uJiZ0LmJveGVzLnNwbGljZShuLDEpfSxjb25maWd1cmU6ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgaSxhPVtcImZ1bGxXaWR0aFwiLFwicG9zaXRpb25cIixcIndlaWdodFwiXSxyPWEubGVuZ3RoLG89MDtvPHI7KytvKWk9YVtvXSxuLmhhc093blByb3BlcnR5KGkpJiYoZVtpXT1uW2ldKX0sdXBkYXRlOmZ1bmN0aW9uKGUsbix0KXtpZihlKXt2YXIgaT1lLm9wdGlvbnMubGF5b3V0fHx7fSxhPU4ub3B0aW9ucy50b1BhZGRpbmcoaS5wYWRkaW5nKSxyPWEubGVmdCxvPWEucmlnaHQscz1hLnRvcCxsPWEuYm90dG9tLHU9eihlLmJveGVzLFwibGVmdFwiKSxkPXooZS5ib3hlcyxcInJpZ2h0XCIpLGg9eihlLmJveGVzLFwidG9wXCIpLGM9eihlLmJveGVzLFwiYm90dG9tXCIpLGY9eihlLmJveGVzLFwiY2hhcnRBcmVhXCIpO1YodSwhMCksVihkLCExKSxWKGgsITApLFYoYywhMSk7dmFyIGc9bi1yLW8sbT10LXMtbCxwPW0vMix2PShuLWcvMikvKHUubGVuZ3RoK2QubGVuZ3RoKSxiPSh0LXApLyhoLmxlbmd0aCtjLmxlbmd0aCkseT1nLHg9bSxfPVtdO04uZWFjaCh1LmNvbmNhdChkLGgsYyksZnVuY3Rpb24odCl7dmFyIGUsbj10LmlzSG9yaXpvbnRhbCgpO24/KGU9dC51cGRhdGUodC5mdWxsV2lkdGg/Zzp5LGIpLHgtPWUuaGVpZ2h0KTooZT10LnVwZGF0ZSh2LHgpLHktPWUud2lkdGgpLF8ucHVzaCh7aG9yaXpvbnRhbDpuLG1pblNpemU6ZSxib3g6dH0pfSk7dmFyIGs9MCx3PTAsTT0wLFM9MDtOLmVhY2goaC5jb25jYXQoYyksZnVuY3Rpb24odCl7aWYodC5nZXRQYWRkaW5nKXt2YXIgZT10LmdldFBhZGRpbmcoKTtrPU1hdGgubWF4KGssZS5sZWZ0KSx3PU1hdGgubWF4KHcsZS5yaWdodCl9fSksTi5lYWNoKHUuY29uY2F0KGQpLGZ1bmN0aW9uKHQpe2lmKHQuZ2V0UGFkZGluZyl7dmFyIGU9dC5nZXRQYWRkaW5nKCk7TT1NYXRoLm1heChNLGUudG9wKSxTPU1hdGgubWF4KFMsZS5ib3R0b20pfX0pO3ZhciBEPXIsQz1vLFA9cyxUPWw7Ti5lYWNoKHUuY29uY2F0KGQpLFkpLE4uZWFjaCh1LGZ1bmN0aW9uKHQpe0QrPXQud2lkdGh9KSxOLmVhY2goZCxmdW5jdGlvbih0KXtDKz10LndpZHRofSksTi5lYWNoKGguY29uY2F0KGMpLFkpLE4uZWFjaChoLGZ1bmN0aW9uKHQpe1ArPXQuaGVpZ2h0fSksTi5lYWNoKGMsZnVuY3Rpb24odCl7VCs9dC5oZWlnaHR9KSxOLmVhY2godS5jb25jYXQoZCksZnVuY3Rpb24oZSl7dmFyIHQ9Ti5maW5kTmV4dFdoZXJlKF8sZnVuY3Rpb24odCl7cmV0dXJuIHQuYm94PT09ZX0pLG49e2xlZnQ6MCxyaWdodDowLHRvcDpQLGJvdHRvbTpUfTt0JiZlLnVwZGF0ZSh0Lm1pblNpemUud2lkdGgseCxuKX0pLEQ9cixDPW8sUD1zLFQ9bCxOLmVhY2godSxmdW5jdGlvbih0KXtEKz10LndpZHRofSksTi5lYWNoKGQsZnVuY3Rpb24odCl7Qys9dC53aWR0aH0pLE4uZWFjaChoLGZ1bmN0aW9uKHQpe1ArPXQuaGVpZ2h0fSksTi5lYWNoKGMsZnVuY3Rpb24odCl7VCs9dC5oZWlnaHR9KTt2YXIgTz1NYXRoLm1heChrLUQsMCk7RCs9TyxDKz1NYXRoLm1heCh3LUMsMCk7dmFyIEk9TWF0aC5tYXgoTS1QLDApO1ArPUksVCs9TWF0aC5tYXgoUy1ULDApO3ZhciBBPXQtUC1ULEY9bi1ELUM7Rj09PXkmJkE9PT14fHwoTi5lYWNoKHUsZnVuY3Rpb24odCl7dC5oZWlnaHQ9QX0pLE4uZWFjaChkLGZ1bmN0aW9uKHQpe3QuaGVpZ2h0PUF9KSxOLmVhY2goaCxmdW5jdGlvbih0KXt0LmZ1bGxXaWR0aHx8KHQud2lkdGg9Ril9KSxOLmVhY2goYyxmdW5jdGlvbih0KXt0LmZ1bGxXaWR0aHx8KHQud2lkdGg9Ril9KSx4PUEseT1GKTt2YXIgUj1yK08sTD1zK0k7Ti5lYWNoKHUuY29uY2F0KGgpLFcpLFIrPXksTCs9eCxOLmVhY2goZCxXKSxOLmVhY2goYyxXKSxlLmNoYXJ0QXJlYT17bGVmdDpELHRvcDpQLHJpZ2h0OkQreSxib3R0b206UCt4fSxOLmVhY2goZixmdW5jdGlvbih0KXt0LmxlZnQ9ZS5jaGFydEFyZWEubGVmdCx0LnRvcD1lLmNoYXJ0QXJlYS50b3AsdC5yaWdodD1lLmNoYXJ0QXJlYS5yaWdodCx0LmJvdHRvbT1lLmNoYXJ0QXJlYS5ib3R0b20sdC51cGRhdGUoeSx4KX0pfWZ1bmN0aW9uIFkoZSl7dmFyIHQ9Ti5maW5kTmV4dFdoZXJlKF8sZnVuY3Rpb24odCl7cmV0dXJuIHQuYm94PT09ZX0pO2lmKHQpaWYoZS5pc0hvcml6b250YWwoKSl7dmFyIG49e2xlZnQ6TWF0aC5tYXgoRCxrKSxyaWdodDpNYXRoLm1heChDLHcpLHRvcDowLGJvdHRvbTowfTtlLnVwZGF0ZShlLmZ1bGxXaWR0aD9nOnksbS8yLG4pfWVsc2UgZS51cGRhdGUodC5taW5TaXplLndpZHRoLHgpfWZ1bmN0aW9uIFcodCl7dC5pc0hvcml6b250YWwoKT8odC5sZWZ0PXQuZnVsbFdpZHRoP3I6RCx0LnJpZ2h0PXQuZnVsbFdpZHRoP24tbzpEK3ksdC50b3A9TCx0LmJvdHRvbT1MK3QuaGVpZ2h0LEw9dC5ib3R0b20pOih0LmxlZnQ9Uix0LnJpZ2h0PVIrdC53aWR0aCx0LnRvcD1QLHQuYm90dG9tPVAreCxSPXQucmlnaHQpfX19fSx7NDY6NDZ9XSwzMjpbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBvPXQoMjYpLHM9dCg0Nik7by5fc2V0KFwiZ2xvYmFsXCIse3BsdWdpbnM6e319KSxlLmV4cG9ydHM9e19wbHVnaW5zOltdLF9jYWNoZUlkOjAscmVnaXN0ZXI6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fcGx1Z2lucztbXS5jb25jYXQodCkuZm9yRWFjaChmdW5jdGlvbih0KXstMT09PWUuaW5kZXhPZih0KSYmZS5wdXNoKHQpfSksdGhpcy5fY2FjaGVJZCsrfSx1bnJlZ2lzdGVyOmZ1bmN0aW9uKHQpe3ZhciBuPXRoaXMuX3BsdWdpbnM7W10uY29uY2F0KHQpLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGU9bi5pbmRleE9mKHQpOy0xIT09ZSYmbi5zcGxpY2UoZSwxKX0pLHRoaXMuX2NhY2hlSWQrK30sY2xlYXI6ZnVuY3Rpb24oKXt0aGlzLl9wbHVnaW5zPVtdLHRoaXMuX2NhY2hlSWQrK30sY291bnQ6ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5fcGx1Z2lucy5sZW5ndGh9LGdldEFsbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLl9wbHVnaW5zfSxub3RpZnk6ZnVuY3Rpb24odCxlLG4pe3ZhciBpLGEscixvLHMsbD10aGlzLmRlc2NyaXB0b3JzKHQpLHU9bC5sZW5ndGg7Zm9yKGk9MDtpPHU7KytpKWlmKFwiZnVuY3Rpb25cIj09dHlwZW9mKHM9KHI9KGE9bFtpXSkucGx1Z2luKVtlXSkmJigobz1bdF0uY29uY2F0KG58fFtdKSkucHVzaChhLm9wdGlvbnMpLCExPT09cy5hcHBseShyLG8pKSlyZXR1cm4hMTtyZXR1cm4hMH0sZGVzY3JpcHRvcnM6ZnVuY3Rpb24odCl7dmFyIGU9dC4kcGx1Z2luc3x8KHQuJHBsdWdpbnM9e30pO2lmKGUuaWQ9PT10aGlzLl9jYWNoZUlkKXJldHVybiBlLmRlc2NyaXB0b3JzO3ZhciBpPVtdLGE9W10sbj10JiZ0LmNvbmZpZ3x8e30scj1uLm9wdGlvbnMmJm4ub3B0aW9ucy5wbHVnaW5zfHx7fTtyZXR1cm4gdGhpcy5fcGx1Z2lucy5jb25jYXQobi5wbHVnaW5zfHxbXSkuZm9yRWFjaChmdW5jdGlvbih0KXtpZigtMT09PWkuaW5kZXhPZih0KSl7dmFyIGU9dC5pZCxuPXJbZV07ITEhPT1uJiYoITA9PT1uJiYobj1zLmNsb25lKG8uZ2xvYmFsLnBsdWdpbnNbZV0pKSxpLnB1c2godCksYS5wdXNoKHtwbHVnaW46dCxvcHRpb25zOm58fHt9fSkpfX0pLGUuZGVzY3JpcHRvcnM9YSxlLmlkPXRoaXMuX2NhY2hlSWQsYX0sX2ludmFsaWRhdGU6ZnVuY3Rpb24odCl7ZGVsZXRlIHQuJHBsdWdpbnN9fX0sezI2OjI2LDQ2OjQ2fV0sMzM6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgeD10KDI2KSxpPXQoMjcpLEI9dCg0NiksYT10KDM1KTtmdW5jdGlvbiBfKHQpe3ZhciBlLG4saT1bXTtmb3IoZT0wLG49dC5sZW5ndGg7ZTxuOysrZSlpLnB1c2godFtlXS5sYWJlbCk7cmV0dXJuIGl9ZnVuY3Rpb24gRSh0LGUsbil7dmFyIGk9dC5nZXRQaXhlbEZvclRpY2soZSk7cmV0dXJuIG4mJihpLT0wPT09ZT8odC5nZXRQaXhlbEZvclRpY2soMSktaSkvMjooaS10LmdldFBpeGVsRm9yVGljayhlLTEpKS8yKSxpfWZ1bmN0aW9uIGsodCxlLG4pe3JldHVybiBCLmlzQXJyYXkoZSk/Qi5sb25nZXN0VGV4dCh0LG4sZSk6dC5tZWFzdXJlVGV4dChlKS53aWR0aH1mdW5jdGlvbiB3KHQpe3ZhciBlPUIudmFsdWVPckRlZmF1bHQsbj14Lmdsb2JhbCxpPWUodC5mb250U2l6ZSxuLmRlZmF1bHRGb250U2l6ZSksYT1lKHQuZm9udFN0eWxlLG4uZGVmYXVsdEZvbnRTdHlsZSkscj1lKHQuZm9udEZhbWlseSxuLmRlZmF1bHRGb250RmFtaWx5KTtyZXR1cm57c2l6ZTppLHN0eWxlOmEsZmFtaWx5OnIsZm9udDpCLmZvbnRTdHJpbmcoaSxhLHIpfX1mdW5jdGlvbiBNKHQpe3JldHVybiBCLm9wdGlvbnMudG9MaW5lSGVpZ2h0KEIudmFsdWVPckRlZmF1bHQodC5saW5lSGVpZ2h0LDEuMiksQi52YWx1ZU9yRGVmYXVsdCh0LmZvbnRTaXplLHguZ2xvYmFsLmRlZmF1bHRGb250U2l6ZSkpfXguX3NldChcInNjYWxlXCIse2Rpc3BsYXk6ITAscG9zaXRpb246XCJsZWZ0XCIsb2Zmc2V0OiExLGdyaWRMaW5lczp7ZGlzcGxheTohMCxjb2xvcjpcInJnYmEoMCwgMCwgMCwgMC4xKVwiLGxpbmVXaWR0aDoxLGRyYXdCb3JkZXI6ITAsZHJhd09uQ2hhcnRBcmVhOiEwLGRyYXdUaWNrczohMCx0aWNrTWFya0xlbmd0aDoxMCx6ZXJvTGluZVdpZHRoOjEsemVyb0xpbmVDb2xvcjpcInJnYmEoMCwwLDAsMC4yNSlcIix6ZXJvTGluZUJvcmRlckRhc2g6W10semVyb0xpbmVCb3JkZXJEYXNoT2Zmc2V0OjAsb2Zmc2V0R3JpZExpbmVzOiExLGJvcmRlckRhc2g6W10sYm9yZGVyRGFzaE9mZnNldDowfSxzY2FsZUxhYmVsOntkaXNwbGF5OiExLGxhYmVsU3RyaW5nOlwiXCIsbGluZUhlaWdodDoxLjIscGFkZGluZzp7dG9wOjQsYm90dG9tOjR9fSx0aWNrczp7YmVnaW5BdFplcm86ITEsbWluUm90YXRpb246MCxtYXhSb3RhdGlvbjo1MCxtaXJyb3I6ITEscGFkZGluZzowLHJldmVyc2U6ITEsZGlzcGxheTohMCxhdXRvU2tpcDohMCxhdXRvU2tpcFBhZGRpbmc6MCxsYWJlbE9mZnNldDowLGNhbGxiYWNrOmEuZm9ybWF0dGVycy52YWx1ZXMsbWlub3I6e30sbWFqb3I6e319fSksZS5leHBvcnRzPWkuZXh0ZW5kKHtnZXRQYWRkaW5nOmZ1bmN0aW9uKCl7cmV0dXJue2xlZnQ6dGhpcy5wYWRkaW5nTGVmdHx8MCx0b3A6dGhpcy5wYWRkaW5nVG9wfHwwLHJpZ2h0OnRoaXMucGFkZGluZ1JpZ2h0fHwwLGJvdHRvbTp0aGlzLnBhZGRpbmdCb3R0b218fDB9fSxnZXRUaWNrczpmdW5jdGlvbigpe3JldHVybiB0aGlzLl90aWNrc30sbWVyZ2VUaWNrc09wdGlvbnM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbnMudGlja3M7Zm9yKHZhciBlIGluITE9PT10Lm1pbm9yJiYodC5taW5vcj17ZGlzcGxheTohMX0pLCExPT09dC5tYWpvciYmKHQubWFqb3I9e2Rpc3BsYXk6ITF9KSx0KVwibWFqb3JcIiE9PWUmJlwibWlub3JcIiE9PWUmJih2b2lkIDA9PT10Lm1pbm9yW2VdJiYodC5taW5vcltlXT10W2VdKSx2b2lkIDA9PT10Lm1ham9yW2VdJiYodC5tYWpvcltlXT10W2VdKSl9LGJlZm9yZVVwZGF0ZTpmdW5jdGlvbigpe0IuY2FsbGJhY2sodGhpcy5vcHRpb25zLmJlZm9yZVVwZGF0ZSxbdGhpc10pfSx1cGRhdGU6ZnVuY3Rpb24odCxlLG4pe3ZhciBpLGEscixvLHMsbCx1PXRoaXM7Zm9yKHUuYmVmb3JlVXBkYXRlKCksdS5tYXhXaWR0aD10LHUubWF4SGVpZ2h0PWUsdS5tYXJnaW5zPUIuZXh0ZW5kKHtsZWZ0OjAscmlnaHQ6MCx0b3A6MCxib3R0b206MH0sbiksdS5sb25nZXN0VGV4dENhY2hlPXUubG9uZ2VzdFRleHRDYWNoZXx8e30sdS5iZWZvcmVTZXREaW1lbnNpb25zKCksdS5zZXREaW1lbnNpb25zKCksdS5hZnRlclNldERpbWVuc2lvbnMoKSx1LmJlZm9yZURhdGFMaW1pdHMoKSx1LmRldGVybWluZURhdGFMaW1pdHMoKSx1LmFmdGVyRGF0YUxpbWl0cygpLHUuYmVmb3JlQnVpbGRUaWNrcygpLHM9dS5idWlsZFRpY2tzKCl8fFtdLHUuYWZ0ZXJCdWlsZFRpY2tzKCksdS5iZWZvcmVUaWNrVG9MYWJlbENvbnZlcnNpb24oKSxyPXUuY29udmVydFRpY2tzVG9MYWJlbHMocyl8fHUudGlja3MsdS5hZnRlclRpY2tUb0xhYmVsQ29udmVyc2lvbigpLGk9MCxhPSh1LnRpY2tzPXIpLmxlbmd0aDtpPGE7KytpKW89cltpXSwobD1zW2ldKT9sLmxhYmVsPW86cy5wdXNoKGw9e2xhYmVsOm8sbWFqb3I6ITF9KTtyZXR1cm4gdS5fdGlja3M9cyx1LmJlZm9yZUNhbGN1bGF0ZVRpY2tSb3RhdGlvbigpLHUuY2FsY3VsYXRlVGlja1JvdGF0aW9uKCksdS5hZnRlckNhbGN1bGF0ZVRpY2tSb3RhdGlvbigpLHUuYmVmb3JlRml0KCksdS5maXQoKSx1LmFmdGVyRml0KCksdS5hZnRlclVwZGF0ZSgpLHUubWluU2l6ZX0sYWZ0ZXJVcGRhdGU6ZnVuY3Rpb24oKXtCLmNhbGxiYWNrKHRoaXMub3B0aW9ucy5hZnRlclVwZGF0ZSxbdGhpc10pfSxiZWZvcmVTZXREaW1lbnNpb25zOmZ1bmN0aW9uKCl7Qi5jYWxsYmFjayh0aGlzLm9wdGlvbnMuYmVmb3JlU2V0RGltZW5zaW9ucyxbdGhpc10pfSxzZXREaW1lbnNpb25zOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0LmlzSG9yaXpvbnRhbCgpPyh0LndpZHRoPXQubWF4V2lkdGgsdC5sZWZ0PTAsdC5yaWdodD10LndpZHRoKToodC5oZWlnaHQ9dC5tYXhIZWlnaHQsdC50b3A9MCx0LmJvdHRvbT10LmhlaWdodCksdC5wYWRkaW5nTGVmdD0wLHQucGFkZGluZ1RvcD0wLHQucGFkZGluZ1JpZ2h0PTAsdC5wYWRkaW5nQm90dG9tPTB9LGFmdGVyU2V0RGltZW5zaW9uczpmdW5jdGlvbigpe0IuY2FsbGJhY2sodGhpcy5vcHRpb25zLmFmdGVyU2V0RGltZW5zaW9ucyxbdGhpc10pfSxiZWZvcmVEYXRhTGltaXRzOmZ1bmN0aW9uKCl7Qi5jYWxsYmFjayh0aGlzLm9wdGlvbnMuYmVmb3JlRGF0YUxpbWl0cyxbdGhpc10pfSxkZXRlcm1pbmVEYXRhTGltaXRzOkIubm9vcCxhZnRlckRhdGFMaW1pdHM6ZnVuY3Rpb24oKXtCLmNhbGxiYWNrKHRoaXMub3B0aW9ucy5hZnRlckRhdGFMaW1pdHMsW3RoaXNdKX0sYmVmb3JlQnVpbGRUaWNrczpmdW5jdGlvbigpe0IuY2FsbGJhY2sodGhpcy5vcHRpb25zLmJlZm9yZUJ1aWxkVGlja3MsW3RoaXNdKX0sYnVpbGRUaWNrczpCLm5vb3AsYWZ0ZXJCdWlsZFRpY2tzOmZ1bmN0aW9uKCl7Qi5jYWxsYmFjayh0aGlzLm9wdGlvbnMuYWZ0ZXJCdWlsZFRpY2tzLFt0aGlzXSl9LGJlZm9yZVRpY2tUb0xhYmVsQ29udmVyc2lvbjpmdW5jdGlvbigpe0IuY2FsbGJhY2sodGhpcy5vcHRpb25zLmJlZm9yZVRpY2tUb0xhYmVsQ29udmVyc2lvbixbdGhpc10pfSxjb252ZXJ0VGlja3NUb0xhYmVsczpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9ucy50aWNrczt0aGlzLnRpY2tzPXRoaXMudGlja3MubWFwKHQudXNlckNhbGxiYWNrfHx0LmNhbGxiYWNrLHRoaXMpfSxhZnRlclRpY2tUb0xhYmVsQ29udmVyc2lvbjpmdW5jdGlvbigpe0IuY2FsbGJhY2sodGhpcy5vcHRpb25zLmFmdGVyVGlja1RvTGFiZWxDb252ZXJzaW9uLFt0aGlzXSl9LGJlZm9yZUNhbGN1bGF0ZVRpY2tSb3RhdGlvbjpmdW5jdGlvbigpe0IuY2FsbGJhY2sodGhpcy5vcHRpb25zLmJlZm9yZUNhbGN1bGF0ZVRpY2tSb3RhdGlvbixbdGhpc10pfSxjYWxjdWxhdGVUaWNrUm90YXRpb246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5jdHgsbj10Lm9wdGlvbnMudGlja3MsaT1fKHQuX3RpY2tzKSxhPXcobik7ZS5mb250PWEuZm9udDt2YXIgcj1uLm1pblJvdGF0aW9ufHwwO2lmKGkubGVuZ3RoJiZ0Lm9wdGlvbnMuZGlzcGxheSYmdC5pc0hvcml6b250YWwoKSlmb3IodmFyIG8scz1CLmxvbmdlc3RUZXh0KGUsYS5mb250LGksdC5sb25nZXN0VGV4dENhY2hlKSxsPXMsdT10LmdldFBpeGVsRm9yVGljaygxKS10LmdldFBpeGVsRm9yVGljaygwKS02O3U8bCYmcjxuLm1heFJvdGF0aW9uOyl7dmFyIGQ9Qi50b1JhZGlhbnMocik7aWYobz1NYXRoLmNvcyhkKSxNYXRoLnNpbihkKSpzPnQubWF4SGVpZ2h0KXtyLS07YnJlYWt9cisrLGw9bypzfXQubGFiZWxSb3RhdGlvbj1yfSxhZnRlckNhbGN1bGF0ZVRpY2tSb3RhdGlvbjpmdW5jdGlvbigpe0IuY2FsbGJhY2sodGhpcy5vcHRpb25zLmFmdGVyQ2FsY3VsYXRlVGlja1JvdGF0aW9uLFt0aGlzXSl9LGJlZm9yZUZpdDpmdW5jdGlvbigpe0IuY2FsbGJhY2sodGhpcy5vcHRpb25zLmJlZm9yZUZpdCxbdGhpc10pfSxmaXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5taW5TaXplPXt3aWR0aDowLGhlaWdodDowfSxuPV8odC5fdGlja3MpLGk9dC5vcHRpb25zLGE9aS50aWNrcyxyPWkuc2NhbGVMYWJlbCxvPWkuZ3JpZExpbmVzLHM9aS5kaXNwbGF5LGw9dC5pc0hvcml6b250YWwoKSx1PXcoYSksZD1pLmdyaWRMaW5lcy50aWNrTWFya0xlbmd0aDtpZihlLndpZHRoPWw/dC5pc0Z1bGxXaWR0aCgpP3QubWF4V2lkdGgtdC5tYXJnaW5zLmxlZnQtdC5tYXJnaW5zLnJpZ2h0OnQubWF4V2lkdGg6cyYmby5kcmF3VGlja3M/ZDowLGUuaGVpZ2h0PWw/cyYmby5kcmF3VGlja3M/ZDowOnQubWF4SGVpZ2h0LHIuZGlzcGxheSYmcyl7dmFyIGg9TShyKStCLm9wdGlvbnMudG9QYWRkaW5nKHIucGFkZGluZykuaGVpZ2h0O2w/ZS5oZWlnaHQrPWg6ZS53aWR0aCs9aH1pZihhLmRpc3BsYXkmJnMpe3ZhciBjPUIubG9uZ2VzdFRleHQodC5jdHgsdS5mb250LG4sdC5sb25nZXN0VGV4dENhY2hlKSxmPUIubnVtYmVyT2ZMYWJlbExpbmVzKG4pLGc9LjUqdS5zaXplLG09dC5vcHRpb25zLnRpY2tzLnBhZGRpbmc7aWYobCl7dC5sb25nZXN0TGFiZWxXaWR0aD1jO3ZhciBwPUIudG9SYWRpYW5zKHQubGFiZWxSb3RhdGlvbiksdj1NYXRoLmNvcyhwKSxiPU1hdGguc2luKHApKmMrdS5zaXplKmYrZyooZi0xKStnO2UuaGVpZ2h0PU1hdGgubWluKHQubWF4SGVpZ2h0LGUuaGVpZ2h0K2IrbSksdC5jdHguZm9udD11LmZvbnQ7dmFyIHk9ayh0LmN0eCxuWzBdLHUuZm9udCkseD1rKHQuY3R4LG5bbi5sZW5ndGgtMV0sdS5mb250KTswIT09dC5sYWJlbFJvdGF0aW9uPyh0LnBhZGRpbmdMZWZ0PVwiYm90dG9tXCI9PT1pLnBvc2l0aW9uP3YqeSszOnYqZyszLHQucGFkZGluZ1JpZ2h0PVwiYm90dG9tXCI9PT1pLnBvc2l0aW9uP3YqZyszOnYqeCszKToodC5wYWRkaW5nTGVmdD15LzIrMyx0LnBhZGRpbmdSaWdodD14LzIrMyl9ZWxzZSBhLm1pcnJvcj9jPTA6Yys9bStnLGUud2lkdGg9TWF0aC5taW4odC5tYXhXaWR0aCxlLndpZHRoK2MpLHQucGFkZGluZ1RvcD11LnNpemUvMix0LnBhZGRpbmdCb3R0b209dS5zaXplLzJ9dC5oYW5kbGVNYXJnaW5zKCksdC53aWR0aD1lLndpZHRoLHQuaGVpZ2h0PWUuaGVpZ2h0fSxoYW5kbGVNYXJnaW5zOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpczt0Lm1hcmdpbnMmJih0LnBhZGRpbmdMZWZ0PU1hdGgubWF4KHQucGFkZGluZ0xlZnQtdC5tYXJnaW5zLmxlZnQsMCksdC5wYWRkaW5nVG9wPU1hdGgubWF4KHQucGFkZGluZ1RvcC10Lm1hcmdpbnMudG9wLDApLHQucGFkZGluZ1JpZ2h0PU1hdGgubWF4KHQucGFkZGluZ1JpZ2h0LXQubWFyZ2lucy5yaWdodCwwKSx0LnBhZGRpbmdCb3R0b209TWF0aC5tYXgodC5wYWRkaW5nQm90dG9tLXQubWFyZ2lucy5ib3R0b20sMCkpfSxhZnRlckZpdDpmdW5jdGlvbigpe0IuY2FsbGJhY2sodGhpcy5vcHRpb25zLmFmdGVyRml0LFt0aGlzXSl9LGlzSG9yaXpvbnRhbDpmdW5jdGlvbigpe3JldHVyblwidG9wXCI9PT10aGlzLm9wdGlvbnMucG9zaXRpb258fFwiYm90dG9tXCI9PT10aGlzLm9wdGlvbnMucG9zaXRpb259LGlzRnVsbFdpZHRoOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub3B0aW9ucy5mdWxsV2lkdGh9LGdldFJpZ2h0VmFsdWU6ZnVuY3Rpb24odCl7aWYoQi5pc051bGxPclVuZGVmKHQpKXJldHVybiBOYU47aWYoXCJudW1iZXJcIj09dHlwZW9mIHQmJiFpc0Zpbml0ZSh0KSlyZXR1cm4gTmFOO2lmKHQpaWYodGhpcy5pc0hvcml6b250YWwoKSl7aWYodm9pZCAwIT09dC54KXJldHVybiB0aGlzLmdldFJpZ2h0VmFsdWUodC54KX1lbHNlIGlmKHZvaWQgMCE9PXQueSlyZXR1cm4gdGhpcy5nZXRSaWdodFZhbHVlKHQueSk7cmV0dXJuIHR9LGdldExhYmVsRm9ySW5kZXg6Qi5ub29wLGdldFBpeGVsRm9yVmFsdWU6Qi5ub29wLGdldFZhbHVlRm9yUGl4ZWw6Qi5ub29wLGdldFBpeGVsRm9yVGljazpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49ZS5vcHRpb25zLm9mZnNldDtpZihlLmlzSG9yaXpvbnRhbCgpKXt2YXIgaT0oZS53aWR0aC0oZS5wYWRkaW5nTGVmdCtlLnBhZGRpbmdSaWdodCkpL01hdGgubWF4KGUuX3RpY2tzLmxlbmd0aC0obj8wOjEpLDEpLGE9aSp0K2UucGFkZGluZ0xlZnQ7biYmKGErPWkvMik7dmFyIHI9ZS5sZWZ0K01hdGgucm91bmQoYSk7cmV0dXJuIHIrPWUuaXNGdWxsV2lkdGgoKT9lLm1hcmdpbnMubGVmdDowfXZhciBvPWUuaGVpZ2h0LShlLnBhZGRpbmdUb3ArZS5wYWRkaW5nQm90dG9tKTtyZXR1cm4gZS50b3ArdCooby8oZS5fdGlja3MubGVuZ3RoLTEpKX0sZ2V0UGl4ZWxGb3JEZWNpbWFsOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXM7aWYoZS5pc0hvcml6b250YWwoKSl7dmFyIG49KGUud2lkdGgtKGUucGFkZGluZ0xlZnQrZS5wYWRkaW5nUmlnaHQpKSp0K2UucGFkZGluZ0xlZnQsaT1lLmxlZnQrTWF0aC5yb3VuZChuKTtyZXR1cm4gaSs9ZS5pc0Z1bGxXaWR0aCgpP2UubWFyZ2lucy5sZWZ0OjB9cmV0dXJuIGUudG9wK3QqZS5oZWlnaHR9LGdldEJhc2VQaXhlbDpmdW5jdGlvbigpe3JldHVybiB0aGlzLmdldFBpeGVsRm9yVmFsdWUodGhpcy5nZXRCYXNlVmFsdWUoKSl9LGdldEJhc2VWYWx1ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMubWluLGU9dGhpcy5tYXg7cmV0dXJuIHRoaXMuYmVnaW5BdFplcm8/MDp0PDAmJmU8MD9lOjA8dCYmMDxlP3Q6MH0sX2F1dG9Ta2lwOmZ1bmN0aW9uKHQpe3ZhciBlLG4saSxhLHI9dGhpcyxvPXIuaXNIb3Jpem9udGFsKCkscz1yLm9wdGlvbnMudGlja3MubWlub3IsbD10Lmxlbmd0aCx1PUIudG9SYWRpYW5zKHIubGFiZWxSb3RhdGlvbiksZD1NYXRoLmNvcyh1KSxoPXIubG9uZ2VzdExhYmVsV2lkdGgqZCxjPVtdO2ZvcihzLm1heFRpY2tzTGltaXQmJihhPXMubWF4VGlja3NMaW1pdCksbyYmKGU9ITEsKGgrcy5hdXRvU2tpcFBhZGRpbmcpKmw+ci53aWR0aC0oci5wYWRkaW5nTGVmdCtyLnBhZGRpbmdSaWdodCkmJihlPTErTWF0aC5mbG9vcigoaCtzLmF1dG9Ta2lwUGFkZGluZykqbC8oci53aWR0aC0oci5wYWRkaW5nTGVmdCtyLnBhZGRpbmdSaWdodCkpKSksYSYmYTxsJiYoZT1NYXRoLm1heChlLE1hdGguZmxvb3IobC9hKSkpKSxuPTA7bjxsO24rKylpPXRbbl0sKDE8ZSYmMDxuJWV8fG4lZT09MCYmbDw9bitlKSYmbiE9PWwtMSYmZGVsZXRlIGkubGFiZWwsYy5wdXNoKGkpO3JldHVybiBjfSxkcmF3OmZ1bmN0aW9uKFMpe3ZhciBEPXRoaXMsQz1ELm9wdGlvbnM7aWYoQy5kaXNwbGF5KXt2YXIgbz1ELmN0eCxQPXguZ2xvYmFsLFQ9Qy50aWNrcy5taW5vcix0PUMudGlja3MubWFqb3J8fFQsTz1DLmdyaWRMaW5lcyxlPUMuc2NhbGVMYWJlbCxJPTAhPT1ELmxhYmVsUm90YXRpb24sQT1ELmlzSG9yaXpvbnRhbCgpLEY9VC5hdXRvU2tpcD9ELl9hdXRvU2tpcChELmdldFRpY2tzKCkpOkQuZ2V0VGlja3MoKSxzPUIudmFsdWVPckRlZmF1bHQoVC5mb250Q29sb3IsUC5kZWZhdWx0Rm9udENvbG9yKSxsPXcoVCksdT1CLnZhbHVlT3JEZWZhdWx0KHQuZm9udENvbG9yLFAuZGVmYXVsdEZvbnRDb2xvciksZD13KHQpLFI9Ty5kcmF3VGlja3M/Ty50aWNrTWFya0xlbmd0aDowLG49Qi52YWx1ZU9yRGVmYXVsdChlLmZvbnRDb2xvcixQLmRlZmF1bHRGb250Q29sb3IpLGk9dyhlKSxhPUIub3B0aW9ucy50b1BhZGRpbmcoZS5wYWRkaW5nKSxMPUIudG9SYWRpYW5zKEQubGFiZWxSb3RhdGlvbiksWT1bXSxXPUQub3B0aW9ucy5ncmlkTGluZXMubGluZVdpZHRoLE49XCJyaWdodFwiPT09Qy5wb3NpdGlvbj9ELmxlZnQ6RC5yaWdodC1XLVIsej1cInJpZ2h0XCI9PT1DLnBvc2l0aW9uP0QubGVmdCtSOkQucmlnaHQsVj1cImJvdHRvbVwiPT09Qy5wb3NpdGlvbj9ELnRvcCtXOkQuYm90dG9tLVItVyxIPVwiYm90dG9tXCI9PT1DLnBvc2l0aW9uP0QudG9wK1crUjpELmJvdHRvbStXO2lmKEIuZWFjaChGLGZ1bmN0aW9uKHQsZSl7aWYoIUIuaXNOdWxsT3JVbmRlZih0LmxhYmVsKSl7dmFyIG4saSxhLHIsbyxzLGwsdSxkLGgsYyxmLGcsbSxwPXQubGFiZWw7cj1lPT09RC56ZXJvTGluZUluZGV4JiZDLm9mZnNldD09PU8ub2Zmc2V0R3JpZExpbmVzPyhuPU8uemVyb0xpbmVXaWR0aCxpPU8uemVyb0xpbmVDb2xvcixhPU8uemVyb0xpbmVCb3JkZXJEYXNoLE8uemVyb0xpbmVCb3JkZXJEYXNoT2Zmc2V0KToobj1CLnZhbHVlQXRJbmRleE9yRGVmYXVsdChPLmxpbmVXaWR0aCxlKSxpPUIudmFsdWVBdEluZGV4T3JEZWZhdWx0KE8uY29sb3IsZSksYT1CLnZhbHVlT3JEZWZhdWx0KE8uYm9yZGVyRGFzaCxQLmJvcmRlckRhc2gpLEIudmFsdWVPckRlZmF1bHQoTy5ib3JkZXJEYXNoT2Zmc2V0LFAuYm9yZGVyRGFzaE9mZnNldCkpO3ZhciB2PVwibWlkZGxlXCIsYj1cIm1pZGRsZVwiLHk9VC5wYWRkaW5nO2lmKEEpe3ZhciB4PVIreTttPVwiYm90dG9tXCI9PT1DLnBvc2l0aW9uPyhiPUk/XCJtaWRkbGVcIjpcInRvcFwiLHY9ST9cInJpZ2h0XCI6XCJjZW50ZXJcIixELnRvcCt4KTooYj1JP1wibWlkZGxlXCI6XCJib3R0b21cIix2PUk/XCJsZWZ0XCI6XCJjZW50ZXJcIixELmJvdHRvbS14KTt2YXIgXz1FKEQsZSxPLm9mZnNldEdyaWRMaW5lcyYmMTxGLmxlbmd0aCk7XzxELmxlZnQmJihpPVwicmdiYSgwLDAsMCwwKVwiKSxfKz1CLmFsaWFzUGl4ZWwobiksZz1ELmdldFBpeGVsRm9yVGljayhlKStULmxhYmVsT2Zmc2V0LG89bD1kPWM9XyxzPVYsdT1ILGg9Uy50b3AsZj1TLmJvdHRvbStXfWVsc2V7dmFyIGssdz1cImxlZnRcIj09PUMucG9zaXRpb247az1ULm1pcnJvcj8odj13P1wibGVmdFwiOlwicmlnaHRcIix5KToodj13P1wicmlnaHRcIjpcImxlZnRcIixSK3kpLGc9dz9ELnJpZ2h0LWs6RC5sZWZ0K2s7dmFyIE09RShELGUsTy5vZmZzZXRHcmlkTGluZXMmJjE8Ri5sZW5ndGgpO008RC50b3AmJihpPVwicmdiYSgwLDAsMCwwKVwiKSxNKz1CLmFsaWFzUGl4ZWwobiksbT1ELmdldFBpeGVsRm9yVGljayhlKStULmxhYmVsT2Zmc2V0LG89TixsPXosZD1TLmxlZnQsYz1TLnJpZ2h0K1cscz11PWg9Zj1NfVkucHVzaCh7dHgxOm8sdHkxOnMsdHgyOmwsdHkyOnUseDE6ZCx5MTpoLHgyOmMseTI6ZixsYWJlbFg6ZyxsYWJlbFk6bSxnbFdpZHRoOm4sZ2xDb2xvcjppLGdsQm9yZGVyRGFzaDphLGdsQm9yZGVyRGFzaE9mZnNldDpyLHJvdGF0aW9uOi0xKkwsbGFiZWw6cCxtYWpvcjp0Lm1ham9yLHRleHRCYXNlbGluZTpiLHRleHRBbGlnbjp2fSl9fSksQi5lYWNoKFksZnVuY3Rpb24odCl7aWYoTy5kaXNwbGF5JiYoby5zYXZlKCksby5saW5lV2lkdGg9dC5nbFdpZHRoLG8uc3Ryb2tlU3R5bGU9dC5nbENvbG9yLG8uc2V0TGluZURhc2gmJihvLnNldExpbmVEYXNoKHQuZ2xCb3JkZXJEYXNoKSxvLmxpbmVEYXNoT2Zmc2V0PXQuZ2xCb3JkZXJEYXNoT2Zmc2V0KSxvLmJlZ2luUGF0aCgpLE8uZHJhd1RpY2tzJiYoby5tb3ZlVG8odC50eDEsdC50eTEpLG8ubGluZVRvKHQudHgyLHQudHkyKSksTy5kcmF3T25DaGFydEFyZWEmJihvLm1vdmVUbyh0LngxLHQueTEpLG8ubGluZVRvKHQueDIsdC55MikpLG8uc3Ryb2tlKCksby5yZXN0b3JlKCkpLFQuZGlzcGxheSl7by5zYXZlKCksby50cmFuc2xhdGUodC5sYWJlbFgsdC5sYWJlbFkpLG8ucm90YXRlKHQucm90YXRpb24pLG8uZm9udD10Lm1ham9yP2QuZm9udDpsLmZvbnQsby5maWxsU3R5bGU9dC5tYWpvcj91OnMsby50ZXh0QmFzZWxpbmU9dC50ZXh0QmFzZWxpbmUsby50ZXh0QWxpZ249dC50ZXh0QWxpZ247dmFyIGU9dC5sYWJlbDtpZihCLmlzQXJyYXkoZSkpZm9yKHZhciBuPWUubGVuZ3RoLGk9MS41Kmwuc2l6ZSxhPUQuaXNIb3Jpem9udGFsKCk/MDotaSoobi0xKS8yLHI9MDtyPG47KytyKW8uZmlsbFRleHQoXCJcIitlW3JdLDAsYSksYSs9aTtlbHNlIG8uZmlsbFRleHQoZSwwLDApO28ucmVzdG9yZSgpfX0pLGUuZGlzcGxheSl7dmFyIHIsaCxjPTAsZj1NKGUpLzI7aWYoQSlyPUQubGVmdCsoRC5yaWdodC1ELmxlZnQpLzIsaD1cImJvdHRvbVwiPT09Qy5wb3NpdGlvbj9ELmJvdHRvbS1mLWEuYm90dG9tOkQudG9wK2YrYS50b3A7ZWxzZXt2YXIgZz1cImxlZnRcIj09PUMucG9zaXRpb247cj1nP0QubGVmdCtmK2EudG9wOkQucmlnaHQtZi1hLnRvcCxoPUQudG9wKyhELmJvdHRvbS1ELnRvcCkvMixjPWc/LS41Kk1hdGguUEk6LjUqTWF0aC5QSX1vLnNhdmUoKSxvLnRyYW5zbGF0ZShyLGgpLG8ucm90YXRlKGMpLG8udGV4dEFsaWduPVwiY2VudGVyXCIsby50ZXh0QmFzZWxpbmU9XCJtaWRkbGVcIixvLmZpbGxTdHlsZT1uLG8uZm9udD1pLmZvbnQsby5maWxsVGV4dChlLmxhYmVsU3RyaW5nLDAsMCksby5yZXN0b3JlKCl9aWYoTy5kcmF3Qm9yZGVyKXtvLmxpbmVXaWR0aD1CLnZhbHVlQXRJbmRleE9yRGVmYXVsdChPLmxpbmVXaWR0aCwwKSxvLnN0cm9rZVN0eWxlPUIudmFsdWVBdEluZGV4T3JEZWZhdWx0KE8uY29sb3IsMCk7dmFyIG09RC5sZWZ0LHA9RC5yaWdodCtXLHY9RC50b3AsYj1ELmJvdHRvbStXLHk9Qi5hbGlhc1BpeGVsKG8ubGluZVdpZHRoKTtBPyh2PWI9XCJ0b3BcIj09PUMucG9zaXRpb24/RC5ib3R0b206RC50b3Asdis9eSxiKz15KToobT1wPVwibGVmdFwiPT09Qy5wb3NpdGlvbj9ELnJpZ2h0OkQubGVmdCxtKz15LHArPXkpLG8uYmVnaW5QYXRoKCksby5tb3ZlVG8obSx2KSxvLmxpbmVUbyhwLGIpLG8uc3Ryb2tlKCl9fX19KX0sezI2OjI2LDI3OjI3LDM1OjM1LDQ2OjQ2fV0sMzQ6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT10KDI2KSxhPXQoNDYpLHI9dCgzMSk7ZS5leHBvcnRzPXtjb25zdHJ1Y3RvcnM6e30sZGVmYXVsdHM6e30scmVnaXN0ZXJTY2FsZVR5cGU6ZnVuY3Rpb24odCxlLG4pe3RoaXMuY29uc3RydWN0b3JzW3RdPWUsdGhpcy5kZWZhdWx0c1t0XT1hLmNsb25lKG4pfSxnZXRTY2FsZUNvbnN0cnVjdG9yOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmNvbnN0cnVjdG9ycy5oYXNPd25Qcm9wZXJ0eSh0KT90aGlzLmNvbnN0cnVjdG9yc1t0XTp2b2lkIDB9LGdldFNjYWxlRGVmYXVsdHM6ZnVuY3Rpb24odCl7cmV0dXJuIHRoaXMuZGVmYXVsdHMuaGFzT3duUHJvcGVydHkodCk/YS5tZXJnZSh7fSxbaS5zY2FsZSx0aGlzLmRlZmF1bHRzW3RdXSk6e319LHVwZGF0ZVNjYWxlRGVmYXVsdHM6ZnVuY3Rpb24odCxlKXt0aGlzLmRlZmF1bHRzLmhhc093blByb3BlcnR5KHQpJiYodGhpcy5kZWZhdWx0c1t0XT1hLmV4dGVuZCh0aGlzLmRlZmF1bHRzW3RdLGUpKX0sYWRkU2NhbGVzVG9MYXlvdXQ6ZnVuY3Rpb24oZSl7YS5lYWNoKGUuc2NhbGVzLGZ1bmN0aW9uKHQpe3QuZnVsbFdpZHRoPXQub3B0aW9ucy5mdWxsV2lkdGgsdC5wb3NpdGlvbj10Lm9wdGlvbnMucG9zaXRpb24sdC53ZWlnaHQ9dC5vcHRpb25zLndlaWdodCxyLmFkZEJveChlLHQpfSl9fX0sezI2OjI2LDMxOjMxLDQ2OjQ2fV0sMzU6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgbD10KDQ2KTtlLmV4cG9ydHM9e2Zvcm1hdHRlcnM6e3ZhbHVlczpmdW5jdGlvbih0KXtyZXR1cm4gbC5pc0FycmF5KHQpP3Q6XCJcIit0fSxsaW5lYXI6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPTM8bi5sZW5ndGg/blsyXS1uWzFdOm5bMV0tblswXTsxPE1hdGguYWJzKGkpJiZ0IT09TWF0aC5mbG9vcih0KSYmKGk9dC1NYXRoLmZsb29yKHQpKTt2YXIgYT1sLmxvZzEwKE1hdGguYWJzKGkpKSxyPVwiXCI7aWYoMCE9PXQpaWYoTWF0aC5tYXgoTWF0aC5hYnMoblswXSksTWF0aC5hYnMobltuLmxlbmd0aC0xXSkpPDFlLTQpe3ZhciBvPWwubG9nMTAoTWF0aC5hYnModCkpO3I9dC50b0V4cG9uZW50aWFsKE1hdGguZmxvb3IobyktTWF0aC5mbG9vcihhKSl9ZWxzZXt2YXIgcz0tMSpNYXRoLmZsb29yKGEpO3M9TWF0aC5tYXgoTWF0aC5taW4ocywyMCksMCkscj10LnRvRml4ZWQocyl9ZWxzZSByPVwiMFwiO3JldHVybiByfSxsb2dhcml0aG1pYzpmdW5jdGlvbih0LGUsbil7dmFyIGk9dC9NYXRoLnBvdygxMCxNYXRoLmZsb29yKGwubG9nMTAodCkpKTtyZXR1cm4gMD09PXQ/XCIwXCI6MT09PWl8fDI9PT1pfHw1PT09aXx8MD09PWV8fGU9PT1uLmxlbmd0aC0xP3QudG9FeHBvbmVudGlhbCgpOlwiXCJ9fX19LHs0Njo0Nn1dLDM2OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9dCgyNiksYT10KDI3KSxSPXQoNDYpO2kuX3NldChcImdsb2JhbFwiLHt0b29sdGlwczp7ZW5hYmxlZDohMCxjdXN0b206bnVsbCxtb2RlOlwibmVhcmVzdFwiLHBvc2l0aW9uOlwiYXZlcmFnZVwiLGludGVyc2VjdDohMCxiYWNrZ3JvdW5kQ29sb3I6XCJyZ2JhKDAsMCwwLDAuOClcIix0aXRsZUZvbnRTdHlsZTpcImJvbGRcIix0aXRsZVNwYWNpbmc6Mix0aXRsZU1hcmdpbkJvdHRvbTo2LHRpdGxlRm9udENvbG9yOlwiI2ZmZlwiLHRpdGxlQWxpZ246XCJsZWZ0XCIsYm9keVNwYWNpbmc6Mixib2R5Rm9udENvbG9yOlwiI2ZmZlwiLGJvZHlBbGlnbjpcImxlZnRcIixmb290ZXJGb250U3R5bGU6XCJib2xkXCIsZm9vdGVyU3BhY2luZzoyLGZvb3Rlck1hcmdpblRvcDo2LGZvb3RlckZvbnRDb2xvcjpcIiNmZmZcIixmb290ZXJBbGlnbjpcImxlZnRcIix5UGFkZGluZzo2LHhQYWRkaW5nOjYsY2FyZXRQYWRkaW5nOjIsY2FyZXRTaXplOjUsY29ybmVyUmFkaXVzOjYsbXVsdGlLZXlCYWNrZ3JvdW5kOlwiI2ZmZlwiLGRpc3BsYXlDb2xvcnM6ITAsYm9yZGVyQ29sb3I6XCJyZ2JhKDAsMCwwLDApXCIsYm9yZGVyV2lkdGg6MCxjYWxsYmFja3M6e2JlZm9yZVRpdGxlOlIubm9vcCx0aXRsZTpmdW5jdGlvbih0LGUpe3ZhciBuPVwiXCIsaT1lLmxhYmVscyxhPWk/aS5sZW5ndGg6MDtpZigwPHQubGVuZ3RoKXt2YXIgcj10WzBdO3IueExhYmVsP249ci54TGFiZWw6MDxhJiZyLmluZGV4PGEmJihuPWlbci5pbmRleF0pfXJldHVybiBufSxhZnRlclRpdGxlOlIubm9vcCxiZWZvcmVCb2R5OlIubm9vcCxiZWZvcmVMYWJlbDpSLm5vb3AsbGFiZWw6ZnVuY3Rpb24odCxlKXt2YXIgbj1lLmRhdGFzZXRzW3QuZGF0YXNldEluZGV4XS5sYWJlbHx8XCJcIjtyZXR1cm4gbiYmKG4rPVwiOiBcIiksbis9dC55TGFiZWx9LGxhYmVsQ29sb3I6ZnVuY3Rpb24odCxlKXt2YXIgbj1lLmdldERhdGFzZXRNZXRhKHQuZGF0YXNldEluZGV4KS5kYXRhW3QuaW5kZXhdLl92aWV3O3JldHVybntib3JkZXJDb2xvcjpuLmJvcmRlckNvbG9yLGJhY2tncm91bmRDb2xvcjpuLmJhY2tncm91bmRDb2xvcn19LGxhYmVsVGV4dENvbG9yOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuX29wdGlvbnMuYm9keUZvbnRDb2xvcn0sYWZ0ZXJMYWJlbDpSLm5vb3AsYWZ0ZXJCb2R5OlIubm9vcCxiZWZvcmVGb290ZXI6Ui5ub29wLGZvb3RlcjpSLm5vb3AsYWZ0ZXJGb290ZXI6Ui5ub29wfX19KTt2YXIgTD17YXZlcmFnZTpmdW5jdGlvbih0KXtpZighdC5sZW5ndGgpcmV0dXJuITE7dmFyIGUsbixpPTAsYT0wLHI9MDtmb3IoZT0wLG49dC5sZW5ndGg7ZTxuOysrZSl7dmFyIG89dFtlXTtpZihvJiZvLmhhc1ZhbHVlKCkpe3ZhciBzPW8udG9vbHRpcFBvc2l0aW9uKCk7aSs9cy54LGErPXMueSwrK3J9fXJldHVybnt4Ok1hdGgucm91bmQoaS9yKSx5Ok1hdGgucm91bmQoYS9yKX19LG5lYXJlc3Q6ZnVuY3Rpb24odCxlKXt2YXIgbixpLGEscj1lLngsbz1lLnkscz1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFk7Zm9yKG49MCxpPXQubGVuZ3RoO248aTsrK24pe3ZhciBsPXRbbl07aWYobCYmbC5oYXNWYWx1ZSgpKXt2YXIgdT1sLmdldENlbnRlclBvaW50KCksZD1SLmRpc3RhbmNlQmV0d2VlblBvaW50cyhlLHUpO2Q8cyYmKHM9ZCxhPWwpfX1pZihhKXt2YXIgaD1hLnRvb2x0aXBQb3NpdGlvbigpO3I9aC54LG89aC55fXJldHVybnt4OnIseTpvfX19O2Z1bmN0aW9uIGModCxlKXt2YXIgbj1SLmNvbG9yKHQpO3JldHVybiBuLmFscGhhKGUqbi5hbHBoYSgpKS5yZ2JhU3RyaW5nKCl9ZnVuY3Rpb24gbyh0LGUpe3JldHVybiBlJiYoUi5pc0FycmF5KGUpP0FycmF5LnByb3RvdHlwZS5wdXNoLmFwcGx5KHQsZSk6dC5wdXNoKGUpKSx0fWZ1bmN0aW9uIHModCl7cmV0dXJuKFwic3RyaW5nXCI9PXR5cGVvZiB0fHx0IGluc3RhbmNlb2YgU3RyaW5nKSYmLTE8dC5pbmRleE9mKFwiXFxuXCIpP3Quc3BsaXQoXCJcXG5cIik6dH1mdW5jdGlvbiBZKHQpe3ZhciBlPWkuZ2xvYmFsLG49Ui52YWx1ZU9yRGVmYXVsdDtyZXR1cm57eFBhZGRpbmc6dC54UGFkZGluZyx5UGFkZGluZzp0LnlQYWRkaW5nLHhBbGlnbjp0LnhBbGlnbix5QWxpZ246dC55QWxpZ24sYm9keUZvbnRDb2xvcjp0LmJvZHlGb250Q29sb3IsX2JvZHlGb250RmFtaWx5Om4odC5ib2R5Rm9udEZhbWlseSxlLmRlZmF1bHRGb250RmFtaWx5KSxfYm9keUZvbnRTdHlsZTpuKHQuYm9keUZvbnRTdHlsZSxlLmRlZmF1bHRGb250U3R5bGUpLF9ib2R5QWxpZ246dC5ib2R5QWxpZ24sYm9keUZvbnRTaXplOm4odC5ib2R5Rm9udFNpemUsZS5kZWZhdWx0Rm9udFNpemUpLGJvZHlTcGFjaW5nOnQuYm9keVNwYWNpbmcsdGl0bGVGb250Q29sb3I6dC50aXRsZUZvbnRDb2xvcixfdGl0bGVGb250RmFtaWx5Om4odC50aXRsZUZvbnRGYW1pbHksZS5kZWZhdWx0Rm9udEZhbWlseSksX3RpdGxlRm9udFN0eWxlOm4odC50aXRsZUZvbnRTdHlsZSxlLmRlZmF1bHRGb250U3R5bGUpLHRpdGxlRm9udFNpemU6bih0LnRpdGxlRm9udFNpemUsZS5kZWZhdWx0Rm9udFNpemUpLF90aXRsZUFsaWduOnQudGl0bGVBbGlnbix0aXRsZVNwYWNpbmc6dC50aXRsZVNwYWNpbmcsdGl0bGVNYXJnaW5Cb3R0b206dC50aXRsZU1hcmdpbkJvdHRvbSxmb290ZXJGb250Q29sb3I6dC5mb290ZXJGb250Q29sb3IsX2Zvb3RlckZvbnRGYW1pbHk6bih0LmZvb3RlckZvbnRGYW1pbHksZS5kZWZhdWx0Rm9udEZhbWlseSksX2Zvb3RlckZvbnRTdHlsZTpuKHQuZm9vdGVyRm9udFN0eWxlLGUuZGVmYXVsdEZvbnRTdHlsZSksZm9vdGVyRm9udFNpemU6bih0LmZvb3RlckZvbnRTaXplLGUuZGVmYXVsdEZvbnRTaXplKSxfZm9vdGVyQWxpZ246dC5mb290ZXJBbGlnbixmb290ZXJTcGFjaW5nOnQuZm9vdGVyU3BhY2luZyxmb290ZXJNYXJnaW5Ub3A6dC5mb290ZXJNYXJnaW5Ub3AsY2FyZXRTaXplOnQuY2FyZXRTaXplLGNvcm5lclJhZGl1czp0LmNvcm5lclJhZGl1cyxiYWNrZ3JvdW5kQ29sb3I6dC5iYWNrZ3JvdW5kQ29sb3Isb3BhY2l0eTowLGxlZ2VuZENvbG9yQmFja2dyb3VuZDp0Lm11bHRpS2V5QmFja2dyb3VuZCxkaXNwbGF5Q29sb3JzOnQuZGlzcGxheUNvbG9ycyxib3JkZXJDb2xvcjp0LmJvcmRlckNvbG9yLGJvcmRlcldpZHRoOnQuYm9yZGVyV2lkdGh9fWZ1bmN0aW9uIHIodCl7cmV0dXJuIG8oW10scyh0KSl9KGUuZXhwb3J0cz1hLmV4dGVuZCh7aW5pdGlhbGl6ZTpmdW5jdGlvbigpe3RoaXMuX21vZGVsPVkodGhpcy5fb3B0aW9ucyksdGhpcy5fbGFzdEFjdGl2ZT1bXX0sZ2V0VGl0bGU6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9vcHRpb25zLmNhbGxiYWNrcyxlPXQuYmVmb3JlVGl0bGUuYXBwbHkodGhpcyxhcmd1bWVudHMpLG49dC50aXRsZS5hcHBseSh0aGlzLGFyZ3VtZW50cyksaT10LmFmdGVyVGl0bGUuYXBwbHkodGhpcyxhcmd1bWVudHMpLGE9W107cmV0dXJuIGE9byhhPW8oYT1vKGEscyhlKSkscyhuKSkscyhpKSl9LGdldEJlZm9yZUJvZHk6ZnVuY3Rpb24oKXtyZXR1cm4gcih0aGlzLl9vcHRpb25zLmNhbGxiYWNrcy5iZWZvcmVCb2R5LmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9LGdldEJvZHk6ZnVuY3Rpb24odCxuKXt2YXIgaT10aGlzLGE9aS5fb3B0aW9ucy5jYWxsYmFja3Mscj1bXTtyZXR1cm4gUi5lYWNoKHQsZnVuY3Rpb24odCl7dmFyIGU9e2JlZm9yZTpbXSxsaW5lczpbXSxhZnRlcjpbXX07byhlLmJlZm9yZSxzKGEuYmVmb3JlTGFiZWwuY2FsbChpLHQsbikpKSxvKGUubGluZXMsYS5sYWJlbC5jYWxsKGksdCxuKSksbyhlLmFmdGVyLHMoYS5hZnRlckxhYmVsLmNhbGwoaSx0LG4pKSksci5wdXNoKGUpfSkscn0sZ2V0QWZ0ZXJCb2R5OmZ1bmN0aW9uKCl7cmV0dXJuIHIodGhpcy5fb3B0aW9ucy5jYWxsYmFja3MuYWZ0ZXJCb2R5LmFwcGx5KHRoaXMsYXJndW1lbnRzKSl9LGdldEZvb3RlcjpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX29wdGlvbnMuY2FsbGJhY2tzLGU9dC5iZWZvcmVGb290ZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpLG49dC5mb290ZXIuYXBwbHkodGhpcyxhcmd1bWVudHMpLGk9dC5hZnRlckZvb3Rlci5hcHBseSh0aGlzLGFyZ3VtZW50cyksYT1bXTtyZXR1cm4gYT1vKGE9byhhPW8oYSxzKGUpKSxzKG4pKSxzKGkpKX0sdXBkYXRlOmZ1bmN0aW9uKHQpe3ZhciBlLG4saSxhLHIsbyxzLGwsdSxkLGgsYyxmLGcsbSxwLHYsYix5LHgsXz10aGlzLGs9Xy5fb3B0aW9ucyx3PV8uX21vZGVsLE09Xy5fbW9kZWw9WShrKSxTPV8uX2FjdGl2ZSxEPV8uX2RhdGEsQz17eEFsaWduOncueEFsaWduLHlBbGlnbjp3LnlBbGlnbn0sUD17eDp3LngseTp3Lnl9LFQ9e3dpZHRoOncud2lkdGgsaGVpZ2h0OncuaGVpZ2h0fSxPPXt4OncuY2FyZXRYLHk6dy5jYXJldFl9O2lmKFMubGVuZ3RoKXtNLm9wYWNpdHk9MTt2YXIgST1bXSxBPVtdO089TFtrLnBvc2l0aW9uXS5jYWxsKF8sUyxfLl9ldmVudFBvc2l0aW9uKTt2YXIgRj1bXTtmb3IoZT0wLG49Uy5sZW5ndGg7ZTxuOysrZSlGLnB1c2goKHA9U1tlXSxiPXY9dm9pZCAwLHY9cC5feFNjYWxlLGI9cC5feVNjYWxlfHxwLl9zY2FsZSx5PXAuX2luZGV4LHg9cC5fZGF0YXNldEluZGV4LHt4TGFiZWw6dj92LmdldExhYmVsRm9ySW5kZXgoeSx4KTpcIlwiLHlMYWJlbDpiP2IuZ2V0TGFiZWxGb3JJbmRleCh5LHgpOlwiXCIsaW5kZXg6eSxkYXRhc2V0SW5kZXg6eCx4OnAuX21vZGVsLngseTpwLl9tb2RlbC55fSkpO2suZmlsdGVyJiYoRj1GLmZpbHRlcihmdW5jdGlvbih0KXtyZXR1cm4gay5maWx0ZXIodCxEKX0pKSxrLml0ZW1Tb3J0JiYoRj1GLnNvcnQoZnVuY3Rpb24odCxlKXtyZXR1cm4gay5pdGVtU29ydCh0LGUsRCl9KSksUi5lYWNoKEYsZnVuY3Rpb24odCl7SS5wdXNoKGsuY2FsbGJhY2tzLmxhYmVsQ29sb3IuY2FsbChfLHQsXy5fY2hhcnQpKSxBLnB1c2goay5jYWxsYmFja3MubGFiZWxUZXh0Q29sb3IuY2FsbChfLHQsXy5fY2hhcnQpKX0pLE0udGl0bGU9Xy5nZXRUaXRsZShGLEQpLE0uYmVmb3JlQm9keT1fLmdldEJlZm9yZUJvZHkoRixEKSxNLmJvZHk9Xy5nZXRCb2R5KEYsRCksTS5hZnRlckJvZHk9Xy5nZXRBZnRlckJvZHkoRixEKSxNLmZvb3Rlcj1fLmdldEZvb3RlcihGLEQpLE0ueD1NYXRoLnJvdW5kKE8ueCksTS55PU1hdGgucm91bmQoTy55KSxNLmNhcmV0UGFkZGluZz1rLmNhcmV0UGFkZGluZyxNLmxhYmVsQ29sb3JzPUksTS5sYWJlbFRleHRDb2xvcnM9QSxNLmRhdGFQb2ludHM9RixDPWZ1bmN0aW9uKHQsZSl7dmFyIG4saSxhLHIsbyxzPXQuX21vZGVsLGw9dC5fY2hhcnQsdT10Ll9jaGFydC5jaGFydEFyZWEsZD1cImNlbnRlclwiLGg9XCJjZW50ZXJcIjtzLnk8ZS5oZWlnaHQ/aD1cInRvcFwiOnMueT5sLmhlaWdodC1lLmhlaWdodCYmKGg9XCJib3R0b21cIik7dmFyIGM9KHUubGVmdCt1LnJpZ2h0KS8yLGY9KHUudG9wK3UuYm90dG9tKS8yO2k9XCJjZW50ZXJcIj09PWg/KG49ZnVuY3Rpb24odCl7cmV0dXJuIHQ8PWN9LGZ1bmN0aW9uKHQpe3JldHVybiBjPHR9KToobj1mdW5jdGlvbih0KXtyZXR1cm4gdDw9ZS53aWR0aC8yfSxmdW5jdGlvbih0KXtyZXR1cm4gdD49bC53aWR0aC1lLndpZHRoLzJ9KSxhPWZ1bmN0aW9uKHQpe3JldHVybiB0K2Uud2lkdGgrcy5jYXJldFNpemUrcy5jYXJldFBhZGRpbmc+bC53aWR0aH0scj1mdW5jdGlvbih0KXtyZXR1cm4gdC1lLndpZHRoLXMuY2FyZXRTaXplLXMuY2FyZXRQYWRkaW5nPDB9LG89ZnVuY3Rpb24odCl7cmV0dXJuIHQ8PWY/XCJ0b3BcIjpcImJvdHRvbVwifSxuKHMueCk/KGQ9XCJsZWZ0XCIsYShzLngpJiYoZD1cImNlbnRlclwiLGg9byhzLnkpKSk6aShzLngpJiYoZD1cInJpZ2h0XCIscihzLngpJiYoZD1cImNlbnRlclwiLGg9byhzLnkpKSk7dmFyIGc9dC5fb3B0aW9ucztyZXR1cm57eEFsaWduOmcueEFsaWduP2cueEFsaWduOmQseUFsaWduOmcueUFsaWduP2cueUFsaWduOmh9fSh0aGlzLFQ9ZnVuY3Rpb24odCxlKXt2YXIgbj10Ll9jaGFydC5jdHgsaT0yKmUueVBhZGRpbmcsYT0wLHI9ZS5ib2R5LG89ci5yZWR1Y2UoZnVuY3Rpb24odCxlKXtyZXR1cm4gdCtlLmJlZm9yZS5sZW5ndGgrZS5saW5lcy5sZW5ndGgrZS5hZnRlci5sZW5ndGh9LDApO28rPWUuYmVmb3JlQm9keS5sZW5ndGgrZS5hZnRlckJvZHkubGVuZ3RoO3ZhciBzPWUudGl0bGUubGVuZ3RoLGw9ZS5mb290ZXIubGVuZ3RoLHU9ZS50aXRsZUZvbnRTaXplLGQ9ZS5ib2R5Rm9udFNpemUsaD1lLmZvb3RlckZvbnRTaXplO2krPXMqdSxpKz1zPyhzLTEpKmUudGl0bGVTcGFjaW5nOjAsaSs9cz9lLnRpdGxlTWFyZ2luQm90dG9tOjAsaSs9bypkLGkrPW8/KG8tMSkqZS5ib2R5U3BhY2luZzowLGkrPWw/ZS5mb290ZXJNYXJnaW5Ub3A6MCxpKz1sKmgsaSs9bD8obC0xKSplLmZvb3RlclNwYWNpbmc6MDt2YXIgYz0wLGY9ZnVuY3Rpb24odCl7YT1NYXRoLm1heChhLG4ubWVhc3VyZVRleHQodCkud2lkdGgrYyl9O3JldHVybiBuLmZvbnQ9Ui5mb250U3RyaW5nKHUsZS5fdGl0bGVGb250U3R5bGUsZS5fdGl0bGVGb250RmFtaWx5KSxSLmVhY2goZS50aXRsZSxmKSxuLmZvbnQ9Ui5mb250U3RyaW5nKGQsZS5fYm9keUZvbnRTdHlsZSxlLl9ib2R5Rm9udEZhbWlseSksUi5lYWNoKGUuYmVmb3JlQm9keS5jb25jYXQoZS5hZnRlckJvZHkpLGYpLGM9ZS5kaXNwbGF5Q29sb3JzP2QrMjowLFIuZWFjaChyLGZ1bmN0aW9uKHQpe1IuZWFjaCh0LmJlZm9yZSxmKSxSLmVhY2godC5saW5lcyxmKSxSLmVhY2godC5hZnRlcixmKX0pLGM9MCxuLmZvbnQ9Ui5mb250U3RyaW5nKGgsZS5fZm9vdGVyRm9udFN0eWxlLGUuX2Zvb3RlckZvbnRGYW1pbHkpLFIuZWFjaChlLmZvb3RlcixmKSx7d2lkdGg6YSs9MiplLnhQYWRkaW5nLGhlaWdodDppfX0odGhpcyxNKSksaT1NLGE9VCxyPUMsbz1fLl9jaGFydCxzPWkueCxsPWkueSx1PWkuY2FyZXRTaXplLGQ9aS5jYXJldFBhZGRpbmcsaD1pLmNvcm5lclJhZGl1cyxjPXIueEFsaWduLGY9ci55QWxpZ24sZz11K2QsbT1oK2QsXCJyaWdodFwiPT09Yz9zLT1hLndpZHRoOlwiY2VudGVyXCI9PT1jJiYoKHMtPWEud2lkdGgvMikrYS53aWR0aD5vLndpZHRoJiYocz1vLndpZHRoLWEud2lkdGgpLHM8MCYmKHM9MCkpLFwidG9wXCI9PT1mP2wrPWc6bC09XCJib3R0b21cIj09PWY/YS5oZWlnaHQrZzphLmhlaWdodC8yLFwiY2VudGVyXCI9PT1mP1wibGVmdFwiPT09Yz9zKz1nOlwicmlnaHRcIj09PWMmJihzLT1nKTpcImxlZnRcIj09PWM/cy09bTpcInJpZ2h0XCI9PT1jJiYocys9bSksUD17eDpzLHk6bH19ZWxzZSBNLm9wYWNpdHk9MDtyZXR1cm4gTS54QWxpZ249Qy54QWxpZ24sTS55QWxpZ249Qy55QWxpZ24sTS54PVAueCxNLnk9UC55LE0ud2lkdGg9VC53aWR0aCxNLmhlaWdodD1ULmhlaWdodCxNLmNhcmV0WD1PLngsTS5jYXJldFk9Ty55LF8uX21vZGVsPU0sdCYmay5jdXN0b20mJmsuY3VzdG9tLmNhbGwoXyxNKSxffSxkcmF3Q2FyZXQ6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl9jaGFydC5jdHgsaT10aGlzLl92aWV3LGE9dGhpcy5nZXRDYXJldFBvc2l0aW9uKHQsZSxpKTtuLmxpbmVUbyhhLngxLGEueTEpLG4ubGluZVRvKGEueDIsYS55Miksbi5saW5lVG8oYS54MyxhLnkzKX0sZ2V0Q2FyZXRQb3NpdGlvbjpmdW5jdGlvbih0LGUsbil7dmFyIGksYSxyLG8scyxsLHU9bi5jYXJldFNpemUsZD1uLmNvcm5lclJhZGl1cyxoPW4ueEFsaWduLGM9bi55QWxpZ24sZj10LngsZz10LnksbT1lLndpZHRoLHA9ZS5oZWlnaHQ7aWYoXCJjZW50ZXJcIj09PWMpcz1nK3AvMixsPVwibGVmdFwiPT09aD8oYT0oaT1mKS11LHI9aSxvPXMrdSxzLXUpOihhPShpPWYrbSkrdSxyPWksbz1zLXUscyt1KTtlbHNlIGlmKHI9KGk9XCJsZWZ0XCI9PT1oPyhhPWYrZCt1KS11OlwicmlnaHRcIj09PWg/KGE9ZittLWQtdSktdTooYT1uLmNhcmV0WCktdSxhK3UpLFwidG9wXCI9PT1jKXM9KG89ZyktdSxsPW87ZWxzZXtzPShvPWcrcCkrdSxsPW87dmFyIHY9cjtyPWksaT12fXJldHVybnt4MTppLHgyOmEseDM6cix5MTpvLHkyOnMseTM6bH19LGRyYXdUaXRsZTpmdW5jdGlvbih0LGUsbixpKXt2YXIgYT1lLnRpdGxlO2lmKGEubGVuZ3RoKXtuLnRleHRBbGlnbj1lLl90aXRsZUFsaWduLG4udGV4dEJhc2VsaW5lPVwidG9wXCI7dmFyIHIsbyxzPWUudGl0bGVGb250U2l6ZSxsPWUudGl0bGVTcGFjaW5nO2ZvcihuLmZpbGxTdHlsZT1jKGUudGl0bGVGb250Q29sb3IsaSksbi5mb250PVIuZm9udFN0cmluZyhzLGUuX3RpdGxlRm9udFN0eWxlLGUuX3RpdGxlRm9udEZhbWlseSkscj0wLG89YS5sZW5ndGg7cjxvOysrciluLmZpbGxUZXh0KGFbcl0sdC54LHQueSksdC55Kz1zK2wscisxPT09YS5sZW5ndGgmJih0LnkrPWUudGl0bGVNYXJnaW5Cb3R0b20tbCl9fSxkcmF3Qm9keTpmdW5jdGlvbihpLGEscixvKXt2YXIgcz1hLmJvZHlGb250U2l6ZSxlPWEuYm9keVNwYWNpbmcsdD1hLmJvZHk7ci50ZXh0QWxpZ249YS5fYm9keUFsaWduLHIudGV4dEJhc2VsaW5lPVwidG9wXCIsci5mb250PVIuZm9udFN0cmluZyhzLGEuX2JvZHlGb250U3R5bGUsYS5fYm9keUZvbnRGYW1pbHkpO3ZhciBuPTAsbD1mdW5jdGlvbih0KXtyLmZpbGxUZXh0KHQsaS54K24saS55KSxpLnkrPXMrZX07ci5maWxsU3R5bGU9YyhhLmJvZHlGb250Q29sb3IsbyksUi5lYWNoKGEuYmVmb3JlQm9keSxsKTt2YXIgdT1hLmRpc3BsYXlDb2xvcnM7bj11P3MrMjowLFIuZWFjaCh0LGZ1bmN0aW9uKHQsZSl7dmFyIG49YyhhLmxhYmVsVGV4dENvbG9yc1tlXSxvKTtyLmZpbGxTdHlsZT1uLFIuZWFjaCh0LmJlZm9yZSxsKSxSLmVhY2godC5saW5lcyxmdW5jdGlvbih0KXt1JiYoci5maWxsU3R5bGU9YyhhLmxlZ2VuZENvbG9yQmFja2dyb3VuZCxvKSxyLmZpbGxSZWN0KGkueCxpLnkscyxzKSxyLmxpbmVXaWR0aD0xLHIuc3Ryb2tlU3R5bGU9YyhhLmxhYmVsQ29sb3JzW2VdLmJvcmRlckNvbG9yLG8pLHIuc3Ryb2tlUmVjdChpLngsaS55LHMscyksci5maWxsU3R5bGU9YyhhLmxhYmVsQ29sb3JzW2VdLmJhY2tncm91bmRDb2xvcixvKSxyLmZpbGxSZWN0KGkueCsxLGkueSsxLHMtMixzLTIpLHIuZmlsbFN0eWxlPW4pLGwodCl9KSxSLmVhY2godC5hZnRlcixsKX0pLG49MCxSLmVhY2goYS5hZnRlckJvZHksbCksaS55LT1lfSxkcmF3Rm9vdGVyOmZ1bmN0aW9uKGUsbixpLHQpe3ZhciBhPW4uZm9vdGVyO2EubGVuZ3RoJiYoZS55Kz1uLmZvb3Rlck1hcmdpblRvcCxpLnRleHRBbGlnbj1uLl9mb290ZXJBbGlnbixpLnRleHRCYXNlbGluZT1cInRvcFwiLGkuZmlsbFN0eWxlPWMobi5mb290ZXJGb250Q29sb3IsdCksaS5mb250PVIuZm9udFN0cmluZyhuLmZvb3RlckZvbnRTaXplLG4uX2Zvb3RlckZvbnRTdHlsZSxuLl9mb290ZXJGb250RmFtaWx5KSxSLmVhY2goYSxmdW5jdGlvbih0KXtpLmZpbGxUZXh0KHQsZS54LGUueSksZS55Kz1uLmZvb3RlckZvbnRTaXplK24uZm9vdGVyU3BhY2luZ30pKX0sZHJhd0JhY2tncm91bmQ6ZnVuY3Rpb24odCxlLG4saSxhKXtuLmZpbGxTdHlsZT1jKGUuYmFja2dyb3VuZENvbG9yLGEpLG4uc3Ryb2tlU3R5bGU9YyhlLmJvcmRlckNvbG9yLGEpLG4ubGluZVdpZHRoPWUuYm9yZGVyV2lkdGg7dmFyIHI9ZS54QWxpZ24sbz1lLnlBbGlnbixzPXQueCxsPXQueSx1PWkud2lkdGgsZD1pLmhlaWdodCxoPWUuY29ybmVyUmFkaXVzO24uYmVnaW5QYXRoKCksbi5tb3ZlVG8ocytoLGwpLFwidG9wXCI9PT1vJiZ0aGlzLmRyYXdDYXJldCh0LGkpLG4ubGluZVRvKHMrdS1oLGwpLG4ucXVhZHJhdGljQ3VydmVUbyhzK3UsbCxzK3UsbCtoKSxcImNlbnRlclwiPT09byYmXCJyaWdodFwiPT09ciYmdGhpcy5kcmF3Q2FyZXQodCxpKSxuLmxpbmVUbyhzK3UsbCtkLWgpLG4ucXVhZHJhdGljQ3VydmVUbyhzK3UsbCtkLHMrdS1oLGwrZCksXCJib3R0b21cIj09PW8mJnRoaXMuZHJhd0NhcmV0KHQsaSksbi5saW5lVG8ocytoLGwrZCksbi5xdWFkcmF0aWNDdXJ2ZVRvKHMsbCtkLHMsbCtkLWgpLFwiY2VudGVyXCI9PT1vJiZcImxlZnRcIj09PXImJnRoaXMuZHJhd0NhcmV0KHQsaSksbi5saW5lVG8ocyxsK2gpLG4ucXVhZHJhdGljQ3VydmVUbyhzLGwscytoLGwpLG4uY2xvc2VQYXRoKCksbi5maWxsKCksMDxlLmJvcmRlcldpZHRoJiZuLnN0cm9rZSgpfSxkcmF3OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fY2hhcnQuY3R4LGU9dGhpcy5fdmlldztpZigwIT09ZS5vcGFjaXR5KXt2YXIgbj17d2lkdGg6ZS53aWR0aCxoZWlnaHQ6ZS5oZWlnaHR9LGk9e3g6ZS54LHk6ZS55fSxhPU1hdGguYWJzKGUub3BhY2l0eTwuMDAxKT8wOmUub3BhY2l0eSxyPWUudGl0bGUubGVuZ3RofHxlLmJlZm9yZUJvZHkubGVuZ3RofHxlLmJvZHkubGVuZ3RofHxlLmFmdGVyQm9keS5sZW5ndGh8fGUuZm9vdGVyLmxlbmd0aDt0aGlzLl9vcHRpb25zLmVuYWJsZWQmJnImJih0aGlzLmRyYXdCYWNrZ3JvdW5kKGksZSx0LG4sYSksaS54Kz1lLnhQYWRkaW5nLGkueSs9ZS55UGFkZGluZyx0aGlzLmRyYXdUaXRsZShpLGUsdCxhKSx0aGlzLmRyYXdCb2R5KGksZSx0LGEpLHRoaXMuZHJhd0Zvb3RlcihpLGUsdCxhKSl9fSxoYW5kbGVFdmVudDpmdW5jdGlvbih0KXt2YXIgZSxuPXRoaXMsaT1uLl9vcHRpb25zO3JldHVybiBuLl9sYXN0QWN0aXZlPW4uX2xhc3RBY3RpdmV8fFtdLFwibW91c2VvdXRcIj09PXQudHlwZT9uLl9hY3RpdmU9W106bi5fYWN0aXZlPW4uX2NoYXJ0LmdldEVsZW1lbnRzQXRFdmVudEZvck1vZGUodCxpLm1vZGUsaSksKGU9IVIuYXJyYXlFcXVhbHMobi5fYWN0aXZlLG4uX2xhc3RBY3RpdmUpKSYmKG4uX2xhc3RBY3RpdmU9bi5fYWN0aXZlLChpLmVuYWJsZWR8fGkuY3VzdG9tKSYmKG4uX2V2ZW50UG9zaXRpb249e3g6dC54LHk6dC55fSxuLnVwZGF0ZSghMCksbi5waXZvdCgpKSksZX19KSkucG9zaXRpb25lcnM9TH0sezI2OjI2LDI3OjI3LDQ2OjQ2fV0sMzc6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT10KDI2KSxhPXQoMjcpLGQ9dCg0Nik7aS5fc2V0KFwiZ2xvYmFsXCIse2VsZW1lbnRzOnthcmM6e2JhY2tncm91bmRDb2xvcjppLmdsb2JhbC5kZWZhdWx0Q29sb3IsYm9yZGVyQ29sb3I6XCIjZmZmXCIsYm9yZGVyV2lkdGg6Mn19fSksZS5leHBvcnRzPWEuZXh0ZW5kKHtpbkxhYmVsUmFuZ2U6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5fdmlldztyZXR1cm4hIWUmJk1hdGgucG93KHQtZS54LDIpPE1hdGgucG93KGUucmFkaXVzK2UuaG92ZXJSYWRpdXMsMil9LGluUmFuZ2U6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLl92aWV3O2lmKG4pe2Zvcih2YXIgaT1kLmdldEFuZ2xlRnJvbVBvaW50KG4se3g6dCx5OmV9KSxhPWkuYW5nbGUscj1pLmRpc3RhbmNlLG89bi5zdGFydEFuZ2xlLHM9bi5lbmRBbmdsZTtzPG87KXMrPTIqTWF0aC5QSTtmb3IoO3M8YTspYS09MipNYXRoLlBJO2Zvcig7YTxvOylhKz0yKk1hdGguUEk7dmFyIGw9bzw9YSYmYTw9cyx1PXI+PW4uaW5uZXJSYWRpdXMmJnI8PW4ub3V0ZXJSYWRpdXM7cmV0dXJuIGwmJnV9cmV0dXJuITF9LGdldENlbnRlclBvaW50OmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fdmlldyxlPSh0LnN0YXJ0QW5nbGUrdC5lbmRBbmdsZSkvMixuPSh0LmlubmVyUmFkaXVzK3Qub3V0ZXJSYWRpdXMpLzI7cmV0dXJue3g6dC54K01hdGguY29zKGUpKm4seTp0LnkrTWF0aC5zaW4oZSkqbn19LGdldEFyZWE6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl92aWV3O3JldHVybiBNYXRoLlBJKigodC5lbmRBbmdsZS10LnN0YXJ0QW5nbGUpLygyKk1hdGguUEkpKSooTWF0aC5wb3codC5vdXRlclJhZGl1cywyKS1NYXRoLnBvdyh0LmlubmVyUmFkaXVzLDIpKX0sdG9vbHRpcFBvc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fdmlldyxlPXQuc3RhcnRBbmdsZSsodC5lbmRBbmdsZS10LnN0YXJ0QW5nbGUpLzIsbj0odC5vdXRlclJhZGl1cy10LmlubmVyUmFkaXVzKS8yK3QuaW5uZXJSYWRpdXM7cmV0dXJue3g6dC54K01hdGguY29zKGUpKm4seTp0LnkrTWF0aC5zaW4oZSkqbn19LGRyYXc6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl9jaGFydC5jdHgsZT10aGlzLl92aWV3LG49ZS5zdGFydEFuZ2xlLGk9ZS5lbmRBbmdsZTt0LmJlZ2luUGF0aCgpLHQuYXJjKGUueCxlLnksZS5vdXRlclJhZGl1cyxuLGkpLHQuYXJjKGUueCxlLnksZS5pbm5lclJhZGl1cyxpLG4sITApLHQuY2xvc2VQYXRoKCksdC5zdHJva2VTdHlsZT1lLmJvcmRlckNvbG9yLHQubGluZVdpZHRoPWUuYm9yZGVyV2lkdGgsdC5maWxsU3R5bGU9ZS5iYWNrZ3JvdW5kQ29sb3IsdC5maWxsKCksdC5saW5lSm9pbj1cImJldmVsXCIsZS5ib3JkZXJXaWR0aCYmdC5zdHJva2UoKX19KX0sezI2OjI2LDI3OjI3LDQ2OjQ2fV0sMzg6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT10KDI2KSxhPXQoMjcpLGQ9dCg0NiksaD1pLmdsb2JhbDtpLl9zZXQoXCJnbG9iYWxcIix7ZWxlbWVudHM6e2xpbmU6e3RlbnNpb246LjQsYmFja2dyb3VuZENvbG9yOmguZGVmYXVsdENvbG9yLGJvcmRlcldpZHRoOjMsYm9yZGVyQ29sb3I6aC5kZWZhdWx0Q29sb3IsYm9yZGVyQ2FwU3R5bGU6XCJidXR0XCIsYm9yZGVyRGFzaDpbXSxib3JkZXJEYXNoT2Zmc2V0OjAsYm9yZGVySm9pblN0eWxlOlwibWl0ZXJcIixjYXBCZXppZXJQb2ludHM6ITAsZmlsbDohMH19fSksZS5leHBvcnRzPWEuZXh0ZW5kKHtkcmF3OmZ1bmN0aW9uKCl7dmFyIHQsZSxuLGksYT10aGlzLl92aWV3LHI9dGhpcy5fY2hhcnQuY3R4LG89YS5zcGFuR2FwcyxzPXRoaXMuX2NoaWxkcmVuLnNsaWNlKCksbD1oLmVsZW1lbnRzLmxpbmUsdT0tMTtmb3IodGhpcy5fbG9vcCYmcy5sZW5ndGgmJnMucHVzaChzWzBdKSxyLnNhdmUoKSxyLmxpbmVDYXA9YS5ib3JkZXJDYXBTdHlsZXx8bC5ib3JkZXJDYXBTdHlsZSxyLnNldExpbmVEYXNoJiZyLnNldExpbmVEYXNoKGEuYm9yZGVyRGFzaHx8bC5ib3JkZXJEYXNoKSxyLmxpbmVEYXNoT2Zmc2V0PWEuYm9yZGVyRGFzaE9mZnNldHx8bC5ib3JkZXJEYXNoT2Zmc2V0LHIubGluZUpvaW49YS5ib3JkZXJKb2luU3R5bGV8fGwuYm9yZGVySm9pblN0eWxlLHIubGluZVdpZHRoPWEuYm9yZGVyV2lkdGh8fGwuYm9yZGVyV2lkdGgsci5zdHJva2VTdHlsZT1hLmJvcmRlckNvbG9yfHxoLmRlZmF1bHRDb2xvcixyLmJlZ2luUGF0aCgpLHU9LTEsdD0wO3Q8cy5sZW5ndGg7Kyt0KWU9c1t0XSxuPWQucHJldmlvdXNJdGVtKHMsdCksaT1lLl92aWV3LDA9PT10P2kuc2tpcHx8KHIubW92ZVRvKGkueCxpLnkpLHU9dCk6KG49LTE9PT11P246c1t1XSxpLnNraXB8fCh1IT09dC0xJiYhb3x8LTE9PT11P3IubW92ZVRvKGkueCxpLnkpOmQuY2FudmFzLmxpbmVUbyhyLG4uX3ZpZXcsZS5fdmlldyksdT10KSk7ci5zdHJva2UoKSxyLnJlc3RvcmUoKX19KX0sezI2OjI2LDI3OjI3LDQ2OjQ2fV0sMzk6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgdT10KDI2KSxpPXQoMjcpLGQ9dCg0NiksaD11Lmdsb2JhbC5kZWZhdWx0Q29sb3I7ZnVuY3Rpb24gYSh0KXt2YXIgZT10aGlzLl92aWV3O3JldHVybiEhZSYmTWF0aC5hYnModC1lLngpPGUucmFkaXVzK2UuaGl0UmFkaXVzfXUuX3NldChcImdsb2JhbFwiLHtlbGVtZW50czp7cG9pbnQ6e3JhZGl1czozLHBvaW50U3R5bGU6XCJjaXJjbGVcIixiYWNrZ3JvdW5kQ29sb3I6aCxib3JkZXJDb2xvcjpoLGJvcmRlcldpZHRoOjEsaGl0UmFkaXVzOjEsaG92ZXJSYWRpdXM6NCxob3ZlckJvcmRlcldpZHRoOjF9fX0pLGUuZXhwb3J0cz1pLmV4dGVuZCh7aW5SYW5nZTpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuX3ZpZXc7cmV0dXJuISFuJiZNYXRoLnBvdyh0LW4ueCwyKStNYXRoLnBvdyhlLW4ueSwyKTxNYXRoLnBvdyhuLmhpdFJhZGl1cytuLnJhZGl1cywyKX0saW5MYWJlbFJhbmdlOmEsaW5YUmFuZ2U6YSxpbllSYW5nZTpmdW5jdGlvbih0KXt2YXIgZT10aGlzLl92aWV3O3JldHVybiEhZSYmTWF0aC5hYnModC1lLnkpPGUucmFkaXVzK2UuaGl0UmFkaXVzfSxnZXRDZW50ZXJQb2ludDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3ZpZXc7cmV0dXJue3g6dC54LHk6dC55fX0sZ2V0QXJlYTpmdW5jdGlvbigpe3JldHVybiBNYXRoLlBJKk1hdGgucG93KHRoaXMuX3ZpZXcucmFkaXVzLDIpfSx0b29sdGlwUG9zaXRpb246ZnVuY3Rpb24oKXt2YXIgdD10aGlzLl92aWV3O3JldHVybnt4OnQueCx5OnQueSxwYWRkaW5nOnQucmFkaXVzK3QuYm9yZGVyV2lkdGh9fSxkcmF3OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuX3ZpZXcsbj10aGlzLl9tb2RlbCxpPXRoaXMuX2NoYXJ0LmN0eCxhPWUucG9pbnRTdHlsZSxyPWUucm90YXRpb24sbz1lLnJhZGl1cyxzPWUueCxsPWUueTtlLnNraXB8fCh2b2lkIDA9PT10fHxuLng+PXQubGVmdCYmMS4wMSp0LnJpZ2h0Pj1uLngmJm4ueT49dC50b3AmJjEuMDEqdC5ib3R0b20+PW4ueSkmJihpLnN0cm9rZVN0eWxlPWUuYm9yZGVyQ29sb3J8fGgsaS5saW5lV2lkdGg9ZC52YWx1ZU9yRGVmYXVsdChlLmJvcmRlcldpZHRoLHUuZ2xvYmFsLmVsZW1lbnRzLnBvaW50LmJvcmRlcldpZHRoKSxpLmZpbGxTdHlsZT1lLmJhY2tncm91bmRDb2xvcnx8aCxkLmNhbnZhcy5kcmF3UG9pbnQoaSxhLG8scyxsLHIpKX19KX0sezI2OjI2LDI3OjI3LDQ2OjQ2fV0sNDA6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaT10KDI2KSxhPXQoMjcpO2Z1bmN0aW9uIGwodCl7cmV0dXJuIHZvaWQgMCE9PXQuX3ZpZXcud2lkdGh9ZnVuY3Rpb24gcih0KXt2YXIgZSxuLGksYSxyPXQuX3ZpZXc7aWYobCh0KSl7dmFyIG89ci53aWR0aC8yO2U9ci54LW8sbj1yLngrbyxpPU1hdGgubWluKHIueSxyLmJhc2UpLGE9TWF0aC5tYXgoci55LHIuYmFzZSl9ZWxzZXt2YXIgcz1yLmhlaWdodC8yO2U9TWF0aC5taW4oci54LHIuYmFzZSksbj1NYXRoLm1heChyLngsci5iYXNlKSxpPXIueS1zLGE9ci55K3N9cmV0dXJue2xlZnQ6ZSx0b3A6aSxyaWdodDpuLGJvdHRvbTphfX1pLl9zZXQoXCJnbG9iYWxcIix7ZWxlbWVudHM6e3JlY3RhbmdsZTp7YmFja2dyb3VuZENvbG9yOmkuZ2xvYmFsLmRlZmF1bHRDb2xvcixib3JkZXJDb2xvcjppLmdsb2JhbC5kZWZhdWx0Q29sb3IsYm9yZGVyU2tpcHBlZDpcImJvdHRvbVwiLGJvcmRlcldpZHRoOjB9fX0pLGUuZXhwb3J0cz1hLmV4dGVuZCh7ZHJhdzpmdW5jdGlvbigpe3ZhciB0LGUsbixpLGEscixvLHM9dGhpcy5fY2hhcnQuY3R4LGw9dGhpcy5fdmlldyx1PWwuYm9yZGVyV2lkdGg7aWYobz1sLmhvcml6b250YWw/KHQ9bC5iYXNlLGU9bC54LG49bC55LWwuaGVpZ2h0LzIsaT1sLnkrbC5oZWlnaHQvMixhPXQ8ZT8xOi0xLHI9MSxsLmJvcmRlclNraXBwZWR8fFwibGVmdFwiKToodD1sLngtbC53aWR0aC8yLGU9bC54K2wud2lkdGgvMixhPTEscj0obj1sLnkpPChpPWwuYmFzZSk/MTotMSxsLmJvcmRlclNraXBwZWR8fFwiYm90dG9tXCIpLHUpe3ZhciBkPU1hdGgubWluKE1hdGguYWJzKHQtZSksTWF0aC5hYnMobi1pKSksaD0odT1kPHU/ZDp1KS8yLGM9dCsoXCJsZWZ0XCIhPT1vP2gqYTowKSxmPWUrKFwicmlnaHRcIiE9PW8/LWgqYTowKSxnPW4rKFwidG9wXCIhPT1vP2gqcjowKSxtPWkrKFwiYm90dG9tXCIhPT1vPy1oKnI6MCk7YyE9PWYmJihuPWcsaT1tKSxnIT09bSYmKHQ9YyxlPWYpfXMuYmVnaW5QYXRoKCkscy5maWxsU3R5bGU9bC5iYWNrZ3JvdW5kQ29sb3Iscy5zdHJva2VTdHlsZT1sLmJvcmRlckNvbG9yLHMubGluZVdpZHRoPXU7dmFyIHA9W1t0LGldLFt0LG5dLFtlLG5dLFtlLGldXSx2PVtcImJvdHRvbVwiLFwibGVmdFwiLFwidG9wXCIsXCJyaWdodFwiXS5pbmRleE9mKG8sMCk7ZnVuY3Rpb24gYih0KXtyZXR1cm4gcFsodit0KSU0XX0tMT09PXYmJih2PTApO3ZhciB5PWIoMCk7cy5tb3ZlVG8oeVswXSx5WzFdKTtmb3IodmFyIHg9MTt4PDQ7eCsrKXk9Yih4KSxzLmxpbmVUbyh5WzBdLHlbMV0pO3MuZmlsbCgpLHUmJnMuc3Ryb2tlKCl9LGhlaWdodDpmdW5jdGlvbigpe3ZhciB0PXRoaXMuX3ZpZXc7cmV0dXJuIHQuYmFzZS10Lnl9LGluUmFuZ2U6ZnVuY3Rpb24odCxlKXt2YXIgbj0hMTtpZih0aGlzLl92aWV3KXt2YXIgaT1yKHRoaXMpO249dD49aS5sZWZ0JiZ0PD1pLnJpZ2h0JiZlPj1pLnRvcCYmZTw9aS5ib3R0b219cmV0dXJuIG59LGluTGFiZWxSYW5nZTpmdW5jdGlvbih0LGUpe2lmKCF0aGlzLl92aWV3KXJldHVybiExO3ZhciBuPXIodGhpcyk7cmV0dXJuIGwodGhpcyk/dD49bi5sZWZ0JiZ0PD1uLnJpZ2h0OmU+PW4udG9wJiZlPD1uLmJvdHRvbX0saW5YUmFuZ2U6ZnVuY3Rpb24odCl7dmFyIGU9cih0aGlzKTtyZXR1cm4gdD49ZS5sZWZ0JiZ0PD1lLnJpZ2h0fSxpbllSYW5nZTpmdW5jdGlvbih0KXt2YXIgZT1yKHRoaXMpO3JldHVybiB0Pj1lLnRvcCYmdDw9ZS5ib3R0b219LGdldENlbnRlclBvaW50OmZ1bmN0aW9uKCl7dmFyIHQsZSxuPXRoaXMuX3ZpZXc7cmV0dXJuIGU9bCh0aGlzKT8odD1uLngsKG4ueStuLmJhc2UpLzIpOih0PShuLngrbi5iYXNlKS8yLG4ueSkse3g6dCx5OmV9fSxnZXRBcmVhOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fdmlldztyZXR1cm4gdC53aWR0aCpNYXRoLmFicyh0LnktdC5iYXNlKX0sdG9vbHRpcFBvc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5fdmlldztyZXR1cm57eDp0LngseTp0Lnl9fX0pfSx7MjY6MjYsMjc6Mjd9XSw0MTpbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO2UuZXhwb3J0cz17fSxlLmV4cG9ydHMuQXJjPXQoMzcpLGUuZXhwb3J0cy5MaW5lPXQoMzgpLGUuZXhwb3J0cy5Qb2ludD10KDM5KSxlLmV4cG9ydHMuUmVjdGFuZ2xlPXQoNDApfSx7Mzc6MzcsMzg6MzgsMzk6MzksNDA6NDB9XSw0MjpbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPXQoNDMpO249ZS5leHBvcnRzPXtjbGVhcjpmdW5jdGlvbih0KXt0LmN0eC5jbGVhclJlY3QoMCwwLHQud2lkdGgsdC5oZWlnaHQpfSxyb3VuZGVkUmVjdDpmdW5jdGlvbih0LGUsbixpLGEscil7aWYocil7dmFyIG89TWF0aC5taW4ocixhLzItMWUtNyxpLzItMWUtNyk7dC5tb3ZlVG8oZStvLG4pLHQubGluZVRvKGUraS1vLG4pLHQuYXJjVG8oZStpLG4sZStpLG4rbyxvKSx0LmxpbmVUbyhlK2ksbithLW8pLHQuYXJjVG8oZStpLG4rYSxlK2ktbyxuK2EsbyksdC5saW5lVG8oZStvLG4rYSksdC5hcmNUbyhlLG4rYSxlLG4rYS1vLG8pLHQubGluZVRvKGUsbitvKSx0LmFyY1RvKGUsbixlK28sbixvKSx0LmNsb3NlUGF0aCgpLHQubW92ZVRvKGUsbil9ZWxzZSB0LnJlY3QoZSxuLGksYSl9LGRyYXdQb2ludDpmdW5jdGlvbih0LGUsbixpLGEscil7dmFyIG8scyxsLHUsZCxoO2lmKHI9cnx8MCwhZXx8XCJvYmplY3RcIiE9dHlwZW9mIGV8fFwiW29iamVjdCBIVE1MSW1hZ2VFbGVtZW50XVwiIT09KG89ZS50b1N0cmluZygpKSYmXCJbb2JqZWN0IEhUTUxDYW52YXNFbGVtZW50XVwiIT09byl7aWYoIShpc05hTihuKXx8bjw9MCkpe3N3aXRjaCh0LnNhdmUoKSx0LnRyYW5zbGF0ZShpLGEpLHQucm90YXRlKHIqTWF0aC5QSS8xODApLHQuYmVnaW5QYXRoKCksZSl7ZGVmYXVsdDp0LmFyYygwLDAsbiwwLDIqTWF0aC5QSSksdC5jbG9zZVBhdGgoKTticmVhaztjYXNlXCJ0cmlhbmdsZVwiOmQ9KHM9MypuL01hdGguc3FydCgzKSkqTWF0aC5zcXJ0KDMpLzIsdC5tb3ZlVG8oLXMvMixkLzMpLHQubGluZVRvKHMvMixkLzMpLHQubGluZVRvKDAsLTIqZC8zKSx0LmNsb3NlUGF0aCgpO2JyZWFrO2Nhc2VcInJlY3RcIjpoPTEvTWF0aC5TUVJUMipuLHQucmVjdCgtaCwtaCwyKmgsMipoKTticmVhaztjYXNlXCJyZWN0Um91bmRlZFwiOnZhciBjPW4vTWF0aC5TUVJUMixmPS1jLGc9LWMsbT1NYXRoLlNRUlQyKm47dGhpcy5yb3VuZGVkUmVjdCh0LGYsZyxtLG0sLjQyNSpuKTticmVhaztjYXNlXCJyZWN0Um90XCI6aD0xL01hdGguU1FSVDIqbix0Lm1vdmVUbygtaCwwKSx0LmxpbmVUbygwLGgpLHQubGluZVRvKGgsMCksdC5saW5lVG8oMCwtaCksdC5jbG9zZVBhdGgoKTticmVhaztjYXNlXCJjcm9zc1wiOnQubW92ZVRvKDAsbiksdC5saW5lVG8oMCwtbiksdC5tb3ZlVG8oLW4sMCksdC5saW5lVG8obiwwKTticmVhaztjYXNlXCJjcm9zc1JvdFwiOmw9TWF0aC5jb3MoTWF0aC5QSS80KSpuLHU9TWF0aC5zaW4oTWF0aC5QSS80KSpuLHQubW92ZVRvKC1sLC11KSx0LmxpbmVUbyhsLHUpLHQubW92ZVRvKC1sLHUpLHQubGluZVRvKGwsLXUpO2JyZWFrO2Nhc2VcInN0YXJcIjp0Lm1vdmVUbygwLG4pLHQubGluZVRvKDAsLW4pLHQubW92ZVRvKC1uLDApLHQubGluZVRvKG4sMCksbD1NYXRoLmNvcyhNYXRoLlBJLzQpKm4sdT1NYXRoLnNpbihNYXRoLlBJLzQpKm4sdC5tb3ZlVG8oLWwsLXUpLHQubGluZVRvKGwsdSksdC5tb3ZlVG8oLWwsdSksdC5saW5lVG8obCwtdSk7YnJlYWs7Y2FzZVwibGluZVwiOnQubW92ZVRvKC1uLDApLHQubGluZVRvKG4sMCk7YnJlYWs7Y2FzZVwiZGFzaFwiOnQubW92ZVRvKDAsMCksdC5saW5lVG8obiwwKX10LmZpbGwoKSx0LnN0cm9rZSgpLHQucmVzdG9yZSgpfX1lbHNlIHQuZHJhd0ltYWdlKGUsaS1lLndpZHRoLzIsYS1lLmhlaWdodC8yLGUud2lkdGgsZS5oZWlnaHQpfSxjbGlwQXJlYTpmdW5jdGlvbih0LGUpe3Quc2F2ZSgpLHQuYmVnaW5QYXRoKCksdC5yZWN0KGUubGVmdCxlLnRvcCxlLnJpZ2h0LWUubGVmdCxlLmJvdHRvbS1lLnRvcCksdC5jbGlwKCl9LHVuY2xpcEFyZWE6ZnVuY3Rpb24odCl7dC5yZXN0b3JlKCl9LGxpbmVUbzpmdW5jdGlvbih0LGUsbixpKXtpZihuLnN0ZXBwZWRMaW5lKXJldHVyblwiYWZ0ZXJcIj09PW4uc3RlcHBlZExpbmUmJiFpfHxcImFmdGVyXCIhPT1uLnN0ZXBwZWRMaW5lJiZpP3QubGluZVRvKGUueCxuLnkpOnQubGluZVRvKG4ueCxlLnkpLHZvaWQgdC5saW5lVG8obi54LG4ueSk7bi50ZW5zaW9uP3QuYmV6aWVyQ3VydmVUbyhpP2UuY29udHJvbFBvaW50UHJldmlvdXNYOmUuY29udHJvbFBvaW50TmV4dFgsaT9lLmNvbnRyb2xQb2ludFByZXZpb3VzWTplLmNvbnRyb2xQb2ludE5leHRZLGk/bi5jb250cm9sUG9pbnROZXh0WDpuLmNvbnRyb2xQb2ludFByZXZpb3VzWCxpP24uY29udHJvbFBvaW50TmV4dFk6bi5jb250cm9sUG9pbnRQcmV2aW91c1ksbi54LG4ueSk6dC5saW5lVG8obi54LG4ueSl9fTtpLmNsZWFyPW4uY2xlYXIsaS5kcmF3Um91bmRlZFJlY3RhbmdsZT1mdW5jdGlvbih0KXt0LmJlZ2luUGF0aCgpLG4ucm91bmRlZFJlY3QuYXBwbHkobixhcmd1bWVudHMpfX0sezQzOjQzfV0sNDM6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaSxkPXtub29wOmZ1bmN0aW9uKCl7fSx1aWQ6KGk9MCxmdW5jdGlvbigpe3JldHVybiBpKyt9KSxpc051bGxPclVuZGVmOmZ1bmN0aW9uKHQpe3JldHVybiBudWxsPT10fSxpc0FycmF5OkFycmF5LmlzQXJyYXk/QXJyYXkuaXNBcnJheTpmdW5jdGlvbih0KXtyZXR1cm5cIltvYmplY3QgQXJyYXldXCI9PT1PYmplY3QucHJvdG90eXBlLnRvU3RyaW5nLmNhbGwodCl9LGlzT2JqZWN0OmZ1bmN0aW9uKHQpe3JldHVybiBudWxsIT09dCYmXCJbb2JqZWN0IE9iamVjdF1cIj09PU9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0KX0sdmFsdWVPckRlZmF1bHQ6ZnVuY3Rpb24odCxlKXtyZXR1cm4gdm9pZCAwPT09dD9lOnR9LHZhbHVlQXRJbmRleE9yRGVmYXVsdDpmdW5jdGlvbih0LGUsbil7cmV0dXJuIGQudmFsdWVPckRlZmF1bHQoZC5pc0FycmF5KHQpP3RbZV06dCxuKX0sY2FsbGJhY2s6ZnVuY3Rpb24odCxlLG4pe2lmKHQmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHQuY2FsbClyZXR1cm4gdC5hcHBseShuLGUpfSxlYWNoOmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBhLHIsbztpZihkLmlzQXJyYXkodCkpaWYocj10Lmxlbmd0aCxpKWZvcihhPXItMTswPD1hO2EtLSllLmNhbGwobix0W2FdLGEpO2Vsc2UgZm9yKGE9MDthPHI7YSsrKWUuY2FsbChuLHRbYV0sYSk7ZWxzZSBpZihkLmlzT2JqZWN0KHQpKWZvcihyPShvPU9iamVjdC5rZXlzKHQpKS5sZW5ndGgsYT0wO2E8cjthKyspZS5jYWxsKG4sdFtvW2FdXSxvW2FdKX0sYXJyYXlFcXVhbHM6ZnVuY3Rpb24odCxlKXt2YXIgbixpLGEscjtpZighdHx8IWV8fHQubGVuZ3RoIT09ZS5sZW5ndGgpcmV0dXJuITE7Zm9yKG49MCxpPXQubGVuZ3RoO248aTsrK24paWYoYT10W25dLHI9ZVtuXSxhIGluc3RhbmNlb2YgQXJyYXkmJnIgaW5zdGFuY2VvZiBBcnJheSl7aWYoIWQuYXJyYXlFcXVhbHMoYSxyKSlyZXR1cm4hMX1lbHNlIGlmKGEhPT1yKXJldHVybiExO3JldHVybiEwfSxjbG9uZTpmdW5jdGlvbih0KXtpZihkLmlzQXJyYXkodCkpcmV0dXJuIHQubWFwKGQuY2xvbmUpO2lmKGQuaXNPYmplY3QodCkpe2Zvcih2YXIgZT17fSxuPU9iamVjdC5rZXlzKHQpLGk9bi5sZW5ndGgsYT0wO2E8aTsrK2EpZVtuW2FdXT1kLmNsb25lKHRbblthXV0pO3JldHVybiBlfXJldHVybiB0fSxfbWVyZ2VyOmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBhPWVbdF0scj1uW3RdO2QuaXNPYmplY3QoYSkmJmQuaXNPYmplY3Qocik/ZC5tZXJnZShhLHIsaSk6ZVt0XT1kLmNsb25lKHIpfSxfbWVyZ2VySWY6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPWVbdF0sYT1uW3RdO2QuaXNPYmplY3QoaSkmJmQuaXNPYmplY3QoYSk/ZC5tZXJnZUlmKGksYSk6ZS5oYXNPd25Qcm9wZXJ0eSh0KXx8KGVbdF09ZC5jbG9uZShhKSl9LG1lcmdlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaSxhLHIsbyxzLGw9ZC5pc0FycmF5KGUpP2U6W2VdLHU9bC5sZW5ndGg7aWYoIWQuaXNPYmplY3QodCkpcmV0dXJuIHQ7Zm9yKGk9KG49bnx8e30pLm1lcmdlcnx8ZC5fbWVyZ2VyLGE9MDthPHU7KythKWlmKGU9bFthXSxkLmlzT2JqZWN0KGUpKWZvcihzPTAsbz0ocj1PYmplY3Qua2V5cyhlKSkubGVuZ3RoO3M8bzsrK3MpaShyW3NdLHQsZSxuKTtyZXR1cm4gdH0sbWVyZ2VJZjpmdW5jdGlvbih0LGUpe3JldHVybiBkLm1lcmdlKHQsZSx7bWVyZ2VyOmQuX21lcmdlcklmfSl9LGV4dGVuZDpmdW5jdGlvbihuKXtmb3IodmFyIHQ9ZnVuY3Rpb24odCxlKXtuW2VdPXR9LGU9MSxpPWFyZ3VtZW50cy5sZW5ndGg7ZTxpOysrZSlkLmVhY2goYXJndW1lbnRzW2VdLHQpO3JldHVybiBufSxpbmhlcml0czpmdW5jdGlvbih0KXt2YXIgZT10aGlzLG49dCYmdC5oYXNPd25Qcm9wZXJ0eShcImNvbnN0cnVjdG9yXCIpP3QuY29uc3RydWN0b3I6ZnVuY3Rpb24oKXtyZXR1cm4gZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGk9ZnVuY3Rpb24oKXt0aGlzLmNvbnN0cnVjdG9yPW59O3JldHVybiBpLnByb3RvdHlwZT1lLnByb3RvdHlwZSxuLnByb3RvdHlwZT1uZXcgaSxuLmV4dGVuZD1kLmluaGVyaXRzLHQmJmQuZXh0ZW5kKG4ucHJvdG90eXBlLHQpLG4uX19zdXBlcl9fPWUucHJvdG90eXBlLG59fTsoZS5leHBvcnRzPWQpLmNhbGxDYWxsYmFjaz1kLmNhbGxiYWNrLGQuaW5kZXhPZj1mdW5jdGlvbih0LGUsbil7cmV0dXJuIEFycmF5LnByb3RvdHlwZS5pbmRleE9mLmNhbGwodCxlLG4pfSxkLmdldFZhbHVlT3JEZWZhdWx0PWQudmFsdWVPckRlZmF1bHQsZC5nZXRWYWx1ZUF0SW5kZXhPckRlZmF1bHQ9ZC52YWx1ZUF0SW5kZXhPckRlZmF1bHR9LHt9XSw0NDpbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPXQoNDMpLGE9e2xpbmVhcjpmdW5jdGlvbih0KXtyZXR1cm4gdH0sZWFzZUluUXVhZDpmdW5jdGlvbih0KXtyZXR1cm4gdCp0fSxlYXNlT3V0UXVhZDpmdW5jdGlvbih0KXtyZXR1cm4tdCoodC0yKX0sZWFzZUluT3V0UXVhZDpmdW5jdGlvbih0KXtyZXR1cm4odC89LjUpPDE/LjUqdCp0Oi0uNSooLS10Kih0LTIpLTEpfSxlYXNlSW5DdWJpYzpmdW5jdGlvbih0KXtyZXR1cm4gdCp0KnR9LGVhc2VPdXRDdWJpYzpmdW5jdGlvbih0KXtyZXR1cm4odC09MSkqdCp0KzF9LGVhc2VJbk91dEN1YmljOmZ1bmN0aW9uKHQpe3JldHVybih0Lz0uNSk8MT8uNSp0KnQqdDouNSooKHQtPTIpKnQqdCsyKX0sZWFzZUluUXVhcnQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQqdCp0KnR9LGVhc2VPdXRRdWFydDpmdW5jdGlvbih0KXtyZXR1cm4tKCh0LT0xKSp0KnQqdC0xKX0sZWFzZUluT3V0UXVhcnQ6ZnVuY3Rpb24odCl7cmV0dXJuKHQvPS41KTwxPy41KnQqdCp0KnQ6LS41KigodC09MikqdCp0KnQtMil9LGVhc2VJblF1aW50OmZ1bmN0aW9uKHQpe3JldHVybiB0KnQqdCp0KnR9LGVhc2VPdXRRdWludDpmdW5jdGlvbih0KXtyZXR1cm4odC09MSkqdCp0KnQqdCsxfSxlYXNlSW5PdXRRdWludDpmdW5jdGlvbih0KXtyZXR1cm4odC89LjUpPDE/LjUqdCp0KnQqdCp0Oi41KigodC09MikqdCp0KnQqdCsyKX0sZWFzZUluU2luZTpmdW5jdGlvbih0KXtyZXR1cm4gMS1NYXRoLmNvcyh0KihNYXRoLlBJLzIpKX0sZWFzZU91dFNpbmU6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGguc2luKHQqKE1hdGguUEkvMikpfSxlYXNlSW5PdXRTaW5lOmZ1bmN0aW9uKHQpe3JldHVybi0uNSooTWF0aC5jb3MoTWF0aC5QSSp0KS0xKX0sZWFzZUluRXhwbzpmdW5jdGlvbih0KXtyZXR1cm4gMD09PXQ/MDpNYXRoLnBvdygyLDEwKih0LTEpKX0sZWFzZU91dEV4cG86ZnVuY3Rpb24odCl7cmV0dXJuIDE9PT10PzE6MS1NYXRoLnBvdygyLC0xMCp0KX0sZWFzZUluT3V0RXhwbzpmdW5jdGlvbih0KXtyZXR1cm4gMD09PXQ/MDoxPT09dD8xOih0Lz0uNSk8MT8uNSpNYXRoLnBvdygyLDEwKih0LTEpKTouNSooMi1NYXRoLnBvdygyLC0xMCotLXQpKX0sZWFzZUluQ2lyYzpmdW5jdGlvbih0KXtyZXR1cm4gMTw9dD90Oi0oTWF0aC5zcXJ0KDEtdCp0KS0xKX0sZWFzZU91dENpcmM6ZnVuY3Rpb24odCl7cmV0dXJuIE1hdGguc3FydCgxLSh0LT0xKSp0KX0sZWFzZUluT3V0Q2lyYzpmdW5jdGlvbih0KXtyZXR1cm4odC89LjUpPDE/LS41KihNYXRoLnNxcnQoMS10KnQpLTEpOi41KihNYXRoLnNxcnQoMS0odC09MikqdCkrMSl9LGVhc2VJbkVsYXN0aWM6ZnVuY3Rpb24odCl7dmFyIGU9MS43MDE1OCxuPTAsaT0xO3JldHVybiAwPT09dD8wOjE9PT10PzE6KG58fChuPS4zKSxlPWk8MT8oaT0xLG4vNCk6bi8oMipNYXRoLlBJKSpNYXRoLmFzaW4oMS9pKSwtaSpNYXRoLnBvdygyLDEwKih0LT0xKSkqTWF0aC5zaW4oKHQtZSkqKDIqTWF0aC5QSSkvbikpfSxlYXNlT3V0RWxhc3RpYzpmdW5jdGlvbih0KXt2YXIgZT0xLjcwMTU4LG49MCxpPTE7cmV0dXJuIDA9PT10PzA6MT09PXQ/MToobnx8KG49LjMpLGU9aTwxPyhpPTEsbi80KTpuLygyKk1hdGguUEkpKk1hdGguYXNpbigxL2kpLGkqTWF0aC5wb3coMiwtMTAqdCkqTWF0aC5zaW4oKHQtZSkqKDIqTWF0aC5QSSkvbikrMSl9LGVhc2VJbk91dEVsYXN0aWM6ZnVuY3Rpb24odCl7dmFyIGU9MS43MDE1OCxuPTAsaT0xO3JldHVybiAwPT09dD8wOjI9PSh0Lz0uNSk/MToobnx8KG49LjQ1KSxlPWk8MT8oaT0xLG4vNCk6bi8oMipNYXRoLlBJKSpNYXRoLmFzaW4oMS9pKSx0PDE/aSpNYXRoLnBvdygyLDEwKih0LT0xKSkqTWF0aC5zaW4oKHQtZSkqKDIqTWF0aC5QSSkvbikqLS41OmkqTWF0aC5wb3coMiwtMTAqKHQtPTEpKSpNYXRoLnNpbigodC1lKSooMipNYXRoLlBJKS9uKSouNSsxKX0sZWFzZUluQmFjazpmdW5jdGlvbih0KXtyZXR1cm4gdCp0KigyLjcwMTU4KnQtMS43MDE1OCl9LGVhc2VPdXRCYWNrOmZ1bmN0aW9uKHQpe3JldHVybih0LT0xKSp0KigyLjcwMTU4KnQrMS43MDE1OCkrMX0sZWFzZUluT3V0QmFjazpmdW5jdGlvbih0KXt2YXIgZT0xLjcwMTU4O3JldHVybih0Lz0uNSk8MT90KnQqKCgxKyhlKj0xLjUyNSkpKnQtZSkqLjU6LjUqKCh0LT0yKSp0KigoMSsoZSo9MS41MjUpKSp0K2UpKzIpfSxlYXNlSW5Cb3VuY2U6ZnVuY3Rpb24odCl7cmV0dXJuIDEtYS5lYXNlT3V0Qm91bmNlKDEtdCl9LGVhc2VPdXRCb3VuY2U6ZnVuY3Rpb24odCl7cmV0dXJuIHQ8MS8yLjc1PzcuNTYyNSp0KnQ6dDwyLzIuNzU/Ny41NjI1Kih0LT0xLjUvMi43NSkqdCsuNzU6dDwyLjUvMi43NT83LjU2MjUqKHQtPTIuMjUvMi43NSkqdCsuOTM3NTo3LjU2MjUqKHQtPTIuNjI1LzIuNzUpKnQrLjk4NDM3NX0sZWFzZUluT3V0Qm91bmNlOmZ1bmN0aW9uKHQpe3JldHVybiB0PC41Py41KmEuZWFzZUluQm91bmNlKDIqdCk6LjUqYS5lYXNlT3V0Qm91bmNlKDIqdC0xKSsuNX19O2UuZXhwb3J0cz17ZWZmZWN0czphfSxpLmVhc2luZ0VmZmVjdHM9YX0sezQzOjQzfV0sNDU6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgbz10KDQzKTtlLmV4cG9ydHM9e3RvTGluZUhlaWdodDpmdW5jdGlvbih0LGUpe3ZhciBuPShcIlwiK3QpLm1hdGNoKC9eKG5vcm1hbHwoXFxkKyg/OlxcLlxcZCspPykocHh8ZW18JSk/KSQvKTtpZighbnx8XCJub3JtYWxcIj09PW5bMV0pcmV0dXJuIDEuMiplO3N3aXRjaCh0PStuWzJdLG5bM10pe2Nhc2VcInB4XCI6cmV0dXJuIHQ7Y2FzZVwiJVwiOnQvPTEwMH1yZXR1cm4gZSp0fSx0b1BhZGRpbmc6ZnVuY3Rpb24odCl7dmFyIGUsbixpLGE7cmV0dXJuIG8uaXNPYmplY3QodCk/KGU9K3QudG9wfHwwLG49K3QucmlnaHR8fDAsaT0rdC5ib3R0b218fDAsYT0rdC5sZWZ0fHwwKTplPW49aT1hPSt0fHwwLHt0b3A6ZSxyaWdodDpuLGJvdHRvbTppLGxlZnQ6YSxoZWlnaHQ6ZStpLHdpZHRoOmErbn19LHJlc29sdmU6ZnVuY3Rpb24odCxlLG4pe3ZhciBpLGEscjtmb3IoaT0wLGE9dC5sZW5ndGg7aTxhOysraSlpZih2b2lkIDAhPT0ocj10W2ldKSYmKHZvaWQgMCE9PWUmJlwiZnVuY3Rpb25cIj09dHlwZW9mIHImJihyPXIoZSkpLHZvaWQgMCE9PW4mJm8uaXNBcnJheShyKSYmKHI9cltuXSksdm9pZCAwIT09cikpcmV0dXJuIHJ9fX0sezQzOjQzfV0sNDY6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtlLmV4cG9ydHM9dCg0MyksZS5leHBvcnRzLmVhc2luZz10KDQ0KSxlLmV4cG9ydHMuY2FudmFzPXQoNDIpLGUuZXhwb3J0cy5vcHRpb25zPXQoNDUpfSx7NDI6NDIsNDM6NDMsNDQ6NDQsNDU6NDV9XSw0NzpbZnVuY3Rpb24odCxlLG4pe2UuZXhwb3J0cz17YWNxdWlyZUNvbnRleHQ6ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnQuY2FudmFzJiYodD10LmNhbnZhcyksdCYmdC5nZXRDb250ZXh0KFwiMmRcIil8fG51bGx9fX0se31dLDQ4OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGY9dCg0NiksZz1cIiRjaGFydGpzXCIsbT1cImNoYXJ0anMtXCIscD1tK1wicmVuZGVyLW1vbml0b3JcIix2PW0rXCJyZW5kZXItYW5pbWF0aW9uXCIsYj1bXCJhbmltYXRpb25zdGFydFwiLFwid2Via2l0QW5pbWF0aW9uU3RhcnRcIl0scz17dG91Y2hzdGFydDpcIm1vdXNlZG93blwiLHRvdWNobW92ZTpcIm1vdXNlbW92ZVwiLHRvdWNoZW5kOlwibW91c2V1cFwiLHBvaW50ZXJlbnRlcjpcIm1vdXNlZW50ZXJcIixwb2ludGVyZG93bjpcIm1vdXNlZG93blwiLHBvaW50ZXJtb3ZlOlwibW91c2Vtb3ZlXCIscG9pbnRlcnVwOlwibW91c2V1cFwiLHBvaW50ZXJsZWF2ZTpcIm1vdXNlb3V0XCIscG9pbnRlcm91dDpcIm1vdXNlb3V0XCJ9O2Z1bmN0aW9uIGwodCxlKXt2YXIgbj1mLmdldFN0eWxlKHQsZSksaT1uJiZuLm1hdGNoKC9eKFxcZCspKFxcLlxcZCspP3B4JC8pO3JldHVybiBpP051bWJlcihpWzFdKTp2b2lkIDB9dmFyIGk9ISFmdW5jdGlvbigpe3ZhciB0PSExO3RyeXt2YXIgZT1PYmplY3QuZGVmaW5lUHJvcGVydHkoe30sXCJwYXNzaXZlXCIse2dldDpmdW5jdGlvbigpe3Q9ITB9fSk7d2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJlXCIsbnVsbCxlKX1jYXRjaCh0KXt9cmV0dXJuIHR9KCkmJntwYXNzaXZlOiEwfTtmdW5jdGlvbiB5KHQsZSxuKXt0LmFkZEV2ZW50TGlzdGVuZXIoZSxuLGkpfWZ1bmN0aW9uIG8odCxlLG4pe3QucmVtb3ZlRXZlbnRMaXN0ZW5lcihlLG4saSl9ZnVuY3Rpb24geCh0LGUsbixpLGEpe3JldHVybnt0eXBlOnQsY2hhcnQ6ZSxuYXRpdmU6YXx8bnVsbCx4OnZvaWQgMCE9PW4/bjpudWxsLHk6dm9pZCAwIT09aT9pOm51bGx9fWZ1bmN0aW9uIGEoZSx0LG4pe3ZhciBpLGEscixvLHMsbCx1LGQsaD1lW2ddfHwoZVtnXT17fSksYz1oLnJlc2l6ZXI9ZnVuY3Rpb24odCl7dmFyIGU9ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcImRpdlwiKSxuPW0rXCJzaXplLW1vbml0b3JcIixpPVwicG9zaXRpb246YWJzb2x1dGU7bGVmdDowO3RvcDowO3JpZ2h0OjA7Ym90dG9tOjA7b3ZlcmZsb3c6aGlkZGVuO3BvaW50ZXItZXZlbnRzOm5vbmU7dmlzaWJpbGl0eTpoaWRkZW47ei1pbmRleDotMTtcIjtlLnN0eWxlLmNzc1RleHQ9aSxlLmNsYXNzTmFtZT1uLGUuaW5uZXJIVE1MPSc8ZGl2IGNsYXNzPVwiJytuKyctZXhwYW5kXCIgc3R5bGU9XCInK2krJ1wiPjxkaXYgc3R5bGU9XCJwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoxMDAwMDAwcHg7aGVpZ2h0OjEwMDAwMDBweDtsZWZ0OjA7dG9wOjBcIj48L2Rpdj48L2Rpdj48ZGl2IGNsYXNzPVwiJytuKyctc2hyaW5rXCIgc3R5bGU9XCInK2krJ1wiPjxkaXYgc3R5bGU9XCJwb3NpdGlvbjphYnNvbHV0ZTt3aWR0aDoyMDAlO2hlaWdodDoyMDAlO2xlZnQ6MDsgdG9wOjBcIj48L2Rpdj48L2Rpdj4nO3ZhciBhPWUuY2hpbGROb2Rlc1swXSxyPWUuY2hpbGROb2Rlc1sxXTtlLl9yZXNldD1mdW5jdGlvbigpe2Euc2Nyb2xsTGVmdD0xZTYsYS5zY3JvbGxUb3A9MWU2LHIuc2Nyb2xsTGVmdD0xZTYsci5zY3JvbGxUb3A9MWU2fTt2YXIgbz1mdW5jdGlvbigpe2UuX3Jlc2V0KCksdCgpfTtyZXR1cm4geShhLFwic2Nyb2xsXCIsby5iaW5kKGEsXCJleHBhbmRcIikpLHkocixcInNjcm9sbFwiLG8uYmluZChyLFwic2hyaW5rXCIpKSxlfSgocj0hKGk9ZnVuY3Rpb24oKXtpZihoLnJlc2l6ZXIpcmV0dXJuIHQoeChcInJlc2l6ZVwiLG4pKX0pLG89W10sZnVuY3Rpb24oKXtvPUFycmF5LnByb3RvdHlwZS5zbGljZS5jYWxsKGFyZ3VtZW50cyksYT1hfHx0aGlzLHJ8fChyPSEwLGYucmVxdWVzdEFuaW1GcmFtZS5jYWxsKHdpbmRvdyxmdW5jdGlvbigpe3I9ITEsaS5hcHBseShhLG8pfSkpfSkpO2w9ZnVuY3Rpb24oKXtpZihoLnJlc2l6ZXIpe3ZhciB0PWUucGFyZW50Tm9kZTt0JiZ0IT09Yy5wYXJlbnROb2RlJiZ0Lmluc2VydEJlZm9yZShjLHQuZmlyc3RDaGlsZCksYy5fcmVzZXQoKX19LHU9KHM9ZSlbZ118fChzW2ddPXt9KSxkPXUucmVuZGVyUHJveHk9ZnVuY3Rpb24odCl7dC5hbmltYXRpb25OYW1lPT09diYmbCgpfSxmLmVhY2goYixmdW5jdGlvbih0KXt5KHMsdCxkKX0pLHUucmVmbG93PSEhcy5vZmZzZXRQYXJlbnQscy5jbGFzc0xpc3QuYWRkKHApfWZ1bmN0aW9uIHIodCl7dmFyIGUsbixpLGE9dFtnXXx8e30scj1hLnJlc2l6ZXI7ZGVsZXRlIGEucmVzaXplcixuPShlPXQpW2ddfHx7fSwoaT1uLnJlbmRlclByb3h5KSYmKGYuZWFjaChiLGZ1bmN0aW9uKHQpe28oZSx0LGkpfSksZGVsZXRlIG4ucmVuZGVyUHJveHkpLGUuY2xhc3NMaXN0LnJlbW92ZShwKSxyJiZyLnBhcmVudE5vZGUmJnIucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChyKX1lLmV4cG9ydHM9e19lbmFibGVkOlwidW5kZWZpbmVkXCIhPXR5cGVvZiB3aW5kb3cmJlwidW5kZWZpbmVkXCIhPXR5cGVvZiBkb2N1bWVudCxpbml0aWFsaXplOmZ1bmN0aW9uKCl7dmFyIHQsZSxuLGk9XCJmcm9te29wYWNpdHk6MC45OX10b3tvcGFjaXR5OjF9XCI7ZT1cIkAtd2Via2l0LWtleWZyYW1lcyBcIit2K1wie1wiK2krXCJ9QGtleWZyYW1lcyBcIit2K1wie1wiK2krXCJ9LlwiK3ArXCJ7LXdlYmtpdC1hbmltYXRpb246XCIrditcIiAwLjAwMXM7YW5pbWF0aW9uOlwiK3YrXCIgMC4wMDFzO31cIixuPSh0PXRoaXMpLl9zdHlsZXx8ZG9jdW1lbnQuY3JlYXRlRWxlbWVudChcInN0eWxlXCIpLHQuX3N0eWxlfHwoZT1cIi8qIENoYXJ0LmpzICovXFxuXCIrZSwodC5fc3R5bGU9bikuc2V0QXR0cmlidXRlKFwidHlwZVwiLFwidGV4dC9jc3NcIiksZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJoZWFkXCIpWzBdLmFwcGVuZENoaWxkKG4pKSxuLmFwcGVuZENoaWxkKGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKGUpKX0sYWNxdWlyZUNvbnRleHQ6ZnVuY3Rpb24odCxlKXtcInN0cmluZ1wiPT10eXBlb2YgdD90PWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHQpOnQubGVuZ3RoJiYodD10WzBdKSx0JiZ0LmNhbnZhcyYmKHQ9dC5jYW52YXMpO3ZhciBuPXQmJnQuZ2V0Q29udGV4dCYmdC5nZXRDb250ZXh0KFwiMmRcIik7cmV0dXJuIG4mJm4uY2FudmFzPT09dD8oZnVuY3Rpb24odCxlKXt2YXIgbj10LnN0eWxlLGk9dC5nZXRBdHRyaWJ1dGUoXCJoZWlnaHRcIiksYT10LmdldEF0dHJpYnV0ZShcIndpZHRoXCIpO2lmKHRbZ109e2luaXRpYWw6e2hlaWdodDppLHdpZHRoOmEsc3R5bGU6e2Rpc3BsYXk6bi5kaXNwbGF5LGhlaWdodDpuLmhlaWdodCx3aWR0aDpuLndpZHRofX19LG4uZGlzcGxheT1uLmRpc3BsYXl8fFwiYmxvY2tcIixudWxsPT09YXx8XCJcIj09PWEpe3ZhciByPWwodCxcIndpZHRoXCIpO3ZvaWQgMCE9PXImJih0LndpZHRoPXIpfWlmKG51bGw9PT1pfHxcIlwiPT09aSlpZihcIlwiPT09dC5zdHlsZS5oZWlnaHQpdC5oZWlnaHQ9dC53aWR0aC8oZS5vcHRpb25zLmFzcGVjdFJhdGlvfHwyKTtlbHNle3ZhciBvPWwodCxcImhlaWdodFwiKTt2b2lkIDAhPT1yJiYodC5oZWlnaHQ9byl9fSh0LGUpLG4pOm51bGx9LHJlbGVhc2VDb250ZXh0OmZ1bmN0aW9uKHQpe3ZhciBuPXQuY2FudmFzO2lmKG5bZ10pe3ZhciBpPW5bZ10uaW5pdGlhbDtbXCJoZWlnaHRcIixcIndpZHRoXCJdLmZvckVhY2goZnVuY3Rpb24odCl7dmFyIGU9aVt0XTtmLmlzTnVsbE9yVW5kZWYoZSk/bi5yZW1vdmVBdHRyaWJ1dGUodCk6bi5zZXRBdHRyaWJ1dGUodCxlKX0pLGYuZWFjaChpLnN0eWxlfHx7fSxmdW5jdGlvbih0LGUpe24uc3R5bGVbZV09dH0pLG4ud2lkdGg9bi53aWR0aCxkZWxldGUgbltnXX19LGFkZEV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24ocix0LG8pe3ZhciBlPXIuY2FudmFzO2lmKFwicmVzaXplXCIhPT10KXt2YXIgbj1vW2ddfHwob1tnXT17fSk7eShlLHQsKG4ucHJveGllc3x8KG4ucHJveGllcz17fSkpW3IuaWQrXCJfXCIrdF09ZnVuY3Rpb24odCl7dmFyIGUsbixpLGE7bygobj1yLGk9c1soZT10KS50eXBlXXx8ZS50eXBlLGE9Zi5nZXRSZWxhdGl2ZVBvc2l0aW9uKGUsbikseChpLG4sYS54LGEueSxlKSkpfSl9ZWxzZSBhKGUsbyxyKX0scmVtb3ZlRXZlbnRMaXN0ZW5lcjpmdW5jdGlvbih0LGUsbil7dmFyIGk9dC5jYW52YXM7aWYoXCJyZXNpemVcIiE9PWUpe3ZhciBhPSgobltnXXx8e30pLnByb3hpZXN8fHt9KVt0LmlkK1wiX1wiK2VdO2EmJm8oaSxlLGEpfWVsc2UgcihpKX19LGYuYWRkRXZlbnQ9eSxmLnJlbW92ZUV2ZW50PW99LHs0Njo0Nn1dLDQ5OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9dCg0NiksYT10KDQ3KSxyPXQoNDgpLG89ci5fZW5hYmxlZD9yOmE7ZS5leHBvcnRzPWkuZXh0ZW5kKHtpbml0aWFsaXplOmZ1bmN0aW9uKCl7fSxhY3F1aXJlQ29udGV4dDpmdW5jdGlvbigpe30scmVsZWFzZUNvbnRleHQ6ZnVuY3Rpb24oKXt9LGFkZEV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24oKXt9LHJlbW92ZUV2ZW50TGlzdGVuZXI6ZnVuY3Rpb24oKXt9fSxvKX0sezQ2OjQ2LDQ3OjQ3LDQ4OjQ4fV0sNTA6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjtlLmV4cG9ydHM9e30sZS5leHBvcnRzLmZpbGxlcj10KDUxKSxlLmV4cG9ydHMubGVnZW5kPXQoNTIpLGUuZXhwb3J0cy50aXRsZT10KDUzKX0sezUxOjUxLDUyOjUyLDUzOjUzfV0sNTE6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgdT10KDI2KSxjPXQoNDEpLGQ9dCg0Nik7dS5fc2V0KFwiZ2xvYmFsXCIse3BsdWdpbnM6e2ZpbGxlcjp7cHJvcGFnYXRlOiEwfX19KTt2YXIgZj17ZGF0YXNldDpmdW5jdGlvbih0KXt2YXIgZT10LmZpbGwsbj10LmNoYXJ0LGk9bi5nZXREYXRhc2V0TWV0YShlKSxhPWkmJm4uaXNEYXRhc2V0VmlzaWJsZShlKSYmaS5kYXRhc2V0Ll9jaGlsZHJlbnx8W10scj1hLmxlbmd0aHx8MDtyZXR1cm4gcj9mdW5jdGlvbih0LGUpe3JldHVybiBlPHImJmFbZV0uX3ZpZXd8fG51bGx9Om51bGx9LGJvdW5kYXJ5OmZ1bmN0aW9uKHQpe3ZhciBlPXQuYm91bmRhcnksbj1lP2UueDpudWxsLGk9ZT9lLnk6bnVsbDtyZXR1cm4gZnVuY3Rpb24odCl7cmV0dXJue3g6bnVsbD09PW4/dC54Om4seTpudWxsPT09aT90Lnk6aX19fX07ZnVuY3Rpb24gZyh0LGUsbil7dmFyIGksYT10Ll9tb2RlbHx8e30scj1hLmZpbGw7aWYodm9pZCAwPT09ciYmKHI9ISFhLmJhY2tncm91bmRDb2xvciksITE9PT1yfHxudWxsPT09cilyZXR1cm4hMTtpZighMD09PXIpcmV0dXJuXCJvcmlnaW5cIjtpZihpPXBhcnNlRmxvYXQociwxMCksaXNGaW5pdGUoaSkmJk1hdGguZmxvb3IoaSk9PT1pKXJldHVyblwiLVwiIT09clswXSYmXCIrXCIhPT1yWzBdfHwoaT1lK2kpLCEoaT09PWV8fGk8MHx8bjw9aSkmJmk7c3dpdGNoKHIpe2Nhc2VcImJvdHRvbVwiOnJldHVyblwic3RhcnRcIjtjYXNlXCJ0b3BcIjpyZXR1cm5cImVuZFwiO2Nhc2VcInplcm9cIjpyZXR1cm5cIm9yaWdpblwiO2Nhc2VcIm9yaWdpblwiOmNhc2VcInN0YXJ0XCI6Y2FzZVwiZW5kXCI6cmV0dXJuIHI7ZGVmYXVsdDpyZXR1cm4hMX19ZnVuY3Rpb24gbSh0KXt2YXIgZSxuPXQuZWwuX21vZGVsfHx7fSxpPXQuZWwuX3NjYWxlfHx7fSxhPXQuZmlsbCxyPW51bGw7aWYoaXNGaW5pdGUoYSkpcmV0dXJuIG51bGw7aWYoXCJzdGFydFwiPT09YT9yPXZvaWQgMD09PW4uc2NhbGVCb3R0b20/aS5ib3R0b206bi5zY2FsZUJvdHRvbTpcImVuZFwiPT09YT9yPXZvaWQgMD09PW4uc2NhbGVUb3A/aS50b3A6bi5zY2FsZVRvcDp2b2lkIDAhPT1uLnNjYWxlWmVybz9yPW4uc2NhbGVaZXJvOmkuZ2V0QmFzZVBvc2l0aW9uP3I9aS5nZXRCYXNlUG9zaXRpb24oKTppLmdldEJhc2VQaXhlbCYmKHI9aS5nZXRCYXNlUGl4ZWwoKSksbnVsbCE9cil7aWYodm9pZCAwIT09ci54JiZ2b2lkIDAhPT1yLnkpcmV0dXJuIHI7aWYoXCJudW1iZXJcIj09dHlwZW9mIHImJmlzRmluaXRlKHIpKXJldHVybnt4OihlPWkuaXNIb3Jpem9udGFsKCkpP3I6bnVsbCx5OmU/bnVsbDpyfX1yZXR1cm4gbnVsbH1mdW5jdGlvbiBwKHQsZSxuKXt2YXIgaSxhPXRbZV0uZmlsbCxyPVtlXTtpZighbilyZXR1cm4gYTtmb3IoOyExIT09YSYmLTE9PT1yLmluZGV4T2YoYSk7KXtpZighaXNGaW5pdGUoYSkpcmV0dXJuIGE7aWYoIShpPXRbYV0pKXJldHVybiExO2lmKGkudmlzaWJsZSlyZXR1cm4gYTtyLnB1c2goYSksYT1pLmZpbGx9cmV0dXJuITF9ZnVuY3Rpb24geSh0KXtyZXR1cm4gdCYmIXQuc2tpcH1mdW5jdGlvbiB4KHQsZSxuLGksYSl7dmFyIHI7aWYoaSYmYSl7Zm9yKHQubW92ZVRvKGVbMF0ueCxlWzBdLnkpLHI9MTtyPGk7KytyKWQuY2FudmFzLmxpbmVUbyh0LGVbci0xXSxlW3JdKTtmb3IodC5saW5lVG8oblthLTFdLngsblthLTFdLnkpLHI9YS0xOzA8cjstLXIpZC5jYW52YXMubGluZVRvKHQsbltyXSxuW3ItMV0sITApfX1lLmV4cG9ydHM9e2lkOlwiZmlsbGVyXCIsYWZ0ZXJEYXRhc2V0c1VwZGF0ZTpmdW5jdGlvbih0LGUpe3ZhciBuLGksYSxyLG8scyxsLHU9KHQuZGF0YS5kYXRhc2V0c3x8W10pLmxlbmd0aCxkPWUucHJvcGFnYXRlLGg9W107Zm9yKGk9MDtpPHU7KytpKXI9bnVsbCwoYT0obj10LmdldERhdGFzZXRNZXRhKGkpKS5kYXRhc2V0KSYmYS5fbW9kZWwmJmEgaW5zdGFuY2VvZiBjLkxpbmUmJihyPXt2aXNpYmxlOnQuaXNEYXRhc2V0VmlzaWJsZShpKSxmaWxsOmcoYSxpLHUpLGNoYXJ0OnQsZWw6YX0pLG4uJGZpbGxlcj1yLGgucHVzaChyKTtmb3IoaT0wO2k8dTsrK2kpKHI9aFtpXSkmJihyLmZpbGw9cChoLGksZCksci5ib3VuZGFyeT1tKHIpLHIubWFwcGVyPShsPXZvaWQgMCxzPShvPXIpLmZpbGwsIShsPVwiZGF0YXNldFwiKT09PXM/bnVsbDooaXNGaW5pdGUocyl8fChsPVwiYm91bmRhcnlcIiksZltsXShvKSkpKX0sYmVmb3JlRGF0YXNldERyYXc6ZnVuY3Rpb24odCxlKXt2YXIgbj1lLm1ldGEuJGZpbGxlcjtpZihuKXt2YXIgaT10LmN0eCxhPW4uZWwscj1hLl92aWV3LG89YS5fY2hpbGRyZW58fFtdLHM9bi5tYXBwZXIsbD1yLmJhY2tncm91bmRDb2xvcnx8dS5nbG9iYWwuZGVmYXVsdENvbG9yO3MmJmwmJm8ubGVuZ3RoJiYoZC5jYW52YXMuY2xpcEFyZWEoaSx0LmNoYXJ0QXJlYSksZnVuY3Rpb24odCxlLG4saSxhLHIpe3ZhciBvLHMsbCx1LGQsaCxjLGY9ZS5sZW5ndGgsZz1pLnNwYW5HYXBzLG09W10scD1bXSx2PTAsYj0wO2Zvcih0LmJlZ2luUGF0aCgpLG89MCxzPWYrISFyO288czsrK28pZD1uKHU9ZVtsPW8lZl0uX3ZpZXcsbCxpKSxoPXkodSksYz15KGQpLGgmJmM/KHY9bS5wdXNoKHUpLGI9cC5wdXNoKGQpKTp2JiZiJiYoZz8oaCYmbS5wdXNoKHUpLGMmJnAucHVzaChkKSk6KHgodCxtLHAsdixiKSx2PWI9MCxtPVtdLHA9W10pKTt4KHQsbSxwLHYsYiksdC5jbG9zZVBhdGgoKSx0LmZpbGxTdHlsZT1hLHQuZmlsbCgpfShpLG8scyxyLGwsYS5fbG9vcCksZC5jYW52YXMudW5jbGlwQXJlYShpKSl9fX19LHsyNjoyNiw0MTo0MSw0Njo0Nn1dLDUyOltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIEQ9dCgyNiksaT10KDI3KSxDPXQoNDYpLGE9dCgzMSkscj1DLm5vb3A7ZnVuY3Rpb24gUCh0LGUpe3JldHVybiB0LnVzZVBvaW50U3R5bGU/ZSpNYXRoLlNRUlQyOnQuYm94V2lkdGh9RC5fc2V0KFwiZ2xvYmFsXCIse2xlZ2VuZDp7ZGlzcGxheTohMCxwb3NpdGlvbjpcInRvcFwiLGZ1bGxXaWR0aDohMCxyZXZlcnNlOiExLHdlaWdodDoxZTMsb25DbGljazpmdW5jdGlvbih0LGUpe3ZhciBuPWUuZGF0YXNldEluZGV4LGk9dGhpcy5jaGFydCxhPWkuZ2V0RGF0YXNldE1ldGEobik7YS5oaWRkZW49bnVsbD09PWEuaGlkZGVuPyFpLmRhdGEuZGF0YXNldHNbbl0uaGlkZGVuOm51bGwsaS51cGRhdGUoKX0sb25Ib3ZlcjpudWxsLGxhYmVsczp7Ym94V2lkdGg6NDAscGFkZGluZzoxMCxnZW5lcmF0ZUxhYmVsczpmdW5jdGlvbihuKXt2YXIgdD1uLmRhdGE7cmV0dXJuIEMuaXNBcnJheSh0LmRhdGFzZXRzKT90LmRhdGFzZXRzLm1hcChmdW5jdGlvbih0LGUpe3JldHVybnt0ZXh0OnQubGFiZWwsZmlsbFN0eWxlOkMuaXNBcnJheSh0LmJhY2tncm91bmRDb2xvcik/dC5iYWNrZ3JvdW5kQ29sb3JbMF06dC5iYWNrZ3JvdW5kQ29sb3IsaGlkZGVuOiFuLmlzRGF0YXNldFZpc2libGUoZSksbGluZUNhcDp0LmJvcmRlckNhcFN0eWxlLGxpbmVEYXNoOnQuYm9yZGVyRGFzaCxsaW5lRGFzaE9mZnNldDp0LmJvcmRlckRhc2hPZmZzZXQsbGluZUpvaW46dC5ib3JkZXJKb2luU3R5bGUsbGluZVdpZHRoOnQuYm9yZGVyV2lkdGgsc3Ryb2tlU3R5bGU6dC5ib3JkZXJDb2xvcixwb2ludFN0eWxlOnQucG9pbnRTdHlsZSxkYXRhc2V0SW5kZXg6ZX19LHRoaXMpOltdfX19LGxlZ2VuZENhbGxiYWNrOmZ1bmN0aW9uKHQpe3ZhciBlPVtdO2UucHVzaCgnPHVsIGNsYXNzPVwiJyt0LmlkKyctbGVnZW5kXCI+Jyk7Zm9yKHZhciBuPTA7bjx0LmRhdGEuZGF0YXNldHMubGVuZ3RoO24rKyllLnB1c2goJzxsaT48c3BhbiBzdHlsZT1cImJhY2tncm91bmQtY29sb3I6Jyt0LmRhdGEuZGF0YXNldHNbbl0uYmFja2dyb3VuZENvbG9yKydcIj48L3NwYW4+JyksdC5kYXRhLmRhdGFzZXRzW25dLmxhYmVsJiZlLnB1c2godC5kYXRhLmRhdGFzZXRzW25dLmxhYmVsKSxlLnB1c2goXCI8L2xpPlwiKTtyZXR1cm4gZS5wdXNoKFwiPC91bD5cIiksZS5qb2luKFwiXCIpfX0pO3ZhciBvPWkuZXh0ZW5kKHtpbml0aWFsaXplOmZ1bmN0aW9uKHQpe0MuZXh0ZW5kKHRoaXMsdCksdGhpcy5sZWdlbmRIaXRCb3hlcz1bXSx0aGlzLmRvdWdobnV0TW9kZT0hMX0sYmVmb3JlVXBkYXRlOnIsdXBkYXRlOmZ1bmN0aW9uKHQsZSxuKXt2YXIgaT10aGlzO3JldHVybiBpLmJlZm9yZVVwZGF0ZSgpLGkubWF4V2lkdGg9dCxpLm1heEhlaWdodD1lLGkubWFyZ2lucz1uLGkuYmVmb3JlU2V0RGltZW5zaW9ucygpLGkuc2V0RGltZW5zaW9ucygpLGkuYWZ0ZXJTZXREaW1lbnNpb25zKCksaS5iZWZvcmVCdWlsZExhYmVscygpLGkuYnVpbGRMYWJlbHMoKSxpLmFmdGVyQnVpbGRMYWJlbHMoKSxpLmJlZm9yZUZpdCgpLGkuZml0KCksaS5hZnRlckZpdCgpLGkuYWZ0ZXJVcGRhdGUoKSxpLm1pblNpemV9LGFmdGVyVXBkYXRlOnIsYmVmb3JlU2V0RGltZW5zaW9uczpyLHNldERpbWVuc2lvbnM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzO3QuaXNIb3Jpem9udGFsKCk/KHQud2lkdGg9dC5tYXhXaWR0aCx0LmxlZnQ9MCx0LnJpZ2h0PXQud2lkdGgpOih0LmhlaWdodD10Lm1heEhlaWdodCx0LnRvcD0wLHQuYm90dG9tPXQuaGVpZ2h0KSx0LnBhZGRpbmdMZWZ0PTAsdC5wYWRkaW5nVG9wPTAsdC5wYWRkaW5nUmlnaHQ9MCx0LnBhZGRpbmdCb3R0b209MCx0Lm1pblNpemU9e3dpZHRoOjAsaGVpZ2h0OjB9fSxhZnRlclNldERpbWVuc2lvbnM6cixiZWZvcmVCdWlsZExhYmVsczpyLGJ1aWxkTGFiZWxzOmZ1bmN0aW9uKCl7dmFyIGU9dGhpcyxuPWUub3B0aW9ucy5sYWJlbHN8fHt9LHQ9Qy5jYWxsYmFjayhuLmdlbmVyYXRlTGFiZWxzLFtlLmNoYXJ0XSxlKXx8W107bi5maWx0ZXImJih0PXQuZmlsdGVyKGZ1bmN0aW9uKHQpe3JldHVybiBuLmZpbHRlcih0LGUuY2hhcnQuZGF0YSl9KSksZS5vcHRpb25zLnJldmVyc2UmJnQucmV2ZXJzZSgpLGUubGVnZW5kSXRlbXM9dH0sYWZ0ZXJCdWlsZExhYmVsczpyLGJlZm9yZUZpdDpyLGZpdDpmdW5jdGlvbigpe3ZhciBpPXRoaXMsdD1pLm9wdGlvbnMsYT10LmxhYmVscyxlPXQuZGlzcGxheSxyPWkuY3R4LG49RC5nbG9iYWwsbz1DLnZhbHVlT3JEZWZhdWx0LHM9byhhLmZvbnRTaXplLG4uZGVmYXVsdEZvbnRTaXplKSxsPW8oYS5mb250U3R5bGUsbi5kZWZhdWx0Rm9udFN0eWxlKSx1PW8oYS5mb250RmFtaWx5LG4uZGVmYXVsdEZvbnRGYW1pbHkpLGQ9Qy5mb250U3RyaW5nKHMsbCx1KSxoPWkubGVnZW5kSGl0Qm94ZXM9W10sYz1pLm1pblNpemUsZj1pLmlzSG9yaXpvbnRhbCgpO2lmKGMuaGVpZ2h0PWY/KGMud2lkdGg9aS5tYXhXaWR0aCxlPzEwOjApOihjLndpZHRoPWU/MTA6MCxpLm1heEhlaWdodCksZSlpZihyLmZvbnQ9ZCxmKXt2YXIgZz1pLmxpbmVXaWR0aHM9WzBdLG09aS5sZWdlbmRJdGVtcy5sZW5ndGg/cythLnBhZGRpbmc6MDtyLnRleHRBbGlnbj1cImxlZnRcIixyLnRleHRCYXNlbGluZT1cInRvcFwiLEMuZWFjaChpLmxlZ2VuZEl0ZW1zLGZ1bmN0aW9uKHQsZSl7dmFyIG49UChhLHMpK3MvMityLm1lYXN1cmVUZXh0KHQudGV4dCkud2lkdGg7Z1tnLmxlbmd0aC0xXStuK2EucGFkZGluZz49aS53aWR0aCYmKG0rPXMrYS5wYWRkaW5nLGdbZy5sZW5ndGhdPWkubGVmdCksaFtlXT17bGVmdDowLHRvcDowLHdpZHRoOm4saGVpZ2h0OnN9LGdbZy5sZW5ndGgtMV0rPW4rYS5wYWRkaW5nfSksYy5oZWlnaHQrPW19ZWxzZXt2YXIgcD1hLnBhZGRpbmcsdj1pLmNvbHVtbldpZHRocz1bXSxiPWEucGFkZGluZyx5PTAseD0wLF89cytwO0MuZWFjaChpLmxlZ2VuZEl0ZW1zLGZ1bmN0aW9uKHQsZSl7dmFyIG49UChhLHMpK3MvMityLm1lYXN1cmVUZXh0KHQudGV4dCkud2lkdGg7eCtfPmMuaGVpZ2h0JiYoYis9eSthLnBhZGRpbmcsdi5wdXNoKHkpLHg9eT0wKSx5PU1hdGgubWF4KHksbikseCs9XyxoW2VdPXtsZWZ0OjAsdG9wOjAsd2lkdGg6bixoZWlnaHQ6c319KSxiKz15LHYucHVzaCh5KSxjLndpZHRoKz1ifWkud2lkdGg9Yy53aWR0aCxpLmhlaWdodD1jLmhlaWdodH0sYWZ0ZXJGaXQ6cixpc0hvcml6b250YWw6ZnVuY3Rpb24oKXtyZXR1cm5cInRvcFwiPT09dGhpcy5vcHRpb25zLnBvc2l0aW9ufHxcImJvdHRvbVwiPT09dGhpcy5vcHRpb25zLnBvc2l0aW9ufSxkcmF3OmZ1bmN0aW9uKCl7dmFyIGg9dGhpcyxjPWgub3B0aW9ucyxmPWMubGFiZWxzLGc9RC5nbG9iYWwsbT1nLmVsZW1lbnRzLmxpbmUscD1oLndpZHRoLHY9aC5saW5lV2lkdGhzO2lmKGMuZGlzcGxheSl7dmFyIGIseT1oLmN0eCx4PUMudmFsdWVPckRlZmF1bHQsdD14KGYuZm9udENvbG9yLGcuZGVmYXVsdEZvbnRDb2xvciksXz14KGYuZm9udFNpemUsZy5kZWZhdWx0Rm9udFNpemUpLGU9eChmLmZvbnRTdHlsZSxnLmRlZmF1bHRGb250U3R5bGUpLG49eChmLmZvbnRGYW1pbHksZy5kZWZhdWx0Rm9udEZhbWlseSksaT1DLmZvbnRTdHJpbmcoXyxlLG4pO3kudGV4dEFsaWduPVwibGVmdFwiLHkudGV4dEJhc2VsaW5lPVwibWlkZGxlXCIseS5saW5lV2lkdGg9LjUseS5zdHJva2VTdHlsZT10LHkuZmlsbFN0eWxlPXQseS5mb250PWk7dmFyIGs9UChmLF8pLHc9aC5sZWdlbmRIaXRCb3hlcyxNPWguaXNIb3Jpem9udGFsKCk7Yj1NP3t4OmgubGVmdCsocC12WzBdKS8yLHk6aC50b3ArZi5wYWRkaW5nLGxpbmU6MH06e3g6aC5sZWZ0K2YucGFkZGluZyx5OmgudG9wK2YucGFkZGluZyxsaW5lOjB9O3ZhciBTPV8rZi5wYWRkaW5nO0MuZWFjaChoLmxlZ2VuZEl0ZW1zLGZ1bmN0aW9uKHQsZSl7dmFyIG4saSxhLHIsbyxzPXkubWVhc3VyZVRleHQodC50ZXh0KS53aWR0aCxsPWsrXy8yK3MsdT1iLngsZD1iLnk7TT9wPD11K2wmJihkPWIueSs9UyxiLmxpbmUrKyx1PWIueD1oLmxlZnQrKHAtdltiLmxpbmVdKS8yKTpkK1M+aC5ib3R0b20mJih1PWIueD11K2guY29sdW1uV2lkdGhzW2IubGluZV0rZi5wYWRkaW5nLGQ9Yi55PWgudG9wK2YucGFkZGluZyxiLmxpbmUrKyksZnVuY3Rpb24odCxlLG4pe2lmKCEoaXNOYU4oayl8fGs8PTApKXt5LnNhdmUoKSx5LmZpbGxTdHlsZT14KG4uZmlsbFN0eWxlLGcuZGVmYXVsdENvbG9yKSx5LmxpbmVDYXA9eChuLmxpbmVDYXAsbS5ib3JkZXJDYXBTdHlsZSkseS5saW5lRGFzaE9mZnNldD14KG4ubGluZURhc2hPZmZzZXQsbS5ib3JkZXJEYXNoT2Zmc2V0KSx5LmxpbmVKb2luPXgobi5saW5lSm9pbixtLmJvcmRlckpvaW5TdHlsZSkseS5saW5lV2lkdGg9eChuLmxpbmVXaWR0aCxtLmJvcmRlcldpZHRoKSx5LnN0cm9rZVN0eWxlPXgobi5zdHJva2VTdHlsZSxnLmRlZmF1bHRDb2xvcik7dmFyIGk9MD09PXgobi5saW5lV2lkdGgsbS5ib3JkZXJXaWR0aCk7aWYoeS5zZXRMaW5lRGFzaCYmeS5zZXRMaW5lRGFzaCh4KG4ubGluZURhc2gsbS5ib3JkZXJEYXNoKSksYy5sYWJlbHMmJmMubGFiZWxzLnVzZVBvaW50U3R5bGUpe3ZhciBhPV8qTWF0aC5TUVJUMi8yLHI9YS9NYXRoLlNRUlQyLG89dCtyLHM9ZStyO0MuY2FudmFzLmRyYXdQb2ludCh5LG4ucG9pbnRTdHlsZSxhLG8scyl9ZWxzZSBpfHx5LnN0cm9rZVJlY3QodCxlLGssXykseS5maWxsUmVjdCh0LGUsayxfKTt5LnJlc3RvcmUoKX19KHUsZCx0KSx3W2VdLmxlZnQ9dSx3W2VdLnRvcD1kLG49dCxpPXMscj1rKyhhPV8vMikrdSxvPWQrYSx5LmZpbGxUZXh0KG4udGV4dCxyLG8pLG4uaGlkZGVuJiYoeS5iZWdpblBhdGgoKSx5LmxpbmVXaWR0aD0yLHkubW92ZVRvKHIsbykseS5saW5lVG8ocitpLG8pLHkuc3Ryb2tlKCkpLE0/Yi54Kz1sK2YucGFkZGluZzpiLnkrPVN9KX19LGhhbmRsZUV2ZW50OmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLm9wdGlvbnMsaT1cIm1vdXNldXBcIj09PXQudHlwZT9cImNsaWNrXCI6dC50eXBlLGE9ITE7aWYoXCJtb3VzZW1vdmVcIj09PWkpe2lmKCFuLm9uSG92ZXIpcmV0dXJufWVsc2V7aWYoXCJjbGlja1wiIT09aSlyZXR1cm47aWYoIW4ub25DbGljaylyZXR1cm59dmFyIHI9dC54LG89dC55O2lmKHI+PWUubGVmdCYmcjw9ZS5yaWdodCYmbz49ZS50b3AmJm88PWUuYm90dG9tKWZvcih2YXIgcz1lLmxlZ2VuZEhpdEJveGVzLGw9MDtsPHMubGVuZ3RoOysrbCl7dmFyIHU9c1tsXTtpZihyPj11LmxlZnQmJnI8PXUubGVmdCt1LndpZHRoJiZvPj11LnRvcCYmbzw9dS50b3ArdS5oZWlnaHQpe2lmKFwiY2xpY2tcIj09PWkpe24ub25DbGljay5jYWxsKGUsdC5uYXRpdmUsZS5sZWdlbmRJdGVtc1tsXSksYT0hMDticmVha31pZihcIm1vdXNlbW92ZVwiPT09aSl7bi5vbkhvdmVyLmNhbGwoZSx0Lm5hdGl2ZSxlLmxlZ2VuZEl0ZW1zW2xdKSxhPSEwO2JyZWFrfX19cmV0dXJuIGF9fSk7ZnVuY3Rpb24gcyh0LGUpe3ZhciBuPW5ldyBvKHtjdHg6dC5jdHgsb3B0aW9uczplLGNoYXJ0OnR9KTthLmNvbmZpZ3VyZSh0LG4sZSksYS5hZGRCb3godCxuKSx0LmxlZ2VuZD1ufWUuZXhwb3J0cz17aWQ6XCJsZWdlbmRcIixfZWxlbWVudDpvLGJlZm9yZUluaXQ6ZnVuY3Rpb24odCl7dmFyIGU9dC5vcHRpb25zLmxlZ2VuZDtlJiZzKHQsZSl9LGJlZm9yZVVwZGF0ZTpmdW5jdGlvbih0KXt2YXIgZT10Lm9wdGlvbnMubGVnZW5kLG49dC5sZWdlbmQ7ZT8oQy5tZXJnZUlmKGUsRC5nbG9iYWwubGVnZW5kKSxuPyhhLmNvbmZpZ3VyZSh0LG4sZSksbi5vcHRpb25zPWUpOnModCxlKSk6biYmKGEucmVtb3ZlQm94KHQsbiksZGVsZXRlIHQubGVnZW5kKX0sYWZ0ZXJFdmVudDpmdW5jdGlvbih0LGUpe3ZhciBuPXQubGVnZW5kO24mJm4uaGFuZGxlRXZlbnQoZSl9fX0sezI2OjI2LDI3OjI3LDMxOjMxLDQ2OjQ2fV0sNTM6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgXz10KDI2KSxpPXQoMjcpLGs9dCg0NiksYT10KDMxKSxyPWsubm9vcDtfLl9zZXQoXCJnbG9iYWxcIix7dGl0bGU6e2Rpc3BsYXk6ITEsZm9udFN0eWxlOlwiYm9sZFwiLGZ1bGxXaWR0aDohMCxsaW5lSGVpZ2h0OjEuMixwYWRkaW5nOjEwLHBvc2l0aW9uOlwidG9wXCIsdGV4dDpcIlwiLHdlaWdodDoyZTN9fSk7dmFyIG89aS5leHRlbmQoe2luaXRpYWxpemU6ZnVuY3Rpb24odCl7ay5leHRlbmQodGhpcyx0KSx0aGlzLmxlZ2VuZEhpdEJveGVzPVtdfSxiZWZvcmVVcGRhdGU6cix1cGRhdGU6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPXRoaXM7cmV0dXJuIGkuYmVmb3JlVXBkYXRlKCksaS5tYXhXaWR0aD10LGkubWF4SGVpZ2h0PWUsaS5tYXJnaW5zPW4saS5iZWZvcmVTZXREaW1lbnNpb25zKCksaS5zZXREaW1lbnNpb25zKCksaS5hZnRlclNldERpbWVuc2lvbnMoKSxpLmJlZm9yZUJ1aWxkTGFiZWxzKCksaS5idWlsZExhYmVscygpLGkuYWZ0ZXJCdWlsZExhYmVscygpLGkuYmVmb3JlRml0KCksaS5maXQoKSxpLmFmdGVyRml0KCksaS5hZnRlclVwZGF0ZSgpLGkubWluU2l6ZX0sYWZ0ZXJVcGRhdGU6cixiZWZvcmVTZXREaW1lbnNpb25zOnIsc2V0RGltZW5zaW9uczpmdW5jdGlvbigpe3ZhciB0PXRoaXM7dC5pc0hvcml6b250YWwoKT8odC53aWR0aD10Lm1heFdpZHRoLHQubGVmdD0wLHQucmlnaHQ9dC53aWR0aCk6KHQuaGVpZ2h0PXQubWF4SGVpZ2h0LHQudG9wPTAsdC5ib3R0b209dC5oZWlnaHQpLHQucGFkZGluZ0xlZnQ9MCx0LnBhZGRpbmdUb3A9MCx0LnBhZGRpbmdSaWdodD0wLHQucGFkZGluZ0JvdHRvbT0wLHQubWluU2l6ZT17d2lkdGg6MCxoZWlnaHQ6MH19LGFmdGVyU2V0RGltZW5zaW9uczpyLGJlZm9yZUJ1aWxkTGFiZWxzOnIsYnVpbGRMYWJlbHM6cixhZnRlckJ1aWxkTGFiZWxzOnIsYmVmb3JlRml0OnIsZml0OmZ1bmN0aW9uKCl7dmFyIHQ9ay52YWx1ZU9yRGVmYXVsdCxlPXRoaXMub3B0aW9ucyxuPWUuZGlzcGxheSxpPXQoZS5mb250U2l6ZSxfLmdsb2JhbC5kZWZhdWx0Rm9udFNpemUpLGE9dGhpcy5taW5TaXplLHI9ay5pc0FycmF5KGUudGV4dCk/ZS50ZXh0Lmxlbmd0aDoxLG89ay5vcHRpb25zLnRvTGluZUhlaWdodChlLmxpbmVIZWlnaHQsaSkscz1uP3IqbysyKmUucGFkZGluZzowO3RoaXMuaXNIb3Jpem9udGFsKCk/KGEud2lkdGg9dGhpcy5tYXhXaWR0aCxhLmhlaWdodD1zKTooYS53aWR0aD1zLGEuaGVpZ2h0PXRoaXMubWF4SGVpZ2h0KSx0aGlzLndpZHRoPWEud2lkdGgsdGhpcy5oZWlnaHQ9YS5oZWlnaHR9LGFmdGVyRml0OnIsaXNIb3Jpem9udGFsOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5vcHRpb25zLnBvc2l0aW9uO3JldHVyblwidG9wXCI9PT10fHxcImJvdHRvbVwiPT09dH0sZHJhdzpmdW5jdGlvbigpe3ZhciB0PXRoaXMuY3R4LGU9ay52YWx1ZU9yRGVmYXVsdCxuPXRoaXMub3B0aW9ucyxpPV8uZ2xvYmFsO2lmKG4uZGlzcGxheSl7dmFyIGEscixvLHM9ZShuLmZvbnRTaXplLGkuZGVmYXVsdEZvbnRTaXplKSxsPWUobi5mb250U3R5bGUsaS5kZWZhdWx0Rm9udFN0eWxlKSx1PWUobi5mb250RmFtaWx5LGkuZGVmYXVsdEZvbnRGYW1pbHkpLGQ9ay5mb250U3RyaW5nKHMsbCx1KSxoPWsub3B0aW9ucy50b0xpbmVIZWlnaHQobi5saW5lSGVpZ2h0LHMpLGM9aC8yK24ucGFkZGluZyxmPTAsZz10aGlzLnRvcCxtPXRoaXMubGVmdCxwPXRoaXMuYm90dG9tLHY9dGhpcy5yaWdodDt0LmZpbGxTdHlsZT1lKG4uZm9udENvbG9yLGkuZGVmYXVsdEZvbnRDb2xvciksdC5mb250PWQsdGhpcy5pc0hvcml6b250YWwoKT8ocj1tKyh2LW0pLzIsbz1nK2MsYT12LW0pOihyPVwibGVmdFwiPT09bi5wb3NpdGlvbj9tK2M6di1jLG89ZysocC1nKS8yLGE9cC1nLGY9TWF0aC5QSSooXCJsZWZ0XCI9PT1uLnBvc2l0aW9uPy0uNTouNSkpLHQuc2F2ZSgpLHQudHJhbnNsYXRlKHIsbyksdC5yb3RhdGUoZiksdC50ZXh0QWxpZ249XCJjZW50ZXJcIix0LnRleHRCYXNlbGluZT1cIm1pZGRsZVwiO3ZhciBiPW4udGV4dDtpZihrLmlzQXJyYXkoYikpZm9yKHZhciB5PTAseD0wO3g8Yi5sZW5ndGg7Kyt4KXQuZmlsbFRleHQoYlt4XSwwLHksYSkseSs9aDtlbHNlIHQuZmlsbFRleHQoYiwwLDAsYSk7dC5yZXN0b3JlKCl9fX0pO2Z1bmN0aW9uIHModCxlKXt2YXIgbj1uZXcgbyh7Y3R4OnQuY3R4LG9wdGlvbnM6ZSxjaGFydDp0fSk7YS5jb25maWd1cmUodCxuLGUpLGEuYWRkQm94KHQsbiksdC50aXRsZUJsb2NrPW59ZS5leHBvcnRzPXtpZDpcInRpdGxlXCIsX2VsZW1lbnQ6byxiZWZvcmVJbml0OmZ1bmN0aW9uKHQpe3ZhciBlPXQub3B0aW9ucy50aXRsZTtlJiZzKHQsZSl9LGJlZm9yZVVwZGF0ZTpmdW5jdGlvbih0KXt2YXIgZT10Lm9wdGlvbnMudGl0bGUsbj10LnRpdGxlQmxvY2s7ZT8oay5tZXJnZUlmKGUsXy5nbG9iYWwudGl0bGUpLG4/KGEuY29uZmlndXJlKHQsbixlKSxuLm9wdGlvbnM9ZSk6cyh0LGUpKTpuJiYoYS5yZW1vdmVCb3godCxuKSxkZWxldGUgdC50aXRsZUJsb2NrKX19fSx7MjY6MjYsMjc6MjcsMzE6MzEsNDY6NDZ9XSw1NDpbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBpPXQoMzMpLGE9dCgzNCk7ZS5leHBvcnRzPWZ1bmN0aW9uKCl7dmFyIHQ9aS5leHRlbmQoe2dldExhYmVsczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuY2hhcnQuZGF0YTtyZXR1cm4gdGhpcy5vcHRpb25zLmxhYmVsc3x8KHRoaXMuaXNIb3Jpem9udGFsKCk/dC54TGFiZWxzOnQueUxhYmVscyl8fHQubGFiZWxzfSxkZXRlcm1pbmVEYXRhTGltaXRzOmZ1bmN0aW9uKCl7dmFyIHQsZT10aGlzLG49ZS5nZXRMYWJlbHMoKTtlLm1pbkluZGV4PTAsZS5tYXhJbmRleD1uLmxlbmd0aC0xLHZvaWQgMCE9PWUub3B0aW9ucy50aWNrcy5taW4mJih0PW4uaW5kZXhPZihlLm9wdGlvbnMudGlja3MubWluKSxlLm1pbkluZGV4PS0xIT09dD90OmUubWluSW5kZXgpLHZvaWQgMCE9PWUub3B0aW9ucy50aWNrcy5tYXgmJih0PW4uaW5kZXhPZihlLm9wdGlvbnMudGlja3MubWF4KSxlLm1heEluZGV4PS0xIT09dD90OmUubWF4SW5kZXgpLGUubWluPW5bZS5taW5JbmRleF0sZS5tYXg9bltlLm1heEluZGV4XX0sYnVpbGRUaWNrczpmdW5jdGlvbigpe3ZhciB0PXRoaXMuZ2V0TGFiZWxzKCk7dGhpcy50aWNrcz0wPT09dGhpcy5taW5JbmRleCYmdGhpcy5tYXhJbmRleD09PXQubGVuZ3RoLTE/dDp0LnNsaWNlKHRoaXMubWluSW5kZXgsdGhpcy5tYXhJbmRleCsxKX0sZ2V0TGFiZWxGb3JJbmRleDpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuY2hhcnQuZGF0YSxpPXRoaXMuaXNIb3Jpem9udGFsKCk7cmV0dXJuIG4ueUxhYmVscyYmIWk/dGhpcy5nZXRSaWdodFZhbHVlKG4uZGF0YXNldHNbZV0uZGF0YVt0XSk6dGhpcy50aWNrc1t0LXRoaXMubWluSW5kZXhdfSxnZXRQaXhlbEZvclZhbHVlOmZ1bmN0aW9uKHQsZSl7dmFyIG4saT10aGlzLGE9aS5vcHRpb25zLm9mZnNldCxyPU1hdGgubWF4KGkubWF4SW5kZXgrMS1pLm1pbkluZGV4LShhPzA6MSksMSk7aWYobnVsbCE9dCYmKG49aS5pc0hvcml6b250YWwoKT90Lng6dC55KSx2b2lkIDAhPT1ufHx2b2lkIDAhPT10JiZpc05hTihlKSl7dD1ufHx0O3ZhciBvPWkuZ2V0TGFiZWxzKCkuaW5kZXhPZih0KTtlPS0xIT09bz9vOmV9aWYoaS5pc0hvcml6b250YWwoKSl7dmFyIHM9aS53aWR0aC9yLGw9cyooZS1pLm1pbkluZGV4KTtyZXR1cm4gYSYmKGwrPXMvMiksaS5sZWZ0K01hdGgucm91bmQobCl9dmFyIHU9aS5oZWlnaHQvcixkPXUqKGUtaS5taW5JbmRleCk7cmV0dXJuIGEmJihkKz11LzIpLGkudG9wK01hdGgucm91bmQoZCl9LGdldFBpeGVsRm9yVGljazpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5nZXRQaXhlbEZvclZhbHVlKHRoaXMudGlja3NbdF0sdCt0aGlzLm1pbkluZGV4LG51bGwpfSxnZXRWYWx1ZUZvclBpeGVsOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMub3B0aW9ucy5vZmZzZXQsbj1NYXRoLm1heCh0aGlzLl90aWNrcy5sZW5ndGgtKGU/MDoxKSwxKSxpPXRoaXMuaXNIb3Jpem9udGFsKCksYT0oaT90aGlzLndpZHRoOnRoaXMuaGVpZ2h0KS9uO3JldHVybiB0LT1pP3RoaXMubGVmdDp0aGlzLnRvcCxlJiYodC09YS8yKSwodDw9MD8wOk1hdGgucm91bmQodC9hKSkrdGhpcy5taW5JbmRleH0sZ2V0QmFzZVBpeGVsOmZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYm90dG9tfX0pO2EucmVnaXN0ZXJTY2FsZVR5cGUoXCJjYXRlZ29yeVwiLHQse3Bvc2l0aW9uOlwiYm90dG9tXCJ9KX19LHszMzozMywzNDozNH1dLDU1OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9dCgyNiksaD10KDQ2KSxhPXQoMzQpLHI9dCgzNSk7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciBlPXtwb3NpdGlvbjpcImxlZnRcIix0aWNrczp7Y2FsbGJhY2s6ci5mb3JtYXR0ZXJzLmxpbmVhcn19LG49dC5MaW5lYXJTY2FsZUJhc2UuZXh0ZW5kKHtkZXRlcm1pbmVEYXRhTGltaXRzOmZ1bmN0aW9uKCl7dmFyIG89dGhpcyxzPW8ub3B0aW9ucyxsPW8uY2hhcnQsdD1sLmRhdGEuZGF0YXNldHMsZT1vLmlzSG9yaXpvbnRhbCgpO2Z1bmN0aW9uIHUodCl7cmV0dXJuIGU/dC54QXhpc0lEPT09by5pZDp0LnlBeGlzSUQ9PT1vLmlkfW8ubWluPW51bGwsby5tYXg9bnVsbDt2YXIgaT1zLnN0YWNrZWQ7aWYodm9pZCAwPT09aSYmaC5lYWNoKHQsZnVuY3Rpb24odCxlKXtpZighaSl7dmFyIG49bC5nZXREYXRhc2V0TWV0YShlKTtsLmlzRGF0YXNldFZpc2libGUoZSkmJnUobikmJnZvaWQgMCE9PW4uc3RhY2smJihpPSEwKX19KSxzLnN0YWNrZWR8fGkpe3ZhciBkPXt9O2guZWFjaCh0LGZ1bmN0aW9uKHQsZSl7dmFyIGk9bC5nZXREYXRhc2V0TWV0YShlKSxuPVtpLnR5cGUsdm9pZCAwPT09cy5zdGFja2VkJiZ2b2lkIDA9PT1pLnN0YWNrP2U6XCJcIixpLnN0YWNrXS5qb2luKFwiLlwiKTt2b2lkIDA9PT1kW25dJiYoZFtuXT17cG9zaXRpdmVWYWx1ZXM6W10sbmVnYXRpdmVWYWx1ZXM6W119KTt2YXIgYT1kW25dLnBvc2l0aXZlVmFsdWVzLHI9ZFtuXS5uZWdhdGl2ZVZhbHVlcztsLmlzRGF0YXNldFZpc2libGUoZSkmJnUoaSkmJmguZWFjaCh0LmRhdGEsZnVuY3Rpb24odCxlKXt2YXIgbj0rby5nZXRSaWdodFZhbHVlKHQpO2lzTmFOKG4pfHxpLmRhdGFbZV0uaGlkZGVufHwoYVtlXT1hW2VdfHwwLHJbZV09cltlXXx8MCxzLnJlbGF0aXZlUG9pbnRzP2FbZV09MTAwOm48MD9yW2VdKz1uOmFbZV0rPW4pfSl9KSxoLmVhY2goZCxmdW5jdGlvbih0KXt2YXIgZT10LnBvc2l0aXZlVmFsdWVzLmNvbmNhdCh0Lm5lZ2F0aXZlVmFsdWVzKSxuPWgubWluKGUpLGk9aC5tYXgoZSk7by5taW49bnVsbD09PW8ubWluP246TWF0aC5taW4oby5taW4sbiksby5tYXg9bnVsbD09PW8ubWF4P2k6TWF0aC5tYXgoby5tYXgsaSl9KX1lbHNlIGguZWFjaCh0LGZ1bmN0aW9uKHQsZSl7dmFyIGk9bC5nZXREYXRhc2V0TWV0YShlKTtsLmlzRGF0YXNldFZpc2libGUoZSkmJnUoaSkmJmguZWFjaCh0LmRhdGEsZnVuY3Rpb24odCxlKXt2YXIgbj0rby5nZXRSaWdodFZhbHVlKHQpO2lzTmFOKG4pfHxpLmRhdGFbZV0uaGlkZGVufHwobnVsbD09PW8ubWluP28ubWluPW46bjxvLm1pbiYmKG8ubWluPW4pLG51bGw9PT1vLm1heD9vLm1heD1uOm4+by5tYXgmJihvLm1heD1uKSl9KX0pO28ubWluPWlzRmluaXRlKG8ubWluKSYmIWlzTmFOKG8ubWluKT9vLm1pbjowLG8ubWF4PWlzRmluaXRlKG8ubWF4KSYmIWlzTmFOKG8ubWF4KT9vLm1heDoxLHRoaXMuaGFuZGxlVGlja1JhbmdlT3B0aW9ucygpfSxnZXRUaWNrTGltaXQ6ZnVuY3Rpb24oKXt2YXIgdCxlPXRoaXMub3B0aW9ucy50aWNrcztpZih0aGlzLmlzSG9yaXpvbnRhbCgpKXQ9TWF0aC5taW4oZS5tYXhUaWNrc0xpbWl0P2UubWF4VGlja3NMaW1pdDoxMSxNYXRoLmNlaWwodGhpcy53aWR0aC81MCkpO2Vsc2V7dmFyIG49aC52YWx1ZU9yRGVmYXVsdChlLmZvbnRTaXplLGkuZ2xvYmFsLmRlZmF1bHRGb250U2l6ZSk7dD1NYXRoLm1pbihlLm1heFRpY2tzTGltaXQ/ZS5tYXhUaWNrc0xpbWl0OjExLE1hdGguY2VpbCh0aGlzLmhlaWdodC8oMipuKSkpfXJldHVybiB0fSxoYW5kbGVEaXJlY3Rpb25hbENoYW5nZXM6ZnVuY3Rpb24oKXt0aGlzLmlzSG9yaXpvbnRhbCgpfHx0aGlzLnRpY2tzLnJldmVyc2UoKX0sZ2V0TGFiZWxGb3JJbmRleDpmdW5jdGlvbih0LGUpe3JldHVybit0aGlzLmdldFJpZ2h0VmFsdWUodGhpcy5jaGFydC5kYXRhLmRhdGFzZXRzW2VdLmRhdGFbdF0pfSxnZXRQaXhlbEZvclZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMuc3RhcnQsbj0rdGhpcy5nZXRSaWdodFZhbHVlKHQpLGk9dGhpcy5lbmQtZTtyZXR1cm4gdGhpcy5pc0hvcml6b250YWwoKT90aGlzLmxlZnQrdGhpcy53aWR0aC9pKihuLWUpOnRoaXMuYm90dG9tLXRoaXMuaGVpZ2h0L2kqKG4tZSl9LGdldFZhbHVlRm9yUGl4ZWw6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5pc0hvcml6b250YWwoKSxuPWU/dGhpcy53aWR0aDp0aGlzLmhlaWdodCxpPShlP3QtdGhpcy5sZWZ0OnRoaXMuYm90dG9tLXQpL247cmV0dXJuIHRoaXMuc3RhcnQrKHRoaXMuZW5kLXRoaXMuc3RhcnQpKml9LGdldFBpeGVsRm9yVGljazpmdW5jdGlvbih0KXtyZXR1cm4gdGhpcy5nZXRQaXhlbEZvclZhbHVlKHRoaXMudGlja3NBc051bWJlcnNbdF0pfX0pO2EucmVnaXN0ZXJTY2FsZVR5cGUoXCJsaW5lYXJcIixuLGUpfX0sezI2OjI2LDM0OjM0LDM1OjM1LDQ2OjQ2fV0sNTY6W2Z1bmN0aW9uKHQsZSxuKXtcInVzZSBzdHJpY3RcIjt2YXIgaD10KDQ2KSxpPXQoMzMpO2UuZXhwb3J0cz1mdW5jdGlvbih0KXt2YXIgZT1oLm5vb3A7dC5MaW5lYXJTY2FsZUJhc2U9aS5leHRlbmQoe2dldFJpZ2h0VmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuXCJzdHJpbmdcIj09dHlwZW9mIHQ/K3Q6aS5wcm90b3R5cGUuZ2V0UmlnaHRWYWx1ZS5jYWxsKHRoaXMsdCl9LGhhbmRsZVRpY2tSYW5nZU9wdGlvbnM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5vcHRpb25zLnRpY2tzO2lmKGUuYmVnaW5BdFplcm8pe3ZhciBuPWguc2lnbih0Lm1pbiksaT1oLnNpZ24odC5tYXgpO248MCYmaTwwP3QubWF4PTA6MDxuJiYwPGkmJih0Lm1pbj0wKX12YXIgYT12b2lkIDAhPT1lLm1pbnx8dm9pZCAwIT09ZS5zdWdnZXN0ZWRNaW4scj12b2lkIDAhPT1lLm1heHx8dm9pZCAwIT09ZS5zdWdnZXN0ZWRNYXg7dm9pZCAwIT09ZS5taW4/dC5taW49ZS5taW46dm9pZCAwIT09ZS5zdWdnZXN0ZWRNaW4mJihudWxsPT09dC5taW4/dC5taW49ZS5zdWdnZXN0ZWRNaW46dC5taW49TWF0aC5taW4odC5taW4sZS5zdWdnZXN0ZWRNaW4pKSx2b2lkIDAhPT1lLm1heD90Lm1heD1lLm1heDp2b2lkIDAhPT1lLnN1Z2dlc3RlZE1heCYmKG51bGw9PT10Lm1heD90Lm1heD1lLnN1Z2dlc3RlZE1heDp0Lm1heD1NYXRoLm1heCh0Lm1heCxlLnN1Z2dlc3RlZE1heCkpLGEhPT1yJiZ0Lm1pbj49dC5tYXgmJihhP3QubWF4PXQubWluKzE6dC5taW49dC5tYXgtMSksdC5taW49PT10Lm1heCYmKHQubWF4KyssZS5iZWdpbkF0WmVyb3x8dC5taW4tLSl9LGdldFRpY2tMaW1pdDplLGhhbmRsZURpcmVjdGlvbmFsQ2hhbmdlczplLGJ1aWxkVGlja3M6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5vcHRpb25zLnRpY2tzLG49dC5nZXRUaWNrTGltaXQoKSxpPXttYXhUaWNrczpuPU1hdGgubWF4KDIsbiksbWluOmUubWluLG1heDplLm1heCxwcmVjaXNpb246ZS5wcmVjaXNpb24sc3RlcFNpemU6aC52YWx1ZU9yRGVmYXVsdChlLmZpeGVkU3RlcFNpemUsZS5zdGVwU2l6ZSl9LGE9dC50aWNrcz1mdW5jdGlvbih0LGUpe3ZhciBuLGksYSxyPVtdO2lmKHQuc3RlcFNpemUmJjA8dC5zdGVwU2l6ZSlhPXQuc3RlcFNpemU7ZWxzZXt2YXIgbz1oLm5pY2VOdW0oZS5tYXgtZS5taW4sITEpO2E9aC5uaWNlTnVtKG8vKHQubWF4VGlja3MtMSksITApLHZvaWQgMCE9PShpPXQucHJlY2lzaW9uKSYmKG49TWF0aC5wb3coMTAsaSksYT1NYXRoLmNlaWwoYSpuKS9uKX12YXIgcz1NYXRoLmZsb29yKGUubWluL2EpKmEsbD1NYXRoLmNlaWwoZS5tYXgvYSkqYTtoLmlzTnVsbE9yVW5kZWYodC5taW4pfHxoLmlzTnVsbE9yVW5kZWYodC5tYXgpfHwhdC5zdGVwU2l6ZXx8aC5hbG1vc3RXaG9sZSgodC5tYXgtdC5taW4pL3Quc3RlcFNpemUsYS8xZTMpJiYocz10Lm1pbixsPXQubWF4KTt2YXIgdT0obC1zKS9hO3U9aC5hbG1vc3RFcXVhbHModSxNYXRoLnJvdW5kKHUpLGEvMWUzKT9NYXRoLnJvdW5kKHUpOk1hdGguY2VpbCh1KSxhPChpPTEpJiYoaT1NYXRoLnBvdygxMCwxLU1hdGguZmxvb3IoaC5sb2cxMChhKSkpLHM9TWF0aC5yb3VuZChzKmkpL2ksbD1NYXRoLnJvdW5kKGwqaSkvaSksci5wdXNoKHZvaWQgMCE9PXQubWluP3QubWluOnMpO2Zvcih2YXIgZD0xO2Q8dTsrK2Qpci5wdXNoKE1hdGgucm91bmQoKHMrZCphKSppKS9pKTtyZXR1cm4gci5wdXNoKHZvaWQgMCE9PXQubWF4P3QubWF4OmwpLHJ9KGksdCk7dC5oYW5kbGVEaXJlY3Rpb25hbENoYW5nZXMoKSx0Lm1heD1oLm1heChhKSx0Lm1pbj1oLm1pbihhKSxlLnJldmVyc2U/KGEucmV2ZXJzZSgpLHQuc3RhcnQ9dC5tYXgsdC5lbmQ9dC5taW4pOih0LnN0YXJ0PXQubWluLHQuZW5kPXQubWF4KX0sY29udmVydFRpY2tzVG9MYWJlbHM6ZnVuY3Rpb24oKXt0aGlzLnRpY2tzQXNOdW1iZXJzPXRoaXMudGlja3Muc2xpY2UoKSx0aGlzLnplcm9MaW5lSW5kZXg9dGhpcy50aWNrcy5pbmRleE9mKDApLGkucHJvdG90eXBlLmNvbnZlcnRUaWNrc1RvTGFiZWxzLmNhbGwodGhpcyl9fSl9fSx7MzM6MzMsNDY6NDZ9XSw1NzpbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciBjPXQoNDYpLGk9dCgzMyksYT10KDM0KSxyPXQoMzUpO2UuZXhwb3J0cz1mdW5jdGlvbihoKXt2YXIgdD17cG9zaXRpb246XCJsZWZ0XCIsdGlja3M6e2NhbGxiYWNrOnIuZm9ybWF0dGVycy5sb2dhcml0aG1pY319LGU9aS5leHRlbmQoe2RldGVybWluZURhdGFMaW1pdHM6ZnVuY3Rpb24oKXt2YXIgbz10aGlzLG49by5vcHRpb25zLHM9by5jaGFydCx0PXMuZGF0YS5kYXRhc2V0cyxlPW8uaXNIb3Jpem9udGFsKCk7ZnVuY3Rpb24gbCh0KXtyZXR1cm4gZT90LnhBeGlzSUQ9PT1vLmlkOnQueUF4aXNJRD09PW8uaWR9by5taW49bnVsbCxvLm1heD1udWxsLG8ubWluTm90WmVybz1udWxsO3ZhciBpPW4uc3RhY2tlZDtpZih2b2lkIDA9PT1pJiZjLmVhY2godCxmdW5jdGlvbih0LGUpe2lmKCFpKXt2YXIgbj1zLmdldERhdGFzZXRNZXRhKGUpO3MuaXNEYXRhc2V0VmlzaWJsZShlKSYmbChuKSYmdm9pZCAwIT09bi5zdGFjayYmKGk9ITApfX0pLG4uc3RhY2tlZHx8aSl7dmFyIHU9e307Yy5lYWNoKHQsZnVuY3Rpb24odCxlKXt2YXIgYT1zLmdldERhdGFzZXRNZXRhKGUpLHI9W2EudHlwZSx2b2lkIDA9PT1uLnN0YWNrZWQmJnZvaWQgMD09PWEuc3RhY2s/ZTpcIlwiLGEuc3RhY2tdLmpvaW4oXCIuXCIpO3MuaXNEYXRhc2V0VmlzaWJsZShlKSYmbChhKSYmKHZvaWQgMD09PXVbcl0mJih1W3JdPVtdKSxjLmVhY2godC5kYXRhLGZ1bmN0aW9uKHQsZSl7dmFyIG49dVtyXSxpPStvLmdldFJpZ2h0VmFsdWUodCk7aXNOYU4oaSl8fGEuZGF0YVtlXS5oaWRkZW58fGk8MHx8KG5bZV09bltlXXx8MCxuW2VdKz1pKX0pKX0pLGMuZWFjaCh1LGZ1bmN0aW9uKHQpe2lmKDA8dC5sZW5ndGgpe3ZhciBlPWMubWluKHQpLG49Yy5tYXgodCk7by5taW49bnVsbD09PW8ubWluP2U6TWF0aC5taW4oby5taW4sZSksby5tYXg9bnVsbD09PW8ubWF4P246TWF0aC5tYXgoby5tYXgsbil9fSl9ZWxzZSBjLmVhY2godCxmdW5jdGlvbih0LGUpe3ZhciBpPXMuZ2V0RGF0YXNldE1ldGEoZSk7cy5pc0RhdGFzZXRWaXNpYmxlKGUpJiZsKGkpJiZjLmVhY2godC5kYXRhLGZ1bmN0aW9uKHQsZSl7dmFyIG49K28uZ2V0UmlnaHRWYWx1ZSh0KTtpc05hTihuKXx8aS5kYXRhW2VdLmhpZGRlbnx8bjwwfHwobnVsbD09PW8ubWluP28ubWluPW46bjxvLm1pbiYmKG8ubWluPW4pLG51bGw9PT1vLm1heD9vLm1heD1uOm4+by5tYXgmJihvLm1heD1uKSwwIT09biYmKG51bGw9PT1vLm1pbk5vdFplcm98fG48by5taW5Ob3RaZXJvKSYmKG8ubWluTm90WmVybz1uKSl9KX0pO3RoaXMuaGFuZGxlVGlja1JhbmdlT3B0aW9ucygpfSxoYW5kbGVUaWNrUmFuZ2VPcHRpb25zOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcyxlPXQub3B0aW9ucy50aWNrcyxuPWMudmFsdWVPckRlZmF1bHQ7dC5taW49bihlLm1pbix0Lm1pbiksdC5tYXg9bihlLm1heCx0Lm1heCksdC5taW49PT10Lm1heCYmKDAhPT10Lm1pbiYmbnVsbCE9PXQubWluPyh0Lm1pbj1NYXRoLnBvdygxMCxNYXRoLmZsb29yKGMubG9nMTAodC5taW4pKS0xKSx0Lm1heD1NYXRoLnBvdygxMCxNYXRoLmZsb29yKGMubG9nMTAodC5tYXgpKSsxKSk6KHQubWluPTEsdC5tYXg9MTApKSxudWxsPT09dC5taW4mJih0Lm1pbj1NYXRoLnBvdygxMCxNYXRoLmZsb29yKGMubG9nMTAodC5tYXgpKS0xKSksbnVsbD09PXQubWF4JiYodC5tYXg9MCE9PXQubWluP01hdGgucG93KDEwLE1hdGguZmxvb3IoYy5sb2cxMCh0Lm1pbikpKzEpOjEwKSxudWxsPT09dC5taW5Ob3RaZXJvJiYoMDx0Lm1pbj90Lm1pbk5vdFplcm89dC5taW46dC5tYXg8MT90Lm1pbk5vdFplcm89TWF0aC5wb3coMTAsTWF0aC5mbG9vcihjLmxvZzEwKHQubWF4KSkpOnQubWluTm90WmVybz0xKX0sYnVpbGRUaWNrczpmdW5jdGlvbigpe3ZhciB0PXRoaXMsZT10Lm9wdGlvbnMudGlja3Msbj0hdC5pc0hvcml6b250YWwoKSxpPXttaW46ZS5taW4sbWF4OmUubWF4fSxhPXQudGlja3M9ZnVuY3Rpb24odCxlKXt2YXIgbixpLGE9W10scj1jLnZhbHVlT3JEZWZhdWx0LG89cih0Lm1pbixNYXRoLnBvdygxMCxNYXRoLmZsb29yKGMubG9nMTAoZS5taW4pKSkpLHM9TWF0aC5mbG9vcihjLmxvZzEwKGUubWF4KSksbD1NYXRoLmNlaWwoZS5tYXgvTWF0aC5wb3coMTAscykpOzA9PT1vPyhuPU1hdGguZmxvb3IoYy5sb2cxMChlLm1pbk5vdFplcm8pKSxpPU1hdGguZmxvb3IoZS5taW5Ob3RaZXJvL01hdGgucG93KDEwLG4pKSxhLnB1c2gobyksbz1pKk1hdGgucG93KDEwLG4pKToobj1NYXRoLmZsb29yKGMubG9nMTAobykpLGk9TWF0aC5mbG9vcihvL01hdGgucG93KDEwLG4pKSk7Zm9yKHZhciB1PW48MD9NYXRoLnBvdygxMCxNYXRoLmFicyhuKSk6MTthLnB1c2gobyksMTA9PSsraSYmKGk9MSx1PTA8PSsrbj8xOnUpLG89TWF0aC5yb3VuZChpKk1hdGgucG93KDEwLG4pKnUpL3UsbjxzfHxuPT09cyYmaTxsOyk7dmFyIGQ9cih0Lm1heCxvKTtyZXR1cm4gYS5wdXNoKGQpLGF9KGksdCk7dC5tYXg9Yy5tYXgoYSksdC5taW49Yy5taW4oYSksZS5yZXZlcnNlPyhuPSFuLHQuc3RhcnQ9dC5tYXgsdC5lbmQ9dC5taW4pOih0LnN0YXJ0PXQubWluLHQuZW5kPXQubWF4KSxuJiZhLnJldmVyc2UoKX0sY29udmVydFRpY2tzVG9MYWJlbHM6ZnVuY3Rpb24oKXt0aGlzLnRpY2tWYWx1ZXM9dGhpcy50aWNrcy5zbGljZSgpLGkucHJvdG90eXBlLmNvbnZlcnRUaWNrc1RvTGFiZWxzLmNhbGwodGhpcyl9LGdldExhYmVsRm9ySW5kZXg6ZnVuY3Rpb24odCxlKXtyZXR1cm4rdGhpcy5nZXRSaWdodFZhbHVlKHRoaXMuY2hhcnQuZGF0YS5kYXRhc2V0c1tlXS5kYXRhW3RdKX0sZ2V0UGl4ZWxGb3JUaWNrOmZ1bmN0aW9uKHQpe3JldHVybiB0aGlzLmdldFBpeGVsRm9yVmFsdWUodGhpcy50aWNrVmFsdWVzW3RdKX0sX2dldEZpcnN0VGlja1ZhbHVlOmZ1bmN0aW9uKHQpe3ZhciBlPU1hdGguZmxvb3IoYy5sb2cxMCh0KSk7cmV0dXJuIE1hdGguZmxvb3IodC9NYXRoLnBvdygxMCxlKSkqTWF0aC5wb3coMTAsZSl9LGdldFBpeGVsRm9yVmFsdWU6ZnVuY3Rpb24odCl7dmFyIGUsbixpLGEscixvPXRoaXMscz1vLm9wdGlvbnMudGlja3MucmV2ZXJzZSxsPWMubG9nMTAsdT1vLl9nZXRGaXJzdFRpY2tWYWx1ZShvLm1pbk5vdFplcm8pLGQ9MDtyZXR1cm4gdD0rby5nZXRSaWdodFZhbHVlKHQpLHI9cz8oaT1vLmVuZCxhPW8uc3RhcnQsLTEpOihpPW8uc3RhcnQsYT1vLmVuZCwxKSxuPW8uaXNIb3Jpem9udGFsKCk/KGU9by53aWR0aCxzP28ucmlnaHQ6by5sZWZ0KTooZT1vLmhlaWdodCxyKj0tMSxzP28udG9wOm8uYm90dG9tKSx0IT09aSYmKDA9PT1pJiYoZS09ZD1jLmdldFZhbHVlT3JEZWZhdWx0KG8ub3B0aW9ucy50aWNrcy5mb250U2l6ZSxoLmRlZmF1bHRzLmdsb2JhbC5kZWZhdWx0Rm9udFNpemUpLGk9dSksMCE9PXQmJihkKz1lLyhsKGEpLWwoaSkpKihsKHQpLWwoaSkpKSxuKz1yKmQpLG59LGdldFZhbHVlRm9yUGl4ZWw6ZnVuY3Rpb24odCl7dmFyIGUsbixpLGEscj10aGlzLG89ci5vcHRpb25zLnRpY2tzLnJldmVyc2Uscz1jLmxvZzEwLGw9ci5fZ2V0Rmlyc3RUaWNrVmFsdWUoci5taW5Ob3RaZXJvKTtpZihpPW8/KG49ci5lbmQsci5zdGFydCk6KG49ci5zdGFydCxyLmVuZCksKGE9ci5pc0hvcml6b250YWwoKT8oZT1yLndpZHRoLG8/ci5yaWdodC10OnQtci5sZWZ0KTooZT1yLmhlaWdodCxvP3Qtci50b3A6ci5ib3R0b20tdCkpIT09bil7aWYoMD09PW4pe3ZhciB1PWMuZ2V0VmFsdWVPckRlZmF1bHQoci5vcHRpb25zLnRpY2tzLmZvbnRTaXplLGguZGVmYXVsdHMuZ2xvYmFsLmRlZmF1bHRGb250U2l6ZSk7YS09dSxlLT11LG49bH1hKj1zKGkpLXMobiksYS89ZSxhPU1hdGgucG93KDEwLHMobikrYSl9cmV0dXJuIGF9fSk7YS5yZWdpc3RlclNjYWxlVHlwZShcImxvZ2FyaXRobWljXCIsZSx0KX19LHszMzozMywzNDozNCwzNTozNSw0Njo0Nn1dLDU4OltmdW5jdGlvbih0LGUsbil7XCJ1c2Ugc3RyaWN0XCI7dmFyIGk9dCgyNiksXz10KDQ2KSxhPXQoMzQpLHI9dCgzNSk7ZS5leHBvcnRzPWZ1bmN0aW9uKHQpe3ZhciB2PWkuZ2xvYmFsLGU9e2Rpc3BsYXk6ITAsYW5pbWF0ZTohMCxwb3NpdGlvbjpcImNoYXJ0QXJlYVwiLGFuZ2xlTGluZXM6e2Rpc3BsYXk6ITAsY29sb3I6XCJyZ2JhKDAsIDAsIDAsIDAuMSlcIixsaW5lV2lkdGg6MX0sZ3JpZExpbmVzOntjaXJjdWxhcjohMX0sdGlja3M6e3Nob3dMYWJlbEJhY2tkcm9wOiEwLGJhY2tkcm9wQ29sb3I6XCJyZ2JhKDI1NSwyNTUsMjU1LDAuNzUpXCIsYmFja2Ryb3BQYWRkaW5nWToyLGJhY2tkcm9wUGFkZGluZ1g6MixjYWxsYmFjazpyLmZvcm1hdHRlcnMubGluZWFyfSxwb2ludExhYmVsczp7ZGlzcGxheTohMCxmb250U2l6ZToxMCxjYWxsYmFjazpmdW5jdGlvbih0KXtyZXR1cm4gdH19fTtmdW5jdGlvbiBiKHQpe3ZhciBlPXQub3B0aW9ucztyZXR1cm4gZS5hbmdsZUxpbmVzLmRpc3BsYXl8fGUucG9pbnRMYWJlbHMuZGlzcGxheT90LmNoYXJ0LmRhdGEubGFiZWxzLmxlbmd0aDowfWZ1bmN0aW9uIHkodCl7dmFyIGU9dC5vcHRpb25zLnBvaW50TGFiZWxzLG49Xy52YWx1ZU9yRGVmYXVsdChlLmZvbnRTaXplLHYuZGVmYXVsdEZvbnRTaXplKSxpPV8udmFsdWVPckRlZmF1bHQoZS5mb250U3R5bGUsdi5kZWZhdWx0Rm9udFN0eWxlKSxhPV8udmFsdWVPckRlZmF1bHQoZS5mb250RmFtaWx5LHYuZGVmYXVsdEZvbnRGYW1pbHkpO3JldHVybntzaXplOm4sc3R5bGU6aSxmYW1pbHk6YSxmb250Ol8uZm9udFN0cmluZyhuLGksYSl9fWZ1bmN0aW9uIHAodCxlLG4saSxhKXtyZXR1cm4gdD09PWl8fHQ9PT1hP3tzdGFydDplLW4vMixlbmQ6ZStuLzJ9OnQ8aXx8YTx0P3tzdGFydDplLW4tNSxlbmQ6ZX06e3N0YXJ0OmUsZW5kOmUrbis1fX1mdW5jdGlvbiB4KHQsZSxuLGkpe2lmKF8uaXNBcnJheShlKSlmb3IodmFyIGE9bi55LHI9MS41Kmksbz0wO288ZS5sZW5ndGg7KytvKXQuZmlsbFRleHQoZVtvXSxuLngsYSksYSs9cjtlbHNlIHQuZmlsbFRleHQoZSxuLngsbi55KX1mdW5jdGlvbiBzKHQpe3JldHVybiBfLmlzTnVtYmVyKHQpP3Q6MH12YXIgbj10LkxpbmVhclNjYWxlQmFzZS5leHRlbmQoe3NldERpbWVuc2lvbnM6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLGU9dC5vcHRpb25zLG49ZS50aWNrczt0LndpZHRoPXQubWF4V2lkdGgsdC5oZWlnaHQ9dC5tYXhIZWlnaHQsdC54Q2VudGVyPU1hdGgucm91bmQodC53aWR0aC8yKSx0LnlDZW50ZXI9TWF0aC5yb3VuZCh0LmhlaWdodC8yKTt2YXIgaT1fLm1pbihbdC5oZWlnaHQsdC53aWR0aF0pLGE9Xy52YWx1ZU9yRGVmYXVsdChuLmZvbnRTaXplLHYuZGVmYXVsdEZvbnRTaXplKTt0LmRyYXdpbmdBcmVhPWUuZGlzcGxheT9pLzItKGEvMituLmJhY2tkcm9wUGFkZGluZ1kpOmkvMn0sZGV0ZXJtaW5lRGF0YUxpbWl0czpmdW5jdGlvbigpe3ZhciBhPXRoaXMsbj1hLmNoYXJ0LHI9TnVtYmVyLlBPU0lUSVZFX0lORklOSVRZLG89TnVtYmVyLk5FR0FUSVZFX0lORklOSVRZO18uZWFjaChuLmRhdGEuZGF0YXNldHMsZnVuY3Rpb24odCxlKXtpZihuLmlzRGF0YXNldFZpc2libGUoZSkpe3ZhciBpPW4uZ2V0RGF0YXNldE1ldGEoZSk7Xy5lYWNoKHQuZGF0YSxmdW5jdGlvbih0LGUpe3ZhciBuPSthLmdldFJpZ2h0VmFsdWUodCk7aXNOYU4obil8fGkuZGF0YVtlXS5oaWRkZW58fChyPU1hdGgubWluKG4sciksbz1NYXRoLm1heChuLG8pKX0pfX0pLGEubWluPXI9PT1OdW1iZXIuUE9TSVRJVkVfSU5GSU5JVFk/MDpyLGEubWF4PW89PT1OdW1iZXIuTkVHQVRJVkVfSU5GSU5JVFk/MDpvLGEuaGFuZGxlVGlja1JhbmdlT3B0aW9ucygpfSxnZXRUaWNrTGltaXQ6ZnVuY3Rpb24oKXt2YXIgdD10aGlzLm9wdGlvbnMudGlja3MsZT1fLnZhbHVlT3JEZWZhdWx0KHQuZm9udFNpemUsdi5kZWZhdWx0Rm9udFNpemUpO3JldHVybiBNYXRoLm1pbih0Lm1heFRpY2tzTGltaXQ/dC5tYXhUaWNrc0xpbWl0OjExLE1hdGguY2VpbCh0aGlzLmRyYXdpbmdBcmVhLygxLjUqZSkpKX0sY29udmVydFRpY2tzVG9MYWJlbHM6ZnVuY3Rpb24oKXt0LkxpbmVhclNjYWxlQmFzZS5wcm90b3R5cGUuY29udmVydFRpY2tzVG9MYWJlbHMuY2FsbCh0aGlzKSx0aGlzLnBvaW50TGFiZWxzPXRoaXMuY2hhcnQuZGF0YS5sYWJlbHMubWFwKHRoaXMub3B0aW9ucy5wb2ludExhYmVscy5jYWxsYmFjayx0aGlzKX0sZ2V0TGFiZWxGb3JJbmRleDpmdW5jdGlvbih0LGUpe3JldHVybit0aGlzLmdldFJpZ2h0VmFsdWUodGhpcy5jaGFydC5kYXRhLmRhdGFzZXRzW2VdLmRhdGFbdF0pfSxmaXQ6ZnVuY3Rpb24oKXt2YXIgdCxlO3RoaXMub3B0aW9ucy5wb2ludExhYmVscy5kaXNwbGF5P2Z1bmN0aW9uKHQpe3ZhciBlLG4saSxhPXkodCkscj1NYXRoLm1pbih0LmhlaWdodC8yLHQud2lkdGgvMiksbz17cjp0LndpZHRoLGw6MCx0OnQuaGVpZ2h0LGI6MH0scz17fTt0LmN0eC5mb250PWEuZm9udCx0Ll9wb2ludExhYmVsU2l6ZXM9W107dmFyIGwsdSxkLGg9Yih0KTtmb3IoZT0wO2U8aDtlKyspe2k9dC5nZXRQb2ludFBvc2l0aW9uKGUsciksbD10LmN0eCx1PWEuc2l6ZSxkPXQucG9pbnRMYWJlbHNbZV18fFwiXCIsbj1fLmlzQXJyYXkoZCk/e3c6Xy5sb25nZXN0VGV4dChsLGwuZm9udCxkKSxoOmQubGVuZ3RoKnUrMS41KihkLmxlbmd0aC0xKSp1fTp7dzpsLm1lYXN1cmVUZXh0KGQpLndpZHRoLGg6dX0sdC5fcG9pbnRMYWJlbFNpemVzW2VdPW47dmFyIGM9dC5nZXRJbmRleEFuZ2xlKGUpLGY9Xy50b0RlZ3JlZXMoYyklMzYwLGc9cChmLGkueCxuLncsMCwxODApLG09cChmLGkueSxuLmgsOTAsMjcwKTtnLnN0YXJ0PG8ubCYmKG8ubD1nLnN0YXJ0LHMubD1jKSxnLmVuZD5vLnImJihvLnI9Zy5lbmQscy5yPWMpLG0uc3RhcnQ8by50JiYoby50PW0uc3RhcnQscy50PWMpLG0uZW5kPm8uYiYmKG8uYj1tLmVuZCxzLmI9Yyl9dC5zZXRSZWR1Y3Rpb25zKHIsbyxzKX0odGhpcyk6KHQ9dGhpcyxlPU1hdGgubWluKHQuaGVpZ2h0LzIsdC53aWR0aC8yKSx0LmRyYXdpbmdBcmVhPU1hdGgucm91bmQoZSksdC5zZXRDZW50ZXJQb2ludCgwLDAsMCwwKSl9LHNldFJlZHVjdGlvbnM6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPWUubC9NYXRoLnNpbihuLmwpLGE9TWF0aC5tYXgoZS5yLXRoaXMud2lkdGgsMCkvTWF0aC5zaW4obi5yKSxyPS1lLnQvTWF0aC5jb3Mobi50KSxvPS1NYXRoLm1heChlLmItdGhpcy5oZWlnaHQsMCkvTWF0aC5jb3Mobi5iKTtpPXMoaSksYT1zKGEpLHI9cyhyKSxvPXMobyksdGhpcy5kcmF3aW5nQXJlYT1NYXRoLm1pbihNYXRoLnJvdW5kKHQtKGkrYSkvMiksTWF0aC5yb3VuZCh0LShyK28pLzIpKSx0aGlzLnNldENlbnRlclBvaW50KGksYSxyLG8pfSxzZXRDZW50ZXJQb2ludDpmdW5jdGlvbih0LGUsbixpKXt2YXIgYT10aGlzLHI9YS53aWR0aC1lLWEuZHJhd2luZ0FyZWEsbz10K2EuZHJhd2luZ0FyZWEscz1uK2EuZHJhd2luZ0FyZWEsbD1hLmhlaWdodC1pLWEuZHJhd2luZ0FyZWE7YS54Q2VudGVyPU1hdGgucm91bmQoKG8rcikvMithLmxlZnQpLGEueUNlbnRlcj1NYXRoLnJvdW5kKChzK2wpLzIrYS50b3ApfSxnZXRJbmRleEFuZ2xlOmZ1bmN0aW9uKHQpe3JldHVybiB0KigyKk1hdGguUEkvYih0aGlzKSkrKHRoaXMuY2hhcnQub3B0aW9ucyYmdGhpcy5jaGFydC5vcHRpb25zLnN0YXJ0QW5nbGU/dGhpcy5jaGFydC5vcHRpb25zLnN0YXJ0QW5nbGU6MCkqTWF0aC5QSSoyLzM2MH0sZ2V0RGlzdGFuY2VGcm9tQ2VudGVyRm9yVmFsdWU6ZnVuY3Rpb24odCl7aWYobnVsbD09PXQpcmV0dXJuIDA7dmFyIGU9dGhpcy5kcmF3aW5nQXJlYS8odGhpcy5tYXgtdGhpcy5taW4pO3JldHVybiB0aGlzLm9wdGlvbnMudGlja3MucmV2ZXJzZT8odGhpcy5tYXgtdCkqZToodC10aGlzLm1pbikqZX0sZ2V0UG9pbnRQb3NpdGlvbjpmdW5jdGlvbih0LGUpe3ZhciBuPXRoaXMuZ2V0SW5kZXhBbmdsZSh0KS1NYXRoLlBJLzI7cmV0dXJue3g6TWF0aC5yb3VuZChNYXRoLmNvcyhuKSplKSt0aGlzLnhDZW50ZXIseTpNYXRoLnJvdW5kKE1hdGguc2luKG4pKmUpK3RoaXMueUNlbnRlcn19LGdldFBvaW50UG9zaXRpb25Gb3JWYWx1ZTpmdW5jdGlvbih0LGUpe3JldHVybiB0aGlzLmdldFBvaW50UG9zaXRpb24odCx0aGlzLmdldERpc3RhbmNlRnJvbUNlbnRlckZvclZhbHVlKGUpKX0sZ2V0QmFzZVBvc2l0aW9uOmZ1bmN0aW9uKCl7dmFyIHQ9dGhpcy5taW4sZT10aGlzLm1heDtyZXR1cm4gdGhpcy5nZXRQb2ludFBvc2l0aW9uRm9yVmFsdWUoMCx0aGlzLmJlZ2luQXRaZXJvPzA6dDwwJiZlPDA/ZTowPHQmJjA8ZT90OjApfSxkcmF3OmZ1bmN0aW9uKCl7dmFyIHI9dGhpcyx0PXIub3B0aW9ucyxvPXQuZ3JpZExpbmVzLHM9dC50aWNrcyxsPV8udmFsdWVPckRlZmF1bHQ7aWYodC5kaXNwbGF5KXt2YXIgdT1yLmN0eCxkPXRoaXMuZ2V0SW5kZXhBbmdsZSgwKSxoPWwocy5mb250U2l6ZSx2LmRlZmF1bHRGb250U2l6ZSksZT1sKHMuZm9udFN0eWxlLHYuZGVmYXVsdEZvbnRTdHlsZSksbj1sKHMuZm9udEZhbWlseSx2LmRlZmF1bHRGb250RmFtaWx5KSxjPV8uZm9udFN0cmluZyhoLGUsbik7Xy5lYWNoKHIudGlja3MsZnVuY3Rpb24odCxlKXtpZigwPGV8fHMucmV2ZXJzZSl7dmFyIG49ci5nZXREaXN0YW5jZUZyb21DZW50ZXJGb3JWYWx1ZShyLnRpY2tzQXNOdW1iZXJzW2VdKTtpZihvLmRpc3BsYXkmJjAhPT1lJiZmdW5jdGlvbih0LGUsbixpKXt2YXIgYT10LmN0eDtpZihhLnN0cm9rZVN0eWxlPV8udmFsdWVBdEluZGV4T3JEZWZhdWx0KGUuY29sb3IsaS0xKSxhLmxpbmVXaWR0aD1fLnZhbHVlQXRJbmRleE9yRGVmYXVsdChlLmxpbmVXaWR0aCxpLTEpLHQub3B0aW9ucy5ncmlkTGluZXMuY2lyY3VsYXIpYS5iZWdpblBhdGgoKSxhLmFyYyh0LnhDZW50ZXIsdC55Q2VudGVyLG4sMCwyKk1hdGguUEkpLGEuY2xvc2VQYXRoKCksYS5zdHJva2UoKTtlbHNle3ZhciByPWIodCk7aWYoMD09PXIpcmV0dXJuO2EuYmVnaW5QYXRoKCk7dmFyIG89dC5nZXRQb2ludFBvc2l0aW9uKDAsbik7YS5tb3ZlVG8oby54LG8ueSk7Zm9yKHZhciBzPTE7czxyO3MrKylvPXQuZ2V0UG9pbnRQb3NpdGlvbihzLG4pLGEubGluZVRvKG8ueCxvLnkpO2EuY2xvc2VQYXRoKCksYS5zdHJva2UoKX19KHIsbyxuLGUpLHMuZGlzcGxheSl7dmFyIGk9bChzLmZvbnRDb2xvcix2LmRlZmF1bHRGb250Q29sb3IpO2lmKHUuZm9udD1jLHUuc2F2ZSgpLHUudHJhbnNsYXRlKHIueENlbnRlcixyLnlDZW50ZXIpLHUucm90YXRlKGQpLHMuc2hvd0xhYmVsQmFja2Ryb3Ape3ZhciBhPXUubWVhc3VyZVRleHQodCkud2lkdGg7dS5maWxsU3R5bGU9cy5iYWNrZHJvcENvbG9yLHUuZmlsbFJlY3QoLWEvMi1zLmJhY2tkcm9wUGFkZGluZ1gsLW4taC8yLXMuYmFja2Ryb3BQYWRkaW5nWSxhKzIqcy5iYWNrZHJvcFBhZGRpbmdYLGgrMipzLmJhY2tkcm9wUGFkZGluZ1kpfXUudGV4dEFsaWduPVwiY2VudGVyXCIsdS50ZXh0QmFzZWxpbmU9XCJtaWRkbGVcIix1LmZpbGxTdHlsZT1pLHUuZmlsbFRleHQodCwwLC1uKSx1LnJlc3RvcmUoKX19fSksKHQuYW5nbGVMaW5lcy5kaXNwbGF5fHx0LnBvaW50TGFiZWxzLmRpc3BsYXkpJiZmdW5jdGlvbih0KXt2YXIgZT10LmN0eCxuPXQub3B0aW9ucyxpPW4uYW5nbGVMaW5lcyxhPW4ucG9pbnRMYWJlbHM7ZS5saW5lV2lkdGg9aS5saW5lV2lkdGgsZS5zdHJva2VTdHlsZT1pLmNvbG9yO3ZhciByLG8scyxsLHU9dC5nZXREaXN0YW5jZUZyb21DZW50ZXJGb3JWYWx1ZShuLnRpY2tzLnJldmVyc2U/dC5taW46dC5tYXgpLGQ9eSh0KTtlLnRleHRCYXNlbGluZT1cInRvcFwiO2Zvcih2YXIgaD1iKHQpLTE7MDw9aDtoLS0pe2lmKGkuZGlzcGxheSl7dmFyIGM9dC5nZXRQb2ludFBvc2l0aW9uKGgsdSk7ZS5iZWdpblBhdGgoKSxlLm1vdmVUbyh0LnhDZW50ZXIsdC55Q2VudGVyKSxlLmxpbmVUbyhjLngsYy55KSxlLnN0cm9rZSgpLGUuY2xvc2VQYXRoKCl9aWYoYS5kaXNwbGF5KXt2YXIgZj10LmdldFBvaW50UG9zaXRpb24oaCx1KzUpLGc9Xy52YWx1ZUF0SW5kZXhPckRlZmF1bHQoYS5mb250Q29sb3IsaCx2LmRlZmF1bHRGb250Q29sb3IpO2UuZm9udD1kLmZvbnQsZS5maWxsU3R5bGU9Zzt2YXIgbT10LmdldEluZGV4QW5nbGUoaCkscD1fLnRvRGVncmVlcyhtKTtlLnRleHRBbGlnbj0wPT09KGw9cCl8fDE4MD09PWw/XCJjZW50ZXJcIjpsPDE4MD9cImxlZnRcIjpcInJpZ2h0XCIscj1wLG89dC5fcG9pbnRMYWJlbFNpemVzW2hdLHM9Ziw5MD09PXJ8fDI3MD09PXI/cy55LT1vLmgvMjooMjcwPHJ8fHI8OTApJiYocy55LT1vLmgpLHgoZSx0LnBvaW50TGFiZWxzW2hdfHxcIlwiLGYsZC5zaXplKX19fShyKX19fSk7YS5yZWdpc3RlclNjYWxlVHlwZShcInJhZGlhbExpbmVhclwiLG4sZSl9fSx7MjY6MjYsMzQ6MzQsMzU6MzUsNDY6NDZ9XSw1OTpbZnVuY3Rpb24odCxlLG4pe1widXNlIHN0cmljdFwiO3ZhciB5PXQoNik7eT1cImZ1bmN0aW9uXCI9PXR5cGVvZiB5P3k6d2luZG93Lm1vbWVudDt2YXIgbz10KDI2KSxwPXQoNDYpLGk9dCgzMyksYT10KDM0KSxtPU51bWJlci5NSU5fU0FGRV9JTlRFR0VSfHwtOTAwNzE5OTI1NDc0MDk5MSx2PU51bWJlci5NQVhfU0FGRV9JTlRFR0VSfHw5MDA3MTk5MjU0NzQwOTkxLHg9e21pbGxpc2Vjb25kOntjb21tb246ITAsc2l6ZToxLHN0ZXBzOlsxLDIsNSwxMCwyMCw1MCwxMDAsMjUwLDUwMF19LHNlY29uZDp7Y29tbW9uOiEwLHNpemU6MWUzLHN0ZXBzOlsxLDIsNSwxMCwxNSwzMF19LG1pbnV0ZTp7Y29tbW9uOiEwLHNpemU6NmU0LHN0ZXBzOlsxLDIsNSwxMCwxNSwzMF19LGhvdXI6e2NvbW1vbjohMCxzaXplOjM2ZTUsc3RlcHM6WzEsMiwzLDYsMTJdfSxkYXk6e2NvbW1vbjohMCxzaXplOjg2NGU1LHN0ZXBzOlsxLDIsNV19LHdlZWs6e2NvbW1vbjohMSxzaXplOjYwNDhlNSxzdGVwczpbMSwyLDMsNF19LG1vbnRoOntjb21tb246ITAsc2l6ZToyNjI4ZTYsc3RlcHM6WzEsMiwzXX0scXVhcnRlcjp7Y29tbW9uOiExLHNpemU6Nzg4NGU2LHN0ZXBzOlsxLDIsMyw0XX0seWVhcjp7Y29tbW9uOiEwLHNpemU6MzE1NGU3fX0sXz1PYmplY3Qua2V5cyh4KTtmdW5jdGlvbiBiKHQsZSl7cmV0dXJuIHQtZX1mdW5jdGlvbiBrKHQpe3ZhciBlLG4saSxhPXt9LHI9W107Zm9yKGU9MCxuPXQubGVuZ3RoO2U8bjsrK2UpYVtpPXRbZV1dfHwoYVtpXT0hMCxyLnB1c2goaSkpO3JldHVybiByfWZ1bmN0aW9uIHcodCxlLG4saSl7dmFyIGE9ZnVuY3Rpb24odCxlLG4pe2Zvcih2YXIgaSxhLHIsbz0wLHM9dC5sZW5ndGgtMTswPD1vJiZvPD1zOyl7aWYoYT10WyhpPW8rcz4+MSktMV18fG51bGwscj10W2ldLCFhKXJldHVybntsbzpudWxsLGhpOnJ9O2lmKHJbZV08bilvPWkrMTtlbHNle2lmKCEoYVtlXT5uKSlyZXR1cm57bG86YSxoaTpyfTtzPWktMX19cmV0dXJue2xvOnIsaGk6bnVsbH19KHQsZSxuKSxyPWEubG8/YS5oaT9hLmxvOnRbdC5sZW5ndGgtMl06dFswXSxvPWEubG8/YS5oaT9hLmhpOnRbdC5sZW5ndGgtMV06dFsxXSxzPW9bZV0tcltlXSxsPXM/KG4tcltlXSkvczowLHU9KG9baV0tcltpXSkqbDtyZXR1cm4gcltpXSt1fWZ1bmN0aW9uIE0odCxlKXt2YXIgbj1lLnBhcnNlcixpPWUucGFyc2VyfHxlLmZvcm1hdDtyZXR1cm5cImZ1bmN0aW9uXCI9PXR5cGVvZiBuP24odCk6XCJzdHJpbmdcIj09dHlwZW9mIHQmJlwic3RyaW5nXCI9PXR5cGVvZiBpP3kodCxpKToodCBpbnN0YW5jZW9mIHl8fCh0PXkodCkpLHQuaXNWYWxpZCgpP3Q6XCJmdW5jdGlvblwiPT10eXBlb2YgaT9pKHQpOnQpfWZ1bmN0aW9uIFModCxlKXtpZihwLmlzTnVsbE9yVW5kZWYodCkpcmV0dXJuIG51bGw7dmFyIG49ZS5vcHRpb25zLnRpbWUsaT1NKGUuZ2V0UmlnaHRWYWx1ZSh0KSxuKTtyZXR1cm4gaS5pc1ZhbGlkKCk/KG4ucm91bmQmJmkuc3RhcnRPZihuLnJvdW5kKSxpLnZhbHVlT2YoKSk6bnVsbH1mdW5jdGlvbiBEKHQpe2Zvcih2YXIgZT1fLmluZGV4T2YodCkrMSxuPV8ubGVuZ3RoO2U8bjsrK2UpaWYoeFtfW2VdXS5jb21tb24pcmV0dXJuIF9bZV19ZnVuY3Rpb24gQyh0LGUsbixpKXt2YXIgYSxyPWkudGltZSxvPXIudW5pdHx8ZnVuY3Rpb24odCxlLG4saSl7dmFyIGEscixvLHM9Xy5sZW5ndGg7Zm9yKGE9Xy5pbmRleE9mKHQpO2E8cy0xOysrYSlpZihvPShyPXhbX1thXV0pLnN0ZXBzP3Iuc3RlcHNbci5zdGVwcy5sZW5ndGgtMV06dixyLmNvbW1vbiYmTWF0aC5jZWlsKChuLWUpLyhvKnIuc2l6ZSkpPD1pKXJldHVybiBfW2FdO3JldHVybiBfW3MtMV19KHIubWluVW5pdCx0LGUsbikscz1EKG8pLGw9cC52YWx1ZU9yRGVmYXVsdChyLnN0ZXBTaXplLHIudW5pdFN0ZXBTaXplKSx1PVwid2Vla1wiPT09byYmci5pc29XZWVrZGF5LGQ9aS50aWNrcy5tYWpvci5lbmFibGVkLGg9eFtvXSxjPXkodCksZj15KGUpLGc9W107Zm9yKGx8fChsPWZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBhLHIsbyxzPWUtdCxsPXhbbl0sdT1sLnNpemUsZD1sLnN0ZXBzO2lmKCFkKXJldHVybiBNYXRoLmNlaWwocy8oaSp1KSk7Zm9yKGE9MCxyPWQubGVuZ3RoO2E8ciYmKG89ZFthXSwhKE1hdGguY2VpbChzLyh1Km8pKTw9aSkpOysrYSk7cmV0dXJuIG99KHQsZSxvLG4pKSx1JiYoYz1jLmlzb1dlZWtkYXkodSksZj1mLmlzb1dlZWtkYXkodSkpLGM9Yy5zdGFydE9mKHU/XCJkYXlcIjpvKSwoZj1mLnN0YXJ0T2YodT9cImRheVwiOm8pKTxlJiZmLmFkZCgxLG8pLGE9eShjKSxkJiZzJiYhdSYmIXIucm91bmQmJihhLnN0YXJ0T2YocyksYS5hZGQofn4oKGMtYSkvKGguc2l6ZSpsKSkqbCxvKSk7YTxmO2EuYWRkKGwsbykpZy5wdXNoKCthKTtyZXR1cm4gZy5wdXNoKCthKSxnfWUuZXhwb3J0cz1mdW5jdGlvbigpe3ZhciB0PWkuZXh0ZW5kKHtpbml0aWFsaXplOmZ1bmN0aW9uKCl7aWYoIXkpdGhyb3cgbmV3IEVycm9yKFwiQ2hhcnQuanMgLSBNb21lbnQuanMgY291bGQgbm90IGJlIGZvdW5kISBZb3UgbXVzdCBpbmNsdWRlIGl0IGJlZm9yZSBDaGFydC5qcyB0byB1c2UgdGhlIHRpbWUgc2NhbGUuIERvd25sb2FkIGF0IGh0dHBzOi8vbW9tZW50anMuY29tXCIpO3RoaXMubWVyZ2VUaWNrc09wdGlvbnMoKSxpLnByb3RvdHlwZS5pbml0aWFsaXplLmNhbGwodGhpcyl9LHVwZGF0ZTpmdW5jdGlvbigpe3ZhciB0PXRoaXMub3B0aW9ucztyZXR1cm4gdC50aW1lJiZ0LnRpbWUuZm9ybWF0JiZjb25zb2xlLndhcm4oXCJvcHRpb25zLnRpbWUuZm9ybWF0IGlzIGRlcHJlY2F0ZWQgYW5kIHJlcGxhY2VkIGJ5IG9wdGlvbnMudGltZS5wYXJzZXIuXCIpLGkucHJvdG90eXBlLnVwZGF0ZS5hcHBseSh0aGlzLGFyZ3VtZW50cyl9LGdldFJpZ2h0VmFsdWU6ZnVuY3Rpb24odCl7cmV0dXJuIHQmJnZvaWQgMCE9PXQudCYmKHQ9dC50KSxpLnByb3RvdHlwZS5nZXRSaWdodFZhbHVlLmNhbGwodGhpcyx0KX0sZGV0ZXJtaW5lRGF0YUxpbWl0czpmdW5jdGlvbigpe3ZhciB0LGUsbixpLGEscixvPXRoaXMscz1vLmNoYXJ0LGw9by5vcHRpb25zLnRpbWUsdT1sLnVuaXR8fFwiZGF5XCIsZD12LGg9bSxjPVtdLGY9W10sZz1bXTtmb3IodD0wLG49cy5kYXRhLmxhYmVscy5sZW5ndGg7dDxuOysrdClnLnB1c2goUyhzLmRhdGEubGFiZWxzW3RdLG8pKTtmb3IodD0wLG49KHMuZGF0YS5kYXRhc2V0c3x8W10pLmxlbmd0aDt0PG47Kyt0KWlmKHMuaXNEYXRhc2V0VmlzaWJsZSh0KSlpZihhPXMuZGF0YS5kYXRhc2V0c1t0XS5kYXRhLHAuaXNPYmplY3QoYVswXSkpZm9yKGZbdF09W10sZT0wLGk9YS5sZW5ndGg7ZTxpOysrZSlyPVMoYVtlXSxvKSxjLnB1c2gociksZlt0XVtlXT1yO2Vsc2UgYy5wdXNoLmFwcGx5KGMsZyksZlt0XT1nLnNsaWNlKDApO2Vsc2UgZlt0XT1bXTtnLmxlbmd0aCYmKGc9ayhnKS5zb3J0KGIpLGQ9TWF0aC5taW4oZCxnWzBdKSxoPU1hdGgubWF4KGgsZ1tnLmxlbmd0aC0xXSkpLGMubGVuZ3RoJiYoYz1rKGMpLnNvcnQoYiksZD1NYXRoLm1pbihkLGNbMF0pLGg9TWF0aC5tYXgoaCxjW2MubGVuZ3RoLTFdKSksZD1TKGwubWluLG8pfHxkLGg9UyhsLm1heCxvKXx8aCxkPWQ9PT12Pyt5KCkuc3RhcnRPZih1KTpkLGg9aD09PW0/K3koKS5lbmRPZih1KSsxOmgsby5taW49TWF0aC5taW4oZCxoKSxvLm1heD1NYXRoLm1heChkKzEsaCksby5faG9yaXpvbnRhbD1vLmlzSG9yaXpvbnRhbCgpLG8uX3RhYmxlPVtdLG8uX3RpbWVzdGFtcHM9e2RhdGE6YyxkYXRhc2V0czpmLGxhYmVsczpnfX0sYnVpbGRUaWNrczpmdW5jdGlvbigpe3ZhciB0LGUsbixpLGEscixvLHMsbCx1LGQsaCxjPXRoaXMsZj1jLm1pbixnPWMubWF4LG09Yy5vcHRpb25zLHA9bS50aW1lLHY9W10sYj1bXTtzd2l0Y2gobS50aWNrcy5zb3VyY2Upe2Nhc2VcImRhdGFcIjp2PWMuX3RpbWVzdGFtcHMuZGF0YTticmVhaztjYXNlXCJsYWJlbHNcIjp2PWMuX3RpbWVzdGFtcHMubGFiZWxzO2JyZWFrO2Nhc2VcImF1dG9cIjpkZWZhdWx0OnY9QyhmLGcsYy5nZXRMYWJlbENhcGFjaXR5KGYpLG0pfWZvcihcInRpY2tzXCI9PT1tLmJvdW5kcyYmdi5sZW5ndGgmJihmPXZbMF0sZz12W3YubGVuZ3RoLTFdKSxmPVMocC5taW4sYyl8fGYsZz1TKHAubWF4LGMpfHxnLHQ9MCxlPXYubGVuZ3RoO3Q8ZTsrK3QpZjw9KG49dlt0XSkmJm48PWcmJmIucHVzaChuKTtyZXR1cm4gYy5taW49ZixjLm1heD1nLGMuX3VuaXQ9cC51bml0fHxmdW5jdGlvbih0LGUsbixpKXt2YXIgYSxyLG89eS5kdXJhdGlvbih5KGkpLmRpZmYoeShuKSkpO2ZvcihhPV8ubGVuZ3RoLTE7YT49Xy5pbmRleE9mKGUpO2EtLSlpZihyPV9bYV0seFtyXS5jb21tb24mJm8uYXMocik+PXQubGVuZ3RoKXJldHVybiByO3JldHVybiBfW2U/Xy5pbmRleE9mKGUpOjBdfShiLHAubWluVW5pdCxjLm1pbixjLm1heCksYy5fbWFqb3JVbml0PUQoYy5fdW5pdCksYy5fdGFibGU9ZnVuY3Rpb24odCxlLG4saSl7aWYoXCJsaW5lYXJcIj09PWl8fCF0Lmxlbmd0aClyZXR1cm5be3RpbWU6ZSxwb3M6MH0se3RpbWU6bixwb3M6MX1dO3ZhciBhLHIsbyxzLGwsdT1bXSxkPVtlXTtmb3IoYT0wLHI9dC5sZW5ndGg7YTxyOysrYSllPChzPXRbYV0pJiZzPG4mJmQucHVzaChzKTtmb3IoZC5wdXNoKG4pLGE9MCxyPWQubGVuZ3RoO2E8cjsrK2EpbD1kW2ErMV0sbz1kW2EtMV0scz1kW2FdLHZvaWQgMCE9PW8mJnZvaWQgMCE9PWwmJk1hdGgucm91bmQoKGwrbykvMik9PT1zfHx1LnB1c2goe3RpbWU6cyxwb3M6YS8oci0xKX0pO3JldHVybiB1fShjLl90aW1lc3RhbXBzLmRhdGEsZixnLG0uZGlzdHJpYnV0aW9uKSxjLl9vZmZzZXRzPShpPWMuX3RhYmxlLGE9YixyPWYsbz1nLGg9ZD0wLChzPW0pLm9mZnNldCYmYS5sZW5ndGgmJihzLnRpbWUubWlufHwobD0xPGEubGVuZ3RoP2FbMV06byx1PWFbMF0sZD0odyhpLFwidGltZVwiLGwsXCJwb3NcIiktdyhpLFwidGltZVwiLHUsXCJwb3NcIikpLzIpLHMudGltZS5tYXh8fChsPWFbYS5sZW5ndGgtMV0sdT0xPGEubGVuZ3RoP2FbYS5sZW5ndGgtMl06cixoPSh3KGksXCJ0aW1lXCIsbCxcInBvc1wiKS13KGksXCJ0aW1lXCIsdSxcInBvc1wiKSkvMikpLHtsZWZ0OmQscmlnaHQ6aH0pLGMuX2xhYmVsRm9ybWF0PWZ1bmN0aW9uKHQsZSl7dmFyIG4saSxhLHI9dC5sZW5ndGg7Zm9yKG49MDtuPHI7bisrKXtpZigwIT09KGk9TSh0W25dLGUpKS5taWxsaXNlY29uZCgpKXJldHVyblwiTU1NIEQsIFlZWVkgaDptbTpzcy5TU1MgYVwiOzA9PT1pLnNlY29uZCgpJiYwPT09aS5taW51dGUoKSYmMD09PWkuaG91cigpfHwoYT0hMCl9cmV0dXJuIGE/XCJNTU0gRCwgWVlZWSBoOm1tOnNzIGFcIjpcIk1NTSBELCBZWVlZXCJ9KGMuX3RpbWVzdGFtcHMuZGF0YSxwKSxmdW5jdGlvbih0LGUpe3ZhciBuLGksYSxyLG89W107Zm9yKG49MCxpPXQubGVuZ3RoO248aTsrK24pYT10W25dLHI9ISFlJiZhPT09K3koYSkuc3RhcnRPZihlKSxvLnB1c2goe3ZhbHVlOmEsbWFqb3I6cn0pO3JldHVybiBvfShiLGMuX21ham9yVW5pdCl9LGdldExhYmVsRm9ySW5kZXg6ZnVuY3Rpb24odCxlKXt2YXIgbj10aGlzLmNoYXJ0LmRhdGEsaT10aGlzLm9wdGlvbnMudGltZSxhPW4ubGFiZWxzJiZ0PG4ubGFiZWxzLmxlbmd0aD9uLmxhYmVsc1t0XTpcIlwiLHI9bi5kYXRhc2V0c1tlXS5kYXRhW3RdO3JldHVybiBwLmlzT2JqZWN0KHIpJiYoYT10aGlzLmdldFJpZ2h0VmFsdWUocikpLGkudG9vbHRpcEZvcm1hdD9NKGEsaSkuZm9ybWF0KGkudG9vbHRpcEZvcm1hdCk6XCJzdHJpbmdcIj09dHlwZW9mIGE/YTpNKGEsaSkuZm9ybWF0KHRoaXMuX2xhYmVsRm9ybWF0KX0sdGlja0Zvcm1hdEZ1bmN0aW9uOmZ1bmN0aW9uKHQsZSxuLGkpe3ZhciBhPXRoaXMub3B0aW9ucyxyPXQudmFsdWVPZigpLG89YS50aW1lLmRpc3BsYXlGb3JtYXRzLHM9b1t0aGlzLl91bml0XSxsPXRoaXMuX21ham9yVW5pdCx1PW9bbF0sZD10LmNsb25lKCkuc3RhcnRPZihsKS52YWx1ZU9mKCksaD1hLnRpY2tzLm1ham9yLGM9aC5lbmFibGVkJiZsJiZ1JiZyPT09ZCxmPXQuZm9ybWF0KGl8fChjP3U6cykpLGc9Yz9oOmEudGlja3MubWlub3IsbT1wLnZhbHVlT3JEZWZhdWx0KGcuY2FsbGJhY2ssZy51c2VyQ2FsbGJhY2spO3JldHVybiBtP20oZixlLG4pOmZ9LGNvbnZlcnRUaWNrc1RvTGFiZWxzOmZ1bmN0aW9uKHQpe3ZhciBlLG4saT1bXTtmb3IoZT0wLG49dC5sZW5ndGg7ZTxuOysrZSlpLnB1c2godGhpcy50aWNrRm9ybWF0RnVuY3Rpb24oeSh0W2VdLnZhbHVlKSxlLHQpKTtyZXR1cm4gaX0sZ2V0UGl4ZWxGb3JPZmZzZXQ6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcyxuPWUuX2hvcml6b250YWw/ZS53aWR0aDplLmhlaWdodCxpPWUuX2hvcml6b250YWw/ZS5sZWZ0OmUudG9wLGE9dyhlLl90YWJsZSxcInRpbWVcIix0LFwicG9zXCIpO3JldHVybiBpK24qKGUuX29mZnNldHMubGVmdCthKS8oZS5fb2Zmc2V0cy5sZWZ0KzErZS5fb2Zmc2V0cy5yaWdodCl9LGdldFBpeGVsRm9yVmFsdWU6ZnVuY3Rpb24odCxlLG4pe3ZhciBpPW51bGw7aWYodm9pZCAwIT09ZSYmdm9pZCAwIT09biYmKGk9dGhpcy5fdGltZXN0YW1wcy5kYXRhc2V0c1tuXVtlXSksbnVsbD09PWkmJihpPVModCx0aGlzKSksbnVsbCE9PWkpcmV0dXJuIHRoaXMuZ2V0UGl4ZWxGb3JPZmZzZXQoaSl9LGdldFBpeGVsRm9yVGljazpmdW5jdGlvbih0KXt2YXIgZT10aGlzLmdldFRpY2tzKCk7cmV0dXJuIDA8PXQmJnQ8ZS5sZW5ndGg/dGhpcy5nZXRQaXhlbEZvck9mZnNldChlW3RdLnZhbHVlKTpudWxsfSxnZXRWYWx1ZUZvclBpeGVsOmZ1bmN0aW9uKHQpe3ZhciBlPXRoaXMsbj1lLl9ob3Jpem9udGFsP2Uud2lkdGg6ZS5oZWlnaHQsaT1lLl9ob3Jpem9udGFsP2UubGVmdDplLnRvcCxhPShuPyh0LWkpL246MCkqKGUuX29mZnNldHMubGVmdCsxK2UuX29mZnNldHMubGVmdCktZS5fb2Zmc2V0cy5yaWdodCxyPXcoZS5fdGFibGUsXCJwb3NcIixhLFwidGltZVwiKTtyZXR1cm4geShyKX0sZ2V0TGFiZWxXaWR0aDpmdW5jdGlvbih0KXt2YXIgZT10aGlzLm9wdGlvbnMudGlja3Msbj10aGlzLmN0eC5tZWFzdXJlVGV4dCh0KS53aWR0aCxpPXAudG9SYWRpYW5zKGUubWF4Um90YXRpb24pLGE9TWF0aC5jb3MoaSkscj1NYXRoLnNpbihpKTtyZXR1cm4gbiphK3AudmFsdWVPckRlZmF1bHQoZS5mb250U2l6ZSxvLmdsb2JhbC5kZWZhdWx0Rm9udFNpemUpKnJ9LGdldExhYmVsQ2FwYWNpdHk6ZnVuY3Rpb24odCl7dmFyIGU9dGhpcy5vcHRpb25zLnRpbWUuZGlzcGxheUZvcm1hdHMubWlsbGlzZWNvbmQsbj10aGlzLnRpY2tGb3JtYXRGdW5jdGlvbih5KHQpLDAsW10sZSksaT10aGlzLmdldExhYmVsV2lkdGgobiksYT10aGlzLmlzSG9yaXpvbnRhbCgpP3RoaXMud2lkdGg6dGhpcy5oZWlnaHQscj1NYXRoLmZsb29yKGEvaSk7cmV0dXJuIDA8cj9yOjF9fSk7YS5yZWdpc3RlclNjYWxlVHlwZShcInRpbWVcIix0LHtwb3NpdGlvbjpcImJvdHRvbVwiLGRpc3RyaWJ1dGlvbjpcImxpbmVhclwiLGJvdW5kczpcImRhdGFcIix0aW1lOntwYXJzZXI6ITEsZm9ybWF0OiExLHVuaXQ6ITEscm91bmQ6ITEsZGlzcGxheUZvcm1hdDohMSxpc29XZWVrZGF5OiExLG1pblVuaXQ6XCJtaWxsaXNlY29uZFwiLGRpc3BsYXlGb3JtYXRzOnttaWxsaXNlY29uZDpcImg6bW06c3MuU1NTIGFcIixzZWNvbmQ6XCJoOm1tOnNzIGFcIixtaW51dGU6XCJoOm1tIGFcIixob3VyOlwiaEFcIixkYXk6XCJNTU0gRFwiLHdlZWs6XCJsbFwiLG1vbnRoOlwiTU1NIFlZWVlcIixxdWFydGVyOlwiW1FdUSAtIFlZWVlcIix5ZWFyOlwiWVlZWVwifX0sdGlja3M6e2F1dG9Ta2lwOiExLHNvdXJjZTpcImF1dG9cIixtYWpvcjp7ZW5hYmxlZDohMX19fSl9fSx7MjY6MjYsMzM6MzMsMzQ6MzQsNDY6NDYsNjo2fV19LHt9LFs3XSkoNyl9KTtcblxuXG4vKlxuICogQ3VzdG9tXG4gKi9cbi8qXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcbiAgICAgICAgJChcImhlYWRcIikuYXBwZW5kKFwiPGxpbmsgcmVsPSdzdHlsZXNoZWV0JyB0eXBlPSd0ZXh0L2NzcycgaHJlZj0nLi4vY3NzL21haW4uY3NzJyAvPlwiKTtcbiAgICB9KTtcbiovXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCcuc3dpdGNoZXInLGZ1bmN0aW9uKCl7XG59KTtcblxuJChkb2N1bWVudCkub24oJ2NsaWNrJywnLnN3aXRjaGVyX3NlcnZpY2UnLGZ1bmN0aW9uKCl7XG4gICQoJy5zd2l0Y2hlcl9zZXJ2aWNlJykucmVtb3ZlQ2xhc3MoJ3N3aXRjaGVyX2FjdGl2ZScpO1xuICAkKHRoaXMpLnRvZ2dsZUNsYXNzKCdzd2l0Y2hlcl9hY3RpdmUnKTtcbiAgJCgnLnN3aXRjaGVyX3NlcnZpY2UnKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS5yZW1vdmVDbGFzcygnc2VydmljZXMtaXRlbV9hY3RpdmUnKTtcbiAgJCh0aGlzKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS50b2dnbGVDbGFzcygnc2VydmljZXMtaXRlbV9hY3RpdmUnKTtcbn0pO1xuXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCcuc3dpdGNoZXJfZXh0cmEtc2VydmljZScsZnVuY3Rpb24oKXtcbiAgJCh0aGlzKS50b2dnbGVDbGFzcygnc3dpdGNoZXJfYWN0aXZlJyk7XG5cbiAgJCh0aGlzKS5wYXJlbnQoKS5wYXJlbnQoKS5wYXJlbnQoKS50b2dnbGVDbGFzcygnc2VydmljZXMtaXRlbV9hY3RpdmUnKTtcbn0pO1xuXG5cblxuXG4vKlxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXtcbiAgaWYoJChkb2N1bWVudCkuZmluZCgnI2luZGV4JykubGVuZ3RoIT0wKSB7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbigpe1xuICAgICAgJCgnLmluZGV4LWhlYWRpbmdfX2ltZycpLmZhZGVJbigpO1xuICAgIH0sJzEwMDAnKTtcbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCl7XG4gICAgICAkKCcubmF2X19pdGVtLWxpbmstdGV4dCcpLmZhZGVJbigpO1xuICAgIH0sJzAnKTtcblxuICB9XG59KTtcbiovXG5cblxuXG5cbmZ1bmN0aW9uIHBvcHVwY2xpY2tmdW5jdGlvbigpIHtcbiAgICAgICAgaWYoJCgnLmNvbnRlbnQnKS5oYXNDbGFzcygnY29udGVudF9maXhlZCcpKSB7XG4gICAgICAgICAgcmV0dXJuIGZhbHNlXG4gICAgICAgIH1cblxuICAgICAgICAkKCcuY2xvc2UtcG9wLXVwLWInKS5zbGlkZURvd24oKTtcblxuXG4gICAgICAgIHRvcHNjcm9sbHBvcHVwID0gJChkb2N1bWVudCkuc2Nyb2xsVG9wKCk7XG5cbiAgICAgICAgJCgnLmNvbnRlbnQnKS5hZGRDbGFzcygnY29udGVudF9maXhlZCcpO1xuICAgICAgICAkKCcuY29udGVudCcpLmNzcygndG9wJywgLXRvcHNjcm9sbHBvcHVwKTtcblxuICAgICAgICAkKCdib2R5Jykuc2Nyb2xsVG9wKDApO1xuXG4gICAgICAgICQoJy5jb250ZW50LWhvdmVyJykuZmFkZUluKCk7XG5cblxufVxuXG5mdW5jdGlvbiBwb3B1cGNsaWNrY2xvc2VmdW5jdGlvbigpIHtcbiAgaWYoJCgnLmNvbnRlbnQnKS5oYXNDbGFzcygnY29udGVudF9maXhlZCcpKSB7XG4gIH1lbHNlIHtcbiAgICByZXR1cm4gZmFsc2VcbiAgfVxuXG4gICQoJy5jbG9zZS1wb3AtdXAtYicpLnNsaWRlVXAoKTtcblxuICAkKCcubmF2JykucmVtb3ZlQ2xhc3MoJ25hdl9vcGVuJyk7XG4gICQoICcuY29udGVudCcgKS5yZW1vdmVDbGFzcyggXCJjb250ZW50X25vXCIgKTtcbiAgJCgnLm5hdl9faXRlbS1saW5rLXRleHQnKS5mYWRlT3V0KCk7XG5cbiAgICAkKCcucG9wdXBzJykuY2hpbGRyZW4oKS5mYWRlT3V0KCk7XG5cbiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICAkKCcuY29udGVudCcpLnJlbW92ZUNsYXNzKCdjb250ZW50X2ZpeGVkJyk7XG4gICAgICAgICQoJy5jb250ZW50JykuY3NzKCd0b3AnLCAnMCcpO1xuICAgICAgICAkKGRvY3VtZW50KS5zY3JvbGxUb3AodG9wc2Nyb2xscG9wdXApO1xuICAgICAgICAkKCcuY29udGVudC1ob3ZlcicpLmZhZGVPdXQoKTtcblxuICAgIH0sIDUwMCk7XG5cblxuXG59XG5cbmZ1bmN0aW9uIHNob3dNZW51KCl7XG5cbiAgJCgnLm5hdicpLmFkZENsYXNzKCduYXZfb3BlbicpO1xuICAkKCAnLmNvbnRlbnQnICkuYWRkQ2xhc3MoIFwiY29udGVudF9ub1wiICk7XG4gICQoJy5uYXZfX2l0ZW0tbGluay10ZXh0JykuZmFkZUluKCk7XG5cbiAgcG9wdXBjbGlja2Z1bmN0aW9uKCk7XG59XG5cbi8qXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCcubmF2JyxmdW5jdGlvbigpIHtcblxuICAgIHNob3dNZW51KClcbiAgfVxuKTtcbiovXG5cbi8qXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCcubmF2LW1vYmlsZV9fbG9nbycsZnVuY3Rpb24oKXtcbiAgc2hvd01lbnUoKTtcbn0pO1xuKi9cblxuJChkb2N1bWVudCkub24oJ2NsaWNrJywnLmNvbnRlbnQtaG92ZXInLGZ1bmN0aW9uKCl7XG4gIHBvcHVwY2xpY2tjbG9zZWZ1bmN0aW9uKClcbn0pO1xuXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCcuY2xvc2UtcG9wLXVwLWInLGZ1bmN0aW9uKCl7XG4gIHBvcHVwY2xpY2tjbG9zZWZ1bmN0aW9uKClcbn0pO1xuXG5cblxuXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCcjaW5mbycsZnVuY3Rpb24oKSB7XG5wb3B1cGNsaWNrZnVuY3Rpb24oKTtcbiQoJy5pbmZvJykuZmFkZUluKCk7XG59KTtcblxuZnVuY3Rpb24gb3BlblF1ZXN0aW9uKCl7XG4gIHBvcHVwY2xpY2tmdW5jdGlvbigpO1xuICAkKCcjcXVlc3Rpb25zJykuZmFkZUluKCk7XG59XG5cbmZ1bmN0aW9uIG9wZW5PcmRlcigpe1xuICBwb3B1cGNsaWNrZnVuY3Rpb24oKTtcbiAgJCgnI3F1ZXN0aW9ucycpLmZhZGVJbigpO1xufVxuXG4vKiDQn9C+0LTRgdC60LDQt9C60LgqL1xuXG4vKlxuJChmdW5jdGlvbigpe1xuICQoJ2EnKS5ob3ZlcihmdW5jdGlvbigpe1xuICAgdmFyIGhyZWYgPSAkKHRoaXMpLmF0dHIoJ2xpbmstZGF0YScpO1xuICAgJCgnLmhvdmVyLWluZm8tZGVza3RvcCcpLmVtcHR5KCkuYXBwZW5kKCc8aSBjbGFzcz1cImZhIGZhLWV4dGVybmFsLWxpbmtcIiBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+ICcraHJlZik7XG4gIH0sXG4gIGZ1bmN0aW9uKCl7XG4gICAgdmFyIGhyZWYgPSAkKHRoaXMpLmF0dHIoJ2xpbmstZGF0YScpO1xuICAgICQoJy5ob3Zlci1pbmZvLWRlc2t0b3AnKS50ZXh0KCcnKTtcbiAgfSk7XG59KTtcbiovXG5cbiQoZG9jdW1lbnQpLm9uKCdtb3VzZW92ZXInLCdhJyxmdW5jdGlvbigpe1xuXG59KTtcblxuJChkb2N1bWVudCkub24oJ2NsaWNrJywnLmluZGV4LWhlYWRpbmdfX2FkdmVudGFnZXMtY2xpY2snLGZ1bmN0aW9uKCl7XG4gIGlmKCQoJy5pbmRleC1oZWFkaW5nX19hZHZlbnRhZ2VzLWJvZHlfYWN0aXZlJykubmV4dCgpLmhhc0NsYXNzKCdpbmRleC1oZWFkaW5nX19hZHZlbnRhZ2VzLWNsaWNrJykpe1xuICAgICQoJy5pbmRleC1oZWFkaW5nX19hZHZlbnRhZ2VzLWJvZHknKS5yZW1vdmVDbGFzcygnaW5kZXgtaGVhZGluZ19fYWR2ZW50YWdlcy1ib2R5X2FjdGl2ZScpO1xuICAgICQoJy5pbmRleC1oZWFkaW5nX19hZHZlbnRhZ2VzLWJvZHknKS5maXJzdCgpLmFkZENsYXNzKCdpbmRleC1oZWFkaW5nX19hZHZlbnRhZ2VzLWJvZHlfYWN0aXZlJyk7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG4gICQoJy5pbmRleC1oZWFkaW5nX19hZHZlbnRhZ2VzLWJvZHlfYWN0aXZlJykucmVtb3ZlQ2xhc3MoJ2luZGV4LWhlYWRpbmdfX2FkdmVudGFnZXMtYm9keV9hY3RpdmUnKS5uZXh0KCkuYWRkQ2xhc3MoJ2luZGV4LWhlYWRpbmdfX2FkdmVudGFnZXMtYm9keV9hY3RpdmUnKTtcbn0pO1xuXG5cbihmdW5jdGlvbih3aW5kb3cpe1xuICB2YXIgZG90ID0gZnVuY3Rpb24oZywgeCwgeSkge1xuICAgIHJldHVybiBnWzBdKnggKyBnWzFdKnk7XG4gIH07XG5cbiAgdmFyIGdyYWQzID0gW1sxLDEsMF0sWy0xLDEsMF0sWzEsLTEsMF0sWy0xLC0xLDBdLFxuICAgICAgICAgICAgICAgIFsxLDAsMV0sWy0xLDAsMV0sWzEsMCwtMV0sWy0xLDAsLTFdLFxuICAgICAgICAgICAgICAgIFswLDEsMV0sWzAsLTEsMV0sWzAsMSwtMV0sWzAsLTEsLTFdXTtcbiAgdmFyIHAgPSBbXTtcbiAgZm9yICh2YXIgaT0wOyBpPDI1NjsgaSsrKSB7XG4gICAgcFtpXSA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSoyNTYpO1xuICB9XG5cbiAgLy8gVG8gcmVtb3ZlIHRoZSBuZWVkIGZvciBpbmRleCB3cmFwcGluZywgZG91YmxlIHRoZSBwZXJtdXRhdGlvbiB0YWJsZSBsZW5ndGhcbiAgdmFyIHBlcm0gPSBbXTtcbiAgZm9yKHZhciBpPTA7IGk8NTEyOyBpKyspIHtcbiAgICBwZXJtW2ldPXBbaSAmIDI1NV07XG4gIH1cblxuICAvLyBPcmlnaW9uYWxseSBmcm9tIFN0ZWZhbiBHdXN0YXZzb24ncyBqYXZhIGltcGxlbWVudGF0aW9uIG9mIHNpbXBsZXggbm9pc2U6XG4gIC8vIGh0dHA6Ly9zdGFmZnd3dy5pdG4ubGl1LnNlL35zdGVndS9zaW1wbGV4bm9pc2Uvc2ltcGxleG5vaXNlLnBkZlxuICAvLyBBZGFwdGVkIGZvciB0aGlzIGV4cGVyaW1lbnQgZnJvbSBTZWFuIE1jQ3VsbG91Z2gncyBKYXZhU2NyaXB0IHBvcnQ6XG4gIC8vIGh0dHBzOi8vZ2lzdC5naXRodWIuY29tL2JhbmtzZWFuLzMwNDUyMlxuXG5cbiAgd2luZG93Lm5vaXNlID0gZnVuY3Rpb24oeGluLCB5aW4pIHtcbiAgICB2YXIgbjAsIG4xLCBuMjsgLy8gTm9pc2UgY29udHJpYnV0aW9ucyBmcm9tIHRoZSB0aHJlZSBjb3JuZXJzXG4gICAgLy8gU2tldyB0aGUgaW5wdXQgc3BhY2UgdG8gZGV0ZXJtaW5lIHdoaWNoIHNpbXBsZXggY2VsbCB3ZSdyZSBpblxuICAgIHZhciBGMiA9IDAuNSooTWF0aC5zcXJ0KDMuMCktMS4wKTtcbiAgICB2YXIgcyA9ICh4aW4reWluKSpGMjsgLy8gSGFpcnkgZmFjdG9yIGZvciAyRFxuICAgIHZhciBpID0gTWF0aC5mbG9vcih4aW4rcyk7XG4gICAgdmFyIGogPSBNYXRoLmZsb29yKHlpbitzKTtcbiAgICB2YXIgRzIgPSAoMy4wLU1hdGguc3FydCgzLjApKS82LjA7XG4gICAgdmFyIHQgPSAoaStqKSpHMjtcbiAgICB2YXIgWDAgPSBpLXQ7IC8vIFVuc2tldyB0aGUgY2VsbCBvcmlnaW4gYmFjayB0byAoeCx5KSBzcGFjZVxuICAgIHZhciBZMCA9IGotdDtcbiAgICB2YXIgeDAgPSB4aW4tWDA7IC8vIFRoZSB4LHkgZGlzdGFuY2VzIGZyb20gdGhlIGNlbGwgb3JpZ2luXG4gICAgdmFyIHkwID0geWluLVkwO1xuICAgIC8vIEZvciB0aGUgMkQgY2FzZSwgdGhlIHNpbXBsZXggc2hhcGUgaXMgYW4gZXF1aWxhdGVyYWwgdHJpYW5nbGUuXG4gICAgLy8gRGV0ZXJtaW5lIHdoaWNoIHNpbXBsZXggd2UgYXJlIGluLlxuICAgIHZhciBpMSwgajE7IC8vIE9mZnNldHMgZm9yIHNlY29uZCAobWlkZGxlKSBjb3JuZXIgb2Ygc2ltcGxleCBpbiAoaSxqKSBjb29yZHNcbiAgICBpZih4MD55MCkge2kxPTE7IGoxPTA7fSAvLyBsb3dlciB0cmlhbmdsZSwgWFkgb3JkZXI6ICgwLDApLT4oMSwwKS0+KDEsMSlcbiAgICBlbHNlIHtpMT0wOyBqMT0xO30gICAgICAvLyB1cHBlciB0cmlhbmdsZSwgWVggb3JkZXI6ICgwLDApLT4oMCwxKS0+KDEsMSlcbiAgICAvLyBBIHN0ZXAgb2YgKDEsMCkgaW4gKGksaikgbWVhbnMgYSBzdGVwIG9mICgxLWMsLWMpIGluICh4LHkpLCBhbmRcbiAgICAvLyBhIHN0ZXAgb2YgKDAsMSkgaW4gKGksaikgbWVhbnMgYSBzdGVwIG9mICgtYywxLWMpIGluICh4LHkpLCB3aGVyZVxuICAgIC8vIGMgPSAoMy1zcXJ0KDMpKS82XG4gICAgdmFyIHgxID0geDAgLSBpMSArIEcyOyAvLyBPZmZzZXRzIGZvciBtaWRkbGUgY29ybmVyIGluICh4LHkpIHVuc2tld2VkIGNvb3Jkc1xuICAgIHZhciB5MSA9IHkwIC0gajEgKyBHMjtcbiAgICB2YXIgeDIgPSB4MCAtIDEuMCArIDIuMCAqIEcyOyAvLyBPZmZzZXRzIGZvciBsYXN0IGNvcm5lciBpbiAoeCx5KSB1bnNrZXdlZCBjb29yZHNcbiAgICB2YXIgeTIgPSB5MCAtIDEuMCArIDIuMCAqIEcyO1xuICAgIC8vIFdvcmsgb3V0IHRoZSBoYXNoZWQgZ3JhZGllbnQgaW5kaWNlcyBvZiB0aGUgdGhyZWUgc2ltcGxleCBjb3JuZXJzXG4gICAgdmFyIGlpID0gaSAmIDI1NTtcbiAgICB2YXIgamogPSBqICYgMjU1O1xuICAgIHZhciBnaTAgPSBwZXJtW2lpK3Blcm1bampdXSAlIDEyO1xuICAgIHZhciBnaTEgPSBwZXJtW2lpK2kxK3Blcm1bamorajFdXSAlIDEyO1xuICAgIHZhciBnaTIgPSBwZXJtW2lpKzErcGVybVtqaisxXV0gJSAxMjtcbiAgICAvLyBDYWxjdWxhdGUgdGhlIGNvbnRyaWJ1dGlvbiBmcm9tIHRoZSB0aHJlZSBjb3JuZXJzXG4gICAgdmFyIHQwID0gMC41IC0geDAqeDAteTAqeTA7XG4gICAgaWYodDA8MCkgbjAgPSAwLjA7XG4gICAgZWxzZSB7XG4gICAgICB0MCAqPSB0MDtcbiAgICAgIG4wID0gdDAgKiB0MCAqIGRvdChncmFkM1tnaTBdLCB4MCwgeTApOyAgLy8gKHgseSkgb2YgZ3JhZDMgdXNlZCBmb3IgMkQgZ3JhZGllbnRcbiAgICB9XG4gICAgdmFyIHQxID0gMC41IC0geDEqeDEteTEqeTE7XG4gICAgaWYodDE8MCkgbjEgPSAwLjA7XG4gICAgZWxzZSB7XG4gICAgICB0MSAqPSB0MTtcbiAgICAgIG4xID0gdDEgKiB0MSAqIGRvdChncmFkM1tnaTFdLCB4MSwgeTEpO1xuICAgIH1cbiAgICB2YXIgdDIgPSAwLjUgLSB4Mip4Mi15Mip5MjtcbiAgICBpZih0MjwwKSBuMiA9IDAuMDtcbiAgICBlbHNlIHtcbiAgICAgIHQyICo9IHQyO1xuICAgICAgbjIgPSB0MiAqIHQyICogZG90KGdyYWQzW2dpMl0sIHgyLCB5Mik7XG4gICAgfVxuICAgIC8vIEFkZCBjb250cmlidXRpb25zIGZyb20gZWFjaCBjb3JuZXIgdG8gZ2V0IHRoZSBmaW5hbCBub2lzZSB2YWx1ZS5cbiAgICAvLyBUaGUgcmVzdWx0IGlzIHNjYWxlZCB0byByZXR1cm4gdmFsdWVzIGluIHRoZSBpbnRlcnZhbCBbLTEsMV0uXG4gICAgcmV0dXJuIDcwLjAgKiAobjAgKyBuMSArIG4yKTtcbiAgfTtcbn0pKHRoaXMpO1xuXG5cbiQoZG9jdW1lbnQpLnJlYWR5KGZ1bmN0aW9uKCl7XG5cblxufSk7XG4vL0FKQVggUEFHRVNcblxudmFyIHBhZ2VzID0ge1xuICBpbmRleHBhZ2U6WycvaW5kZXguaHRtbCcsJy8nXSxcbiAgc2VydmljZXM6Jy9zZXJ2aWNlcy5odG1sJyxcbiAgc2VydmljZXNwYWdlczpbJy9zZXJ2aWNlcy1sYW5kaW5nLXBhZ2UuaHRtbCcsJy9zZXJ2aWNlcy1lLXNob3AuaHRtbCcsJy9zZXJ2aWNlcy12aXNpdC1jYXJkLXNpdGUuaHRtbCcsJy9zZXJ2aWNlcy1jb3Jwb3JhdGl2ZS1zaXRlLmh0bWwnLCcvc2VydmljZXMtc3VwcG9ydC5odG1sJ10sXG4gIGNvbnRleHRhZHZwYWdlOiAnL3NlcnZpY2VzLWNvbnRleHQuaHRtbCcsXG4gIGFkdnBhZ2U6ICcvc2VydmljZXMtYWR2ZXJ0aXNpbmcuaHRtbCdcbn1cblxuZnVuY3Rpb24gY2hlY2thamF4cGFnZSgpe1xuXG4gIGlmKCFhcmd1bWVudHMpe1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHZhciBjaGVjayA9IGZhbHNlO1xuXG4gIGZ1bmN0aW9uIGNoZWNrSXQocGFnZW5hbWVpdGVtc2tleSl7XG5cbiAgICAvLyBDSEVDSyBPQkpFQ1RcblxuICAgIGlmKHR5cGVvZihwYWdlbmFtZWl0ZW1za2V5KT09J3N0cmluZycpe1xuICAgICAgaWYod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lPT1wYWdlbmFtZWl0ZW1za2V5KXtcbiAgICAgIGNoZWNrID0gdHJ1ZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZih0eXBlb2YocGFnZW5hbWVpdGVtc2tleSk9PSdvYmplY3QnfHx0eXBlb2YocGFnZW5hbWVpdGVtc2tleSk9PSdhcnJheScpe1xuICAgICAgZm9yKGkgPSAwO2k8cGFnZW5hbWVpdGVtc2tleS5sZW5ndGg7aSsrKXtcbiAgICAgICAgaWYod2luZG93LmxvY2F0aW9uLnBhdGhuYW1lPT1wYWdlbmFtZWl0ZW1za2V5W2ldKXtcbiAgICAgICAgY2hlY2sgPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gIH07XG5cbiAgLy9DSEVDSyBQQVJBTUVURVJTXG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGNoZWNrSXQoYXJndW1lbnRzW2ldKTtcbiAgICAgIGlmKGNoZWNrPT10cnVlKXtcbiAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICB9XG4gIH1cblxuICByZXR1cm4gZmFsc2U7XG59XG5cblxuZnVuY3Rpb24gZnVsbHBhZ2Vsb2FkKCl7XG5cbiAgLy8gQkxBQ0sgUEFHRSBBTkQgSEVJR0hUIDEwMCVcblxuICBpZihjaGVja2FqYXhwYWdlKHBhZ2VzLmluZGV4cGFnZSkpIHtcbiAgICAkKCcuY29udGVudC1hamF4LXdyYXBwZXInKS5jc3MoJ2hlaWdodCcsJzEwMCUnKTtcbiAgIC8vICQoJ2hlYWQnKS5hcHBlbmQoJChcIjxsaW5rIHJlbD0nc3R5bGVzaGVldCcgY2xhc3M9J2ltYmxhY2snIGhyZWY9J2Nzcy9ibGFjay5jc3MnIHR5cGU9J3RleHQvY3NzJyAvPlwiKSk7XG4gIH0gZWxzZSB7XG4gICAgJCgnLmNvbnRlbnQtYWpheC13cmFwcGVyJykuY3NzKCdoZWlnaHQnLCdhdXRvJyk7XG4gICAvLyAkKCcuaW1ibGFjaycpLnJlbW92ZSgpO1xuICB9XG5cbiAgLy8gT1dMIFNFUlZJQ0VTXG5cbiAgaWYoY2hlY2thamF4cGFnZShwYWdlcy5zZXJ2aWNlcykpIHtcbiAgICAkKCcucm93X3NlcnZpY2VzJykub3dsQ2Fyb3VzZWwoe1xuXG4gICAgICBtYXJnaW46MCxcbiAgICAgIHJlc3BvbnNpdmVDbGFzczp0cnVlLFxuICAgICAgcmVzcG9uc2l2ZTp7XG4gICAgICAgICAgMDp7XG4gICAgICAgICAgICAgIGl0ZW1zOjEsXG4gICAgICAgICAgICAgIG5hdjp0cnVlLFxuICAgICAgICAgICAgICBsb29wOnRydWVcbiAgICAgICAgICB9LFxuICAgICAgICAgIDc2ODp7XG4gICAgICAgICAgICAgIGl0ZW1zOjMsXG4gICAgICAgICAgICAgIG5hdjpmYWxzZSxcbiAgICAgICAgICAgICAgbG9vcDpmYWxzZVxuICAgICAgICAgIH1cbiAgICAgIH1cbiAgICB9KVxuICB9XG5cbiAgLy/QmNC90YTQvtCz0YDQsNGE0LjQutC4XG5cbiAgaWYoY2hlY2thamF4cGFnZShwYWdlcy5jb250ZXh0YWR2cGFnZSkpIHtcbiAgICAgICAgICAgICB2YXIgY3R4ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJjaGFydFwiKS5nZXRDb250ZXh0KCcyZCcpO1xuICAgICAgICAgICAgICAgICAgIHZhciBteUNoYXJ0ID0gbmV3IENoYXJ0KGN0eCwge1xuICAgICAgICAgICAgICAgICAgdHlwZTogJ2RvdWdobnV0JyxcbiAgICAgICAgICAgICAgICAgIGRhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgICBsYWJlbHM6IFtcIllhbmRleFwiLCBcIkdvb2dsZVwiXSxcbiAgICAgICAgICAgICAgICAgICAgICBkYXRhc2V0czogW3tcbiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogWzYwLDQwXSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICcjMzMzJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYm9yZGVyV2lkdGg6ICc2JyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnIzI3QUU2MCcsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAnI0VCNTc1NydcbiAgICAgICAgICAgICAgICAgICAgICAgICAgXVxuICAgICAgICAgICAgICAgICAgICAgIH1dLFxuXG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgICAgICAgICAgICB0aXRsZToge1xuICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IHRydWVcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcblxuICB9XG5cbiAgICBpZihjaGVja2FqYXhwYWdlKHBhZ2VzLmFkdnBhZ2UpKSB7XG4gICAgICAgICAgICAgdmFyIGN0eCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwiY2hhcnRcIikuZ2V0Q29udGV4dCgnMmQnKTtcbiAgICAgICAgICAgICAgICAgICB2YXIgbXlDaGFydCA9IG5ldyBDaGFydChjdHgsIHtcbiAgICAgICAgICAgICAgICAgIHR5cGU6ICdkb3VnaG51dCcsXG4gICAgICAgICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgICAgICAgbGFiZWxzOiBbXCJDb250ZXh0dWFsIGFkc1wiLCBcIkJsb2dzIGFuZCBWbG9ncyBhZHNcIiwgXCJDUEEgTmV0d29ya3NcIiwgXCJTb2NpYWwgbmV0d29ya3NcIl0sXG4gICAgICAgICAgICAgICAgICAgICAgZGF0YXNldHM6IFt7XG4gICAgICAgICAgICAgICAgICAgICAgICAgIGRhdGE6IFs1MCwgMTAsIDE4LCAxNV0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlckNvbG9yOiAnIzMzMycsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGJvcmRlcldpZHRoOiAnNicsXG4gICAgICAgICAgICAgICAgICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyMyN0FFNjAnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyNFQjU3NTcnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyNGMkM5NEMnLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgJyMyRDlDREInLFxuICAgICAgICAgICAgICAgICAgICAgICAgICBdXG4gICAgICAgICAgICAgICAgICAgICAgfV0sXG5cbiAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgICAgICAgICAgIHRpdGxlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSxcbiAgICAgICAgICAgICAgICAgICAgICBib3JkZXJDb2xvcjogW1xuICAgICAgICAgICAgICAgICAgICAgICAgICAncmdiYSgyNTUsOTksMTMyLDEpJyxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgJ3JnYmEoNTQsIDE2MiwgMjM1LCAxKScsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICdyZ2JhKDI1NSwgMjA2LCA4NiwgMSknLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAncmdiYSg3NSwgMTkyLCAxOTIsIDEpJ1xuICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KTtcbiAgfVxuXG5cblxuICAvL0NBTlZBUyBPTiBJTkRFWFBBR0Vcbi8qXG5cbiAgaWYoY2hlY2thamF4cGFnZShwYWdlcy5pbmRleHBhZ2UpKSB7XG4gICAgdmFyIGNhbnZhcyA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYW52YXMtbWFpbicpLFxuICAgIGN0eCA9IGNhbnZhcy5nZXRDb250ZXh0KCcyZCcpLFxuICAgIGZwcyA9IDIwLFxuICAgIGZvdiA9IDIwMCxcbiAgICB3YXZlSGVpZ2h0ID0gMjAsXG4gICAgY29scyA9IDE1LFxuICAgIHJvd3MgPSAxNSxcbiAgICBvZmZzZXRYID0gMCxcbiAgICBvZmZzZXRZID0gMCxcbiAgICBpbmMgPSAwLjAxLFxuICAgIG1lc2ggPSBbXTtcblxuICBmdW5jdGlvbiByZXNpemVDYW52YXMoKSB7XG4gICAgY2FudmFzLndpZHRoID0gd2luZG93LmlubmVyV2lkdGg7XG4gICAgY2FudmFzLmhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodFxuICB9XG5cbiAgZnVuY3Rpb24gZ2VuZXJhdGVNZXNoKCl7XG5cbiAgICBtZXNoPVtdO1xuICAgIHZhciBncmlkV2lkdGggPSAoY2FudmFzLndpZHRoKS9jb2xzO1xuICAgIHZhciBncmlkSGVpZ2h0ID0gKGNhbnZhcy5oZWlnaHQpL3Jvd3M7XG4gICAgdmFyIGdyaWREZXB0aCA9IGZvdi9yb3dzO1xuXG4gICAgZm9yKHZhciBjb2w9MDsgY29sIDwgY29sczsgY29sKyspe1xuICAgICAgZm9yKHZhciByb3c9MDsgcm93IDwgcm93czsgcm93Kyspe1xuICAgICAgICBtZXNoLnB1c2goW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIHg6IGNvbCAqIGdyaWRXaWR0aCxcbiAgICAgICAgICAgIHk6IHJvdyAqIGdyaWRIZWlnaHQrZ3JpZEhlaWdodCxcbiAgICAgICAgICAgIHo6IGZvdiAtIChyb3cgKiBncmlkRGVwdGgrZ3JpZERlcHRoKSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHg6IGNvbCAqIGdyaWRXaWR0aCxcbiAgICAgICAgICAgIHk6IHJvdyAqIGdyaWRIZWlnaHQsXG4gICAgICAgICAgICB6OiBmb3YgLSAocm93ICogZ3JpZERlcHRoKSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHg6IGNvbCAqIGdyaWRXaWR0aCtncmlkV2lkdGgsXG4gICAgICAgICAgICB5OiByb3cgKiBncmlkSGVpZ2h0LFxuICAgICAgICAgICAgejogZm92IC0gKHJvdyAqIGdyaWREZXB0aClcbiAgICAgICAgICB9XG4gICAgICAgIF0pO1xuICAgICAgICAvLyBSZWZsZXh0XG4gICAgICAgIG1lc2gucHVzaChbXG4gICAgICAgICAge1xuICAgICAgICAgICAgeDogY29sICogZ3JpZFdpZHRoK2dyaWRXaWR0aCxcbiAgICAgICAgICAgIHk6IHJvdyAqIGdyaWRIZWlnaHQsXG4gICAgICAgICAgICB6OiBmb3YgLSAocm93ICogZ3JpZERlcHRoKVxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgeDogY29sICogZ3JpZFdpZHRoK2dyaWRXaWR0aCxcbiAgICAgICAgICAgIHk6IHJvdyAqIGdyaWRIZWlnaHQrZ3JpZEhlaWdodCxcbiAgICAgICAgICAgIHo6IGZvdiAtIChyb3cgKiBncmlkRGVwdGgrZ3JpZERlcHRoKSxcbiAgICAgICAgICB9LFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIHg6IGNvbCAqIGdyaWRXaWR0aCxcbiAgICAgICAgICAgIHk6IHJvdyAqIGdyaWRIZWlnaHQrZ3JpZEhlaWdodCxcbiAgICAgICAgICAgIHo6IGZvdiAtIChyb3cgKiBncmlkRGVwdGgrZ3JpZERlcHRoKSxcbiAgICAgICAgICB9XG4gICAgICAgIF0pO1xuICAgICAgfVxuICAgIH1cblxuICB9XG5cbmZ1bmN0aW9uIGRyYXdNZXNoKCl7XG5cbiAgY3R4LnN0cm9rZVN0eWxlID0gJ3N0ZWVsYmx1ZSc7XG4gIGN0eC5maWxsU3R5bGUgPSAncmdiYSgxNTAsMjAwLDIyMCwwLjIpJztcbiAgY3R4LmNsZWFyUmVjdCgwLCAwLCBjYW52YXMud2lkdGgsIGNhbnZhcy5oZWlnaHQpO1xuXG4gIGZvcih2YXIgbT0wOyBtIDwgbWVzaC5sZW5ndGg7IG0rKyl7XG4gICAgdmFyIHBvbHkgPSBtZXNoW21dO1xuICAgIGN0eC5iZWdpblBhdGgoKTtcbiAgICBjdHgubW92ZVRvKHBvbHlbMF0ueCwgcG9seVswXS55KTtcbiAgICBmb3IodmFyIHA9MDsgcCA8IHBvbHkubGVuZ3RoOyBwKyspe1xuICAgICAgY3R4LmxpbmVUbyhwb2x5W3BdLngsIHBvbHlbcF0ueSk7XG4gICAgfVxuICAgIGN0eC5jbG9zZVBhdGgoKTtcbiAgICBjdHguc3Ryb2tlKCk7XG4gICAgLy9jdHguZmlsbCgpOyAvLyBUaGlzIHJlYWxseSBpbXBhY3RzIHBlcmZvcm1hbmNlXG4gIH1cbn1cblxuZnVuY3Rpb24gYWRkTm9pc2Uob2Zmc2V0WCxvZmZzZXRZKXtcbiAgLy8gWW91IGNvdWxkIGRvIGFsbCBzb3J0cyBvZiB0aGluZ3MgdG8gY2F1c2UgZGlmZmVyZW50IG1vdGlvblxuICBmb3IodmFyIG09MDsgbSA8IG1lc2gubGVuZ3RoOyBtKyspe1xuICAgIHZhciBwb2x5ID0gbWVzaFttXTtcbiAgICBmb3IodmFyIHA9MDsgcCA8IHBvbHkubGVuZ3RoOyBwKyspe1xuICAgICAgcG9seVtwXS55ID0gcG9seVtwXS55ICsgKHdhdmVIZWlnaHQgKiBub2lzZSgocG9seVtwXS54LzUwKStvZmZzZXRYLChwb2x5W3BdLnkvNTApK29mZnNldFkpICk7XG4gICAgfVxuICB9XG5cbn1cblxuLy8gSGVscGVyIGZ1bnRpb24gZm9yIHByb2plY3Rpb25cbmZ1bmN0aW9uIGNsaXAoeCx3KXtcbiAgcmV0dXJuIHgtdy8yO1xufVxuXG4vLyBUaWhzIGlzIGEgbGl0dGxlIGNydWRlXG5mdW5jdGlvbiBwcm9qZWN0TWVzaCgpe1xuICBmb3IodmFyIG09MDsgbSA8IG1lc2gubGVuZ3RoOyBtKyspe1xuICAgIHZhciBwb2x5ID0gbWVzaFttXTtcbiAgICBmb3IodmFyIHA9MDsgcCA8IHBvbHkubGVuZ3RoOyBwKyspe1xuICAgICAgdmFyIHNjYWxlID0gZm92Lyhmb3YrcG9seVtwXS56KTtcbiAgICAgIHBvbHlbcF0ueCA9IGNsaXAocG9seVtwXS54LCBjYW52YXMud2lkdGgpICogc2NhbGUgKyBjYW52YXMud2lkdGgvMjtcbiAgICAgIHBvbHlbcF0ueSA9IGNsaXAocG9seVtwXS55LCBjYW52YXMuaGVpZ2h0KSAqIHNjYWxlICsgY2FudmFzLmhlaWdodC8zO1xuXG4gICAgfVxuICB9XG5cbn1cblxuZnVuY3Rpb24gZHJhdygpIHtcblxuICAvLyBUb0RvOiBpbmMgc2hvdWxkIG5vdCBiZSB0aWVkIHRvIGZyYW1lcmF0ZVxuICBvZmZzZXRYICs9IGluYztcbiAgb2Zmc2V0WSAtPSBpbmM7XG5cbiAgZ2VuZXJhdGVNZXNoKCk7IC8vIFRvRG86IFByb2JhYmx5IGRvbid0IG5lZWQgdG8gZG8gdGhpcyBldmVyeSBmcmFtZVxuICBhZGROb2lzZShvZmZzZXRYLG9mZnNldFkpO1xuICBwcm9qZWN0TWVzaCgpO1xuICBkcmF3TWVzaCgpO1xuXG59XG5cbi8vIEluaXRpYWxpc2UgYW5kIHNldCBmcmFtZSByYXRlLlxuKGZ1bmN0aW9uKCl7XG4gIHZhciBub3c7XG4gIHZhciB0aGVuID0gRGF0ZS5ub3coKTtcbiAgdmFyIGludGVydmFsID0gMTAwMC9mcHM7XG4gIHZhciBkZWx0YTtcbiAgZnVuY3Rpb24gdGljaygpIHtcblxuICAgICAgbm93ID0gRGF0ZS5ub3coKTtcbiAgICAgIGRlbHRhID0gbm93IC0gdGhlbjtcblxuICAgICAgaWYgKGRlbHRhID4gaW50ZXJ2YWwpIHtcbiAgICAgICAgICB0aGVuID0gbm93IC0gKGRlbHRhICUgaW50ZXJ2YWwpO1xuICAgICAgICAgIGRyYXcoKTtcbiAgICAgIH1cbiAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZSh0aWNrKTtcbiAgfVxuICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigncmVzaXplJywgcmVzaXplQ2FudmFzLCBmYWxzZSk7XG4gIHJlc2l6ZUNhbnZhcygpO1xuICB0aWNrKCk7XG59KSgpO1xuICB9XG5cbiovXG5cblxufVxuXG5cblxuXG5cblxuXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpIHtcblxuXG4gIGZ1bGxwYWdlbG9hZCgpO1xuXG4gIGlmKCQoZG9jdW1lbnQpLmZpbmQoJyNpbmRleCcpLmxlbmd0aCE9MCkge1xuICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcbiAgICAgICQoJyNpbmRleCcpLmZhZGVJbigpO1xuICAgIH0sJzEwMDAnKTtcbiAgfVxuXG5cblxuICB2YXIgcG9wcGVkID0gKCdzdGF0ZScgaW4gd2luZG93Lmhpc3RvcnkgJiYgd2luZG93Lmhpc3Rvcnkuc3RhdGUgIT09IG51bGwpLCBpbml0aWFsVVJMID0gbG9jYXRpb24uaHJlZjtcbiAgdmFyIGNvbnRlbnQgPSAkKCcuY29udGVudC1hamF4LXdyYXBwZXInKTtcblxuICBmdW5jdGlvbiBvcGVuVVJMKGhyZWYpe1xuICAgICAgICAgIHBvcHVwY2xpY2tjbG9zZWZ1bmN0aW9uKCk7XG5cbiAgICAgICAgICB2YXIgbGluayA9IGhyZWY7ICAvLyQodGhpcykuYXR0cignaHJlZicpO1xuXG4gICAgICAgICAgJCgnLmNvbnRlbnQtYWpheC13cmFwcGVyJykubG9hZChsaW5rKyBcIiAuY29udGVudC1hamF4XCIgLCBmdW5jdGlvbihkYXRhKXtcbiAgICAgICAgICAgIGZ1bGxwYWdlbG9hZCgpO1xuICAgICAgICAgICAgaWYoJChkb2N1bWVudCkuZmluZCgnI2luZGV4JykubGVuZ3RoIT0wKSB7XG4gICAgICAgICAgICAgICQoJyNpbmRleCcpLmZhZGVJbigpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgd2luZG93LnNjcm9sbEJ5KDAsLTk5OTk5KTtcblxuICAgICAgICAgICAgZG9jdW1lbnQudGl0bGUgPSBkYXRhLnNwbGl0KCc8dGl0bGU+JylbMV0uc3BsaXQoJzwvdGl0bGUnKVswXTtcbiAgICAgICAgICB9KTtcblxuXG5cbiAgfVxuXG4gICAkKGRvY3VtZW50KS5vbignY2xpY2snLCAnYScsIGZ1bmN0aW9uICgpIHtcblxuICAgICB2YXIgaHJlZiA9ICQodGhpcykuYXR0cihcImhyZWZcIik7XG5cbiAgICAgaGlzdG9yeS5wdXNoU3RhdGUoe3BhZ2U6aHJlZn0sICdMb2FkaW5nLi4uJywgaHJlZik7XG5cbiAgICAgZG9jdW1lbnQudGl0bGUgPSAnTG9hZGluZy4uLic7XG4gICAgIG9wZW5VUkwoaHJlZik7XG4gICAgIHJldHVybiBmYWxzZTsgLy9pbnRlcmNlcHQgdGhlIGxpbmtcblxuICAgfSk7XG5cbiAgICQod2luZG93KS5iaW5kKCdwb3BzdGF0ZScsIGZ1bmN0aW9uKGV2ZW50KXtcblxuICAgICAgIC8vIElnbm9yZSBpbml0YWwgcG9wc3RhdGUgdGhhdCBzb21lIGJyb3dzZXJzIGZpcmUgb24gcGFnZSBsb2FkXG4gICAgICAgdmFyIGluaXRpYWxQb3AgPSAhcG9wcGVkICYmIGxvY2F0aW9uLmhyZWYgPT0gaW5pdGlhbFVSTDtcbiAgICAgICBwb3BwZWQgPSB0cnVlO1xuICAgICAgIGlmIChpbml0aWFsUG9wKSByZXR1cm47XG5cbiAgICAgICBjb25zb2xlLmxvZygnUG9wc3RhdGUnKTtcblxuICAgICAgIC8vIEJ5IHRoZSB0aW1lIHBvcHN0YXRlIGhhcyBmaXJlZCwgbG9jYXRpb24ucGF0aG5hbWUgaGFzIGJlZW4gY2hhbmdlZFxuICAgICAgIG9wZW5VUkwobG9jYXRpb24ucGF0aG5hbWUpO1xuXG4gICB9KTtcbn0pO1xuLyoqXG4gKiBAbmFtZSAgICBTaHVmZmxlIExldHRlcnNcbiAqIEBhdXRob3IgICAgTWFydGluIEFuZ2Vsb3ZcbiAqIEB2ZXJzaW9uICAgMS4wXG4gKiBAdXJsICAgICBodHRwOi8vdHV0b3JpYWx6aW5lLmNvbS8yMDExLzA5L3NodWZmbGUtbGV0dGVycy1lZmZlY3QtanF1ZXJ5L1xuICogQGxpY2Vuc2UgICBNSVQgTGljZW5zZVxuICovXG5cbihmdW5jdGlvbigkKXtcblxuICAkLmZuLnNodWZmbGVMZXR0ZXJzID0gZnVuY3Rpb24ocHJvcCl7XG5cbiAgICB2YXIgb3B0aW9ucyA9ICQuZXh0ZW5kKHtcbiAgICAgICdzdGVwJyAgICA6IDgsICAgICAgLy8gSG93IG1hbnkgdGltZXMgc2hvdWxkIHRoZSBsZXR0ZXJzIGJlIGNoYW5nZWRcbiAgICAgICdmcHMnICAgOiAyNSwgICAgIC8vIEZyYW1lcyBQZXIgU2Vjb25kXG4gICAgICAndGV4dCcgICAgOiAnJywgICAgICAgLy8gVXNlIHRoaXMgdGV4dCBpbnN0ZWFkIG9mIHRoZSBjb250ZW50c1xuICAgICAgJ2NhbGxiYWNrJyAgOiBmdW5jdGlvbigpe30gIC8vIFJ1biBvbmNlIHRoZSBhbmltYXRpb24gaXMgY29tcGxldGVcbiAgICB9LHByb3ApXG5cbiAgICByZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7XG5cbiAgICAgIHZhciBlbCA9ICQodGhpcyksXG4gICAgICAgIHN0ciA9ICcnO1xuXG5cbiAgICAgIC8vIFByZXZlbnRpbmcgcGFyYWxsZWwgYW5pbWF0aW9ucyB1c2luZyBhIGZsYWc7XG5cbiAgICAgIGlmKGVsLmRhdGEoJ2FuaW1hdGVkJykpe1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgIH1cblxuICAgICAgZWwuZGF0YSgnYW5pbWF0ZWQnLHRydWUpO1xuXG5cbiAgICAgIGlmKG9wdGlvbnMudGV4dCkge1xuICAgICAgICBzdHIgPSBvcHRpb25zLnRleHQuc3BsaXQoJycpO1xuICAgICAgfVxuICAgICAgZWxzZSB7XG4gICAgICAgIHN0ciA9IGVsLnRleHQoKS5zcGxpdCgnJyk7XG4gICAgICB9XG5cbiAgICAgIC8vIFRoZSB0eXBlcyBhcnJheSBob2xkcyB0aGUgdHlwZSBmb3IgZWFjaCBjaGFyYWN0ZXI7XG4gICAgICAvLyBMZXR0ZXJzIGhvbGRzIHRoZSBwb3NpdGlvbnMgb2Ygbm9uLXNwYWNlIGNoYXJhY3RlcnM7XG5cbiAgICAgIHZhciB0eXBlcyA9IFtdLFxuICAgICAgICBsZXR0ZXJzID0gW107XG5cbiAgICAgIC8vIExvb3BpbmcgdGhyb3VnaCBhbGwgdGhlIGNoYXJzIG9mIHRoZSBzdHJpbmdcblxuICAgICAgZm9yKHZhciBpPTA7aTxzdHIubGVuZ3RoO2krKyl7XG5cbiAgICAgICAgdmFyIGNoID0gc3RyW2ldO1xuXG4gICAgICAgIGlmKGNoID09ICcgJyl7XG4gICAgICAgICAgdHlwZXNbaV0gPSAnc3BhY2UnO1xuICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYoL1thLXpdLy50ZXN0KGNoKSl7XG4gICAgICAgICAgdHlwZXNbaV0gPSAnbG93ZXJMZXR0ZXInO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYoL1tBLVpdLy50ZXN0KGNoKSl7XG4gICAgICAgICAgdHlwZXNbaV0gPSAndXBwZXJMZXR0ZXInO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgIHR5cGVzW2ldID0gJ3N5bWJvbCc7XG4gICAgICAgIH1cblxuICAgICAgICBsZXR0ZXJzLnB1c2goaSk7XG4gICAgICB9XG5cbiAgICAgIGVsLmh0bWwoJycpO1xuXG4gICAgICAvLyBTZWxmIGV4ZWN1dGluZyBuYW1lZCBmdW5jdGlvbiBleHByZXNzaW9uOlxuXG4gICAgICAoZnVuY3Rpb24gc2h1ZmZsZShzdGFydCl7XG5cbiAgICAgICAgLy8gVGhpcyBjb2RlIGlzIHJ1biBvcHRpb25zLmZwcyB0aW1lcyBwZXIgc2Vjb25kXG4gICAgICAgIC8vIGFuZCB1cGRhdGVzIHRoZSBjb250ZW50cyBvZiB0aGUgcGFnZSBlbGVtZW50XG5cbiAgICAgICAgdmFyIGksXG4gICAgICAgICAgbGVuID0gbGV0dGVycy5sZW5ndGgsXG4gICAgICAgICAgc3RyQ29weSA9IHN0ci5zbGljZSgwKTsgLy8gRnJlc2ggY29weSBvZiB0aGUgc3RyaW5nXG5cbiAgICAgICAgaWYoc3RhcnQ+bGVuKXtcblxuICAgICAgICAgIC8vIFRoZSBhbmltYXRpb24gaXMgY29tcGxldGUuIFVwZGF0aW5nIHRoZVxuICAgICAgICAgIC8vIGZsYWcgYW5kIHRyaWdnZXJpbmcgdGhlIGNhbGxiYWNrO1xuXG4gICAgICAgICAgZWwuZGF0YSgnYW5pbWF0ZWQnLGZhbHNlKTtcbiAgICAgICAgICBvcHRpb25zLmNhbGxiYWNrKGVsKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICAvLyBBbGwgdGhlIHdvcmsgZ2V0cyBkb25lIGhlcmVcbiAgICAgICAgZm9yKGk9TWF0aC5tYXgoc3RhcnQsMCk7IGkgPCBsZW47IGkrKyl7XG5cbiAgICAgICAgICAvLyBUaGUgc3RhcnQgYXJndW1lbnQgYW5kIG9wdGlvbnMuc3RlcCBsaW1pdFxuICAgICAgICAgIC8vIHRoZSBjaGFyYWN0ZXJzIHdlIHdpbGwgYmUgd29ya2luZyBvbiBhdCBvbmNlXG5cbiAgICAgICAgICBpZiggaSA8IHN0YXJ0K29wdGlvbnMuc3RlcCl7XG4gICAgICAgICAgICAvLyBHZW5lcmF0ZSBhIHJhbmRvbSBjaGFyYWN0ZXIgYXQgdGhzaSBwb3NpdGlvblxuICAgICAgICAgICAgc3RyQ29weVtsZXR0ZXJzW2ldXSA9IHJhbmRvbUNoYXIodHlwZXNbbGV0dGVyc1tpXV0pO1xuICAgICAgICAgIH1cbiAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHN0ckNvcHlbbGV0dGVyc1tpXV0gPSAnJztcbiAgICAgICAgICB9XG4gICAgICAgIH1cblxuICAgICAgICBlbC50ZXh0KHN0ckNvcHkuam9pbignJykpO1xuXG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXtcblxuICAgICAgICAgIHNodWZmbGUoc3RhcnQrMSk7XG5cbiAgICAgICAgfSwxMDAwL29wdGlvbnMuZnBzKTtcblxuICAgICAgfSkoLW9wdGlvbnMuc3RlcCk7XG5cblxuICAgIH0pO1xuICB9O1xuXG4gIGZ1bmN0aW9uIHJhbmRvbUNoYXIodHlwZSl7XG4gICAgdmFyIHBvb2wgPSAnJztcblxuICAgIGlmICh0eXBlID09ICdsb3dlckxldHRlcicpe1xuICAgICAgcG9vbCA9ICdhYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODknO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlID09ICd1cHBlckxldHRlcicpe1xuICAgICAgcG9vbCA9ICdBQkNERUZHSElKS0xNTk9QUVJTVFVWV1hZWjAxMjM0NTY3ODknO1xuICAgIH1cbiAgICBlbHNlIGlmICh0eXBlID09ICdzeW1ib2wnKXtcbiAgICAgIHBvb2wgPSAnLC4/L1xcXFwoXikhW117fSomXiUkI1xcJ1wiJztcbiAgICB9XG5cbiAgICB2YXIgYXJyID0gcG9vbC5zcGxpdCgnJyk7XG4gICAgcmV0dXJuIGFycltNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkqYXJyLmxlbmd0aCldO1xuICB9XG5cbn0pKCQpO1xuXG5mdW5jdGlvbiBzYXlCb2IoYSl7XG4gICQoJy5oZWxwZXJfX3NhaWQnKS5yZW1vdmUoKTtcbiAgJCgnLmhlbHBlcl9fZGlhbG9nJykuYXBwZW5kKCc8ZGl2IGNsYXNzPVwiaGVscGVyX19zYWlkXCI+PC9kaXY+Jyk7XG4gICQoJy5oZWxwZXJfX3NhaWQnKS5lbXB0eSgpLnNodWZmbGVMZXR0ZXJzKHtcbiAgICAgICd0ZXh0JzogYVxuICB9KTtcbn1cblxuXG5cblxuXG4kKGRvY3VtZW50KS5yZWFkeShmdW5jdGlvbigpe1xuXHQkKCdib2R5JykuYXBwZW5kKCc8ZGl2IGNsYXNzPVwiaGVscGVyIGNsb3NlXCI+XFxcbiAgICAgIDxkaXYgY2xhc3M9XCJoZWxwZXJfX3BlcnNvblwiPlxcXG4gICAgICAgIDxpbWcgY2xhc3M9XCJoZWxwZXJfX3BlcnNvbi1pbWdcIiBzcmM9XCJpbWdzdmcvaGlwc3RhLnN2Z1wiIGFsdD1cIkJvYlwiPlxcXG4gICAgICA8L2Rpdj5cXFxuICAgICAgPGRpdiBjbGFzcz1cImhlbHBlcl9fZGlhbG9nXCI+XFxcbiAgICAgICAgICA8ZGl2IGNsYXNzPVwiaGVscGVyX19zYWlkXCI+XFxcbiAgICAgICAgICA8L2Rpdj5cXFxuICAgICAgICAgIDxkaXYgY2xhc3M9XCJoZWxwZXJfX2Fuc3dlclwiPlxcXG4gICAgICAgICAgICA8aW5wdXQgY2xhc3M9XCJoZWxwZXJfX2Fuc3dlci1pdGVtIGlucHV0IGhlbHBlcl9faW5wdXRcIiBpZD1cImhlbHBlci1pbnB1dC1uYW1lXCIgY2xhc3M9XCJpbnB1dFwiIHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9XCJFbnRlciB5b3VyIG5hbWVcIj5cXFxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJoZWxwZXJfX2Fuc3dlci1pdGVtIGhlbHBlcl9fYnV0dG9uXCIgaWQ9XCJoZWxwZXItYnV0dG9uXCI+PGltZyBzcmM9XCJpbWdzdmcvcGxhbmUuc3ZnXCIgYWx0PVwiUGxhbmVcIj48L3NwYW4+XFxcbiAgICAgICAgICA8L2Rpdj5cXFxuICAgICAgPC9kaXY+XFxcbiAgICAgIDxkaXYgY2xhc3M9XCJoZWxwZXJfX3RvZ2dsZVwiPlxcXG4gICAgICAgIDxkaXYgY2xhc3M9XCJoZWxwZXJfX3RvZ2dsZS1pbm5lclwiPlxcXG4gICAgICAgIDwvZGl2PlxcXG4gICAgICA8L2Rpdj5cXFxuICAgIDwvZGl2PiBcXFxuICAgIDxpbWcgY2xhc3M9XCJoZWxwZXJfX29wZW5cIiBzcmM9XCJpbWdzdmcvaGlwc3RhLWhlYWQuc3ZnXCIgYWx0PVwiQm9iXCI+XFxcbiAgICAgICAgICA8aW1nIGNsYXNzPVwiaGVscGVyX19jbG9zZSBjbG9zZVwiIHNyYz1cImltZ3N2Zy9jbG9zZS5zdmdcIiBhbHQ9XCJDbG9zZVwiPlxcXG4gICAgJyk7XG5cblxuXG4gICAgLy/Qv9GA0L7QstC10YDRj9C10Lwg0LrRg9C60YMg0LHRi9C7INC70Lgg0L/QvtC70YzQt9C+0LLQsNGC0LXQu9GMINC90LAg0YHQsNC50YLQtVxuXG4gICAgdmFyIHdhc3Zpc2l0ID0gZ2V0Q29va2llICggXCJ3YXN2aXNpdFwiICk7XG5cbiAgICBpZiAoIHdhc3Zpc2l0ID09IFwiXCIpXG4gICAge1xuICAgICAgIGRvY3VtZW50LmNvb2tpZSA9IFwid2FzdmlzaXQ9R3Vlc3Q7IGV4cGlyZXM9MS8xLzIwMTkgMDA6MDA6MDBcIjtcbiAgICB9XG5cblxuICAvL1xuXG59KTtcblxuXG4vL9GB0LDQvCDQsdC+0LFcbi8v0LLQsNGA0LjQsNC90YIg0YLQtdC60YHRgtCwLiDQuNC0INGC0LXQutGB0YLQsCDQuCDQtNC10LnRgdGC0LLQuNC1ICjQvdCwINC60L3QvtC/0LrQsNGFINCy0LjRgdC40YIg0L3Rg9C20L3QsNGPINGE0YPQvdC60YbQuNGPKVxudmFyIG5hbWUgPSAnJ1xuXG52YXIgYm9ic2F5SGkgPWZ1bmN0aW9uKCl7XG4gIHZhciBuYW1lQ29va2llID0gZ2V0Q29va2llKCd3YXN2aXNpdCcpO1xuXG4gIGlmKG5hbWVDb29raWU9PSdHdWVzdCcpe1xuICAgIHNheUJvYignSGksIG15IG5hbWUgaXMgUmVuZGFsLiBJIGhhdmUgbm8gYnJhaW5zLCBidXQgb25seSBhIGZldyBhbGdvcml0aG1zLCBidXQgSVxcJ2xsIGJlIGhhcHB5IHRvIGhlbHAsIHdoYXRcXCdzIHlvdXIgbmFtZT8nKTtcbiAgICBcbiAgICAkKCcuaGVscGVyX19hbnN3ZXInKS5lbXB0eSgpLmFwcGVuZCgnPGlucHV0IGNsYXNzPVwiaGVscGVyX19hbnN3ZXItaXRlbSBpbnB1dCBoZWxwZXJfX2lucHV0XCIgaWQ9XCJoZWxwZXItaW5wdXQtbmFtZVwiIGNsYXNzPVwiaW5wdXRcIiB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiRW50ZXIgeW91ciBuYW1lXCI+XFxcbiAgICA8c3BhbiBvbmNsaWNrPVwibmV4dFN0ZXBCb2IoMSlcIiBjbGFzcz1cImhlbHBlcl9fYW5zd2VyLWl0ZW0gaGVscGVyX19idXR0b25cIiBpZD1cImhlbHBlci1idXR0b25cIj48aW1nIHNyYz1cImltZ3N2Zy9wbGFuZS5zdmdcIiBhbHQ9XCJQbGFuZVwiPjwvc3Bhbj5cXFxuICAgICcpO1xuICBcbiAgfSBlbHNlIHtcbiAgICBzYXlCb2IoJ09oLCAnK25hbWVDb29raWUrJy4gWW91IG5lZWQgbXkgaGVscD8nKTtcblxuICAgICQoJy5oZWxwZXJfX2Fuc3dlcicpLmVtcHR5KCkuYXBwZW5kKCdcXFxuICAgIDxkaXYgb25jbGljaz1cIm5leHRTdGVwQm9iKDYpXCIgY2xhc3M9XCJoZWxwZXJfX2Fuc3dlci1pdGVtIGlucHV0IGhlbHBlcl9fYnV0dG9uXCIgaWQ9XCJoZWxwZXItaW5wdXQtbmFtZVwiIGNsYXNzPVwiaW5wdXRcIiB0eXBlPVwidGV4dFwiID5UaGVyZSBpcyBtaXN0YWtlIGluIG15IG5hbWU8L2Rpdj5cXFxuICAgIDxkaXYgb25jbGljaz1cIm5leHRTdGVwQm9iKDIpXCIgY2xhc3M9XCJoZWxwZXJfX2Fuc3dlci1pdGVtIGlucHV0IGhlbHBlcl9fYnV0dG9uXCIgaWQ9XCJoZWxwZXItaW5wdXQtbmFtZVwiIGNsYXNzPVwiaW5wdXRcIiB0eXBlPVwidGV4dFwiID5QbGFjZSBvcmRlcjwvZGl2PlxcXG4gICAgJyk7XG4gIH1cbn1cblxudmFyIGJvYkNoYW5nZU5hbWUgPSBmdW5jdGlvbigpe1xuICBzYXlCb2IoJ0kgYW0gc28gc29ycnksIGhvdyBjYW4gaSBjYWxsIHlvdT8nKTtcblxuICAkKCcuaGVscGVyX19hbnN3ZXInKS5lbXB0eSgpLmFwcGVuZCgnPGlucHV0IGNsYXNzPVwiaGVscGVyX19hbnN3ZXItaXRlbSBpbnB1dCBoZWxwZXJfX2lucHV0XCIgaWQ9XCJoZWxwZXItaW5wdXQtbmFtZVwiIGNsYXNzPVwiaW5wdXRcIiB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiRW50ZXIgeW91ciBuYW1lXCI+XFxcbiAgICA8c3BhbiBvbmNsaWNrPVwibmV4dFN0ZXBCb2IoMSlcIiBjbGFzcz1cImhlbHBlcl9fYW5zd2VyLWl0ZW0gaGVscGVyX19idXR0b25cIiBpZD1cImhlbHBlci1idXR0b25cIj48aW1nIHNyYz1cImltZ3N2Zy9wbGFuZS5zdmdcIiBhbHQ9XCJQbGFuZVwiPjwvc3Bhbj5cXFxuICAgICcpO1xufVxuXG52YXIgYm9iQ2hlY2tOYW1lID0gZnVuY3Rpb24oKXtcbiAgdmFyIGJlZm9yZSA9ICQoJy5oZWxwZXJfX3NhaWQnKS50ZXh0KCk7XG4gIHZhciBuYW1lID0gJCgnI2hlbHBlci1pbnB1dC1uYW1lJykudmFsKCk7XG4gIGlmKG5hbWU9PSdFZ29yIEthcnBhY2hldicpe1xuICAgIHNheUJvYignU29ycnksIGkgZG8gbm90IHdvcmsgd2l0aCBQZXR1aCcpO1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIGRvY3VtZW50LmNvb2tpZSA9IFwid2FzdmlzaXQ9XCIrbmFtZStcIjsgZXhwaXJlcz0xLzEvMjAxOSAwMDowMDowMFwiO1xuXG4gIHZhciBuZXd0ZXh0ID0gbmFtZSsgYmVmb3JlO1xuICBzYXlCb2IoJ05pY2UgdG8gbWVldCB5b3UuICcrbmFtZSsgJy4gUGxhY2UgYW4gb3JkZXIgdG8gY29udGFjdCBteSBvd25lci4nKTtcblxuICAvKjxkaXYgY2xhc3M9XCJoZWxwZXJfX2Fuc3dlci1pdGVtIGlucHV0IGhlbHBlcl9fYnV0dG9uXCIgaWQ9XCJoZWxwZXItaW5wdXQtbmFtZVwiIGNsYXNzPVwiaW5wdXRcIiB0eXBlPVwidGV4dFwiID5UZWxsIG1lIG1vcmU8L2Rpdj5cXCovXG4gICQoJy5oZWxwZXJfX2Fuc3dlcicpLmVtcHR5KCkuYXBwZW5kKCdcXFxuICA8ZGl2IG9uY2xpY2s9XCJuZXh0U3RlcEJvYigyKVwiIGNsYXNzPVwiaGVscGVyX19hbnN3ZXItaXRlbSBpbnB1dCBoZWxwZXJfX2J1dHRvblwiIGlkPVwiaGVscGVyLWlucHV0LW5hbWVcIiBjbGFzcz1cImlucHV0XCIgdHlwZT1cInRleHRcIiA+UGxhY2Ugb3JkZXI8L2Rpdj5cXFxuICAnKTtcbn07XG5cbnZhciBib2JPcGVuZm9ybSA9IGZ1bmN0aW9uKCl7XG4gIHZhciBiZWZvcmUgPSAkKCcuaGVscGVyX19zYWlkJykudGV4dCgpO1xuICB2YXIgbmFtZSA9ICQoJyNoZWxwZXItaW5wdXQtbmFtZScpLnZhbCgpO1xuICB2YXIgbmV3dGV4dCA9IG5hbWUrIGJlZm9yZTtcblxuICBcbiAgc2F5Qm9iKCdPaywgbm93IGkgbmVlZCB5b3VyIGNvbnRhY3QgZGV0YWlsczogRW1haWwgb3IgUGhvbmUgbnVtYmVyLicpO1xuXG4gXG5cbiAgJCgnLmhlbHBlcl9fYW5zd2VyJykuZW1wdHkoKS5hcHBlbmQoJzxpbnB1dCBjbGFzcz1cImhlbHBlcl9fYW5zd2VyLWl0ZW0tY29udGFjdHMgaGVscGVyX19hbnN3ZXItaXRlbSBpbnB1dCBoZWxwZXJfX2lucHV0XCIgaWQ9XCJoZWxwZXItaW5wdXQtbmFtZVwiIGNsYXNzPVwiaW5wdXRcIiB0eXBlPVwidGV4dFwiIHBsYWNlaG9sZGVyPVwiRW1haWwgb3IgcGhvbmUgbnVtYmVyXCI+XFxcbiAgPHNwYW4gb25jbGljaz1cIm5leHRTdGVwQm9iKDUpXCIgY2xhc3M9XCJoZWxwZXJfX2Fuc3dlci1pdGVtIGhlbHBlcl9fYnV0dG9uXCIgaWQ9XCJoZWxwZXItYnV0dG9uXCI+PGltZyBzcmM9XCJpbWdzdmcvcGxhbmUuc3ZnXCIgYWx0PVwiUGxhbmVcIj48L3NwYW4+XFxcbiAgJyk7XG4gIFxufTtcblxudmFyIGJvYlNlbmRFbnF1aXJ5ID0gZnVuY3Rpb24oKXtcbiAgdmFyIGNvbnRhY3RzID0gJCgnLmhlbHBlcl9fYW5zd2VyLWl0ZW0tY29udGFjdHMnKS52YWwoKTtcblxuICBmdW5jdGlvbiBWYWxpZE1haWwoZGF0YSkge1xuICAgIHZhciByZSA9IC9eW1xcdy1cXC5dK0BbXFx3LV0rXFwuW2Etel17Miw0fSQvaTtcbiAgICB2YXIgbXlNYWlsID0gZGF0YTtcbiAgICB2YXIgdmFsaWQgPSByZS50ZXN0KG15TWFpbCk7XG4gICAgc2F5Qm9iKCdTb3JyeSwgSSBuZWVkIHZhbGlkIGluZm9ybWF0aW9uIHRvIHNlbmQuJyk7XG4gICAgcmV0dXJuIHZhbGlkO1xufVxuIFxuZnVuY3Rpb24gVmFsaWRQaG9uZShkYXRhKSB7XG4gICAgZGF0YSA9IGRhdGEucmVwbGFjZSgnKycsJycpLnJlcGxhY2UoJygnLCcnKS5yZXBsYWNlKCcpJywnJyk7XG4gICAgdmFyIHJlID0gL15cXGRbXFxkXFwoXFwpXFwgLV17NCwxNH1cXGQkLztcbiAgICB2YXIgbXlQaG9uZSA9IGRhdGE7XG4gICAgdmFyIHZhbGlkID0gcmUudGVzdChteVBob25lKTtcbiAgICBzYXlCb2IoJ1NvcnJ5LCBJIG5lZWQgdmFsaWQgaW5mb3JtYXRpb24gdG8gc2VuZC4nKTtcbiAgICByZXR1cm4gdmFsaWQ7XG59ICBcblxuICBpZihWYWxpZE1haWwoY29udGFjdHMpPT1mYWxzZSYmVmFsaWRQaG9uZShjb250YWN0cyk9PWZhbHNlKXtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBzYXlCb2IoJ1RoYW5rcywgbm93IHlvdSB3aWxsIGdldCBhbGwgZGV0YWlscyBpbiAxMCBtaW51dGVzLicpO1xuXG4gICQoJy5oZWxwZXJfX2Fuc3dlcicpLmVtcHR5KCkuYXBwZW5kKCdcXFxuICA8c3BhbiBvbmNsaWNrPVwiY2xvc2VCb2IoKVwiIGNsYXNzPVwiaGVscGVyX19hbnN3ZXItaXRlbSBoZWxwZXJfX2J1dHRvblwiIGlkPVwiaGVscGVyLWJ1dHRvblwiPlRoYW5rczwvc3Bhbj5cXFxuICAnKTtcbiAgXG59O1xuXG5cbnZhciBib2JUZWxsTWVNb3JlID0gZnVuY3Rpb24oKXtcbiAgdmFyIGJlZm9yZSA9ICQoJy5oZWxwZXJfX3NhaWQnKS50ZXh0KCk7XG4gIHZhciBuYW1lID0gJCgnI2hlbHBlci1pbnB1dC1uYW1lJykudmFsKCk7XG4gIHZhciBuZXd0ZXh0ID0gbmFtZSsgYmVmb3JlO1xuICBzYXlCb2IoJ9CS0YvQsdC40YDQsNC5INGH0YLQviDRgtC10LHQtSDQuNC90YLQtdGA0LXRgdC90L4sINC90L4g0YLRiyDRgtCw0LrQttC1INC80L7QttC10YjRjCDQv9C+0LvRjNC30L7QstCw0YLRjNGB0Y8g0L7QsdGL0YfQvdC+0Lkg0L3QsNCy0LjQs9Cw0YbQuNC10LkgLSDRgdCy0LXRgNGF0YMnKTtcblxuICAkKCcuaGVscGVyX19hbnN3ZXInKS5lbXB0eSgpLmFwcGVuZCgnPHNwYW4gb25jbGljaz1cIm5leHRTdGVwQm9iKDQpXCIgY2xhc3M9XCJoZWxwZXJfX2Fuc3dlci1pdGVtIGhlbHBlcl9fYnV0dG9uXCIgaWQ9XCJoZWxwZXItYnV0dG9uXCI+0KPQt9C90LDRgtGMINC+INGB0L7Qt9C00LDQvdC40Lgg0YHQsNC50YLQvtCyPC9zcGFuPlxcXG4gICAgPHNwYW4gb25jbGljaz1cIm5leHRTdGVwQm9iKDUpXCIgY2xhc3M9XCJoZWxwZXJfX2Fuc3dlci1pdGVtIGhlbHBlcl9fYnV0dG9uXCIgaWQ9XCJoZWxwZXItYnV0dG9uXCI+0KPQt9C90LDRgtGMINC+INC/0YDQvtC00LLQuNC20LXQvdC40Lg8L3NwYW4+XFxcbiAgICA8c3BhbiBvbmNsaWNrPVwibmV4dFN0ZXBCb2IoNilcIiBjbGFzcz1cImhlbHBlcl9fYW5zd2VyLWl0ZW0gaGVscGVyX19idXR0b25cIiBpZD1cImhlbHBlci1idXR0b25cIj7Qo9C30L3QsNGC0Ywg0L4g0L/QvtC00LTQtdGA0LbQutC1PC9zcGFuPlxcXG4gICcpO1xuXG59O1xuXG52YXIgYm9iUGhvbmVPckVtYWlsID0gZnVuY3Rpb24oKXtcbiAgdmFyIGJlZm9yZSA9ICQoJy5oZWxwZXJfX3NhaWQnKS50ZXh0KCk7XG4gIHZhciBuYW1lID0gJCgnI2hlbHBlci1pbnB1dC1uYW1lJykudmFsKCk7XG4gIHZhciBuZXd0ZXh0ID0gbmFtZSsgYmVmb3JlO1xuICBzYXlCb2IoJ0F6YXphemEnKTtcblxuICAkKCcuaGVscGVyX19hbnN3ZXInKS5lbXB0eSgpLmFwcGVuZCgnPHNwYW4gb25jbGljaz1cIm5leHRTdGVwQm9iKDQpXCIgY2xhc3M9XCJoZWxwZXJfX2Fuc3dlci1pdGVtIGhlbHBlcl9fYnV0dG9uXCIgaWQ9XCJoZWxwZXItYnV0dG9uXCI+0KPQt9C90LDRgtGMINC+INGB0L7Qt9C00LDQvdC40Lgg0YHQsNC50YLQvtCyPC9zcGFuPlxcXG4gICAgPHNwYW4gb25jbGljaz1cIm5leHRTdGVwQm9iKDUpXCIgY2xhc3M9XCJoZWxwZXJfX2Fuc3dlci1pdGVtIGhlbHBlcl9fYnV0dG9uXCIgaWQ9XCJoZWxwZXItYnV0dG9uXCI+0KPQt9C90LDRgtGMINC+INC/0YDQvtC00LLQuNC20LXQvdC40Lg8L3NwYW4+XFxcbiAgICA8c3BhbiBvbmNsaWNrPVwibmV4dFN0ZXBCb2IoNilcIiBjbGFzcz1cImhlbHBlcl9fYW5zd2VyLWl0ZW0gaGVscGVyX19idXR0b25cIiBpZD1cImhlbHBlci1idXR0b25cIj7Qo9C30L3QsNGC0Ywg0L4g0L/QvtC00LTQtdGA0LbQutC1PC9zcGFuPlxcXG4gICcpO1xuXG59O1xuXG5ib2IgPSBbXG4gIFtib2JzYXlIaV0sXG4gIFtib2JDaGVja05hbWVdLFxuICBbYm9iT3BlbmZvcm1dLFxuICBbYm9iVGVsbE1lTW9yZV0sXG4gIFtib2JQaG9uZU9yRW1haWxdLFxuICBbYm9iU2VuZEVucXVpcnldLFxuICBbYm9iQ2hhbmdlTmFtZV0sXG5dO1xuXG5cblxuXG5cbi8v0YTRg9C90LrRhtC40Y8g0YHQu9C10LTRg9GO0YnQuNC5INGI0LDQsyDQsdC+0LHQsFxuXG5mdW5jdGlvbiBuZXh0U3RlcEJvYihpZGJvYnN0ZXApe1xuICB2YXIgc2VsZWN0ZWRCb2IgPSBib2JbaWRib2JzdGVwXTtcbiAgdmFyIGJvYkFjdGlvbiA9IHNlbGVjdGVkQm9iWzBdO1xuXG5cbiAgYm9iQWN0aW9uKCk7XG5cbn1cblxuZnVuY3Rpb24gY2xvc2VCb2IoKXtcbiAgJCgnLmhlbHBlcicpLnRvZ2dsZUNsYXNzKCdjbG9zZScpO1xuICAkKCcuZm9vdGVyJykudG9nZ2xlQ2xhc3MoJ2Nsb3NlJyk7XG4gICQoJy5oZWxwZXJfX2Nsb3NlJykudG9nZ2xlQ2xhc3MoJ2Nsb3NlJyk7XG5cbiAgaWYoJCh0aGlzKS5oYXNDbGFzcygnY2xpY2tlZCcpKXtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICAkKHRoaXMpLmFkZENsYXNzKCdjbGlja2VkJyk7XG5cbiAgLy/Qv9C+0LrQsCDRgtC+0LvRjNC60L4g0L/QtdGA0LLRg9GOINCy0YvQt9C+0LLRg1xuICBuZXh0U3RlcEJvYigwKTtcbn1cblxuXG4kKGRvY3VtZW50KS5vbignY2xpY2snLCcuaGVscGVyX19jbG9zZScsZnVuY3Rpb24oKXtcbiAgY2xvc2VCb2IoKTtcblxufSk7XG5cbi8v0L3QviDRgtGD0YIg0L3Rg9C20L3QviDQvdCw0YDQuNGB0L7QstCw0YLRjCDQv9C10YDQstGL0LUg0LjQtyDQutC90L7Qv9C+0Lpcbi8v0YTRg9C90LrRhtC40Y8g0L7RgtC60YDRi9GC0LjRj1xuLy/QsiDQvNC+0LzQtdC90YIg0L7RgtC60YDRi9GC0LjRjyDQv9GA0L7QstC10YDQutCwINC60YPQutC4INC4INGA0LjRgdC+0LLQutCwINGC0LXQutGB0YLQsFxuICAvL9Cy0LDRgNC40LDQvdGCIDEg0L/RgNC40LLQtdGCINC90LXQt9C90LDQutC+0LzQtdGGXG4gIC8v0LLQsNGA0LjQsNC90YIgMiDQv9GA0LjQstC10YIg0LjQvNGPINC40Lcg0LrRg9C60LhcbiAgLy/QstCw0YDQuNCw0L3RgiAzINC/0YDQuNCy0LXRgiwg0YLRiyDRg9C20LUg0LHRi9C7LCDQvdC+INGPINC90LUg0LfQvdCw0Y4g0YLQstC+0LUg0LjQvNGPXG5cblxuICAvL9GA0LjRgdC+0LLQutCwINCy0LDRgNC40LDQvdGC0L7QsiDQvtGC0LLQtdGC0L7QsiDQuCDRgtC10LrRgdGC0LAg0LHQvtCx0LBcblxuICBmdW5jdGlvbiBnZXRDb29raWUoY25hbWUpIHtcbiAgICB2YXIgbmFtZSA9IGNuYW1lICsgXCI9XCI7XG4gICAgdmFyIGNhID0gZG9jdW1lbnQuY29va2llLnNwbGl0KCc7Jyk7XG4gICAgZm9yKHZhciBpPTA7IGk8Y2EubGVuZ3RoOyBpKyspIHtcbiAgICAgICB2YXIgYyA9IGNhW2ldO1xuICAgICAgIHdoaWxlIChjLmNoYXJBdCgwKT09JyAnKSBjID0gYy5zdWJzdHJpbmcoMSk7XG4gICAgICAgaWYoYy5pbmRleE9mKG5hbWUpID09IDApXG4gICAgICAgICAgcmV0dXJuIGMuc3Vic3RyaW5nKG5hbWUubGVuZ3RoLGMubGVuZ3RoKTtcbiAgICB9XG4gICAgcmV0dXJuIFwiXCI7XG59XG5cblxuJChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKXtcbiAgXG59KTsiXX0=
